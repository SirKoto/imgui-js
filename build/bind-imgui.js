
var Module = (() => {
  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;
  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;
  return (
function(Module = {})  {

var Module = typeof Module != "undefined" ? Module : {};

var readyPromiseResolve, readyPromiseReject;

Module["ready"] = new Promise(function(resolve, reject) {
 readyPromiseResolve = resolve;
 readyPromiseReject = reject;
});

var moduleOverrides = Object.assign({}, Module);

var arguments_ = [];

var thisProgram = "./this.program";

var quit_ = (status, toThrow) => {
 throw toThrow;
};

var ENVIRONMENT_IS_WEB = typeof window == "object";

var ENVIRONMENT_IS_WORKER = typeof importScripts == "function";

var ENVIRONMENT_IS_NODE = typeof process == "object" && typeof process.versions == "object" && typeof process.versions.node == "string";

var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

var scriptDirectory = "";

function locateFile(path) {
 if (Module["locateFile"]) {
  return Module["locateFile"](path, scriptDirectory);
 }
 return scriptDirectory + path;
}

var read_, readAsync, readBinary, setWindowTitle;

if (ENVIRONMENT_IS_NODE) {
 var fs = require("fs");
 var nodePath = require("path");
 if (ENVIRONMENT_IS_WORKER) {
  scriptDirectory = nodePath.dirname(scriptDirectory) + "/";
 } else {
  scriptDirectory = __dirname + "/";
 }
 read_ = (filename, binary) => {
  var ret = tryParseAsDataURI(filename);
  if (ret) {
   return binary ? ret : ret.toString();
  }
  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);
  return fs.readFileSync(filename, binary ? undefined : "utf8");
 };
 readBinary = filename => {
  var ret = read_(filename, true);
  if (!ret.buffer) {
   ret = new Uint8Array(ret);
  }
  return ret;
 };
 readAsync = (filename, onload, onerror) => {
  var ret = tryParseAsDataURI(filename);
  if (ret) {
   onload(ret);
  }
  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);
  fs.readFile(filename, function(err, data) {
   if (err) onerror(err); else onload(data.buffer);
  });
 };
 if (process.argv.length > 1) {
  thisProgram = process.argv[1].replace(/\\/g, "/");
 }
 arguments_ = process.argv.slice(2);
 quit_ = (status, toThrow) => {
  process.exitCode = status;
  throw toThrow;
 };
 Module["inspect"] = function() {
  return "[Emscripten Module object]";
 };
} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
 if (ENVIRONMENT_IS_WORKER) {
  scriptDirectory = self.location.href;
 } else if (typeof document != "undefined" && document.currentScript) {
  scriptDirectory = document.currentScript.src;
 }
 if (_scriptDir) {
  scriptDirectory = _scriptDir;
 }
 if (scriptDirectory.indexOf("blob:") !== 0) {
  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, "").lastIndexOf("/") + 1);
 } else {
  scriptDirectory = "";
 }
 {
  read_ = url => {
   try {
    var xhr = new XMLHttpRequest();
    xhr.open("GET", url, false);
    xhr.send(null);
    return xhr.responseText;
   } catch (err) {
    var data = tryParseAsDataURI(url);
    if (data) {
     return intArrayToString(data);
    }
    throw err;
   }
  };
  if (ENVIRONMENT_IS_WORKER) {
   readBinary = url => {
    try {
     var xhr = new XMLHttpRequest();
     xhr.open("GET", url, false);
     xhr.responseType = "arraybuffer";
     xhr.send(null);
     return new Uint8Array(xhr.response);
    } catch (err) {
     var data = tryParseAsDataURI(url);
     if (data) {
      return data;
     }
     throw err;
    }
   };
  }
  readAsync = (url, onload, onerror) => {
   var xhr = new XMLHttpRequest();
   xhr.open("GET", url, true);
   xhr.responseType = "arraybuffer";
   xhr.onload = () => {
    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
     onload(xhr.response);
     return;
    }
    var data = tryParseAsDataURI(url);
    if (data) {
     onload(data.buffer);
     return;
    }
    onerror();
   };
   xhr.onerror = onerror;
   xhr.send(null);
  };
 }
 setWindowTitle = title => document.title = title;
} else {}

var out = Module["print"] || console.log.bind(console);

var err = Module["printErr"] || console.warn.bind(console);

Object.assign(Module, moduleOverrides);

moduleOverrides = null;

if (Module["arguments"]) arguments_ = Module["arguments"];

if (Module["thisProgram"]) thisProgram = Module["thisProgram"];

if (Module["quit"]) quit_ = Module["quit"];

var wasmBinary;

if (Module["wasmBinary"]) wasmBinary = Module["wasmBinary"];

var noExitRuntime = Module["noExitRuntime"] || true;

var WebAssembly = {
 Memory: function(opts) {
  this.buffer = new ArrayBuffer(opts["initial"] * 65536);
 },
 Module: function(binary) {},
 Instance: function(module, info) {
  this.exports = (
function instantiate(info) {
function Table(ret) {
  // grow method not included; table is not growable
  ret.set = function(i, func) {
    this[i] = func;
  };
  ret.get = function(i) {
    return this[i];
  };
  return ret;
}

  var bufferView;
  var base64ReverseLookup = new Uint8Array(123/*'z'+1*/);
  for (var i = 25; i >= 0; --i) {
    base64ReverseLookup[48+i] = 52+i; // '0-9'
    base64ReverseLookup[65+i] = i; // 'A-Z'
    base64ReverseLookup[97+i] = 26+i; // 'a-z'
  }
  base64ReverseLookup[43] = 62; // '+'
  base64ReverseLookup[47] = 63; // '/'
  /** @noinline Inlining this function would mean expanding the base64 string 4x times in the source code, which Closure seems to be happy to do. */
  function base64DecodeToExistingUint8Array(uint8Array, offset, b64) {
    var b1, b2, i = 0, j = offset, bLength = b64.length, end = offset + (bLength*3>>2) - (b64[bLength-2] == '=') - (b64[bLength-1] == '=');
    for (; i < bLength; i += 4) {
      b1 = base64ReverseLookup[b64.charCodeAt(i+1)];
      b2 = base64ReverseLookup[b64.charCodeAt(i+2)];
      uint8Array[j++] = base64ReverseLookup[b64.charCodeAt(i)] << 2 | b1 >> 4;
      if (j < end) uint8Array[j++] = b1 << 4 | b2 >> 2;
      if (j < end) uint8Array[j++] = b2 << 6 | base64ReverseLookup[b64.charCodeAt(i+3)];
    }
  }
function initActiveSegments(imports) {
  base64DecodeToExistingUint8Array(bufferView, 1024, "");
  base64DecodeToExistingUint8Array(bufferView, 73256, "CwAAAAwAAAAFAAAAAAAAAAAAAADIAwAAAAAAAAAAAAAAAAAAAAAAAAAAAADEAwAAyQMAAOh2AQAABAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAA/////woAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwHgEAcH0CAAUAAAAAAAAAAAAAAMYDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMQDAADDAwAAaH0BAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAD//////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgeAQA=");
  base64DecodeToExistingUint8Array(bufferView
}

  var scratchBuffer = new ArrayBuffer(16);
  var i32ScratchView = new Int32Array(scratchBuffer);
  var f32ScratchView = new Float32Array(scratchBuffer);
  var f64ScratchView = new Float64Array(scratchBuffer);
  
  function wasm2js_scratch_load_i32(index) {
    return i32ScratchView[index];
  }
      
  function wasm2js_scratch_store_i32(index, value) {
    i32ScratchView[index] = value;
  }
      
  function wasm2js_scratch_load_f64() {
    return f64ScratchView[0];
  }
      
  function wasm2js_scratch_store_f64(value) {
    f64ScratchView[0] = value;
  }
      function wasm2js_trap() { throw new Error('abort'); }

  function wasm2js_scratch_store_f32(value) {
    f32ScratchView[2] = value;
  }
      
  function wasm2js_scratch_load_f32() {
    return f32ScratchView[2];
  }
      
function asmFunc(imports) {
 var env = imports.env;
 var memory = env.memory;
 var buffer = memory.buffer;
 var HEAP8 = new Int8Array(buffer);
 var HEAP16 = new Int16Array(buffer);
 var HEAP32 = new Int32Array(buffer);
 var HEAPU8 = new Uint8Array(buffer);
 var HEAPU16 = new Uint16Array(buffer);
 var HEAPU32 = new Uint32Array(buffer);
 var HEAPF32 = new Float32Array(buffer);
 var HEAPF64 = new Float64Array(buffer);
 var Math_imul = Math.imul;
 var Math_fround = Math.fround;
 var Math_abs = Math.abs;
 var Math_clz32 = Math.clz32;
 var Math_min = Math.min;
 var Math_max = Math.max;
 var Math_floor = Math.floor;
 var Math_ceil = Math.ceil;
 var Math_trunc = Math.trunc;
 var Math_sqrt = Math.sqrt;
 var fimport$0 = env._emval_new_object;
 var fimport$1 = env._emval_take_value;
 var fimport$2 = env._emval_new_cstring;
 var fimport$3 = env._emval_set_property;
 var fimport$4 = env._emval_decref;
 var fimport$5 = env._emval_as;
 var fimport$6 = env._emval_run_destructors;
 var fimport$7 = env._emval_get_property;
 var fimport$8 = env._emval_strictly_equals;
 var fimport$9 = env._embind_register_function;
 var fimport$10 = env._emval_incref;
 var fimport$11 = env._embind_register_class;
 var fimport$12 = env._embind_register_class_property;
 var fimport$13 = env._embind_register_class_function;
 var fimport$14 = env.__cxa_throw;
 var fimport$15 = env._embind_register_class_constructor;
 var fimport$16 = env._emval_call;
 var fimport$17 = env._emval_get_method_caller;
 var fimport$18 = env._emval_call_void_method;
 var fimport$19 = env._embind_register_constant;
 var fimport$20 = env._emval_typeof;
 var fimport$21 = env._emval_new_array;
 var fimport$22 = env._embind_register_void;
 var fimport$23 = env._embind_register_bool;
 var fimport$24 = env._embind_register_integer;
 var fimport$25 = env._embind_register_float;
 var fimport$26 = env._embind_register_std_string;
 var fimport$27 = env._embind_register_std_wstring;
 var fimport$28 = env._embind_register_emval;
 var fimport$29 = env._embind_register_memory_view;
 var fimport$30 = env.emscripten_memcpy_big;
 var fimport$31 = env.__syscall_openat;
 var fimport$32 = env.__syscall_fcntl64;
 var fimport$33 = env.__syscall_ioctl;
 var wasi_snapshot_preview1 = imports.wasi_snapshot_preview1;
 var fimport$34 = wasi_snapshot_preview1.fd_write;
 var fimport$35 = wasi_snapshot_preview1.fd_read;
 var fimport$36 = wasi_snapshot_preview1.fd_close;
 var fimport$37 = env.emscripten_resize_heap;
 var fimport$38 = env.abort;
 var fimport$39 = env._embind_register_bigint;
 var fimport$40 = wasi_snapshot_preview1.fd_seek;
 var fimport$41 = env.segfault;
 var fimport$42 = env.alignfault;
 var global$0 = 163184;
 var global$2 = 0;
 var global$3 = 0;
 var i64toi32_i32$HIGH_BITS = 0;
 // EMSCRIPTEN_START_FUNCS
;
 function $0() {
  global$2 = 163184;
  $1973(0, 95652, 879);
  $1973(0, 95656, 0);
  fimport$9(7023, 1, 48472, 48504, 24, 25, 0);
  $1587(95652);
  $1973(0, 95664, 880);
  $1973(0, 95668, 0);
  fimport$11(48528, 48556, 48596, 0, 48504, 26, 48612, 0, 48612, 0, 2017, 48614, 27);
  $1587(95664);
  $1973(0, 95672, 881);
  $1973(0, 95676, 0);
  $781();
  $1587(95672);
  $1973(0, 95680, 882);
  $1973(0, 95684, 0);
  $789();
  $1587(95680);
  $1973(0, 95688, 883);
  $1973(0, 95692, 0);
  $795();
  $1587(95688);
  $1973(0, 95696, 884);
  $1973(0, 95700, 0);
  $816();
  $1587(95696);
  $1973(0, 95704, 885);
  $1973(0, 95708, 0);
  $823();
  $1587(95704);
  $1973(0, 95712, 886);
  $1973(0, 95716, 0);
  $835();
  $1587(95712);
  $1973(0, 95720, 887);
  $1973(0, 95724, 0);
  $844();
  $1587(95720);
  $1973(0, 95728, 888);
  $1973(0, 95732, 0);
  $853();
  $1587(95728);
  $1973(0, 95736, 889);
  $1973(0, 95740, 0);
  $861();
  $1587(95736);
  $1973(0, 95744, 890);
  $1973(0, 95748, 0);
  $956();
  $1587(95744);
  $1973(0, 95752, 891);
  $1973(0, 95756, 0);
  $972();
  $1587(95752);
  $1973(0, 95760, 892);
  $1973(0, 95764, 0);
  $981();
  $1587(95760);
  $1973(0, 95768, 893);
  $1973(0, 95772, 0);
  $1002();
  $1587(95768);
  $1973(0, 95776, 894);
  $1973(0, 95780, 0);
  $1036();
  $1587(95776);
  $1973(0, 95784, 895);
  $1973(0, 95788, 0);
  $1072();
  $1587(95784);
  $1973(0, 95792, 896);
  $1973(0, 95796, 0);
  $1082();
  $1587(95792);
  $1973(0, 95800, 897);
  $1973(0, 95804, 0);
  $1147();
  $1587(95800);
  $1973(0, 95808, 898);
  $1973(0, 95812, 0);
  $1176();
  $1587(95808);
  $1973(0, 95892, 962);
  $1973(0, 95896, 0);
  $1588();
  $1973(0, 95896, $1944(0, 95888));
  $1973(0, 95888, 95892);
  $1973(0, 97096, 95936);
  $1973(0, 97024, 42);
 }
 
 function $1($0_1) {
  $1982($0_1, 8, 0, 0);
  $1982($0_1, 60, 0, 0);
  $1604($0_1 + 200 | 0, 0, 848);
  $1982($0_1, 76, 1090519040, 1082130432);
  $1982($0_1, 84, 1082130432, 1082130432);
  $1982($0_1, 92, 1082130432, 1073741824);
  $1982($0_1, 100, 0, 0);
  $1982($0_1, 152, 1056964608, 1056964608);
  $1982($0_1, 160, 0, 0);
  $1982($0_1, 168, 1100480512, 1100480512);
  $1982($0_1, 176, 1077936128, 1077936128);
  $1982($0_1, 192, 1067450368, 1050253722);
  $1968($0_1, 190, 1);
  $1970($0_1, 188, 257);
  $1973($0_1, 184, 1065353216);
  $1973($0_1, 148, 1);
  $1982($0_1, 140, 0, 0);
  $1982($0_1, 132, 1082130432, 1082130432);
  $1982($0_1, 124, 1092616192, 0);
  $1982($0_1, 116, 1096810496, 1091567616);
  $1982($0_1, 108, 1101529088, 1086324736);
  $1982($0_1, 68, 0, 0);
  $1982($0_1, 60, 1082130432, 1077936128);
  $1982($0_1, 52, 0, 1065353216);
  $1982($0_1, 44, 0, 1065353216);
  $1973($0_1, 40, 0);
  $1982($0_1, 32, 0, 1056964608);
  $1982($0_1, 24, 1107296256, 1107296256);
  $1982($0_1, 16, 0, 1065353216);
  $1982($0_1, 8, 1090519040, 1090519040);
  $1982($0_1, 0, 1065353216, 1058642330);
  $367($0_1);
  return $0_1;
 }
 
 function $2($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = Math_fround($1_1);
  var $2_1 = Math_fround(0), $3 = 0, $4_1 = 0;
  $2_1 = Math_fround($1963($0_1, 8) * $1_1);
  label$1 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$1;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 8, Math_fround($3 | 0));
  $2_1 = Math_fround($1963($0_1, 16) * $1_1);
  label$3 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$3;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 16, Math_fround($3 | 0));
  $2_1 = Math_fround($1963($0_1, 24) * $1_1);
  label$5 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$5;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 24, Math_fround($3 | 0));
  $2_1 = Math_fround($1963($0_1, 44) * $1_1);
  label$7 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$7;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 44, Math_fround($3 | 0));
  $2_1 = Math_fround($1963($0_1, 52) * $1_1);
  label$9 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$9;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 52, Math_fround($3 | 0));
  $2_1 = Math_fround($1963($0_1, 60) * $1_1);
  label$11 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$11;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 60, Math_fround($3 | 0));
  $4_1 = $0_1 + 12 | 0;
  $2_1 = Math_fround($1963($4_1, 0) * $1_1);
  label$13 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$13;
   }
   $3 = -2147483648;
  }
  $1986($4_1, 0, Math_fround($3 | 0));
  $4_1 = $0_1 + 28 | 0;
  $2_1 = Math_fround($1963($4_1, 0) * $1_1);
  label$15 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$15;
   }
   $3 = -2147483648;
  }
  $1986($4_1, 0, Math_fround($3 | 0));
  $4_1 = $0_1 - -64 | 0;
  $2_1 = Math_fround($1963($4_1, 0) * $1_1);
  label$17 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$17;
   }
   $3 = -2147483648;
  }
  $1986($4_1, 0, Math_fround($3 | 0));
  $2_1 = Math_fround($1963($0_1, 68) * $1_1);
  label$19 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$19;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 68, Math_fround($3 | 0));
  $4_1 = $0_1 + 80 | 0;
  $2_1 = Math_fround($1963($4_1, 0) * $1_1);
  label$21 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$21;
   }
   $3 = -2147483648;
  }
  $2_1 = $1963($0_1, 76);
  $1986($4_1, 0, Math_fround($3 | 0));
  $2_1 = Math_fround($2_1 * $1_1);
  label$23 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$23;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 76, Math_fround($3 | 0));
  $4_1 = $0_1 + 88 | 0;
  $2_1 = Math_fround($1963($4_1, 0) * $1_1);
  label$25 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$25;
   }
   $3 = -2147483648;
  }
  $2_1 = $1963($0_1, 84);
  $1986($4_1, 0, Math_fround($3 | 0));
  $2_1 = Math_fround($2_1 * $1_1);
  label$27 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$27;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 84, Math_fround($3 | 0));
  $4_1 = $0_1 + 96 | 0;
  $2_1 = Math_fround($1963($4_1, 0) * $1_1);
  label$29 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$29;
   }
   $3 = -2147483648;
  }
  $2_1 = $1963($0_1, 92);
  $1986($4_1, 0, Math_fround($3 | 0));
  $2_1 = Math_fround($2_1 * $1_1);
  label$31 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$31;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 92, Math_fround($3 | 0));
  $4_1 = $0_1 + 104 | 0;
  $2_1 = Math_fround($1963($4_1, 0) * $1_1);
  label$33 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$33;
   }
   $3 = -2147483648;
  }
  $2_1 = $1963($0_1, 100);
  $1986($4_1, 0, Math_fround($3 | 0));
  $2_1 = Math_fround($2_1 * $1_1);
  label$35 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$35;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 100, Math_fround($3 | 0));
  $2_1 = Math_fround($1963($0_1, 108) * $1_1);
  label$37 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$37;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 108, Math_fround($3 | 0));
  $2_1 = Math_fround($1963($0_1, 112) * $1_1);
  label$39 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$39;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 112, Math_fround($3 | 0));
  $2_1 = Math_fround($1963($0_1, 116) * $1_1);
  label$41 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$41;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 116, Math_fround($3 | 0));
  $2_1 = Math_fround($1963($0_1, 120) * $1_1);
  label$43 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$43;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 120, Math_fround($3 | 0));
  $2_1 = Math_fround($1963($0_1, 124) * $1_1);
  label$45 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$45;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 124, Math_fround($3 | 0));
  $2_1 = Math_fround($1963($0_1, 128) * $1_1);
  label$47 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$47;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 128, Math_fround($3 | 0));
  $2_1 = Math_fround($1963($0_1, 132) * $1_1);
  label$49 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$49;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 132, Math_fround($3 | 0));
  $2_1 = Math_fround($1963($0_1, 136) * $1_1);
  label$51 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$51;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 136, Math_fround($3 | 0));
  $2_1 = $1963($0_1, 144);
  $4_1 = $2_1 != Math_fround(3402823466385288598117041.0e14);
  $2_1 = Math_fround($2_1 * $1_1);
  label$53 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$53;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 144, $4_1 ? Math_fround($3 | 0) : Math_fround(3402823466385288598117041.0e14));
  $4_1 = $0_1 + 172 | 0;
  $2_1 = Math_fround($1963($4_1, 0) * $1_1);
  label$55 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$55;
   }
   $3 = -2147483648;
  }
  $2_1 = $1963($0_1, 168);
  $1986($4_1, 0, Math_fround($3 | 0));
  $2_1 = Math_fround($2_1 * $1_1);
  label$57 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$57;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 168, Math_fround($3 | 0));
  $4_1 = $0_1 + 180 | 0;
  $2_1 = Math_fround($1963($4_1, 0) * $1_1);
  label$59 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$59;
   }
   $3 = -2147483648;
  }
  $2_1 = $1963($0_1, 176);
  $1986($4_1, 0, Math_fround($3 | 0));
  $2_1 = Math_fround($2_1 * $1_1);
  label$61 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$61;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 176, Math_fround($3 | 0));
  $1_1 = Math_fround($1963($0_1, 184) * $1_1);
  label$63 : {
   if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$1_1;
    break label$63;
   }
   $3 = -2147483648;
  }
  $1986($0_1, 184, Math_fround($3 | 0));
 }
 
 function $4($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
 }
 
 function $5($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $0_1 = $1944(0, 73568);
  $2_1 = $1944($0_1 + 12092 | 0, 0);
  if ($2_1) {
   $1982($0_1, 12084, 0, 0);
   if ($0_1) {
    $4_1 = $0_1 + 876 | 0;
    $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
   }
   ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
   $1973($0_1, 12092, 0);
  }
  $4_1 = $1697($1_1);
  $7_1 = $4_1 + 1 | 0;
  $2_1 = $1944($0_1 + 12088 | 0, 0);
  label$3 : {
   if (($2_1 | 0) > ($4_1 | 0)) {
    break label$3
   }
   $5_1 = $2_1;
   if ($2_1) {
    $3 = $2_1 + (($2_1 | 0) / 2 | 0) | 0
   } else {
    $3 = 8
   }
   $2_1 = ($3 | 0) > ($7_1 | 0) ? $3 : $7_1;
   if (($5_1 | 0) >= ($2_1 | 0)) {
    break label$3
   }
   $3 = $1944(0, 73568);
   if ($3) {
    $3 = $3 + 876 | 0;
    $1973($3, 0, $1944($3, 0) + 1 | 0);
   }
   $3 = (((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0) | 0);
   $6_1 = $1944($0_1, 12092);
   if ($6_1) {
    $1602($3, $6_1, $1944($0_1, 12084));
    $6_1 = $1944($0_1, 12092);
    label$8 : {
     if (!$6_1) {
      break label$8
     }
     $5_1 = $1944(0, 73568);
     if (!$5_1) {
      break label$8
     }
     $5_1 = $5_1 + 876 | 0;
     $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$1 = $6_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
   }
   $1973($0_1, 12088, $2_1);
   $1973($0_1, 12092, $3);
  }
  $1973($0_1, 12084, $7_1);
  $1602($1944($0_1, 12092), $1_1, $4_1);
  $1968($1944($0_1, 12092) + $4_1 | 0, 0, 0);
 }
 
 function $6($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $0_1 = 0;
  $1_1 = $1944(0, 73568);
  if ($1944($1_1, 12084)) {
   $0_1 = $1944($1_1 + 12092 | 0, 0)
  }
  return $0_1 | 0;
 }
 
 function $7($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  if ($1_1) {
   $5_1 = $1_1 >>> 0 >= 65536 ? -3 : $1_1;
   $3 = $1944($0_1, 5396);
   $1_1 = $1944($0_1 + 5400 | 0, 0);
   label$2 : {
    if (($3 | 0) != ($1_1 | 0)) {
     break label$2
    }
    $2_1 = $3 + 1 | 0;
    $4_1 = $1_1;
    if ($1_1) {
     $3 = $1_1 + (($1_1 | 0) / 2 | 0) | 0
    } else {
     $3 = 8
    }
    $1_1 = ($2_1 | 0) < ($3 | 0) ? $3 : $2_1;
    if (($4_1 | 0) >= ($1_1 | 0)) {
     break label$2
    }
    $3 = $1_1 << 1;
    $2_1 = $1944(0, 73568);
    if ($2_1) {
     $2_1 = $2_1 + 876 | 0;
     $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
    }
    $3 = (((wasm2js_i32$1 = $3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $2_1 = $1944($0_1 + 5404 | 0, 0);
    if ($2_1) {
     $1602($3, $2_1, $1944($0_1, 5396) << 1);
     $2_1 = $1944($0_1, 5404);
     label$7 : {
      if (!$2_1) {
       break label$7
      }
      $4_1 = $1944(0, 73568);
      if (!$4_1) {
       break label$7
      }
      $4_1 = $4_1 + 876 | 0;
      $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($0_1, 5400, $1_1);
    $1973($0_1, 5404, $3);
   }
   $1970($1944($0_1 + 5404 | 0, 0) + ($1944($0_1, 5396) << 1) | 0, 0, $5_1);
   $1973($0_1, 5396, $1944($0_1, 5396) + 1 | 0);
  }
 }
 
 function $10($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  $3 = $1_1 + 1 | 0;
  $6_1 = $1937($1_1, 0);
  $5_1 = $6_1 >>> 3 | 0;
  $8 = $1936($5_1 + 20384 | 0, 0);
  $5_1 = $8 + (-2130771968 >>> $5_1 & 1) | 0;
  $4_1 = $2_1 ? $2_1 : $5_1 + $1_1 | 0;
  if ($3 >>> 0 < $4_1 >>> 0) {
   $7_1 = $1937($3, 0)
  }
  $3 = $1_1 >>> 0 < $4_1 >>> 0;
  $2_1 = 0;
  $9 = $1_1 + 2 | 0;
  if ($9 >>> 0 < $4_1 >>> 0) {
   $2_1 = $1937($9, 0)
  }
  $6_1 = $3 ? $6_1 : 0;
  $3 = 0;
  $1_1 = $1_1 + 3 | 0;
  if ($4_1 >>> 0 > $1_1 >>> 0) {
   $3 = $1937($1_1, 0)
  }
  $1_1 = $8 << 2;
  $4_1 = ($3 & 63 | ($2_1 << 6 & 4032 | ($7_1 << 12 & 258048 | ($1944($1_1 + 20416 | 0, 0) & $6_1) << 18))) >>> $1944($1_1 + 20480 | 0, 0) | 0;
  $1973($0_1, 0, $4_1);
  if (!((($2_1 >>> 4 & 12 | $7_1 >>> 2 & 48 | ($3 & 192) >>> 6 | ($1944($1_1 + 20448 | 0, 0) >>> 0 > $4_1 >>> 0) << 6 | ($4_1 >>> 0 > 65535) << 8 | (($4_1 & -2048) == 55296) << 7) ^ 42) >>> $1944($1_1 + 20512 | 0, 0) | 0)) {
   return $5_1
  }
  $1973($0_1, 0, 65533);
  $0_1 = (((($7_1 & 255) != 0) + (($6_1 | 0) != 0) | 0) + (($2_1 & 255) != 0) | 0) + (($3 & 255) != 0) | 0;
  return ($0_1 | 0) > ($5_1 | 0) ? $5_1 : $0_1;
 }
 
 function $11($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = $1944($0_1 + 5400 | 0, 0);
  label$1 : {
   if (($1_1 | 0) >= 0) {
    break label$1
   }
   $3 = $1_1;
   $1_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0;
   $1_1 = ($1_1 | 0) > 0 ? $1_1 : 0;
   if (($3 | 0) >= ($1_1 | 0)) {
    break label$1
   }
   $3 = $1_1 << 1;
   $2_1 = $1944(0, 73568);
   if ($2_1) {
    $2_1 = $2_1 + 876 | 0;
    $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
   }
   $3 = (((wasm2js_i32$1 = $3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $2_1 = $1944($0_1 + 5404 | 0, 0);
   if ($2_1) {
    $1602($3, $2_1, $1944($0_1, 5396) << 1);
    $2_1 = $1944($0_1, 5404);
    label$4 : {
     if (!$2_1) {
      break label$4
     }
     $4_1 = $1944(0, 73568);
     if (!$4_1) {
      break label$4
     }
     $4_1 = $4_1 + 876 | 0;
     $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($0_1, 5400, $1_1);
   $1973($0_1, 5404, $3);
  }
  $1973($0_1, 5396, 0);
 }
 
 function $12($0_1, $1_1, $2_1, $3) {
  var $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = 0;
  $5_1 = $1963($3, 0);
  $6_1 = $1963($1_1, 0);
  $7_1 = $1963($0_1, 4);
  $4_1 = $1963($1_1, 4);
  $8 = $1963($0_1, 0);
  $9 = $1963($3, 4);
  $1_1 = !(Math_fround(Math_fround(Math_fround($5_1 - $6_1) * Math_fround($7_1 - $4_1)) - Math_fround(Math_fround($8 - $6_1) * Math_fround($9 - $4_1))) < Math_fround(0.0));
  $10_1 = $1963($2_1, 0);
  $11_1 = $4_1;
  $4_1 = $1963($2_1, 4);
  $0_1 = Math_fround(Math_fround(Math_fround($5_1 - $10_1) * Math_fround($11_1 - $4_1)) - Math_fround(Math_fround($6_1 - $10_1) * Math_fround($9 - $4_1))) < Math_fround(0.0);
  if (($1_1 | 0) != ($0_1 | 0)) {
   $12_1 = $0_1 ^ Math_fround(Math_fround(Math_fround($5_1 - $8) * Math_fround($4_1 - $7_1)) - Math_fround(Math_fround($10_1 - $8) * Math_fround($9 - $7_1))) < Math_fround(0.0) ^ 1
  }
  return $12_1;
 }
 
 function $15($0_1, $1_1, $2_1) {
  label$1 : {
   switch ($2_1 | 0) {
   default:
    $1699($0_1, $1_1, $2_1 - 1 | 0);
   case 1:
    $1968(($0_1 + $2_1 | 0) - 1 | 0, 0, 0);
    break;
   case 0:
    break label$1;
   };
  }
 }
 
 function $16($0_1) {
  var $1_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = $1944(0, 73568);
  if ($1_1) {
   $1_1 = $1_1 + 876 | 0;
   $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
  }
  return ((wasm2js_i32$1 = $0_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0;
 }
 
 function $17($0_1) {
  var $1_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  label$1 : {
   if (!$0_1) {
    break label$1
   }
   $1_1 = $1944(0, 73568);
   if (!$1_1) {
    break label$1
   }
   $1_1 = $1_1 + 876 | 0;
   $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
  }
  ((wasm2js_i32$1 = $0_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
 }
 
 function $18($0_1, $1_1) {
  var $2_1 = 0;
  while (1) {
   $2_1 = $0_1;
   if ($1_1 >>> 0 < $2_1 >>> 0) {
    $0_1 = $2_1 - 2 | 0;
    if (($1941($0_1, 0) | 0) != 10) {
     continue
    }
   }
   break;
  };
  return $2_1;
 }
 
 function $20($0_1) {
  var $1_1 = 0;
  while (1) {
   $1_1 = $1937($0_1, 0);
   if (!(($1_1 | 0) != 32 & ($1_1 | 0) != 9)) {
    $0_1 = $0_1 + 1 | 0;
    continue;
   }
   break;
  };
  return $0_1;
 }
 
 function $21($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1973($4_1, 12, $3);
  $2_1 = $1738($0_1, $1_1, $2_1, $3);
  label$1 : {
   if (!$0_1) {
    $0_1 = $2_1;
    break label$1;
   }
   $3 = $0_1;
   $0_1 = $1_1 - 1 | 0;
   $0_1 = ($2_1 | 0) != -1 ? (($1_1 | 0) > ($2_1 | 0) ? $2_1 : $0_1) : $0_1;
   $1968($3 + $0_1 | 0, 0, 0);
  }
  global$0 = $4_1 + 16 | 0;
  return $0_1;
 }
 
 function $22($0_1, $1_1, $2_1) {
  $1_1 = $1738($0_1, 3073, $1_1, $2_1);
  if (!$0_1) {
   return $1_1
  }
  $1_1 = ($1_1 | 0) == -1 ? 3072 : ($1_1 | 0) >= 3073 ? 3072 : $1_1;
  $1968($0_1 + $1_1 | 0, 0, 0);
  return $1_1;
 }
 
 function $23($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  $3 = $1_1 ^ -1;
  $1_1 = $0_1;
  $0_1 = $3;
  while (1) {
   $4_1 = $1_1;
   $1_1 = $1_1 + 1 | 0;
   $2_1 = $1937($4_1, 0);
   if ($2_1) {
    label$6 : {
     if (($2_1 | 0) != 35) {
      break label$6
     }
     if (($1937($1_1, 0) | 0) != 35) {
      break label$6
     }
     $0_1 = ($1937($4_1, 2) | 0) == 35 ? $3 : $0_1;
    }
    $0_1 = $1944((($2_1 ^ $0_1 & 255) << 2) + 19360 | 0, 0) ^ $0_1 >>> 8;
   }
   if ($2_1) {
    continue
   }
   break;
  };
  return $0_1 ^ -1;
 }
 
 function $25($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $7_1 = (($1_1 << 1) + $0_1 | 0) - 2 | 0;
  $5_1 = $0_1;
  $1_1 = $2_1;
  while (1) {
   label$1 : {
    if (!(!$3 | $1_1 >>> 0 < $3 >>> 0) | $5_1 >>> 0 >= $7_1 >>> 0) {
     break label$1
    }
    if (!$1937($1_1, 0)) {
     break label$1
    }
    $8 = $10($6_1 + 12 | 0, $1_1, $3);
    $2_1 = $1944($6_1, 12);
    if ($2_1) {
     $1970($5_1, 0, $2_1);
     $5_1 = $5_1 + 2 | 0;
    }
    $1_1 = $1_1 + $8 | 0;
    if ($2_1) {
     continue
    }
   }
   break;
  };
  $1970($5_1, 0, 0);
  if ($4_1) {
   $1973($4_1, 0, $1_1)
  }
  global$0 = $6_1 + 16 | 0;
  return $5_1 - $0_1 >> 1;
 }
 
 function $26($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  while (1) {
   label$1 : {
    if (!(!$1_1 | $0_1 >>> 0 < $1_1 >>> 0)) {
     break label$1
    }
    if (!$1937($0_1, 0)) {
     break label$1
    }
    $0_1 = $10($2_1 + 12 | 0, $0_1, $1_1) + $0_1 | 0;
    $3 = $1944($2_1, 12);
    $4_1 = (($3 | 0) != 0) + $4_1 | 0;
    if ($3) {
     continue
    }
   }
   break;
  };
  global$0 = $2_1 + 16 | 0;
  return $4_1;
 }
 
 function $27($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $6_1 = $0_1 + $1_1 | 0;
  $7_1 = $6_1 - 1 | 0;
  label$1 : {
   if ($7_1 >>> 0 <= $0_1 >>> 0) {
    break label$1
   }
   $1_1 = $0_1;
   while (1) {
    if (!(!$3 | $2_1 >>> 0 < $3 >>> 0)) {
     $0_1 = $1_1;
     break label$1;
    }
    $0_1 = $1941($2_1, 0);
    if (!$0_1) {
     $0_1 = $1_1;
     break label$1;
    }
    $2_1 = $2_1 + 2 | 0;
    label$5 : {
     if ($0_1 >>> 0 <= 127) {
      $1968($1_1, 0, $0_1);
      $1_1 = $1_1 + 1 | 0;
      break label$5;
     }
     $5_1 = ($1_1 ^ -1) + $6_1 | 0;
     label$7 : {
      label$8 : {
       if ($0_1 >>> 0 <= 2047) {
        $4_1 = 0;
        if (($5_1 | 0) < 2) {
         break label$7
        }
        $1968($1_1, 0, ($0_1 >>> 6 | 0) + -64 | 0);
        $5_1 = 2;
        $4_1 = 1;
        break label$8;
       }
       $4_1 = 0;
       if (($5_1 | 0) < 3) {
        break label$7
       }
       $1968($1_1, 0, $0_1 >>> 12 | 224);
       $1968($1_1, 1, $0_1 >>> 6 & 63 | 128);
       $5_1 = 3;
       $4_1 = 2;
      }
      $1968($4_1 + $1_1 | 0, 0, $0_1 & 63 | 128);
      $4_1 = $5_1;
     }
     $1_1 = $4_1 + $1_1 | 0;
    }
    $0_1 = $1_1;
    if ($1_1 >>> 0 < $7_1 >>> 0) {
     continue
    }
    break;
   };
  }
  $1968($0_1, 0, 0);
 }
 
 function $28($0_1, $1_1) {
  var $2_1 = 0, $3 = 0;
  label$1 : {
   label$2 : {
    if (!$1_1) {
     break label$2
    }
    if ($0_1 >>> 0 >= $1_1 >>> 0) {
     break label$1
    }
   }
   while (1) {
    $2_1 = $1941($0_1, 0);
    if (!$2_1) {
     return $3
    }
    $0_1 = $0_1 + 2 | 0;
    $3 = $3 + ($2_1 >>> 0 < 128 ? 1 : $2_1 >>> 0 < 2048 ? 2 : 3) | 0;
    if (!$1_1 | $0_1 >>> 0 < $1_1 >>> 0) {
     continue
    }
    break;
   };
  }
  return $3;
 }
 
 function $29($0_1, $1_1) {
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = 0;
  $2_1 = $0_1 >>> 8 & 255;
  $3 = Math_fround(Math_fround($1_1 >>> 24 >>> 0) / Math_fround(255.0));
  $4_1 = Math_fround(Math_fround(Math_fround(($1_1 >>> 8 & 255) - $2_1 | 0) * $3) + Math_fround($2_1 | 0));
  label$1 : {
   if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
    $2_1 = ~~$4_1;
    break label$1;
   }
   $2_1 = -2147483648;
  }
  $5_1 = $2_1 << 8;
  $2_1 = $0_1 & 255;
  $4_1 = Math_fround(Math_fround(Math_fround(($1_1 & 255) - $2_1 | 0) * $3) + Math_fround($2_1 | 0));
  label$3 : {
   if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
    $2_1 = ~~$4_1;
    break label$3;
   }
   $2_1 = -2147483648;
  }
  $2_1 = $2_1 | $5_1;
  $0_1 = $0_1 >>> 16 & 255;
  $3 = Math_fround(Math_fround(Math_fround(($1_1 >>> 16 & 255) - $0_1 | 0) * $3) + Math_fround($0_1 | 0));
  label$5 : {
   if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
    $0_1 = ~~$3;
    break label$5;
   }
   $0_1 = -2147483648;
  }
  return $2_1 | $0_1 << 16 | -16777216;
 }
 
 function $31($0_1) {
  var $1_1 = Math_fround(0), $2_1 = 0, $3 = 0;
  $1_1 = $1963($0_1, 4);
  $1_1 = Math_fround(Math_fround(($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1 > Math_fround(1.0) ? Math_fround(1.0) : $1_1) * Math_fround(255.0)) + Math_fround(.5));
  label$1 : {
   if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
    $2_1 = ~~$1_1;
    break label$1;
   }
   $2_1 = -2147483648;
  }
  $2_1 = $2_1 << 8;
  $1_1 = $1963($0_1, 0);
  $1_1 = Math_fround(Math_fround(($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1 > Math_fround(1.0) ? Math_fround(1.0) : $1_1) * Math_fround(255.0)) + Math_fround(.5));
  label$3 : {
   if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$1_1;
    break label$3;
   }
   $3 = -2147483648;
  }
  $2_1 = $3 | $2_1;
  $1_1 = $1963($0_1, 8);
  $1_1 = Math_fround(Math_fround(($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1 > Math_fround(1.0) ? Math_fround(1.0) : $1_1) * Math_fround(255.0)) + Math_fround(.5));
  label$5 : {
   if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$1_1;
    break label$5;
   }
   $3 = -2147483648;
  }
  $2_1 = $2_1 | $3 << 16;
  $1_1 = $1963($0_1, 12);
  $1_1 = Math_fround(Math_fround(($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1 > Math_fround(1.0) ? Math_fround(1.0) : $1_1) * Math_fround(255.0)) + Math_fround(.5));
  label$7 : {
   if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
    $0_1 = ~~$1_1;
    break label$7;
   }
   $0_1 = -2147483648;
  }
  return $2_1 | $0_1 << 24;
 }
 
 function $32($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0, $7_1 = Math_fround(0), $8 = 0, $9 = Math_fround(0), $10_1 = Math_fround(0);
  $6_1 = $1_1 < $2_1;
  $10_1 = $6_1 ? Math_fround(-1.0) : Math_fround(0.0);
  $7_1 = $6_1 ? $2_1 : $1_1;
  $8 = $7_1 > $0_1;
  $9 = $8 ? $7_1 : $0_1;
  $0_1 = $8 ? $0_1 : $7_1;
  $1_1 = $6_1 ? $1_1 : $2_1;
  $2_1 = Math_fround($9 - ($0_1 < $1_1 ? $0_1 : $1_1));
  $1986($3, 0, Math_fround(Math_abs(Math_fround(($8 ? Math_fround(Math_fround(-.3333333432674408) - $10_1) : $10_1) + Math_fround(Math_fround($0_1 - $1_1) / Math_fround(Math_fround($2_1 * Math_fround(6.0)) + Math_fround(9.999999682655225e-21)))))));
  $1986($4_1, 0, Math_fround($2_1 / Math_fround($9 + Math_fround(9.999999682655225e-21))));
  $1986($5_1, 0, $9);
 }
 
 function $33($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0, $7_1 = Math_fround(0);
  if ($1_1 == Math_fround(0.0)) {
   $1986($5_1, 0, $2_1);
   $1986($4_1, 0, $2_1);
   $1986($3, 0, $2_1);
   return;
  }
  $0_1 = Math_fround($1612($0_1, Math_fround(1.0)) / Math_fround(.1666666716337204));
  label$2 : {
   if (Math_fround(Math_abs($0_1)) < Math_fround(2147483648.0)) {
    $6_1 = ~~$0_1;
    break label$2;
   }
   $6_1 = -2147483648;
  }
  $0_1 = Math_fround($0_1 - Math_fround($6_1 | 0));
  $7_1 = Math_fround(Math_fround(Math_fround(1.0) - Math_fround($1_1 * $0_1)) * $2_1);
  $0_1 = Math_fround(Math_fround(Math_fround(1.0) - Math_fround($1_1 * Math_fround(Math_fround(1.0) - $0_1))) * $2_1);
  $1_1 = Math_fround(Math_fround(Math_fround(1.0) - $1_1) * $2_1);
  label$4 : {
   switch ($6_1 | 0) {
   case 0:
    $1986($3, 0, $2_1);
    $1986($4_1, 0, $0_1);
    $1986($5_1, 0, $1_1);
    return;
   case 1:
    $1986($3, 0, $7_1);
    $1986($4_1, 0, $2_1);
    $1986($5_1, 0, $1_1);
    return;
   case 2:
    $1986($3, 0, $1_1);
    $1986($4_1, 0, $2_1);
    $1986($5_1, 0, $0_1);
    return;
   case 3:
    $1986($3, 0, $1_1);
    $1986($4_1, 0, $7_1);
    $1986($5_1, 0, $2_1);
    return;
   case 4:
    $1986($3, 0, $0_1);
    $1986($4_1, 0, $1_1);
    $1986($5_1, 0, $2_1);
    return;
   default:
    break label$4;
   };
  }
  $1986($3, 0, $2_1);
  $1986($4_1, 0, $1_1);
  $1986($5_1, 0, $7_1);
 }
 
 function $34($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $6_1 = $1944($0_1, 8);
  $3 = $6_1;
  $4_1 = $1944($0_1, 0);
  if ($4_1) {
   $0_1 = $4_1;
   while (1) {
    $5_1 = $0_1 >>> 1 | 0;
    $7_1 = ($5_1 << 3) + $3 | 0;
    $8 = $1944($7_1, 0) >>> 0 < $1_1 >>> 0;
    $3 = $8 ? $7_1 + 8 | 0 : $3;
    $0_1 = $8 ? $0_1 + ($5_1 ^ -1) | 0 : $5_1;
    if ($0_1) {
     continue
    }
    break;
   };
  }
  $0_1 = $3;
  if (($0_1 | 0) == (($4_1 << 3) + $6_1 | 0)) {
   return $2_1
  }
  $3 = $2_1;
  if (($1944($0_1, 0) | 0) == ($1_1 | 0)) {
   $3 = $1944($0_1, 4)
  }
  return $3;
 }
 
 function $35($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $5_1 = $1944($0_1, 8);
  $2_1 = $5_1;
  $3 = $1944($0_1, 0);
  if ($3) {
   $4_1 = $3;
   while (1) {
    $6_1 = $4_1 >>> 1 | 0;
    $7_1 = ($6_1 << 3) + $2_1 | 0;
    $8 = $1944($7_1, 0) >>> 0 < $1_1 >>> 0;
    $2_1 = $8 ? $7_1 + 8 | 0 : $2_1;
    $4_1 = $8 ? $4_1 + ($6_1 ^ -1) | 0 : $6_1;
    if ($4_1) {
     continue
    }
    break;
   };
  }
  label$3 : {
   label$4 : {
    $4_1 = $2_1;
    if (($2_1 | 0) == (($3 << 3) + $5_1 | 0)) {
     break label$4
    }
    if (($1944($4_1, 0) | 0) != ($1_1 | 0)) {
     break label$4
    }
    break label$3;
   }
   $4_1 = $4_1 - $5_1 >> 3;
   $2_1 = $1944($0_1, 4);
   label$5 : {
    if (($2_1 | 0) != ($3 | 0)) {
     break label$5
    }
    $5_1 = $2_1;
    $2_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
    $3 = $3 + 1 | 0;
    $2_1 = ($2_1 | 0) > ($3 | 0) ? $2_1 : $3;
    if (($5_1 | 0) >= ($2_1 | 0)) {
     break label$5
    }
    $3 = $1944(0, 73568);
    if ($3) {
     $3 = $3 + 876 | 0;
     $1973($3, 0, $1944($3, 0) + 1 | 0);
    }
    $3 = (((wasm2js_i32$1 = $2_1 << 3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $5_1 = $1944($0_1, 8);
    if ($5_1) {
     $1602($3, $5_1, $1944($0_1, 0) << 3);
     $5_1 = $1944($0_1, 8);
     label$10 : {
      if (!$5_1) {
       break label$10
      }
      $6_1 = $1944(0, 73568);
      if (!$6_1) {
       break label$10
      }
      $6_1 = $6_1 + 876 | 0;
      $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $5_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($0_1, 4, $2_1);
    $1973($0_1, 8, $3);
   }
   $2_1 = $1944($0_1, 0);
   if (($4_1 | 0) < ($2_1 | 0)) {
    $3 = $1944($0_1, 8) + ($4_1 << 3) | 0;
    $1603($3 + 8 | 0, $3, $2_1 - $4_1 << 3);
   }
   $4_1 = $4_1 << 3;
   $1982($1944($0_1, 8) + $4_1 | 0, 0, $1_1, -1);
   $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
   $4_1 = $1944($0_1, 8) + $4_1 | 0;
  }
  return $4_1 + 4 | 0;
 }
 
 function $36($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $7_1 = $1944($0_1, 8);
  $4_1 = $7_1;
  $5_1 = $1944($0_1, 0);
  if ($5_1) {
   $3 = $5_1;
   while (1) {
    $6_1 = $3 >>> 1 | 0;
    $8 = ($6_1 << 3) + $4_1 | 0;
    $9 = $1944($8, 0) >>> 0 < $1_1 >>> 0;
    $4_1 = $9 ? $8 + 8 | 0 : $4_1;
    $3 = $9 ? $3 + ($6_1 ^ -1) | 0 : $6_1;
    if ($3) {
     continue
    }
    break;
   };
  }
  label$3 : {
   if (($4_1 | 0) != (($5_1 << 3) + $7_1 | 0)) {
    if (($1944($4_1, 0) | 0) == ($1_1 | 0)) {
     break label$3
    }
   }
   $7_1 = $4_1 - $7_1 >> 3;
   $3 = $1944($0_1, 4);
   label$5 : {
    if (($3 | 0) != ($5_1 | 0)) {
     break label$5
    }
    $5_1 = $5_1 + 1 | 0;
    if ($3) {
     $4_1 = $3 + (($3 | 0) / 2 | 0) | 0
    } else {
     $4_1 = 8
    }
    $4_1 = ($4_1 | 0) > ($5_1 | 0) ? $4_1 : $5_1;
    if (($4_1 | 0) <= ($3 | 0)) {
     break label$5
    }
    $5_1 = $4_1 << 3;
    $3 = $1944(0, 73568);
    if ($3) {
     $3 = $3 + 876 | 0;
     $1973($3, 0, $1944($3, 0) + 1 | 0);
    }
    $5_1 = (((wasm2js_i32$1 = $5_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $3 = $1944($0_1, 8);
    if ($3) {
     $1602($5_1, $3, $1944($0_1, 0) << 3);
     $3 = $1944($0_1, 8);
     label$10 : {
      if (!$3) {
       break label$10
      }
      $6_1 = $1944(0, 73568);
      if (!$6_1) {
       break label$10
      }
      $6_1 = $6_1 + 876 | 0;
      $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $3, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($0_1, 4, $4_1);
    $1973($0_1, 8, $5_1);
   }
   $4_1 = $1944($0_1, 0);
   if (($7_1 | 0) < ($4_1 | 0)) {
    $5_1 = $1944($0_1, 8) + ($7_1 << 3) | 0;
    $1603($5_1 + 8 | 0, $5_1, $4_1 - $7_1 << 3);
   }
   $1982($1944($0_1, 8) + ($7_1 << 3) | 0, 0, $1_1, $2_1);
   $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
   return;
  }
  $1973($4_1, 4, $2_1);
 }
 
 function $38($0_1) {
  $0_1 = Math_fround($0_1);
  var $1_1 = 0;
  $1_1 = $1944(0, 73568);
  $1986($1_1 + 7224 | 0, 0, $0_1);
  $1973($1_1, 7220, $1944($1_1, 7220) | 1);
 }
 
 function $39($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  if ($2_1) {
   $7_1 = $2_1 - $1_1 | 0
  } else {
   $7_1 = $1697($1_1)
  }
  $2_1 = $1944($0_1, 0);
  $8 = $2_1 >>> 0 <= 1 ? 1 : $2_1;
  $2_1 = $7_1 + $8 | 0;
  $4_1 = $1944($0_1, 4);
  label$3 : {
   if (($2_1 | 0) < ($4_1 | 0)) {
    break label$3
   }
   $3 = $4_1;
   $4_1 = $4_1 << 1;
   $4_1 = ($2_1 | 0) > ($4_1 | 0) ? $2_1 : $4_1;
   if (($3 | 0) >= ($4_1 | 0)) {
    break label$3
   }
   $3 = $1944(0, 73568);
   if ($3) {
    $3 = $3 + 876 | 0;
    $1973($3, 0, $1944($3, 0) + 1 | 0);
   }
   $3 = (((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $5_1 = $1944($0_1, 8);
   if ($5_1) {
    $1602($3, $5_1, $1944($0_1, 0));
    $5_1 = $1944($0_1, 8);
    label$6 : {
     if (!$5_1) {
      break label$6
     }
     $6_1 = $1944(0, 73568);
     if (!$6_1) {
      break label$6
     }
     $6_1 = $6_1 + 876 | 0;
     $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $5_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($0_1, 4, $4_1);
   $1973($0_1, 8, $3);
  }
  $4_1 = $1944($0_1, 4);
  label$7 : {
   if (($4_1 | 0) >= ($2_1 | 0)) {
    break label$7
   }
   $5_1 = $4_1;
   if ($4_1) {
    $3 = $4_1 + (($4_1 | 0) / 2 | 0) | 0
   } else {
    $3 = 8
   }
   $4_1 = ($2_1 | 0) < ($3 | 0) ? $3 : $2_1;
   if (($5_1 | 0) >= ($4_1 | 0)) {
    break label$7
   }
   $3 = $1944(0, 73568);
   if ($3) {
    $3 = $3 + 876 | 0;
    $1973($3, 0, $1944($3, 0) + 1 | 0);
   }
   $3 = (((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $5_1 = $1944($0_1, 8);
   if ($5_1) {
    $1602($3, $5_1, $1944($0_1, 0));
    $5_1 = $1944($0_1, 8);
    label$12 : {
     if (!$5_1) {
      break label$12
     }
     $6_1 = $1944(0, 73568);
     if (!$6_1) {
      break label$12
     }
     $6_1 = $6_1 + 876 | 0;
     $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $5_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($0_1, 4, $4_1);
   $1973($0_1, 8, $3);
  }
  $1973($0_1, 0, $2_1);
  $2_1 = $8 - 1 | 0;
  $1602($1944($0_1, 8) + $2_1 | 0, $1_1, $7_1);
  $1968($1944($0_1, 8) + ($2_1 + $7_1 | 0) | 0, 0, 0);
 }
 
 function $40($0_1, $1_1, $2_1) {
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 12, $2_1);
  $41($0_1, $1_1, $2_1);
  global$0 = $3 + 16 | 0;
 }
 
 function $41($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $1973($7_1, 12, $2_1);
  $1973($7_1, 8, $2_1);
  $8 = $1738(0, 0, $1_1, $2_1);
  label$1 : {
   if (($8 | 0) <= 0) {
    break label$1
   }
   $2_1 = $1944($0_1, 0);
   $9 = $2_1 >>> 0 <= 1 ? 1 : $2_1;
   $2_1 = $9 + $8 | 0;
   $4_1 = $1944($0_1, 4);
   label$2 : {
    if (($2_1 | 0) < ($4_1 | 0)) {
     break label$2
    }
    $3 = $4_1;
    $4_1 = $4_1 << 1;
    $4_1 = ($2_1 | 0) > ($4_1 | 0) ? $2_1 : $4_1;
    if (($3 | 0) >= ($4_1 | 0)) {
     break label$2
    }
    $3 = $1944(0, 73568);
    if ($3) {
     $3 = $3 + 876 | 0;
     $1973($3, 0, $1944($3, 0) + 1 | 0);
    }
    $3 = (((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $5_1 = $1944($0_1, 8);
    if ($5_1) {
     $1602($3, $5_1, $1944($0_1, 0));
     $5_1 = $1944($0_1, 8);
     label$5 : {
      if (!$5_1) {
       break label$5
      }
      $6_1 = $1944(0, 73568);
      if (!$6_1) {
       break label$5
      }
      $6_1 = $6_1 + 876 | 0;
      $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $5_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($0_1, 4, $4_1);
    $1973($0_1, 8, $3);
   }
   $4_1 = $1944($0_1, 4);
   label$6 : {
    if (($4_1 | 0) >= ($2_1 | 0)) {
     break label$6
    }
    $5_1 = $4_1;
    if ($4_1) {
     $3 = $4_1 + (($4_1 | 0) / 2 | 0) | 0
    } else {
     $3 = 8
    }
    $4_1 = ($2_1 | 0) < ($3 | 0) ? $3 : $2_1;
    if (($5_1 | 0) >= ($4_1 | 0)) {
     break label$6
    }
    $3 = $1944(0, 73568);
    if ($3) {
     $3 = $3 + 876 | 0;
     $1973($3, 0, $1944($3, 0) + 1 | 0);
    }
    $3 = (((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $5_1 = $1944($0_1, 8);
    if ($5_1) {
     $1602($3, $5_1, $1944($0_1, 0));
     $5_1 = $1944($0_1, 8);
     label$11 : {
      if (!$5_1) {
       break label$11
      }
      $6_1 = $1944(0, 73568);
      if (!$6_1) {
       break label$11
      }
      $6_1 = $6_1 + 876 | 0;
      $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $5_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($0_1, 4, $4_1);
    $1973($0_1, 8, $3);
   }
   $1973($0_1, 0, $2_1);
   $2_1 = $1944($0_1, 8);
   $4_1 = ($2_1 + $9 | 0) - 1 | 0;
   $3 = $8 + 1 | 0;
   $0_1 = $1738($4_1, $3, $1_1, $1944($7_1, 8));
   if (!$2_1) {
    break label$1
   }
   $1968($4_1 + (($0_1 | 0) != -1 ? (($0_1 | 0) < ($3 | 0) ? $0_1 : $8) : $8) | 0, 0, 0);
  }
  global$0 = $7_1 + 16 | 0;
 }
 
 function $42($0_1) {
  var $1_1 = 0;
  $1_1 = $0_1 + 8 | 0;
  $1982($1_1, 0, 0, 0);
  $1982($0_1, 0, 0, 0);
  $1982($0_1 + 16 | 0, 0, 0, 0);
  $1973($1_1, 0, -1);
  return $0_1;
 }
 
 function $43($0_1) {
  var $1_1 = 0, $2_1 = 0;
  $2_1 = $1944(0, 73568);
  $1_1 = $1944($0_1, 8);
  label$1 : {
   if ($1_1 >>> 0 > 2147483646) {
    break label$1
   }
   if (($1944($0_1, 0) | 0) < 0) {
    break label$1
   }
   $44($0_1, $1_1);
  }
  $1973($0_1, 8, -1);
  $1_1 = $1944($0_1, 20);
  if ($1_1) {
   $1973($1_1, 8, $1944($1_1, 16));
   $1_1 = $1944($2_1, 8020);
   $1973($2_1, 8020, $1_1 - 1 | 0);
   if (($1_1 | 0) >= 2) {
    $2_1 = ($1944($2_1 + 8032 | 0, 0) + Math_imul($1_1, 28) | 0) - 56 | 0;
    $1973($1944($2_1, 0), 20, $2_1);
   }
   $1973($0_1, 20, 0);
  }
  return $0_1;
 }
 
 function $44($0_1, $1_1) {
  var $2_1 = Math_fround(0), $3 = 0, $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = 0, $11_1 = 0.0;
  $6_1 = $1944(0, 73568);
  $3 = $1944($6_1, 7080);
  $7_1 = $3 + 212 | 0;
  $9 = $1963($7_1, 0);
  $10_1 = $1_1;
  $1_1 = $1944($0_1, 20);
  $11_1 = +($10_1 - $1944($1_1, 12) | 0);
  $5_1 = $1963($0_1, 12);
  $2_1 = Math_fround($11_1 * +$5_1 + (+$1963($0_1, 16) + +$1963($1_1, 4)));
  $1986($7_1, 0, $2_1);
  $4_1 = $1963($6_1 + 5496 | 0, 0);
  $1986($3 + 220 | 0, 0, Math_fround($2_1 - $5_1));
  $1986($3 + 260 | 0, 0, Math_fround($5_1 - $4_1));
  $0_1 = $3 + 236 | 0;
  $8 = $1963($0_1, 0);
  $4_1 = Math_fround($2_1 - $4_1);
  $1986($0_1, 0, $4_1 <= $8 ? $8 : $4_1);
  $0_1 = $1944($3 + 368 | 0, 0);
  if ($0_1) {
   $1986($0_1, 28, $2_1)
  }
  $0_1 = $1944($6_1, 8036);
  if ($0_1) {
   $2_1 = Math_fround($2_1 - $9);
   if ($1937($0_1, 442)) {
    $504($0_1)
   }
   $1986($0_1, 104, $1963($3, 212));
   $2_1 = Math_fround(Math_fround($2_1 / $5_1) + Math_fround(.5));
   label$4 : {
    if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
     $1_1 = ~~$2_1;
     break label$4;
    }
    $1_1 = -2147483648;
   }
   $1973($0_1, 124, $1_1 + $1944($0_1, 124) | 0);
  }
 }
 
 function $45($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0;
  $2_1 = $1944(0, 73568);
  $1_1 = $1944($0_1, 8);
  label$1 : {
   if ($1_1 >>> 0 > 2147483646) {
    break label$1
   }
   if (($1944($0_1, 0) | 0) < 0) {
    break label$1
   }
   $44($0_1, $1_1);
  }
  $1973($0_1, 8, -1);
  $1_1 = $1944($0_1, 20);
  if ($1_1) {
   $1973($1_1, 8, $1944($1_1, 16));
   $1_1 = $1944($2_1, 8020);
   $1973($2_1, 8020, $1_1 - 1 | 0);
   if (($1_1 | 0) >= 2) {
    $2_1 = ($1944($2_1 + 8032 | 0, 0) + Math_imul($1_1, 28) | 0) - 56 | 0;
    $1973($1944($2_1, 0), 20, $2_1);
   }
   $1973($0_1, 20, 0);
  }
 }
 
 function $46($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $5_1 = $1944(0, 73568);
  $10_1 = $1944($5_1, 7080);
  $3 = $1944($5_1, 8036);
  label$1 : {
   if (!$3) {
    break label$1
   }
   if (!$1937($3, 442)) {
    break label$1
   }
   $504($3);
  }
  $11_1 = $1963($10_1 + 212 | 0, 0);
  $1986($0_1, 12, $2_1);
  $1986($0_1, 16, $11_1);
  $1973($0_1, 8, $1_1);
  $1982($0_1, 0, -1, 0);
  $7_1 = $1944($5_1, 8020);
  $8 = $7_1 + 1 | 0;
  $1973($5_1, 8020, $8);
  if (($1944($5_1, 8024) | 0) <= ($7_1 | 0)) {
   $3 = $1944($5_1 + 8028 | 0, 0);
   label$3 : {
    if (($3 | 0) > ($7_1 | 0)) {
     break label$3
    }
    if ($3) {
     $1_1 = $3 + (($3 | 0) / 2 | 0) | 0
    } else {
     $1_1 = 8
    }
    $1_1 = ($1_1 | 0) > ($8 | 0) ? $1_1 : $8;
    if (($1_1 | 0) <= ($3 | 0)) {
     break label$3
    }
    $3 = Math_imul($1_1, 28);
    $4_1 = $1944(0, 73568);
    if ($4_1) {
     $4_1 = $4_1 + 876 | 0;
     $1973($4_1, 0, $1944($4_1, 0) + 1 | 0);
    }
    $3 = (((wasm2js_i32$1 = $3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $4_1 = $1944($5_1 + 8032 | 0, 0);
    if ($4_1) {
     $1602($3, $4_1, Math_imul($1944($5_1, 8024), 28));
     $4_1 = $1944($5_1, 8032);
     label$8 : {
      if (!$4_1) {
       break label$8
      }
      $9 = $1944(0, 73568);
      if (!$9) {
       break label$8
      }
      $9 = $9 + 876 | 0;
      $1973($9, 0, $1944($9, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($5_1, 8028, $1_1);
    $1973($5_1, 8032, $3);
   }
   $1_1 = $1944($5_1, 8024);
   if (($1_1 | 0) <= ($7_1 | 0)) {
    while (1) {
     $3 = $1944($5_1, 8032) + Math_imul($1_1, 28) | 0;
     $1982($3, 0, 0, 0);
     $1973($3 + 24 | 0, 0, 0);
     $1982($3 + 16 | 0, 0, 0, 0);
     $1982($3 + 8 | 0, 0, 0, 0);
     $3 = $1_1;
     $1_1 = $3 + 1 | 0;
     if (($3 | 0) != ($7_1 | 0)) {
      continue
     }
     break;
    }
   }
   $1973($5_1, 8024, $8);
  }
  $7_1 = $1944($5_1 + 8032 | 0, 0);
  $4_1 = $1944($5_1, 8020) - 1 | 0;
  $1_1 = $7_1 + Math_imul($4_1, 28) | 0;
  $1973($1_1, 0, $0_1);
  $1982($1_1, 8, 0, 0);
  $5_1 = $1_1 + 16 | 0;
  $9 = $1_1 + 20 | 0;
  $3 = $1944($9, 0);
  label$11 : {
   if (($3 | 0) >= 0) {
    break label$11
   }
   $6_1 = $3;
   $3 = $3 + (($3 | 0) / 2 | 0) | 0;
   $3 = ($3 | 0) > 0 ? $3 : 0;
   if (($6_1 | 0) >= ($3 | 0)) {
    break label$11
   }
   $8 = Math_imul($3, 12);
   $6_1 = $1944(0, 73568);
   if ($6_1) {
    $6_1 = $6_1 + 876 | 0;
    $1973($6_1, 0, $1944($6_1, 0) + 1 | 0);
   }
   $8 = (((wasm2js_i32$1 = $8, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $7_1 = ($7_1 + Math_imul($4_1, 28) | 0) + 24 | 0;
   $4_1 = $1944($7_1, 0);
   if ($4_1) {
    $1602($8, $4_1, Math_imul($1944($5_1, 0), 12));
    $4_1 = $1944($7_1, 0);
    label$14 : {
     if (!$4_1) {
      break label$14
     }
     $6_1 = $1944(0, 73568);
     if (!$6_1) {
      break label$14
     }
     $6_1 = $6_1 + 876 | 0;
     $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($7_1, 0, $8);
   $1973($9, 0, $3);
  }
  $1973($5_1, 0, 0);
  $1986($1_1, 4, $1963($10_1 + 288 | 0, 0));
  $1973($0_1, 20, $1_1);
 }
 
 function $47($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $4_1 = $1944($0_1, 0);
  $3 = $1944($0_1, 4);
  label$1 : {
   if (($4_1 | 0) != ($3 | 0)) {
    break label$1
   }
   $2_1 = $4_1 + 1 | 0;
   $5_1 = $3;
   if ($3) {
    $4_1 = $3 + (($3 | 0) / 2 | 0) | 0
   } else {
    $4_1 = 8
   }
   $3 = ($2_1 | 0) < ($4_1 | 0) ? $4_1 : $2_1;
   if (($5_1 | 0) >= ($3 | 0)) {
    break label$1
   }
   $4_1 = Math_imul($3, 12);
   $2_1 = $1944(0, 73568);
   if ($2_1) {
    $2_1 = $2_1 + 876 | 0;
    $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
   }
   $4_1 = (((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $2_1 = $1944($0_1, 8);
   if ($2_1) {
    $1602($4_1, $2_1, Math_imul($1944($0_1, 0), 12));
    $2_1 = $1944($0_1, 8);
    label$6 : {
     if (!$2_1) {
      break label$6
     }
     $5_1 = $1944(0, 73568);
     if (!$5_1) {
      break label$6
     }
     $5_1 = $5_1 + 876 | 0;
     $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($0_1, 4, $3);
   $1973($0_1, 8, $4_1);
  }
  $3 = $1944($0_1, 8) + Math_imul($1944($0_1, 0), 12) | 0;
  $1982($3, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
  $1973($3 + 8 | 0, 0, $1944($1_1 + 8 | 0, 0));
  $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
 }
 
 function $48($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = 0, $13 = Math_fround(0), $14 = 0, $15_1 = 0, $16_1 = 0.0, $17_1 = 0.0, $18_1 = Math_fround(0), $19 = 0.0, $20_1 = 0.0, $21_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $8 = global$0 - 16 | 0;
  global$0 = $8;
  $6_1 = $1944($0_1, 20);
  $1_1 = $1944(0, 73568);
  $3 = $1944($1_1, 7080);
  $9 = $1944($1_1, 8036);
  label$1 : {
   if (!$9) {
    break label$1
   }
   if (!$1937($9, 442)) {
    break label$1
   }
   $504($9);
  }
  label$2 : {
   label$3 : {
    $2_1 = $1944($0_1, 8);
    if ($2_1) {
     $4_1 = $1944(0, 73568);
     $5_1 = $1944($4_1, 8036);
     label$5 : {
      if ($5_1) {
       $5_1 = $5_1 + 455 | 0;
       break label$5;
      }
      $5_1 = $1944($4_1, 7080) + 143 | 0;
     }
     if (!$1937($5_1, 0)) {
      break label$3
     }
    }
    $1_1 = $1944(0, 73568);
    label$7 : {
     if ($2_1 >>> 0 > 2147483646) {
      break label$7
     }
     if (($1944($0_1, 0) | 0) < 0) {
      break label$7
     }
     $44($0_1, $2_1);
    }
    $1973($0_1, 8, -1);
    $3 = $1944($0_1, 20);
    $2_1 = 0;
    if (!$3) {
     break label$2
    }
    $1973($3, 8, $1944($3, 16));
    $3 = $1944($1_1, 8020);
    $1973($1_1, 8020, $3 - 1 | 0);
    if (($3 | 0) >= 2) {
     $1_1 = ($1944($1_1 + 8032 | 0, 0) + Math_imul($3, 28) | 0) - 56 | 0;
     $1973($1944($1_1, 0), 20, $1_1);
    }
    $1973($0_1, 20, 0);
    $2_1 = 0;
    break label$2;
   }
   label$9 : {
    $5_1 = $1944($6_1, 8);
    if ($5_1 | !$9) {
     break label$9
    }
    if ($1937($9, 452)) {
     break label$9
    }
    $1_1 = $1944($6_1, 12);
    $1973($0_1, 0, $1_1);
    $3 = $1_1 + 1 | 0;
    $1973($0_1, 4, $3);
    if (($1_1 | 0) >= ($2_1 | 0)) {
     if (!(($1_1 | 0) < 0 | $2_1 >>> 0 > 2147483646)) {
      $44($0_1, $2_1)
     }
     $1973($0_1, 8, -1);
     $1_1 = $1944($0_1, 20);
     $2_1 = 0;
     if (!$1_1) {
      break label$2
     }
     $1973($1_1, 8, $1944($1_1, 16));
     $1_1 = $1944($4_1, 8020);
     $1973($4_1, 8020, $1_1 - 1 | 0);
     if (($1_1 | 0) >= 2) {
      $1_1 = ($1944($4_1 + 8032 | 0, 0) + Math_imul($1_1, 28) | 0) - 56 | 0;
      $1973($1944($1_1, 0), 20, $1_1);
     }
     $1973($0_1, 20, 0);
     $2_1 = 0;
     break label$2;
    }
    $1973($6_1, 12, $3);
    $2_1 = 1;
    break label$2;
   }
   label$14 : {
    if ($5_1) {
     break label$14
    }
    $1986($0_1, 16, $1963($3 + 212 | 0, 0));
    if (!($1963($0_1, 12) <= Math_fround(0.0))) {
     break label$14
    }
    $1_1 = $1944($6_1, 12);
    $1968($8, 10, 0);
    $1970($8, 8, 0);
    $1973($8, 0, $1_1);
    $1973($8, 4, $1_1 + 1 | 0);
    $1_1 = $6_1 + 16 | 0;
    $3 = $1944($1_1, 0);
    label$10 : {
     if (!$3) {
      $2_1 = $1944($1_1, 4);
      label$31 : {
       if (($2_1 | 0) != ($3 | 0)) {
        break label$31
       }
       $4_1 = $2_1;
       $2_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
       $3 = $3 + 1 | 0;
       $3 = ($2_1 | 0) > ($3 | 0) ? $2_1 : $3;
       if (($4_1 | 0) >= ($3 | 0)) {
        break label$31
       }
       $2_1 = $1944(0, 73568);
       if ($2_1) {
        $2_1 = $2_1 + 876 | 0;
        $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
       }
       $2_1 = (((wasm2js_i32$1 = Math_imul($3, 12), wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
       $4_1 = $1944($1_1, 8);
       if ($4_1) {
        $1602($2_1, $4_1, Math_imul($1944($1_1, 0), 12));
        $4_1 = $1944($1_1, 8);
        label$8 : {
         if (!$4_1) {
          break label$8
         }
         $9 = $1944(0, 73568);
         if (!$9) {
          break label$8
         }
         $9 = $9 + 876 | 0;
         $1973($9, 0, $1944($9, 0) - 1 | 0);
        }
        ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
       }
       $1973($1_1, 4, $3);
       $1973($1_1, 8, $2_1);
      }
      $3 = $1944($1_1, 8) + Math_imul($1944($1_1, 0), 12) | 0;
      break label$10;
     }
     $2_1 = $1944($1_1, 4);
     label$92 : {
      if (($2_1 | 0) != ($3 | 0)) {
       break label$92
      }
      $4_1 = $2_1;
      $2_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
      $3 = $3 + 1 | 0;
      $3 = ($2_1 | 0) > ($3 | 0) ? $2_1 : $3;
      if (($4_1 | 0) >= ($3 | 0)) {
       break label$92
      }
      $2_1 = $1944(0, 73568);
      if ($2_1) {
       $2_1 = $2_1 + 876 | 0;
       $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
      }
      $2_1 = (((wasm2js_i32$1 = Math_imul($3, 12), wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
      $4_1 = $1944($1_1, 8);
      if ($4_1) {
       $1602($2_1, $4_1, Math_imul($1944($1_1, 0), 12));
       $4_1 = $1944($1_1, 8);
       label$143 : {
        if (!$4_1) {
         break label$143
        }
        $9 = $1944(0, 73568);
        if (!$9) {
         break label$143
        }
        $9 = $9 + 876 | 0;
        $1973($9, 0, $1944($9, 0) - 1 | 0);
       }
       ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      }
      $1973($1_1, 4, $3);
      $1973($1_1, 8, $2_1);
     }
     $3 = $1944($1_1, 0);
     if (($3 | 0) > 0) {
      $2_1 = $1944($1_1, 8);
      $1603($2_1 + 12 | 0, $2_1, Math_imul($3, 12));
     }
     $3 = $1944($1_1, 8);
    }
    $1982($3, 0, $1959($8, 0), i64toi32_i32$HIGH_BITS);
    $1973($3 + 8 | 0, 0, $1944($8 + 8 | 0, 0));
    $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
    $1_1 = $1944($6_1 + 24 | 0, 0);
    $3 = $1944($1_1, 0);
    $2_1 = $1944($6_1, 12);
    $2_1 = ($2_1 | 0) < ($3 | 0) ? $3 : $2_1;
    $1973($0_1, 0, $2_1);
    $3 = $1944($1_1, 4);
    $1_1 = $1944($0_1, 8);
    $3 = ($1_1 | 0) > ($3 | 0) ? $3 : $1_1;
    $1973($0_1, 4, $3);
    if (($2_1 | 0) == ($3 | 0)) {
     $3 = $1944(0, 73568);
     if (!(($2_1 | 0) < 0 | $1_1 >>> 0 > 2147483646)) {
      $44($0_1, $1_1)
     }
     $1973($0_1, 8, -1);
     $1_1 = $1944($0_1, 20);
     $2_1 = 0;
     if (!$1_1) {
      break label$2
     }
     $1973($1_1, 8, $1944($1_1, 16));
     $1_1 = $1944($3, 8020);
     $1973($3, 8020, $1_1 - 1 | 0);
     if (($1_1 | 0) >= 2) {
      $1_1 = ($1944($3 + 8032 | 0, 0) + Math_imul($1_1, 28) | 0) - 56 | 0;
      $1973($1944($1_1, 0), 20, $1_1);
     }
     $1973($0_1, 20, 0);
     $2_1 = 0;
     break label$2;
    }
    $1973($6_1, 8, 1);
    $2_1 = 1;
    break label$2;
   }
   $5_1 = !$5_1;
   label$19 : {
    if (!($1963($0_1, 12) <= Math_fround(0.0))) {
     break label$19
    }
    $11_1 = $1963($3 + 212 | 0, 0);
    $13 = $1963($0_1, 16);
    $1986($0_1, 12, Math_fround(Math_fround($11_1 - $13) / Math_fround($1944($0_1, 4) - $1944($0_1, 0) | 0)));
    if (!($13 <= Math_fround(-16777216.0) | $13 >= Math_fround(16777216.0) | $11_1 <= Math_fround(-16777216.0))) {
     $5_1 = 1;
     if (!($11_1 >= Math_fround(16777216.0))) {
      break label$19
     }
    }
    $1986($0_1, 12, Math_fround($1963($3 + 260 | 0, 0) + $1963($1_1 + 5496 | 0, 0)));
    $5_1 = 1;
   }
   $9 = $1944($0_1, 4);
   label$22 : {
    if (!$5_1) {
     break label$22
    }
    label$23 : {
     if ($1937($1_1, 12196)) {
      $5_1 = $1944($6_1, 16);
      $1_1 = $1944($6_1 + 20 | 0, 0);
      label$25 : {
       if (($5_1 | 0) != ($1_1 | 0)) {
        break label$25
       }
       $7_1 = $1_1 ? $1_1 + (($1_1 | 0) / 2 | 0) | 0 : 8;
       $5_1 = $5_1 + 1 | 0;
       $5_1 = ($5_1 | 0) < ($7_1 | 0) ? $7_1 : $5_1;
       if (($1_1 | 0) >= ($5_1 | 0)) {
        break label$25
       }
       if ($4_1) {
        $1_1 = $4_1 + 876 | 0;
        $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
       }
       $1_1 = (((wasm2js_i32$1 = Math_imul($5_1, 12), wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
       $4_1 = $1944($6_1 + 24 | 0, 0);
       if ($4_1) {
        $1602($1_1, $4_1, Math_imul($1944($6_1, 16), 12));
        $4_1 = $1944($6_1, 24);
        label$30 : {
         if (!$4_1) {
          break label$30
         }
         $7_1 = $1944(0, 73568);
         if (!$7_1) {
          break label$30
         }
         $7_1 = $7_1 + 876 | 0;
         $1973($7_1, 0, $1944($7_1, 0) - 1 | 0);
        }
        ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
       }
       $1973($6_1, 20, $5_1);
       $1973($6_1, 24, $1_1);
      }
      $1_1 = $1944($6_1 + 24 | 0, 0) + Math_imul($1944($6_1, 16), 12) | 0;
      $1973($1_1, 0, 0);
      $4_1 = 0;
      $5_1 = 0;
      $7_1 = 0;
      break label$23;
     }
     $4_1 = 0;
     label$314 : {
      if (!$1937($1_1, 7597)) {
       break label$314
      }
      $2_1 = $1944($1_1, 7508);
      $4_1 = 0;
      if (!$2_1) {
       break label$314
      }
      $4_1 = ($1944($2_1, 748) | 0) == ($1944($3, 748) | 0);
     }
     $2_1 = $4_1;
     label$33 : {
      if (!$2_1) {
       break label$33
      }
      $11_1 = $1963($1_1 + 7644 | 0, 0);
      $13 = $1963($1_1 + 7652 | 0, 0);
      $1968($8, 10, 0);
      $1970($8, 8, 1);
      $1973($8, 4, Math_fround(Math_abs($13)) < Math_fround(2147483648.0) ? ~~$13 : -2147483648);
      $1973($8, 0, Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0) ? ~~$11_1 : -2147483648);
      $5_1 = $6_1 + 16 | 0;
      $47($5_1, $8);
      if (!($1937($1_1 + 7601 | 0, 0) & 4)) {
       break label$33
      }
      if (($1944($1_1, 7660) | 0) != -1) {
       break label$33
      }
      $4_1 = $1944($0_1, 8);
      $1968($8, 10, 0);
      $1970($8, 8, 0);
      $1973($8, 4, $4_1);
      $1973($8, 0, $4_1 - 1 | 0);
      $47($5_1, $8);
     }
     $4_1 = $1944($1_1, 7512);
     label$38 : {
      if (!$4_1) {
       break label$38
      }
      if (($1944($3, 756) | 0) != ($4_1 | 0)) {
       break label$38
      }
      $13 = $1963($3 + 776 | 0, 0);
      $18_1 = $1963($3 + 228 | 0, 0);
      $11_1 = Math_fround($18_1 + $1963($3 + 768 | 0, 0));
      $1968($8, 10, 0);
      $1970($8, 8, 1);
      $13 = Math_fround($18_1 + $13);
      label$39 : {
       if (Math_fround(Math_abs($13)) < Math_fround(2147483648.0)) {
        $4_1 = ~~$13;
        break label$39;
       }
       $4_1 = -2147483648;
      }
      $1973($8, 4, $4_1);
      $1973($8, 0, Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0) ? ~~$11_1 : -2147483648);
      $47($6_1 + 16 | 0, $8);
     }
     if ($2_1) {
      $4_1 = ($1944($1_1, 7620) | 0) == 2 ? -1 : 0
     } else {
      $4_1 = 0
     }
     if ($2_1) {
      $5_1 = ($1944($1_1, 7620) | 0) == 3
     } else {
      $5_1 = 0
     }
     $1_1 = $1944($6_1 + 20 | 0, 0);
     $7_1 = $1944($6_1, 16);
     $11_1 = $1963($3 + 508 | 0, 0);
     label$45 : {
      if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
       $2_1 = ~~$11_1;
       break label$45;
      }
      $2_1 = -2147483648;
     }
     $10_1 = ($1_1 | 0) != ($7_1 | 0);
     $11_1 = $1963($3 + 500 | 0, 0);
     label$47 : {
      if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
       $14 = ~~$11_1;
       break label$47;
      }
      $14 = -2147483648;
     }
     label$49 : {
      if ($10_1) {
       break label$49
      }
      $10_1 = $1_1 ? $1_1 + (($1_1 | 0) / 2 | 0) | 0 : 8;
      $7_1 = $7_1 + 1 | 0;
      $7_1 = ($7_1 | 0) < ($10_1 | 0) ? $10_1 : $7_1;
      if (($1_1 | 0) >= ($7_1 | 0)) {
       break label$49
      }
      $1_1 = $1944(0, 73568);
      if ($1_1) {
       $1_1 = $1_1 + 876 | 0;
       $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
      }
      $1_1 = (((wasm2js_i32$1 = Math_imul($7_1, 12), wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
      $10_1 = $1944($6_1 + 24 | 0, 0);
      if ($10_1) {
       $1602($1_1, $10_1, Math_imul($1944($6_1, 16), 12));
       $10_1 = $1944($6_1, 24);
       label$54 : {
        if (!$10_1) {
         break label$54
        }
        $12_1 = $1944(0, 73568);
        if (!$12_1) {
         break label$54
        }
        $12_1 = $12_1 + 876 | 0;
        $1973($12_1, 0, $1944($12_1, 0) - 1 | 0);
       }
       ((wasm2js_i32$2 = $10_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      }
      $1973($6_1, 20, $7_1);
      $1973($6_1, 24, $1_1);
     }
     $1_1 = $1944($6_1 + 24 | 0, 0) + Math_imul($1944($6_1, 16), 12) | 0;
     $1973($1_1, 0, $14);
     $7_1 = 1;
    }
    $1968($1_1, 10, $5_1);
    $1968($1_1, 9, $4_1);
    $1968($1_1, 8, $7_1);
    $1973($1_1, 4, $2_1);
    $4_1 = $1944($6_1, 16) + 1 | 0;
    $1973($6_1, 16, $4_1);
    if (($4_1 | 0) > 0) {
     $5_1 = $1944($0_1, 8);
     $7_1 = $5_1 - 1 | 0;
     $14 = $1944($6_1 + 24 | 0, 0);
     $19 = +$1963($0_1, 12);
     $1_1 = 0;
     while (1) {
      $2_1 = $14 + Math_imul($1_1, 12) | 0;
      if ($1937($2_1, 8)) {
       $12_1 = $2_1 + 8 | 0;
       $17_1 = +($1944($2_1, 0) | 0);
       $16_1 = +$1963($3, 212);
       $20_1 = +$1963($6_1, 4);
       $17_1 = ($17_1 - $16_1 - $20_1) / $19;
       label$58 : {
        if (Math_abs($17_1) < 2147483648.0) {
         $15_1 = ~~$17_1;
         break label$58;
        }
        $15_1 = -2147483648;
       }
       $10_1 = ($15_1 + $9 | 0) + $1936($2_1, 9) | 0;
       $10_1 = ($9 | 0) > ($10_1 | 0) ? $9 : ($7_1 | 0) > ($10_1 | 0) ? $10_1 : $7_1;
       $1973($2_1, 0, $10_1);
       $21_1 = $1936($2_1, 10) + $9 | 0;
       $15_1 = $2_1;
       $16_1 = (+($1944($2_1, 4) | 0) - $16_1 - $20_1) / $19 + .9999989867210388;
       label$60 : {
        if (Math_abs($16_1) < 2147483648.0) {
         $2_1 = ~~$16_1;
         break label$60;
        }
        $2_1 = -2147483648;
       }
       $2_1 = $2_1 + $21_1 | 0;
       $1973($15_1, 4, ($2_1 | 0) > ($10_1 | 0) ? (($2_1 | 0) < ($5_1 | 0) ? $2_1 : $5_1) : $10_1 + 1 | 0);
       $1968($12_1, 0, 0);
      }
      $1_1 = $1_1 + 1 | 0;
      if (($4_1 | 0) != ($1_1 | 0)) {
       continue
      }
      break;
     };
    }
    $3 = $1944($6_1, 8);
    $1_1 = $4_1 - $3 | 0;
    if (($1_1 | 0) < 2) {
     break label$22
    }
    while (1) {
     $4_1 = $1_1;
     $2_1 = $1_1 - 1 | 0;
     if (($1_1 | 0) > 1) {
      $10_1 = $2_1 + $3 | 0;
      $1_1 = $3;
      while (1) {
       $5_1 = $1944($6_1, 24) + Math_imul($1_1, 12) | 0;
       $7_1 = $5_1 + 12 | 0;
       if (($1944($5_1, 0) | 0) > ($1944($7_1, 0) | 0)) {
        $14 = $8 + 8 | 0;
        $12_1 = $5_1 + 8 | 0;
        $1973($14, 0, $1944($12_1, 0));
        $1983($8, 0, $1959($5_1, 0), i64toi32_i32$HIGH_BITS);
        $15_1 = $12_1;
        $12_1 = $7_1 + 8 | 0;
        $1973($15_1, 0, $1944($12_1, 0));
        $1982($5_1, 0, $1959($7_1, 0), i64toi32_i32$HIGH_BITS);
        $1973($12_1, 0, $1944($14, 0));
        $1982($7_1, 0, $1960($8, 0), i64toi32_i32$HIGH_BITS);
       }
       $1_1 = $1_1 + 1 | 0;
       if (($10_1 | 0) > ($1_1 | 0)) {
        continue
       }
       break;
      };
     }
     $1_1 = $2_1;
     if (($4_1 | 0) >= 3) {
      continue
     }
     break;
    };
    $2_1 = $1944($6_1, 16);
    $1_1 = $3 + 1 | 0;
    if (($2_1 | 0) <= ($1_1 | 0)) {
     break label$22
    }
    while (1) {
     $5_1 = $1944($6_1, 24);
     $4_1 = $5_1 + Math_imul($3, 12) | 0;
     $7_1 = $1944($4_1, 4);
     $5_1 = $5_1 + Math_imul($1_1, 12) | 0;
     $10_1 = $1944($5_1, 0);
     if (($7_1 | 0) >= ($10_1 | 0)) {
      $1_1 = $1944($4_1, 0);
      $1973($4_1, 0, ($1_1 | 0) < ($10_1 | 0) ? $1_1 : $10_1);
      $1_1 = $1944($5_1, 4);
      $1973($4_1 + 4 | 0, 0, ($1_1 | 0) < ($7_1 | 0) ? $7_1 : $1_1);
      $1603($5_1, $5_1 + 12 | 0, Math_imul($2_1 - $3 | 0, 12) - 24 | 0);
      $1973($6_1, 16, $1944($6_1, 16) - 1 | 0);
      $1_1 = $3;
     }
     $3 = $1_1;
     $2_1 = $1944($6_1, 16);
     $1_1 = $1_1 + 1 | 0;
     if (($2_1 | 0) > ($1_1 | 0)) {
      continue
     }
     break;
    };
   }
   $1_1 = $1944($6_1, 8);
   if (($1944($6_1, 16) | 0) > ($1_1 | 0)) {
    $3 = $1944($6_1 + 24 | 0, 0) + Math_imul($1_1, 12) | 0;
    $1_1 = $1944($3, 0);
    $2_1 = $1_1;
    $1_1 = ($1_1 | 0) > ($9 | 0);
    $2_1 = $1_1 ? $2_1 : $9;
    $1973($0_1, 0, $2_1);
    $3 = $1944($3, 4);
    $4_1 = $1944($0_1, 8);
    $1973($0_1, 4, ($3 | 0) < ($4_1 | 0) ? $3 : $4_1);
    if ($1_1) {
     $44($0_1, $2_1)
    }
    $1973($6_1, 8, $1944($6_1, 8) + 1 | 0);
    $2_1 = 1;
    break label$2;
   }
   $1_1 = $1944($0_1, 8);
   if (($1_1 | 0) != 2147483647) {
    $44($0_1, $1_1)
   }
   $1973($0_1, 8, -1);
   $2_1 = 0;
  }
  $0_1 = $2_1;
  global$0 = $8 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $50() {
  return $1944(0, 73568) + 5416 | 0;
 }
 
 function $51($0_1, $1_1) {
  var $2_1 = Math_fround(0), $3 = 0, $4_1 = 0, $5_1 = 0;
  $5_1 = $1944(0, 73568);
  $3 = ($5_1 + 5416 | 0) + ($0_1 << 4) | 0;
  $2_1 = $1963($3 + 204 | 0, 0);
  $2_1 = Math_fround(Math_fround(($2_1 < Math_fround(0.0) ? Math_fround(0.0) : $2_1 > Math_fround(1.0) ? Math_fround(1.0) : $2_1) * Math_fround(255.0)) + Math_fround(.5));
  label$1 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $0_1 = ~~$2_1;
    break label$1;
   }
   $0_1 = -2147483648;
  }
  $0_1 = $0_1 << 8;
  $2_1 = $1963($3 + 200 | 0, 0);
  $2_1 = Math_fround(Math_fround(($2_1 < Math_fround(0.0) ? Math_fround(0.0) : $2_1 > Math_fround(1.0) ? Math_fround(1.0) : $2_1) * Math_fround(255.0)) + Math_fround(.5));
  label$3 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $4_1 = ~~$2_1;
    break label$3;
   }
   $4_1 = -2147483648;
  }
  $0_1 = $4_1 | $0_1;
  $2_1 = $1963($3 + 208 | 0, 0);
  $2_1 = Math_fround(Math_fround(($2_1 < Math_fround(0.0) ? Math_fround(0.0) : $2_1 > Math_fround(1.0) ? Math_fround(1.0) : $2_1) * Math_fround(255.0)) + Math_fround(.5));
  label$5 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $4_1 = ~~$2_1;
    break label$5;
   }
   $4_1 = -2147483648;
  }
  $0_1 = $0_1 | $4_1 << 16;
  $1_1 = Math_fround($1963($3 + 212 | 0, 0) * Math_fround($1963($5_1, 5416) * $1_1));
  $1_1 = Math_fround(Math_fround(($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1 > Math_fround(1.0) ? Math_fround(1.0) : $1_1) * Math_fround(255.0)) + Math_fround(.5));
  label$7 : {
   if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$1_1;
    break label$7;
   }
   $3 = -2147483648;
  }
  return $0_1 | $3 << 24;
 }
 
 function $52($0_1) {
  var $1_1 = Math_fround(0), $2_1 = 0, $3 = 0;
  $1_1 = $1963($0_1, 4);
  $1_1 = Math_fround(Math_fround(($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1 > Math_fround(1.0) ? Math_fround(1.0) : $1_1) * Math_fround(255.0)) + Math_fround(.5));
  label$1 : {
   if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
    $2_1 = ~~$1_1;
    break label$1;
   }
   $2_1 = -2147483648;
  }
  $2_1 = $2_1 << 8;
  $1_1 = $1963($0_1, 0);
  $1_1 = Math_fround(Math_fround(($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1 > Math_fround(1.0) ? Math_fround(1.0) : $1_1) * Math_fround(255.0)) + Math_fround(.5));
  label$3 : {
   if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$1_1;
    break label$3;
   }
   $3 = -2147483648;
  }
  $2_1 = $3 | $2_1;
  $1_1 = $1963($0_1, 8);
  $1_1 = Math_fround(Math_fround(($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1 > Math_fround(1.0) ? Math_fround(1.0) : $1_1) * Math_fround(255.0)) + Math_fround(.5));
  label$5 : {
   if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$1_1;
    break label$5;
   }
   $3 = -2147483648;
  }
  $2_1 = $2_1 | $3 << 16;
  $1_1 = Math_fround($1963($0_1, 12) * $1963($1944(0, 73568), 5416));
  $1_1 = Math_fround(Math_fround(($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1 > Math_fround(1.0) ? Math_fround(1.0) : $1_1) * Math_fround(255.0)) + Math_fround(.5));
  label$7 : {
   if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
    $0_1 = ~~$1_1;
    break label$7;
   }
   $0_1 = -2147483648;
  }
  return $2_1 | $0_1 << 24;
 }
 
 function $53($0_1) {
  return ($1944(0, 73568) + ($0_1 << 4) | 0) + 5616 | 0;
 }
 
 function $54($0_1) {
  var $1_1 = Math_fround(0), $2_1 = 0;
  $1_1 = $1963($1944(0, 73568), 5416);
  if ($1_1 >= Math_fround(1.0)) {
   return $0_1
  }
  $2_1 = $0_1 & 16777215;
  $1_1 = Math_fround($1_1 * Math_fround($0_1 >>> 24 >>> 0));
  label$2 : {
   if ($1_1 < Math_fround(4294967296.0) & $1_1 >= Math_fround(0.0)) {
    $0_1 = ~~$1_1 >>> 0;
    break label$2;
   }
   $0_1 = 0;
  }
  return $2_1 | $0_1 << 24;
 }
 
 function $55($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $8 = global$0 - 16 | 0;
  global$0 = $8;
  $9 = $8 + 8 | 0;
  $2_1 = $1944(0, 73568);
  $6_1 = $2_1 + ($0_1 << 4) | 0;
  $1983($9, 0, $1960($6_1 + 5624 | 0, 0), i64toi32_i32$HIGH_BITS);
  $6_1 = $6_1 + 5616 | 0;
  $1983($8, 0, $1960($6_1, 0), i64toi32_i32$HIGH_BITS);
  $4_1 = $1944($2_1, 7396);
  $3 = $1944($2_1 + 7400 | 0, 0);
  label$1 : {
   if (($4_1 | 0) != ($3 | 0)) {
    break label$1
   }
   $5_1 = $4_1 + 1 | 0;
   $4_1 = 8;
   $7_1 = $3;
   $4_1 = $3 ? $3 + (($3 | 0) / 2 | 0) | 0 : $4_1;
   $3 = ($4_1 | 0) > ($5_1 | 0) ? $4_1 : $5_1;
   if (($7_1 | 0) >= ($3 | 0)) {
    break label$1
   }
   $4_1 = Math_imul($3, 20);
   if ($2_1) {
    $5_1 = $2_1 + 876 | 0;
    $1973($5_1, 0, $1944($5_1, 0) + 1 | 0);
   }
   $4_1 = (((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $5_1 = $1944($2_1 + 7404 | 0, 0);
   if ($5_1) {
    $1602($4_1, $5_1, Math_imul($1944($2_1, 7396), 20));
    $5_1 = $1944($2_1, 7404);
    label$5 : {
     if (!$5_1) {
      break label$5
     }
     $7_1 = $1944(0, 73568);
     if (!$7_1) {
      break label$5
     }
     $7_1 = $7_1 + 876 | 0;
     $1973($7_1, 0, $1944($7_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $5_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($2_1, 7400, $3);
   $1973($2_1, 7404, $4_1);
  }
  $3 = $1944($2_1 + 7404 | 0, 0) + Math_imul($1944($2_1, 7396), 20) | 0;
  $1973($3, 0, $0_1);
  $1982($3, 4, $1960($8, 0), i64toi32_i32$HIGH_BITS);
  $1982($3 + 12 | 0, 0, $1960($9, 0), i64toi32_i32$HIGH_BITS);
  $1973($2_1, 7396, $1944($2_1, 7396) + 1 | 0);
  $1986($6_1, 12, Math_fround(Math_fround($1_1 >>> 24 >>> 0) * Math_fround(.003921568859368563)));
  $1986($6_1, 8, Math_fround(Math_fround(($1_1 >>> 16 & 255) >>> 0) * Math_fround(.003921568859368563)));
  $1986($6_1, 4, Math_fround(Math_fround(($1_1 >>> 8 & 255) >>> 0) * Math_fround(.003921568859368563)));
  $1986($6_1, 0, Math_fround(Math_fround(($1_1 & 255) >>> 0) * Math_fround(.003921568859368563)));
  global$0 = $8 + 16 | 0;
 }
 
 function $56($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $9 = $7_1 + 8 | 0;
  $3 = $1944(0, 73568);
  $2_1 = $3 + ($0_1 << 4) | 0;
  $1983($9, 0, $1960($2_1 + 5624 | 0, 0), i64toi32_i32$HIGH_BITS);
  $8 = $2_1 + 5616 | 0;
  $1983($7_1, 0, $1960($8, 0), i64toi32_i32$HIGH_BITS);
  $4_1 = $1944($3, 7396);
  $2_1 = $1944($3 + 7400 | 0, 0);
  label$1 : {
   if (($4_1 | 0) != ($2_1 | 0)) {
    break label$1
   }
   $5_1 = $4_1 + 1 | 0;
   $4_1 = 8;
   $6_1 = $2_1;
   $4_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : $4_1;
   $2_1 = ($4_1 | 0) > ($5_1 | 0) ? $4_1 : $5_1;
   if (($6_1 | 0) >= ($2_1 | 0)) {
    break label$1
   }
   $4_1 = Math_imul($2_1, 20);
   if ($3) {
    $5_1 = $3 + 876 | 0;
    $1973($5_1, 0, $1944($5_1, 0) + 1 | 0);
   }
   $4_1 = (((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $5_1 = $1944($3 + 7404 | 0, 0);
   if ($5_1) {
    $1602($4_1, $5_1, Math_imul($1944($3, 7396), 20));
    $5_1 = $1944($3, 7404);
    label$5 : {
     if (!$5_1) {
      break label$5
     }
     $6_1 = $1944(0, 73568);
     if (!$6_1) {
      break label$5
     }
     $6_1 = $6_1 + 876 | 0;
     $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $5_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($3, 7400, $2_1);
   $1973($3, 7404, $4_1);
  }
  $2_1 = $1944($3 + 7404 | 0, 0) + Math_imul($1944($3, 7396), 20) | 0;
  $1973($2_1, 0, $0_1);
  $1982($2_1, 4, $1960($7_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($2_1 + 12 | 0, 0, $1960($9, 0), i64toi32_i32$HIGH_BITS);
  $1973($3, 7396, $1944($3, 7396) + 1 | 0);
  $1982($8 + 8 | 0, 0, $1959($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
  $1982($8, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
  global$0 = $7_1 + 16 | 0;
 }
 
 function $57($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0;
  if (($0_1 | 0) > 0) {
   $2_1 = $1944(0, 73568);
   while (1) {
    $1_1 = (Math_imul($1944($2_1, 7396), 20) + $1944($2_1, 7404) | 0) - 20 | 0;
    $3 = ($1944($1_1, 0) << 4) + $2_1 | 0;
    $1982($3 + 5624 | 0, 0, $1959($1_1 + 12 | 0, 0), i64toi32_i32$HIGH_BITS);
    $1982($3 + 5616 | 0, 0, $1959($1_1, 4), i64toi32_i32$HIGH_BITS);
    $1973($2_1, 7396, $1944($2_1, 7396) - 1 | 0);
    $1_1 = $0_1;
    $0_1 = $1_1 - 1 | 0;
    if (($1_1 | 0) > 1) {
     continue
    }
    break;
   };
  }
 }
 
 function $58($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  if (!(!(8206235 >>> $0_1 & 1) | ($1944(Math_imul($0_1, 12) + 20912 | 0, 0) | 0) != 8)) {
   $2_1 = $1944(0, 73568);
   $7_1 = ($2_1 + $1944(Math_imul($0_1, 12) + 20920 | 0, 0) | 0) + 5416 | 0;
   $8 = $1963($7_1, 0);
   $4_1 = $1944($2_1, 7408);
   $3 = $1944($2_1 + 7412 | 0, 0);
   label$2 : {
    if (($4_1 | 0) != ($3 | 0)) {
     break label$2
    }
    $5_1 = $4_1 + 1 | 0;
    $6_1 = $3;
    if ($3) {
     $4_1 = $3 + (($3 | 0) / 2 | 0) | 0
    } else {
     $4_1 = 8
    }
    $3 = ($4_1 | 0) > ($5_1 | 0) ? $4_1 : $5_1;
    if (($6_1 | 0) >= ($3 | 0)) {
     break label$2
    }
    $4_1 = Math_imul($3, 12);
    if ($2_1) {
     $5_1 = $2_1 + 876 | 0;
     $1973($5_1, 0, $1944($5_1, 0) + 1 | 0);
    }
    $4_1 = (((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $5_1 = $1944($2_1 + 7416 | 0, 0);
    if ($5_1) {
     $1602($4_1, $5_1, Math_imul($1944($2_1, 7408), 12));
     $5_1 = $1944($2_1, 7416);
     label$7 : {
      if (!$5_1) {
       break label$7
      }
      $6_1 = $1944(0, 73568);
      if (!$6_1) {
       break label$7
      }
      $6_1 = $6_1 + 876 | 0;
      $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $5_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($2_1, 7412, $3);
    $1973($2_1, 7416, $4_1);
   }
   $3 = $1944($2_1 + 7416 | 0, 0) + Math_imul($1944($2_1, 7408), 12) | 0;
   $1986($3, 4, $8);
   $1973($3, 0, $0_1);
   $1973($2_1, 7408, $1944($2_1, 7408) + 1 | 0);
   $1986($7_1, 0, $1_1);
  }
 }
 
 function $59($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  if (!(!(25348196 >>> $0_1 & 1) | ($1944(Math_imul($0_1, 12) + 20912 | 0, 0) | 0) != 8)) {
   $2_1 = $1944(0, 73568);
   $7_1 = ($2_1 + $1944(Math_imul($0_1, 12) + 20920 | 0, 0) | 0) + 5416 | 0;
   $8 = $1959($7_1, 0);
   $9 = i64toi32_i32$HIGH_BITS;
   $4_1 = $1944($2_1, 7408);
   $3 = $1944($2_1 + 7412 | 0, 0);
   label$2 : {
    if (($4_1 | 0) != ($3 | 0)) {
     break label$2
    }
    $5_1 = $4_1 + 1 | 0;
    $6_1 = $3;
    if ($3) {
     $4_1 = $3 + (($3 | 0) / 2 | 0) | 0
    } else {
     $4_1 = 8
    }
    $3 = ($4_1 | 0) > ($5_1 | 0) ? $4_1 : $5_1;
    if (($6_1 | 0) >= ($3 | 0)) {
     break label$2
    }
    $4_1 = Math_imul($3, 12);
    if ($2_1) {
     $5_1 = $2_1 + 876 | 0;
     $1973($5_1, 0, $1944($5_1, 0) + 1 | 0);
    }
    $4_1 = (((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $5_1 = $1944($2_1 + 7416 | 0, 0);
    if ($5_1) {
     $1602($4_1, $5_1, Math_imul($1944($2_1, 7408), 12));
     $5_1 = $1944($2_1, 7416);
     label$7 : {
      if (!$5_1) {
       break label$7
      }
      $6_1 = $1944(0, 73568);
      if (!$6_1) {
       break label$7
      }
      $6_1 = $6_1 + 876 | 0;
      $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $5_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($2_1, 7412, $3);
    $1973($2_1, 7416, $4_1);
   }
   $3 = $1944($2_1 + 7416 | 0, 0) + Math_imul($1944($2_1, 7408), 12) | 0;
   $1973($3, 8, $9);
   $1973($3, 4, $8);
   $1973($3, 0, $0_1);
   $1973($2_1, 7408, $1944($2_1, 7408) + 1 | 0);
   $1982($7_1, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
  }
 }
 
 function $60($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  if (($0_1 | 0) > 0) {
   $2_1 = $1944(0, 73568);
   $7_1 = $2_1 + 5416 | 0;
   $8 = $1944($2_1 + 7416 | 0, 0);
   $3 = $1944($2_1, 7408);
   while (1) {
    $5_1 = $0_1;
    $3 = $3 - 1 | 0;
    $0_1 = Math_imul($3, 12) + $8 | 0;
    $4_1 = $1944($0_1, 0);
    $1_1 = Math_imul($4_1, 12);
    $6_1 = ($1944($1_1 + 20912 | 0, 0) | 0) != 8;
    label$3 : {
     if ($6_1) {
      break label$3
     }
     $1_1 = $1944($1_1 + 20920 | 0, 0) + $7_1 | 0;
     if (8206235 >>> $4_1 & 1) {
      $1986($1_1, 0, $1963($0_1, 4));
      break label$3;
     }
     if (!(25348196 >>> $4_1 & 1) | $6_1) {
      break label$3
     }
     $1986($1_1, 0, $1963($0_1, 4));
     $1986($1_1, 4, $1963($0_1 + 8 | 0, 0));
    }
    $1973($2_1, 7408, $3);
    $0_1 = $5_1 - 1 | 0;
    if (($5_1 | 0) > 1) {
     continue
    }
    break;
   };
  }
 }
 
 function $62($0_1) {
  var $1_1 = 0;
  if (($0_1 | 0) == -1) {
   return $0_1
  }
  while (1) {
   label$3 : {
    $1_1 = $1937($0_1, 0);
    if (($1_1 | 0) != 35) {
     if ($1_1) {
      break label$3
     }
     return $0_1;
    }
    if (($1937($0_1, 1) | 0) != 35) {
     break label$3
    }
    return $0_1;
   }
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != -1) {
    continue
   }
   break;
  };
  return -1;
 }
 
 function $63($0_1, $1_1, $2_1, $3) {
  var $4_1 = Math_fround(0), $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $5_1 = $1944(0, 73568);
  $8 = $1944($5_1, 7080);
  label$1 : {
   if ($3) {
    $3 = $1_1;
    $6_1 = $2_1 ? $2_1 : -1;
    if ($1_1 >>> 0 >= $6_1 >>> 0) {
     break label$1
    }
    $3 = $6_1;
    $2_1 = $1_1;
    while (1) {
     label$4 : {
      $7_1 = $1937($2_1, 0);
      if (($7_1 | 0) != 35) {
       if ($7_1) {
        break label$4
       }
       $3 = $2_1;
       break label$1;
      }
      if (($1937($2_1, 1) | 0) != 35) {
       break label$4
      }
      $3 = $2_1;
      break label$1;
     }
     $2_1 = $2_1 + 1 | 0;
     if (($6_1 | 0) != ($2_1 | 0)) {
      continue
     }
     break;
    };
    break label$1;
   }
   $3 = $2_1;
   if ($2_1) {
    break label$1
   }
   $3 = $1697($1_1) + $1_1 | 0;
  }
  $2_1 = $3;
  label$6 : {
   if (($2_1 | 0) == ($1_1 | 0)) {
    break label$6
   }
   $4_1 = $1963($5_1 + 5620 | 0, 0);
   $4_1 = Math_fround(Math_fround(($4_1 < Math_fround(0.0) ? Math_fround(0.0) : $4_1 > Math_fround(1.0) ? Math_fround(1.0) : $4_1) * Math_fround(255.0)) + Math_fround(.5));
   label$7 : {
    if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
     $3 = ~~$4_1;
     break label$7;
    }
    $3 = -2147483648;
   }
   $6_1 = $3 << 8;
   $4_1 = $1963($5_1 + 5616 | 0, 0);
   $4_1 = Math_fround(Math_fround(($4_1 < Math_fround(0.0) ? Math_fround(0.0) : $4_1 > Math_fround(1.0) ? Math_fround(1.0) : $4_1) * Math_fround(255.0)) + Math_fround(.5));
   label$9 : {
    if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
     $3 = ~~$4_1;
     break label$9;
    }
    $3 = -2147483648;
   }
   $6_1 = $3 | $6_1;
   $4_1 = $1963($5_1 + 5624 | 0, 0);
   $4_1 = Math_fround(Math_fround(($4_1 < Math_fround(0.0) ? Math_fround(0.0) : $4_1 > Math_fround(1.0) ? Math_fround(1.0) : $4_1) * Math_fround(255.0)) + Math_fround(.5));
   label$11 : {
    if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
     $3 = ~~$4_1;
     break label$11;
    }
    $3 = -2147483648;
   }
   $6_1 = $6_1 | $3 << 16;
   $4_1 = Math_fround($1963($5_1 + 5628 | 0, 0) * $1963($5_1, 5416));
   $4_1 = Math_fround(Math_fround(($4_1 < Math_fround(0.0) ? Math_fround(0.0) : $4_1 > Math_fround(1.0) ? Math_fround(1.0) : $4_1) * Math_fround(255.0)) + Math_fround(.5));
   label$13 : {
    if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
     $3 = ~~$4_1;
     break label$13;
    }
    $3 = -2147483648;
   }
   $413($1944($8, 580), $1944($5_1, 6464), $1963($5_1, 6468), $0_1, $6_1 | $3 << 24, $1_1, $2_1, Math_fround(0.0), 0);
   if (!$1937($5_1, 12196)) {
    break label$6
   }
   $64($0_1, $1_1, $2_1);
  }
 }
 
 function $64($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  while (1) {
   $3 = $1_1;
   $4_1 = $1944(0, 73568);
   $8 = $1944($4_1, 12224);
   $1973($4_1, 12224, 0);
   $5_1 = $1944($4_1, 12220);
   $1973($4_1, 12220, 0);
   $7_1 = $1944($4_1, 7080);
   label$2 : {
    if ($2_1) {
     break label$2
    }
    $2_1 = $3;
    if (($1_1 | 0) == -1) {
     break label$2
    }
    while (1) {
     label$4 : {
      $2_1 = $1937($1_1, 0);
      if (($2_1 | 0) != 35) {
       if ($2_1) {
        break label$4
       }
       $2_1 = $1_1;
       break label$2;
      }
      if (($1937($1_1, 1) | 0) != 35) {
       break label$4
      }
      $2_1 = $1_1;
      break label$2;
     }
     $2_1 = -1;
     $1_1 = $1_1 + 1 | 0;
     if (($1_1 | 0) != -1) {
      continue
     }
     break;
    };
   }
   if ($0_1) {
    $1_1 = $1963($0_1, 4) > Math_fround(Math_fround($1963($4_1, 12228) + $1963($4_1 + 5480 | 0, 0)) + Math_fround(1.0))
   } else {
    $1_1 = 0
   }
   if ($0_1) {
    $1986($4_1, 12228, $1963($0_1, 4))
   }
   if ($1_1) {
    $65(19353, 0);
    $1968($4_1, 12232, 1);
   }
   if ($5_1) {
    $64($0_1, $5_1, $1697($5_1) + $5_1 | 0)
   }
   $5_1 = $1944($4_1, 12236);
   $1_1 = $1944($7_1 + 344 | 0, 0);
   if (($5_1 | 0) > ($1_1 | 0)) {
    $1973($4_1, 12236, $1_1)
   }
   $5_1 = $1_1 - $1944($4_1, 12236) << 2;
   $1_1 = $3;
   while (1) {
    $3 = $1644($1_1, 10, $2_1 - $1_1 | 0);
    $3 = $3 ? $3 : $2_1;
    label$13 : {
     if (($1_1 | 0) == ($3 | 0) & ($2_1 | 0) == ($3 | 0)) {
      break label$13
     }
     $7_1 = $1937($4_1, 12232);
     $1973($6_1, 4, 19354);
     $1973($6_1, 0, $7_1 ? $5_1 : 1);
     $1973($6_1, 12, $1_1);
     $1973($6_1, 8, $3 - $1_1 | 0);
     $65(5442, $6_1);
     $1968($4_1, 12232, 0);
     if (($1937($3, 0) | 0) != 10) {
      break label$13
     }
     $65(19353, 0);
     $1968($4_1, 12232, 1);
    }
    $7_1 = $3 + 1 | 0;
    $3 = ($2_1 | 0) != ($3 | 0);
    $1_1 = $3 ? $7_1 : $1_1;
    if ($3) {
     continue
    }
    break;
   };
   if ($8) {
    $1_1 = $8;
    $2_1 = $1_1 + $1697($1_1) | 0;
    continue;
   }
   break;
  };
  global$0 = $6_1 + 16 | 0;
 }
 
 function $65($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $3 = $1944(0, 73568);
  if ($1937($3, 12196)) {
   $1973($5_1, 12, $1_1);
   $7_1 = $3 + 12208 | 0;
   __inlined_func$340 : {
    if ($1944($3, 12204)) {
     $4_1 = $1944($3 + 12212 | 0, 0);
     label$2 : {
      if (($4_1 | 0) >= 0) {
       break label$2
      }
      $2_1 = $4_1 + (($4_1 | 0) / 2 | 0) | 0;
      $6_1 = ($2_1 | 0) > 0 ? $2_1 : 0;
      if (($4_1 | 0) >= ($6_1 | 0)) {
       break label$2
      }
      $2_1 = $1944(0, 73568);
      if ($2_1) {
       $2_1 = $2_1 + 876 | 0;
       $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
      }
      $8 = (((wasm2js_i32$1 = $6_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
      $2_1 = $1944($3 + 12216 | 0, 0);
      if ($2_1) {
       $1602($8, $2_1, $1944($3, 12208));
       $4_1 = $1944($3, 12216);
       label$5 : {
        if (!$4_1) {
         break label$5
        }
        $2_1 = $1944(0, 73568);
        if (!$2_1) {
         break label$5
        }
        $2_1 = $2_1 + 876 | 0;
        $1973($2_1, 0, $1944($2_1, 0) - 1 | 0);
       }
       ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      }
      $1973($3, 12212, $6_1);
      $1973($3, 12216, $8);
     }
     $1973($3, 12208, 0);
     $41($7_1, $0_1, $1_1);
     $0_1 = $1944($3 + 12216 | 0, 0);
     $2_1 = $0_1 ? $0_1 : 73572;
     $1_1 = $1944($3, 12208);
     $0_1 = $1_1 - 1 | 0;
     $1633($2_1, $0_1 >>> 0 <= $1_1 >>> 0 ? $0_1 : 0, $1944($3, 12204));
     break __inlined_func$340;
    }
    $41($7_1, $0_1, $1_1);
   }
  }
  global$0 = $5_1 + 16 | 0;
 }
 
 function $67($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  var $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = 0, $12_1 = Math_fround(0), $13 = Math_fround(0);
  $9 = global$0 - 32 | 0;
  global$0 = $9;
  $1983($9, 24, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
  label$1 : {
   if ($5_1) {
    $1983($9, 16, $1959($5_1, 0), i64toi32_i32$HIGH_BITS);
    break label$1;
   }
   $5_1 = $1944(0, 73568);
   $8 = $1963($5_1, 6468);
   if (($3 | 0) == ($4_1 | 0)) {
    $1986($9, 20, $8);
    $1973($9, 16, 0);
    break label$1;
   }
   $474($9 + 16 | 0, $1944($5_1, 6464), $8, Math_fround(3402823466385288598117041.0e14), Math_fround(0.0), $3, $4_1, 0);
   $8 = Math_fround($1963($9, 16) + Math_fround(.9999899864196777));
   label$4 : {
    if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
     $5_1 = ~~$8;
     break label$4;
    }
    $5_1 = -2147483648;
   }
   $1986($9, 16, Math_fround($5_1 | 0));
  }
  $8 = $1963($9, 24);
  $10_1 = $1963($9, 16);
  $11_1 = $7_1 ? $7_1 + 8 | 0 : $2_1;
  $12_1 = $1963($11_1, 0);
  $5_1 = 1;
  label$6 : {
   if ($12_1 <= Math_fround($8 + $10_1)) {
    break label$6
   }
   $5_1 = Math_fround($1963($9, 28) + $1963($9, 20)) >= $1963($11_1, 4);
  }
  $1_1 = $7_1 ? $7_1 : $1_1;
  if ($7_1) {
   $7_1 = 1;
   if (!($1963($1_1, 0) > $8)) {
    $7_1 = $1963($9, 28) < $1963($1_1, 4)
   }
   $5_1 = ($7_1 | $5_1) != 0;
  }
  $7_1 = $5_1;
  $13 = $1963($6_1, 0);
  if ($13 > Math_fround(0.0)) {
   $10_1 = Math_fround(Math_fround(Math_fround(Math_fround($1963($2_1, 0) - $8) - $10_1) * $13) + $8);
   $1986($9, 24, $8 >= $10_1 ? $8 : $10_1);
  }
  $10_1 = $1963($6_1, 4);
  if ($10_1 > Math_fround(0.0)) {
   $8 = $1963($9, 28);
   $10_1 = Math_fround($8 + Math_fround(Math_fround(Math_fround($1963($2_1, 4) - $8) - $1963($9, 20)) * $10_1));
   $1986($9, 28, $8 >= $10_1 ? $8 : $10_1);
  }
  label$12 : {
   if ($7_1) {
    $1_1 = $1959($1_1, 0);
    $2_1 = i64toi32_i32$HIGH_BITS;
    $1986($9, 12, $1963($11_1, 4));
    $1986($9, 8, $12_1);
    $1982($9, 0, $1_1, $2_1);
    $2_1 = $1944(0, 73568);
    $8 = $1963($2_1 + 5620 | 0, 0);
    $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
    label$14 : {
     if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
      $1_1 = ~~$8;
      break label$14;
     }
     $1_1 = -2147483648;
    }
    $1_1 = $1_1 << 8;
    $8 = $1963($2_1 + 5616 | 0, 0);
    $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
    label$16 : {
     if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
      $5_1 = ~~$8;
      break label$16;
     }
     $5_1 = -2147483648;
    }
    $1_1 = $5_1 | $1_1;
    $8 = $1963($2_1 + 5624 | 0, 0);
    $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
    label$18 : {
     if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
      $5_1 = ~~$8;
      break label$18;
     }
     $5_1 = -2147483648;
    }
    $1_1 = $1_1 | $5_1 << 16;
    $5_1 = $9 + 24 | 0;
    $8 = Math_fround($1963($2_1 + 5628 | 0, 0) * $1963($2_1, 5416));
    $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
    label$20 : {
     if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
      $2_1 = ~~$8;
      break label$20;
     }
     $2_1 = -2147483648;
    }
    $413($0_1, 0, Math_fround(0.0), $5_1, $1_1 | $2_1 << 24, $3, $4_1, Math_fround(0.0), $9);
    break label$12;
   }
   $2_1 = $1944(0, 73568);
   $8 = $1963($2_1 + 5620 | 0, 0);
   $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
   label$22 : {
    if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
     $1_1 = ~~$8;
     break label$22;
    }
    $1_1 = -2147483648;
   }
   $1_1 = $1_1 << 8;
   $8 = $1963($2_1 + 5616 | 0, 0);
   $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
   label$24 : {
    if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
     $5_1 = ~~$8;
     break label$24;
    }
    $5_1 = -2147483648;
   }
   $1_1 = $5_1 | $1_1;
   $8 = $1963($2_1 + 5624 | 0, 0);
   $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
   label$26 : {
    if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
     $5_1 = ~~$8;
     break label$26;
    }
    $5_1 = -2147483648;
   }
   $1_1 = $1_1 | $5_1 << 16;
   $5_1 = $9 + 24 | 0;
   $8 = Math_fround($1963($2_1 + 5628 | 0, 0) * $1963($2_1, 5416));
   $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
   label$28 : {
    if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$8;
     break label$28;
    }
    $2_1 = -2147483648;
   }
   $413($0_1, 0, Math_fround(0.0), $5_1, $1_1 | $2_1 << 24, $3, $4_1, Math_fround(0.0), 0);
  }
  global$0 = $9 + 32 | 0;
 }
 
 function $68($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = Math_fround(0);
  $6_1 = $1944(0, 73568);
  label$1 : {
   if (!$3) {
    $3 = $2_1;
    break label$1;
   }
   $3 = $1_1;
   $5_1 = $2_1 ? $2_1 : -1;
   if ($1_1 >>> 0 >= $5_1 >>> 0) {
    break label$1
   }
   $3 = $5_1;
   $2_1 = $1_1;
   while (1) {
    label$4 : {
     $7_1 = $1937($2_1, 0);
     if (($7_1 | 0) != 35) {
      if ($7_1) {
       break label$4
      }
      $3 = $2_1;
      break label$1;
     }
     if (($1937($2_1, 1) | 0) != 35) {
      break label$4
     }
     $3 = $2_1;
     break label$1;
    }
    $2_1 = $2_1 + 1 | 0;
    if (($5_1 | 0) != ($2_1 | 0)) {
     continue
    }
    break;
   };
  }
  $8 = $1963($6_1, 6468);
  if (($1_1 | 0) == ($3 | 0)) {
   $1986($0_1, 4, $8);
   $1973($0_1, 0, 0);
   return;
  }
  $474($0_1, $1944($6_1, 6464), $8, Math_fround(3402823466385288598117041.0e14), $4_1, $1_1, $3, 0);
  $4_1 = Math_fround($1963($0_1, 0) + Math_fround(.9999899864196777));
  label$7 : {
   if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
    $1_1 = ~~$4_1;
    break label$7;
   }
   $1_1 = -2147483648;
  }
  $1986($0_1, 0, Math_fround($1_1 | 0));
 }
 
 function $69($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  var $7_1 = 0, $8 = 0, $9 = 0;
  $7_1 = $2_1;
  $8 = $3 ? $3 : -1;
  label$1 : {
   if ($2_1 >>> 0 >= $8 >>> 0) {
    break label$1
   }
   $7_1 = $8;
   $3 = $2_1;
   while (1) {
    label$3 : {
     $9 = $1937($3, 0);
     if (($9 | 0) != 35) {
      if ($9) {
       break label$3
      }
      $7_1 = $3;
      break label$1;
     }
     if (($1937($3, 1) | 0) != 35) {
      break label$3
     }
     $7_1 = $3;
     break label$1;
    }
    $3 = $3 + 1 | 0;
    if (($8 | 0) != ($3 | 0)) {
     continue
    }
    break;
   };
  }
  label$5 : {
   if (($2_1 | 0) == ($7_1 | 0)) {
    break label$5
   }
   $3 = $1944(0, 73568);
   $67($1944($1944($3, 7080), 580), $0_1, $1_1, $2_1, $7_1, $4_1, $5_1, $6_1);
   if (!$1937($3, 12196)) {
    break label$5
   }
   $64($0_1, $2_1, $7_1);
  }
 }
 
 function $70($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  var $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = 0, $13 = 0, $14 = 0, $15_1 = Math_fround(0), $16_1 = 0, $17_1 = 0, $18_1 = Math_fround(0), $19 = Math_fround(0), $20_1 = Math_fround(0);
  $8 = global$0 - 48 | 0;
  global$0 = $8;
  $9 = $6_1;
  label$1 : {
   if ($6_1) {
    break label$1
   }
   $9 = $5_1;
   if (($9 | 0) == -1) {
    break label$1
   }
   $6_1 = $5_1;
   while (1) {
    label$3 : {
     $9 = $1937($6_1, 0);
     if (($9 | 0) != 35) {
      if ($9) {
       break label$3
      }
      $9 = $6_1;
      break label$1;
     }
     if (($1937($6_1, 1) | 0) != 35) {
      break label$3
     }
     $9 = $6_1;
     break label$1;
    }
    $9 = -1;
    $6_1 = $6_1 + 1 | 0;
    if (($6_1 | 0) != -1) {
     continue
    }
    break;
   };
  }
  $14 = $9;
  $16_1 = $1944(0, 73568);
  label$5 : {
   if ($7_1) {
    $1983($8, 40, $1959($7_1, 0), i64toi32_i32$HIGH_BITS);
    break label$5;
   }
   $10_1 = $1963($16_1, 6468);
   if (($5_1 | 0) == ($14 | 0)) {
    $1986($8, 44, $10_1);
    $1973($8, 40, 0);
    break label$5;
   }
   $474($8 + 40 | 0, $1944($16_1, 6464), $10_1, Math_fround(3402823466385288598117041.0e14), Math_fround(0.0), $5_1, $14, 0);
   $10_1 = Math_fround($1963($8, 40) + Math_fround(.9999899864196777));
   label$8 : {
    if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
     $6_1 = ~~$10_1;
     break label$8;
    }
    $6_1 = -2147483648;
   }
   $1986($8, 40, Math_fround($6_1 | 0));
  }
  label$10 : {
   if ($1963($8, 40) > Math_fround($1963($2_1, 0) - $1963($1_1, 0))) {
    $6_1 = $1944($0_1, 44);
    $15_1 = $1963($6_1, 12);
    $13 = $1944($6_1, 8);
    $1973($8, 36, 0);
    $6_1 = 1;
    $9 = $1941($13, 60);
    $12_1 = ($9 | 0) != 65535;
    if (!$12_1) {
     $9 = $1941($13, 62);
     $6_1 = 3;
    }
    $7_1 = $6_1;
    $6_1 = $9;
    $9 = $472($13, $6_1 & 65535);
    $10_1 = $1963($9, 16);
    if ($12_1) {
     $11_1 = $10_1
    } else {
     $11_1 = Math_fround($1963($1944($0_1, 44), 12) / $1963($13, 16));
     $10_1 = Math_fround($11_1 + Math_fround($10_1 - $1963($9, 8)));
     $11_1 = Math_fround(Math_fround($10_1 * Math_fround($7_1 | 0)) - $11_1);
    }
    $18_1 = $10_1;
    $10_1 = $1963($2_1, 0);
    $10_1 = Math_fround(Math_fround(($4_1 <= $10_1 ? $10_1 : $4_1) - $11_1) - $1963($1_1, 0));
    $474($8 + 28 | 0, $13, $15_1, $10_1 >= Math_fround(1.0) ? $10_1 : Math_fround(1.0), Math_fround(0.0), $5_1, $14, $8 + 36 | 0);
    $10_1 = $1963($8, 28);
    $9 = $1944($8, 36);
    if (!(($5_1 | 0) != ($9 | 0) | $9 >>> 0 >= $14 >>> 0)) {
     $1973($8, 28, 0);
     $12_1 = $8 + 28 | 0;
     $9 = $10($12_1, $5_1, $14) + $5_1 | 0;
     $1973($8, 36, $9);
     $474($12_1, $13, $15_1, Math_fround(3402823466385288598117041.0e14), Math_fround(0.0), $5_1, $9, 0);
     $10_1 = $1963($8, 28);
    }
    $9 = $1944($8, 36);
    label$17 : {
     if ($5_1 >>> 0 >= $9 >>> 0) {
      break label$17
     }
     while (1) {
      $12_1 = $9 - 1 | 0;
      $17_1 = $1937($12_1, 0);
      if (!(($17_1 | 0) == 32 | ($17_1 | 0) == 9)) {
       break label$17
      }
      $1973($8, 36, $12_1);
      $474($8 + 28 | 0, $13, $15_1, Math_fround(3402823466385288598117041.0e14), Math_fround(0.0), $12_1, $9, 0);
      $9 = $1944($8, 36);
      $10_1 = Math_fround($10_1 - $1963($8, 28));
      if ($5_1 >>> 0 < $9 >>> 0) {
       continue
      }
      break;
     };
    }
    $1986($8, 32, $1963($2_1, 4));
    $1986($8, 28, $3);
    $1982($8, 20, 0, 0);
    $67($0_1, $1_1, $8 + 28 | 0, $5_1, $9, $8 + 40 | 0, $8 + 20 | 0, 0);
    $10_1 = Math_fround($10_1 + $1963($1_1, 0));
    if (!(Math_fround($11_1 + $10_1) <= $4_1)) {
     break label$10
    }
    $12_1 = $6_1 & 65535;
    $6_1 = 0;
    while (1) {
     $2_1 = $6_1;
     $1986($8, 16, $1963($1_1, 4));
     $6_1 = $1944(0, 73568);
     $1986($8, 12, $10_1);
     $19 = $1963($6_1 + 5628 | 0, 0);
     $3 = $1963($6_1 + 5624 | 0, 0);
     $4_1 = $1963($6_1 + 5616 | 0, 0);
     $11_1 = $1963($6_1 + 5620 | 0, 0);
     $20_1 = $1963($6_1, 5416);
     $1983($8, 0, $1959($8, 12), i64toi32_i32$HIGH_BITS);
     $11_1 = Math_fround(Math_fround(($11_1 < Math_fround(0.0) ? Math_fround(0.0) : $11_1 > Math_fround(1.0) ? Math_fround(1.0) : $11_1) * Math_fround(255.0)) + Math_fround(.5));
     label$22 : {
      if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
       $6_1 = ~~$11_1;
       break label$22;
      }
      $6_1 = -2147483648;
     }
     $6_1 = $6_1 << 8;
     $4_1 = Math_fround(Math_fround(($4_1 < Math_fround(0.0) ? Math_fround(0.0) : $4_1 > Math_fround(1.0) ? Math_fround(1.0) : $4_1) * Math_fround(255.0)) + Math_fround(.5));
     label$24 : {
      if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
       $9 = ~~$4_1;
       break label$24;
      }
      $9 = -2147483648;
     }
     $6_1 = $9 | $6_1;
     $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
     label$26 : {
      if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
       $9 = ~~$3;
       break label$26;
      }
      $9 = -2147483648;
     }
     $6_1 = $6_1 | $9 << 16;
     $3 = Math_fround($19 * $20_1);
     $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
     label$28 : {
      if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
       $9 = ~~$3;
       break label$28;
      }
      $9 = -2147483648;
     }
     $475($13, $0_1, $15_1, $8, $6_1 | $9 << 24, $12_1);
     $10_1 = Math_fround($18_1 + $10_1);
     $6_1 = $2_1 + 1 | 0;
     if (($7_1 | 0) != ($6_1 | 0)) {
      continue
     }
     break;
    };
    break label$10;
   }
   $1986($8, 32, $1963($2_1, 4));
   $1986($8, 28, $3);
   $1982($8, 20, 0, 0);
   $67($0_1, $1_1, $8 + 28 | 0, $5_1, $14, $8 + 40 | 0, $8 + 20 | 0, 0);
  }
  if ($1937($16_1, 12196)) {
   $64($1_1, $5_1, $14)
  }
  global$0 = $8 + 48 | 0;
 }
 
 function $71($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = Math_fround(0), $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = Math_fround(0);
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $6_1 = $1944(0, 73568);
  $9 = $1944($6_1, 7080);
  $401($1944($9, 580), $0_1, $1_1, $2_1, $4_1, 0);
  label$1 : {
   if (!$3) {
    break label$1
   }
   $10_1 = $1963($6_1 + 5488 | 0, 0);
   if (!($10_1 > Math_fround(0.0))) {
    break label$1
   }
   $6_1 = $1944($9, 580);
   $5_1 = $1963($0_1, 0);
   $1986($7_1, 12, Math_fround($1963($0_1, 4) + Math_fround(1.0)));
   $1986($7_1, 8, Math_fround($5_1 + Math_fround(1.0)));
   $5_1 = $1963($1_1, 0);
   $1986($7_1, 4, Math_fround($1963($1_1, 4) + Math_fround(1.0)));
   $1986($7_1, 0, Math_fround($5_1 + Math_fround(1.0)));
   $3 = $1944(0, 73568);
   $5_1 = $1963($3 + 5716 | 0, 0);
   $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
   label$2 : {
    if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$5_1;
     break label$2;
    }
    $2_1 = -2147483648;
   }
   $2_1 = $2_1 << 8;
   $5_1 = $1963($3 + 5712 | 0, 0);
   $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
   label$4 : {
    if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
     $8 = ~~$5_1;
     break label$4;
    }
    $8 = -2147483648;
   }
   $2_1 = $8 | $2_1;
   $5_1 = $1963($3 + 5720 | 0, 0);
   $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
   label$6 : {
    if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
     $8 = ~~$5_1;
     break label$6;
    }
    $8 = -2147483648;
   }
   $2_1 = $2_1 | $8 << 16;
   $8 = $7_1 + 8 | 0;
   $5_1 = Math_fround($1963($3 + 5724 | 0, 0) * $1963($3, 5416));
   $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
   label$8 : {
    if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
     $3 = ~~$5_1;
     break label$8;
    }
    $3 = -2147483648;
   }
   $400($6_1, $8, $7_1, $2_1 | $3 << 24, $4_1, 0, $10_1);
   $6_1 = $1944(0, 73568);
   $5_1 = $1963($6_1 + 5700 | 0, 0);
   $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
   label$10 : {
    if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$5_1;
     break label$10;
    }
    $2_1 = -2147483648;
   }
   $3 = $2_1 << 8;
   $5_1 = $1963($6_1 + 5696 | 0, 0);
   $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
   label$12 : {
    if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$5_1;
     break label$12;
    }
    $2_1 = -2147483648;
   }
   $3 = $2_1 | $3;
   $5_1 = $1963($6_1 + 5704 | 0, 0);
   $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
   label$14 : {
    if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$5_1;
     break label$14;
    }
    $2_1 = -2147483648;
   }
   $3 = $3 | $2_1 << 16;
   $5_1 = Math_fround($1963($6_1 + 5708 | 0, 0) * $1963($6_1, 5416));
   $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
   label$16 : {
    if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$5_1;
     break label$16;
    }
    $2_1 = -2147483648;
   }
   $400($1944($9, 580), $0_1, $1_1, $3 | $2_1 << 24, $4_1, 0, $10_1);
  }
  global$0 = $7_1 + 16 | 0;
 }
 
 function $72($0_1, $1_1, $2_1) {
  var $3 = Math_fround(0), $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = Math_fround(0), $10_1 = 0;
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $4_1 = $1944(0, 73568);
  $9 = $1963($4_1 + 5488 | 0, 0);
  if ($9 > Math_fround(0.0)) {
   $10_1 = $1944($4_1, 7080);
   $6_1 = $1944($10_1, 580);
   $3 = $1963($0_1, 0);
   $1986($7_1, 12, Math_fround($1963($0_1, 4) + Math_fround(1.0)));
   $1986($7_1, 8, Math_fround($3 + Math_fround(1.0)));
   $3 = $1963($1_1, 0);
   $1986($7_1, 4, Math_fround($1963($1_1, 4) + Math_fround(1.0)));
   $1986($7_1, 0, Math_fround($3 + Math_fround(1.0)));
   $3 = $1963($4_1 + 5716 | 0, 0);
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$2 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $5_1 = ~~$3;
     break label$2;
    }
    $5_1 = -2147483648;
   }
   $5_1 = $5_1 << 8;
   $3 = $1963($4_1 + 5712 | 0, 0);
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$4 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $8 = ~~$3;
     break label$4;
    }
    $8 = -2147483648;
   }
   $5_1 = $8 | $5_1;
   $3 = $1963($4_1 + 5720 | 0, 0);
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$6 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $8 = ~~$3;
     break label$6;
    }
    $8 = -2147483648;
   }
   $5_1 = $5_1 | $8 << 16;
   $8 = $7_1 + 8 | 0;
   $3 = Math_fround($1963($4_1 + 5724 | 0, 0) * $1963($4_1, 5416));
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$8 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $4_1 = ~~$3;
     break label$8;
    }
    $4_1 = -2147483648;
   }
   $400($6_1, $8, $7_1, $5_1 | $4_1 << 24, $2_1, 0, $9);
   $4_1 = $1944(0, 73568);
   $3 = $1963($4_1 + 5700 | 0, 0);
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$10 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $6_1 = ~~$3;
     break label$10;
    }
    $6_1 = -2147483648;
   }
   $6_1 = $6_1 << 8;
   $3 = $1963($4_1 + 5696 | 0, 0);
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$12 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $5_1 = ~~$3;
     break label$12;
    }
    $5_1 = -2147483648;
   }
   $6_1 = $5_1 | $6_1;
   $3 = $1963($4_1 + 5704 | 0, 0);
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$14 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $5_1 = ~~$3;
     break label$14;
    }
    $5_1 = -2147483648;
   }
   $6_1 = $6_1 | $5_1 << 16;
   $3 = Math_fround($1963($4_1 + 5708 | 0, 0) * $1963($4_1, 5416));
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$16 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $4_1 = ~~$3;
     break label$16;
    }
    $4_1 = -2147483648;
   }
   $400($1944($10_1, 580), $0_1, $1_1, $6_1 | $4_1 << 24, $2_1, 0, $9);
  }
  global$0 = $7_1 + 16 | 0;
 }
 
 function $73($0_1, $1_1, $2_1) {
  var $3 = Math_fround(0), $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = 0, $12_1 = 0, $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = 0, $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = 0, $19 = 0;
  $4_1 = global$0 + -64 | 0;
  global$0 = $4_1;
  $5_1 = $1944(0, 73568);
  label$1 : {
   if (($1944($5_1, 7512) | 0) != ($1_1 | 0)) {
    break label$1
   }
   if (!($2_1 & 4)) {
    if ($1937($5_1, 7570) & 255) {
     break label$1
    }
   }
   $1_1 = $1944($5_1, 7080);
   if ($1937($1_1 + 304 | 0, 0)) {
    break label$1
   }
   if (!($2_1 & 8)) {
    $16_1 = $1963($5_1 + 5484 | 0, 0)
   }
   $11_1 = $4_1 + 56 | 0;
   $1983($11_1, 0, $1959($0_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1983($4_1, 48, $1959($0_1, 0), i64toi32_i32$HIGH_BITS);
   $3 = $1963($1_1 + 500 | 0, 0);
   $6_1 = $1963($4_1, 48);
   $13 = $1963($1_1, 496);
   $10_1 = $6_1 >= $13 ? $6_1 : $13;
   $1986($4_1, 48, $10_1);
   $6_1 = $1963($4_1, 52);
   $1986($4_1, 52, $3 <= $6_1 ? $6_1 : $3);
   $6_1 = $1963($1_1 + 504 | 0, 0);
   $0_1 = $4_1 + 60 | 0;
   $7_1 = $1963($0_1, 0);
   $14 = $1963($1_1 + 508 | 0, 0);
   $7_1 = $7_1 < $14 ? $7_1 : $14;
   $1986($0_1, 0, $7_1);
   $8 = $1963($11_1, 0);
   $8 = $6_1 > $8 ? $8 : $6_1;
   $1986($11_1, 0, $8);
   label$4 : {
    if (!($2_1 & 1)) {
     break label$4
    }
    $17_1 = Math_fround($1963($4_1, 52) + Math_fround(-4.0));
    $1986($4_1, 52, $17_1);
    $10_1 = Math_fround($10_1 + Math_fround(-4.0));
    $1986($4_1, 48, $10_1);
    $8 = Math_fround($8 + Math_fround(4.0));
    $1986($4_1, 56, $8);
    $7_1 = Math_fround($7_1 + Math_fround(4.0));
    $1986($4_1, 60, $7_1);
    $18_1 = $3 <= $17_1 & $10_1 >= $13 & $6_1 >= $8 & $7_1 <= $14;
    if (!$18_1) {
     $15_1 = $1944($1_1, 580);
     $0_1 = $1960($4_1, 48);
     $9 = i64toi32_i32$HIGH_BITS;
     $1983($4_1, 40, $0_1, $9);
     $5_1 = $1960($4_1, 56);
     $12_1 = i64toi32_i32$HIGH_BITS;
     $1983($4_1, 32, $5_1, $12_1);
     $1983($4_1, 8, $0_1, $9);
     $1983($4_1, 0, $5_1, $12_1);
     $378($15_1, $4_1 + 8 | 0, $4_1, 0);
    }
    $15_1 = $1944($1_1, 580);
    $1986($4_1, 28, Math_fround($1963($4_1, 52) + Math_fround(1.0)));
    $1986($4_1, 24, Math_fround($1963($4_1, 48) + Math_fround(1.0)));
    $1986($4_1, 20, Math_fround($1963($4_1 + 60 | 0, 0) + Math_fround(-1.0)));
    $1986($4_1, 16, Math_fround($1963($4_1, 56) + Math_fround(-1.0)));
    $5_1 = $1944(0, 73568);
    $3 = $1963($5_1 + 6404 | 0, 0);
    $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
    label$6 : {
     if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$3;
      break label$6;
     }
     $0_1 = -2147483648;
    }
    $9 = $0_1 << 8;
    $3 = $1963($5_1 + 6400 | 0, 0);
    $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
    label$8 : {
     if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$3;
      break label$8;
     }
     $0_1 = -2147483648;
    }
    $9 = $0_1 | $9;
    $3 = $1963($5_1 + 6408 | 0, 0);
    $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
    label$10 : {
     if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$3;
      break label$10;
     }
     $0_1 = -2147483648;
    }
    $9 = $9 | $0_1 << 16;
    $12_1 = $4_1 + 24 | 0;
    $19 = $4_1 + 16 | 0;
    $3 = Math_fround($1963($5_1 + 6412 | 0, 0) * $1963($5_1, 5416));
    $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
    label$12 : {
     if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$3;
      break label$12;
     }
     $0_1 = -2147483648;
    }
    $400($15_1, $12_1, $19, $9 | $0_1 << 24, $16_1, 0, Math_fround(2.0));
    if ($18_1) {
     break label$4
    }
    $380($1944($1_1, 580));
   }
   if (!($2_1 & 2)) {
    break label$1
   }
   $2_1 = $1944(0, 73568);
   $3 = $1963($2_1 + 6404 | 0, 0);
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$14 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $0_1 = ~~$3;
     break label$14;
    }
    $0_1 = -2147483648;
   }
   $5_1 = $0_1 << 8;
   $3 = $1963($2_1 + 6400 | 0, 0);
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$16 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $0_1 = ~~$3;
     break label$16;
    }
    $0_1 = -2147483648;
   }
   $5_1 = $0_1 | $5_1;
   $3 = $1963($2_1 + 6408 | 0, 0);
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$18 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $0_1 = ~~$3;
     break label$18;
    }
    $0_1 = -2147483648;
   }
   $0_1 = $5_1 | $0_1 << 16;
   $3 = Math_fround($1963($2_1 + 6412 | 0, 0) * $1963($2_1, 5416));
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$20 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$3;
     break label$20;
    }
    $2_1 = -2147483648;
   }
   $400($1944($1_1, 580), $4_1 + 48 | 0, $11_1, $0_1 | $2_1 << 24, $16_1, 0, Math_fround(1.0));
  }
  global$0 = $4_1 - -64 | 0;
 }
 
 function $75($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $5_1 = global$0 + -64 | 0;
  global$0 = $5_1;
  $3 = $1944(0, 73568);
  $9 = $1944($3, 7080);
  $4_1 = $1944($3 + 12276 | 0, 0);
  label$1 : {
   if (($4_1 | 0) == -1) {
    $1973($3, 12276, 0);
    $4_1 = $1944($9, 196);
    $6_1 = $4_1 + 1 | 0;
    $1_1 = $1944($3 + 12288 | 0, 0);
    label$3 : {
     if (($1_1 | 0) > ($4_1 | 0)) {
      break label$3
     }
     $2_1 = $1_1;
     $1_1 = $1_1 ? $1_1 + (($1_1 | 0) / 2 | 0) | 0 : 8;
     $1_1 = ($1_1 | 0) > ($6_1 | 0) ? $1_1 : $6_1;
     if (($2_1 | 0) >= ($1_1 | 0)) {
      break label$3
     }
     if ($3) {
      $2_1 = $3 + 876 | 0;
      $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
     }
     $2_1 = (((wasm2js_i32$1 = $1_1 << 6, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
     $7_1 = $1944($3 + 12292 | 0, 0);
     if ($7_1) {
      $1602($2_1, $7_1, $1944($3, 12284) << 6);
      $7_1 = $1944($3, 12292);
      label$8 : {
       if (!$7_1) {
        break label$8
       }
       $8 = $1944(0, 73568);
       if (!$8) {
        break label$8
       }
       $8 = $8 + 876 | 0;
       $1973($8, 0, $1944($8, 0) - 1 | 0);
      }
      ((wasm2js_i32$2 = $7_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     }
     $1973($3, 12288, $1_1);
     $1973($3, 12292, $2_1);
    }
    $1_1 = $1944($3, 12284);
    if (($1_1 | 0) <= ($4_1 | 0)) {
     while (1) {
      $2_1 = $1944($3, 12292) + ($1_1 << 6) | 0;
      $1982($2_1, 0, 0, 0);
      $1982($2_1 + 56 | 0, 0, 0, 0);
      $1982($2_1 + 48 | 0, 0, 0, 0);
      $1982($2_1 + 40 | 0, 0, 0, 0);
      $1982($2_1 + 32 | 0, 0, 0, 0);
      $1982($2_1 + 24 | 0, 0, 0, 0);
      $1982($2_1 + 16 | 0, 0, 0, 0);
      $1982($2_1 + 8 | 0, 0, 0, 0);
      $2_1 = $1_1;
      $1_1 = $2_1 + 1 | 0;
      if (($2_1 | 0) != ($4_1 | 0)) {
       continue
      }
      break;
     }
    }
    $1973($3, 12284, $6_1);
    $4_1 = $1944($9, 196);
    if (($4_1 | 0) < 0) {
     break label$1
    }
    $6_1 = $1944($3 + 12292 | 0, 0);
    $3 = 0;
    while (1) {
     $1_1 = $0_1;
     $2_1 = $3;
     if (($4_1 | 0) > ($2_1 | 0)) {
      $1_1 = $1944($1944($9, 204) + ($2_1 << 2) | 0, 0)
     }
     $1973($6_1 + ($2_1 << 6) | 0, 0, $1_1);
     $3 = $2_1 + 1 | 0;
     if (($2_1 | 0) != ($4_1 | 0)) {
      continue
     }
     break;
    };
    break label$1;
   }
   if (($1944($9, 196) | 0) != ($4_1 | 0)) {
    break label$1
   }
   $3 = $1944($3 + 12292 | 0, 0);
   label$13 : {
    label$14 : {
     switch ($1_1 - 4 | 0) {
     case 0:
      $1973($5_1, 0, $2_1);
      $21(($3 + ($4_1 << 6) | 0) + 6 | 0, 58, 13404, $5_1);
      break label$13;
     case 7:
      $0_1 = $1697($2_1);
      $1973($5_1, 20, $2_1);
      $1973($5_1, 16, $0_1);
      $21(($3 + ($4_1 << 6) | 0) + 6 | 0, 58, 18924, $5_1 + 16 | 0);
      break label$13;
     case 8:
      $1973($5_1, 32, $2_1);
      $21(($3 + ($4_1 << 6) | 0) + 6 | 0, 58, 6985, $5_1 + 32 | 0);
      break label$13;
     case 9:
      break label$14;
     default:
      break label$13;
     };
    }
    $1_1 = $3 + ($4_1 << 6) | 0;
    if ($1937($1_1, 6)) {
     break label$13
    }
    $1973($5_1, 48, $0_1);
    $21($1_1 + 6 | 0, 58, 13961, $5_1 + 48 | 0);
   }
   $1968($3 + ($4_1 << 6) | 0, 5, 1);
  }
  global$0 = $5_1 - -64 | 0;
 }
 
 function $76($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = $1_1;
  $4_1 = $1944((($1944($0_1, 196) << 2) + $1944($0_1 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
  $0_1 = $4_1;
  while (1) {
   $5_1 = $2_1;
   $2_1 = $2_1 + 1 | 0;
   $3 = $1937($5_1, 0);
   if ($3) {
    label$11 : {
     if (($3 | 0) != 35) {
      break label$11
     }
     if (($1937($2_1, 0) | 0) != 35) {
      break label$11
     }
     $0_1 = ($1937($5_1, 2) | 0) == 35 ? $4_1 : $0_1;
    }
    $0_1 = $1944((($3 ^ $0_1 & 255) << 2) + 19360 | 0, 0) ^ $0_1 >>> 8;
   }
   if ($3) {
    continue
   }
   break;
  };
  $2_1 = $1944(0, 73568);
  $0_1 = $0_1 ^ -1;
  if (($1944($2_1, 7136) | 0) == ($0_1 | 0)) {
   $1973($2_1, 7140, $0_1)
  }
  if (($1944($2_1, 7196) | 0) == ($0_1 | 0)) {
   $1968($2_1, 7200, 1)
  }
  if (($1944($2_1, 7112) | 0) == ($0_1 | 0)) {
   $75($0_1, 11, $1_1)
  }
  return $0_1;
 }
 
 function $78($0_1) {
  var $1_1 = 0, $2_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $373($0_1);
  $374($0_1 + 120 | 0);
  $2_1 = $1944($0_1 + 136 | 0, 0);
  if ($2_1) {
   $1_1 = $1944(0, 73568);
   if ($1_1) {
    $1_1 = $1_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
   }
   ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
  }
  $2_1 = $1944($0_1 + 92 | 0, 0);
  if ($2_1) {
   $1_1 = $1944(0, 73568);
   if ($1_1) {
    $1_1 = $1_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
   }
   ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
  }
  $2_1 = $1944($0_1 + 80 | 0, 0);
  if ($2_1) {
   $1_1 = $1944(0, 73568);
   if ($1_1) {
    $1_1 = $1_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
   }
   ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
  }
  $2_1 = $1944($0_1 + 68 | 0, 0);
  if ($2_1) {
   $1_1 = $1944(0, 73568);
   if ($1_1) {
    $1_1 = $1_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
   }
   ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
  }
  $2_1 = $1944($0_1 + 32 | 0, 0);
  if ($2_1) {
   $1_1 = $1944(0, 73568);
   if ($1_1) {
    $1_1 = $1_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
   }
   ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
  }
  $2_1 = $1944($0_1 + 20 | 0, 0);
  if ($2_1) {
   $1_1 = $1944(0, 73568);
   if ($1_1) {
    $1_1 = $1_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
   }
   ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
  }
  $2_1 = $1944($0_1, 8);
  if ($2_1) {
   $1_1 = $1944(0, 73568);
   if ($1_1) {
    $1_1 = $1_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
   }
   ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
  }
  return $0_1;
 }
 
 function $79($0_1) {
  var $1_1 = 0;
  $1_1 = $1944(0, 73568);
  if (($1944($1_1, 7136) | 0) == ($0_1 | 0)) {
   $1973($1_1, 7140, $0_1)
  }
  if (($1944($1_1, 7196) | 0) == ($0_1 | 0)) {
   $1968($1_1, 7200, 1)
  }
 }
 
 function $80($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 12, $1_1);
  $4_1 = 4;
  $2_1 = $3 + 12 | 0;
  $0_1 = $1944((($1944($0_1, 196) << 2) + $1944($0_1 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
  while (1) {
   $5_1 = $2_1;
   $2_1 = $2_1 + 1 | 0;
   $0_1 = $1944((($1937($5_1, 0) ^ $0_1 & 255) << 2) + 19360 | 0, 0) ^ $0_1 >>> 8;
   $4_1 = $4_1 - 1 | 0;
   if ($4_1) {
    continue
   }
   break;
  };
  $2_1 = $1944(0, 73568);
  $0_1 = $0_1 ^ -1;
  if (($1944($2_1, 7136) | 0) == ($0_1 | 0)) {
   $1973($2_1, 7140, $0_1)
  }
  if (($1944($2_1, 7196) | 0) == ($0_1 | 0)) {
   $1968($2_1, 7200, 1)
  }
  if (($1944($2_1, 7112) | 0) == ($0_1 | 0)) {
   $75($0_1, 12, $1_1)
  }
  global$0 = $3 + 16 | 0;
  return $0_1;
 }
 
 function $81($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $3 = $1_1;
  $5_1 = $1944((($1944($0_1, 196) << 2) + $1944($0_1 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
  $0_1 = $5_1;
  while (1) {
   $4_1 = $3;
   $3 = $4_1 + 1 | 0;
   $2_1 = $1937($4_1, 0);
   if ($2_1) {
    label$11 : {
     if (($2_1 | 0) != 35) {
      break label$11
     }
     if (($1937($3, 0) | 0) != 35) {
      break label$11
     }
     $0_1 = ($1937($4_1, 2) | 0) == 35 ? $5_1 : $0_1;
    }
    $0_1 = $1944((($2_1 ^ $0_1 & 255) << 2) + 19360 | 0, 0) ^ $0_1 >>> 8;
   }
   if ($2_1) {
    continue
   }
   break;
  };
  $0_1 = $0_1 ^ -1;
  if (($1944($1944(0, 73568), 7112) | 0) == ($0_1 | 0)) {
   $75($0_1, 11, $1_1)
  }
  return $0_1;
 }
 
 function $82($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0);
  $2_1 = global$0;
  $3 = $1944((($1944($0_1, 196) << 2) + $1944($0_1 + 204 | 0, 0) | 0) - 4 | 0, 0);
  $4_1 = $1963($0_1 + 224 | 0, 0);
  $6_1 = $1963($1_1, 0);
  $7_1 = $1963($1_1, 4);
  $8 = $1963($1_1, 8);
  $2_1 = $2_1 - 16 | 0;
  $9 = $1963($1_1 + 12 | 0, 0);
  $5_1 = $1963($0_1 + 228 | 0, 0);
  $1986($2_1 + 12 | 0, 0, Math_fround($9 - $5_1));
  $1986($2_1, 8, Math_fround($8 - $4_1));
  $1986($2_1, 4, Math_fround($7_1 - $5_1));
  $1986($2_1, 0, Math_fround($6_1 - $4_1));
  $0_1 = 16;
  $1_1 = $2_1;
  $3 = $3 ^ -1;
  while (1) {
   $2_1 = $1_1;
   $1_1 = $1_1 + 1 | 0;
   $2_1 = $1944((($1937($2_1, 0) ^ $3 & 255) << 2) + 19360 | 0, 0) ^ $3 >>> 8;
   $3 = $2_1;
   $0_1 = $0_1 - 1 | 0;
   if ($0_1) {
    continue
   }
   break;
  };
  $0_1 = $1944(0, 73568);
  $1_1 = $2_1 ^ -1;
  if (($1944($0_1, 7136) | 0) == ($1_1 | 0)) {
   $1973($0_1, 7140, $1_1)
  }
  if (($1944($0_1, 7196) | 0) == ($1_1 | 0)) {
   $1968($0_1, 7200, 1)
  }
  return $1_1;
 }
 
 function $85($0_1, $1_1) {
  var $2_1 = 0, $3 = 0;
  $2_1 = $1944(0, 73568);
  $3 = $1944($2_1, 7136);
  $1968($2_1, 7148, ($0_1 | 0) != ($3 | 0));
  label$1 : {
   if (($0_1 | 0) == ($3 | 0)) {
    break label$1
   }
   $1973($2_1, 7192, -1);
   $1969($2_1, 7151, 0);
   $1973($2_1, 7144, 0);
   if (!$0_1) {
    break label$1
   }
   $1973($2_1, 7212, 0);
   $1973($2_1, 7208, $0_1);
  }
  $1973($2_1, 7184, $1_1);
  $1969($2_1, 7149, 0);
  $1973($2_1, 7136, $0_1);
  $1968($2_1, 7153, 0);
  if ($0_1) {
   $1973($2_1, 7140, $0_1);
   $1_1 = 4;
   label$3 : {
    if (($1944($2_1, 7520) | 0) == ($0_1 | 0)) {
     break label$3
    }
    $1_1 = 4;
    if (($1944($2_1, 7532) | 0) == ($0_1 | 0)) {
     break label$3
    }
    $1_1 = ($1944($2_1, 7540) | 0) == ($0_1 | 0) ? 4 : 1;
   }
   $1973($2_1, 7188, $1_1);
  }
  $1983($2_1, 7168, 0, 0);
  $1982($2_1, 7156, 0, 0);
  $1968($2_1, 7154, 0);
 }
 
 function $86() {
  var $0_1 = 0, $1_1 = 0;
  $0_1 = $1944(0, 73568);
  $1_1 = $1944($0_1, 7136);
  $1968($0_1, 7148, ($1_1 | 0) != 0);
  if ($1_1) {
   $1973($0_1, 7192, -1);
   $1969($0_1, 7151, 0);
   $1973($0_1, 7144, 0);
  }
  $1973($0_1, 7184, 0);
  $1969($0_1, 7149, 0);
  $1973($0_1, 7136, 0);
  $1983($0_1, 7168, 0, 0);
  $1982($0_1, 7156, 0, 0);
  $1969($0_1, 7153, 0);
 }
 
 function $87($0_1) {
  var $1_1 = 0;
  $1_1 = $1944(0, 73568);
  $1970($1_1, 7124, 0);
  $1973($1_1, 7116, $0_1);
  label$1 : {
   if (!$0_1) {
    break label$1
   }
   if (($1944($1_1, 7120) | 0) == ($0_1 | 0)) {
    break label$1
   }
   $1983($1_1, 7128, 0, 0);
  }
 }
 
 function $88($0_1) {
  $0_1 = $1944(0, 73568);
  $1970($0_1, 7152, 257);
  $0_1 = $0_1 + 7248 | 0;
  $1973($0_1, 0, $1944($0_1, 0) | 4);
 }
 
 function $89($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0;
  $2_1 = $1944(0, 73568);
  $3 = $1944($2_1, 7080);
  folding_inner0 : {
   label$1 : {
    label$2 : {
     label$3 : {
      if (!$1937($2_1, 7571)) {
       break label$3
      }
      if ($1937($2_1, 7570)) {
       break label$3
      }
      label$4 : {
       if ($0_1 & 512) {
        break label$4
       }
       if (!($1944($2_1 + 7244 | 0, 0) & 4)) {
        break label$4
       }
       break folding_inner0;
      }
      $3 = $1944($2_1, 7512);
      if (!$3) {
       break folding_inner0
      }
      $0_1 = 0;
      if (($1944($2_1, 7240) | 0) == ($3 | 0)) {
       break label$2
      }
      break label$1;
     }
     $1_1 = $1944($2_1 + 7248 | 0, 0);
     if (!($1_1 & 1)) {
      break folding_inner0
     }
     if (!($1_1 & 128 | $0_1 & 256 | ($1944($2_1, 7084) | 0) == ($3 | 0))) {
      break folding_inner0
     }
     label$8 : {
      if ($0_1 & 128) {
       break label$8
      }
      $1_1 = $1944($2_1, 7136);
      if (!$1_1) {
       break label$8
      }
      if (($1944($2_1, 7240) | 0) == ($1_1 | 0)) {
       break label$8
      }
      if ($1937($2_1, 7149)) {
       break label$8
      }
      if (($1944($3, 80) | 0) == ($1_1 | 0)) {
       break label$8
      }
      break folding_inner0;
     }
     label$9 : {
      $1_1 = $1944($2_1, 7508);
      if (!$1_1) {
       break label$9
      }
      $1_1 = $1944($1_1, 736);
      if (!$1_1) {
       break label$9
      }
      if (!$1937($1_1, 139)) {
       break label$9
      }
      if (($1944($3, 736) | 0) == ($1_1 | 0)) {
       break label$9
      }
      $1_1 = $1944($1_1, 8);
      if ($1_1 & 134217728) {
       break folding_inner0
      }
      if (!($1_1 & 67108864) | $0_1 & 32) {
       break label$9
      }
      break folding_inner0;
     }
     label$11 : {
      if ($0_1 & 512) {
       break label$11
      }
      if (!($1944($2_1 + 7244 | 0, 0) & 4)) {
       break label$11
      }
      break folding_inner0;
     }
     if (($1944($2_1, 7240) | 0) != ($1944($3, 80) | 0)) {
      break label$2
     }
     $0_1 = 0;
     if ($1937($3, 140)) {
      break label$1
     }
    }
    $0_1 = 1;
   }
   return $0_1 | 0;
  }
  return 0;
 }
 
 function $90() {
  var $0_1 = 0, $1_1 = 0;
  $0_1 = $1944(0, 73568);
  $1_1 = $1944($0_1, 7512);
  return ($1_1 | 0) != 0 & ($1944($0_1, 7240) | 0) == ($1_1 | 0);
 }
 
 function $91($0_1, $1_1) {
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = 0;
  folding_inner1 : {
   label$1 : {
    $2_1 = $1944(0, 73568);
    $4_1 = $1944($2_1, 7116);
    if (!$4_1 | ($1_1 | 0) == ($4_1 | 0)) {
     break label$1
    }
    if ($1937($2_1, 7124)) {
     break label$1
    }
    break folding_inner1;
   }
   $5_1 = $1944($2_1, 7084);
   $4_1 = $1944($2_1, 7080);
   if (($5_1 | 0) != ($4_1 | 0)) {
    break folding_inner1
   }
   label$3 : {
    $11_1 = $1944($2_1, 7136);
    if (!$11_1 | ($1_1 | 0) == ($11_1 | 0)) {
     break label$3
    }
    if ($1937($2_1, 7149)) {
     break label$3
    }
    break folding_inner1;
   }
   $6_1 = $1963($2_1 + 228 | 0, 0);
   $3 = $1963($0_1, 0);
   $7_1 = $1963($4_1, 496);
   $8 = $3 >= $7_1 ? $3 : $7_1;
   $3 = $1963($2_1 + 5516 | 0, 0);
   if (!($6_1 >= Math_fround($8 - $3))) {
    break folding_inner1
   }
   $7_1 = $1963($2_1 + 232 | 0, 0);
   $9 = $1963($0_1, 4);
   $10_1 = $1963($4_1 + 500 | 0, 0);
   $8 = $9 >= $10_1 ? $9 : $10_1;
   $9 = $1963($2_1 + 5520 | 0, 0);
   if (!($7_1 >= Math_fround($8 - $9))) {
    break folding_inner1
   }
   $8 = $3;
   $3 = $1963($0_1, 8);
   $10_1 = $1963($4_1 + 504 | 0, 0);
   if (!($6_1 < Math_fround($8 + ($3 < $10_1 ? $3 : $10_1)))) {
    break folding_inner1
   }
   $6_1 = $1963($0_1 + 12 | 0, 0);
   $3 = $1963($4_1 + 508 | 0, 0);
   if (!(Math_fround(($3 > $6_1 ? $6_1 : $3) + $9) > $7_1)) {
    break folding_inner1
   }
   if ($1937($2_1, 7571)) {
    break folding_inner1
   }
   folding_inner0 : {
    label$9 : {
     $5_1 = $1944($2_1, 7508);
     if (!$5_1) {
      break label$9
     }
     $5_1 = $1944($5_1, 736);
     if (!$5_1) {
      break label$9
     }
     if (!$1937($5_1, 139)) {
      break label$9
     }
     if (($1944($4_1, 736) | 0) == ($5_1 | 0)) {
      break label$9
     }
     if (!($1937($5_1 + 11 | 0, 0) & 12)) {
      break label$9
     }
     break folding_inner0;
    }
    label$10 : {
     if (!$1_1) {
      break label$10
     }
     $1970($2_1, 7124, 0);
     $1973($2_1, 7116, $1_1);
     if (($1944($2_1, 7120) | 0) == ($1_1 | 0)) {
      break label$10
     }
     $1983($2_1, 7128, 0, 0);
    }
    if ($1937((($1944($2_1, 7240) | 0) == ($1_1 | 0) ? 7244 : 7216) + $2_1 | 0, 0) & 4) {
     if (($1_1 | 0) == ($11_1 | 0)) {
      $86()
     }
     break folding_inner0;
    }
    label$13 : {
     if (!$1_1) {
      break label$13
     }
     label$14 : {
      if (!$1937($2_1, 12248)) {
       break label$14
      }
      if (($1944($2_1, 7120) | 0) != ($1_1 | 0)) {
       break label$14
      }
      $400($92($1944($1944($2_1 + 7504 | 0, 0), 0), 1, 11768), $0_1, $0_1 + 8 | 0, -16711681, Math_fround(0.0), 0, Math_fround(1.0));
     }
     if (($1944($2_1, 12252) | 0) != ($1_1 | 0)) {
      break label$13
     }
     wasm2js_trap();
    }
    return 1;
   }
   $1968($2_1, 7127, 1);
  }
  return 0;
 }
 
 function $92($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $4_1 = $1944(0, 73568);
  $5_1 = ($1_1 << 2) + $0_1 | 0;
  $6_1 = $5_1 + 44 | 0;
  $1_1 = $1944($6_1, 0);
  if (!$1_1) {
   if ($4_1) {
    $1_1 = $4_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
   }
   $1_1 = $1604((((wasm2js_i32$1 = 144, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0), 0, 144);
   $1973($1_1, 48, $2_1);
   $1973($1_1, 44, $4_1 + 6476 | 0);
   $1973($6_1, 0, $1_1);
  }
  $5_1 = $5_1 + 36 | 0;
  if (($1944($5_1, 0) | 0) != ($1944($4_1, 6984) | 0)) {
   $372($1_1);
   $381($1_1, $1944($1944($4_1 + 152 | 0, 0), 4));
   $2_1 = $1959($0_1, 4);
   $6_1 = i64toi32_i32$HIGH_BITS;
   $1983($3, 24, $2_1, $6_1);
   $7_1 = $1963($0_1, 12);
   $8 = $1963($0_1, 4);
   $1986($3, 20, Math_fround($1963($0_1 + 8 | 0, 0) + $1963($0_1 + 16 | 0, 0)));
   $1986($3, 16, Math_fround($8 + $7_1));
   $1983($3, 8, $2_1, $6_1);
   $1983($3, 0, $1959($3, 16), i64toi32_i32$HIGH_BITS);
   $378($1_1, $3 + 8 | 0, $3, 0);
   $1973($5_1, 0, $1944($4_1, 6984));
  }
  global$0 = $3 + 32 | 0;
  return $1_1;
 }
 
 function $93($0_1, $1_1, $2_1) {
  var $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0);
  $6_1 = $1963($1_1, 4);
  $7_1 = $1963($1_1, 0);
  $4_1 = $1963($0_1, 4);
  $5_1 = $1963($0_1, 0);
  $1_1 = $1944(0, 73568);
  if ($2_1) {
   $0_1 = $1944($1_1, 7080);
   $3 = $1963($0_1, 496);
   $5_1 = $3 <= $5_1 ? $5_1 : $3;
   $3 = $1963($0_1 + 500 | 0, 0);
   $4_1 = $3 <= $4_1 ? $4_1 : $3;
   $3 = $1963($0_1 + 504 | 0, 0);
   $7_1 = $3 > $7_1 ? $7_1 : $3;
   $3 = $1963($0_1 + 508 | 0, 0);
   $6_1 = $3 > $6_1 ? $6_1 : $3;
  }
  $3 = $1963($1_1 + 228 | 0, 0);
  $8 = $5_1;
  $5_1 = $1963($1_1 + 5516 | 0, 0);
  $0_1 = 0;
  label$3 : {
   if (!($3 >= Math_fround($8 - $5_1))) {
    break label$3
   }
   $9 = $1963($1_1 + 232 | 0, 0);
   $8 = $4_1;
   $4_1 = $1963($1_1 + 5520 | 0, 0);
   $0_1 = $3 < Math_fround($7_1 + $5_1) & $9 >= Math_fround($8 - $4_1) & Math_fround($6_1 + $4_1) > $9;
  }
  return $0_1;
 }
 
 function $94() {
  return $92($1944($1944($1944(0, 73568) + 7504 | 0, 0), 0), 1, 11768);
 }
 
 function $95($0_1, $1_1) {
  var $2_1 = 0, $3 = 0;
  label$1 : {
   $2_1 = $1944(0, 73568);
   $3 = $1944($2_1, 7080);
   label$2 : {
    if (!($1963($3 + 500 | 0, 0) < $1963($0_1 + 12 | 0, 0))) {
     break label$2
    }
    if (!($1963($3 + 508 | 0, 0) > $1963($0_1, 4))) {
     break label$2
    }
    if (!($1963($3, 496) < $1963($0_1, 8))) {
     break label$2
    }
    if ($1963($3, 504) > $1963($0_1, 0)) {
     break label$1
    }
   }
   if ($1_1) {
    if (($1944($2_1, 7136) | 0) == ($1_1 | 0)) {
     break label$1
    }
    if (($1944($2_1, 7512) | 0) == ($1_1 | 0)) {
     break label$1
    }
   }
   if ($1937($2_1, 12196)) {
    break label$1
   }
   return 1;
  }
  return 0;
 }
 
 function $97() {
  var $0_1 = 0, $1_1 = 0;
  $0_1 = $1944(0, 73568);
  $1_1 = $1944($0_1 + 208 | 0, 0);
  if (!$1_1) {
   return 19354
  }
  return FUNCTION_TABLE[$1_1 | 0]($1944($0_1 + 216 | 0, 0)) | 0;
 }
 
 function $98($0_1) {
  var $1_1 = 0, $2_1 = 0;
  $1_1 = $1944(0, 73568);
  $2_1 = $1944($1_1 + 212 | 0, 0);
  if ($2_1) {
   FUNCTION_TABLE[$2_1 | 0]($1944($1_1 + 216 | 0, 0), $0_1)
  }
 }
 
 function $100() {
  return $1944(0, 73568);
 }
 
 function $101($0_1) {
  $1973(0, 73568, $0_1);
 }
 
 function $102($0_1, $1_1) {
  $1973(0, 73260, $1_1);
  $1973(0, 73256, $0_1);
  $1973(0, 73576, 0);
 }
 
 function $106($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $5_1 = global$0 + -64 | 0;
  global$0 = $5_1;
  if ($1944($0_1, 7008)) {
   while (1) {
    $9 = $4_1;
    $6_1 = $1944($1944($0_1, 7016) + ($4_1 << 2) | 0, 0);
    if (!($1937($6_1 + 9 | 0, 0) & 1)) {
     $3 = $1944($6_1, 576);
     label$4 : {
      if (($3 | 0) != -1) {
       $3 = $1944($0_1, 12164) + $3 | 0;
       break label$4;
      }
      $11_1 = $1944(0, 73568);
      $4_1 = $1944($11_1 + 12164 | 0, 0);
      $12_1 = $4_1 + 4 | 0;
      $3 = $4_1 ? $12_1 : 0;
      if (!$4_1) {
       break label$4
      }
      $7_1 = $1944($6_1, 4);
      while (1) {
       if (($1944($3, 0) | 0) == ($7_1 | 0)) {
        break label$4
       }
       $10_1 = $1944($3 - 4 | 0, 0) + $3 | 0;
       $4_1 = $1944($11_1, 12156) + $12_1 | 0;
       $3 = ($4_1 | 0) != ($10_1 | 0) ? $10_1 : 0;
       if (($4_1 | 0) != ($10_1 | 0)) {
        continue
       }
       break;
      };
     }
     $4_1 = $3;
     if (!$3) {
      $4_1 = $156($1944($6_1, 0));
      $1973($6_1, 576, $4_1 - $1944($0_1, 12164) | 0);
     }
     $8 = $1963($6_1, 12);
     label$10 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $3 = ~~$8;
       break label$10;
      }
      $3 = -2147483648;
     }
     $3 = $3 & 65535;
     $8 = $1963($6_1 + 16 | 0, 0);
     label$12 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $7_1 = ~~$8;
       break label$12;
      }
      $7_1 = -2147483648;
     }
     $1973($4_1, 4, $3 | $7_1 << 16);
     $8 = $1963($6_1, 28);
     label$14 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $3 = ~~$8;
       break label$14;
      }
      $3 = -2147483648;
     }
     $3 = $3 & 65535;
     $8 = $1963($6_1 + 32 | 0, 0);
     label$16 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $7_1 = ~~$8;
       break label$16;
      }
      $7_1 = -2147483648;
     }
     $1973($4_1, 8, $3 | $7_1 << 16);
     $1968($4_1, 12, $1937($6_1, 141));
    }
    $4_1 = $9 + 1 | 0;
    if (($1944($0_1, 7008) | 0) != ($4_1 | 0)) {
     continue
    }
    break;
   }
  }
  $9 = $1944($2_1, 4);
  $6_1 = Math_imul($1944($0_1, 12156), 6);
  $4_1 = $1944($2_1, 0);
  $3 = $4_1 - 1 | 0;
  $7_1 = $6_1 + ($3 >>> 0 <= $4_1 >>> 0 ? $3 : 0) | 0;
  if (($9 | 0) < ($7_1 | 0)) {
   $3 = $1944(0, 73568);
   if ($3) {
    $3 = $3 + 876 | 0;
    $1973($3, 0, $1944($3, 0) + 1 | 0);
   }
   $9 = (((wasm2js_i32$1 = $7_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $3 = $1944($2_1, 8);
   if ($3) {
    $1602($9, $3, $1944($2_1, 0));
    $4_1 = $1944($2_1, 8);
    label$21 : {
     if (!$4_1) {
      break label$21
     }
     $3 = $1944(0, 73568);
     if (!$3) {
      break label$21
     }
     $3 = $3 + 876 | 0;
     $1973($3, 0, $1944($3, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($2_1, 4, $7_1);
   $1973($2_1, 8, $9);
  }
  $3 = $1944($0_1 + 12164 | 0, 0);
  if ($3) {
   $4_1 = $3 + 4 | 0;
   while (1) {
    $3 = $1944($1_1, 0);
    $1973($5_1, 52, $4_1 + 16 | 0);
    $1973($5_1, 48, $3);
    $40($2_1, 19240, $5_1 + 48 | 0);
    $3 = $1939($4_1, 4);
    $1973($5_1, 36, $1939($4_1 + 6 | 0, 0));
    $1973($5_1, 32, $3);
    $40($2_1, 19217, $5_1 + 32 | 0);
    $3 = $1939($4_1, 8);
    $1973($5_1, 20, $1939($4_1 + 10 | 0, 0));
    $1973($5_1, 16, $3);
    $40($2_1, 19228, $5_1 + 16 | 0);
    $1973($5_1, 0, $1937($4_1, 12));
    $40($2_1, 19203, $5_1);
    $39($2_1, 19353, 0);
    $3 = $1944($4_1 - 4 | 0, 0) + $4_1 | 0;
    $4_1 = ($3 | 0) != (($1944($0_1, 12164) + $1944($0_1, 12156) | 0) + 4 | 0) ? $3 : 0;
    if ($4_1) {
     continue
    }
    break;
   };
  }
  global$0 = $5_1 - -64 | 0;
 }
 
 function $107($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0);
  $1_1 = $1944($0_1 + 12164 | 0, 0);
  if ($1_1) {
   $6_1 = $1944(0, 73568);
   $1_1 = $1_1 + 4 | 0;
   while (1) {
    $3 = $1_1;
    if ($1937($1_1, 13)) {
     $4_1 = $1944($3, 0);
     $7_1 = $1944($6_1, 7064);
     $2_1 = $7_1;
     $8 = $1944($6_1, 7056);
     $1_1 = $8;
     if ($1_1) {
      while (1) {
       $5_1 = $1_1 >>> 1 | 0;
       $9 = ($5_1 << 3) + $2_1 | 0;
       $10_1 = $1944($9, 0) >>> 0 < $4_1 >>> 0;
       $2_1 = $10_1 ? $9 + 8 | 0 : $2_1;
       $1_1 = $10_1 ? $1_1 + ($5_1 ^ -1) | 0 : $5_1;
       if ($1_1) {
        continue
       }
       break;
      }
     }
     $1_1 = 0;
     label$6 : {
      if (($2_1 | 0) == (($8 << 3) + $7_1 | 0)) {
       break label$6
      }
      $1_1 = 0;
      if (($1944($2_1, 0) | 0) != ($4_1 | 0)) {
       break label$6
      }
      $1_1 = $1944($2_1, 4);
     }
     if ($1_1) {
      $2_1 = $1939($3 + 6 | 0, 0);
      $1986($1_1, 12, Math_fround($1939($3, 4) | 0));
      $1986($1_1 + 16 | 0, 0, Math_fround($2_1 | 0));
      $2_1 = $1939($3, 8);
      label$9 : {
       if (($2_1 | 0) <= 0) {
        break label$9
       }
       $4_1 = $1939($3 + 10 | 0, 0);
       if (($4_1 | 0) <= 0) {
        break label$9
       }
       $11_1 = Math_fround($4_1 | 0);
       $1986($1_1 + 32 | 0, 0, $11_1);
       $12_1 = Math_fround($2_1 | 0);
       $1986($1_1, 28, $12_1);
       $1986($1_1 + 24 | 0, 0, $11_1);
       $1986($1_1, 20, $12_1);
      }
      $1968($1_1, 141, $1937($3, 12));
     }
     $1968($3, 13, 0);
    }
    $1_1 = $1944($3 - 4 | 0, 0) + $3 | 0;
    $1_1 = ($1_1 | 0) != (($1944($0_1, 12164) + $1944($0_1, 12156) | 0) + 4 | 0) ? $1_1 : 0;
    if ($1_1) {
     continue
    }
    break;
   };
  }
 }
 
 function $108($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $0_1 = global$0 + -64 | 0;
  global$0 = $0_1;
  $1973($0_1, 32, $0_1 + 60 | 0);
  $1973($0_1, 36, $0_1 + 56 | 0);
  label$1 : {
   if (($1690($3, 8575, $0_1 + 32 | 0) | 0) == 2) {
    $1973($2_1, 4, $1944($0_1, 56) << 16 | $1941($0_1, 60));
    break label$1;
   }
   $1973($0_1, 20, $0_1 + 56 | 0);
   $1973($0_1, 16, $0_1 + 60 | 0);
   if (($1690($3, 8585, $0_1 + 16 | 0) | 0) == 2) {
    $1973($2_1, 8, $1944($0_1, 56) << 16 | $1941($0_1, 60));
    break label$1;
   }
   $1973($0_1, 0, $0_1 + 52 | 0);
   if (($1690($3, 12977, $0_1) | 0) != 1) {
    break label$1
   }
   $1968($2_1, 12, ($1944($0_1, 52) | 0) != 0);
  }
  global$0 = $0_1 - -64 | 0;
 }
 
 function $109($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $1_1 = $2_1;
  $0_1 = -1;
  while (1) {
   $3 = $1_1;
   $1_1 = $1_1 + 1 | 0;
   $4_1 = $1937($3, 0);
   if ($4_1) {
    label$4 : {
     if (($4_1 | 0) != 35) {
      break label$4
     }
     if (($1937($1_1, 0) | 0) != 35) {
      break label$4
     }
     $0_1 = ($1937($3, 2) | 0) == 35 ? -1 : $0_1;
    }
    $0_1 = $1944((($4_1 ^ $0_1 & 255) << 2) + 19360 | 0, 0) ^ $0_1 >>> 8;
   }
   if ($4_1) {
    continue
   }
   break;
  };
  $4_1 = $1944(0, 73568);
  $3 = $1944($4_1 + 12164 | 0, 0);
  $5_1 = $3 + 4 | 0;
  $1_1 = $3 ? $5_1 : 0;
  label$7 : {
   if (!$3) {
    break label$7
   }
   $3 = $0_1 ^ -1;
   while (1) {
    if (($1944($1_1, 0) | 0) == ($3 | 0)) {
     break label$7
    }
    $0_1 = $1944($1_1 - 4 | 0, 0) + $1_1 | 0;
    $6_1 = $1944($4_1, 12156) + $5_1 | 0;
    $1_1 = ($6_1 | 0) != ($0_1 | 0) ? $0_1 : 0;
    if (($0_1 | 0) != ($6_1 | 0)) {
     continue
    }
    break;
   };
  }
  if (!$1_1) {
   $1_1 = $156($2_1)
  }
  $1981($1_1 + 6 | 0, 0);
  $0_1 = $1944($1_1, 0);
  $1982($1_1, 0, 0, 0);
  $1968($1_1, 13, 1);
  $1973($1_1, 0, $0_1);
  return $1_1 | 0;
 }
 
 function $110($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = $1944($0_1, 7008);
  if ($2_1) {
   $3 = $1944($0_1 + 7016 | 0, 0);
   $1_1 = 0;
   while (1) {
    $1973($1944(($1_1 << 2) + $3 | 0, 0), 576, -1);
    $1_1 = $1_1 + 1 | 0;
    if (($1_1 | 0) != ($2_1 | 0)) {
     continue
    }
    break;
   };
  }
  $1_1 = $1944($0_1 + 12164 | 0, 0);
  if ($1_1) {
   $1982($0_1, 12156, 0, 0);
   $2_1 = $1944(0, 73568);
   if ($2_1) {
    $2_1 = $2_1 + 876 | 0;
    $1973($2_1, 0, $1944($2_1, 0) - 1 | 0);
   }
   ((wasm2js_i32$1 = $1_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
   $1973($0_1, 12164, 0);
  }
 }
 
 function $114($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = $1944(0, 73568);
  $1973($2_1, 12128, 0);
  $1_1 = $1944($2_1 + 12136 | 0, 0);
  label$1 : {
   if (($1_1 | 0) >= 0) {
    break label$1
   }
   $3 = $1_1;
   $1_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0;
   $1_1 = ($1_1 | 0) > 0 ? $1_1 : 0;
   if (($3 | 0) >= ($1_1 | 0)) {
    break label$1
   }
   if ($2_1) {
    $4_1 = $2_1 + 876 | 0;
    $1973($4_1, 0, $1944($4_1, 0) + 1 | 0);
   }
   $4_1 = (((wasm2js_i32$1 = $1_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $3 = $1944($2_1 + 12140 | 0, 0);
   if ($3) {
    $1602($4_1, $3, $1944($2_1, 12132));
    $3 = $1944($2_1, 12140);
    label$4 : {
     if (!$3) {
      break label$4
     }
     $5_1 = $1944(0, 73568);
     if (!$5_1) {
      break label$4
     }
     $5_1 = $5_1 + 876 | 0;
     $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $3, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($2_1, 12136, $1_1);
   $1973($2_1, 12140, $4_1);
  }
  $1973($2_1, 12132, 0);
  if (!$1944($2_1, 12136)) {
   $1_1 = $1944(0, 73568);
   if ($1_1) {
    $1_1 = $1_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
   }
   $1_1 = (((wasm2js_i32$1 = 8, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $4_1 = $1944($2_1 + 12140 | 0, 0);
   if ($4_1) {
    $1602($1_1, $4_1, $1944($2_1, 12132));
    $4_1 = $1944($2_1, 12140);
    label$8 : {
     if (!$4_1) {
      break label$8
     }
     $3 = $1944(0, 73568);
     if (!$3) {
      break label$8
     }
     $3 = $3 + 876 | 0;
     $1973($3, 0, $1944($3, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($2_1, 12136, 8);
   $1973($2_1, 12140, $1_1);
  }
  $4_1 = $2_1 + 12132 | 0;
  $1968($1944($2_1 + 12140 | 0, 0) + $1944($2_1, 12132) | 0, 0, 0);
  $1973($2_1, 12132, $1944($2_1, 12132) + 1 | 0);
  if (($1944($2_1, 12144) | 0) > 0) {
   $1_1 = 0;
   while (1) {
    $3 = $1944($2_1, 12152) + Math_imul($1_1, 36) | 0;
    FUNCTION_TABLE[$1944($3, 28) | 0]($2_1, $3, $4_1);
    $1_1 = $1_1 + 1 | 0;
    if (($1944($2_1, 12144) | 0) > ($1_1 | 0)) {
     continue
    }
    break;
   };
  }
  if ($0_1) {
   $3 = $0_1;
   $0_1 = $1944($4_1, 0);
   $1_1 = $0_1 - 1 | 0;
   $1973($3, 0, $0_1 >>> 0 >= $1_1 >>> 0 ? $1_1 : 0);
  }
  $0_1 = $1944($2_1, 12140);
  return $0_1 ? $0_1 : 73572;
 }
 
 function $116($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  if (($1944($0_1, 12) | 0) > 0) {
   while (1) {
    $1_1 = $1944($1944($0_1, 20) + ($2_1 << 3) | 0, 4);
    label$3 : {
     if (($1_1 | 0) == -1) {
      break label$3
     }
     $1_1 = $1944($0_1, 8) + Math_imul($1_1, 144) | 0;
     $3 = $1944($1_1 + 140 | 0, 0);
     if ($3) {
      $4_1 = $1944(0, 73568);
      if ($4_1) {
       $4_1 = $4_1 + 876 | 0;
       $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
      }
      ((wasm2js_i32$1 = $3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     }
     $1_1 = $1944($1_1, 8);
     if (!$1_1) {
      break label$3
     }
     $3 = $1944(0, 73568);
     if ($3) {
      $3 = $3 + 876 | 0;
      $1973($3, 0, $1944($3, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $1_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $2_1 + 1 | 0;
    if (($1944($0_1, 12) | 0) > ($2_1 | 0)) {
     continue
    }
    break;
   }
  }
  $2_1 = $1944($0_1 + 20 | 0, 0);
  if ($2_1) {
   $1982($0_1, 12, 0, 0);
   $1_1 = $1944(0, 73568);
   if ($1_1) {
    $1_1 = $1_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
   }
   ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
   $1973($0_1, 20, 0);
  }
  $2_1 = $1944($0_1, 8);
  if ($2_1) {
   $1982($0_1, 0, 0, 0);
   $1_1 = $1944(0, 73568);
   if ($1_1) {
    $1_1 = $1_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
   }
   ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   $1973($0_1, 8, 0);
  }
  $1982($0_1, 24, 0, 0);
 }
 
 function $117($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  if (($1944($0_1, 12) | 0) > 0) {
   while (1) {
    $1_1 = $1944($1944($0_1, 20) + ($4_1 << 3) | 0, 4);
    label$3 : {
     if (($1_1 | 0) == -1) {
      break label$3
     }
     $1_1 = $1944($0_1, 8) + Math_imul($1_1, 456) | 0;
     $2_1 = $1944($1_1, 8);
     label$4 : {
      if (!$2_1) {
       break label$4
      }
      $3 = $1944(0, 73568);
      if (!$3) {
       break label$4
      }
      $3 = $3 + 876 | 0;
      $1973($3, 0, $1944($3, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     $2_1 = $1944($1_1 + 400 | 0, 0);
     if ($2_1) {
      $3 = $1944(0, 73568);
      if ($3) {
       $3 = $3 + 876 | 0;
       $1973($3, 0, $1944($3, 0) - 1 | 0);
      }
      ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     }
     $1_1 = $1944($1_1 + 372 | 0, 0);
     if (!$1_1) {
      break label$3
     }
     $2_1 = $1944(0, 73568);
     if ($2_1) {
      $2_1 = $2_1 + 876 | 0;
      $1973($2_1, 0, $1944($2_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $1_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $4_1 = $4_1 + 1 | 0;
    if (($1944($0_1, 12) | 0) > ($4_1 | 0)) {
     continue
    }
    break;
   }
  }
  $4_1 = $1944($0_1 + 20 | 0, 0);
  if ($4_1) {
   $1982($0_1, 12, 0, 0);
   $1_1 = $1944(0, 73568);
   if ($1_1) {
    $1_1 = $1_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
   }
   ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   $1973($0_1, 20, 0);
  }
  $4_1 = $1944($0_1, 8);
  if ($4_1) {
   $1982($0_1, 0, 0, 0);
   $1_1 = $1944(0, 73568);
   if ($1_1) {
    $1_1 = $1_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
   }
   ((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
   $1973($0_1, 8, 0);
  }
  $1982($0_1, 24, 0, 0);
 }
 
 function $118() {
  return $1944(0, 73568) + 8 | 0;
 }
 
 function $120() {
  return +$1967($1944(0, 73568), 6976);
 }
 
 function $121() {
  return $1944($1944(0, 73568), 6984) | 0;
 }
 
 function $124($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = Math_fround(0);
  $4_1 = $1944(0, 73568);
  $125($0_1);
  $1_1 = $1944(0, 73568);
  $3 = $1944($1_1, 7136);
  $2_1 = $1944($0_1, 80);
  $1968($1_1, 7148, ($2_1 | 0) != ($3 | 0));
  label$1 : {
   if (($2_1 | 0) == ($3 | 0)) {
    break label$1
   }
   $1973($1_1, 7192, -1);
   $1969($1_1, 7151, 0);
   $1973($1_1, 7144, 0);
   if (!$2_1) {
    break label$1
   }
   $1973($1_1, 7212, 0);
   $1973($1_1, 7208, $2_1);
  }
  $1973($1_1, 7184, $0_1);
  $1969($1_1, 7149, 0);
  $1973($1_1, 7136, $2_1);
  $1968($1_1, 7153, 0);
  if ($2_1) {
   $1973($1_1, 7140, $2_1);
   $3 = 4;
   label$3 : {
    if (($1944($1_1, 7520) | 0) == ($2_1 | 0)) {
     break label$3
    }
    $3 = 4;
    if (($1944($1_1, 7532) | 0) == ($2_1 | 0)) {
     break label$3
    }
    $3 = ($1944($1_1, 7540) | 0) == ($2_1 | 0) ? 4 : 1;
   }
   $1973($1_1, 7188, $3);
  }
  $1983($1_1, 7168, 0, 0);
  $1982($1_1, 7156, 0, 0);
  $1968($1_1, 7154, 0);
  $1968($4_1, 7570, 1);
  $2_1 = $1944($0_1, 736);
  $5_1 = $1963($2_1 + 16 | 0, 0);
  $1986($4_1, 7176, Math_fround($1963($4_1 + 908 | 0, 0) - $1963($2_1, 12)));
  $1968($4_1, 7150, 1);
  $1986($4_1 + 7180 | 0, 0, Math_fround($1963($4_1 + 912 | 0, 0) - $5_1));
  $1983($1_1, 7168, -1, -1);
  $1982($1_1, 7156, -1, -1);
  $1970($1_1, 7596, 0);
  $1968($1_1, 7572, $1937($1_1, 7573));
  label$5 : {
   if ($1937($0_1, 8) & 4) {
    break label$5
   }
   if ($1937($1944($0_1, 736), 8) & 4) {
    break label$5
   }
   $1973($4_1, 7092, $0_1);
  }
 }
 
 function $125($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  $2_1 = $1944(0, 73568);
  if (($1944($2_1, 7508) | 0) != ($0_1 | 0)) {
   $1973($2_1, 7508, $0_1);
   if ($0_1) {
    if ($1937($2_1, 7571)) {
     $1968($2_1, 7569, 1)
    }
    $1_1 = $1944($0_1, 756);
   }
   $1968($2_1, 7568, 0);
   $1973($2_1, 7516, 0);
   $1973($2_1, 7512, $1_1);
   $1973($2_1, 7564, 0);
   $1970($2_1, 7596, 0);
   $1970($2_1, 7572, 0);
  }
  $1_1 = 0;
  $4_1 = $1944(0, 73568);
  $5_1 = $1944($4_1, 7468);
  label$1 : {
   if (!$5_1) {
    break label$1
   }
   $3 = 0;
   label$2 : {
    if (!$0_1) {
     break label$2
    }
    $3 = 0;
    if (($5_1 | 0) <= 0) {
     break label$2
    }
    $8 = $1944($4_1 + 7476 | 0, 0);
    while (1) {
     $4_1 = $1_1;
     $3 = $1944(Math_imul($1_1, 36) + $8 | 0, 4);
     $7_1 = 4;
     label$5 : {
      if (!$3) {
       break label$5
      }
      $6_1 = 0;
      $7_1 = 4;
      if ($1937($3 + 11 | 0, 0) & 1) {
       break label$5
      }
      while (1) {
       $3 = $1_1;
       $9 = $1944(Math_imul($1_1, 36) + $8 | 0, 4);
       $1_1 = 1;
       label$8 : {
        if (!$9) {
         break label$8
        }
        $1_1 = $0_1;
        if (($1944($1_1, 736) | 0) == ($9 | 0)) {
         $6_1 = 1;
         $1_1 = 0;
         break label$8;
        }
        while (1) {
         label$11 : {
          $7_1 = ($1_1 | 0) != ($9 | 0);
          if (!$7_1) {
           $6_1 = 1;
           break label$11;
          }
          $1_1 = $1944($1_1, 732);
          if ($1_1) {
           continue
          }
         }
         break;
        };
        $1_1 = $7_1;
       }
       if ($1_1) {
        $1_1 = $3 + 1 | 0;
        if (($1_1 | 0) < ($5_1 | 0)) {
         continue
        }
       }
       break;
      };
      $7_1 = $6_1 ? 0 : 2;
     }
     if (($7_1 | 0) == 2) {
      $3 = $4_1;
      break label$2;
     }
     $1_1 = $4_1 + 1 | 0;
     if (($1_1 | 0) != ($5_1 | 0)) {
      continue
     }
     break;
    };
    $3 = $5_1;
   }
   $1_1 = $3;
   if (($1_1 | 0) >= ($5_1 | 0)) {
    break label$1
   }
   $132($1_1, 0);
  }
  if ($0_1) {
   $4_1 = $1944($0_1, 736)
  } else {
   $4_1 = 0
  }
  if ($0_1) {
   $3 = $1944($0_1, 736)
  } else {
   $3 = 0
  }
  label$6 : {
   if (!$1944($2_1, 7136)) {
    break label$6
   }
   $1_1 = $1944($2_1, 7184);
   if (!$1_1) {
    break label$6
   }
   if (($1944($1_1, 736) | 0) == ($4_1 | 0)) {
    break label$6
   }
   if ($1937($2_1, 7150)) {
    break label$6
   }
   $1_1 = $1944(0, 73568);
   $2_1 = $1944($1_1, 7136);
   $1968($1_1, 7148, ($2_1 | 0) != 0);
   if ($2_1) {
    $1973($1_1, 7192, -1);
    $1969($1_1, 7151, 0);
    $1973($1_1, 7144, 0);
   }
   $1973($1_1, 7184, 0);
   $1969($1_1, 7149, 0);
   $1973($1_1, 7136, 0);
   $1983($1_1, 7168, 0, 0);
   $1982($1_1, 7156, 0, 0);
   $1969($1_1, 7153, 0);
  }
  label$80 : {
   if (!$0_1) {
    break label$80
   }
   $2_1 = $1944(0, 73568);
   $1_1 = $1944($2_1 + 7028 | 0, 0);
   $5_1 = $1944($2_1, 7020) - 1 | 0;
   if (($1944($1_1 + ($5_1 << 2) | 0, 0) | 0) != ($4_1 | 0)) {
    $1_1 = $1939($4_1, 156);
    if (($5_1 | 0) > ($1_1 | 0)) {
     while (1) {
      $6_1 = $1944($2_1, 7028);
      $8 = $1_1 << 2;
      $1_1 = $1_1 + 1 | 0;
      $1973($6_1 + $8 | 0, 0, $1944($6_1 + ($1_1 << 2) | 0, 0));
      $6_1 = $1944($1944($2_1, 7028) + $8 | 0, 0);
      $1970($6_1, 156, $1941($6_1, 156) - 1 | 0);
      if (($1_1 | 0) != ($5_1 | 0)) {
       continue
      }
      break;
     }
    }
    $1973($1944($2_1, 7028) + ($5_1 << 2) | 0, 0, $4_1);
    $1970($4_1, 156, $5_1);
   }
   if (($1944($3, 8) | $1944($0_1, 8)) & 8192) {
    break label$80
   }
   $4_1 = $1944(0, 73568);
   $2_1 = $1944($4_1, 7008);
   $5_1 = $1944($4_1 + 7016 | 0, 0);
   $0_1 = $1944((($2_1 << 2) + $5_1 | 0) - 4 | 0, 0);
   if (($0_1 | 0) == ($3 | 0)) {
    break label$80
   }
   if (($1944($0_1, 736) | 0) == ($3 | 0) | ($2_1 | 0) < 2) {
    break label$80
   }
   $1_1 = $2_1 - 2 | 0;
   while (1) {
    $0_1 = $1_1;
    $1_1 = $5_1 + ($1_1 << 2) | 0;
    if (($1944($1_1, 0) | 0) == ($3 | 0)) {
     $1603($1_1, ($5_1 + ($0_1 << 2) | 0) + 4 | 0, $2_1 + ($0_1 ^ -1) << 2);
     $1973((($1944($4_1, 7008) << 2) + $1944($4_1, 7016) | 0) - 4 | 0, 0, $3);
     return;
    }
    $1_1 = $0_1 - 1 | 0;
    if (($0_1 | 0) > 0) {
     continue
    }
    break;
   };
  }
 }
 
 function $128($0_1) {
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $0_1 = (wasm2js_i32$0 = $0_1, wasm2js_i32$1 = $1944(0, 73568) + 228 | 0, wasm2js_i32$2 = $0_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  return $1963($0_1, 0) >= Math_fround(-256.0e3) & $1963($0_1, 4) >= Math_fround(-256.0e3);
 }
 
 function $132($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = $1944(0, 73568);
  $5_1 = $1944($2_1 + 7476 | 0, 0) + Math_imul($0_1, 36) | 0;
  $8 = $1944($5_1, 4);
  $5_1 = $1944($5_1, 8);
  $4_1 = $1944($2_1 + 7472 | 0, 0);
  label$1 : {
   if (($4_1 | 0) >= ($0_1 | 0)) {
    break label$1
   }
   $3 = $4_1;
   if ($4_1) {
    $6_1 = $4_1 + (($4_1 | 0) / 2 | 0) | 0
   } else {
    $6_1 = 8
   }
   $4_1 = ($0_1 | 0) < ($6_1 | 0) ? $6_1 : $0_1;
   if (($3 | 0) >= ($4_1 | 0)) {
    break label$1
   }
   $6_1 = Math_imul($4_1, 36);
   if ($2_1) {
    $3 = $2_1 + 876 | 0;
    $1973($3, 0, $1944($3, 0) + 1 | 0);
   }
   $6_1 = (((wasm2js_i32$1 = $6_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $3 = $1944($2_1, 7476);
   if ($3) {
    $1602($6_1, $3, Math_imul($1944($2_1, 7468), 36));
    $3 = $1944($2_1, 7476);
    label$6 : {
     if (!$3) {
      break label$6
     }
     $7_1 = $1944(0, 73568);
     if (!$7_1) {
      break label$6
     }
     $7_1 = $7_1 + 876 | 0;
     $1973($7_1, 0, $1944($7_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $3, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($2_1, 7472, $4_1);
   $1973($2_1, 7476, $6_1);
  }
  $1973($2_1, 7468, $0_1);
  if ($1_1) {
   label$8 : {
    if (!$5_1) {
     break label$8
    }
    if ($1937($5_1, 139) | !$8) {
     break label$8
    }
    $144($8);
    return;
   }
   label$9 : {
    label$10 : {
     if (!$5_1) {
      break label$10
     }
     if ($1944($2_1, 7564)) {
      break label$10
     }
     $0_1 = $1944($5_1, 752);
     if (!$0_1) {
      break label$10
     }
     if ($1937($0_1, 139)) {
      break label$9
     }
    }
    $0_1 = $5_1;
   }
   $125($0_1);
  }
 }
 
 function $133($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0;
  $1_1 = $1944(0, 73568);
  $3 = $1944($1_1, 7468);
  $2_1 = $1944($1_1, 7480);
  if (($3 | 0) <= ($2_1 | 0)) {
   $0_1 = 0
  } else {
   $0_1 = ($1944($1944($1_1 + 7476 | 0, 0) + Math_imul($2_1, 36) | 0, 0) | 0) == ($0_1 | 0)
  }
  return $0_1;
 }
 
 function $136() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = 0, $13 = 0, $14 = Math_fround(0), $15_1 = Math_fround(0), $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = Math_fround(0), $20_1 = Math_fround(0), $21_1 = 0, $22_1 = 0, $23_1 = 0, $24 = 0, $25_1 = 0.0, $26_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $21_1 = global$0 - 16 | 0;
  global$0 = $21_1;
  $7_1 = $1944(0, 73568);
  $2_1 = $1944($7_1, 12180);
  if (($2_1 | 0) > 0) {
   while (1) {
    $1_1 = $1944($7_1, 12188);
    $0_1 = $2_1;
    $2_1 = $0_1 - 1 | 0;
    $4_1 = $1_1 + Math_imul($2_1, 20) | 0;
    if (($1944($4_1, 4) | 0) == 7) {
     $1603($4_1, $1_1 + Math_imul($0_1, 20) | 0, Math_imul($1944($7_1, 12180) - $0_1 | 0, 20));
     $1973($7_1, 12180, $1944($7_1, 12180) - 1 | 0);
    }
    if (($0_1 | 0) > 1) {
     continue
    }
    break;
   }
  }
  if (($1944($7_1, 12180) | 0) > 0) {
   $0_1 = 0;
   while (1) {
    $2_1 = $1944($7_1, 12188) + Math_imul($0_1, 20) | 0;
    if (!$1944($2_1, 4)) {
     FUNCTION_TABLE[$1944($2_1, 12) | 0]($7_1, $2_1)
    }
    $0_1 = $0_1 + 1 | 0;
    if (($1944($7_1, 12180) | 0) > ($0_1 | 0)) {
     continue
    }
    break;
   };
  }
  $12_1 = $1944(0, 73568);
  label$7 : {
   if (!$1937($12_1 + 180 | 0, 0)) {
    break label$7
   }
   if ($1937($12_1 + 12 | 0, 0) & 2) {
    break label$7
   }
   $1968($12_1, 180, 0);
  }
  if (!$1937($12_1, 12125)) {
   $0_1 = $1944($12_1 + 32 | 0, 0);
   label$9 : {
    if (!$0_1) {
     break label$9
    }
    $1973($21_1, 8, 0);
    $13 = $21_1 + 8 | 0;
    if ($13) {
     $1973($13, 0, 0)
    }
    $8 = $1622($0_1, 13530);
    $0_1 = 0;
    __inlined_func$24 : {
     if (!$8) {
      break __inlined_func$24
     }
     $0_1 = $1630($8);
     $1_1 = -1;
     label$3 : {
      if (($0_1 | 0) == -1) {
       break label$3
      }
      $1_1 = -1;
      if ($1627($8, 0, 2)) {
       break label$3
      }
      $2_1 = $1630($8);
      $1_1 = -1;
      if (($2_1 | 0) == -1) {
       break label$3
      }
      $1_1 = $1627($8, $0_1, 0) ? -1 : $2_1;
     }
     $0_1 = $1_1;
     if (($0_1 | 0) == -1) {
      $1609($8);
      $0_1 = 0;
      break __inlined_func$24;
     }
     $2_1 = $1944(0, 73568);
     if ($2_1) {
      $2_1 = $2_1 + 876 | 0;
      $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
     }
     $4_1 = (((wasm2js_i32$1 = $0_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
     if (!$4_1) {
      $1609($8);
      $0_1 = 0;
      break __inlined_func$24;
     }
     $2_1 = $4_1;
     $1944($8, 76);
     $1_1 = $1944($8, 72);
     $1973($8, 72, $1_1 - 1 | $1_1);
     $1_1 = $1944($8, 4);
     $9 = $1944($8, 8);
     if (($1_1 | 0) == ($9 | 0)) {
      $1_1 = $0_1
     } else {
      $16_1 = $1_1;
      $1_1 = $9 - $1_1 | 0;
      $1_1 = $0_1 >>> 0 > $1_1 >>> 0 ? $1_1 : $0_1;
      $1602($2_1, $16_1, $1_1);
      $1973($8, 4, $1944($8, 4) + $1_1 | 0);
      $2_1 = $1_1 + $2_1 | 0;
      $1_1 = $0_1 - $1_1 | 0;
     }
     __inlined_func$1624 : {
      if ($1_1) {
       while (1) {
        label$6 : {
         if (!$1623($8)) {
          $9 = FUNCTION_TABLE[$1944($8, 32) | 0]($8, $2_1, $1_1) | 0;
          if ($9) {
           break label$6
          }
         }
         $1_1 = $0_1 - $1_1 | 0;
         break __inlined_func$1624;
        }
        $2_1 = $2_1 + $9 | 0;
        $1_1 = $1_1 - $9 | 0;
        if ($1_1) {
         continue
        }
        break;
       }
      }
      $1_1 = $0_1;
     }
     if (($1_1 | 0) != ($0_1 | 0)) {
      $1609($8);
      $0_1 = $1944(0, 73568);
      if ($0_1) {
       $0_1 = $0_1 + 876 | 0;
       $1973($0_1, 0, $1944($0_1, 0) - 1 | 0);
      }
      ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      $0_1 = 0;
      break __inlined_func$24;
     }
     $1609($8);
     if ($13) {
      $1973($13, 0, $0_1)
     }
     $0_1 = $4_1;
    }
    if (!$0_1) {
     break label$9
    }
    $137($0_1, $1944($21_1, 8));
    $2_1 = $1944(0, 73568);
    if ($2_1) {
     $2_1 = $2_1 + 876 | 0;
     $1973($2_1, 0, $1944($2_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$1 = $0_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
   }
   $1968($12_1, 12125, 1);
  }
  $3 = $1963($12_1, 12128);
  label$11 : {
   if (!($3 > Math_fround(0.0))) {
    break label$11
   }
   $3 = Math_fround($3 - $1963($12_1 + 24 | 0, 0));
   $1986($12_1, 12128, $3);
   if (!($3 <= Math_fround(0.0))) {
    break label$11
   }
   $0_1 = $1944($12_1 + 32 | 0, 0);
   label$12 : {
    if ($0_1) {
     $1973($1944(0, 73568), 12128, 0);
     $1973($21_1, 8, 0);
     $2_1 = $114($21_1 + 8 | 0);
     $0_1 = $1622($0_1, 2145);
     if (!$0_1) {
      break label$12
     }
     $1633($2_1, $1944($21_1, 8), $0_1);
     $1609($0_1);
     break label$12;
    }
    $1968($12_1 + 852 | 0, 0, 1);
   }
   $1973($12_1, 12128, 0);
  }
  $1968($7_1, 6996, 1);
  $1970($7_1, 12078, 0);
  $1973($7_1, 7068, 0);
  $1973($7_1, 6984, $1944($7_1, 6984) + 1 | 0);
  $1990($7_1, 6976, $1967($7_1, 6976) + +$1963($7_1 + 24 | 0, 0));
  $0_1 = $1944($7_1 + 12100 | 0, 0);
  label$14 : {
   if (($0_1 | 0) >= 0) {
    break label$14
   }
   $2_1 = $0_1 + (($0_1 | 0) / 2 | 0) | 0;
   $2_1 = ($2_1 | 0) > 0 ? $2_1 : 0;
   if (($0_1 | 0) >= ($2_1 | 0)) {
    break label$14
   }
   $0_1 = $1944(0, 73568);
   if ($0_1) {
    $0_1 = $0_1 + 876 | 0;
    $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
   }
   $0_1 = (((wasm2js_i32$2 = $2_1 << 2, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0) | 0);
   $1_1 = $1944($7_1 + 12104 | 0, 0);
   if ($1_1) {
    $1602($0_1, $1_1, $1944($7_1, 12096) << 2);
    $1_1 = $1944($7_1, 12104);
    label$17 : {
     if (!$1_1) {
      break label$17
     }
     $4_1 = $1944(0, 73568);
     if (!$4_1) {
      break label$17
     }
     $4_1 = $4_1 + 876 | 0;
     $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$1 = $1_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
   }
   $1973($7_1, 12100, $2_1);
   $1973($7_1, 12104, $0_1);
  }
  $1973($7_1, 12096, 0);
  $5_1 = $1963($7_1, 12784);
  $3 = $1963($7_1, 24);
  $0_1 = $1944($7_1, 12776);
  $2_1 = (($0_1 << 2) + $7_1 | 0) + 12296 | 0;
  $1986($7_1, 12784, Math_fround($5_1 + Math_fround($3 - $1963($2_1, 0))));
  $1986($2_1, 0, $3);
  $1973($7_1, 12776, ($0_1 + 1 | 0) % 120 | 0);
  $0_1 = $1944($7_1, 12780);
  $0_1 = (($0_1 | 0) >= 119 ? 119 : $0_1) + 1 | 0;
  $1973($7_1, 12780, $0_1);
  $1_1 = $7_1 + 856 | 0;
  $3 = $1963($7_1, 12784);
  if ($3 > Math_fround(0.0)) {
   $3 = Math_fround(Math_fround(1.0) / Math_fround($3 / Math_fround($0_1 | 0)))
  } else {
   $3 = Math_fround(3402823466385288598117041.0e14)
  }
  $1986($1_1, 0, $3);
  $1_1 = $1944(0, 73568);
  $0_1 = $1944($1944($1_1 + 7504 | 0, 0), 0);
  $1982($0_1, 0, 5, 0);
  $1973($0_1 + 8 | 0, 0, 0);
  $1982($0_1, 12, $1960($1_1 + 16 | 0, 0), i64toi32_i32$HIGH_BITS);
  if (($1944($1_1, 7496) | 0) > 0) {
   $0_1 = 0;
   while (1) {
    $2_1 = $1944($1944($1_1, 7504) + ($0_1 << 2) | 0, 0);
    $4_1 = $1959($2_1, 136);
    $1982($2_1, 120, $4_1, i64toi32_i32$HIGH_BITS);
    $4_1 = $2_1 + 144 | 0;
    $1982($2_1, 128, $1959($4_1, 0), i64toi32_i32$HIGH_BITS);
    $1982($2_1, 136, 0, 0);
    $1982($4_1, 0, 0, 0);
    $5_1 = $1963($2_1 + 8 | 0, 0);
    $3 = $1963($2_1 + 124 | 0, 0);
    $1986($2_1 + 24 | 0, 0, Math_fround($5_1 + $3));
    $6_1 = $1963($2_1, 4);
    $5_1 = $1963($2_1, 120);
    $1986($2_1, 20, Math_fround($6_1 + $5_1));
    $6_1 = $1963($2_1, 128);
    $14 = $1963($2_1, 12);
    $3 = Math_fround(Math_fround($1963($2_1 + 16 | 0, 0) - $3) + $1963($2_1 + 132 | 0, 0));
    $1986($2_1 + 32 | 0, 0, $3 <= Math_fround(0.0) ? Math_fround(0.0) : $3);
    $3 = Math_fround($6_1 + Math_fround($14 - $5_1));
    $1986($2_1, 28, $3 <= Math_fround(0.0) ? Math_fround(0.0) : $3);
    $0_1 = $0_1 + 1 | 0;
    if (($1944($1_1, 7496) | 0) > ($0_1 | 0)) {
     continue
    }
    break;
   };
  }
  $1968($1944($7_1 + 152 | 0, 0), 16, 1);
  $0_1 = $1944($1_1 + 164 | 0, 0);
  if (!$0_1) {
   $0_1 = $1944($1944($1944($1_1 + 152 | 0, 0) + 60 | 0, 0), 0)
  }
  $1973($1_1, 6464, $0_1);
  $3 = Math_fround(Math_fround($1963($1_1 + 156 | 0, 0) * $1963($0_1, 16)) * $1963($0_1, 68));
  $3 = $3 <= Math_fround(1.0) ? Math_fround(1.0) : $3;
  $1986($1_1, 6472, $3);
  $2_1 = $1944($1_1, 7080);
  label$22 : {
   if (!$2_1) {
    break label$22
   }
   $11_1 = Math_fround($3 * $1963($2_1, 572));
   $2_1 = $1944($2_1, 728);
   if (!$2_1) {
    break label$22
   }
   $11_1 = Math_fround($11_1 * $1963($2_1, 572));
  }
  $1986($1_1, 6468, $11_1);
  $2_1 = $1944($0_1, 48);
  $4_1 = $1959($2_1, 44);
  $8 = i64toi32_i32$HIGH_BITS;
  $1973($1_1 + 6972 | 0, 0, $2_1 + 88 | 0);
  $1982($1_1, 6476, $4_1, $8);
  $1986($1_1 + 6488 | 0, 0, $11_1);
  $1973($1_1 + 6484 | 0, 0, $0_1);
  $1_1 = $1944($7_1, 7496);
  label$25 : {
   if (($1_1 | 0) <= 0) {
    $11_1 = Math_fround(3402823466385288598117041.0e14);
    $3 = Math_fround(3402823466385288598117041.0e14);
    $14 = Math_fround(-3402823466385288598117041.0e14);
    $5_1 = Math_fround(-3402823466385288598117041.0e14);
    break label$25;
   }
   $4_1 = $1944($7_1 + 7504 | 0, 0);
   $0_1 = 0;
   $5_1 = Math_fround(-3402823466385288598117041.0e14);
   $14 = Math_fround(-3402823466385288598117041.0e14);
   $3 = Math_fround(3402823466385288598117041.0e14);
   $6_1 = Math_fround(3402823466385288598117041.0e14);
   while (1) {
    $2_1 = $1944($4_1 + ($0_1 << 2) | 0, 0);
    $15_1 = $1963($2_1, 4);
    $6_1 = $6_1 > $15_1 ? $15_1 : $6_1;
    $11_1 = $6_1;
    $19 = $1963($2_1 + 8 | 0, 0);
    $3 = $3 > $19 ? $19 : $3;
    $15_1 = Math_fround($15_1 + $1963($2_1, 12));
    $14 = $14 < $15_1 ? $15_1 : $14;
    $15_1 = Math_fround($19 + $1963($2_1 + 16 | 0, 0));
    $5_1 = $5_1 < $15_1 ? $15_1 : $5_1;
    $0_1 = $0_1 + 1 | 0;
    if (($1_1 | 0) != ($0_1 | 0)) {
     continue
    }
    break;
   };
  }
  $1986($7_1 + 6512 | 0, 0, $5_1);
  $1986($7_1 + 6508 | 0, 0, $14);
  $1986($7_1 + 6504 | 0, 0, $3);
  $1986($7_1 + 6500 | 0, 0, $11_1);
  $1986($7_1 + 6492 | 0, 0, $1963($7_1 + 5608 | 0, 0));
  $3 = $1963($7_1 + 5612 | 0, 0);
  $1_1 = 0;
  $0_1 = $7_1 + 6476 | 0;
  if ($1963($0_1, 20) != $3) {
   $1986($0_1, 20, $3);
   while (1) {
    $4_1 = ($0_1 + $1_1 | 0) + 432 | 0;
    if ($1_1) {
     $5_1 = Math_fround($1_1 | 0);
     $5_1 = Math_fround(Math_ceil(Math_fround(Math_fround(3.1415927410125732) / $1590(Math_fround(Math_fround(1.0) - Math_fround(($3 < $5_1 ? $3 : $5_1) / $5_1))))));
     label$4 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $2_1 = ~~$5_1;
       break label$4;
      }
      $2_1 = -2147483648;
     }
     $2_1 = ($2_1 + 1 | 0) / 2 << 1;
     $2_1 = ($2_1 | 0) >= 512 ? 512 : $2_1;
     $2_1 = ($2_1 | 0) <= 4 ? 4 : $2_1;
    } else {
     $2_1 = 0
    }
    $1968($4_1, 0, $2_1);
    $1_1 = $1_1 + 1 | 0;
    if (($1_1 | 0) != 64) {
     continue
    }
    break;
   };
   $1986($0_1, 428, Math_fround($3 / Math_fround(2.1410584449768066e-03)));
  }
  $0_1 = $1937($7_1 + 5604 | 0, 0);
  $1973($7_1 + 6516 | 0, 0, $0_1);
  label$28 : {
   if (!$1937($7_1 + 5605 | 0, 0)) {
    break label$28
   }
   if ($1937($1944($1944($7_1, 6464), 48), 0) & 4) {
    break label$28
   }
   $1973($7_1, 6516, $0_1 | 2);
  }
  if ($1937($7_1 + 5606 | 0, 0)) {
   $1973($7_1, 6516, $1944($7_1, 6516) | 4)
  }
  if ($1937($7_1 + 12 | 0, 0) & 8) {
   $1973($7_1, 6516, $1944($7_1, 6516) | 8)
  }
  if (($1944($7_1, 7496) | 0) > 0) {
   $0_1 = 0;
   while (1) {
    $2_1 = $1944($1944($7_1, 7504) + ($0_1 << 2) | 0, 0);
    $1982($2_1, 52, 0, 0);
    $1973($2_1 + 92 | 0, 0, 0);
    $1982($2_1 + 84 | 0, 0, 0, 0);
    $1982($2_1 + 76 | 0, 0, 0, 0);
    $1982($2_1 + 68 | 0, 0, 0, 0);
    $1982($2_1 + 60 | 0, 0, 0, 0);
    $0_1 = $0_1 + 1 | 0;
    if (($1944($7_1, 7496) | 0) > ($0_1 | 0)) {
     continue
    }
    break;
   };
  }
  label$33 : {
   if (!$1937($7_1, 7876)) {
    break label$33
   }
   $0_1 = $1944($7_1 + 7900 | 0, 0);
   if (($1944($7_1, 7136) | 0) != ($0_1 | 0)) {
    break label$33
   }
   $2_1 = $1944(0, 73568);
   if (($1944($2_1, 7136) | 0) == ($0_1 | 0)) {
    $1973($2_1, 7140, $0_1)
   }
   if (($1944($2_1, 7196) | 0) != ($0_1 | 0)) {
    break label$33
   }
   $1968($2_1, 7200, 1);
  }
  label$35 : {
   label$36 : {
    if (!$1944($7_1, 7120)) {
     $1973($7_1, 7128, 0);
     break label$36;
    }
    $0_1 = $1944($7_1, 7116);
    if (!$0_1) {
     break label$35
    }
    if (($1944($7_1, 7136) | 0) != ($0_1 | 0)) {
     break label$35
    }
   }
   $1973($7_1, 7132, 0);
  }
  $0_1 = $1944($7_1, 7116);
  label$38 : {
   if (!$0_1) {
    break label$38
   }
   $1986($7_1, 7128, Math_fround($1963($7_1, 24) + $1963($7_1, 7128)));
   if (($1944($7_1, 7136) | 0) == ($0_1 | 0)) {
    break label$38
   }
   $1986($7_1, 7132, Math_fround($1963($7_1, 24) + $1963($7_1, 7132)));
  }
  $1973($7_1, 7120, $0_1);
  $1968($7_1, 7127, 0);
  $1973($7_1, 7116, 0);
  $1968($7_1, 7126, $1937($7_1, 7125));
  $1970($7_1, 7124, 0);
  $1_1 = $1944($7_1, 7140);
  $0_1 = $1944($7_1, 7136);
  label$39 : {
   if (($1_1 | 0) == ($0_1 | 0) | !$0_1) {
    break label$39
   }
   if (($1944($7_1, 7196) | 0) != ($0_1 | 0)) {
    break label$39
   }
   $0_1 = $1944(0, 73568);
   $2_1 = $1944($0_1, 7136);
   $1968($0_1, 7148, ($2_1 | 0) != 0);
   if ($2_1) {
    $1973($0_1, 7192, -1);
    $1969($0_1, 7151, 0);
    $1973($0_1, 7144, 0);
   }
   $1973($0_1, 7184, 0);
   $1969($0_1, 7149, 0);
   $1973($0_1, 7136, 0);
   $1983($0_1, 7168, 0, 0);
   $1982($0_1, 7156, 0, 0);
   $1969($0_1, 7153, 0);
  }
  $0_1 = $1944($7_1, 7136);
  if ($0_1) {
   $1986($7_1, 7144, Math_fround($1963($7_1, 24) + $1963($7_1, 7144)))
  }
  $1973($7_1, 7196, $0_1);
  $1968($7_1, 7200, 0);
  $1968($7_1, 7153, 0);
  $1973($7_1, 7140, 0);
  $1968($7_1, 7148, 0);
  $1973($7_1, 7204, $1944($7_1, 7184));
  $1968($7_1, 7201, $1937($7_1, 7152));
  $1986($7_1, 7212, Math_fround($1963($7_1, 24) + $1963($7_1, 7212)));
  $2_1 = $1944($7_1, 11968);
  if (!(!$2_1 | ($0_1 | 0) == ($2_1 | 0))) {
   $1973($7_1, 11968, 0)
  }
  if (!$0_1) {
   $1983($7_1, 7168, 0, 0);
   $1982($7_1, 7156, 0, 0);
  }
  $1973($7_1, 7988, 0);
  $1969($7_1, 7877, 0);
  $1973($7_1, 7980, $1944($7_1, 7976));
  $1982($7_1, 7972, 2139095039, 0);
  if ($1937($7_1 + 5400 | 0, 0)) {
   $1604($7_1 + 256 | 0, 0, 512);
   $0_1 = 0;
   while (1) {
    $2_1 = ($0_1 << 2) + $7_1 | 0;
    $1973($2_1 + 1140 | 0, 0, -1082130432);
    $1973($2_1 + 3188 | 0, 0, -1082130432);
    $0_1 = $0_1 + 1 | 0;
    if (($0_1 | 0) != 512) {
     continue
    }
    break;
   };
   $1982($7_1 + 892 | 0, 0, 0, 0);
   $1973($7_1 + 252 | 0, 0, 0);
   $0_1 = 0;
   while (1) {
    $2_1 = ($0_1 << 2) + $7_1 | 0;
    $1973($2_1 + 5236 | 0, 0, -1082130432);
    $1973($2_1 + 5316 | 0, 0, -1082130432);
    $0_1 = $0_1 + 1 | 0;
    if (($0_1 | 0) != 20) {
     continue
    }
    break;
   };
   $1968($7_1, 5400, 0);
  }
  $9 = $1944(0, 73568);
  $0_1 = $1937($9 + 252 | 0, 0);
  $0_1 = $1937($9 + 253 | 0, 0) ? $0_1 | 2 : $0_1;
  $0_1 = $1937($9 + 254 | 0, 0) ? $0_1 | 4 : $0_1;
  $1973($7_1 + 892 | 0, 0, $1937($9 + 255 | 0, 0) ? $0_1 | 8 : $0_1);
  $1602($7_1 + 3188 | 0, $7_1 + 1140 | 0, 2048);
  $0_1 = 0;
  while (1) {
   $1_1 = (($0_1 << 2) + $7_1 | 0) + 1140 | 0;
   $5_1 = Math_fround(-1.0);
   label$48 : {
    if (!$1937(($0_1 + $7_1 | 0) + 256 | 0, 0)) {
     break label$48
    }
    $3 = $1963((($0_1 << 2) + $7_1 | 0) + 1140 | 0, 0);
    $5_1 = Math_fround(0.0);
    if ($3 < Math_fround(0.0)) {
     break label$48
    }
    $5_1 = Math_fround($3 + $1963($7_1, 24));
   }
   $1986($1_1, 0, $5_1);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 512) {
    continue
   }
   break;
  };
  $1968($9 + 851 | 0, 0, 0);
  $0_1 = 0;
  $2_1 = $1944($9, 8);
  if ($2_1 & 2) {
   $0_1 = $1937($9 + 12 | 0, 0) & 1
  }
  $22_1 = $2_1 & 1;
  $8 = $0_1;
  label$51 : {
   if (!$0_1) {
    break label$51
   }
   if (($1944($9, 7560) | 0) == 3) {
    break label$51
   }
   label$52 : {
    if ($1963($9 + 768 | 0, 0) > Math_fround(0.0)) {
     break label$52
    }
    if ($1963($9 + 776 | 0, 0) > Math_fround(0.0)) {
     break label$52
    }
    if ($1963($9 + 772 | 0, 0) > Math_fround(0.0)) {
     break label$52
    }
    if ($1963($9 + 780 | 0, 0) > Math_fround(0.0)) {
     break label$52
    }
    if ($1963($9 + 784 | 0, 0) > Math_fround(0.0)) {
     break label$52
    }
    if ($1963($9 + 788 | 0, 0) > Math_fround(0.0)) {
     break label$52
    }
    if ($1963($9 + 792 | 0, 0) > Math_fround(0.0)) {
     break label$52
    }
    if (!($1963($9 + 796 | 0, 0) > Math_fround(0.0))) {
     break label$51
    }
   }
   $1973($9, 7560, 3);
  }
  label$53 : {
   if (!$22_1) {
    break label$53
   }
   $0_1 = $1944($9 + 100 | 0, 0);
   label$54 : {
    if (($0_1 | 0) < 0) {
     break label$54
    }
    if (!$1937(($0_1 + $9 | 0) + 256 | 0, 0)) {
     break label$54
    }
    $1973($9, 7560, 2);
    $1973($9 + 768 | 0, 0, 1065353216);
   }
   $0_1 = $1944($9 + 104 | 0, 0);
   label$55 : {
    if (($0_1 | 0) < 0) {
     break label$55
    }
    if (!$1937(($0_1 + $9 | 0) + 256 | 0, 0)) {
     break label$55
    }
    $1973($9, 7560, 2);
    $1973($9 + 776 | 0, 0, 1065353216);
   }
   $0_1 = $1944($9 + 108 | 0, 0);
   label$56 : {
    if (($0_1 | 0) < 0) {
     break label$56
    }
    if (!$1937(($0_1 + $9 | 0) + 256 | 0, 0)) {
     break label$56
    }
    $1973($9, 7560, 2);
    $1973($9 + 772 | 0, 0, 1065353216);
   }
   $0_1 = $1944($9 + 56 | 0, 0);
   label$57 : {
    if (($0_1 | 0) < 0) {
     break label$57
    }
    if (!$1937(($0_1 + $9 | 0) + 256 | 0, 0)) {
     break label$57
    }
    $1973($9, 7560, 2);
    $1973($9 + 832 | 0, 0, 1065353216);
   }
   $0_1 = $1944($9 + 60 | 0, 0);
   label$58 : {
    if (($0_1 | 0) < 0) {
     break label$58
    }
    if (!$1937(($0_1 + $9 | 0) + 256 | 0, 0)) {
     break label$58
    }
    $1973($9, 7560, 2);
    $1973($9 + 836 | 0, 0, 1065353216);
   }
   $0_1 = $1944($9 - -64 | 0, 0);
   label$59 : {
    if (($0_1 | 0) < 0) {
     break label$59
    }
    if (!$1937(($0_1 + $9 | 0) + 256 | 0, 0)) {
     break label$59
    }
    $1973($9, 7560, 2);
    $1973($9 + 840 | 0, 0, 1065353216);
   }
   $0_1 = $1944($9 + 68 | 0, 0);
   label$60 : {
    if (($0_1 | 0) < 0) {
     break label$60
    }
    if (!$1937(($0_1 + $9 | 0) + 256 | 0, 0)) {
     break label$60
    }
    $1973($9, 7560, 2);
    $1973($9 + 844 | 0, 0, 1065353216);
   }
   if ($1937($9, 252)) {
    $1973($9 + 824 | 0, 0, 1065353216)
   }
   if (!$1937($9, 253)) {
    break label$53
   }
   $1973($9 + 828 | 0, 0, 1065353216);
  }
  $1602($9 + 5316 | 0, $9 + 5236 | 0, 80);
  $0_1 = 0;
  while (1) {
   $2_1 = $9 + ($0_1 << 2) | 0;
   $5_1 = Math_fround(-1.0);
   label$63 : {
    if (!($1963($2_1 + 768 | 0, 0) > Math_fround(0.0))) {
     break label$63
    }
    $3 = $1963($2_1 + 5236 | 0, 0);
    $5_1 = Math_fround(0.0);
    if ($3 < Math_fround(0.0)) {
     break label$63
    }
    $5_1 = Math_fround($3 + $1963($9, 24));
   }
   $3 = $5_1;
   $1986($2_1 + 5236 | 0, 0, $3);
   $2_1 = $0_1 + 1 | 0;
   $0_1 = $2_1;
   if (($0_1 | 0) != 20) {
    continue
   }
   break;
  };
  $0_1 = $1944($9, 7576);
  label$64 : {
   if (!$0_1) {
    break label$64
   }
   $2_1 = $1944($9, 7508);
   if (!$2_1) {
    break label$64
   }
   $1973($9, 7516, 0);
   $1973($9, 7512, $0_1);
   $1_1 = $1944($9, 7564);
   $1973((($1_1 << 2) + $2_1 | 0) + 756 | 0, 0, $0_1);
   $0_1 = ($1_1 << 4) + $2_1 | 0;
   $1982($0_1 + 772 | 0, 0, $1959($9 + 7588 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1982($0_1 + 764 | 0, 0, $1959($9, 7580), i64toi32_i32$HIGH_BITS);
   $1968($9, 7568, 1);
   if (!$1937($9, 7574)) {
    break label$64
   }
   $1968($9, 7571, 1);
   $1969($9, 7569, 1);
  }
  $1973($9, 7576, 0);
  $1969($9, 7573, 0);
  $1973($9, 7540, 0);
  if ($1937($9, 7596)) {
   $12_1 = global$0 - 32 | 0;
   global$0 = $12_1;
   $1_1 = $1944(0, 73568);
   label$1 : {
    if ($1944($1_1 + 7672 | 0, 0)) {
     $0_1 = $1_1 + 7668 | 0;
     break label$1;
    }
    $0_1 = $1944($1_1 + 7760 | 0, 0) ? $1_1 + 7756 | 0 : 0;
   }
   $13 = $1944($1_1, 7600);
   $4_1 = $13 & 1024;
   label$31 : {
    if (!$4_1) {
     break label$31
    }
    label$502 : {
     if (($1944($1_1, 7664) | 0) == 1) {
      break label$502
     }
     if (!$1944($1_1, 7660)) {
      break label$502
     }
     break label$31;
    }
    $0_1 = $1944($1_1 + 7804 | 0, 0) ? $1_1 + 7800 | 0 : $0_1;
   }
   label$65 : {
    label$71 : {
     if (!$0_1) {
      if ($4_1) {
       $1973($1_1, 7600, $13 | 4096)
      }
      if (!$1944($1_1, 7512)) {
       break label$65
      }
      $0_1 = $1_1;
      if (!($1937($0_1 + 7601 | 0, 0) & 16)) {
       break label$71
      }
      break label$65;
     }
     label$10 : {
      if (!($13 & 32)) {
       break label$10
      }
      $4_1 = $1944($1_1 + 7716 | 0, 0);
      if (!$4_1) {
       break label$10
      }
      $0_1 = ($1944($1_1, 7512) | 0) == ($4_1 | 0) ? $0_1 : $1_1 + 7712 | 0;
     }
     $4_1 = $1_1 + 7756 | 0;
     label$13 : {
      if (($0_1 | 0) == ($4_1 | 0)) {
       break label$13
      }
      if (!$1944($1_1 + 7760 | 0, 0)) {
       break label$13
      }
      if (($1944($1944($1_1, 7756), 728) | 0) != ($1944($1_1, 7508) | 0)) {
       break label$13
      }
      $3 = $1963($1_1 + 7788 | 0, 0);
      $5_1 = $1963($0_1, 32);
      if (!($3 < $5_1)) {
       if ($3 != $5_1) {
        break label$13
       }
       if (!($1963($1_1 + 7792 | 0, 0) < $1963($0_1, 36))) {
        break label$13
       }
      }
      $0_1 = $4_1;
     }
     label$19 : {
      if ($1944($1_1, 7564)) {
       break label$19
      }
      if ($13 & 64) {
       $3 = Math_fround(0.0);
       if (($1944($1_1, 7612) | 0) == 2) {
        $3 = $1963($1944($0_1, 0) + 100 | 0, 0)
       }
       $4_1 = $1944($0_1, 0);
       $1973($4_1 + 124 | 0, 0, 0);
       $1973($4_1 + 116 | 0, 0, 0);
       $1986($4_1 + 108 | 0, 0, $3);
       break label$19;
      }
      $5_1 = $1963($0_1 + 16 | 0, 0);
      $6_1 = $1963($0_1 + 20 | 0, 0);
      $4_1 = $1944($0_1, 0);
      $3 = $1963($4_1 + 224 | 0, 0);
      $11_1 = $1963($0_1, 12);
      $14 = $1963($4_1 + 228 | 0, 0);
      $1986($12_1 + 28 | 0, 0, Math_fround($14 + $1963($0_1 + 24 | 0, 0)));
      $1986($12_1, 24, Math_fround($3 + $6_1));
      $1986($12_1, 20, Math_fround($14 + $5_1));
      $1986($12_1, 16, Math_fround($3 + $11_1));
      $264($12_1 + 8 | 0, $4_1, $12_1 + 16 | 0, $1944($1_1, 7604));
     }
     $1973($1_1, 7508, $1944($0_1, 0));
     $4_1 = $1944($1_1, 7136);
     $13 = $1944($0_1, 4);
     if (($4_1 | 0) != ($13 | 0)) {
      $4_1 = $1944(0, 73568);
      $10_1 = $1944($4_1, 7136);
      $1968($4_1, 7148, ($10_1 | 0) != 0);
      if ($10_1) {
       $1973($4_1, 7192, -1);
       $1969($4_1, 7151, 0);
       $1973($4_1, 7144, 0);
      }
      $1973($4_1, 7184, 0);
      $1969($4_1, 7149, 0);
      $1973($4_1, 7136, 0);
      $1983($4_1, 7168, 0, 0);
      $1982($4_1, 7156, 0, 0);
      $1969($4_1, 7153, 0);
     }
     if (($1944($1_1, 7512) | 0) != ($13 | 0)) {
      $1973($1_1, 7540, $13);
      $1973($1_1, 7544, $1944($0_1, 8));
      $1973($1_1, 7548, $1944($1_1, 7608));
     }
     $16_1 = $1944($0_1, 8);
     $4_1 = $1944(0, 73568);
     $10_1 = $1944($1_1, 7564);
     $1973($4_1, 7564, $10_1);
     $1973($4_1, 7512, $13);
     $1973($4_1, 7516, $16_1);
     $16_1 = $1944($4_1, 7508);
     $1973(($16_1 + ($10_1 << 2) | 0) + 756 | 0, 0, $13);
     $13 = $16_1 + ($10_1 << 4) | 0;
     $1982($13 + 772 | 0, 0, $1959($0_1 + 20 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1982($13 + 764 | 0, 0, $1959($0_1, 12), i64toi32_i32$HIGH_BITS);
     $13 = $1944($1_1, 7600);
     label$252 : {
      if (!($13 & 1024)) {
       break label$252
      }
      if (!($1937($0_1 + 29 | 0, 0) & 1)) {
       break label$252
      }
      $10_1 = $1944($0_1, 4);
      $1973($1_1, 7600, $13 | 4096);
      $1973($1_1, 7556, 5);
      $1973($1_1, 7552, $10_1);
     }
     $13 = $1944($1_1, 7600);
     if ($13 & 2048) {
      $0_1 = $1944($0_1, 4);
      $1973($1_1, 7556, 0);
      $1973($1_1, 7552, $0_1);
     }
     $0_1 = $4_1;
     if ($13 & 4096) {
      break label$65
     }
    }
    $1968($0_1, 7571, 1);
    $1969($0_1, 7569, 1);
   }
   global$0 = $12_1 + 32 | 0;
  }
  $1973($9, 7664, 0);
  $1970($9, 7596, 0);
  $18_1 = 0;
  label$66 : {
   if (!$1937($9, 7569)) {
    break label$66
   }
   $18_1 = 0;
   if (!$1937($9, 7568)) {
    break label$66
   }
   $18_1 = 0;
   if ($1937($9, 7570)) {
    break label$66
   }
   $18_1 = 0;
   if (!$1937($9, 7571)) {
    break label$66
   }
   $18_1 = ($1944($9, 7508) | 0) != 0;
  }
  $1968($9, 7569, 0);
  $1_1 = $1944($9, 7508);
  label$70 : {
   if (!$1_1) {
    break label$70
   }
   $4_1 = $1944($9, 7564);
   $0_1 = $1_1;
   label$713 : {
    while (1) {
     label$72 : {
      if (($1944($0_1, 736) | 0) == ($0_1 | 0)) {
       break label$72
      }
      if ($1937($0_1 + 11 | 0, 0) & 20) {
       break label$72
      }
      $2_1 = $1944($0_1, 728);
      $0_1 = $2_1;
      if ($0_1) {
       continue
      }
      break label$713;
     }
     break;
    };
    if (($0_1 | 0) == ($1_1 | 0)) {
     break label$713
    }
    $1973($0_1, 752, $1_1);
   }
   if (!$1_1) {
    break label$70
   }
   if ($4_1 | !$1944($1_1, 752)) {
    break label$70
   }
   $1973($1_1, 752, 0);
  }
  $10_1 = $1944(0, 73568);
  $4_1 = $1944($10_1, 7468);
  while (1) {
   label$74 : {
    if (($4_1 | 0) <= 0) {
     $1_1 = 0;
     break label$74;
    }
    $0_1 = $2_1;
    $4_1 = $4_1 - 1 | 0;
    $2_1 = $1944($1944($10_1, 7476) + Math_imul($4_1, 36) | 0, 4);
    label$77 : {
     if ($2_1) {
      $1_1 = 0;
      if ($1937($2_1 + 11 | 0, 0) & 8) {
       break label$77
      }
     }
     $2_1 = $0_1;
     $1_1 = 1;
    }
    $0_1 = $1_1;
    $1_1 = $2_1;
    if ($0_1) {
     continue
    }
   }
   break;
  };
  if ($1_1) {
   $1973($10_1, 7844, 0)
  }
  label$80 : {
   if (!$1944($10_1, 7848)) {
    break label$80
   }
   if ($1944($10_1, 7844)) {
    break label$80
   }
   $3 = Math_fround($1963($10_1, 7860) + Math_fround($1963($10_1 + 24 | 0, 0) * Math_fround(-10.0)));
   $3 = $3 >= Math_fround(0.0) ? $3 : Math_fround(0.0);
   $1986($10_1, 7860, $3);
   if (!($1963($10_1, 7868) <= Math_fround(0.0)) | !($3 <= Math_fround(0.0))) {
    break label$80
   }
   $1973($10_1, 7848, 0);
  }
  $12_1 = 0;
  label$81 : {
   if ($1_1) {
    break label$81
   }
   $12_1 = 0;
   if ($1944($10_1, 7844)) {
    break label$81
   }
   $3 = $1963($10_1 + 5248 | 0, 0);
   $12_1 = ($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 == Math_fround(0.0) ? Math_fround(1.0) : Math_fround(0.0)) > Math_fround(0.0);
  }
  label$82 : {
   if ($1_1) {
    $0_1 = 0;
    break label$82;
   }
   if ($1944($10_1, 7844)) {
    $0_1 = 0;
    break label$82;
   }
   $0_1 = 0;
   if (!$1937($10_1 + 252 | 0, 0)) {
    break label$82
   }
   $0_1 = $1944($10_1 + 52 | 0, 0);
   if (($0_1 | 0) < 0) {
    $0_1 = 0;
    break label$82;
   }
   $3 = $1963(($10_1 + ($0_1 << 2) | 0) + 1140 | 0, 0);
   $0_1 = $3 == Math_fround(0.0);
   if ($0_1) {
    break label$82
   }
   $5_1 = $1963($10_1 + 140 | 0, 0);
   if (!($5_1 < $3)) {
    $0_1 = 0;
    break label$82;
   }
   $0_1 = 0;
   $6_1 = Math_fround($3 - $1963($10_1 + 24 | 0, 0));
   if ($6_1 >= $3) {
    break label$82
   }
   $11_1 = $1963($10_1 + 144 | 0, 0);
   if ($11_1 <= Math_fround(0.0)) {
    $0_1 = $5_1 > $6_1 & $3 >= $5_1;
    break label$82;
   }
   if ($5_1 > $6_1) {
    $0_1 = -1
   } else {
    $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $11_1);
    label$89 : {
     if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$6_1;
      break label$89;
     }
     $0_1 = -2147483648;
    }
   }
   if ($3 < $5_1) {
    $1_1 = -1
   } else {
    $3 = Math_fround(Math_fround($3 - $5_1) / $11_1);
    label$92 : {
     if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
      $1_1 = ~~$3;
      break label$92;
     }
     $1_1 = -2147483648;
    }
   }
   $0_1 = ($1_1 | 0) > ($0_1 | 0);
  }
  label$94 : {
   if (($0_1 | $12_1) != 1) {
    break label$94
   }
   $2_1 = $0_1;
   $0_1 = $1944($10_1, 7508);
   label$95 : {
    if ($0_1) {
     break label$95
    }
    $0_1 = $1944($10_1, 7020);
    if (($0_1 | 0) > 0) {
     $13 = $1944($10_1 + 7028 | 0, 0);
     while (1) {
      $1_1 = $0_1;
      $4_1 = $0_1 - 1 | 0;
      $0_1 = $1944($13 + ($4_1 << 2) | 0, 0);
      label$98 : {
       if (!$1937($0_1, 139)) {
        break label$98
       }
       if (($1944($0_1, 736) | 0) != ($0_1 | 0)) {
        break label$98
       }
       if (!($1937($0_1 + 10 | 0, 0) & 8)) {
        break label$95
       }
      }
      $0_1 = $4_1;
      if (($1_1 | 0) > 1) {
       continue
      }
      break;
     };
    }
    $0_1 = 0;
   }
   if (!$0_1) {
    break label$94
   }
   $0_1 = $1944($0_1, 736);
   $1973($10_1, 7844, $0_1);
   $1973($10_1, 7848, $0_1);
   $1968($10_1, 7864, $12_1);
   $1983($10_1, 7856, 0, 0);
   $1973($10_1, 7560, $2_1 ? 2 : 3);
  }
  $11_1 = $1963($10_1 + 24 | 0, 0);
  $3 = Math_fround($11_1 + $1963($10_1, 7856));
  $1986($10_1, 7856, $3);
  label$99 : {
   if (!$1944($10_1, 7844)) {
    $0_1 = 0;
    $2_1 = 0;
    break label$99;
   }
   $0_1 = 0;
   $2_1 = 0;
   if (($1944($10_1, 7560) | 0) != 3) {
    break label$99
   }
   $5_1 = $1963($10_1, 7860);
   $3 = Math_fround(Math_fround($3 + Math_fround(-.20000000298023224)) / Math_fround(.05000000074505806));
   $3 = $3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3;
   $1986($10_1, 7860, $3 <= $5_1 ? $5_1 : $3);
   $3 = $1963($10_1 + 5284 | 0, 0);
   if ($3 < Math_fround(0.0)) {
    $3 = Math_fround(0.0)
   } else {
    $0_1 = 1;
    label$102 : {
     if ($3 == Math_fround(0.0)) {
      break label$102
     }
     $6_1 = Math_fround($3 - $11_1);
     $0_1 = 0;
     if ($6_1 >= $3) {
      break label$102
     }
     $5_1 = Math_fround($1963($10_1 + 140 | 0, 0) * Math_fround(1.25));
     $14 = $1963($10_1 + 144 | 0, 0);
     $14 = Math_fround($14 + $14);
     $0_1 = $5_1 > $6_1 & $3 >= $5_1;
     if ($14 <= Math_fround(0.0)) {
      break label$102
     }
     if ($5_1 > $6_1) {
      $0_1 = -1
     } else {
      $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $14);
      label$105 : {
       if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
        $0_1 = ~~$6_1;
        break label$105;
       }
       $0_1 = -2147483648;
      }
     }
     if ($3 < $5_1) {
      $1_1 = -1
     } else {
      $3 = Math_fround(Math_fround($3 - $5_1) / $14);
      label$108 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $1_1 = ~~$3;
        break label$108;
       }
       $1_1 = -2147483648;
      }
     }
     $0_1 = $1_1 - $0_1 | 0;
    }
    $3 = Math_fround($0_1 | 0);
   }
   $4_1 = $3 > Math_fround(0.0);
   $3 = $1963($10_1 + 5288 | 0, 0);
   if ($3 < Math_fround(0.0)) {
    $3 = Math_fround(0.0)
   } else {
    $0_1 = 1;
    label$111 : {
     if ($3 == Math_fround(0.0)) {
      break label$111
     }
     $6_1 = Math_fround($3 - $11_1);
     $0_1 = 0;
     if ($6_1 >= $3) {
      break label$111
     }
     $5_1 = Math_fround($1963($10_1 + 140 | 0, 0) * Math_fround(1.25));
     $11_1 = $1963($10_1 + 144 | 0, 0);
     $11_1 = Math_fround($11_1 + $11_1);
     $0_1 = $5_1 > $6_1 & $3 >= $5_1;
     if ($11_1 <= Math_fround(0.0)) {
      break label$111
     }
     if ($5_1 > $6_1) {
      $0_1 = -1
     } else {
      $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $11_1);
      label$114 : {
       if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
        $0_1 = ~~$6_1;
        break label$114;
       }
       $0_1 = -2147483648;
      }
     }
     if ($3 < $5_1) {
      $1_1 = -1
     } else {
      $3 = Math_fround(Math_fround($3 - $5_1) / $11_1);
      label$117 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $1_1 = ~~$3;
        break label$117;
       }
       $1_1 = -2147483648;
      }
     }
     $0_1 = $1_1 - $0_1 | 0;
    }
    $3 = Math_fround($0_1 | 0);
   }
   $0_1 = $4_1 - ($3 > Math_fround(0.0)) | 0;
   if ($0_1) {
    $139($0_1);
    $1973($10_1, 7860, 1065353216);
   }
   $0_1 = 0;
   if ($1963($1944(0, 73568) + 780 | 0, 0) > Math_fround(0.0)) {
    break label$99
   }
   $0_1 = $1963($10_1, 7860) < Math_fround(1.0) & ($1937($10_1, 7864) | 0) != 0;
   $1968($10_1, 7864, $0_1);
   label$120 : {
    if ($0_1) {
     $0_1 = ($1944($10_1, 7508) | 0) != 0;
     break label$120;
    }
    $2_1 = $1944($10_1, 7844);
    $0_1 = 0;
   }
   $1973($10_1, 7844, 0);
  }
  $1_1 = $0_1;
  label$122 : {
   if (!$1944($10_1, 7844)) {
    break label$122
   }
   if (($1944($10_1, 7560) | 0) != 2) {
    break label$122
   }
   $5_1 = $1963($10_1, 7860);
   $3 = Math_fround(Math_fround($1963($10_1, 7856) + Math_fround(-.20000000298023224)) / Math_fround(.05000000074505806));
   $3 = $3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3;
   $1986($10_1, 7860, $3 <= $5_1 ? $5_1 : $3);
   $4_1 = $1944(0, 73568);
   $0_1 = $1944($4_1 + 52 | 0, 0);
   label$125 : {
    if (($0_1 | 0) < 0) {
     break label$125
    }
    $3 = $1963(($4_1 + ($0_1 << 2) | 0) + 1140 | 0, 0);
    $0_1 = $3 == Math_fround(0.0);
    label$126 : {
     if ($0_1) {
      break label$126
     }
     $5_1 = $1963($4_1 + 140 | 0, 0);
     if (!($5_1 < $3)) {
      break label$125
     }
     $6_1 = Math_fround($3 - $1963($4_1 + 24 | 0, 0));
     if ($6_1 >= $3) {
      break label$125
     }
     $11_1 = $1963($4_1 + 144 | 0, 0);
     if ($11_1 <= Math_fround(0.0)) {
      $0_1 = $5_1 > $6_1 & $3 >= $5_1;
      break label$126;
     }
     if ($5_1 > $6_1) {
      $0_1 = -1
     } else {
      $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $11_1);
      label$129 : {
       if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
        $0_1 = ~~$6_1;
        break label$129;
       }
       $0_1 = -2147483648;
      }
     }
     if ($3 < $5_1) {
      $4_1 = -1
     } else {
      $3 = Math_fround(Math_fround($3 - $5_1) / $11_1);
      label$132 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $4_1 = ~~$3;
        break label$132;
       }
       $4_1 = -2147483648;
      }
     }
     $0_1 = ($4_1 | 0) > ($0_1 | 0);
    }
    if (!$0_1) {
     break label$125
    }
    $139($1937($10_1 + 253 | 0, 0) ? 1 : -1);
   }
   if ($1937($10_1 + 252 | 0, 0)) {
    break label$122
   }
   $2_1 = $1944($10_1, 7844);
  }
  label$134 : {
   if (!($1937($10_1, 8) & 1)) {
    break label$134
   }
   if (($1944($10_1 + 892 | 0, 0) | 0) != 4) {
    break label$134
   }
   if ($1937($10_1 + 896 | 0, 0) & 4) {
    break label$134
   }
   $1973($10_1, 7560, 2);
   $1968($10_1, 7864, 1);
  }
  label$135 : {
   if (!$1937($10_1, 7864)) {
    $0_1 = $1_1;
    break label$135;
   }
   if (($1944($10_1, 7560) | 0) != 2) {
    $0_1 = $1_1;
    break label$135;
   }
   label$138 : {
    label$139 : {
     if (($1944($10_1 + 5404 | 0, 0) | 0) > 0) {
      break label$139
     }
     if ($1937($10_1 + 252 | 0, 0)) {
      break label$139
     }
     if ($1937($10_1 + 253 | 0, 0)) {
      break label$139
     }
     if (!$1937($10_1 + 255 | 0, 0)) {
      break label$138
     }
    }
    $1968($10_1, 7864, 0);
   }
   label$140 : {
    if ($1937($10_1 + 892 | 0, 0) & 4) {
     break label$140
    }
    if (!($1937($10_1 + 896 | 0, 0) & 4)) {
     break label$140
    }
    if (!$1937($10_1, 7864)) {
     break label$140
    }
    label$144 : {
     if (!$1944($10_1, 7136)) {
      break label$144
     }
     if ($1937($10_1, 7149)) {
      break label$144
     }
     break label$140;
    }
    $1_1 = $1_1 | !($1963($10_1 + 228 | 0, 0) >= Math_fround(-256.0e3) & $1963($10_1 + 232 | 0, 0) >= Math_fround(-256.0e3) ^ $1963($10_1 + 900 | 0, 0) >= Math_fround(-256.0e3) & $1963($10_1 + 904 | 0, 0) >= Math_fround(-256.0e3));
   }
   $0_1 = $1_1;
   if (!$1937($10_1 + 254 | 0, 0)) {
    $1968($10_1, 7864, 0)
   }
  }
  $12_1 = $0_1;
  $1_1 = $1944($10_1, 7844);
  label$146 : {
   if (!$1_1) {
    break label$146
   }
   if ($1937($1_1, 8) & 4) {
    break label$146
   }
   $4_1 = $1944($10_1, 7560);
   label$147 : {
    if (($4_1 | 0) != 2) {
     $6_1 = Math_fround(0.0);
     $11_1 = Math_fround(0.0);
     break label$147;
    }
    $6_1 = Math_fround(0.0);
    $11_1 = Math_fround(0.0);
    if ($1937($10_1 + 253 | 0, 0)) {
     break label$147
    }
    $0_1 = $1944(0, 73568);
    $13 = $1944($0_1 + 60 | 0, 0);
    if (($13 | 0) >= 0) {
     $3 = $1937(($0_1 + $13 | 0) + 256 | 0, 0) ? Math_fround(1.0) : Math_fround(0.0)
    } else {
     $3 = Math_fround(0.0)
    }
    $13 = $1944($0_1 + 56 | 0, 0);
    if (($13 | 0) >= 0) {
     $5_1 = $1937(($0_1 + $13 | 0) + 256 | 0, 0) ? Math_fround(1.0) : Math_fround(0.0)
    } else {
     $5_1 = Math_fround(0.0)
    }
    $3 = Math_fround($3 - $5_1);
    $13 = $1944($0_1 + 68 | 0, 0);
    if (($13 | 0) >= 0) {
     $5_1 = $1937(($0_1 + $13 | 0) + 256 | 0, 0) ? Math_fround(1.0) : Math_fround(0.0)
    } else {
     $5_1 = Math_fround(0.0)
    }
    $13 = $1944($0_1 - -64 | 0, 0);
    if (($13 | 0) >= 0) {
     $6_1 = $1937(($0_1 + $13 | 0) + 256 | 0, 0) ? Math_fround(1.0) : Math_fround(0.0)
    } else {
     $6_1 = Math_fround(0.0)
    }
    $6_1 = Math_fround(Math_fround($5_1 - $6_1) + Math_fround(0.0));
    $11_1 = Math_fround($3 + Math_fround(0.0));
   }
   if (($4_1 | 0) == 3) {
    $0_1 = $1944(0, 73568);
    $11_1 = Math_fround(Math_fround($1963($0_1 + 804 | 0, 0) - $1963($0_1 + 800 | 0, 0)) + Math_fround(0.0));
    $6_1 = Math_fround(Math_fround($1963($0_1 + 812 | 0, 0) - $1963($0_1 + 808 | 0, 0)) + Math_fround(0.0));
   }
   if ($11_1 == Math_fround(0.0) & $6_1 == Math_fround(0.0)) {
    break label$146
   }
   $0_1 = $1944($1_1, 736);
   $1_1 = $1944($0_1, 176);
   if ($1_1 & 1) {
    $3 = $1963($10_1 + 172 | 0, 0);
    $5_1 = $1963($10_1 + 168 | 0, 0);
    $14 = $1963($10_1, 24);
    $1982($0_1, 180, 2139095039, 2139095039);
    $1973($0_1, 176, $1_1 & -15);
    $1_1 = $0_1 + 16 | 0;
    $15_1 = $1963($1_1, 0);
    $3 = Math_fround(Math_fround($14 * Math_fround(800.0)) * ($3 > $5_1 ? $5_1 : $3));
    label$156 : {
     if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
      $4_1 = ~~$3;
      break label$156;
     }
     $4_1 = -2147483648;
    }
    $3 = Math_fround($4_1 | 0);
    $5_1 = Math_fround($15_1 + Math_fround($6_1 * $3));
    label$158 : {
     if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
      $4_1 = ~~$5_1;
      break label$158;
     }
     $4_1 = -2147483648;
    }
    $5_1 = Math_fround($4_1 | 0);
    $1986($1_1, 0, $5_1);
    $6_1 = $1963($0_1, 12);
    $3 = Math_fround($6_1 + Math_fround($11_1 * $3));
    label$160 : {
     if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
      $1_1 = ~~$3;
      break label$160;
     }
     $1_1 = -2147483648;
    }
    $3 = Math_fround($1_1 | 0);
    $1986($0_1, 12, $3);
    $3 = Math_fround($3 - $6_1);
    $1986($0_1, 208, Math_fround($1963($0_1, 208) + $3));
    $1_1 = $0_1 + 212 | 0;
    $5_1 = Math_fround($5_1 - $15_1);
    $1986($1_1, 0, Math_fround($1963($1_1, 0) + $5_1));
    $1_1 = $0_1 + 232 | 0;
    $1986($1_1, 0, Math_fround($3 + $1963($1_1, 0)));
    $1_1 = $0_1 + 236 | 0;
    $1986($1_1, 0, Math_fround($5_1 + $1963($1_1, 0)));
    $1_1 = $0_1 + 240 | 0;
    $1986($1_1, 0, Math_fround($3 + $1963($1_1, 0)));
    $1_1 = $0_1 + 244 | 0;
    $1986($1_1, 0, Math_fround($5_1 + $1963($1_1, 0)));
    $1_1 = $0_1 + 224 | 0;
    $1986($1_1, 0, Math_fround($3 + $1963($1_1, 0)));
    $1_1 = $0_1 + 228 | 0;
    $1986($1_1, 0, Math_fround($5_1 + $1963($1_1, 0)));
   }
   label$162 : {
    if ($1937($0_1 + 9 | 0, 0) & 1) {
     break label$162
    }
    $0_1 = $1944(0, 73568);
    if (!($1963($0_1, 12128) <= Math_fround(0.0))) {
     break label$162
    }
    $1986($0_1, 12128, $1963($0_1 + 28 | 0, 0));
   }
   $1968($10_1, 7571, 1);
  }
  if ($2_1) {
   $0_1 = $1944($10_1, 7508);
   label$164 : {
    if ($0_1) {
     if (($1944($0_1, 736) | 0) == ($2_1 | 0)) {
      break label$164
     }
    }
    $0_1 = $1944(0, 73568);
    $1_1 = $1944($0_1, 7136);
    $1968($0_1, 7148, ($1_1 | 0) != 0);
    if ($1_1) {
     $1973($0_1, 7192, -1);
     $1969($0_1, 7151, 0);
     $1973($0_1, 7144, 0);
    }
    $1973($0_1, 7184, 0);
    $1969($0_1, 7149, 0);
    $1973($0_1, 7136, 0);
    $1983($0_1, 7168, 0, 0);
    $1982($0_1, 7156, 0, 0);
    $1969($0_1, 7153, 0);
    $1968($0_1, 7571, 1);
    $1969($0_1, 7569, 1);
    $1_1 = $1944($2_1, 752);
    label$167 : {
     if ($1_1) {
      if ($1937($1_1, 139)) {
       break label$167
      }
     }
     $1_1 = $2_1;
    }
    $16_1 = $1944($0_1, 7468);
    label$169 : {
     if (!$16_1) {
      break label$169
     }
     $4_1 = 0;
     label$170 : {
      if (($16_1 | 0) <= 0) {
       break label$170
      }
      $23_1 = $1944($0_1 + 7476 | 0, 0);
      $0_1 = 0;
      while (1) {
       $4_1 = $0_1;
       $13 = $1944($23_1 + Math_imul($0_1, 36) | 0, 4);
       $17_1 = 4;
       label$173 : {
        if (!$13) {
         break label$173
        }
        $2_1 = 0;
        $17_1 = 4;
        if ($1937($13 + 11 | 0, 0) & 1) {
         break label$173
        }
        while (1) {
         $13 = $0_1;
         $17_1 = $1944($23_1 + Math_imul($0_1, 36) | 0, 4);
         $0_1 = 1;
         label$176 : {
          if (!$17_1) {
           break label$176
          }
          $0_1 = $1_1;
          if (($1944($0_1, 736) | 0) == ($17_1 | 0)) {
           $2_1 = 1;
           $0_1 = 0;
           break label$176;
          }
          while (1) {
           if (($0_1 | 0) == ($17_1 | 0)) {
            $2_1 = 1;
            $0_1 = ($0_1 | 0) != ($17_1 | 0);
            break label$176;
           }
           $0_1 = $1944($0_1, 732);
           if ($0_1) {
            continue
           }
           break;
          };
          $0_1 = 1;
         }
         if ($0_1) {
          $0_1 = $13 + 1 | 0;
          if (($16_1 | 0) > ($0_1 | 0)) {
           continue
          }
         }
         break;
        };
        $17_1 = $2_1 & 1 ? 0 : 2;
       }
       if (($17_1 | 0) == 2) {
        break label$170
       }
       $0_1 = $4_1 + 1 | 0;
       if (($16_1 | 0) != ($0_1 | 0)) {
        continue
       }
       break;
      };
      $4_1 = $16_1;
     }
     $0_1 = $4_1;
     if (($16_1 | 0) <= ($0_1 | 0)) {
      break label$169
     }
     $132($0_1, 0);
    }
    $125($1_1);
    label$183 : {
     if ($1944($1_1, 756)) {
      break label$183
     }
     $0_1 = $1944(0, 73568);
     if ($1937($1_1 + 10 | 0, 0) & 4) {
      $1983($0_1, 7512, 0, 0);
      break label$183;
     }
     $1983($0_1, 7512, 0, 0);
     $2_1 = $1944($0_1, 7508);
     $4_1 = $1944($0_1, 7564);
     $1973(($2_1 + ($4_1 << 2) | 0) + 756 | 0, 0, 0);
     $2_1 = $2_1 + ($4_1 << 4) | 0;
     $1982($2_1 + 772 | 0, 0, 0, 0);
     $1982($2_1 + 764 | 0, 0, 0, 0);
     $1983($0_1, 7576, 0, 0);
     $1968($0_1, 7574, 0);
     $1970($0_1, 7572, 257);
     $1983($0_1 + 7584 | 0, 0, 0, 0);
     $1973($0_1 + 7592 | 0, 0, 0);
    }
    if (($1941($1_1 + 298 | 0, 0) | 0) != 2) {
     break label$164
    }
    $1973($10_1, 7564, 1);
   }
   $1973($10_1, 7844, 0);
  }
  label$185 : {
   if (!$12_1) {
    break label$185
   }
   $1_1 = $1944($10_1, 7508);
   if (!$1_1) {
    break label$185
   }
   $0_1 = $1944(0, 73568);
   $2_1 = $1944($0_1, 7136);
   $1968($0_1, 7148, ($2_1 | 0) != 0);
   if ($2_1) {
    $1973($0_1, 7192, -1);
    $1969($0_1, 7151, 0);
    $1973($0_1, 7144, 0);
   }
   $1973($0_1, 7184, 0);
   $1969($0_1, 7149, 0);
   $1973($0_1, 7136, 0);
   $1983($0_1, 7168, 0, 0);
   $1982($0_1, 7156, 0, 0);
   $1969($0_1, 7153, 0);
   $2_1 = $1_1;
   while (1) {
    label$187 : {
     $0_1 = $2_1;
     $2_1 = $1944($0_1, 728);
     if (!$2_1) {
      break label$187
     }
     if ($1937($0_1 + 296 | 0, 0) & 2) {
      break label$187
     }
     if (($1944($0_1, 8) & 352321536) == 16777216) {
      continue
     }
    }
    break;
   };
   if (($0_1 | 0) != ($1_1 | 0)) {
    $125($0_1);
    $1973($0_1, 752, $1_1);
   }
   $0_1 = 0;
   $2_1 = $1944($10_1, 7508);
   if ($1937($2_1 + 296 | 0, 0) & 2) {
    $0_1 = $1944($10_1, 7564) ^ 1
   }
   if (($1944($10_1, 7564) | 0) == ($0_1 | 0)) {
    break label$185
   }
   if (($0_1 | 0) == 1) {
    $1973($2_1 + 760 | 0, 0, 0)
   }
   $4_1 = $1944(0, 73568);
   if (!$0_1) {
    $2_1 = $1944($4_1, 7508);
    $1_1 = $1944($2_1, 752);
    label$193 : {
     if ($1_1) {
      if ($1937($1_1, 139)) {
       break label$193
      }
     }
     $1_1 = $2_1;
    }
    $1973($4_1, 7508, $1_1);
   }
   $2_1 = $1944($4_1, 7508);
   $1_1 = ($2_1 + ($0_1 << 2) | 0) + 756 | 0;
   $12_1 = $1944($1_1, 0);
   label$195 : {
    if ($12_1) {
     $1973($4_1, 7564, $0_1);
     $1973($4_1, 7512, $12_1);
     $1973($4_1, 7516, 0);
     $1973($1_1, 0, $12_1);
     break label$195;
    }
    $1973($4_1, 7564, $0_1);
    if ($1937($2_1 + 10 | 0, 0) & 4) {
     $1983($4_1, 7512, 0, 0);
     break label$195;
    }
    $1983($4_1, 7512, 0, 0);
    $1973($1_1, 0, 0);
    $0_1 = $2_1 + ($0_1 << 4) | 0;
    $1982($0_1 + 772 | 0, 0, 0, 0);
    $1982($0_1 + 764 | 0, 0, 0, 0);
    $1983($4_1, 7576, 0, 0);
    $1968($4_1, 7574, 0);
    $1970($4_1, 7572, 257);
    $1983($4_1 + 7584 | 0, 0, 0, 0);
    $1973($4_1 + 7592 | 0, 0, 0);
   }
   $1968($4_1, 7571, 1);
   $1969($4_1, 7569, 1);
  }
  $1_1 = $9 + 854 | 0;
  label$198 : {
   label$199 : {
    label$200 : {
     $16_1 = $8 | $22_1;
     if (($16_1 | 0) != 1) {
      break label$200
     }
     $0_1 = $1944($9, 7508);
     if (!$0_1) {
      break label$200
     }
     $0_1 = $1944($0_1, 8) & 262144;
     $1968($9 + 853 | 0, 0, !$0_1);
     if ($0_1) {
      break label$199
     }
     if (!$1944($9, 7512)) {
      break label$199
     }
     if ($1937($9, 7570)) {
      break label$199
     }
     $0_1 = 1;
     break label$198;
    }
    $1968($9 + 853 | 0, 0, 0);
   }
   $0_1 = ($1944($9, 7844) | 0) != 0;
  }
  $1968($1_1, 0, $0_1);
  $1_1 = $1944(0, 73568);
  $3 = $1963($1_1 + 5240 | 0, 0);
  label$201 : {
   if (!(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 == Math_fround(0.0) ? Math_fround(1.0) : Math_fround(0.0)) > Math_fround(0.0))) {
    break label$201
   }
   if ($1944($1_1, 7136)) {
    if ($1937($1_1, 7160) & 2) {
     break label$201
    }
    $1973($1_1, 7192, -1);
    $1968($1_1, 7152, 0);
    $1973($1_1, 7184, 0);
    $1983($1_1, 7144, 0, 1);
    $1973($1_1, 7136, 0);
    $1983($1_1, 7168, 0, 0);
    $1982($1_1, 7156, 0, 0);
    $1969($1_1, 7153, 0);
    break label$201;
   }
   $2_1 = $1944($1_1, 7508);
   if ($1944($1_1, 7564)) {
    $0_1 = $1944($2_1, 752);
    label$204 : {
     if ($0_1) {
      if ($1937($0_1, 139)) {
       break label$204
      }
     }
     $0_1 = $2_1;
    }
    $1973($1_1, 7508, $0_1);
    $2_1 = $1944($0_1, 756);
    label$206 : {
     if ($2_1) {
      $1973($1_1, 7564, 0);
      $1973($1_1, 7512, $2_1);
      $1973($1_1, 7516, 0);
      $1973($0_1, 756, $2_1);
      break label$206;
     }
     $1973($1_1, 7564, 0);
     if ($1937($0_1 + 10 | 0, 0) & 4) {
      $1983($1_1, 7512, 0, 0);
      break label$206;
     }
     $1983($1_1, 7512, 0, 0);
     $1982($0_1, 764, 0, 0);
     $1973($0_1, 756, 0);
     $1982($0_1 + 772 | 0, 0, 0, 0);
     $1983($1_1, 7576, 0, 0);
     $1968($1_1, 7574, 0);
     $1970($1_1, 7572, 257);
     $1983($1_1 + 7584 | 0, 0, 0, 0);
     $1973($1_1 + 7592 | 0, 0, 0);
    }
    $1968($1_1, 7571, 1);
    $1969($1_1, 7569, 1);
    break label$201;
   }
   label$209 : {
    if (!$2_1) {
     break label$209
    }
    if (($1944($2_1, 736) | 0) == ($2_1 | 0)) {
     break label$209
    }
    if ($1937($2_1 + 11 | 0, 0) & 4) {
     break label$209
    }
    $0_1 = $1944($2_1, 728);
    if (!$0_1) {
     break label$209
    }
    $14 = $1963($2_1 + 24 | 0, 0);
    $3 = $1963($2_1 + 16 | 0, 0);
    $15_1 = $1963($2_1, 20);
    $5_1 = $1963($2_1, 12);
    $125($0_1);
    $6_1 = $1963($0_1 + 224 | 0, 0);
    $11_1 = $1963($0_1 + 228 | 0, 0);
    $1_1 = $1944($2_1, 84);
    $0_1 = $1944(0, 73568);
    $1973($0_1, 7564, 0);
    $1973($0_1, 7512, $1_1);
    $1973($0_1, 7516, 0);
    $2_1 = $1944($0_1, 7508);
    $1986($2_1 + 776 | 0, 0, Math_fround(Math_fround($3 + $14) - $11_1));
    $1986($2_1 + 772 | 0, 0, Math_fround(Math_fround($5_1 + $15_1) - $6_1));
    $1986($2_1 + 768 | 0, 0, Math_fround($3 - $11_1));
    $1986($2_1, 764, Math_fround($5_1 - $6_1));
    $1973($2_1, 756, $1_1);
    $1968($0_1, 7571, 1);
    $1969($0_1, 7569, 1);
    break label$201;
   }
   $0_1 = $1944($1_1, 7468);
   if (($0_1 | 0) > 0) {
    $0_1 = $0_1 - 1 | 0;
    if ($1937($1944($1944($1_1 + 7476 | 0, 0) + Math_imul($0_1, 36) | 0, 4) + 11 | 0, 0) & 8) {
     break label$201
    }
    $132($0_1, 1);
    break label$201;
   }
   label$211 : {
    if (!$2_1) {
     break label$211
    }
    if (($1944($2_1, 8) & 83886080) == 16777216) {
     break label$211
    }
    $1973($2_1, 756, 0);
   }
   $1983($1_1, 7512, 0, 0);
  }
  $1983($9, 7520, 0, 0);
  $1973($9 + 7536 | 0, 0, 0);
  $1983($9 + 7528 | 0, 0, 0, 0);
  $2_1 = $1944($9, 7512);
  label$212 : {
   if (!$2_1) {
    break label$212
   }
   if ($1937($9, 7570)) {
    break label$212
   }
   if ($1944($9, 7844)) {
    break label$212
   }
   $0_1 = $1944($9, 7508);
   if (!$0_1) {
    break label$212
   }
   if ($1937($0_1 + 10 | 0, 0) & 4) {
    break label$212
   }
   $1_1 = $1944(0, 73568);
   $5_1 = $1963($1_1 + 776 | 0, 0);
   $4_1 = 0;
   $3 = $1963($1_1 + 768 | 0, 0);
   if ($3 > Math_fround(0.0)) {
    $6_1 = $1963($1_1 + 5236 | 0, 0);
    $4_1 = ($6_1 < Math_fround(0.0) ? Math_fround(0.0) : $6_1 == Math_fround(0.0) ? Math_fround(1.0) : Math_fround(0.0)) > Math_fround(0.0);
   }
   $0_1 = 0;
   if ($5_1 > Math_fround(0.0)) {
    $5_1 = $1963($1_1 + 5244 | 0, 0);
    $0_1 = ($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 == Math_fround(0.0) ? Math_fround(1.0) : Math_fround(0.0)) > Math_fround(0.0);
   }
   $1_1 = $1944($9, 7136);
   if (!($4_1 ^ 1 | ($1_1 | 0) != 0)) {
    $1973($9, 7536, 2);
    $1973($9, 7520, $2_1);
   }
   label$216 : {
    label$217 : {
     if ($1_1) {
      if (($1_1 | 0) == ($2_1 | 0) & $0_1) {
       break label$217
      }
      break label$216;
     }
     if (!$0_1) {
      break label$216
     }
    }
    $1973($9, 7536, 1);
    $1973($9, 7532, $2_1);
   }
   label$219 : {
    label$220 : {
     if ($1_1) {
      if (!($3 > Math_fround(0.0))) {
       break label$219
      }
      if (($1_1 | 0) == ($2_1 | 0)) {
       break label$220
      }
      break label$219;
     }
     if (!($3 > Math_fround(0.0))) {
      break label$219
     }
    }
    $1973($9, 7524, $2_1);
   }
   label$222 : {
    if ($1_1) {
     if (($1_1 | 0) == ($2_1 | 0) & $4_1) {
      break label$222
     }
     break label$212;
    }
    if (!$4_1) {
     break label$212
    }
   }
   $1973($9, 7528, $2_1);
  }
  $0_1 = $1944($9, 7508);
  label$224 : {
   if (!$0_1) {
    break label$224
   }
   if (!($1937($0_1 + 10 | 0, 0) & 4)) {
    break label$224
   }
   $1968($9, 7570, 1);
  }
  $0_1 = $1944($9, 7552);
  if ($0_1) {
   $2_1 = $1944($9, 7556);
   label$226 : {
    if ($2_1 & 1) {
     $1973($9, 7532, $0_1);
     break label$226;
    }
    $1973($9, 7524, $0_1);
    $1973($9, 7528, $0_1);
    $1973($9, 7520, $0_1);
   }
   $1973($9, 7536, $2_1);
  }
  $1973($9, 7552, 0);
  $1_1 = $1944(0, 73568);
  $2_1 = $1944($1_1, 7508);
  if (!(wasm2js_i32$0 = $1937($1_1, 7598), wasm2js_i32$2 = 0, wasm2js_i32$1 = $2_1, wasm2js_i32$1 ? wasm2js_i32$0 : wasm2js_i32$2)) {
   $1983($1_1, 7600, 0, 0);
   $1973($1_1, 7612, -1);
   label$230 : {
    if (!$2_1) {
     break label$230
    }
    if ($1944($1_1, 7844)) {
     break label$230
    }
    if ($1937($2_1 + 10 | 0, 0) & 4) {
     break label$230
    }
    $0_1 = $1944($1_1, 7156);
    label$231 : {
     if ($0_1 & 1) {
      break label$231
     }
     $3 = $1963($1_1 + 5252 | 0, 0);
     if ($3 < Math_fround(0.0)) {
      $3 = Math_fround(0.0)
     } else {
      $4_1 = 1;
      label$233 : {
       if ($3 == Math_fround(0.0)) {
        break label$233
       }
       $6_1 = Math_fround($3 - $1963($1_1 + 24 | 0, 0));
       $4_1 = 0;
       if ($6_1 >= $3) {
        break label$233
       }
       $5_1 = Math_fround($1963($1_1 + 140 | 0, 0) * Math_fround(.7200000286102295));
       $11_1 = Math_fround($1963($1_1 + 144 | 0, 0) * Math_fround(.800000011920929));
       $4_1 = $5_1 > $6_1 & $3 >= $5_1;
       if ($11_1 <= Math_fround(0.0)) {
        break label$233
       }
       if ($5_1 > $6_1) {
        $4_1 = -1
       } else {
        $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $11_1);
        label$236 : {
         if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
          $4_1 = ~~$6_1;
          break label$236;
         }
         $4_1 = -2147483648;
        }
       }
       if ($3 < $5_1) {
        $8 = -1
       } else {
        $3 = Math_fround(Math_fround($3 - $5_1) / $11_1);
        label$239 : {
         if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
          $8 = ~~$3;
          break label$239;
         }
         $8 = -2147483648;
        }
       }
       $4_1 = $8 - $4_1 | 0;
      }
      $3 = Math_fround($4_1 | 0);
     }
     if (!($3 > Math_fround(0.0))) {
      $3 = $1963($1_1 + 5300 | 0, 0);
      if ($3 < Math_fround(0.0)) {
       $3 = Math_fround(0.0)
      } else {
       $4_1 = 1;
       label$243 : {
        if ($3 == Math_fround(0.0)) {
         break label$243
        }
        $6_1 = Math_fround($3 - $1963($1_1 + 24 | 0, 0));
        $4_1 = 0;
        if ($6_1 >= $3) {
         break label$243
        }
        $5_1 = Math_fround($1963($1_1 + 140 | 0, 0) * Math_fround(.7200000286102295));
        $11_1 = Math_fround($1963($1_1 + 144 | 0, 0) * Math_fround(.800000011920929));
        $4_1 = $5_1 > $6_1 & $3 >= $5_1;
        if ($11_1 <= Math_fround(0.0)) {
         break label$243
        }
        if ($5_1 > $6_1) {
         $4_1 = -1
        } else {
         $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $11_1);
         label$246 : {
          if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
           $4_1 = ~~$6_1;
           break label$246;
          }
          $4_1 = -2147483648;
         }
        }
        if ($3 < $5_1) {
         $8 = -1
        } else {
         $3 = Math_fround(Math_fround($3 - $5_1) / $11_1);
         label$249 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $8 = ~~$3;
           break label$249;
          }
          $8 = -2147483648;
         }
        }
        $4_1 = $8 - $4_1 | 0;
       }
       $3 = Math_fround($4_1 | 0);
      }
      if (!($3 > Math_fround(0.0))) {
       break label$231
      }
     }
     $1973($1_1, 7612, 0);
    }
    label$251 : {
     if ($0_1 & 2) {
      break label$251
     }
     $3 = $1963($1_1 + 5256 | 0, 0);
     if ($3 < Math_fround(0.0)) {
      $3 = Math_fround(0.0)
     } else {
      $4_1 = 1;
      label$253 : {
       if ($3 == Math_fround(0.0)) {
        break label$253
       }
       $6_1 = Math_fround($3 - $1963($1_1 + 24 | 0, 0));
       $4_1 = 0;
       if ($6_1 >= $3) {
        break label$253
       }
       $5_1 = Math_fround($1963($1_1 + 140 | 0, 0) * Math_fround(.7200000286102295));
       $11_1 = Math_fround($1963($1_1 + 144 | 0, 0) * Math_fround(.800000011920929));
       $4_1 = $5_1 > $6_1 & $3 >= $5_1;
       if ($11_1 <= Math_fround(0.0)) {
        break label$253
       }
       if ($5_1 > $6_1) {
        $4_1 = -1
       } else {
        $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $11_1);
        label$256 : {
         if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
          $4_1 = ~~$6_1;
          break label$256;
         }
         $4_1 = -2147483648;
        }
       }
       if ($3 < $5_1) {
        $8 = -1
       } else {
        $3 = Math_fround(Math_fround($3 - $5_1) / $11_1);
        label$259 : {
         if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
          $8 = ~~$3;
          break label$259;
         }
         $8 = -2147483648;
        }
       }
       $4_1 = $8 - $4_1 | 0;
      }
      $3 = Math_fround($4_1 | 0);
     }
     if (!($3 > Math_fround(0.0))) {
      $3 = $1963($1_1 + 5304 | 0, 0);
      if ($3 < Math_fround(0.0)) {
       $3 = Math_fround(0.0)
      } else {
       $4_1 = 1;
       label$263 : {
        if ($3 == Math_fround(0.0)) {
         break label$263
        }
        $6_1 = Math_fround($3 - $1963($1_1 + 24 | 0, 0));
        $4_1 = 0;
        if ($6_1 >= $3) {
         break label$263
        }
        $5_1 = Math_fround($1963($1_1 + 140 | 0, 0) * Math_fround(.7200000286102295));
        $11_1 = Math_fround($1963($1_1 + 144 | 0, 0) * Math_fround(.800000011920929));
        $4_1 = $5_1 > $6_1 & $3 >= $5_1;
        if ($11_1 <= Math_fround(0.0)) {
         break label$263
        }
        if ($5_1 > $6_1) {
         $4_1 = -1
        } else {
         $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $11_1);
         label$266 : {
          if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
           $4_1 = ~~$6_1;
           break label$266;
          }
          $4_1 = -2147483648;
         }
        }
        if ($3 < $5_1) {
         $8 = -1
        } else {
         $3 = Math_fround(Math_fround($3 - $5_1) / $11_1);
         label$269 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $8 = ~~$3;
           break label$269;
          }
          $8 = -2147483648;
         }
        }
        $4_1 = $8 - $4_1 | 0;
       }
       $3 = Math_fround($4_1 | 0);
      }
      if (!($3 > Math_fround(0.0))) {
       break label$251
      }
     }
     $1973($1_1, 7612, 1);
    }
    label$271 : {
     if ($0_1 & 4) {
      break label$271
     }
     $3 = $1963($1_1 + 5260 | 0, 0);
     if ($3 < Math_fround(0.0)) {
      $3 = Math_fround(0.0)
     } else {
      $4_1 = 1;
      label$273 : {
       if ($3 == Math_fround(0.0)) {
        break label$273
       }
       $6_1 = Math_fround($3 - $1963($1_1 + 24 | 0, 0));
       $4_1 = 0;
       if ($6_1 >= $3) {
        break label$273
       }
       $5_1 = Math_fround($1963($1_1 + 140 | 0, 0) * Math_fround(.7200000286102295));
       $11_1 = Math_fround($1963($1_1 + 144 | 0, 0) * Math_fround(.800000011920929));
       $4_1 = $5_1 > $6_1 & $3 >= $5_1;
       if ($11_1 <= Math_fround(0.0)) {
        break label$273
       }
       if ($5_1 > $6_1) {
        $4_1 = -1
       } else {
        $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $11_1);
        label$276 : {
         if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
          $4_1 = ~~$6_1;
          break label$276;
         }
         $4_1 = -2147483648;
        }
       }
       if ($3 < $5_1) {
        $8 = -1
       } else {
        $3 = Math_fround(Math_fround($3 - $5_1) / $11_1);
        label$279 : {
         if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
          $8 = ~~$3;
          break label$279;
         }
         $8 = -2147483648;
        }
       }
       $4_1 = $8 - $4_1 | 0;
      }
      $3 = Math_fround($4_1 | 0);
     }
     if (!($3 > Math_fround(0.0))) {
      $3 = $1963($1_1 + 5308 | 0, 0);
      if ($3 < Math_fround(0.0)) {
       $3 = Math_fround(0.0)
      } else {
       $4_1 = 1;
       label$283 : {
        if ($3 == Math_fround(0.0)) {
         break label$283
        }
        $6_1 = Math_fround($3 - $1963($1_1 + 24 | 0, 0));
        $4_1 = 0;
        if ($6_1 >= $3) {
         break label$283
        }
        $5_1 = Math_fround($1963($1_1 + 140 | 0, 0) * Math_fround(.7200000286102295));
        $11_1 = Math_fround($1963($1_1 + 144 | 0, 0) * Math_fround(.800000011920929));
        $4_1 = $5_1 > $6_1 & $3 >= $5_1;
        if ($11_1 <= Math_fround(0.0)) {
         break label$283
        }
        if ($5_1 > $6_1) {
         $4_1 = -1
        } else {
         $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $11_1);
         label$286 : {
          if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
           $4_1 = ~~$6_1;
           break label$286;
          }
          $4_1 = -2147483648;
         }
        }
        if ($3 < $5_1) {
         $8 = -1
        } else {
         $3 = Math_fround(Math_fround($3 - $5_1) / $11_1);
         label$289 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $8 = ~~$3;
           break label$289;
          }
          $8 = -2147483648;
         }
        }
        $4_1 = $8 - $4_1 | 0;
       }
       $3 = Math_fround($4_1 | 0);
      }
      if (!($3 > Math_fround(0.0))) {
       break label$271
      }
     }
     $1973($1_1, 7612, 2);
    }
    if ($0_1 & 8) {
     break label$230
    }
    $3 = $1963($1_1 + 5264 | 0, 0);
    if ($3 < Math_fround(0.0)) {
     $3 = Math_fround(0.0)
    } else {
     $0_1 = 1;
     label$292 : {
      if ($3 == Math_fround(0.0)) {
       break label$292
      }
      $6_1 = Math_fround($3 - $1963($1_1 + 24 | 0, 0));
      $0_1 = 0;
      if ($6_1 >= $3) {
       break label$292
      }
      $5_1 = Math_fround($1963($1_1 + 140 | 0, 0) * Math_fround(.7200000286102295));
      $11_1 = Math_fround($1963($1_1 + 144 | 0, 0) * Math_fround(.800000011920929));
      $0_1 = $5_1 > $6_1 & $3 >= $5_1;
      if ($11_1 <= Math_fround(0.0)) {
       break label$292
      }
      if ($5_1 > $6_1) {
       $0_1 = -1
      } else {
       $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $11_1);
       label$295 : {
        if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
         $0_1 = ~~$6_1;
         break label$295;
        }
        $0_1 = -2147483648;
       }
      }
      if ($3 < $5_1) {
       $4_1 = -1
      } else {
       $3 = Math_fround(Math_fround($3 - $5_1) / $11_1);
       label$298 : {
        if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
         $4_1 = ~~$3;
         break label$298;
        }
        $4_1 = -2147483648;
       }
      }
      $0_1 = $4_1 - $0_1 | 0;
     }
     $3 = Math_fround($0_1 | 0);
    }
    if (!($3 > Math_fround(0.0))) {
     $3 = $1963($1_1 + 5312 | 0, 0);
     if ($3 < Math_fround(0.0)) {
      $3 = Math_fround(0.0)
     } else {
      $0_1 = 1;
      label$302 : {
       if ($3 == Math_fround(0.0)) {
        break label$302
       }
       $6_1 = Math_fround($3 - $1963($1_1 + 24 | 0, 0));
       $0_1 = 0;
       if ($6_1 >= $3) {
        break label$302
       }
       $5_1 = Math_fround($1963($1_1 + 140 | 0, 0) * Math_fround(.7200000286102295));
       $11_1 = Math_fround($1963($1_1 + 144 | 0, 0) * Math_fround(.800000011920929));
       $0_1 = $5_1 > $6_1 & $3 >= $5_1;
       if ($11_1 <= Math_fround(0.0)) {
        break label$302
       }
       if ($5_1 > $6_1) {
        $0_1 = -1
       } else {
        $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $11_1);
        label$305 : {
         if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
          $0_1 = ~~$6_1;
          break label$305;
         }
         $0_1 = -2147483648;
        }
       }
       if ($3 < $5_1) {
        $4_1 = -1
       } else {
        $3 = Math_fround(Math_fround($3 - $5_1) / $11_1);
        label$308 : {
         if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
          $4_1 = ~~$3;
          break label$308;
         }
         $4_1 = -2147483648;
        }
       }
       $0_1 = $4_1 - $0_1 | 0;
      }
      $3 = Math_fround($0_1 | 0);
     }
     if (!($3 > Math_fround(0.0))) {
      break label$230
     }
    }
    $1973($1_1, 7612, 3);
   }
   $1983($1_1, 7640, 2139095039, 2139095039);
   $1983($1_1 + 7648 | 0, 0, -8388609, -8388609);
   $1973($1_1, 7620, $1944($1_1, 7612));
  }
  $11_1 = Math_fround(0.0);
  label$310 : {
   if (!$2_1) {
    break label$310
   }
   if (($1944($1_1, 7612) | 0) != -1) {
    break label$310
   }
   if (!($1944($1_1, 8) & 1)) {
    break label$310
   }
   if ($1937($2_1 + 10 | 0, 0) & 4) {
    break label$310
   }
   if ($1944($1_1, 7844)) {
    break label$310
   }
   $0_1 = $1944($1_1 + 72 | 0, 0);
   $4_1 = 0;
   label$311 : {
    if (($0_1 | 0) < 0) {
     break label$311
    }
    $4_1 = 0;
    if (!$1937(($0_1 + $1_1 | 0) + 256 | 0, 0)) {
     break label$311
    }
    $4_1 = !($1937($1_1, 7168) & 32);
   }
   $0_1 = $1944($1_1 + 76 | 0, 0);
   $13 = 0;
   label$312 : {
    if (($0_1 | 0) < 0) {
     break label$312
    }
    $13 = 0;
    if (!$1937(($0_1 + $1_1 | 0) + 256 | 0, 0)) {
     break label$312
    }
    $13 = !($1937($1_1, 7168) & 64);
   }
   $0_1 = $1944($1_1 + 80 | 0, 0);
   $8 = 0;
   label$314 : {
    if (($0_1 | 0) < 0) {
     break label$314
    }
    $3 = $1963(($1_1 + ($0_1 << 2) | 0) + 1140 | 0, 0);
    $0_1 = $3 == Math_fround(0.0);
    label$315 : {
     if ($0_1) {
      break label$315
     }
     $5_1 = $1963($1_1 + 140 | 0, 0);
     $8 = 0;
     if (!($5_1 < $3)) {
      break label$314
     }
     $6_1 = Math_fround($3 - $1963($1_1 + 24 | 0, 0));
     $8 = 0;
     if ($6_1 >= $3) {
      break label$314
     }
     $14 = $1963($1_1 + 144 | 0, 0);
     if ($14 <= Math_fround(0.0)) {
      $0_1 = $5_1 > $6_1 & $3 >= $5_1;
      break label$315;
     }
     if ($5_1 > $6_1) {
      $0_1 = -1
     } else {
      $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $14);
      label$318 : {
       if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
        $0_1 = ~~$6_1;
        break label$318;
       }
       $0_1 = -2147483648;
      }
     }
     if ($3 < $5_1) {
      $8 = -1
     } else {
      $3 = Math_fround(Math_fround($3 - $5_1) / $14);
      label$321 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $8 = ~~$3;
        break label$321;
       }
       $8 = -2147483648;
      }
     }
     $0_1 = ($8 | 0) > ($0_1 | 0);
    }
    $8 = 0;
    if (!$0_1) {
     break label$314
    }
    $8 = !($1937($1_1, 7168) & 128);
   }
   $0_1 = $1944($1_1 + 84 | 0, 0);
   $12_1 = 0;
   label$323 : {
    if (($0_1 | 0) < 0) {
     break label$323
    }
    $3 = $1963(($1_1 + ($0_1 << 2) | 0) + 1140 | 0, 0);
    $0_1 = $3 == Math_fround(0.0);
    label$325 : {
     if ($0_1) {
      break label$325
     }
     $5_1 = $1963($1_1 + 140 | 0, 0);
     $12_1 = 0;
     if (!($5_1 < $3)) {
      break label$323
     }
     $6_1 = Math_fround($3 - $1963($1_1 + 24 | 0, 0));
     $12_1 = 0;
     if ($3 <= $6_1) {
      break label$323
     }
     $14 = $1963($1_1 + 144 | 0, 0);
     if ($14 <= Math_fround(0.0)) {
      $0_1 = $5_1 > $6_1 & $3 >= $5_1;
      break label$325;
     }
     if ($5_1 > $6_1) {
      $0_1 = -1
     } else {
      $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $14);
      label$330 : {
       if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
        $0_1 = ~~$6_1;
        break label$330;
       }
       $0_1 = -2147483648;
      }
     }
     if ($3 < $5_1) {
      $12_1 = -1
     } else {
      $3 = Math_fround(Math_fround($3 - $5_1) / $14);
      label$333 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $12_1 = ~~$3;
        break label$333;
       }
       $12_1 = -2147483648;
      }
     }
     $0_1 = ($12_1 | 0) > ($0_1 | 0);
    }
    $12_1 = 0;
    if (!$0_1) {
     break label$323
    }
    $12_1 = !($1937($1_1 + 7169 | 0, 0) & 1);
   }
   if (!($8 ^ $12_1) & ($4_1 | 0) == ($13 | 0)) {
    break label$310
   }
   label$336 : {
    if (!$1944($1_1, 7564)) {
     break label$336
    }
    $0_1 = $1944($2_1, 752);
    label$337 : {
     if ($0_1) {
      if ($1937($0_1, 139)) {
       break label$337
      }
     }
     $0_1 = $2_1;
    }
    $1973($1_1, 7508, $0_1);
    $4_1 = $1944($0_1, 756);
    if ($4_1) {
     $1973($1_1, 7564, 0);
     $1973($1_1, 7512, $4_1);
     $1973($1_1, 7516, 0);
     $1973($0_1, 756, $4_1);
     break label$336;
    }
    $1973($1_1, 7564, 0);
    if ($1937($0_1 + 10 | 0, 0) & 4) {
     $1983($1_1, 7512, 0, 0);
     break label$336;
    }
    $1983($1_1, 7512, 0, 0);
    $1982($0_1, 764, 0, 0);
    $1973($0_1, 756, 0);
    $1982($0_1 + 772 | 0, 0, 0, 0);
    $1983($1_1, 7576, 0, 0);
    $1968($1_1, 7574, 0);
    $1970($1_1, 7572, 257);
    $1983($1_1 + 7584 | 0, 0, 0, 0);
    $1973($1_1 + 7592 | 0, 0, 0);
   }
   label$341 : {
    if ($1941($2_1 + 296 | 0, 0)) {
     break label$341
    }
    if (!$1937($2_1 + 305 | 0, 0)) {
     break label$341
    }
    label$342 : {
     $0_1 = $1944($1_1, 72);
     if (($0_1 | 0) < 0) {
      break label$342
     }
     $3 = $1963(($1_1 + ($0_1 << 2) | 0) + 1140 | 0, 0);
     $0_1 = $3 == Math_fround(0.0);
     label$343 : {
      if ($0_1) {
       break label$343
      }
      $5_1 = $1963($1_1 + 140 | 0, 0);
      if (!($5_1 < $3)) {
       break label$342
      }
      $6_1 = Math_fround($3 - $1963($1_1 + 24 | 0, 0));
      if ($6_1 >= $3) {
       break label$342
      }
      $14 = $1963($1_1 + 144 | 0, 0);
      if ($14 <= Math_fround(0.0)) {
       $0_1 = $5_1 > $6_1 & $3 >= $5_1;
       break label$343;
      }
      if ($5_1 > $6_1) {
       $0_1 = -1
      } else {
       $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $14);
       label$346 : {
        if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
         $0_1 = ~~$6_1;
         break label$346;
        }
        $0_1 = -2147483648;
       }
      }
      if ($3 < $5_1) {
       $4_1 = -1
      } else {
       $3 = Math_fround(Math_fround($3 - $5_1) / $14);
       label$349 : {
        if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
         $4_1 = ~~$3;
         break label$349;
        }
        $4_1 = -2147483648;
       }
      }
      $0_1 = ($4_1 | 0) > ($0_1 | 0);
     }
     if (!$0_1) {
      break label$342
     }
     $1973($2_1 + 124 | 0, 0, 0);
     $1973($2_1 + 116 | 0, 0, 0);
     $1986($2_1 + 108 | 0, 0, Math_fround($1963($2_1 + 92 | 0, 0) - Math_fround($1963($2_1 + 444 | 0, 0) - $1963($2_1 + 436 | 0, 0))));
     break label$310;
    }
    label$351 : {
     $0_1 = $1944($1_1, 76);
     if (($0_1 | 0) < 0) {
      break label$351
     }
     $3 = $1963(($1_1 + ($0_1 << 2) | 0) + 1140 | 0, 0);
     $0_1 = $3 == Math_fround(0.0);
     label$352 : {
      if ($0_1) {
       break label$352
      }
      $5_1 = $1963($1_1 + 140 | 0, 0);
      if (!($5_1 < $3)) {
       break label$351
      }
      $6_1 = Math_fround($3 - $1963($1_1 + 24 | 0, 0));
      if ($6_1 >= $3) {
       break label$351
      }
      $14 = $1963($1_1 + 144 | 0, 0);
      if ($14 <= Math_fround(0.0)) {
       $0_1 = $5_1 > $6_1 & $3 >= $5_1;
       break label$352;
      }
      if ($5_1 > $6_1) {
       $0_1 = -1
      } else {
       $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $14);
       label$355 : {
        if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
         $0_1 = ~~$6_1;
         break label$355;
        }
        $0_1 = -2147483648;
       }
      }
      if ($3 < $5_1) {
       $4_1 = -1
      } else {
       $3 = Math_fround(Math_fround($3 - $5_1) / $14);
       label$358 : {
        if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
         $4_1 = ~~$3;
         break label$358;
        }
        $4_1 = -2147483648;
       }
      }
      $0_1 = ($4_1 | 0) > ($0_1 | 0);
     }
     if (!$0_1) {
      break label$351
     }
     $1973($2_1 + 124 | 0, 0, 0);
     $1973($2_1 + 116 | 0, 0, 0);
     $1986($2_1 + 108 | 0, 0, Math_fround($1963($2_1 + 92 | 0, 0) + Math_fround($1963($2_1 + 444 | 0, 0) - $1963($2_1 + 436 | 0, 0))));
     break label$310;
    }
    if ($8) {
     $1973($2_1 + 124 | 0, 0, 0);
     $1973($2_1 + 116 | 0, 0, 0);
     $1973($2_1 + 108 | 0, 0, 0);
     break label$310;
    }
    if (!$12_1) {
     break label$310
    }
    $1973($2_1 + 124 | 0, 0, 0);
    $1973($2_1 + 116 | 0, 0, 0);
    $1986($2_1 + 108 | 0, 0, $1963($2_1 + 100 | 0, 0));
    break label$310;
   }
   $5_1 = Math_fround($1963($2_1 + 444 | 0, 0) - $1963($2_1 + 436 | 0, 0));
   $3 = Math_fround($1963($1_1, 6472) * $1963($2_1, 572));
   $13 = $1944($1_1, 7564);
   $0_1 = $2_1 + ($13 << 4) | 0;
   $4_1 = $0_1 + 764 | 0;
   $10_1 = $1944($2_1, 728);
   if ($10_1) {
    $3 = Math_fround($3 * $1963($10_1, 572))
   }
   $10_1 = $0_1 + 776 | 0;
   $3 = Math_fround(Math_fround($5_1 - $3) + Math_fround($1963($10_1, 0) - $1963($4_1, 4)));
   $11_1 = $3 <= Math_fround(0.0) ? Math_fround(0.0) : $3;
   label$363 : {
    $0_1 = $1944($1_1, 72);
    if (($0_1 | 0) < 0) {
     break label$363
    }
    $3 = $1963(($1_1 + ($0_1 << 2) | 0) + 1140 | 0, 0);
    $0_1 = $3 == Math_fround(0.0);
    label$364 : {
     if ($0_1) {
      break label$364
     }
     $5_1 = $1963($1_1 + 140 | 0, 0);
     if (!($5_1 < $3)) {
      break label$363
     }
     $6_1 = Math_fround($3 - $1963($1_1 + 24 | 0, 0));
     if ($6_1 >= $3) {
      break label$363
     }
     $14 = $1963($1_1 + 144 | 0, 0);
     if ($14 <= Math_fround(0.0)) {
      $0_1 = $5_1 > $6_1 & $3 >= $5_1;
      break label$364;
     }
     if ($5_1 > $6_1) {
      $0_1 = -1
     } else {
      $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $14);
      label$367 : {
       if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
        $0_1 = ~~$6_1;
        break label$367;
       }
       $0_1 = -2147483648;
      }
     }
     if ($3 < $5_1) {
      $17_1 = -1
     } else {
      $3 = Math_fround(Math_fround($3 - $5_1) / $14);
      label$370 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $17_1 = ~~$3;
        break label$370;
       }
       $17_1 = -2147483648;
      }
     }
     $0_1 = ($17_1 | 0) > ($0_1 | 0);
    }
    if (!$0_1) {
     break label$363
    }
    $1973($1_1, 7620, 2);
    $1973($1_1, 7612, 3);
    $1973($1_1, 7600, 48);
    $11_1 = Math_fround(-$11_1);
    break label$310;
   }
   label$372 : {
    $0_1 = $1944($1_1, 76);
    if (($0_1 | 0) < 0) {
     break label$372
    }
    $3 = $1963(($1_1 + ($0_1 << 2) | 0) + 1140 | 0, 0);
    $0_1 = $3 == Math_fround(0.0);
    label$373 : {
     if ($0_1) {
      break label$373
     }
     $5_1 = $1963($1_1 + 140 | 0, 0);
     if (!($5_1 < $3)) {
      break label$372
     }
     $6_1 = Math_fround($3 - $1963($1_1 + 24 | 0, 0));
     if ($6_1 >= $3) {
      break label$372
     }
     $14 = $1963($1_1 + 144 | 0, 0);
     if ($14 <= Math_fround(0.0)) {
      $0_1 = $5_1 > $6_1 & $3 >= $5_1;
      break label$373;
     }
     if ($5_1 > $6_1) {
      $0_1 = -1
     } else {
      $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $14);
      label$376 : {
       if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
        $0_1 = ~~$6_1;
        break label$376;
       }
       $0_1 = -2147483648;
      }
     }
     if ($3 < $5_1) {
      $17_1 = -1
     } else {
      $3 = Math_fround(Math_fround($3 - $5_1) / $14);
      label$379 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $17_1 = ~~$3;
        break label$379;
       }
       $17_1 = -2147483648;
      }
     }
     $0_1 = ($17_1 | 0) > ($0_1 | 0);
    }
    if (!$0_1) {
     break label$372
    }
    $1973($1_1, 7620, 3);
    $1973($1_1, 7612, 2);
    $1973($1_1, 7600, 48);
    break label$310;
   }
   if ($8) {
    $1973($10_1, 0, 0);
    $1973($4_1, 4, 0);
    $0_1 = ($2_1 + ($13 << 4) | 0) + 772 | 0;
    if ($1963($4_1, 0) > $1963($0_1, 0)) {
     $1973($0_1, 0, 0);
     $1973($4_1, 0, 0);
    }
    $1973($1_1, 7600, 80);
    $1973($1_1, 7612, 3);
    $11_1 = Math_fround(0.0);
    break label$310;
   }
   if ($12_1) {
    $3 = $1963($2_1 + 40 | 0, 0);
    $1986($10_1, 0, $3);
    $1986($4_1, 4, $3);
    $0_1 = ($2_1 + ($13 << 4) | 0) + 772 | 0;
    if ($1963($4_1, 0) > $1963($0_1, 0)) {
     $1973($0_1, 0, 0);
     $1973($4_1, 0, 0);
    }
    $1973($1_1, 7600, 80);
    $1973($1_1, 7612, 2);
   }
   $11_1 = Math_fround(0.0);
  }
  if ($11_1 != Math_fround(0.0)) {
   $1982($1_1, 7640, $1959($2_1, 432), i64toi32_i32$HIGH_BITS);
   $1982($1_1 + 7648 | 0, 0, $1959($2_1 + 440 | 0, 0), i64toi32_i32$HIGH_BITS);
   $0_1 = $1_1 + 7644 | 0;
   $1986($0_1, 0, Math_fround($11_1 + $1963($0_1, 0)));
   $0_1 = $1_1 + 7652 | 0;
   $1986($0_1, 0, Math_fround($11_1 + $1963($0_1, 0)));
  }
  $1968($1_1, 7598, 0);
  $0_1 = $1944($1_1, 7612);
  if (($0_1 | 0) != -1) {
   $1973($1_1, 7616, $0_1);
   $1970($1_1, 7596, 257);
   $1968($1_1, 7598, 0);
   $1983($1_1, 7664, 0, 0);
   $1982($1_1, 7712, 0, 0);
   $1973($1_1, 7756, 0);
   $1973($1_1 + 7696 | 0, 0, 0);
   $1983($1_1 + 7672 | 0, 0, 0, 0);
   $1973($1_1 + 7708 | 0, 0, 2139095039);
   $1973($1_1 + 7720 | 0, 0, 0);
   $1982($1_1 + 7700 | 0, 0, 2139095039, 2139095039);
   $1982($1_1 + 7740 | 0, 0, 0, 2139095039);
   $1982($1_1 + 7748 | 0, 0, 2139095039, 2139095039);
   $1973($1_1 + 7764 | 0, 0, 0);
   $1973($1_1, 7608, $1944($1_1 + 892 | 0, 0));
   $0_1 = $1944($1_1, 7600);
   $1973($1_1, 7600, $0_1 >>> 6 & 16 | $0_1);
   $1973($1_1 + 7760 | 0, 0, 0);
   $1982($1_1 + 7792 | 0, 0, 2139095039, 2139095039);
   $1982($1_1 + 7784 | 0, 0, 0, 2139095039);
   $1968($1_1, 7572, 1);
  }
  label$387 : {
   if (!$1937($1_1, 7596)) {
    break label$387
   }
   if (!$1944($1_1, 7512)) {
    $1973($1_1, 7576, 0);
    $1969($1_1, 7573, 257);
    $1968($1_1, 7570, 0);
   }
   if (($1944($1_1, 7560) | 0) != 3) {
    break label$387
   }
   $4_1 = $1944($1_1, 7564);
   if ($4_1 | !$2_1) {
    break label$387
   }
   $3 = Math_fround($1963($2_1 + 444 | 0, 0) + Math_fround(1.0));
   $6_1 = $1963($2_1 + 228 | 0, 0);
   $3 = Math_fround($3 - $6_1);
   $5_1 = Math_fround($1963($2_1 + 440 | 0, 0) + Math_fround(1.0));
   $15_1 = $1963($2_1 + 224 | 0, 0);
   $5_1 = Math_fround($5_1 - $15_1);
   $6_1 = Math_fround(Math_fround($1963($2_1 + 436 | 0, 0) + Math_fround(-1.0)) - $6_1);
   $0_1 = ($2_1 + ($4_1 << 4) | 0) + 764 | 0;
   $14 = $1963($0_1, 0);
   $19 = Math_fround(Math_fround($1963($2_1, 432) + Math_fround(-1.0)) - $15_1);
   label$389 : {
    if (!($14 >= $19)) {
     break label$389
    }
    if (!($1963($0_1, 4) >= $6_1)) {
     break label$389
    }
    $8 = $2_1 + ($4_1 << 4) | 0;
    if (!($1963($8 + 772 | 0, 0) <= $5_1)) {
     break label$389
    }
    if ($1963($8 + 776 | 0, 0) <= $3) {
     break label$387
    }
   }
   $15_1 = Math_fround($1963($1944(0, 73568), 6472) * $1963($2_1, 572));
   $26_1 = $6_1;
   $20_1 = Math_fround($3 - $6_1);
   $8 = $1944($2_1, 728);
   if ($8) {
    $15_1 = Math_fround($15_1 * $1963($8, 572))
   }
   $6_1 = Math_fround($15_1 * Math_fround(.5));
   $20_1 = $6_1 > $20_1 ? $20_1 : $6_1;
   $15_1 = Math_fround($26_1 + $20_1);
   $3 = Math_fround($3 - $20_1);
   $20_1 = $1963($0_1, 4);
   $1986($0_1, 4, $15_1 > $20_1 ? $15_1 : $3 < $20_1 ? $3 : $20_1);
   $20_1 = $19;
   $19 = Math_fround($5_1 - $19);
   $19 = $6_1 > $19 ? $19 : $6_1;
   $6_1 = Math_fround($20_1 + $19);
   $5_1 = Math_fround($5_1 - $19);
   $1986($0_1, 0, $6_1 > $14 ? $6_1 : $5_1 < $14 ? $5_1 : $14);
   $0_1 = $2_1 + ($4_1 << 4) | 0;
   $4_1 = $0_1 + 776 | 0;
   $14 = $1963($4_1, 0);
   $1986($4_1, 0, $14 < $15_1 ? $15_1 : $3 < $14 ? $3 : $14);
   $0_1 = $0_1 + 772 | 0;
   $3 = $1963($0_1, 0);
   $1986($0_1, 0, $3 < $6_1 ? $6_1 : $3 > $5_1 ? $5_1 : $3);
   $1983($1_1, 7512, 0, 0);
  }
  label$392 : {
   if (!$2_1) {
    $6_1 = Math_fround(0.0);
    $5_1 = Math_fround(0.0);
    $3 = Math_fround(0.0);
    break label$392;
   }
   $0_1 = $2_1 + ($1944($1_1, 7564) << 4) | 0;
   $4_1 = $0_1 + 764 | 0;
   $5_1 = $1963($4_1, 0);
   label$394 : {
    if ($1963($0_1 + 772 | 0, 0) < $5_1) {
     $14 = Math_fround(0.0);
     $6_1 = Math_fround(0.0);
     $3 = Math_fround(0.0);
     $15_1 = Math_fround(0.0);
     break label$394;
    }
    $14 = Math_fround(0.0);
    $6_1 = Math_fround(0.0);
    $3 = Math_fround(0.0);
    $15_1 = Math_fround(0.0);
    if ($1963($0_1 + 768 | 0, 0) > $1963($0_1 + 776 | 0, 0)) {
     break label$394
    }
    $14 = $1963($4_1, 12);
    $6_1 = $1963($4_1, 8);
    $3 = $5_1;
    $15_1 = $1963($4_1, 4);
   }
   $5_1 = $15_1;
   $15_1 = $3;
   $3 = $1963($2_1 + 224 | 0, 0);
   $15_1 = Math_fround(Math_fround($15_1 + $3) + Math_fround(1.0));
   $3 = Math_fround($6_1 + $3);
   $6_1 = $3 > $15_1 ? $15_1 : $3;
   $3 = $1963($2_1 + 228 | 0, 0);
   $5_1 = Math_fround($11_1 + Math_fround($5_1 + $3));
   $3 = Math_fround($11_1 + Math_fround($14 + $3));
  }
  $1986($1_1, 7624, $6_1);
  $1986($1_1 + 7636 | 0, 0, $3);
  $1986($1_1 + 7632 | 0, 0, $6_1);
  $1986($1_1 + 7628 | 0, 0, $5_1);
  if ($1963($1_1, 7640) > $6_1) {
   $1986($1_1, 7640, $6_1)
  }
  if ($1963($1_1 + 7644 | 0, 0) > $5_1) {
   $1986($1_1, 7644, $5_1)
  }
  if ($1963($1_1 + 7648 | 0, 0) < $6_1) {
   $1986($1_1, 7648, $6_1)
  }
  if ($1963($1_1 + 7652 | 0, 0) < $3) {
   $1986($1_1, 7652, $3)
  }
  label$400 : {
   if (($1944($9, 7612) | 0) != -1) {
    break label$400
   }
   $2_1 = $1944(0, 73568);
   $1_1 = $1944($2_1, 7508);
   if (!$1_1) {
    break label$400
   }
   if ($1944($2_1, 7844)) {
    break label$400
   }
   if ($1937($1_1 + 10 | 0, 0) & 4) {
    break label$400
   }
   $0_1 = $1944($2_1 + 52 | 0, 0);
   if (($0_1 | 0) < 0) {
    break label$400
   }
   $3 = $1963(($2_1 + ($0_1 << 2) | 0) + 1140 | 0, 0);
   $0_1 = $3 == Math_fround(0.0);
   label$401 : {
    if ($0_1) {
     break label$401
    }
    $5_1 = $1963($2_1 + 140 | 0, 0);
    if (!($5_1 < $3)) {
     break label$400
    }
    $6_1 = Math_fround($3 - $1963($2_1 + 24 | 0, 0));
    if ($6_1 >= $3) {
     break label$400
    }
    $11_1 = $1963($2_1 + 144 | 0, 0);
    if ($11_1 <= Math_fround(0.0)) {
     $0_1 = $5_1 > $6_1 & $3 >= $5_1;
     break label$401;
    }
    if ($5_1 > $6_1) {
     $0_1 = -1
    } else {
     $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $11_1);
     label$404 : {
      if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
       $0_1 = ~~$6_1;
       break label$404;
      }
      $0_1 = -2147483648;
     }
    }
    if ($3 < $5_1) {
     $4_1 = -1
    } else {
     $3 = Math_fround(Math_fround($3 - $5_1) / $11_1);
     label$407 : {
      if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
       $4_1 = ~~$3;
       break label$407;
      }
      $4_1 = -2147483648;
     }
    }
    $0_1 = ($4_1 | 0) > ($0_1 | 0);
   }
   if (!$0_1) {
    break label$400
   }
   if ($1937($2_1, 7168) & 1) {
    break label$400
   }
   if ($1937($2_1 + 252 | 0, 0)) {
    break label$400
   }
   if ($1937($2_1 + 254 | 0, 0)) {
    break label$400
   }
   $4_1 = -1;
   if (!$1937($2_1 + 253 | 0, 0)) {
    $4_1 = ($1944($2_1, 7136) | 0) != 0
   }
   $1973($2_1, 7660, $4_1);
   $0_1 = $1937($1_1, 144);
   $1973($2_1, 7620, ($4_1 | 0) < 0 ? 2 : 3);
   $1982($2_1, 7612, -1, -1);
   $1968($2_1, 7596, 1);
   $1969($2_1, 7597, 1);
   $1973($2_1, 7600, 1040);
   $1973($2_1 + 7696 | 0, 0, 0);
   $1973($2_1, 7608, $1944($2_1 + 892 | 0, 0));
   $1983($2_1, 7664, 0, 0);
   $1983($2_1 + 7672 | 0, 0, 0, 0);
   $1973($2_1 + 7708 | 0, 0, 2139095039);
   $1973($2_1 + 7720 | 0, 0, 0);
   $1982($2_1 + 7700 | 0, 0, 2139095039, 2139095039);
   $1973($2_1 + 7752 | 0, 0, 2139095039);
   $1973($2_1 + 7740 | 0, 0, 0);
   $1982($2_1, 7712, 0, 0);
   $1973($2_1, 7604, $0_1 ? 33 : 3);
   $1973($2_1, 7756, 0);
   $1982($2_1 + 7744 | 0, 0, 2139095039, 2139095039);
   $1982($2_1 + 7760 | 0, 0, 0, 0);
   $1982($2_1 + 7792 | 0, 0, 2139095039, 2139095039);
   $1982($2_1 + 7784 | 0, 0, 0, 2139095039);
   $1973($2_1, 7800, 0);
   $1968($2_1, 7572, 1);
   $1982($2_1 + 7804 | 0, 0, 0, 0);
   $1982($2_1 + 7836 | 0, 0, 2139095039, 2139095039);
   $1982($2_1 + 7828 | 0, 0, 0, 2139095039);
   $1973($2_1, 7664, -1);
  }
  $2_1 = 1;
  $1_1 = $1944(0, 73568);
  if (!$1937($1_1, 7597)) {
   $2_1 = $1937($1_1, 7573)
  }
  $1968($1_1, 7572, $2_1);
  $1968($9, 7568, 0);
  $0_1 = $1944($9, 7508);
  label$411 : {
   if (!$0_1) {
    break label$411
   }
   if ($1937($0_1 + 10 | 0, 0) & 4) {
    break label$411
   }
   if ($1944($9, 7844)) {
    break label$411
   }
   $3 = Math_fround($1963($1_1, 6472) * $1963($0_1, 572));
   $2_1 = $1944($0_1, 728);
   if ($2_1) {
    $3 = Math_fround($3 * $1963($2_1, 572))
   }
   $3 = Math_fround(Math_fround(Math_fround($3 * Math_fround(100.0)) * $1963($9, 24)) + Math_fround(.5));
   label$414 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$3;
     break label$414;
    }
    $2_1 = -2147483648;
   }
   $3 = Math_fround($2_1 | 0);
   label$416 : {
    if ($1941($0_1 + 296 | 0, 0)) {
     break label$416
    }
    if (!$1937($0_1 + 305 | 0, 0)) {
     break label$416
    }
    $2_1 = $1944($9, 7612);
    if (($2_1 | 0) == -1) {
     break label$416
    }
    if ($2_1 >>> 0 <= 1) {
     $1973($0_1, 120, 0);
     $1973($0_1, 112, 0);
     $5_1 = Math_fround(Math_fround(($2_1 ? Math_fround(1.0) : Math_fround(-1.0)) * $3) + $1963($0_1, 88));
     label$418 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $4_1 = ~~$5_1;
       break label$418;
      }
      $4_1 = -2147483648;
     }
     $1986($0_1, 104, Math_fround($4_1 | 0));
    }
    if (($2_1 & -2) != 2) {
     break label$416
    }
    $1973($0_1 + 124 | 0, 0, 0);
    $1973($0_1 + 116 | 0, 0, 0);
    $4_1 = $0_1 + 108 | 0;
    $5_1 = Math_fround(Math_fround((($2_1 | 0) == 2 ? Math_fround(-1.0) : Math_fround(1.0)) * $3) + $1963($0_1 + 92 | 0, 0));
    label$420 : {
     if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
      $2_1 = ~~$5_1;
      break label$420;
     }
     $2_1 = -2147483648;
    }
    $1986($4_1, 0, Math_fround($2_1 | 0));
   }
   $5_1 = Math_fround(Math_fround($1963($1_1 + 812 | 0, 0) - $1963($1_1 + 808 | 0, 0)) + Math_fround(0.0));
   $2_1 = $1963($1_1 + 824 | 0, 0) > Math_fround(0.0);
   $5_1 = $2_1 ? Math_fround($5_1 * Math_fround(.10000000149011612)) : $5_1;
   $4_1 = $1963($1_1 + 828 | 0, 0) > Math_fround(0.0);
   $5_1 = $4_1 ? Math_fround($5_1 * Math_fround(10.0)) : $5_1;
   $6_1 = Math_fround(Math_fround($1963($1_1 + 804 | 0, 0) - $1963($1_1 + 800 | 0, 0)) + Math_fround(0.0));
   $6_1 = $2_1 ? Math_fround($6_1 * Math_fround(.10000000149011612)) : $6_1;
   $6_1 = $4_1 ? Math_fround($6_1 * Math_fround(10.0)) : $6_1;
   label$422 : {
    if ($6_1 == Math_fround(0.0)) {
     break label$422
    }
    if (!$1937($0_1, 136)) {
     break label$422
    }
    $1973($0_1, 120, 0);
    $1973($0_1, 112, 0);
    $6_1 = Math_fround(Math_fround($6_1 * $3) + $1963($0_1, 88));
    label$423 : {
     if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
      $1_1 = ~~$6_1;
      break label$423;
     }
     $1_1 = -2147483648;
    }
    $1986($0_1, 104, Math_fround($1_1 | 0));
   }
   if ($5_1 == Math_fround(0.0)) {
    break label$411
   }
   $1973($0_1 + 124 | 0, 0, 0);
   $1973($0_1 + 116 | 0, 0, 0);
   $1_1 = $0_1 + 108 | 0;
   $3 = Math_fround(Math_fround($5_1 * $3) + $1963($0_1 + 92 | 0, 0));
   label$425 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $0_1 = ~~$3;
     break label$425;
    }
    $0_1 = -2147483648;
   }
   $1986($1_1, 0, Math_fround($0_1 | 0));
  }
  label$427 : {
   if (!$16_1) {
    $1970($9, 7570, 1);
    break label$427;
   }
   if (!$18_1) {
    break label$427
   }
   if (!($1937($9, 8) & 4)) {
    break label$427
   }
   if (!($1937($9 + 12 | 0, 0) & 4)) {
    break label$427
   }
   $140($21_1 + 8 | 0);
   $0_1 = $1960($21_1, 8);
   $2_1 = i64toi32_i32$HIGH_BITS;
   $1982($9 + 228 | 0, 0, $0_1, $2_1);
   $1982($9 + 900 | 0, 0, $0_1, $2_1);
   $1968($9, 851, 1);
  }
  $1973($9, 7656, 0);
  $2_1 = $1944(0, 73568);
  $3 = $1963($2_1 + 228 | 0, 0);
  label$429 : {
   if (!($3 >= Math_fround(-256.0e3))) {
    break label$429
   }
   $5_1 = $1963($2_1 + 232 | 0, 0);
   if (!($5_1 >= Math_fround(-256.0e3))) {
    break label$429
   }
   $5_1 = Math_fround((Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0) ? ~~$5_1 : -2147483648) | 0);
   $1986($2_1 + 8176 | 0, 0, $5_1);
   $3 = Math_fround((Math_fround(Math_abs($3)) < Math_fround(2147483648.0) ? ~~$3 : -2147483648) | 0);
   $1986($2_1, 8172, $3);
   $1986($2_1, 232, $5_1);
   $1986($2_1, 228, $3);
  }
  $5_1 = $1963($2_1, 232);
  label$434 : {
   label$435 : {
    $3 = $1963($2_1, 228);
    if (!($3 >= Math_fround(-256.0e3)) | !($5_1 >= Math_fround(-256.0e3))) {
     break label$435
    }
    $6_1 = $1963($2_1 + 900 | 0, 0);
    if (!($6_1 >= Math_fround(-256.0e3))) {
     break label$435
    }
    $11_1 = $1963($2_1 + 904 | 0, 0);
    if (!($11_1 >= Math_fround(-256.0e3))) {
     break label$435
    }
    $1986($2_1 + 884 | 0, 0, Math_fround($5_1 - $11_1));
    $1986($2_1 + 880 | 0, 0, Math_fround($3 - $6_1));
    break label$434;
   }
   $1983($2_1 + 880 | 0, 0, 0, 0);
  }
  label$436 : {
   if ($1963($2_1 + 880 | 0, 0) == Math_fround(0.0)) {
    if ($1963($2_1 + 884 | 0, 0) == Math_fround(0.0)) {
     break label$436
    }
   }
   $1968($2_1, 7571, 0);
  }
  $13 = $1959($2_1, 228);
  $0_1 = i64toi32_i32$HIGH_BITS;
  $16_1 = $0_1;
  $1982($2_1 + 900 | 0, 0, $13, $0_1);
  $4_1 = $2_1 + 8 | 0;
  $0_1 = 0;
  while (1) {
   $1_1 = 0;
   $17_1 = $0_1 + $2_1 | 0;
   $8 = $1937($17_1 + 236 | 0, 0);
   if ($8) {
    $1_1 = $1963((($0_1 << 2) + $2_1 | 0) + 1040 | 0, 0) < Math_fround(0.0)
   }
   $12_1 = $0_1 + $4_1 | 0;
   $22_1 = $12_1 + 984 | 0;
   $1968($22_1, 0, $1_1);
   $9 = $0_1 << 1;
   $23_1 = $9 + $4_1 | 0;
   $10_1 = $23_1 + 994 | 0;
   $1970($10_1, 0, 0);
   $18_1 = $12_1 + 1014 | 0;
   if ($8) {
    $12_1 = 0
   } else {
    $12_1 = $1963((($0_1 << 2) + $2_1 | 0) + 1040 | 0, 0) >= Math_fround(0.0)
   }
   $1968($18_1, 0, $12_1);
   $12_1 = $4_1 + ($0_1 << 2) | 0;
   $18_1 = $12_1 + 1032 | 0;
   $3 = $1963($18_1, 0);
   $1986($12_1 + 1052 | 0, 0, $3);
   $6_1 = Math_fround(-1.0);
   label$441 : {
    if (!$8) {
     break label$441
    }
    $6_1 = Math_fround(0.0);
    if ($3 < Math_fround(0.0)) {
     break label$441
    }
    $6_1 = Math_fround($3 + $1963($2_1, 24));
   }
   $1986($18_1, 0, $6_1);
   label$443 : {
    if ($1_1) {
     label$445 : {
      label$446 : {
       $3 = $1963($2_1, 40);
       $25_1 = $1967($2_1, 6976);
       $8 = $0_1 << 3;
       $1_1 = $8 + $2_1 | 0;
       $18_1 = $1_1 + 952 | 0;
       if (!($3 > Math_fround($25_1 - $1967($18_1, 0)))) {
        break label$446
       }
       $3 = $1963($2_1, 228);
       label$447 : {
        if (!($3 >= Math_fround(-256.0e3))) {
         $11_1 = Math_fround(0.0);
         $6_1 = Math_fround(0.0);
         break label$447;
        }
        $11_1 = Math_fround(0.0);
        $6_1 = Math_fround(0.0);
        if (!($5_1 >= Math_fround(-256.0e3))) {
         break label$447
        }
        $11_1 = Math_fround($3 - $1963($1_1 + 908 | 0, 0));
        $6_1 = Math_fround($1963($2_1, 232) - $1963($1_1 + 912 | 0, 0));
       }
       $3 = $6_1;
       $6_1 = Math_fround(Math_fround($11_1 * $11_1) + Math_fround($3 * $3));
       $3 = $1963($2_1, 44);
       if (!($6_1 < Math_fround($3 * $3))) {
        break label$446
       }
       $1_1 = ($2_1 + $9 | 0) + 1012 | 0;
       $1970($1_1, 0, $1941($1_1, 0) + 1 | 0);
       break label$445;
      }
      $1970(($2_1 + $9 | 0) + 1012 | 0, 0, 1);
     }
     $1990($18_1, 0, $25_1);
     $1_1 = $4_1 + $8 | 0;
     $1982($1_1 + 900 | 0, 0, $13, $16_1);
     $1970($10_1, 0, $1941($23_1 + 1004 | 0, 0));
     $1983($1_1 + 1072 | 0, 0, 0, 0);
     $1973($12_1 + 1112 | 0, 0, 0);
     break label$443;
    }
    if (!$8) {
     break label$443
    }
    $3 = $1963($2_1, 228);
    label$449 : {
     if (!($3 >= Math_fround(-256.0e3))) {
      $6_1 = Math_fround(0.0);
      $11_1 = Math_fround(0.0);
      break label$449;
     }
     $6_1 = Math_fround(0.0);
     $11_1 = Math_fround(0.0);
     if (!($5_1 >= Math_fround(-256.0e3))) {
      break label$449
     }
     $1_1 = ($0_1 << 3) + $2_1 | 0;
     $6_1 = Math_fround($1963($2_1, 232) - $1963($1_1 + 912 | 0, 0));
     $11_1 = Math_fround($3 - $1963($1_1 + 908 | 0, 0));
    }
    $3 = $11_1;
    $1_1 = $12_1 + 1112 | 0;
    $11_1 = $1963($1_1, 0);
    $14 = Math_fround(Math_fround($3 * $3) + Math_fround($6_1 * $6_1));
    $1986($1_1, 0, $11_1 >= $14 ? $11_1 : $14);
    $1_1 = $4_1 + ($0_1 << 3) | 0;
    $8 = $1_1 + 1072 | 0;
    $11_1 = $1963($8, 0);
    $3 = $3 < Math_fround(0.0) ? Math_fround(-$3) : $3;
    $1986($8, 0, $3 <= $11_1 ? $11_1 : $3);
    $1_1 = $1_1 + 1076 | 0;
    $3 = $1963($1_1, 0);
    $6_1 = $6_1 < Math_fround(0.0) ? Math_fround(-$6_1) : $6_1;
    $1986($1_1, 0, $3 >= $6_1 ? $3 : $6_1);
   }
   $1968($17_1 + 997 | 0, 0, ($1941($10_1, 0) | 0) == 2);
   if ($1937($22_1, 0)) {
    $1968($2_1, 7571, 0)
   }
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 5) {
    continue
   }
   break;
  };
  $8 = 0;
  $9 = $1944(0, 73568);
  $1_1 = $9 + 5520 | 0;
  $3 = $1963($1_1, 0);
  $1986($9 + 7076 | 0, 0, $3 >= Math_fround(4.0) ? $3 : Math_fround(4.0));
  $3 = $1963($9 + 5516 | 0, 0);
  $3 = $3 >= Math_fround(4.0) ? $3 : Math_fround(4.0);
  $1986($9, 7072, $3);
  $10_1 = $1944($9, 7092);
  if ($10_1) {
   $0_1 = $1937($10_1 + 9 | 0, 0) & 2 ? 0 : $10_1
  } else {
   $0_1 = 0
  }
  $17_1 = $1944($1_1, 0);
  $16_1 = $17_1;
  $1_1 = $1937($9 + 180 | 0, 0);
  if ($1_1) {
   $16_1 = $1944($9 + 7076 | 0, 0)
  }
  $12_1 = $1944($9, 7008);
  label$30 : {
   if (($12_1 | 0) <= 0) {
    break label$30
   }
   $22_1 = $1944($9, 5516);
   $23_1 = $1_1 ? (wasm2js_scratch_store_f32($3), wasm2js_scratch_load_i32(2)) : $22_1;
   $18_1 = $1944($9 + 7016 | 0, 0);
   $1_1 = $0_1;
   $4_1 = 0;
   while (1) {
    $13 = $12_1;
    label$611 : {
     label$712 : {
      $12_1 = $12_1 - 1 | 0;
      $8 = $1944($18_1 + ($12_1 << 2) | 0, 0);
      if (!$1937($8, 138)) {
       break label$712
      }
      if ($1937($8, 145)) {
       break label$712
      }
      $0_1 = $1944($8, 8);
      if ($0_1 & 512) {
       break label$712
      }
      $3 = $1963($9, 228);
      $0_1 = $0_1 & 16777282;
      $6_1 = (wasm2js_scratch_store_i32(2, $0_1 ? $22_1 : $23_1), wasm2js_scratch_load_f32());
      if (!($3 >= Math_fround($1963($8, 416) - $6_1))) {
       break label$712
      }
      $5_1 = $1963($9, 232);
      $11_1 = (wasm2js_scratch_store_i32(2, $0_1 ? $17_1 : $16_1), wasm2js_scratch_load_f32());
      if (!($5_1 >= Math_fround($1963($8 + 420 | 0, 0) - $11_1))) {
       break label$712
      }
      if (!($3 < Math_fround($1963($8 + 424 | 0, 0) + $6_1))) {
       break label$712
      }
      if (!(Math_fround($1963($8 + 428 | 0, 0) + $11_1) > $5_1)) {
       break label$712
      }
      label$8 : {
       $24 = $1941($8, 528);
       if (!$24) {
        break label$8
       }
       $0_1 = 0;
       $6_1 = Math_fround($1963($8, 12) + Math_fround($1939($8, 532) | 0));
       if ($3 >= $6_1) {
        $0_1 = $3 < Math_fround($6_1 + Math_fround($24 << 16 >> 16));
        $3 = Math_fround($1963($8 + 16 | 0, 0) + Math_fround($1939($8 + 534 | 0, 0) | 0));
        $0_1 = $0_1 & $3 <= $5_1 & Math_fround($3 + Math_fround($1939($8 + 530 | 0, 0) | 0)) > $5_1;
       }
       if (!$0_1) {
        break label$8
       }
       $24 = $0_1 ? 4 : 0;
       break label$611;
      }
      $1_1 = $1_1 ? $1_1 : $8;
      $0_1 = $4_1;
      label$1013 : {
       if ($0_1) {
        break label$1013
       }
       label$1114 : {
        if (!$10_1) {
         break label$1114
        }
        if (($1944($8, 736) | 0) != ($1944($10_1, 736) | 0)) {
         break label$1114
        }
        $0_1 = 0;
        break label$1013;
       }
       $0_1 = $8;
      }
      $4_1 = $0_1;
      $24 = $1_1 ? (($0_1 | 0) != 0) << 1 : 0;
      break label$611;
     }
     $24 = 4;
    }
    $8 = $4_1;
    $0_1 = $1_1;
    label$1215 : {
     switch ($24 | 0) {
     case 0:
     case 4:
      break label$1215;
     default:
      break label$30;
     };
    }
    if (($13 | 0) > 1) {
     continue
    }
    break;
   };
  }
  $1973($9, 7088, $8);
  $12_1 = $0_1;
  $1973($9, 7084, $0_1);
  $13 = $1944($9, 7468);
  $8 = $13;
  while (1) {
   label$1317 : {
    if (($8 | 0) <= 0) {
     $0_1 = 0;
     break label$1317;
    }
    $0_1 = $1_1;
    $8 = $8 - 1 | 0;
    $1_1 = $1944($1944($9, 7476) + Math_imul($8, 36) | 0, 4);
    label$16 : {
     if ($1_1) {
      $4_1 = 0;
      if ($1937($1_1 + 11 | 0, 0) & 8) {
       break label$16
      }
     }
     $1_1 = $0_1;
     $4_1 = 1;
    }
    $0_1 = $1_1;
    if ($4_1) {
     continue
    }
   }
   break;
  };
  $10_1 = 0;
  label$18 : {
   if (!$0_1) {
    break label$18
   }
   $10_1 = 0;
   if (!$12_1) {
    break label$18
   }
   $8 = 1;
   $4_1 = $1944($12_1, 736);
   label$1918 : {
    if (($1944($4_1, 736) | 0) == ($0_1 | 0)) {
     break label$1918
    }
    if ($4_1) {
     while (1) {
      $1_1 = ($0_1 | 0) == ($4_1 | 0);
      $8 = $1_1;
      if ($1_1) {
       break label$1918
      }
      $4_1 = $1944($4_1, 732);
      if ($4_1) {
       continue
      }
      break;
     }
    }
    $8 = 0;
   }
   $10_1 = $8 ^ 1;
  }
  $16_1 = ($13 | 0) > 0;
  $17_1 = $16_1 | ($12_1 | 0) != 0;
  $22_1 = ($0_1 | $12_1) != 0;
  $23_1 = $1944($9, 8);
  $18_1 = $23_1 & 16;
  $13 = $9 + 952 | 0;
  $4_1 = -1;
  $8 = 0;
  $1_1 = 0;
  while (1) {
   $12_1 = $1_1 + $9 | 0;
   if ($1937($12_1 + 992 | 0, 0)) {
    $1968($12_1 + 1032 | 0, 0, $22_1);
    $1968($12_1 + 1027 | 0, 0, $17_1);
   }
   $24 = $1937($12_1 + 236 | 0, 0);
   $12_1 = $24 | $8 & 1;
   label$24 : {
    if (!$24) {
     break label$24
    }
    if (($4_1 | 0) != -1) {
     if (!($1967($13 + ($1_1 << 3) | 0, 0) < $1967($13 + ($4_1 << 3) | 0, 0))) {
      break label$24
     }
    }
    $4_1 = $1_1;
   }
   $8 = ($12_1 | 0) != 0;
   $1_1 = $1_1 + 1 | 0;
   if (($1_1 | 0) != 5) {
    continue
   }
   break;
  };
  $8 = ($4_1 | 0) == -1;
  if ($8) {
   $1_1 = 1
  } else {
   $1_1 = ($1937(($4_1 + $9 | 0) + 1027 | 0, 0) | 0) != 0
  }
  if ($8) {
   $4_1 = 1
  } else {
   $4_1 = ($1937(($4_1 + $9 | 0) + 1032 | 0, 0) | 0) != 0
  }
  $8 = ($18_1 | 0) != 0 | $10_1;
  if ($1937($9, 7876)) {
   $13 = $1937($9, 7880) & 16
  } else {
   $13 = 0
  }
  if ($1_1 ? $8 : $8 | !$13) {
   $1982($9, 7084, 0, 0)
  }
  $8 = ($0_1 | 0) != 0;
  $13 = $1944($9, 12788);
  label$34 : {
   if (($13 | 0) != -1) {
    $1_1 = ($13 | 0) != 0;
    $1968($9 + 848 | 0, 0, $1_1);
    $1968($9 + 888 | 0, 0, $1_1);
    break label$34;
   }
   $13 = $9 + 848 | 0;
   label$3621 : {
    if ($1_1) {
     $1_1 = 1;
     if ($1944($9, 7084)) {
      break label$3621
     }
     $1_1 = 1;
     if ($12_1) {
      break label$3621
     }
    }
    $1_1 = $16_1;
   }
   $1968($13, 0, $1_1);
   $16_1 = $9 + 888 | 0;
   label$3922 : {
    if ($4_1) {
     $1_1 = 1;
     if ($1944($9, 7084)) {
      break label$3922
     }
     $1_1 = 1;
     if ($12_1) {
      break label$3922
     }
    }
    $1_1 = $8;
   }
   $1968($16_1, 0, $1_1);
  }
  $4_1 = $9 + 849 | 0;
  $1_1 = $1944($9, 12792);
  label$42 : {
   if (($1_1 | 0) != -1) {
    $0_1 = ($1_1 | 0) != 0;
    break label$42;
   }
   $0_1 = ($1944($9, 7136) | $0_1) != 0;
  }
  $1968($4_1, 0, $0_1);
  if (!(!$1937($9 + 853 | 0, 0) | ($23_1 & 9) != 1)) {
   $1968($9 + 849 | 0, 0, 1)
  }
  $1968($9 + 850 | 0, 0, $1944($9, 12796) - 1 >>> 0 < 4294967294);
  $0_1 = $1944(0, 73568);
  $4_1 = $1944($0_1, 7092);
  __inlined_func$127 : {
   if ($4_1) {
    $1_1 = $1944($0_1, 7136);
    $1973($0_1, 7140, $1_1);
    if (($1944($0_1, 7196) | 0) == ($1_1 | 0)) {
     $1968($0_1, 7200, 1)
    }
    label$316 : {
     if (!$1937($0_1 + 236 | 0, 0)) {
      break label$316
     }
     $5_1 = $1963($0_1 + 228 | 0, 0);
     if (!($5_1 >= Math_fround(-256.0e3))) {
      break label$316
     }
     if (!($1963($0_1 + 232 | 0, 0) >= Math_fround(-256.0e3))) {
      break label$316
     }
     $3 = Math_fround($1963($0_1 + 232 | 0, 0) - $1963($0_1 + 7180 | 0, 0));
     $1_1 = $1944($4_1, 736);
     $6_1 = $1963($1_1, 12);
     $5_1 = Math_fround($5_1 - $1963($0_1, 7176));
     label$43 : {
      if ($6_1 == $5_1) {
       if ($1963($1_1 + 16 | 0, 0) == $3) {
        break label$43
       }
      }
      label$657 : {
       if ($1937($1_1 + 9 | 0, 0) & 1) {
        break label$657
       }
       if (!($1963($0_1, 12128) <= Math_fround(0.0))) {
        break label$657
       }
       $1986($0_1, 12128, $1963($0_1 + 28 | 0, 0));
      }
      $4_1 = $1944($1_1, 176);
      if (!($4_1 & 1)) {
       break label$43
      }
      $1982($1_1, 180, 2139095039, 2139095039);
      $1973($1_1, 176, $4_1 & -15);
      $6_1 = $1963($1_1, 12);
      $5_1 = Math_fround((Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0) ? ~~$5_1 : -2147483648) | 0);
      $1986($1_1, 12, $5_1);
      $4_1 = $1_1 + 16 | 0;
      $11_1 = $1963($4_1, 0);
      $14 = Math_fround((Math_fround(Math_abs($3)) < Math_fround(2147483648.0) ? ~~$3 : -2147483648) | 0);
      $1986($4_1, 0, $14);
      $3 = Math_fround($5_1 - $6_1);
      $1986($1_1, 208, Math_fround($3 + $1963($1_1, 208)));
      $4_1 = $1_1 + 212 | 0;
      $5_1 = Math_fround($14 - $11_1);
      $1986($4_1, 0, Math_fround($5_1 + $1963($4_1, 0)));
      $4_1 = $1_1 + 232 | 0;
      $1986($4_1, 0, Math_fround($3 + $1963($4_1, 0)));
      $4_1 = $1_1 + 236 | 0;
      $1986($4_1, 0, Math_fround($5_1 + $1963($4_1, 0)));
      $4_1 = $1_1 + 240 | 0;
      $1986($4_1, 0, Math_fround($3 + $1963($4_1, 0)));
      $4_1 = $1_1 + 244 | 0;
      $1986($4_1, 0, Math_fround($5_1 + $1963($4_1, 0)));
      $4_1 = $1_1 + 224 | 0;
      $1986($4_1, 0, Math_fround($3 + $1963($4_1, 0)));
      $1_1 = $1_1 + 228 | 0;
      $1986($1_1, 0, Math_fround($5_1 + $1963($1_1, 0)));
     }
     $125($1944($0_1, 7092));
     break __inlined_func$127;
    }
    $1973($0_1, 7092, 0);
    $1968($0_1, 7148, ($1_1 | 0) != 0);
    if ($1_1) {
     $1973($0_1, 7192, -1);
     $1969($0_1, 7151, 0);
     $1973($0_1, 7144, 0);
    }
    $1973($0_1, 7184, 0);
    $1969($0_1, 7149, 0);
    $1973($0_1, 7136, 0);
    $1983($0_1, 7168, 0, 0);
    $1982($0_1, 7156, 0, 0);
    $1969($0_1, 7153, 0);
    break __inlined_func$127;
   }
   $1_1 = $1944($0_1, 7184);
   label$127 : {
    if (!$1_1) {
     break label$127
    }
    $4_1 = $1944($1_1, 80);
    $1_1 = $1944($0_1, 7136);
    if (($4_1 | 0) != ($1_1 | 0)) {
     break label$127
    }
    $1973($0_1, 7140, $1_1);
    if (($1944($0_1, 7196) | 0) == ($1_1 | 0)) {
     $1968($0_1, 7200, 1)
    }
    if ($1937($0_1 + 236 | 0, 0)) {
     break label$127
    }
    $1968($0_1, 7148, ($1_1 | 0) != 0);
    if ($1_1) {
     $1973($0_1, 7192, -1);
     $1969($0_1, 7151, 0);
     $1973($0_1, 7144, 0);
    }
    $1973($0_1, 7184, 0);
    $1969($0_1, 7149, 0);
    $1973($0_1, 7136, 0);
    $1983($0_1, 7168, 0, 0);
    $1982($0_1, 7156, 0, 0);
    $1969($0_1, 7153, 0);
   }
  }
  $8 = $1944(0, 73568);
  $4_1 = $1944($8, 7468);
  while (1) {
   label$452 : {
    $0_1 = $2_1;
    if (($4_1 | 0) <= 0) {
     $2_1 = 0;
     break label$452;
    }
    $4_1 = $4_1 - 1 | 0;
    $2_1 = $1944($1944($8, 7476) + Math_imul($4_1, 36) | 0, 4);
    label$455 : {
     if ($2_1) {
      $1_1 = 0;
      if ($1937($2_1 + 11 | 0, 0) & 8) {
       break label$455
      }
     }
     $2_1 = $0_1;
     $1_1 = 1;
    }
    if ($1_1) {
     continue
    }
   }
   break;
  };
  label$457 : {
   label$458 : {
    if (!$2_1) {
     if (!$1944($7_1, 7844)) {
      break label$458
     }
     if (!($1963($7_1, 7860) > Math_fround(0.0))) {
      break label$458
     }
    }
    $3 = Math_fround(Math_fround($1963($7_1, 24) * Math_fround(6.0)) + $1963($7_1, 7868));
    $1986($7_1, 7868, $3 < Math_fround(1.0) ? $3 : Math_fround(1.0));
    break label$457;
   }
   $3 = Math_fround($1963($7_1, 7868) + Math_fround($1963($7_1, 24) * Math_fround(-10.0)));
   $1986($7_1, 7868, $3 >= Math_fround(0.0) ? $3 : Math_fround(0.0));
  }
  $1973($7_1, 12796, -1);
  $1973($7_1, 7872, 0);
  $1982($7_1, 12788, -1, -1);
  $1982($7_1, 12108, 1065353216, 1065353216);
  label$460 : {
   if (!$1944($8, 7096)) {
    break label$460
   }
   $1986($8, 7108, Math_fround($1963($8, 7108) - $1963($8 + 24 | 0, 0)));
   $3 = $1963($8 + 228 | 0, 0);
   label$461 : {
    if (!($3 >= Math_fround(-256.0e3))) {
     break label$461
    }
    $5_1 = $1963($8 + 232 | 0, 0);
    if (!($5_1 >= Math_fround(-256.0e3))) {
     break label$461
    }
    $3 = Math_fround($3 - $1963($8, 7100));
    $6_1 = Math_fround($3 * $3);
    $3 = Math_fround($5_1 - $1963($8 + 7104 | 0, 0));
    $5_1 = Math_fround($6_1 + Math_fround($3 * $3));
    $3 = $1963($8 + 48 | 0, 0);
    if (!($5_1 > Math_fround($3 * $3))) {
     break label$461
    }
    $1973($8, 7108, 0);
   }
   if (!($1963($8, 7108) <= Math_fround(0.0))) {
    break label$460
   }
   $1973($8, 7108, 0);
   $1973($8, 7096, 0);
  }
  $3 = $1963($8 + 244 | 0, 0);
  label$462 : {
   if ($3 == Math_fround(0.0)) {
    if ($1963($8 + 248 | 0, 0) == Math_fround(0.0)) {
     break label$462
    }
   }
   if ($1944($8, 7136)) {
    if ($1937($8, 7154)) {
     break label$462
    }
   }
   if ($1944($8, 7120)) {
    if ($1937($8, 7126)) {
     break label$462
    }
   }
   $2_1 = $1944($8, 7096);
   $0_1 = $2_1;
   if (!$0_1) {
    $0_1 = $1944($8, 7084)
   }
   if (!$0_1) {
    break label$462
   }
   if ($1937($0_1, 141)) {
    break label$462
   }
   label$467 : {
    if ($3 == Math_fround(0.0)) {
     break label$467
    }
    if (!$1937($8 + 252 | 0, 0)) {
     break label$467
    }
    if (!$1937($8 + 160 | 0, 0)) {
     break label$467
    }
    if (($0_1 | 0) != ($2_1 | 0)) {
     $1973($8, 7096, $0_1);
     $1973($8, 7108, 1073741824);
     $1982($8, 7100, $1959($8 + 228 | 0, 0), i64toi32_i32$HIGH_BITS);
    }
    $3 = Math_fround($1963($8, 244) * Math_fround(.10000000149011612));
    $5_1 = $1963($0_1, 572);
    $3 = Math_fround($3 + $5_1);
    $3 = $3 < Math_fround(.5) ? Math_fround(.5) : $3 > Math_fround(2.5) ? Math_fround(2.5) : $3;
    $1986($0_1, 572, $3);
    if (($1944($0_1, 736) | 0) != ($0_1 | 0)) {
     break label$462
    }
    $15_1 = $1963($8 + 228 | 0, 0);
    $14 = $1963($8 + 232 | 0, 0);
    $1982($0_1, 180, 2139095039, 2139095039);
    $1973($0_1, 176, $1944($0_1, 176) & -15);
    $2_1 = $0_1 + 16 | 0;
    $6_1 = $1963($2_1, 0);
    $3 = Math_fround($3 / $5_1);
    $19 = Math_fround(Math_fround(1.0) - $3);
    $1_1 = $0_1 + 24 | 0;
    $11_1 = $1963($1_1, 0);
    $5_1 = Math_fround($6_1 + Math_fround(Math_fround(Math_fround($19 * $11_1) * Math_fround($14 - $6_1)) / $11_1));
    label$469 : {
     if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
      $4_1 = ~~$5_1;
      break label$469;
     }
     $4_1 = -2147483648;
    }
    $20_1 = Math_fround($4_1 | 0);
    $1986($2_1, 0, $20_1);
    $5_1 = $1963($0_1, 12);
    $14 = $1963($0_1, 20);
    $15_1 = Math_fround($5_1 + Math_fround(Math_fround(Math_fround($19 * $14) * Math_fround($15_1 - $5_1)) / $14));
    label$471 : {
     if (Math_fround(Math_abs($15_1)) < Math_fround(2147483648.0)) {
      $2_1 = ~~$15_1;
      break label$471;
     }
     $2_1 = -2147483648;
    }
    $15_1 = Math_fround($2_1 | 0);
    $1986($0_1, 12, $15_1);
    $5_1 = Math_fround($15_1 - $5_1);
    $1986($0_1, 208, Math_fround($5_1 + $1963($0_1, 208)));
    $2_1 = $0_1 + 212 | 0;
    $6_1 = Math_fround($20_1 - $6_1);
    $1986($2_1, 0, Math_fround($6_1 + $1963($2_1, 0)));
    $2_1 = $0_1 + 232 | 0;
    $1986($2_1, 0, Math_fround($5_1 + $1963($2_1, 0)));
    $2_1 = $0_1 + 236 | 0;
    $1986($2_1, 0, Math_fround($6_1 + $1963($2_1, 0)));
    $2_1 = $0_1 + 240 | 0;
    $1986($2_1, 0, Math_fround($5_1 + $1963($2_1, 0)));
    $2_1 = $0_1 + 244 | 0;
    $1986($2_1, 0, Math_fround($6_1 + $1963($2_1, 0)));
    $2_1 = $0_1 + 224 | 0;
    $1986($2_1, 0, Math_fround($5_1 + $1963($2_1, 0)));
    $2_1 = $0_1 + 228 | 0;
    $1986($2_1, 0, Math_fround($6_1 + $1963($2_1, 0)));
    $5_1 = Math_fround($3 * $11_1);
    label$473 : {
     if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
      $2_1 = ~~$5_1;
      break label$473;
     }
     $2_1 = -2147483648;
    }
    $1986($1_1, 0, Math_fround($2_1 | 0));
    $5_1 = Math_fround($3 * $14);
    label$475 : {
     if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
      $1_1 = ~~$5_1;
      break label$475;
     }
     $1_1 = -2147483648;
    }
    $1986($0_1, 20, Math_fround($1_1 | 0));
    $2_1 = $0_1 + 32 | 0;
    $5_1 = Math_fround($3 * $1963($2_1, 0));
    label$477 : {
     if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
      $1_1 = ~~$5_1;
      break label$477;
     }
     $1_1 = -2147483648;
    }
    $5_1 = $1963($0_1, 28);
    $1986($2_1, 0, Math_fround($1_1 | 0));
    $3 = Math_fround($3 * $5_1);
    label$479 : {
     if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
      $1_1 = ~~$3;
      break label$479;
     }
     $1_1 = -2147483648;
    }
    $1986($0_1, 28, Math_fround($1_1 | 0));
    break label$462;
   }
   if ($1937($8 + 252 | 0, 0)) {
    break label$462
   }
   if ($1937($8 + 253 | 0, 0)) {
    $1_1 = $1937($8 + 177 | 0, 0)
   } else {
    $1_1 = 1
   }
   $1_1 = !$1_1;
   $6_1 = $1963($8 + ($1_1 ? 244 : 248) | 0, 0);
   $5_1 = $1_1 ? Math_fround(0.0) : $3;
   if ($5_1 != Math_fround(0.0)) {
    if (($0_1 | 0) != ($2_1 | 0)) {
     $1973($8, 7096, $0_1);
     $1973($8, 7108, 1073741824);
     $1982($8, 7100, $1959($8 + 228 | 0, 0), i64toi32_i32$HIGH_BITS);
    }
    $4_1 = $1944($0_1, 8);
    label$486 : {
     if (!($4_1 & 16777216)) {
      $1_1 = $4_1;
      break label$486;
     }
     $2_1 = $0_1;
     while (1) {
      $0_1 = $2_1;
      if (!(($4_1 & 528) == 16 | $1963($0_1 + 100 | 0, 0) == Math_fround(0.0))) {
       $1_1 = $4_1;
       break label$486;
      }
      $0_1 = $1944($0_1, 728);
      $1_1 = $1944($0_1, 8);
      $4_1 = $1_1;
      $2_1 = $0_1;
      if ($1_1 & 16777216) {
       continue
      }
      break;
     };
    }
    if (!($1_1 & 528)) {
     $3 = Math_fround(Math_fround($1963($0_1 + 444 | 0, 0) - $1963($0_1 + 436 | 0, 0)) * Math_fround(.6700000166893005));
     $14 = Math_fround($1963($8, 6472) * $1963($0_1, 572));
     $2_1 = $1944($0_1, 728);
     if ($2_1) {
      $14 = Math_fround($14 * $1963($2_1, 572))
     }
     $1973($0_1 + 124 | 0, 0, 0);
     $1973($0_1 + 116 | 0, 0, 0);
     $2_1 = $0_1 + 108 | 0;
     $15_1 = $1963($0_1 + 92 | 0, 0);
     $11_1 = $5_1;
     $5_1 = Math_fround($14 * Math_fround(5.0));
     $3 = $3 > $5_1 ? $5_1 : $3;
     label$493 : {
      if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
       $1_1 = ~~$3;
       break label$493;
      }
      $1_1 = -2147483648;
     }
     $1986($2_1, 0, Math_fround($15_1 - Math_fround($11_1 * Math_fround($1_1 | 0))));
    }
   }
   if ($6_1 == Math_fround(0.0)) {
    break label$462
   }
   if (($1944($8, 7096) | 0) != ($0_1 | 0)) {
    $1973($8, 7096, $0_1);
    $1973($8, 7108, 1073741824);
    $1982($8, 7100, $1959($8 + 228 | 0, 0), i64toi32_i32$HIGH_BITS);
   }
   $4_1 = $1944($0_1, 8);
   label$496 : {
    if (!($4_1 & 16777216)) {
     $1_1 = $4_1;
     break label$496;
    }
    $2_1 = $0_1;
    while (1) {
     $0_1 = $2_1;
     if (!(($4_1 & 528) == 16 | $1963($0_1, 96) == Math_fround(0.0))) {
      $1_1 = $4_1;
      break label$496;
     }
     $0_1 = $1944($0_1, 728);
     $1_1 = $1944($0_1, 8);
     $4_1 = $1_1;
     $2_1 = $0_1;
     if ($1_1 & 16777216) {
      continue
     }
     break;
    };
   }
   if ($1_1 & 528) {
    break label$462
   }
   $5_1 = Math_fround($1963($8, 6472) * $1963($0_1, 572));
   $3 = Math_fround(Math_fround($1963($0_1 + 440 | 0, 0) - $1963($0_1, 432)) * Math_fround(.6700000166893005));
   $2_1 = $1944($0_1, 728);
   if ($2_1) {
    $5_1 = Math_fround($5_1 * $1963($2_1, 572))
   }
   $1973($0_1, 120, 0);
   $1973($0_1, 112, 0);
   $11_1 = $1963($0_1, 88);
   $5_1 = Math_fround($5_1 + $5_1);
   $3 = $3 > $5_1 ? $5_1 : $3;
   label$5028 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $1_1 = ~~$3;
     break label$5028;
    }
    $1_1 = -2147483648;
   }
   $1986($0_1, 104, Math_fround($11_1 - Math_fround($6_1 * Math_fround($1_1 | 0))));
  }
  $5_1 = Math_fround(3402823466385288598117041.0e14);
  label$504 : {
   if ($1937($7_1, 6999)) {
    break label$504
   }
   $3 = $1963($7_1 + 184 | 0, 0);
   $5_1 = Math_fround(3402823466385288598117041.0e14);
   if ($3 < Math_fround(0.0)) {
    break label$504
   }
   $5_1 = Math_fround(Math_fround($1967($7_1, 6976)) - $3);
  }
  $3 = $5_1;
  if ($1944($7_1, 7008)) {
   $0_1 = 0;
   while (1) {
    $2_1 = $1944($1944($7_1, 7016) + ($0_1 << 2) | 0, 0);
    $1970($2_1, 150, 0);
    $1968($2_1, 140, 0);
    $1_1 = $1937($2_1, 138);
    $1968($2_1, 139, $1_1);
    $1968($2_1, 138, 0);
    label$508 : {
     if ($1_1) {
      break label$508
     }
     if ($1937($2_1, 804)) {
      break label$508
     }
     if (!($1963($2_1, 540) < $3)) {
      break label$508
     }
     $1968($2_1, 804, 1);
     $1_1 = $1944($2_1, 580);
     $1973($2_1, 796, $1944($1_1 + 16 | 0, 0));
     $1973($2_1, 800, $1944($1_1 + 28 | 0, 0));
     $1_1 = $1944($2_1 + 204 | 0, 0);
     if ($1_1) {
      $1982($2_1, 196, 0, 0);
      $4_1 = $1944(0, 73568);
      if ($4_1) {
       $4_1 = $4_1 + 876 | 0;
       $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
      }
      ((wasm2js_i32$2 = $1_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      $1973($2_1, 204, 0);
     }
     $373($1944($2_1, 580));
     $1_1 = $1944($2_1 + 360 | 0, 0);
     if ($1_1) {
      $1982($2_1 + 352 | 0, 0, 0, 0);
      $4_1 = $1944(0, 73568);
      if ($4_1) {
       $4_1 = $4_1 + 876 | 0;
       $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
      }
      ((wasm2js_i32$1 = $1_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
      $1973($2_1, 360, 0);
     }
     $1_1 = $1944($2_1 + 400 | 0, 0);
     if ($1_1) {
      $1982($2_1 + 392 | 0, 0, 0, 0);
      $4_1 = $1944(0, 73568);
      if ($4_1) {
       $4_1 = $4_1 + 876 | 0;
       $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
      }
      ((wasm2js_i32$2 = $1_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      $1973($2_1, 400, 0);
     }
     $1_1 = $1944($2_1 + 412 | 0, 0);
     if ($1_1) {
      $1982($2_1 + 404 | 0, 0, 0, 0);
      $4_1 = $1944(0, 73568);
      if ($4_1) {
       $4_1 = $4_1 + 876 | 0;
       $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
      }
      ((wasm2js_i32$1 = $1_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
      $1973($2_1, 412, 0);
     }
    }
    $0_1 = $0_1 + 1 | 0;
    if (($1944($7_1, 7008) | 0) != ($0_1 | 0)) {
     continue
    }
    break;
   };
  }
  if (($1944($7_1, 8088) | 0) > 0) {
   $0_1 = 0;
   while (1) {
    $5_1 = $1963($1944($7_1, 8096) + ($0_1 << 2) | 0, 0);
    if (!(!($5_1 >= Math_fround(0.0)) | !($3 > $5_1))) {
     $2_1 = $1944($7_1, 8064) + Math_imul($0_1, 456) | 0;
     $1_1 = $1944(0, 73568);
     $1973($2_1, 404, 0);
     $4_1 = $1944($2_1 + 400 | 0, 0);
     if ($4_1) {
      $1982($2_1, 392, 0, 0);
      $17($4_1);
      $1973($2_1, 400, 0);
     }
     $1968($2_1, 444, 1);
     $4_1 = $1944($2_1 + 372 | 0, 0);
     if ($4_1) {
      $1982($2_1, 364, 0, 0);
      $17($4_1);
      $1973($2_1, 372, 0);
     }
     $1968($2_1, 454, 1);
     $4_1 = $1944($2_1, 84);
     if (($4_1 | 0) > 0) {
      $8 = $1944($2_1, 16);
      $12_1 = 0;
      while (1) {
       $1970(Math_imul($12_1, 104) + $8 | 0, 80, 65535);
       $12_1 = $12_1 + 1 | 0;
       if (($4_1 | 0) != ($12_1 | 0)) {
        continue
       }
       break;
      };
     }
     $1973($1944($1_1 + 8096 | 0, 0) + (($2_1 - $1944($1_1 + 8064 | 0, 0) | 0) / 456 << 2) | 0, 0, -1082130432);
    }
    $0_1 = $0_1 + 1 | 0;
    if (($1944($7_1, 8088) | 0) > ($0_1 | 0)) {
     continue
    }
    break;
   };
  }
  if (($1944($7_1, 8044) | 0) > 0) {
   $0_1 = 0;
   while (1) {
    $2_1 = $1944($7_1, 8052) + Math_imul($0_1, 104) | 0;
    $5_1 = $1963($2_1, 4);
    if (!(!($5_1 >= Math_fround(0.0)) | !($3 > $5_1))) {
     $374($2_1 + 16 | 0);
     $1973($2_1, 4, -1082130432);
    }
    $0_1 = $0_1 + 1 | 0;
    if (($1944($7_1, 8044) | 0) > ($0_1 | 0)) {
     continue
    }
    break;
   };
  }
  if ($1937($7_1, 6999)) {
   $0_1 = $1944(0, 73568);
   $2_1 = $1944($0_1 + 7452 | 0, 0);
   if ($2_1) {
    $1982($0_1, 7444, 0, 0);
    if ($0_1) {
     $1_1 = $0_1 + 876 | 0;
     $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    $1973($0_1, 7452, 0);
   }
   $2_1 = $1944($0_1 + 7464 | 0, 0);
   if ($2_1) {
    $1982($0_1, 7456, 0, 0);
    $1_1 = $1944(0, 73568);
    if ($1_1) {
     $1_1 = $1_1 + 876 | 0;
     $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    $1973($0_1, 7464, 0);
   }
   $1_1 = 0;
   $13 = $1944(0, 73568);
   $0_1 = $1944($13 + 12176 | 0, 0);
   if ($0_1) {
    $4_1 = $0_1 + 4 | 0;
    $8 = $1944($13, 12168) + $4_1 | 0;
    $2_1 = 0;
    while (1) {
     if ($1944($4_1, 0)) {
      $2_1 = (Math_imul($1936($4_1, 12), 12) + $2_1 | 0) + 16 | 0
     }
     $1_1 = $2_1;
     $4_1 = $1944($4_1 - 4 | 0, 0) + $4_1 | 0;
     $0_1 = ($4_1 | 0) == ($8 | 0);
     $4_1 = $0_1 ? 0 : $4_1;
     if (!$0_1) {
      continue
     }
     break;
    };
   }
   $4_1 = $1_1;
   label$511 : {
    if (($1944($13, 12168) | 0) == ($1_1 | 0)) {
     break label$511
    }
    label$612 : {
     if (($4_1 | 0) <= 0) {
      $4_1 = 0;
      $1_1 = 0;
      break label$612;
     }
     $1_1 = $16($4_1);
    }
    $0_1 = $4_1;
    $2_1 = $1944($13, 12176);
    label$813 : {
     if (!$2_1) {
      $8 = 0;
      break label$813;
     }
     $4_1 = $2_1 + 4 | 0;
     $8 = 0;
     $2_1 = $0_1;
     while (1) {
      if ($1944($4_1, 0)) {
       label$1315 : {
        label$1417 : {
         $9 = Math_imul($1936($4_1, 12), 12) + 23 & -4;
         $12_1 = $9 + $8 | 0;
         if (($12_1 | 0) <= ($2_1 | 0)) {
          break label$1417
         }
         $0_1 = $2_1 ? (($2_1 | 0) / 2 | 0) + $2_1 | 0 : 8;
         $0_1 = ($0_1 | 0) > ($12_1 | 0) ? $0_1 : $12_1;
         if (($0_1 | 0) <= ($2_1 | 0)) {
          break label$1417
         }
         $2_1 = $16($0_1);
         if ($1_1) {
          $1602($2_1, $1_1, $8);
          $17($1_1);
         }
         $1_1 = $2_1;
         break label$1315;
        }
        $0_1 = $2_1;
       }
       $2_1 = $1_1 + $8 | 0;
       $1973($2_1, 0, $9);
       $1602($2_1 + 4 | 0, $4_1, Math_imul($1936($4_1, 12), 12) + 16 | 0);
       $8 = $12_1;
       $2_1 = $0_1;
      }
      $0_1 = $2_1;
      $4_1 = $1944($4_1 - 4 | 0, 0) + $4_1 | 0;
      $12_1 = ($4_1 | 0) == (($1944($13, 12176) + $1944($13, 12168) | 0) + 4 | 0);
      $4_1 = $12_1 ? 0 : $4_1;
      if (!$12_1) {
       continue
      }
      break;
     };
    }
    $1973($13, 12168, $8);
    $1973($13 + 12172 | 0, 0, $0_1);
    $0_1 = $1944($13, 12176);
    $1973($13, 12176, $1_1);
    if (!$0_1) {
     break label$511
    }
    $17($0_1);
   }
  }
  $1968($7_1, 6999, 0);
  $0_1 = $1944($7_1, 7508);
  label$520 : {
   if (!$0_1) {
    break label$520
   }
   if ($1937($0_1, 139)) {
    break label$520
   }
   $2_1 = $1944(0, 73568);
   $0_1 = $1944($2_1, 7020);
   if (($0_1 | 0) > 0) {
    $4_1 = $1944($2_1 + 7028 | 0, 0);
    while (1) {
     $1_1 = $0_1;
     label$523 : {
      $0_1 = $0_1 - 1 | 0;
      $2_1 = $1944($4_1 + ($0_1 << 2) | 0, 0);
      if (!$2_1) {
       break label$523
      }
      if (!$1937($2_1, 139)) {
       break label$523
      }
      if (($1944($2_1, 8) & 262656) == 262656) {
       break label$523
      }
      $4_1 = $1944($2_1, 752);
      label$524 : {
       if ($4_1) {
        if ($1937($4_1, 139)) {
         break label$524
        }
       }
       $4_1 = $2_1;
      }
      $125($4_1);
      break label$520;
     }
     if (($1_1 | 0) > 1) {
      continue
     }
     break;
    };
   }
   $125(0);
  }
  $0_1 = $1944($7_1 + 7048 | 0, 0);
  label$526 : {
   if (($0_1 | 0) >= 0) {
    break label$526
   }
   $2_1 = $0_1 + (($0_1 | 0) / 2 | 0) | 0;
   $2_1 = ($2_1 | 0) > 0 ? $2_1 : 0;
   if (($0_1 | 0) >= ($2_1 | 0)) {
    break label$526
   }
   $0_1 = $1944(0, 73568);
   if ($0_1) {
    $0_1 = $0_1 + 876 | 0;
    $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
   }
   $0_1 = (((wasm2js_i32$2 = Math_imul($2_1, 84), wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0) | 0);
   $1_1 = $1944($7_1 + 7052 | 0, 0);
   if ($1_1) {
    $1602($0_1, $1_1, Math_imul($1944($7_1, 7044), 84));
    $1_1 = $1944($7_1, 7052);
    label$529 : {
     if (!$1_1) {
      break label$529
     }
     $4_1 = $1944(0, 73568);
     if (!$4_1) {
      break label$529
     }
     $4_1 = $4_1 + 876 | 0;
     $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$1 = $1_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
   }
   $1973($7_1, 7048, $2_1);
   $1973($7_1, 7052, $0_1);
  }
  $1973($7_1, 7044, 0);
  $0_1 = $1944($7_1 + 7484 | 0, 0);
  label$530 : {
   if (($0_1 | 0) >= 0) {
    break label$530
   }
   $2_1 = $0_1 + (($0_1 | 0) / 2 | 0) | 0;
   $2_1 = ($2_1 | 0) > 0 ? $2_1 : 0;
   if (($0_1 | 0) >= ($2_1 | 0)) {
    break label$530
   }
   $0_1 = $1944(0, 73568);
   if ($0_1) {
    $0_1 = $0_1 + 876 | 0;
    $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
   }
   $0_1 = (((wasm2js_i32$2 = Math_imul($2_1, 36), wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0) | 0);
   $1_1 = $1944($7_1 + 7488 | 0, 0);
   if ($1_1) {
    $1602($0_1, $1_1, Math_imul($1944($7_1, 7480), 36));
    $1_1 = $1944($7_1, 7488);
    label$533 : {
     if (!$1_1) {
      break label$533
     }
     $4_1 = $1944(0, 73568);
     if (!$4_1) {
      break label$533
     }
     $4_1 = $4_1 + 876 | 0;
     $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$1 = $1_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
   }
   $1973($7_1, 7484, $2_1);
   $1973($7_1, 7488, $0_1);
  }
  $1973($7_1, 7480, 0);
  $0_1 = $1944($7_1 + 7448 | 0, 0);
  label$534 : {
   if (($0_1 | 0) >= 0) {
    break label$534
   }
   $2_1 = $0_1 + (($0_1 | 0) / 2 | 0) | 0;
   $2_1 = ($2_1 | 0) > 0 ? $2_1 : 0;
   if (($0_1 | 0) >= ($2_1 | 0)) {
    break label$534
   }
   $0_1 = $1944(0, 73568);
   if ($0_1) {
    $0_1 = $0_1 + 876 | 0;
    $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
   }
   $0_1 = (((wasm2js_i32$2 = $2_1 << 2, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0) | 0);
   $1_1 = $1944($7_1 + 7452 | 0, 0);
   if ($1_1) {
    $1602($0_1, $1_1, $1944($7_1, 7444) << 2);
    $1_1 = $1944($7_1, 7452);
    label$537 : {
     if (!$1_1) {
      break label$537
     }
     $4_1 = $1944(0, 73568);
     if (!$4_1) {
      break label$537
     }
     $4_1 = $4_1 + 876 | 0;
     $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$1 = $1_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
   }
   $1973($7_1, 7448, $2_1);
   $1973($7_1, 7452, $0_1);
  }
  $1973($7_1, 7444, 0);
  if (!$1944($7_1, 7448)) {
   $0_1 = $1944(0, 73568);
   if ($0_1) {
    $0_1 = $0_1 + 876 | 0;
    $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
   }
   $0_1 = (((wasm2js_i32$2 = 32, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0) | 0);
   $2_1 = $1944($7_1 + 7452 | 0, 0);
   if ($2_1) {
    $1602($0_1, $2_1, $1944($7_1, 7444) << 2);
    $2_1 = $1944($7_1, 7452);
    label$541 : {
     if (!$2_1) {
      break label$541
     }
     $1_1 = $1944(0, 73568);
     if (!$1_1) {
      break label$541
     }
     $1_1 = $1_1 + 876 | 0;
     $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
   }
   $1973($7_1, 7448, 8);
   $1973($7_1, 7452, $0_1);
  }
  $1973($1944($7_1 + 7452 | 0, 0) + ($1944($7_1, 7444) << 2) | 0, 0, 0);
  $1973($7_1, 7444, $1944($7_1, 7444) + 1 | 0);
  $0_1 = $1944($7_1 + 7460 | 0, 0);
  label$542 : {
   if (($0_1 | 0) >= 0) {
    break label$542
   }
   $2_1 = $0_1 + (($0_1 | 0) / 2 | 0) | 0;
   $2_1 = ($2_1 | 0) > 0 ? $2_1 : 0;
   if (($0_1 | 0) >= ($2_1 | 0)) {
    break label$542
   }
   $0_1 = $1944(0, 73568);
   if ($0_1) {
    $0_1 = $0_1 + 876 | 0;
    $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
   }
   $0_1 = (((wasm2js_i32$2 = Math_imul($2_1, 48), wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0) | 0);
   $1_1 = $1944($7_1 + 7464 | 0, 0);
   if ($1_1) {
    $1602($0_1, $1_1, Math_imul($1944($7_1, 7456), 48));
    $1_1 = $1944($7_1, 7464);
    label$545 : {
     if (!$1_1) {
      break label$545
     }
     $4_1 = $1944(0, 73568);
     if (!$4_1) {
      break label$545
     }
     $4_1 = $4_1 + 876 | 0;
     $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$1 = $1_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
   }
   $1973($7_1, 7460, $2_1);
   $1973($7_1, 7464, $0_1);
  }
  $1973($7_1, 7456, 0);
  $0_1 = $1944(0, 73568);
  $1973($0_1, 12252, 0);
  if ($1937($0_1, 12248)) {
   $1973($0_1, 7872, 7);
   $1_1 = $1944($0_1, 7120);
   $2_1 = $1944($0_1 + 108 | 0, 0);
   label$547 : {
    if (($2_1 | 0) < 0) {
     break label$547
    }
    $3 = $1963(($0_1 + ($2_1 << 2) | 0) + 1140 | 0, 0);
    $2_1 = $3 == Math_fround(0.0);
    label$548 : {
     if ($2_1) {
      break label$548
     }
     $5_1 = $1963($0_1 + 140 | 0, 0);
     if (!($5_1 < $3)) {
      break label$547
     }
     $6_1 = Math_fround($3 - $1963($0_1 + 24 | 0, 0));
     if ($6_1 >= $3) {
      break label$547
     }
     $11_1 = $1963($0_1 + 144 | 0, 0);
     if ($11_1 <= Math_fround(0.0)) {
      $2_1 = $5_1 > $6_1 & $3 >= $5_1;
      break label$548;
     }
     if ($5_1 > $6_1) {
      $2_1 = -1
     } else {
      $6_1 = Math_fround(Math_fround($6_1 - $5_1) / $11_1);
      label$551 : {
       if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
        $2_1 = ~~$6_1;
        break label$551;
       }
       $2_1 = -2147483648;
      }
     }
     if ($3 < $5_1) {
      $4_1 = -1
     } else {
      $3 = Math_fround(Math_fround($3 - $5_1) / $11_1);
      label$554 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $4_1 = ~~$3;
        break label$554;
       }
       $4_1 = -2147483648;
      }
     }
     $2_1 = ($4_1 | 0) > ($2_1 | 0);
    }
    if (!$2_1) {
     break label$547
    }
    $1968($0_1, 12248, 0);
   }
   if (!(!$1_1 | $1963($0_1 + 1040 | 0, 0) != Math_fround(0.0))) {
    $1968($0_1, 12248, 0);
    $1973($0_1, 12252, $1_1);
   }
   $1973($0_1 + 7384 | 0, 0, 1058642330);
   $1973($0_1, 7300, $1944($0_1, 7300) | 64);
   $141(0);
   $1973($21_1, 0, $1_1);
   $557(14473, $21_1);
   $557(17139, 0);
   $559(($1944(0, 73568) + (!$1_1 << 4) | 0) + 5616 | 0, 18936, 0);
   $142();
  }
  $0_1 = $1944(0, 73568);
  $1973($0_1, 7112, 0);
  label$557 : {
   if (($1944($0_1, 6984) | 0) != ($1944($0_1, 12272) + 1 | 0)) {
    break label$557
   }
   $2_1 = $1944($0_1, 7120);
   if (!$2_1) {
    $2_1 = $1944($0_1, 7136)
   }
   if (($1944($0_1 + 12280 | 0, 0) | 0) != ($2_1 | 0)) {
    $1973($0_1, 12280, $2_1);
    $1973($0_1 + 12276 | 0, 0, -1);
    $1_1 = $1944($0_1 + 12288 | 0, 0);
    label$560 : {
     if (($1_1 | 0) >= 0) {
      break label$560
     }
     $4_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0;
     $4_1 = ($4_1 | 0) > 0 ? $4_1 : 0;
     if (($1_1 | 0) >= ($4_1 | 0)) {
      break label$560
     }
     if ($0_1) {
      $1_1 = $0_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
     }
     $1_1 = (((wasm2js_i32$2 = $4_1 << 6, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0) | 0);
     $8 = $1944($0_1 + 12292 | 0, 0);
     if ($8) {
      $1602($1_1, $8, $1944($0_1, 12284) << 6);
      $8 = $1944($0_1, 12292);
      label$563 : {
       if (!$8) {
        break label$563
       }
       $12_1 = $1944(0, 73568);
       if (!$12_1) {
        break label$563
       }
       $12_1 = $12_1 + 876 | 0;
       $1973($12_1, 0, $1944($12_1, 0) - 1 | 0);
      }
      ((wasm2js_i32$1 = $8, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     }
     $1973($0_1, 12288, $4_1);
     $1973($0_1, 12292, $1_1);
    }
    $1973($0_1, 12284, 0);
   }
   if (!$2_1) {
    break label$557
   }
   $1_1 = $1944($0_1 + 12276 | 0, 0);
   label$564 : {
    if (($1_1 | 0) < 0) {
     break label$564
    }
    if (($1944($0_1 + 12284 | 0, 0) | 0) <= ($1_1 | 0)) {
     break label$564
    }
    $4_1 = $1944($0_1 + 12292 | 0, 0) + ($1_1 << 6) | 0;
    if (!$1937($4_1, 5)) {
     if (($1936($4_1, 4) | 0) < 3) {
      break label$564
     }
    }
    $1973($0_1, 12276, $1_1 + 1 | 0);
   }
   $1_1 = $1944($0_1, 12276);
   if (($1_1 | 0) == -1) {
    $1973($0_1, 7112, $2_1)
   }
   if (($1_1 | 0) < 0) {
    break label$557
   }
   if (($1944($0_1 + 12284 | 0, 0) | 0) <= ($1_1 | 0)) {
    break label$557
   }
   $2_1 = $0_1;
   $0_1 = $1944($0_1 + 12292 | 0, 0) + ($1_1 << 6) | 0;
   $1973($2_1, 7112, $1944($0_1, 0));
   $1968($0_1, 4, $1937($0_1, 4) + 1 | 0);
  }
  $1968($7_1, 6997, 1);
  $0_1 = $1944(0, 73568);
  $1982($0_1 + 7332 | 0, 0, 1137180672, 1137180672);
  $1973($0_1 + 7308 | 0, 0, 4);
  $1973($0_1, 7300, $1944($0_1, 7300) | 2);
  $143(3172, 0, 0);
  if (($1944($7_1, 12180) | 0) > 0) {
   $0_1 = 0;
   while (1) {
    $2_1 = $1944($7_1, 12188) + Math_imul($0_1, 20) | 0;
    if (($1944($2_1, 4) | 0) == 1) {
     FUNCTION_TABLE[$1944($2_1, 12) | 0]($7_1, $2_1)
    }
    $0_1 = $0_1 + 1 | 0;
    if (($1944($7_1, 12180) | 0) > ($0_1 | 0)) {
     continue
    }
    break;
   };
  }
  global$0 = $21_1 + 16 | 0;
 }
 
 function $137($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $4_1 = $1944(0, 73568);
  $3 = $1_1;
  if (!$1_1) {
   $3 = $1697($0_1)
  }
  $6_1 = $3 + 1 | 0;
  $10_1 = $3;
  $1_1 = $1944($4_1 + 12136 | 0, 0);
  label$2 : {
   if (($3 | 0) < ($1_1 | 0)) {
    break label$2
   }
   if ($1_1) {
    $2_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0
   } else {
    $2_1 = 8
   }
   $5_1 = ($2_1 | 0) > ($6_1 | 0) ? $2_1 : $6_1;
   if (($5_1 | 0) <= ($1_1 | 0)) {
    break label$2
   }
   if ($4_1) {
    $1_1 = $4_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
   }
   $3 = (((wasm2js_i32$1 = $5_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $1_1 = $1944($4_1 + 12140 | 0, 0);
   if ($1_1) {
    $1602($3, $1_1, $1944($4_1, 12132));
    $2_1 = $1944($4_1, 12140);
    label$7 : {
     if (!$2_1) {
      break label$7
     }
     $1_1 = $1944(0, 73568);
     if (!$1_1) {
      break label$7
     }
     $1_1 = $1_1 + 876 | 0;
     $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($4_1, 12136, $5_1);
   $1973($4_1, 12140, $3);
  }
  $1973($4_1, 12132, $6_1);
  $11_1 = $1602($1944($4_1 + 12140 | 0, 0), $0_1, $10_1);
  $8 = $11_1 + $10_1 | 0;
  $1968($8, 0, 0);
  if (($1944($4_1, 12144) | 0) > 0) {
   $1_1 = 0;
   while (1) {
    $3 = $1944($4_1, 12152) + Math_imul($1_1, 36) | 0;
    $2_1 = $1944($3, 12);
    if ($2_1) {
     FUNCTION_TABLE[$2_1 | 0]($4_1, $3)
    }
    $1_1 = $1_1 + 1 | 0;
    if (($1944($4_1, 12144) | 0) > ($1_1 | 0)) {
     continue
    }
    break;
   };
  }
  label$11 : {
   if (($10_1 | 0) <= 0) {
    break label$11
   }
   $3 = 0;
   $2_1 = $11_1;
   $1_1 = 0;
   label$12 : while (1) {
    $6_1 = $1_1;
    $5_1 = $3;
    $1_1 = $2_1;
    while (1) {
     label$14 : {
      switch ($1937($1_1, 0) - 10 | 0) {
      default:
       $2_1 = $1_1;
       label$16 : {
        if ($1_1 >>> 0 >= $8 >>> 0) {
         break label$16
        }
        $9 = $8;
        $3 = $1_1;
        while (1) {
         label$18 : {
          $2_1 = $3;
          switch ($1937($2_1, 0) - 10 | 0) {
          case 0:
          case 3:
           break label$16;
          default:
           break label$18;
          };
         }
         $3 = $3 + 1 | 0;
         if ($8 >>> 0 > $3 >>> 0) {
          continue
         }
         break;
        };
        $2_1 = $9;
       }
       $9 = $2_1;
       $1968($2_1, 0, 0);
       $2_1 = $1937($1_1, 0);
       label$19 : {
        label$20 : {
         if (($2_1 | 0) == 59) {
          break label$20
         }
         label$21 : {
          if (($2_1 | 0) != 91 | $1_1 >>> 0 >= $9 >>> 0) {
           break label$21
          }
          $3 = $9 - 1 | 0;
          if (($1937($3, 0) | 0) != 93) {
           break label$21
          }
          $1968($3, 0, 0);
          $12_1 = 0;
          $2_1 = $1_1 + 1 | 0;
          $7_1 = $1644($2_1, 93, $3 - $2_1 | 0);
          if ($7_1) {
           $1_1 = $7_1 + 1 | 0;
           $12_1 = $1644($1_1, 91, $3 - $1_1 | 0);
          }
          if (!$7_1) {
           break label$20
          }
          $1_1 = $6_1;
          if (!$12_1) {
           break label$19
          }
          $1968($7_1, 0, 0);
          $7_1 = $1944(0, 73568);
          $3 = $2_1;
          $2_1 = -1;
          while (1) {
           $1_1 = $3;
           $3 = $1_1 + 1 | 0;
           $5_1 = $1937($1_1, 0);
           if ($5_1) {
            label$26 : {
             if (($5_1 | 0) != 35) {
              break label$26
             }
             if (($1937($3, 0) | 0) != 35) {
              break label$26
             }
             $2_1 = ($1937($1_1, 2) | 0) == 35 ? -1 : $2_1;
            }
            $2_1 = $1944((($5_1 ^ $2_1 & 255) << 2) + 19360 | 0, 0) ^ $2_1 >>> 8;
           }
           if ($5_1) {
            continue
           }
           break;
          };
          $6_1 = $1944($7_1, 12144);
          $1_1 = 0;
          label$29 : {
           if (($6_1 | 0) <= 0) {
            break label$29
           }
           $5_1 = $2_1 ^ -1;
           $3 = $1944($7_1 + 12152 | 0, 0);
           $1_1 = 0;
           label$30 : {
            while (1) {
             $2_1 = $3 + Math_imul($1_1, 36) | 0;
             if (($1944($2_1, 4) | 0) == ($5_1 | 0)) {
              break label$30
             }
             $1_1 = $1_1 + 1 | 0;
             if (($1_1 | 0) != ($6_1 | 0)) {
              continue
             }
             break;
            };
            $1_1 = 0;
            break label$29;
           }
           $1_1 = $2_1;
          }
          $5_1 = 0;
          if (!$1_1) {
           break label$19
          }
          $5_1 = FUNCTION_TABLE[$1944($1_1, 16) | 0]($4_1, $1_1, $12_1 + 1 | 0) | 0;
          break label$19;
         }
         if (!$6_1 | !$5_1) {
          break label$20
         }
         FUNCTION_TABLE[$1944($6_1, 20) | 0]($4_1, $6_1, $5_1, $1_1);
        }
        $1_1 = $6_1;
       }
       $3 = $5_1;
       $2_1 = $9 + 1 | 0;
       if ($8 >>> 0 > $2_1 >>> 0) {
        continue label$12
       }
       break label$11;
      case 0:
      case 3:
       break label$14;
      };
     }
     $1_1 = $1_1 + 1 | 0;
     continue;
    };
   };
  }
  $1968($4_1, 12125, 1);
  $1602($11_1, $0_1, $10_1);
  if (($1944($4_1, 12144) | 0) > 0) {
   $1_1 = 0;
   while (1) {
    $2_1 = $1944($4_1, 12152) + Math_imul($1_1, 36) | 0;
    $0_1 = $1944($2_1, 24);
    if ($0_1) {
     FUNCTION_TABLE[$0_1 | 0]($4_1, $2_1)
    }
    $0_1 = $1_1 + 1 | 0;
    $1_1 = $0_1;
    if (($1944($4_1, 12144) | 0) > ($1_1 | 0)) {
     continue
    }
    break;
   };
  }
 }
 
 function $139($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $3 = $1944(0, 73568);
  $1_1 = $1944($3, 7844);
  if (!($1937($1_1 + 11 | 0, 0) & 8)) {
   $5_1 = $1939($1_1, 156);
   $2_1 = $5_1 + $0_1 | 0;
   label$2 : {
    label$3 : {
     if (($2_1 | 0) < 0) {
      break label$3
     }
     $4_1 = $1944($3, 7020);
     while (1) {
      if (($2_1 | 0) >= ($4_1 | 0)) {
       break label$3
      }
      $1_1 = $1944($1944($3, 7028) + ($2_1 << 2) | 0, 0);
      label$5 : {
       if (!$1937($1_1, 139)) {
        break label$5
       }
       if (($1944($1_1, 736) | 0) != ($1_1 | 0)) {
        break label$5
       }
       if (!($1937($1_1 + 10 | 0, 0) & 8)) {
        break label$2
       }
      }
      $2_1 = $0_1 + $2_1 | 0;
      if (($2_1 | 0) >= 0) {
       continue
      }
      break;
     };
    }
    $1_1 = 0;
   }
   label$6 : {
    if ($1_1) {
     break label$6
    }
    $2_1 = 0;
    if (($0_1 | 0) < 0) {
     $2_1 = $1944($3, 7020) - 1 | 0
    }
    label$8 : {
     if (($2_1 | 0) < 0) {
      break label$8
     }
     $4_1 = $1944($3, 7020);
     while (1) {
      if (($2_1 | 0) == ($5_1 | 0) | ($2_1 | 0) >= ($4_1 | 0)) {
       break label$8
      }
      $1_1 = $1944($1944($3, 7028) + ($2_1 << 2) | 0, 0);
      label$10 : {
       if (!$1937($1_1, 139)) {
        break label$10
       }
       if (($1944($1_1, 736) | 0) != ($1_1 | 0)) {
        break label$10
       }
       if (!($1937($1_1 + 10 | 0, 0) & 8)) {
        break label$6
       }
      }
      $2_1 = $0_1 + $2_1 | 0;
      if (($2_1 | 0) >= 0) {
       continue
      }
      break;
     };
    }
    $1_1 = 0;
   }
   if ($1_1) {
    $1973($3, 7844, $1_1);
    $1973($3, 7848, $1_1);
   }
   $1968($3, 7864, 0);
  }
 }
 
 function $140($0_1) {
  var $1_1 = Math_fround(0), $2_1 = 0, $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0);
  $9 = global$0 - 16 | 0;
  global$0 = $9;
  label$1 : {
   label$2 : {
    $5_1 = $1944(0, 73568);
    label$3 : {
     if ($1937($5_1, 7570)) {
      break label$3
     }
     if (!$1937($5_1, 7571)) {
      break label$3
     }
     $2_1 = $1944($5_1, 7508);
     if ($2_1) {
      break label$2
     }
    }
    label$4 : {
     if (!($1963($5_1 + 228 | 0, 0) >= Math_fround(-256.0e3))) {
      break label$4
     }
     if (!($1963($5_1 + 232 | 0, 0) >= Math_fround(-256.0e3))) {
      break label$4
     }
     $1982($0_1, 0, $1959($5_1, 228), i64toi32_i32$HIGH_BITS);
     break label$1;
    }
    $1982($0_1, 0, $1959($5_1, 8172), i64toi32_i32$HIGH_BITS);
    break label$1;
   }
   $8 = $1963($2_1 + 228 | 0, 0);
   $6_1 = $2_1 + ($1944($5_1, 7564) << 4) | 0;
   $1_1 = Math_fround($8 + $1963($6_1 + 776 | 0, 0));
   $3 = $1963($2_1 + 224 | 0, 0);
   $4_1 = Math_fround($3 + $1963($6_1 + 772 | 0, 0));
   $7_1 = Math_fround($8 + $1963($6_1 + 768 | 0, 0));
   $8 = Math_fround($3 + $1963($6_1 + 764 | 0, 0));
   label$5 : {
    if (($1944($2_1, 536) | 0) == ($1944($5_1, 6984) | 0)) {
     break label$5
    }
    if ($1963($2_1, 104) == Math_fround(3402823466385288598117041.0e14)) {
     if ($1963($2_1 + 108 | 0, 0) == Math_fround(3402823466385288598117041.0e14)) {
      break label$5
     }
    }
    $155($9 + 8 | 0, $2_1);
    $3 = Math_fround($1963($2_1, 88) - $1963($9, 8));
    $8 = Math_fround($8 + $3);
    $10_1 = Math_fround($1963($2_1 + 92 | 0, 0) - $1963($9, 12));
    $7_1 = Math_fround($7_1 + $10_1);
    $4_1 = Math_fround($4_1 + $3);
    $1_1 = Math_fround($1_1 + $10_1);
   }
   $2_1 = $1944($1944($5_1 + 7504 | 0, 0), 0);
   $3 = $1963($2_1 + 8 | 0, 0);
   $10_1 = Math_fround($3 + $1963($2_1 + 16 | 0, 0));
   $12_1 = $1_1;
   $11_1 = $1963($5_1 + 5480 | 0, 0);
   $1_1 = Math_fround($1_1 - $7_1);
   $1_1 = Math_fround($12_1 - ($1_1 > $11_1 ? $11_1 : $1_1));
   $1_1 = $1_1 < $3 ? $3 : $1_1 > $10_1 ? $10_1 : $1_1;
   label$8 : {
    if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
     $6_1 = ~~$1_1;
     break label$8;
    }
    $6_1 = -2147483648;
   }
   $7_1 = $1963($5_1 + 5476 | 0, 0);
   $3 = $1963($2_1, 12);
   $1_1 = $1963($2_1, 4);
   $1986($0_1, 4, Math_fround($6_1 | 0));
   $3 = Math_fround($1_1 + $3);
   $7_1 = Math_fround($7_1 * Math_fround(4.0));
   $4_1 = Math_fround($4_1 - $8);
   $4_1 = Math_fround($8 + ($4_1 > $7_1 ? $7_1 : $4_1));
   $4_1 = $1_1 > $4_1 ? $1_1 : $3 < $4_1 ? $3 : $4_1;
   label$10 : {
    if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
     $6_1 = ~~$4_1;
     break label$10;
    }
    $6_1 = -2147483648;
   }
   $1986($0_1, 0, Math_fround($6_1 | 0));
  }
  global$0 = $9 + 16 | 0;
 }
 
 function $141($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = 0, $9 = 0, $10_1 = 0;
  $3 = global$0 - 48 | 0;
  global$0 = $3;
  $1_1 = $1944(0, 73568);
  label$1 : {
   if (!$1937($1_1, 7877)) {
    if (!$1937($1_1, 7878)) {
     break label$1
    }
   }
   $1982($1_1 + 7324 | 0, 0, 0, 0);
   $1973($1_1 + 7304 | 0, 0, 1);
   $1973($1_1, 7300, $1944($1_1, 7300) | 65);
   $1986($1_1 + 7384 | 0, 0, Math_fround($1963($1_1 + 5692 | 0, 0) * Math_fround(.6000000238418579)));
   $7_1 = $1963($1_1 + 5600 | 0, 0);
   $1986($1_1 + 7320 | 0, 0, Math_fround(Math_fround($7_1 * Math_fround(8.0)) + $1963($1_1 + 232 | 0, 0)));
   $1986($1_1 + 7316 | 0, 0, Math_fround($1963($1_1 + 228 | 0, 0) + Math_fround($7_1 * Math_fround(16.0))));
   $0_1 = 1;
  }
  $1973($3, 16, $1939($1_1, 12078));
  $21($3 + 32 | 0, 16, 12868, $3 + 16 | 0);
  label$3 : {
   if (!($0_1 & 1)) {
    break label$3
   }
   $2_1 = $3 + 32 | 0;
   $0_1 = -1;
   while (1) {
    $5_1 = $2_1;
    $2_1 = $2_1 + 1 | 0;
    $4_1 = $1937($5_1, 0);
    if ($4_1) {
     label$7 : {
      if (($4_1 | 0) != 35) {
       break label$7
      }
      if (($1937($2_1, 0) | 0) != 35) {
       break label$7
      }
      $0_1 = ($1937($5_1, 2) | 0) == 35 ? -1 : $0_1;
     }
     $0_1 = $1944((($4_1 ^ $0_1 & 255) << 2) + 19360 | 0, 0) ^ $0_1 >>> 8;
    }
    if ($4_1) {
     continue
    }
    break;
   };
   $4_1 = $0_1 ^ -1;
   $0_1 = $1944(0, 73568);
   $8 = $1944($0_1 + 7064 | 0, 0);
   $2_1 = $8;
   $5_1 = $1944($0_1, 7056);
   if ($5_1) {
    $0_1 = $5_1;
    while (1) {
     $6_1 = $0_1 >>> 1 | 0;
     $9 = ($6_1 << 3) + $2_1 | 0;
     $10_1 = $1944($9, 0) >>> 0 < $4_1 >>> 0;
     $2_1 = $10_1 ? $9 + 8 | 0 : $2_1;
     $0_1 = $10_1 ? $0_1 + ($6_1 ^ -1) | 0 : $6_1;
     if ($0_1) {
      continue
     }
     break;
    };
   }
   $0_1 = 0;
   label$12 : {
    if (($2_1 | 0) == (($5_1 << 3) + $8 | 0)) {
     break label$12
    }
    $0_1 = 0;
    if (($1944($2_1, 0) | 0) != ($4_1 | 0)) {
     break label$12
    }
    $0_1 = $1944($2_1, 4);
   }
   if (!$0_1) {
    break label$3
   }
   if (!$1937($0_1, 138)) {
    break label$3
   }
   $1968($0_1, 172, 1);
   $1968($0_1, 145, 1);
   $0_1 = $1941($1_1, 12078) + 1 | 0;
   $1970($1_1, 12078, $0_1);
   $1973($3, 0, $0_1 << 16 >> 16);
   $21($3 + 32 | 0, 16, 12868, $3);
  }
  $143($3 + 32 | 0, 0, 34341703);
  global$0 = $3 + 48 | 0;
 }
 
 function $142() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0);
  $0_1 = $1944(0, 73568);
  $3 = $1944($0_1, 7080);
  label$1 : {
   if (($1944($0_1, 7044) | 0) <= 1) {
    if ($1937($0_1, 6997)) {
     break label$1
    }
   }
   if ($1944($3 + 368 | 0, 0)) {
    $553()
   }
   $1_1 = $1944($1944(0, 73568), 7080);
   $1968($1_1, 140, 1);
   $380($1944($1_1, 580));
   $2_1 = $1944($1_1, 580);
   $2_1 = (($1944($2_1, 60) << 4) + $1944($2_1 + 68 | 0, 0) | 0) - 16 | 0;
   $5_1 = $1959($2_1, 0);
   $4_1 = i64toi32_i32$HIGH_BITS;
   $1982($1_1 + 504 | 0, 0, $1959($2_1, 8), i64toi32_i32$HIGH_BITS);
   $1982($1_1, 496, $5_1, $4_1);
   if (!($1937($3 + 11 | 0, 0) & 1)) {
    $164()
   }
   $4_1 = $1944($0_1 + 7052 | 0, 0);
   $5_1 = $1944($0_1, 7044);
   $2_1 = $5_1 - 1 | 0;
   $1_1 = $4_1 + Math_imul($2_1, 84) | 0;
   $1982($0_1, 7240, $1959($1_1, 4), i64toi32_i32$HIGH_BITS);
   $1973($0_1 + 7296 | 0, 0, $1944($1_1 + 60 | 0, 0));
   $1982($0_1 + 7288 | 0, 0, $1959($1_1 + 52 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1982($0_1 + 7280 | 0, 0, $1959($1_1 + 44 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1982($0_1 + 7272 | 0, 0, $1959($1_1 + 36 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1982($0_1 + 7264 | 0, 0, $1959($1_1 + 28 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1982($0_1 + 7256 | 0, 0, $1959($1_1 + 20 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1982($0_1 + 7248 | 0, 0, $1959($1_1 + 12 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1_1 = $1944($3, 8);
   if ($1_1 & 268435456) {
    $1973($0_1, 7492, $1944($0_1, 7492) - 1 | 0)
   }
   if ($1_1 & 67108864) {
    $1973($0_1, 7480, $1944($0_1, 7480) - 1 | 0)
   }
   $1973($0_1, 7044, $2_1);
   $1_1 = 0;
   if ($2_1) {
    $1_1 = $1944(($1944($0_1, 7052) + Math_imul($5_1, 84) | 0) - 168 | 0, 0)
   }
   $0_1 = $1944(0, 73568);
   $1973($0_1, 7080, $1_1);
   if ($1_1) {
    $3 = $1944($1_1 + 372 | 0, 0);
    if (($3 | 0) == -1) {
     $4_1 = 0
    } else {
     $4_1 = $1944($0_1 + 8064 | 0, 0) + Math_imul($3, 456) | 0
    }
    $1973($0_1, 8036, $4_1);
    $6_1 = Math_fround($1963($0_1, 6472) * $1963($1_1, 572));
    $1_1 = $1944($1_1, 728);
    if ($1_1) {
     $6_1 = Math_fround($6_1 * $1963($1_1, 572))
    }
    $1986($0_1, 6468, $6_1);
    $1986($0_1 + 6488 | 0, 0, $6_1);
    return;
   }
   $1973($0_1, 8036, 0);
  }
 }
 
 function $143($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = 0, $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = 0, $16_1 = Math_fround(0), $17_1 = 0, $18_1 = Math_fround(0), $19 = Math_fround(0), $20_1 = 0, $21_1 = 0, $22_1 = Math_fround(0), $23_1 = 0, $24 = Math_fround(0), $25_1 = 0, $26_1 = 0, $27_1 = Math_fround(0), $28_1 = Math_fround(0), $29_1 = Math_fround(0), $30 = Math_fround(0), $31_1 = 0, $32_1 = Math_fround(0), $33_1 = 0, $34_1 = 0, $35_1 = 0, $36_1 = 0, $37 = 0, $38_1 = Math_fround(0), $39_1 = 0, $40_1 = 0, $41_1 = 0, $42_1 = 0, $43_1 = 0, $44_1 = 0.0, $45_1 = 0, $46_1 = 0, $47_1 = 0, $48_1 = 0, $49 = 0.0, $50_1 = Math_fround(0), $51_1 = Math_fround(0), $52_1 = 0, $53_1 = Math_fround(0), $54_1 = Math_fround(0), $55_1 = Math_fround(0), $56_1 = Math_fround(0), $57_1 = 0, $58_1 = 0, $59_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $9 = global$0 - 272 | 0;
  global$0 = $9;
  $15_1 = $1944(0, 73568);
  $4_1 = $0_1;
  $6_1 = -1;
  while (1) {
   $7_1 = $4_1;
   $4_1 = $4_1 + 1 | 0;
   $10_1 = $1937($7_1, 0);
   if ($10_1) {
    label$4 : {
     if (($10_1 | 0) != 35) {
      break label$4
     }
     if (($1937($4_1, 0) | 0) != 35) {
      break label$4
     }
     $6_1 = ($1937($7_1, 2) | 0) == 35 ? -1 : $6_1;
    }
    $6_1 = $1944((($10_1 ^ $6_1 & 255) << 2) + 19360 | 0, 0) ^ $6_1 >>> 8;
   }
   if ($10_1) {
    continue
   }
   break;
  };
  $12_1 = $6_1 ^ -1;
  $7_1 = $1944($15_1 + 7064 | 0, 0);
  $10_1 = $7_1;
  $3 = $1944($15_1, 7056);
  if ($3) {
   $4_1 = $7_1;
   $6_1 = $3;
   while (1) {
    $21_1 = $6_1 >>> 1 | 0;
    $10_1 = ($21_1 << 3) + $4_1 | 0;
    $20_1 = $1944($10_1, 0) >>> 0 < $12_1 >>> 0;
    $4_1 = $20_1 ? $10_1 + 8 | 0 : $4_1;
    $10_1 = $4_1;
    $6_1 = $20_1 ? $6_1 + ($21_1 ^ -1) | 0 : $21_1;
    if ($6_1) {
     continue
    }
    break;
   };
  }
  $4_1 = 0;
  label$9 : {
   if (($7_1 + ($3 << 3) | 0) == ($10_1 | 0)) {
    break label$9
   }
   $4_1 = 0;
   if (($1944($10_1, 0) | 0) != ($12_1 | 0)) {
    break label$9
   }
   $4_1 = $1944($10_1, 4);
  }
  $35_1 = $4_1;
  label$11 : {
   if (!$4_1) {
    if ($15_1) {
     $4_1 = $15_1 + 876 | 0;
     $1973($4_1, 0, $1944($4_1, 0) + 1 | 0);
    }
    $3 = $15_1 + 7056 | 0;
    $6_1 = (((wasm2js_i32$1 = 808, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $4_1 = $6_1;
    $1982($4_1, 12, 0, 0);
    $1973($4_1 + 360 | 0, 0, 0);
    $1982($4_1 + 352 | 0, 0, 0, 0);
    $1982($4_1 + 272 | 0, 0, 0, 0);
    $1982($4_1 + 280 | 0, 0, 0, 0);
    $1973($4_1 + 288 | 0, 0, 0);
    $1982($4_1 + 308 | 0, 0, 0, 0);
    $1982($4_1 + 316 | 0, 0, 0, 0);
    $1982($4_1 + 324 | 0, 0, 0, 0);
    $1982($4_1 + 332 | 0, 0, 0, 0);
    $1973($4_1 + 340 | 0, 0, 0);
    $1982($4_1 + 764 | 0, 0, 0, 0);
    $1982($4_1 + 772 | 0, 0, 0, 0);
    $1982($4_1 + 780 | 0, 0, 0, 0);
    $1982($4_1 + 788 | 0, 0, 0, 0);
    $1982($4_1 + 20 | 0, 0, 0, 0);
    $1982($4_1 + 28 | 0, 0, 0, 0);
    $1982($4_1 + 36 | 0, 0, 0, 0);
    $1982($4_1 + 44 | 0, 0, 0, 0);
    $1982($4_1 + 52 | 0, 0, 0, 0);
    $1982($4_1 + 60 | 0, 0, 0, 0);
    $1982($4_1 + 128 | 0, 0, 0, 0);
    $1982($4_1 + 120 | 0, 0, 0, 0);
    $1982($4_1 + 112 | 0, 0, 0, 0);
    $1982($4_1 + 104 | 0, 0, 0, 0);
    $1982($4_1 + 96 | 0, 0, 0, 0);
    $1982($4_1, 88, 0, 0);
    $1604($4_1 + 180 | 0, 0, 84);
    $1604($4_1 + 392 | 0, 0, 144);
    $1982($4_1 + 564 | 0, 0, 0, 0);
    $1982($4_1 + 556 | 0, 0, 0, 0);
    $1982($4_1, 548, 0, 0);
    $20_1 = $1604($4_1 + 584 | 0, 0, 144);
    $10_1 = $1604($4_1, 0, 808);
    $4_1 = $0_1;
    $7_1 = $1697($4_1);
    $12_1 = $1944(0, 73568);
    if ($12_1) {
     $12_1 = $12_1 + 876 | 0;
     $1973($12_1, 0, $1944($12_1, 0) + 1 | 0);
    }
    $7_1 = $7_1 + 1 | 0;
    $1973($10_1, 0, $1602((((wasm2js_i32$2 = $7_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0) | 0), $4_1, $7_1));
    $1973($10_1, 76, $1697($4_1) + 1 | 0);
    $12_1 = -1;
    while (1) {
     $7_1 = $4_1;
     $4_1 = $4_1 + 1 | 0;
     $21_1 = $1937($7_1, 0);
     if ($21_1) {
      label$5 : {
       if (($21_1 | 0) != 35) {
        break label$5
       }
       if (($1937($4_1, 0) | 0) != 35) {
        break label$5
       }
       $12_1 = ($1937($7_1, 2) | 0) == 35 ? -1 : $12_1;
      }
      $12_1 = $1944((($21_1 ^ $12_1 & 255) << 2) + 19360 | 0, 0) ^ $12_1 >>> 8;
     }
     if ($21_1) {
      continue
     }
     break;
    };
    $1973($10_1, 4, $12_1 ^ -1);
    $7_1 = $1944($10_1, 196);
    $4_1 = $1944($10_1, 200);
    label$80 : {
     if (($7_1 | 0) != ($4_1 | 0)) {
      break label$80
     }
     $12_1 = $4_1 ? $4_1 + (($4_1 | 0) / 2 | 0) | 0 : 8;
     $7_1 = $7_1 + 1 | 0;
     $7_1 = ($7_1 | 0) < ($12_1 | 0) ? $12_1 : $7_1;
     if (($4_1 | 0) >= ($7_1 | 0)) {
      break label$80
     }
     $4_1 = $1944(0, 73568);
     if ($4_1) {
      $4_1 = $4_1 + 876 | 0;
      $1973($4_1, 0, $1944($4_1, 0) + 1 | 0);
     }
     $4_1 = (((wasm2js_i32$1 = $7_1 << 2, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
     $12_1 = $1944($10_1, 204);
     if ($12_1) {
      $1602($4_1, $12_1, $1944($10_1, 196) << 2);
      $12_1 = $1944($10_1, 204);
      label$13 : {
       if (!$12_1) {
        break label$13
       }
       $21_1 = $1944(0, 73568);
       if (!$21_1) {
        break label$13
       }
       $21_1 = $21_1 + 876 | 0;
       $1973($21_1, 0, $1944($21_1, 0) - 1 | 0);
      }
      ((wasm2js_i32$2 = $12_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     }
     $1973($10_1, 200, $7_1);
     $1973($10_1, 204, $4_1);
    }
    $7_1 = $10_1 + 204 | 0;
    $1973($1944($7_1, 0) + ($1944($10_1, 196) << 2) | 0, 0, $1944($10_1, 4));
    $12_1 = $1944($10_1, 196);
    $1973($10_1, 196, $12_1 + 1 | 0);
    $4_1 = 14982;
    $17_1 = $1944($1944($7_1, 0) + ($12_1 << 2) | 0, 0) ^ -1;
    $12_1 = $17_1;
    while (1) {
     $7_1 = $4_1;
     $4_1 = $4_1 + 1 | 0;
     $21_1 = $1937($7_1, 0);
     if ($21_1) {
      label$17 : {
       if (($21_1 | 0) != 35) {
        break label$17
       }
       if (($1937($4_1, 0) | 0) != 35) {
        break label$17
       }
       $12_1 = ($1937($7_1, 2) | 0) == 35 ? $17_1 : $12_1;
      }
      $12_1 = $1944((($21_1 ^ $12_1 & 255) << 2) + 19360 | 0, 0) ^ $12_1 >>> 8;
     }
     if (($7_1 | 0) != 14987) {
      continue
     }
     break;
    };
    $7_1 = $1944(0, 73568);
    $4_1 = $12_1 ^ -1;
    if (($1944($7_1, 7136) | 0) == ($4_1 | 0)) {
     $1973($7_1, 7140, $4_1)
    }
    if (($1944($7_1, 7196) | 0) == ($4_1 | 0)) {
     $1968($7_1, 7200, 1)
    }
    if (($1944($7_1, 7112) | 0) == ($4_1 | 0)) {
     $75($4_1, 11, 14982)
    }
    $1982($10_1, 112, 1056964608, 1056964608);
    $1982($10_1, 104, 2139095039, 2139095039);
    $1973($10_1, 80, $4_1);
    $1973($10_1, 168, -1);
    $1970($10_1, 164, 65535);
    $1982($10_1, 188, 2139095039, 2139095039);
    $1973($10_1, 580, $20_1);
    $1982($10_1, 572, 1065353216, -1);
    $1982($10_1, 536, -1, -1082130432);
    $1982($10_1, 180, 2139095039, 2139095039);
    $1973($10_1 + 628 | 0, 0, $15_1 + 6476 | 0);
    $1973($10_1 + 632 | 0, 0, $1944($10_1, 0));
    $1973($10_1, 176, $1937($10_1 + 179 | 0, 0) << 24 | 986895);
    $1973($9, 144, $6_1);
    $1973($6_1, 8, $2_1);
    $12_1 = $1944($6_1, 4);
    $10_1 = $6_1;
    $4_1 = $3;
    $21_1 = $1944($3, 8);
    $3 = $21_1;
    $6_1 = $1944($4_1, 0);
    if ($6_1) {
     $7_1 = $6_1;
     while (1) {
      $20_1 = $7_1 >>> 1 | 0;
      $23_1 = ($20_1 << 3) + $3 | 0;
      $17_1 = $1944($23_1, 0) >>> 0 < $12_1 >>> 0;
      $3 = $17_1 ? $23_1 + 8 | 0 : $3;
      $7_1 = $17_1 ? $7_1 + ($20_1 ^ -1) | 0 : $20_1;
      if ($7_1) {
       continue
      }
      break;
     };
    }
    __inlined_func$37 : {
     label$3 : {
      if (($3 | 0) != (($6_1 << 3) + $21_1 | 0)) {
       if (($1944($3, 0) | 0) == ($12_1 | 0)) {
        break label$3
       }
      }
      $7_1 = $3 - $21_1 >> 3;
      $3 = $1944($4_1, 4);
      label$51 : {
       if (($3 | 0) != ($6_1 | 0)) {
        break label$51
       }
       $17_1 = $3;
       $3 = $3 ? $3 + (($3 | 0) / 2 | 0) | 0 : 8;
       $6_1 = $6_1 + 1 | 0;
       $6_1 = ($3 | 0) > ($6_1 | 0) ? $3 : $6_1;
       if (($17_1 | 0) >= ($6_1 | 0)) {
        break label$51
       }
       $3 = $1944(0, 73568);
       if ($3) {
        $3 = $3 + 876 | 0;
        $1973($3, 0, $1944($3, 0) + 1 | 0);
       }
       $3 = (((wasm2js_i32$1 = $6_1 << 3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
       $21_1 = $1944($4_1, 8);
       if ($21_1) {
        $1602($3, $21_1, $1944($4_1, 0) << 3);
        $21_1 = $1944($4_1, 8);
        label$10 : {
         if (!$21_1) {
          break label$10
         }
         $20_1 = $1944(0, 73568);
         if (!$20_1) {
          break label$10
         }
         $20_1 = $20_1 + 876 | 0;
         $1973($20_1, 0, $1944($20_1, 0) - 1 | 0);
        }
        ((wasm2js_i32$2 = $21_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
       }
       $1973($4_1, 4, $6_1);
       $1973($4_1, 8, $3);
      }
      $6_1 = $1944($4_1, 0);
      if (($7_1 | 0) < ($6_1 | 0)) {
       $3 = $1944($4_1, 8) + ($7_1 << 3) | 0;
       $1603($3 + 8 | 0, $3, $6_1 - $7_1 << 3);
      }
      $6_1 = $1944($4_1, 8) + ($7_1 << 3) | 0;
      $1973($6_1, 4, $10_1);
      $1973($6_1, 0, $12_1);
      $1973($4_1, 0, $1944($4_1, 0) + 1 | 0);
      break __inlined_func$37;
     }
     $1973($3, 4, $10_1);
    }
    $10_1 = $1944(0, 73568);
    $6_1 = $1944($1944($10_1 + 7504 | 0, 0), 0);
    $5_1 = $1963($6_1 + 8 | 0, 0);
    $4_1 = $1944($9, 144);
    $1986($4_1, 12, Math_fround($1963($6_1, 4) + Math_fround(60.0)));
    $1986($4_1 + 16 | 0, 0, Math_fround($5_1 + Math_fround(60.0)));
    label$141 : {
     if ($2_1 & 256) {
      break label$141
     }
     $7_1 = $1944($10_1 + 12164 | 0, 0);
     $12_1 = $7_1 + 4 | 0;
     $6_1 = $7_1 ? $12_1 : 0;
     label$15 : {
      if (!$7_1) {
       $7_1 = $6_1;
       break label$15;
      }
      $21_1 = $1944($4_1, 4);
      while (1) {
       if (($1944($6_1, 0) | 0) == ($21_1 | 0)) {
        $7_1 = $6_1;
        break label$15;
       }
       $3 = $1944($6_1 - 4 | 0, 0) + $6_1 | 0;
       $20_1 = $1944($10_1, 12156) + $12_1 | 0;
       $6_1 = ($20_1 | 0) != ($3 | 0) ? $3 : 0;
       $7_1 = $6_1;
       if (($3 | 0) != ($20_1 | 0)) {
        continue
       }
       break;
      };
     }
     if (!$7_1) {
      break label$141
     }
     $6_1 = $1944($15_1 + 12164 | 0, 0);
     $1973($4_1, 176, $1944($4_1, 176) & -263173);
     $1973($4_1, 576, $7_1 - $6_1 | 0);
     $6_1 = $1939($7_1, 4);
     $1986($4_1, 16, Math_fround($1939($7_1 + 6 | 0, 0) | 0));
     $1986($4_1, 12, Math_fround($6_1 | 0));
     $6_1 = $1939($7_1, 8);
     label$19 : {
      if (($6_1 | 0) <= 0) {
       break label$19
      }
      $3 = $1939($7_1 + 10 | 0, 0);
      if (($3 | 0) <= 0) {
       break label$19
      }
      $5_1 = Math_fround($3 | 0);
      $1986($4_1 + 32 | 0, 0, $5_1);
      $8 = Math_fround($6_1 | 0);
      $1986($4_1, 28, $8);
      $1986($4_1 + 24 | 0, 0, $5_1);
      $1986($4_1, 20, $8);
     }
     $1968($4_1, 141, $1937($7_1, 12));
    }
    $6_1 = $1959($4_1, 12);
    $7_1 = i64toi32_i32$HIGH_BITS;
    $1982($4_1 + 232 | 0, 0, $6_1, $7_1);
    $1982($4_1 + 224 | 0, 0, $6_1, $7_1);
    label$202 : {
     if ($2_1 & 64) {
      $1968($4_1, 167, 0);
      $1970($4_1, 164, 514);
      break label$202;
     }
     if ($1963($4_1, 20) <= Math_fround(0.0)) {
      $1968($4_1, 164, 2)
     }
     if ($1963($4_1 + 24 | 0, 0) <= Math_fround(0.0)) {
      $1968($4_1, 165, 2)
     }
     if (($1936($4_1, 164) | 0) <= 0) {
      $6_1 = ($1936($4_1, 165) | 0) > 0
     } else {
      $6_1 = 1
     }
     $1968($4_1, 167, $6_1);
    }
    label$25 : {
     if ($2_1 & 8192) {
      $10_1 = $9 + 144 | 0;
      $4_1 = $15_1 + 7008 | 0;
      $6_1 = $1944($4_1, 0);
      label$12 : {
       if (!$6_1) {
        $7_1 = $1944($4_1, 4);
        label$33 : {
         if (($7_1 | 0) != ($6_1 | 0)) {
          break label$33
         }
         $3 = $7_1;
         $7_1 = $7_1 ? $7_1 + (($7_1 | 0) / 2 | 0) | 0 : 8;
         $6_1 = $6_1 + 1 | 0;
         $6_1 = ($6_1 | 0) < ($7_1 | 0) ? $7_1 : $6_1;
         if (($3 | 0) >= ($6_1 | 0)) {
          break label$33
         }
         $7_1 = $1944(0, 73568);
         if ($7_1) {
          $7_1 = $7_1 + 876 | 0;
          $1973($7_1, 0, $1944($7_1, 0) + 1 | 0);
         }
         $7_1 = (((wasm2js_i32$1 = $6_1 << 2, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
         $3 = $1944($4_1, 8);
         if ($3) {
          $1602($7_1, $3, $1944($4_1, 0) << 2);
          $3 = $1944($4_1, 8);
          label$84 : {
           if (!$3) {
            break label$84
           }
           $12_1 = $1944(0, 73568);
           if (!$12_1) {
            break label$84
           }
           $12_1 = $12_1 + 876 | 0;
           $1973($12_1, 0, $1944($12_1, 0) - 1 | 0);
          }
          ((wasm2js_i32$2 = $3, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
         }
         $1973($4_1, 4, $6_1);
         $1973($4_1, 8, $7_1);
        }
        $6_1 = $1944($4_1, 8) + ($1944($4_1, 0) << 2) | 0;
        break label$12;
       }
       $7_1 = $1944($4_1, 4);
       label$95 : {
        if (($7_1 | 0) != ($6_1 | 0)) {
         break label$95
        }
        $3 = $7_1;
        $7_1 = $7_1 ? $7_1 + (($7_1 | 0) / 2 | 0) | 0 : 8;
        $6_1 = $6_1 + 1 | 0;
        $6_1 = ($6_1 | 0) < ($7_1 | 0) ? $7_1 : $6_1;
        if (($3 | 0) >= ($6_1 | 0)) {
         break label$95
        }
        $7_1 = $1944(0, 73568);
        if ($7_1) {
         $7_1 = $7_1 + 876 | 0;
         $1973($7_1, 0, $1944($7_1, 0) + 1 | 0);
        }
        $7_1 = (((wasm2js_i32$1 = $6_1 << 2, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
        $3 = $1944($4_1, 8);
        if ($3) {
         $1602($7_1, $3, $1944($4_1, 0) << 2);
         $3 = $1944($4_1, 8);
         label$146 : {
          if (!$3) {
           break label$146
          }
          $12_1 = $1944(0, 73568);
          if (!$12_1) {
           break label$146
          }
          $12_1 = $12_1 + 876 | 0;
          $1973($12_1, 0, $1944($12_1, 0) - 1 | 0);
         }
         ((wasm2js_i32$2 = $3, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
        }
        $1973($4_1, 4, $6_1);
        $1973($4_1, 8, $7_1);
       }
       $6_1 = $1944($4_1, 0);
       if (($6_1 | 0) > 0) {
        $7_1 = $1944($4_1, 8);
        $1603($7_1 + 4 | 0, $7_1, $6_1 << 2);
       }
       $6_1 = $1944($4_1, 8);
      }
      $1973($6_1, 0, $1944($10_1, 0));
      $1973($4_1, 0, $1944($4_1, 0) + 1 | 0);
      break label$25;
     }
     $6_1 = $1944($15_1, 7008);
     $4_1 = $1944($15_1 + 7012 | 0, 0);
     label$27 : {
      if (($6_1 | 0) != ($4_1 | 0)) {
       break label$27
      }
      $7_1 = $4_1;
      $4_1 = $4_1 ? $4_1 + (($4_1 | 0) / 2 | 0) | 0 : 8;
      $6_1 = $6_1 + 1 | 0;
      $4_1 = ($4_1 | 0) > ($6_1 | 0) ? $4_1 : $6_1;
      if (($7_1 | 0) >= ($4_1 | 0)) {
       break label$27
      }
      if ($10_1) {
       $6_1 = $10_1 + 876 | 0;
       $1973($6_1, 0, $1944($6_1, 0) + 1 | 0);
      }
      $6_1 = (((wasm2js_i32$1 = $4_1 << 2, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
      $7_1 = $1944($15_1 + 7016 | 0, 0);
      if ($7_1) {
       $1602($6_1, $7_1, $1944($15_1, 7008) << 2);
       $7_1 = $1944($15_1, 7016);
       label$32 : {
        if (!$7_1) {
         break label$32
        }
        $10_1 = $1944(0, 73568);
        if (!$10_1) {
         break label$32
        }
        $10_1 = $10_1 + 876 | 0;
        $1973($10_1, 0, $1944($10_1, 0) - 1 | 0);
       }
       ((wasm2js_i32$2 = $7_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      }
      $1973($15_1, 7012, $4_1);
      $1973($15_1, 7016, $6_1);
     }
     $1973($1944($15_1 + 7016 | 0, 0) + ($1944($15_1, 7008) << 2) | 0, 0, $1944($9, 144));
     $1973($15_1, 7008, $1944($15_1, 7008) + 1 | 0);
    }
    $4_1 = $1944($9, 144);
    $147($4_1, 1, $1944($4_1, 8));
    $3 = $1944($9, 144);
    break label$11;
   }
   $147($35_1, 0, $2_1);
   $3 = $35_1;
  }
  $4_1 = ($2_1 & 786944) == 786944 ? $2_1 | 6 : $2_1;
  $2_1 = $1944($15_1, 6984);
  $7_1 = 0;
  if (!$1944($15_1, 7044)) {
   $7_1 = ($1937($15_1, 6997) | 0) != 0
  }
  $6_1 = $1944($3, 536);
  $1968($3, 146, $7_1);
  $7_1 = $2_1 - 1 | 0;
  if ($4_1 & 67108864) {
   $17_1 = $1944($3, 160);
   $10_1 = $1944($15_1 + 7476 | 0, 0) + Math_imul($1944($15_1, 7480), 36) | 0;
   $7_1 = ($17_1 | 0) != ($1944($10_1, 0) | 0) | ($1944($10_1, 4) | 0) != ($3 | 0) | ($6_1 | 0) < ($7_1 | 0);
  } else {
   $7_1 = ($6_1 | 0) < ($7_1 | 0)
  }
  $43_1 = $7_1;
  $1968($3, 144, $7_1);
  if ($7_1) {
   $1973($3, 176, $1944($3, 176) | 526344)
  }
  $40_1 = ($2_1 | 0) == ($6_1 | 0);
  label$37 : {
   if (!$40_1) {
    $1973($3, 536, $2_1);
    $1973($3, 8, $4_1);
    $44_1 = $1967($15_1, 6976);
    $1970($3, 152, 0);
    $1986($3, 540, Math_fround($44_1));
    $2_1 = $1944($15_1, 7068);
    $1973($15_1, 7068, $2_1 + 1 | 0);
    $1970($3, 154, $2_1);
    break label$37;
   }
   $4_1 = $1944($3, 8);
  }
  $21_1 = $4_1;
  $2_1 = $1944($15_1, 7044);
  if ($2_1) {
   $6_1 = $1944(($1944($15_1 + 7052 | 0, 0) + Math_imul($2_1, 84) | 0) - 84 | 0, 0)
  } else {
   $6_1 = 0
  }
  if ($40_1) {
   $26_1 = $1944($3, 728)
  } else {
   $26_1 = $21_1 & 83886080 ? $6_1 : 0
  }
  $4_1 = $1944($3, 196);
  if (!$4_1) {
   $2_1 = $1944($3 + 200 | 0, 0);
   label$44 : {
    if (($2_1 | 0) != ($4_1 | 0)) {
     break label$44
    }
    $7_1 = $2_1;
    $2_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
    $4_1 = $4_1 + 1 | 0;
    $2_1 = ($2_1 | 0) > ($4_1 | 0) ? $2_1 : $4_1;
    if (($7_1 | 0) >= ($2_1 | 0)) {
     break label$44
    }
    $4_1 = $1944(0, 73568);
    if ($4_1) {
     $4_1 = $4_1 + 876 | 0;
     $1973($4_1, 0, $1944($4_1, 0) + 1 | 0);
    }
    $4_1 = (((wasm2js_i32$1 = $2_1 << 2, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $7_1 = $1944($3 + 204 | 0, 0);
    if ($7_1) {
     $1602($4_1, $7_1, $1944($3, 196) << 2);
     $7_1 = $1944($3, 204);
     label$49 : {
      if (!$7_1) {
       break label$49
      }
      $10_1 = $1944(0, 73568);
      if (!$10_1) {
       break label$49
      }
      $10_1 = $10_1 + 876 | 0;
      $1973($10_1, 0, $1944($10_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $7_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($3, 200, $2_1);
    $1973($3, 204, $4_1);
   }
   $1973($1944($3 + 204 | 0, 0) + ($1944($3, 196) << 2) | 0, 0, $1944($3, 4));
   $1973($3, 196, $1944($3, 196) + 1 | 0);
  }
  $1973($15_1, 7080, $3);
  $7_1 = $9 + 200 | 0;
  $1973($7_1, 0, $1944($15_1 + 7296 | 0, 0));
  $10_1 = $9 + 192 | 0;
  $1983($10_1, 0, $1960($15_1 + 7288 | 0, 0), i64toi32_i32$HIGH_BITS);
  $12_1 = $9 + 184 | 0;
  $1983($12_1, 0, $1960($15_1 + 7280 | 0, 0), i64toi32_i32$HIGH_BITS);
  $20_1 = $9 + 176 | 0;
  $1983($20_1, 0, $1960($15_1 + 7272 | 0, 0), i64toi32_i32$HIGH_BITS);
  $17_1 = $9 + 168 | 0;
  $1983($17_1, 0, $1960($15_1 + 7264 | 0, 0), i64toi32_i32$HIGH_BITS);
  $23_1 = $9 + 160 | 0;
  $1983($23_1, 0, $1960($15_1 + 7256 | 0, 0), i64toi32_i32$HIGH_BITS);
  $25_1 = $9 + 152 | 0;
  $1983($25_1, 0, $1960($15_1 + 7248 | 0, 0), i64toi32_i32$HIGH_BITS);
  $1983($9, 144, $1960($15_1, 7240), i64toi32_i32$HIGH_BITS);
  $2_1 = $1944(0, 73568);
  $36_1 = $1941($2_1, 12076);
  $33_1 = $1944($2_1, 7480);
  $39_1 = $1944($2_1, 7444);
  $34_1 = $1944($2_1, 7456);
  $41_1 = $1944($2_1, 7432);
  $45_1 = $1944($2_1, 7420);
  $42_1 = $1944($2_1, 7408);
  $46_1 = $1944($2_1, 7396);
  $47_1 = $1944($1944($2_1, 7080), 196);
  $31_1 = $1944($15_1, 7044);
  $4_1 = $1944($15_1 + 7048 | 0, 0);
  label$50 : {
   if (($31_1 | 0) != ($4_1 | 0)) {
    break label$50
   }
   $37 = $4_1;
   $4_1 = $4_1 ? $4_1 + (($4_1 | 0) / 2 | 0) | 0 : 8;
   $31_1 = $31_1 + 1 | 0;
   $4_1 = ($4_1 | 0) > ($31_1 | 0) ? $4_1 : $31_1;
   if (($37 | 0) >= ($4_1 | 0)) {
    break label$50
   }
   if ($2_1) {
    $2_1 = $2_1 + 876 | 0;
    $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
   }
   $2_1 = (((wasm2js_i32$1 = Math_imul($4_1, 84), wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $31_1 = $1944($15_1 + 7052 | 0, 0);
   if ($31_1) {
    $1602($2_1, $31_1, Math_imul($1944($15_1, 7044), 84));
    $31_1 = $1944($15_1, 7052);
    label$54 : {
     if (!$31_1) {
      break label$54
     }
     $37 = $1944(0, 73568);
     if (!$37) {
      break label$54
     }
     $37 = $37 + 876 | 0;
     $1973($37, 0, $1944($37, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $31_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($15_1, 7048, $4_1);
   $1973($15_1, 7052, $2_1);
  }
  $2_1 = $1944($15_1 + 7052 | 0, 0) + Math_imul($1944($15_1, 7044), 84) | 0;
  $1973($2_1, 0, $3);
  $1982($2_1, 4, $1960($9, 144), i64toi32_i32$HIGH_BITS);
  $1982($2_1 + 12 | 0, 0, $1960($25_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($2_1 + 20 | 0, 0, $1960($23_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($2_1 + 28 | 0, 0, $1960($17_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($2_1 + 36 | 0, 0, $1960($20_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($2_1 + 44 | 0, 0, $1960($12_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($2_1 + 52 | 0, 0, $1960($10_1, 0), i64toi32_i32$HIGH_BITS);
  $1973($2_1 + 60 | 0, 0, $1944($7_1, 0));
  $1970($2_1, 80, $36_1);
  $1970($2_1, 78, $33_1);
  $1970($2_1, 76, $39_1);
  $1970($2_1, 74, $34_1);
  $1970($2_1, 72, $41_1);
  $1970($2_1, 70, $45_1);
  $1970($2_1, 68, $42_1);
  $1970($2_1, 66, $46_1);
  $1970($2_1, 64, $47_1);
  $1973($15_1, 7080, 0);
  $1973($15_1, 7044, $1944($15_1, 7044) + 1 | 0);
  $23_1 = $21_1 & 268435456;
  if ($23_1) {
   $1973($15_1, 7492, $1944($15_1, 7492) + 1 | 0)
  }
  $33_1 = $21_1 & 67108864;
  if ($33_1) {
   $2_1 = $1944($15_1 + 7476 | 0, 0);
   $7_1 = $1944($15_1, 7480);
   $2_1 = $2_1 + Math_imul($7_1, 36) | 0;
   $1973($2_1, 4, $3);
   $4_1 = $1944($15_1 + 7484 | 0, 0);
   label$57 : {
    if (($4_1 | 0) != ($7_1 | 0)) {
     break label$57
    }
    $10_1 = $4_1;
    $4_1 = $4_1 ? $4_1 + (($4_1 | 0) / 2 | 0) | 0 : 8;
    $7_1 = $7_1 + 1 | 0;
    $4_1 = ($4_1 | 0) > ($7_1 | 0) ? $4_1 : $7_1;
    if (($10_1 | 0) >= ($4_1 | 0)) {
     break label$57
    }
    $7_1 = $1944(0, 73568);
    if ($7_1) {
     $7_1 = $7_1 + 876 | 0;
     $1973($7_1, 0, $1944($7_1, 0) + 1 | 0);
    }
    $7_1 = (((wasm2js_i32$1 = Math_imul($4_1, 36), wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $10_1 = $1944($15_1 + 7488 | 0, 0);
    if ($10_1) {
     $1602($7_1, $10_1, Math_imul($1944($15_1, 7480), 36));
     $10_1 = $1944($15_1, 7488);
     label$62 : {
      if (!$10_1) {
       break label$62
      }
      $12_1 = $1944(0, 73568);
      if (!$12_1) {
       break label$62
      }
      $12_1 = $12_1 + 876 | 0;
      $1973($12_1, 0, $1944($12_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $10_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($15_1, 7484, $4_1);
    $1973($15_1, 7488, $7_1);
   }
   $4_1 = $1944($15_1 + 7488 | 0, 0) + Math_imul($1944($15_1, 7480), 36) | 0;
   $1982($4_1, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
   $1973($4_1 + 32 | 0, 0, $1944($2_1 + 32 | 0, 0));
   $1982($4_1 + 24 | 0, 0, $1959($2_1 + 24 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1982($4_1 + 16 | 0, 0, $1959($2_1 + 16 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1982($4_1 + 8 | 0, 0, $1959($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1973($15_1, 7480, $1944($15_1, 7480) + 1 | 0);
   $1973($3, 160, $1944($2_1, 0));
  }
  if (!$40_1) {
   $1973($3, 728, $26_1);
   $1973($3, 748, $3);
   $1973($3, 744, $3);
   $1973($3, 740, $3);
   $1973($3, 736, $3);
   if (!(!$26_1 | ($21_1 & 50331648) != 16777216)) {
    $1973($3, 736, $1944($26_1, 736))
   }
   if (!(!$33_1 | !$26_1)) {
    $1973($3, 740, $1944($26_1, 740))
   }
   if (!(!$26_1 | (!($21_1 & 83886080) | $21_1 & 134217728))) {
    $1973($3, 744, $1944($26_1, 744))
   }
   if ($1937($3 + 10 | 0, 0) & 128) {
    $4_1 = $3;
    while (1) {
     $4_1 = $1944($4_1, 728);
     if ($1937($4_1 + 10 | 0, 0) & 128) {
      continue
     }
     break;
    };
    $1973($3, 748, $4_1);
   }
   $1973($3, 732, $6_1);
  }
  $17_1 = 0;
  label$69 : {
   if (!($1937($15_1, 7300) & 1)) {
    break label$69
   }
   label$70 : {
    $2_1 = $1944($3, 176);
    $6_1 = $1944($15_1 + 7304 | 0, 0);
    $4_1 = $2_1 << 24 >> 24 & $6_1;
    if (!$4_1) {
     break label$70
    }
    $5_1 = $1963($15_1 + 7324 | 0, 0);
    $8 = Math_fround($5_1 * $5_1);
    $5_1 = $1963($15_1 + 7328 | 0, 0);
    if (!(Math_fround($8 + Math_fround($5_1 * $5_1)) > Math_fround(9.999999747378752e-06))) {
     break label$70
    }
    $1982($3, 180, $1959($15_1 + 7316 | 0, 0), i64toi32_i32$HIGH_BITS);
    $4_1 = $1959($15_1, 7324);
    $6_1 = i64toi32_i32$HIGH_BITS;
    $1973($3, 176, $2_1 & -15);
    $1982($3, 188, $4_1, $6_1);
    $17_1 = 1;
    break label$69;
   }
   if (!$6_1 | $4_1) {
    $1982($3, 180, 2139095039, 2139095039);
    $1973($3, 176, $2_1 & -15);
    $2_1 = $3 + 16 | 0;
    $8 = $1963($2_1, 0);
    $5_1 = $1963($15_1 + 7316 | 0, 0);
    $13 = $1963($15_1 + 7320 | 0, 0);
    label$73 : {
     if (Math_fround(Math_abs($13)) < Math_fround(2147483648.0)) {
      $6_1 = ~~$13;
      break label$73;
     }
     $6_1 = -2147483648;
    }
    $13 = Math_fround($6_1 | 0);
    $1986($2_1, 0, $13);
    $11_1 = $1963($3, 12);
    $5_1 = Math_fround((Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0) ? ~~$5_1 : -2147483648) | 0);
    $1986($3, 12, $5_1);
    $5_1 = Math_fround($5_1 - $11_1);
    $1986($3, 208, Math_fround($5_1 + $1963($3, 208)));
    $2_1 = $3 + 212 | 0;
    $8 = Math_fround($13 - $8);
    $1986($2_1, 0, Math_fround($8 + $1963($2_1, 0)));
    $2_1 = $3 + 232 | 0;
    $1986($2_1, 0, Math_fround($5_1 + $1963($2_1, 0)));
    $2_1 = $3 + 236 | 0;
    $1986($2_1, 0, Math_fround($8 + $1963($2_1, 0)));
    $2_1 = $3 + 240 | 0;
    $1986($2_1, 0, Math_fround($5_1 + $1963($2_1, 0)));
    $2_1 = $3 + 244 | 0;
    $1986($2_1, 0, Math_fround($8 + $1963($2_1, 0)));
    $2_1 = $3 + 224 | 0;
    $1986($2_1, 0, Math_fround($5_1 + $1963($2_1, 0)));
    $2_1 = $3 + 228 | 0;
    $1986($2_1, 0, Math_fround($8 + $1963($2_1, 0)));
   }
   $17_1 = ($4_1 | 0) != 0;
  }
  $4_1 = 0;
  $6_1 = 0;
  if ($1937($15_1, 7300) & 2) {
   $7_1 = $1944($3, 176);
   $10_1 = $1944($15_1 + 7308 | 0, 0);
   $4_1 = $7_1 << 16 >> 24 & $10_1;
   if ($4_1) {
    $2_1 = $1963($15_1 + 7332 | 0, 0) > Math_fround(0.0)
   } else {
    $2_1 = 0
   }
   if ($4_1) {
    $6_1 = $1963($15_1 + 7336 | 0, 0) > Math_fround(0.0)
   }
   label$803 : {
    if (!(!$10_1 | $4_1)) {
     break label$803
    }
    $1973($3, 176, $7_1 & -3585);
    $5_1 = $1963($15_1 + 7332 | 0, 0);
    label$82 : {
     if ($5_1 > Math_fround(0.0)) {
      $1968($3, 164, 0);
      $1986($3, 28, Math_fround((Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0) ? ~~$5_1 : -2147483648) | 0));
      break label$82;
     }
     $1968($3, 167, 0);
     $1968($3, 164, 2);
    }
    $5_1 = $1963($15_1 + 7336 | 0, 0);
    if ($5_1 > Math_fround(0.0)) {
     $1968($3, 165, 0);
     $1986($3 + 32 | 0, 0, Math_fround((Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0) ? ~~$5_1 : -2147483648) | 0));
     break label$803;
    }
    $1968($3, 167, 0);
    $1968($3, 165, 2);
   }
   $4_1 = $6_1;
   $6_1 = $2_1;
  }
  $2_1 = $1944($15_1, 7300);
  label$89 : {
   if (!($2_1 & 128)) {
    break label$89
   }
   $5_1 = $1963($15_1 + 7348 | 0, 0);
   if ($5_1 >= Math_fround(0.0)) {
    $1973($3, 112, 0);
    $1986($3, 104, $5_1);
   }
   $5_1 = $1963($15_1 + 7352 | 0, 0);
   if (!($5_1 >= Math_fround(0.0))) {
    break label$89
   }
   $1973($3 + 116 | 0, 0, 0);
   $1986($3 + 108 | 0, 0, $5_1);
  }
  label$91 : {
   if ($2_1 & 4) {
    $1982($3, 52, $1959($15_1 + 7340 | 0, 0), i64toi32_i32$HIGH_BITS);
    break label$91;
   }
   if ($40_1) {
    break label$91
   }
   $1982($3, 52, 0, 0);
  }
  label$93 : {
   if (!($1937($15_1, 7300) & 8)) {
    break label$93
   }
   $2_1 = $1937($15_1 + 7356 | 0, 0);
   $7_1 = $1944($15_1 + 7312 | 0, 0);
   if ($7_1) {
    if (!($7_1 & $1944($3, 176) << 8 >> 24)) {
     break label$93
    }
   }
   $1968($3, 141, $2_1);
   $1973($3, 176, $1944($3, 176) & -917505);
  }
  if ($1937($15_1, 7300) & 32) {
   $125($3)
  }
  if ($1937($3, 144)) {
   $1973($3, 176, $1944($3, 176) & -526345)
  }
  $7_1 = $4_1;
  $36_1 = $21_1 & 16777216;
  label$97 : {
   label$98 : {
    label$99 : {
     label$100 : {
      if (!$40_1) {
       $1982($3, 496, -8388609, -8388609);
       $1968($3, 138, 1);
       $1982($3 + 504 | 0, 0, 2139095039, 2139095039);
       $1968($3, 148, ($1_1 | 0) != 0);
       $2_1 = $1944($3 + 200 | 0, 0);
       label$102 : {
        if (($2_1 | 0) > 0) {
         break label$102
        }
        $4_1 = $2_1;
        $2_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
        $2_1 = ($2_1 | 0) <= 1 ? 1 : $2_1;
        if (($4_1 | 0) >= ($2_1 | 0)) {
         break label$102
        }
        $4_1 = $1944(0, 73568);
        if ($4_1) {
         $4_1 = $4_1 + 876 | 0;
         $1973($4_1, 0, $1944($4_1, 0) + 1 | 0);
        }
        $4_1 = (((wasm2js_i32$1 = $2_1 << 2, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
        $10_1 = $1944($3 + 204 | 0, 0);
        if ($10_1) {
         $1602($4_1, $10_1, $1944($3, 196) << 2);
         $10_1 = $1944($3, 204);
         label$107 : {
          if (!$10_1) {
           break label$107
          }
          $12_1 = $1944(0, 73568);
          if (!$12_1) {
           break label$107
          }
          $12_1 = $12_1 + 876 | 0;
          $1973($12_1, 0, $1944($12_1, 0) - 1 | 0);
         }
         ((wasm2js_i32$2 = $10_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
        }
        $1973($3, 200, $2_1);
        $1973($3, 204, $4_1);
       }
       $1973($3, 196, 1);
       $372($1944($3, 580));
       $1973($3 + 372 | 0, 0, -1);
       if ($1937($3, 804)) {
        $1968($3, 804, 0);
        $2_1 = $1944($3, 580);
        $10_1 = $1944($2_1 + 16 | 0, 0);
        $4_1 = $1944($3, 796);
        if (($10_1 | 0) < ($4_1 | 0)) {
         $10_1 = $1944(0, 73568);
         if ($10_1) {
          $10_1 = $10_1 + 876 | 0;
          $1973($10_1, 0, $1944($10_1, 0) + 1 | 0);
         }
         $10_1 = (((wasm2js_i32$1 = $4_1 << 1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
         $12_1 = $1944($2_1 + 20 | 0, 0);
         if ($12_1) {
          $1602($10_1, $12_1, $1944($2_1, 12) << 1);
          $12_1 = $1944($2_1, 20);
          label$40 : {
           if (!$12_1) {
            break label$40
           }
           $20_1 = $1944(0, 73568);
           if (!$20_1) {
            break label$40
           }
           $20_1 = $20_1 + 876 | 0;
           $1973($20_1, 0, $1944($20_1, 0) - 1 | 0);
          }
          ((wasm2js_i32$2 = $12_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
         }
         $1973($2_1, 16, $4_1);
         $1973($2_1, 20, $10_1);
        }
        $2_1 = $1944($3, 580);
        $10_1 = $1944($2_1 + 28 | 0, 0);
        $4_1 = $1944($3, 800);
        if (($10_1 | 0) < ($4_1 | 0)) {
         $10_1 = $1944(0, 73568);
         if ($10_1) {
          $10_1 = $10_1 + 876 | 0;
          $1973($10_1, 0, $1944($10_1, 0) + 1 | 0);
         }
         $10_1 = (((wasm2js_i32$1 = Math_imul($4_1, 20), wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
         $12_1 = $1944($2_1 + 32 | 0, 0);
         if ($12_1) {
          $1602($10_1, $12_1, Math_imul($1944($2_1, 24), 20));
          $12_1 = $1944($2_1, 32);
          label$81 : {
           if (!$12_1) {
            break label$81
           }
           $20_1 = $1944(0, 73568);
           if (!$20_1) {
            break label$81
           }
           $20_1 = $20_1 + 876 | 0;
           $1973($20_1, 0, $1944($20_1, 0) - 1 | 0);
          }
          ((wasm2js_i32$2 = $12_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
         }
         $1973($2_1, 28, $4_1);
         $1973($2_1, 32, $10_1);
        }
        $1982($3, 796, 0, 0);
       }
       label$109 : {
        if (!$1944($15_1, 7852) | !$35_1) {
         break label$109
        }
        if ($1944($3, 8) & 524288) {
         break label$109
        }
        $4_1 = $1944($3, 0);
        if (!$1695($0_1, $4_1)) {
         break label$109
        }
        $2_1 = $1944($3, 76);
        $10_1 = $1697($0_1) + 1 | 0;
        if ($2_1 >>> 0 < $10_1 >>> 0) {
         label$112 : {
          if (!$4_1) {
           break label$112
          }
          $2_1 = $1944(0, 73568);
          if (!$2_1) {
           break label$112
          }
          $2_1 = $2_1 + 876 | 0;
          $1973($2_1, 0, $1944($2_1, 0) - 1 | 0);
         }
         ((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
         $2_1 = $1944(0, 73568);
         if ($2_1) {
          $2_1 = $2_1 + 876 | 0;
          $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
         }
         $2_1 = $10_1;
         $4_1 = (((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0) | 0);
        }
        $4_1 = $1602($4_1, $0_1, $10_1);
        $1973($3, 76, $2_1);
        $1973($3, 0, $4_1);
       }
       $10_1 = $1936($3, 173);
       $41_1 = $3 + 36 | 0;
       $12_1 = $3 + 44 | 0;
       $148($3, $41_1, $12_1);
       $2_1 = $1936($3, 172);
       if (($2_1 | 0) > 0) {
        $1968($3, 172, $2_1 - 1 | 0)
       }
       $2_1 = $1936($3, 173);
       if (($2_1 | 0) > 0) {
        $1968($3, 173, $2_1 - 1 | 0)
       }
       $2_1 = $1936($3, 174);
       if (($2_1 | 0) > 0) {
        $1968($3, 174, $2_1 - 1 | 0)
       }
       if (!($6_1 & $7_1 | $35_1)) {
        $1968($3, 173, 1)
       }
       $4_1 = $21_1 & 100663296;
       label$118 : {
        if (!($43_1 & ($4_1 | 0) != 0)) {
         break label$118
        }
        $1968($3, 173, 1);
        if (!($21_1 & 64)) {
         break label$118
        }
        if (!$6_1) {
         $1973($3, 20, 0);
         $1973($3, 28, 0);
        }
        if (!$7_1) {
         $1973($3 + 24 | 0, 0, 0);
         $1973($3 + 32 | 0, 0, 0);
        }
        $1982($41_1, 0, 0, 0);
        $1982($41_1 + 8 | 0, 0, 0, 0);
       }
       $2_1 = $1944(0, 73568);
       $1973($2_1, 7080, $3);
       label$121 : {
        if ($3) {
         $20_1 = $1944($3, 372);
         if (($20_1 | 0) == -1) {
          $20_1 = 0
         } else {
          $20_1 = $1944($2_1 + 8064 | 0, 0) + Math_imul($20_1, 456) | 0
         }
         $1973($2_1, 8036, $20_1);
         $8 = Math_fround($1963($2_1, 6472) * $1963($3, 572));
         $20_1 = $1944($3, 728);
         if ($20_1) {
          $8 = Math_fround($8 * $1963($20_1, 572))
         }
         $1986($2_1, 6468, $8);
         $1986($2_1 + 6488 | 0, 0, $8);
         break label$121;
        }
        $1973($2_1, 8036, 0);
       }
       if ($36_1) {
        $4_1 = $15_1 + 5464 | 0
       } else {
        $20_1 = $15_1 + 5436 | 0;
        $4_1 = $4_1 ? ($21_1 & 134217728 ? $20_1 : $15_1 + 5472 | 0) : $20_1;
       }
       $1986($3, 72, $1963($4_1, 0));
       $1982($3, 60, $1959($15_1 + 5424 | 0, 0), i64toi32_i32$HIGH_BITS);
       label$129 : {
        if (($21_1 & 83951616) != 16777216) {
         break label$129
        }
        if ($1963($3, 72) != Math_fround(0.0)) {
         break label$129
        }
        $8 = Math_fround(0.0);
        if ($21_1 & 1024) {
         $8 = $1963($15_1 + 5428 | 0, 0)
        }
        $1973($3, 60, 0);
        $1986($3 - -64 | 0, 0, $8);
       }
       $5_1 = $1963($3, 60);
       $8 = $1963($15_1 + 5492 | 0, 0);
       $5_1 = $5_1 >= $8 ? $5_1 : $8;
       $8 = $1963($15_1 + 7388 | 0, 0);
       $1986($3 + 308 | 0, 0, $5_1 >= $8 ? $5_1 : $8);
       $1986($3 + 312 | 0, 0, $1963($15_1 + 7392 | 0, 0));
       label$131 : {
        if (!($21_1 & 33)) {
         $5_1 = $1963($3 + 16 | 0, 0);
         $11_1 = $1963($3, 28);
         $18_1 = $1963($3, 12);
         $8 = Math_fround(0.0);
         if (!($1937($3, 8) & 1)) {
          $13 = Math_fround($1963($2_1, 6472) * $1963($3, 572));
          $4_1 = $1944($3, 728);
          if ($4_1) {
           $13 = Math_fround($13 * $1963($4_1, 572))
          }
          $8 = $1963($2_1 + 5480 | 0, 0);
          $8 = Math_fround(Math_fround($8 + $8) + $13);
         }
         $4_1 = $1959($3, 12);
         $20_1 = i64toi32_i32$HIGH_BITS;
         $1986($9 + 244 | 0, 0, Math_fround($5_1 + $8));
         $1986($9, 240, Math_fround($18_1 + $11_1));
         $1983($9, 232, $4_1, $20_1);
         label$136 : {
          if (($1944($15_1, 7084) | 0) != ($3 | 0)) {
           break label$136
          }
          if ($1944($15_1, 7116)) {
           break label$136
          }
          if ($1944($15_1, 7120)) {
           break label$136
          }
          if (!$93($9 + 232 | 0, $9 + 240 | 0, 1)) {
           break label$136
          }
          if (($1941($15_1 + 1002 | 0, 0) | 0) != 2) {
           break label$136
          }
          $1968($3, 142, 1);
         }
         if (!$1937($3, 142)) {
          break label$131
         }
         $1968($3, 141, $1937($3, 141) ^ 1);
         if ($1937($3 + 9 | 0, 0) & 1) {
          break label$131
         }
         if (!($1963($2_1, 12128) <= Math_fround(0.0))) {
          break label$131
         }
         $1986($2_1, 12128, $1963($2_1 + 28 | 0, 0));
         break label$131;
        }
        $1968($3, 141, 0);
       }
       $4_1 = !$35_1;
       $1968($3, 142, 0);
       $149($9 + 136 | 0, $3, $12_1);
       label$137 : {
        label$138 : {
         $46_1 = $21_1 & 64;
         if (!$46_1) {
          break label$138
         }
         if ($1937($3, 141)) {
          break label$138
         }
         $2_1 = $4_1;
         if (!$6_1) {
          $1986($3, 28, $1963($9, 136));
          $2_1 = 1;
         }
         if ($7_1) {
          $6_1 = $4_1;
          $4_1 = $2_1;
          break label$137;
         }
         $1986($3 + 32 | 0, 0, $1963($9, 140));
         $6_1 = 1;
         $4_1 = $2_1;
         break label$137;
        }
        label$1414 : {
         $12_1 = $1936($3, 164);
         if (($12_1 | 0) > 0) {
          break label$1414
         }
         if (($1936($3, 165) | 0) > 0) {
          break label$1414
         }
         $6_1 = $4_1;
         break label$137;
        }
        $2_1 = $4_1;
        if (!(($12_1 | 0) <= 0 | $6_1)) {
         label$143 : {
          if ($1937($3, 167)) {
           $5_1 = $1963($3, 28);
           $8 = $1963($9, 136);
           $5_1 = $5_1 >= $8 ? $5_1 : $8;
           break label$143;
          }
          $5_1 = $1963($9, 136);
         }
         $1986($3, 28, $5_1);
         $2_1 = 1;
        }
        label$145 : {
         if ($7_1) {
          break label$145
         }
         if (($1936($3, 165) | 0) <= 0) {
          break label$145
         }
         $4_1 = $3 + 32 | 0;
         label$147 : {
          if ($1937($3, 167)) {
           $5_1 = $1963($3 + 32 | 0, 0);
           $8 = $1963($9, 140);
           $5_1 = $5_1 >= $8 ? $5_1 : $8;
           break label$147;
          }
          $5_1 = $1963($9, 140);
         }
         $1986($4_1, 0, $5_1);
         $4_1 = 1;
        }
        label$149 : {
         if ($1937($3, 141)) {
          break label$149
         }
         if ($1937($3 + 9 | 0, 0) & 1) {
          break label$149
         }
         $6_1 = $1944(0, 73568);
         if (!($1963($6_1, 12128) <= Math_fround(0.0))) {
          break label$149
         }
         $1986($6_1, 12128, $1963($6_1 + 28 | 0, 0));
        }
        $6_1 = $4_1;
        $4_1 = $2_1;
       }
       $12_1 = $4_1;
       $20_1 = $6_1;
       $47_1 = $3 + 28 | 0;
       $150($9 + 232 | 0, $3, $47_1);
       $1982($3, 28, $1960($9, 232), i64toi32_i32$HIGH_BITS);
       label$150 : {
        if (!($36_1 | !$1937($3, 141))) {
         $2_1 = $3 + 16 | 0;
         $5_1 = $1963($2_1, 0);
         $8 = $1963($3, 28);
         $13 = $1963($3, 12);
         if (!($1937($3, 8) & 1)) {
          $4_1 = $1944(0, 73568);
          $14 = Math_fround($1963($4_1, 6472) * $1963($3, 572));
          $6_1 = $1944($3, 728);
          if ($6_1) {
           $14 = Math_fround($14 * $1963($6_1, 572))
          }
          $11_1 = $1963($4_1 + 5480 | 0, 0);
          $14 = Math_fround(Math_fround($11_1 + $11_1) + $14);
         }
         $8 = Math_fround(Math_fround($13 + $8) - $1963($3, 12));
         $5_1 = Math_fround(Math_fround($5_1 + $14) - $1963($2_1, 0));
         break label$150;
        }
        $8 = $1963($3, 28);
        $5_1 = $1963($3 + 32 | 0, 0);
       }
       $1986($3, 20, $8);
       $1986($3 + 24 | 0, 0, $5_1);
       $2_1 = $1944($3, 8);
       if ($2_1 & 1) {
        $5_1 = Math_fround(0.0)
       } else {
        $4_1 = $1944(0, 73568);
        $8 = Math_fround($1963($4_1, 6472) * $1963($3, 572));
        $6_1 = $1944($3, 728);
        if ($6_1) {
         $8 = Math_fround($8 * $1963($6_1, 572))
        }
        $5_1 = $1963($4_1 + 5480 | 0, 0);
        $5_1 = Math_fround(Math_fround($5_1 + $5_1) + $8);
       }
       $50_1 = $5_1;
       if ($2_1 & 1024) {
        $2_1 = $1944(0, 73568);
        $8 = Math_fround($1963($2_1, 6472) * $1963($3, 572));
        $5_1 = $1963($3, 312);
        $4_1 = $1944($3, 728);
        if ($4_1) {
         $8 = Math_fround($8 * $1963($4_1, 572))
        }
        $13 = $1963($2_1 + 5480 | 0, 0);
        $5_1 = Math_fround(Math_fround($13 + $13) + Math_fround($5_1 + $8));
       } else {
        $5_1 = Math_fround(0.0)
       }
       $51_1 = $5_1;
       label$161 : {
        if (!$43_1) {
         break label$161
        }
        $1973($3, 168, -1);
        if ($17_1 | ($21_1 & 201326592) != 67108864) {
         break label$161
        }
        $1982($3, 12, $1959((Math_imul($1944($15_1, 7480), 36) + $1944($15_1 + 7488 | 0, 0) | 0) - 16 | 0, 0), i64toi32_i32$HIGH_BITS);
       }
       $39_1 = $21_1 & 50331648;
       label$162 : {
        if (!$36_1) {
         break label$162
        }
        $4_1 = $1944($26_1 + 352 | 0, 0);
        $1970($3, 152, $4_1);
        $2_1 = $1944($26_1 + 356 | 0, 0);
        label$163 : {
         if (($2_1 | 0) != ($4_1 | 0)) {
          break label$163
         }
         $6_1 = $2_1;
         $2_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
         $4_1 = $4_1 + 1 | 0;
         $2_1 = ($2_1 | 0) > ($4_1 | 0) ? $2_1 : $4_1;
         if (($6_1 | 0) >= ($2_1 | 0)) {
          break label$163
         }
         $4_1 = $1944(0, 73568);
         if ($4_1) {
          $4_1 = $4_1 + 876 | 0;
          $1973($4_1, 0, $1944($4_1, 0) + 1 | 0);
         }
         $4_1 = (((wasm2js_i32$1 = $2_1 << 2, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
         $6_1 = $1944($26_1 + 360 | 0, 0);
         if ($6_1) {
          $1602($4_1, $6_1, $1944($26_1, 352) << 2);
          $6_1 = $1944($26_1, 360);
          label$168 : {
           if (!$6_1) {
            break label$168
           }
           $7_1 = $1944(0, 73568);
           if (!$7_1) {
            break label$168
           }
           $7_1 = $7_1 + 876 | 0;
           $1973($7_1, 0, $1944($7_1, 0) - 1 | 0);
          }
          ((wasm2js_i32$2 = $6_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
         }
         $1973($26_1, 356, $2_1);
         $1973($26_1, 360, $4_1);
        }
        $1973($1944($26_1 + 360 | 0, 0) + ($1944($26_1, 352) << 2) | 0, 0, $3);
        $1973($26_1, 352, $1944($26_1, 352) + 1 | 0);
        if ($17_1 | $33_1 | ($39_1 | 0) == 50331648) {
         break label$162
        }
        $1982($3, 12, $1959($26_1, 208), i64toi32_i32$HIGH_BITS);
       }
       $45_1 = $21_1 & 33554432;
       $4_1 = ($36_1 | 0) != 0;
       label$169 : {
        label$170 : {
         $5_1 = $1963($3, 180);
         if ($5_1 == Math_fround(3402823466385288598117041.0e14)) {
          break label$170
         }
         if ($1937($3, 173)) {
          break label$170
         }
         $8 = $1963($3 + 184 | 0, 0);
         $1982($3, 180, 2139095039, 2139095039);
         $1973($3, 176, $1944($3, 176) & -15);
         $5_1 = Math_fround($5_1 - Math_fround($1963($3, 20) * $1963($3, 188)));
         label$171 : {
          if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
           $2_1 = ~~$5_1;
           break label$171;
          }
          $2_1 = -2147483648;
         }
         $5_1 = $1963($3, 12);
         $13 = Math_fround($2_1 | 0);
         $1986($3, 12, $13);
         $8 = Math_fround($8 - Math_fround($1963($3 + 24 | 0, 0) * $1963($3 + 192 | 0, 0)));
         label$173 : {
          if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
           $2_1 = ~~$8;
           break label$173;
          }
          $2_1 = -2147483648;
         }
         $6_1 = $3 + 16 | 0;
         $8 = $1963($6_1, 0);
         $11_1 = Math_fround($2_1 | 0);
         $1986($6_1, 0, $11_1);
         $5_1 = Math_fround($13 - $5_1);
         $1986($3, 208, Math_fround($5_1 + $1963($3, 208)));
         $2_1 = $3 + 232 | 0;
         $1986($2_1, 0, Math_fround($5_1 + $1963($2_1, 0)));
         $2_1 = $3 + 212 | 0;
         $8 = Math_fround($11_1 - $8);
         $1986($2_1, 0, Math_fround($8 + $1963($2_1, 0)));
         $2_1 = $3 + 236 | 0;
         $1986($2_1, 0, Math_fround($8 + $1963($2_1, 0)));
         $2_1 = $3 + 240 | 0;
         $1986($2_1, 0, Math_fround($5_1 + $1963($2_1, 0)));
         $2_1 = $3 + 244 | 0;
         $1986($2_1, 0, Math_fround($8 + $1963($2_1, 0)));
         $2_1 = $3 + 224 | 0;
         $1986($2_1, 0, Math_fround($5_1 + $1963($2_1, 0)));
         $2_1 = $3 + 228 | 0;
         $1986($2_1, 0, Math_fround($8 + $1963($2_1, 0)));
         break label$169;
        }
        if ($23_1) {
         $151($9 + 232 | 0, $3);
         $1982($3, 12, $1960($9, 232), i64toi32_i32$HIGH_BITS);
         break label$169;
        }
        if (!($17_1 | !$33_1 | ($10_1 | 0) <= 0)) {
         $151($9 + 232 | 0, $3);
         $1982($3, 12, $1960($9, 232), i64toi32_i32$HIGH_BITS);
         break label$169;
        }
        if ($17_1 | !$45_1 | ($39_1 | 0) == 50331648) {
         break label$169
        }
        $151($9 + 232 | 0, $3);
        $1982($3, 12, $1960($9, 232), i64toi32_i32$HIGH_BITS);
       }
       $2_1 = $1944($1944($1944(0, 73568) + 7504 | 0, 0), 0);
       $13 = $1963($2_1, 12);
       $5_1 = $1963($2_1, 4);
       $8 = $1963($2_1 + 8 | 0, 0);
       $18_1 = Math_fround($8 + $1963($2_1 + 16 | 0, 0));
       $1986($9 + 132 | 0, 0, $18_1);
       $1986($9, 124, $8);
       $1986($9, 120, $5_1);
       $19 = Math_fround($5_1 + $13);
       $1986($9, 128, $19);
       $16_1 = $1963($2_1, 28);
       $13 = $1963($2_1, 20);
       $11_1 = $1963($15_1 + 5592 | 0, 0);
       $14 = $1963($15_1 + 5584 | 0, 0);
       $22_1 = $1963($2_1 + 24 | 0, 0);
       $28_1 = Math_fround($22_1 + $1963($2_1 + 32 | 0, 0));
       $27_1 = $1963($15_1 + 5588 | 0, 0);
       $24 = $1963($15_1 + 5596 | 0, 0);
       $27_1 = $24 <= $27_1 ? $27_1 : $24;
       $1986($9 + 116 | 0, 0, Math_fround($28_1 - $27_1));
       $11_1 = $11_1 <= $14 ? $14 : $11_1;
       $1986($9, 112, Math_fround(Math_fround($13 + $16_1) - $11_1));
       $1986($9, 108, Math_fround($22_1 + $27_1));
       $1986($9, 104, Math_fround($13 + $11_1));
       label$177 : {
        if ($4_1 | $17_1) {
         break label$177
        }
        if (($1936($3, 164) | 0) > 0) {
         break label$177
        }
        if (!(Math_fround($18_1 - $8) > Math_fround(0.0)) | (!(Math_fround($19 - $5_1) > Math_fround(0.0)) | ($1936($3, 165) | 0) > 0)) {
         break label$177
        }
        $2_1 = $9 + 104 | 0;
        $5_1 = $1963($3 + 24 | 0, 0);
        $8 = $1963($3, 20);
        $4_1 = $1944(0, 73568);
        label$16 : {
         if (!$1937($4_1 + 181 | 0, 0)) {
          break label$16
         }
         if ($1937($3, 8) & 1) {
          break label$16
         }
         $5_1 = Math_fround($1963($4_1, 6472) * $1963($3, 572));
         $6_1 = $1944($3, 728);
         if ($6_1) {
          $5_1 = Math_fround($5_1 * $1963($6_1, 572))
         }
         $13 = $1963($4_1 + 5480 | 0, 0);
         $5_1 = Math_fround(Math_fround($13 + $13) + $5_1);
        }
        $11_1 = $1963($2_1, 4);
        $8 = Math_fround($1963($2_1, 0) - $8);
        $2_1 = $1959($2_1, 8);
        $4_1 = i64toi32_i32$HIGH_BITS;
        $14 = (wasm2js_scratch_store_i32(2, $2_1), wasm2js_scratch_load_f32());
        $13 = $1963($3, 12);
        $1986($3, 12, $8 > $13 ? $8 : $13 > $14 ? $14 : $13);
        $2_1 = $3 + 16 | 0;
        $8 = Math_fround($11_1 - $5_1);
        $13 = (wasm2js_scratch_store_i32(2, $4_1), wasm2js_scratch_load_f32());
        $5_1 = $1963($2_1, 0);
        $1986($2_1, 0, $5_1 < $8 ? $8 : $5_1 > $13 ? $13 : $5_1);
       }
       $5_1 = $1963($3, 12);
       label$178 : {
        if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
         $2_1 = ~~$5_1;
         break label$178;
        }
        $2_1 = -2147483648;
       }
       $1986($3, 12, Math_fround($2_1 | 0));
       $2_1 = $3 + 16 | 0;
       $5_1 = $1963($2_1, 0);
       label$180 : {
        if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
         $6_1 = ~~$5_1;
         break label$180;
        }
        $6_1 = -2147483648;
       }
       $1986($2_1, 0, Math_fround($6_1 | 0));
       $2_1 = $15_1 + 5460 | 0;
       label$182 : {
        if ($36_1) {
         break label$182
        }
        $2_1 = $15_1 + 5468 | 0;
        if (($21_1 & 201326592) == 67108864) {
         break label$182
        }
        $2_1 = $15_1 + 5432 | 0;
       }
       $1986($3, 68, $1963($2_1, 0));
       $23_1 = 0;
       if (!($43_1 & !($21_1 & 4096))) {
        break label$98
       }
       $23_1 = !$39_1 | ($33_1 | 0) != 0;
       $34_1 = $1944(0, 73568);
       $17_1 = $1944($34_1, 7468);
       $10_1 = $17_1;
       while (1) {
        label$185 : {
         if (($10_1 | 0) <= 0) {
          $7_1 = 0;
          break label$185;
         }
         $2_1 = $6_1;
         $10_1 = $10_1 - 1 | 0;
         $6_1 = $1944($1944($34_1, 7476) + Math_imul($10_1, 36) | 0, 4);
         label$188 : {
          if ($6_1) {
           $4_1 = 0;
           if ($1937($6_1 + 11 | 0, 0) & 8) {
            break label$188
           }
          }
          $6_1 = $2_1;
          $4_1 = 1;
         }
         $2_1 = $4_1;
         $7_1 = $6_1;
         if ($2_1) {
          continue
         }
        }
        break;
       };
       $2_1 = $7_1;
       if (!$2_1) {
        break label$98
       }
       $25_1 = $1944($3, 736);
       $7_1 = ($25_1 | 0) == ($2_1 | 0);
       if (!$3 | ($2_1 | 0) == ($25_1 | 0)) {
        break label$100
       }
       $4_1 = $3;
       while (1) {
        $6_1 = $4_1;
        $4_1 = ($2_1 | 0) == ($4_1 | 0);
        $7_1 = $4_1;
        if ($4_1) {
         break label$100
        }
        $6_1 = $1944($6_1, 732);
        $4_1 = $6_1;
        if ($4_1) {
         continue
        }
        break;
       };
       break label$99;
      }
      $0_1 = $1944(0, 73568);
      $1973($0_1, 7080, $3);
      if ($3) {
       $1_1 = $1944($3 + 372 | 0, 0);
       if (($1_1 | 0) != -1) {
        $1_1 = $1944($0_1 + 8064 | 0, 0) + Math_imul($1_1, 456) | 0
       } else {
        $1_1 = 0
       }
       $1973($0_1, 8036, $1_1);
       $8 = Math_fround($1963($0_1, 6472) * $1963($3, 572));
       $1_1 = $1944($3, 728);
       if ($1_1) {
        $8 = Math_fround($8 * $1963($1_1, 572))
       }
       $1986($0_1, 6468, $8);
       $1986($0_1 + 6488 | 0, 0, $8);
       break label$97;
      }
      $1973($0_1, 8036, 0);
      break label$97;
     }
     if ($7_1) {
      break label$98
     }
    }
    $23_1 = 0;
    if (($3 | 0) != ($25_1 | 0)) {
     break label$98
    }
    $42_1 = $1944($34_1, 7476);
    $4_1 = $17_1;
    label$197 : {
     while (1) {
      $2_1 = $6_1;
      $17_1 = $4_1;
      label$199 : {
       label$200 : {
        label$201 : {
         $23_1 = $4_1 - 1 | 0;
         $4_1 = $1944($42_1 + Math_imul($23_1, 36) | 0, 4);
         if (!$4_1) {
          break label$201
         }
         if (!$1937($4_1, 139)) {
          break label$201
         }
         if (!($1937($4_1 + 11 | 0, 0) & 8)) {
          break label$201
         }
         label$2023 : {
          if (($4_1 | 0) == ($25_1 | 0)) {
           break label$2023
          }
          $6_1 = $3;
          if ($3) {
           while (1) {
            if (($4_1 | 0) == ($6_1 | 0)) {
             break label$2023
            }
            $6_1 = $1944($6_1, 732);
            if ($6_1) {
             continue
            }
            break;
           }
          }
          $6_1 = $1944($1944($4_1, 732), 736);
          if ($6_1) {
           while (1) {
            $7_1 = $6_1;
            label$207 : {
             label$208 : {
              if (($6_1 | 0) == ($25_1 | 0)) {
               break label$208
              }
              $6_1 = $3;
              if (!$3) {
               break label$207
              }
              while (1) {
               if (($6_1 | 0) == ($7_1 | 0)) {
                break label$208
               }
               $6_1 = $1944($6_1, 732);
               if ($6_1) {
                continue
               }
               break;
              };
              break label$207;
             }
             $6_1 = 1;
             break label$199;
            }
            $6_1 = $1944($1944($7_1, 732), 736);
            if ($6_1) {
             continue
            }
            break;
           }
          }
          $6_1 = 0;
          break label$200;
         }
         $6_1 = 2;
         break label$200;
        }
        $6_1 = 4;
       }
       $4_1 = $2_1;
      }
      $10_1 = $4_1;
      label$210 : {
       switch ($6_1 | 0) {
       case 0:
       case 4:
        break label$210;
       default:
        break label$197;
       };
      }
      $4_1 = $23_1;
      $6_1 = $10_1;
      if (($17_1 | 0) > 1) {
       continue
      }
      break;
     };
     $6_1 = 2;
    }
    $4_1 = $6_1;
    $6_1 = $1944($34_1 + 7016 | 0, 0);
    $7_1 = $1944($34_1, 7008);
    $17_1 = $6_1 + ($7_1 << 2) | 0;
    $2_1 = $6_1;
    $23_1 = ($7_1 | 0) <= 0;
    label$211 : {
     if ($23_1) {
      break label$211
     }
     $7_1 = $6_1;
     while (1) {
      $2_1 = $7_1;
      if (($1944($2_1, 0) | 0) == ($25_1 | 0)) {
       break label$211
      }
      $2_1 = $2_1 + 4 | 0;
      $7_1 = $2_1;
      if ($2_1 >>> 0 < $17_1 >>> 0) {
       continue
      }
      break;
     };
    }
    $2_1 = $2_1 - $6_1 >> 2;
    $7_1 = $6_1;
    label$214 : {
     if ($23_1) {
      break label$214
     }
     $4_1 = $1944(($4_1 | 0) != 2 ? $10_1 : 0, 736);
     $10_1 = $6_1;
     while (1) {
      if (($1944($10_1, 0) | 0) == ($4_1 | 0)) {
       $7_1 = $10_1;
       break label$214;
      }
      $7_1 = $10_1 + 4 | 0;
      $10_1 = $7_1;
      if ($7_1 >>> 0 < $17_1 >>> 0) {
       continue
      }
      break;
     };
    }
    $4_1 = $7_1 - $6_1 >> 2;
    label$217 : {
     if (($4_1 | 0) > ($2_1 | 0)) {
      $6_1 = $6_1 + ($2_1 << 2) | 0;
      $1603($6_1, $6_1 + 4 | 0, ($2_1 ^ -1) + $4_1 << 2);
      $4_1 = $4_1 - 1 | 0;
      break label$217;
     }
     $6_1 = $6_1 + ($4_1 << 2) | 0;
     $1603($6_1 + 4 | 0, $6_1, $2_1 - $4_1 << 2);
    }
    $1973($1944($34_1, 7016) + ($4_1 << 2) | 0, 0, $25_1);
    $23_1 = 0;
   }
   $34_1 = $23_1;
   $1983($9, 88, 0, 0);
   $1983($9, 80, 0, 0);
   $5_1 = $1963($15_1, 6468);
   $8 = Math_fround($5_1 * Math_fround(1.100000023841858));
   $13 = Math_fround($1963($3, 68) + Math_fround(1.0));
   $5_1 = Math_fround(Math_fround($5_1 * Math_fround(.20000000298023224)) + $13);
   $5_1 = $5_1 <= $8 ? $8 : $5_1;
   label$219 : {
    if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
     $31_1 = ~~$5_1;
     break label$219;
    }
    $31_1 = -2147483648;
   }
   $42_1 = $1937($15_1 + 180 | 0, 0) ? 2 : 1;
   label$221 : {
    if ($1937($3, 141)) {
     $4_1 = -1;
     $10_1 = $12_1;
     $2_1 = $20_1;
     break label$221;
    }
    label$223 : {
     if ($1937($3, 8) & 66) {
      $4_1 = -1;
      $2_1 = 0;
      break label$223;
     }
     if (($1936($3, 164) | 0) > 0) {
      $4_1 = -1;
      $2_1 = 0;
      break label$223;
     }
     if (($1936($3, 165) | 0) > 0) {
      $4_1 = -1;
      $2_1 = 0;
      break label$223;
     }
     $4_1 = -1;
     $2_1 = 0;
     if (!$1937($3, 139)) {
      break label$223
     }
     $25_1 = $1944(0, 73568);
     $23_1 = $1937($25_1 + 180 | 0, 0);
     $5_1 = $1963($25_1, 6468);
     $1973($3 + 292 | 0, 0, 1);
     $153(14974);
     $8 = Math_fround($5_1 * Math_fround(1.350000023841858));
     $5_1 = Math_fround(Math_fround($5_1 * Math_fround(.20000000298023224)) + $13);
     $5_1 = $5_1 <= $8 ? $8 : $5_1;
     label$227 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $2_1 = ~~$5_1;
       break label$227;
      }
      $2_1 = -2147483648;
     }
     $5_1 = Math_fround(Math_fround($2_1 | 0) * Math_fround(.75));
     label$229 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $2_1 = ~~$5_1;
       break label$229;
      }
      $2_1 = -2147483648;
     }
     $22_1 = Math_fround($2_1 | 0);
     $27_1 = Math_fround(-$22_1);
     $24 = $23_1 ? Math_fround(4.0) : Math_fround(0.0);
     $37 = $25_1 + 7176 | 0;
     $52_1 = $25_1 + 228 | 0;
     $53_1 = $1963($9 + 116 | 0, 0);
     $54_1 = $1963($9, 112);
     $55_1 = $1963($9, 108);
     $56_1 = $1963($9, 104);
     $4_1 = 0;
     $6_1 = 0;
     $8 = Math_fround(3402823466385288598117041.0e14);
     $11_1 = Math_fround(3402823466385288598117041.0e14);
     $5_1 = Math_fround(3402823466385288598117041.0e14);
     $13 = Math_fround(3402823466385288598117041.0e14);
     while (1) {
      $14 = $13;
      $18_1 = $5_1;
      $5_1 = $11_1;
      $13 = $8;
      $29_1 = $1963($3, 20);
      $11_1 = $1963($3, 12);
      $19 = $1963($3, 16);
      $16_1 = Math_fround(Math_fround($19 + $1963($3, 24)) - $19);
      $2_1 = Math_imul($6_1, 24);
      $8 = $1963($2_1 + 20548 | 0, 0);
      $38_1 = Math_fround(Math_fround($16_1 * $8) + $19);
      $19 = $1963($2_1 + 20556 | 0, 0);
      $16_1 = Math_fround($38_1 + Math_fround($19 * $22_1));
      $1986($9, 244, $16_1);
      $28_1 = $11_1;
      $32_1 = Math_fround(Math_fround($11_1 + $29_1) - $11_1);
      $11_1 = $1963($2_1 + 20544 | 0, 0);
      $28_1 = Math_fround($28_1 + Math_fround($32_1 * $11_1));
      $29_1 = $1963($2_1 + 20552 | 0, 0);
      $30 = Math_fround($28_1 + Math_fround($29_1 * $22_1));
      $1986($9, 240, $30);
      $32_1 = $38_1;
      $38_1 = Math_fround($24 * $19);
      $1986($9, 236, Math_fround($32_1 - $38_1));
      $32_1 = $28_1;
      $28_1 = Math_fround($24 * $29_1);
      $32_1 = Math_fround($32_1 - $28_1);
      $1986($9, 232, $32_1);
      if ($30 < $32_1) {
       $1986($9, 240, $32_1);
       $1986($9, 232, $30);
      }
      $30 = $1963($9, 236);
      if ($16_1 < $30) {
       $1986($9, 244, $30);
       $1986($9, 236, $16_1);
      }
      $7_1 = $4_1;
      $2_1 = $6_1;
      $1973($9, 216, $2_1);
      $4_1 = 4;
      $6_1 = $9 + 216 | 0;
      $10_1 = $1944((($1944($3, 196) << 2) + $1944($3, 204) | 0) - 4 | 0, 0) ^ -1;
      while (1) {
       $17_1 = $6_1;
       $6_1 = $6_1 + 1 | 0;
       $10_1 = $1944((($1937($17_1, 0) ^ $10_1 & 255) << 2) + 19360 | 0, 0) ^ $10_1 >>> 8;
       $4_1 = $4_1 - 1 | 0;
       if ($4_1) {
        continue
       }
       break;
      };
      $6_1 = $1944(0, 73568);
      $4_1 = $10_1 ^ -1;
      if (($1944($6_1, 7136) | 0) == ($4_1 | 0)) {
       $1973($6_1, 7140, $4_1)
      }
      if (($1944($6_1, 7196) | 0) == ($4_1 | 0)) {
       $1968($6_1, 7200, 1)
      }
      if (($1944($6_1, 7112) | 0) == ($4_1 | 0)) {
       $75($4_1, 4, $2_1)
      }
      $569($9 + 232 | 0, $4_1, $9 + 264 | 0, $9 + 256 | 0, 264192);
      $6_1 = $1937($9, 264);
      $4_1 = $1937($9, 256);
      if (($6_1 | $4_1) & 255) {
       $1973($25_1, 7872, $2_1 & 1 ? 5 : 6)
      }
      label$239 : {
       label$240 : {
        if (!($4_1 & 255)) {
         $8 = $14;
         $11_1 = $18_1;
         break label$240;
        }
        if (!($2_1 | ($1941($25_1, 1002) | 0) != 2)) {
         $150($9 + 216 | 0, $3, $9 + 136 | 0);
         $11_1 = $1963($9, 220);
         $8 = $1963($9, 216);
         $4_1 = $1944(0, 73568);
         $6_1 = $1944($4_1, 7136);
         $1968($4_1, 7148, ($6_1 | 0) != 0);
         if ($6_1) {
          $1973($4_1, 7192, -1);
          $1969($4_1, 7151, 0);
          $1973($4_1, 7144, 0);
         }
         $1973($4_1, 7184, 0);
         $1969($4_1, 7149, 0);
         $1973($4_1, 7136, 0);
         $1983($4_1, 7168, 0, 0);
         $1982($4_1, 7156, 0, 0);
         $1969($4_1, 7153, 0);
         $7_1 = 1;
         break label$239;
        }
        $14 = $1963($3, 24);
        $5_1 = $1963($3, 16);
        $18_1 = $1963($25_1, 7180);
        $16_1 = $1963($25_1, 232);
        $30 = $11_1 == Math_fround(1.0) ? $56_1 : Math_fround(-3402823466385288598117041.0e14);
        $4_1 = $11_1 == Math_fround(0.0);
        $32_1 = $4_1 ? $54_1 : Math_fround(3402823466385288598117041.0e14);
        $13 = Math_fround(Math_fround(Math_fround(Math_fround(Math_fround($29_1 * $27_1) - $28_1) * $11_1) + $28_1) + Math_fround($1963($25_1, 228) - $1963($25_1, 7176)));
        $13 = $13 < $30 ? $30 : $13 > $32_1 ? $32_1 : $13;
        $29_1 = $1963($3, 12);
        $30 = Math_fround($29_1 + $1963($3, 20));
        $29_1 = Math_fround(Math_fround(Math_fround($29_1 - $13) * $11_1) + $13);
        $30 = Math_fround(Math_fround(Math_fround(Math_fround($13 - $30) * $11_1) + $30) - $29_1);
        $1986($9, 216, $30);
        $11_1 = $8 == Math_fround(1.0) ? $55_1 : Math_fround(-3402823466385288598117041.0e14);
        $6_1 = $8 == Math_fround(0.0);
        $28_1 = $6_1 ? $53_1 : Math_fround(3402823466385288598117041.0e14);
        $13 = Math_fround(Math_fround(Math_fround(Math_fround(Math_fround($19 * $27_1) - $38_1) * $8) + $38_1) + Math_fround($16_1 - $18_1));
        $13 = $11_1 > $13 ? $11_1 : $13 > $28_1 ? $28_1 : $13;
        $11_1 = Math_fround(Math_fround(Math_fround($5_1 - $13) * $8) + $13);
        $5_1 = Math_fround($5_1 + $14);
        $13 = Math_fround(Math_fround(Math_fround(Math_fround($13 - $5_1) * $8) + $5_1) - $11_1);
        $1986($9, 220, $13);
        $150($9 - -64 | 0, $3, $9 + 216 | 0);
        $8 = $1963($9, 64);
        $5_1 = Math_fround($29_1 - ($4_1 ? Math_fround($8 - $30) : Math_fround(0.0)));
        $14 = $11_1;
        $11_1 = $1963($9, 68);
        $13 = Math_fround($14 - ($6_1 ? Math_fround($11_1 - $13) : Math_fround(0.0)));
       }
      }
      $17_1 = $7_1;
      $16_1 = $13;
      $19 = $5_1;
      $5_1 = $11_1;
      $13 = $8;
      $4_1 = $1937($9, 264);
      $6_1 = $1937($9, 256);
      if ($4_1 & 255 | (!$2_1 | $6_1 & 255)) {
       $7_1 = $1944(0, 73568);
       $4_1 = ($7_1 + 5416 | 0) + (($6_1 & 255 ? 32 : $4_1 & 255 ? 31 : 30) << 4) | 0;
       $8 = $1963($4_1 + 204 | 0, 0);
       $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
       label$246 : {
        if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
         $6_1 = ~~$8;
         break label$246;
        }
        $6_1 = -2147483648;
       }
       $6_1 = $6_1 << 8;
       $8 = $1963($4_1 + 200 | 0, 0);
       $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
       label$248 : {
        if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
         $10_1 = ~~$8;
         break label$248;
        }
        $10_1 = -2147483648;
       }
       $6_1 = $10_1 | $6_1;
       $8 = $1963($4_1 + 208 | 0, 0);
       $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
       label$250 : {
        if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
         $10_1 = ~~$8;
         break label$250;
        }
        $10_1 = -2147483648;
       }
       $6_1 = $6_1 | $10_1 << 16;
       $10_1 = ($9 + 80 | 0) + ($2_1 << 2) | 0;
       $8 = Math_fround($1963($4_1 + 212 | 0, 0) * $1963($7_1, 5416));
       $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
       label$252 : {
        if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
         $4_1 = ~~$8;
         break label$252;
        }
        $4_1 = -2147483648;
       }
       $1973($10_1, 0, $6_1 | $4_1 << 24);
      }
      $4_1 = $17_1;
      $8 = $16_1;
      $11_1 = $19;
      $6_1 = $2_1 + 1 | 0;
      if (($42_1 | 0) != ($6_1 | 0)) {
       continue
      }
      break;
     };
     label$254 : {
      if (!$23_1) {
       $7_1 = -1;
       $14 = $13;
       $18_1 = $5_1;
       break label$254;
      }
      $57_1 = $1944($9, 116);
      $58_1 = $1944($9, 112);
      $27_1 = $1963($9, 108);
      $24 = $1963($9, 104);
      $59_1 = $9 + 240 | 0;
      $4_1 = -1;
      $6_1 = 0;
      while (1) {
       $7_1 = $4_1;
       $14 = $1963($3, 16);
       $18_1 = Math_fround($14 + $1963($3, 24));
       $19 = $1963($3, 12);
       $16_1 = Math_fround($19 + $1963($3, 20));
       label$257 : {
        label$258 : {
         label$259 : {
          label$260 : {
           label$261 : {
            label$262 : {
             $2_1 = $6_1;
             switch ($2_1 | 0) {
             case 3:
              break label$259;
             case 2:
              break label$260;
             case 1:
              break label$261;
             case 0:
              break label$262;
             default:
              break label$258;
             };
            }
            $1986($9, 244, Math_fround($18_1 - $22_1));
            $1986($9, 240, Math_fround($19 + Math_fround(4.0)));
            $1986($9, 236, Math_fround($14 + $22_1));
            $1986($9, 232, Math_fround($19 + Math_fround(-4.0)));
            break label$257;
           }
           $1986($9, 244, Math_fround($18_1 - $22_1));
           $1986($9, 240, Math_fround($16_1 + Math_fround(4.0)));
           $1986($9, 236, Math_fround($14 + $22_1));
           $1986($9, 232, Math_fround($16_1 + Math_fround(-4.0)));
           break label$257;
          }
          $1986($9, 244, Math_fround($14 + Math_fround(4.0)));
          $1986($9, 240, Math_fround($16_1 - $22_1));
          $1986($9, 236, Math_fround($14 + Math_fround(-4.0)));
          $1986($9, 232, Math_fround($19 + $22_1));
          break label$257;
         }
         $1986($9, 244, Math_fround($18_1 + Math_fround(4.0)));
         $1986($9, 240, Math_fround($16_1 - $22_1));
         $1986($9, 236, Math_fround($18_1 + Math_fround(-4.0)));
         $1986($9, 232, Math_fround($19 + $22_1));
         break label$257;
        }
        $1983($59_1, 0, 0, 0);
        $1983($9, 232, 0, 0);
       }
       $48_1 = $2_1 + 4 | 0;
       $1973($9, 216, $48_1);
       $4_1 = 4;
       $6_1 = $9 + 216 | 0;
       $10_1 = $1944((($1944($3, 196) << 2) + $1944($3, 204) | 0) - 4 | 0, 0) ^ -1;
       while (1) {
        $23_1 = $6_1;
        $6_1 = $6_1 + 1 | 0;
        $10_1 = $1944((($1937($23_1, 0) ^ $10_1 & 255) << 2) + 19360 | 0, 0) ^ $10_1 >>> 8;
        $4_1 = $4_1 - 1 | 0;
        if ($4_1) {
         continue
        }
        break;
       };
       $6_1 = $1944(0, 73568);
       $4_1 = $10_1 ^ -1;
       if (($1944($6_1, 7136) | 0) == ($4_1 | 0)) {
        $1973($6_1, 7140, $4_1)
       }
       if (($1944($6_1, 7196) | 0) == ($4_1 | 0)) {
        $1968($6_1, 7200, 1)
       }
       if (($1944($6_1, 7112) | 0) == ($4_1 | 0)) {
        $75($4_1, 4, $48_1)
       }
       $14 = $11_1;
       $18_1 = $8;
       $6_1 = $2_1 >>> 0 > 1;
       $569($9 + 232 | 0, $4_1, $9 + 256 | 0, $9 + 248 | 0, 264192);
       label$267 : {
        label$268 : {
         if ($1937($9, 256)) {
          if ($1963($25_1, 7128) > Math_fround(.03999999910593033)) {
           break label$268
          }
          if ($1937($9, 248) & 255) {
           break label$268
          }
          break label$267;
         }
         if ($1937($9, 248)) {
          break label$268
         }
         break label$267;
        }
        $1973($25_1, 7872, $6_1 ? 3 : 4);
        $7_1 = $1937($9, 248) ? $2_1 : $7_1;
       }
       $4_1 = $7_1;
       $8 = $13;
       $11_1 = $5_1;
       $5_1 = $14;
       $13 = $18_1;
       if ($1937($9, 248)) {
        $1983($9, 264, $1959($3, 12), i64toi32_i32$HIGH_BITS);
        $6_1 = $6_1 << 2;
        $5_1 = $1963($6_1 + $52_1 | 0, 0);
        $1986($6_1 | $9 + 264, 0, Math_fround(Math_fround($5_1 - $1963($6_1 + $37 | 0, 0)) + Math_fround(4.0)));
        $8 = ($2_1 | 0) == 1 ? $24 : Math_fround(-3402823466385288598117041.0e14);
        $13 = (wasm2js_scratch_store_i32(2, $2_1 ? 2139095039 : $58_1), wasm2js_scratch_load_f32());
        $5_1 = $1963($9, 264);
        $5_1 = $5_1 < $8 ? $8 : $5_1 > $13 ? $13 : $5_1;
        $1986($9, 264, $5_1);
        $6_1 = Math_imul($2_1, 28);
        $13 = $1963($6_1 + 20660 | 0, 0);
        $11_1 = $1963($6_1 + 20652 | 0, 0);
        $14 = ($2_1 | 0) == 3 ? $27_1 : Math_fround(-3402823466385288598117041.0e14);
        $18_1 = (wasm2js_scratch_store_i32(2, ($2_1 | 0) != 2 ? 2139095039 : $57_1), wasm2js_scratch_load_f32());
        $8 = $1963($9, 268);
        $8 = $8 < $14 ? $14 : $8 > $18_1 ? $18_1 : $8;
        $1986($9, 268, $8);
        $19 = $1963($3, 20);
        $14 = $1963($3, 12);
        $16_1 = $1963($3, 16);
        $18_1 = Math_fround($16_1 + $1963($3, 24));
        $13 = $11_1 < $13 ? $11_1 : $13;
        $11_1 = Math_fround(Math_fround(Math_fround($16_1 - $8) * $13) + $8);
        $16_1 = Math_fround(Math_fround(Math_fround(Math_fround($8 - $18_1) * $13) + $18_1) - $11_1);
        $1986($9, 220, $16_1);
        $8 = $1963($6_1 + 20648 | 0, 0);
        $18_1 = $1963($6_1 + 20656 | 0, 0);
        $18_1 = $8 < $18_1 ? $8 : $18_1;
        $8 = Math_fround(Math_fround(Math_fround($14 - $5_1) * $18_1) + $5_1);
        $28_1 = $5_1;
        $5_1 = Math_fround($14 + $19);
        $5_1 = Math_fround(Math_fround(Math_fround(Math_fround($28_1 - $5_1) * $18_1) + $5_1) - $8);
        $1986($9, 216, $5_1);
        $150($9 - -64 | 0, $3, $9 + 216 | 0);
        $14 = $8;
        $8 = $1963($9, 64);
        $5_1 = Math_fround($14 - ($18_1 == Math_fround(0.0) ? Math_fround($8 - $5_1) : Math_fround(0.0)));
        $14 = $11_1;
        $11_1 = $1963($9, 68);
        $13 = Math_fround($14 - ($13 == Math_fround(0.0) ? Math_fround($11_1 - $16_1) : Math_fround(0.0)));
       }
       $7_1 = $4_1;
       $14 = $8;
       $18_1 = $11_1;
       $11_1 = $5_1;
       $19 = $5_1;
       $8 = $13;
       $16_1 = $8;
       $5_1 = $18_1;
       $13 = $14;
       $6_1 = $2_1 + 1 | 0;
       if (($6_1 | 0) != 4) {
        continue
       }
       break;
      };
     }
     $11_1 = $18_1;
     $4_1 = $7_1;
     $2_1 = $1944($1944(0, 73568), 7080);
     $1973($2_1, 196, $1944($2_1, 196) - 1 | 0);
     $1973($3, 292, 0);
     $2_1 = $1944($25_1, 7844);
     label$271 : {
      if (!$2_1) {
       break label$271
      }
      if (($1944($2_1, 736) | 0) != ($3 | 0)) {
       break label$271
      }
      $2_1 = $1944($25_1, 7560);
      label$273 : {
       if (($2_1 | 0) != 2) {
        $13 = Math_fround(0.0);
        $5_1 = Math_fround(0.0);
        break label$273;
       }
       $13 = Math_fround(0.0);
       $5_1 = Math_fround(0.0);
       if (!$1937($25_1 + 253 | 0, 0)) {
        break label$273
       }
       $154($9 + 232 | 0, 1, 0, Math_fround(0.0), Math_fround(0.0));
       $13 = $1963($9, 232);
       $5_1 = $1963($9, 236);
      }
      if (($2_1 | 0) == 3) {
       $154($9 + 232 | 0, 4, 0, Math_fround(0.0), Math_fround(0.0));
       $13 = $1963($9, 232);
       $5_1 = $1963($9, 236);
      }
      if ($13 == Math_fround(0.0) & $5_1 == Math_fround(0.0)) {
       break label$271
      }
      $14 = $1963($3, 20);
      $18_1 = $1963($3, 12);
      $22_1 = $1963($3, 24);
      $27_1 = $1963($3, 16);
      $24 = $1963($9, 104);
      $29_1 = $1963($9, 108);
      $1968($25_1, 7864, 0);
      $1968($25_1, 7571, 1);
      $30 = $1963($25_1 + 24 | 0, 0);
      $8 = $1963($25_1 + 172 | 0, 0);
      $11_1 = $1963($25_1 + 168 | 0, 0);
      $1973($9, 80, $51(32, Math_fround(1.0)));
      $38_1 = $1963($3, 28);
      $28_1 = $5_1;
      $5_1 = Math_fround(Math_fround($30 * Math_fround(600.0)) * ($8 > $11_1 ? $11_1 : $8));
      label$277 : {
       if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
        $2_1 = ~~$5_1;
        break label$277;
       }
       $2_1 = -2147483648;
      }
      $5_1 = Math_fround($2_1 | 0);
      $8 = Math_fround($28_1 * $5_1);
      $11_1 = Math_fround(Math_fround($29_1 - $27_1) - $22_1);
      $1986($9, 220, Math_fround(($8 >= $11_1 ? $8 : $11_1) + $1963($3 + 32 | 0, 0)));
      $5_1 = Math_fround($13 * $5_1);
      $8 = Math_fround(Math_fround($24 - $18_1) - $14);
      $1986($9, 216, Math_fround($38_1 + ($5_1 >= $8 ? $5_1 : $8)));
      $150($9 + 232 | 0, $3, $9 + 216 | 0);
      $14 = $1963($9, 232);
      $11_1 = $1963($9, 236);
     }
     label$279 : {
      if ($14 == Math_fround(3402823466385288598117041.0e14)) {
       break label$279
      }
      $1986($3, 28, $14);
      $1986($3 + 32 | 0, 0, $11_1);
      if ($1937($3 + 9 | 0, 0) & 1) {
       break label$279
      }
      $2_1 = $1944(0, 73568);
      if (!($1963($2_1, 12128) <= Math_fround(0.0))) {
       break label$279
      }
      $1986($2_1, 12128, $1963($2_1 + 28 | 0, 0));
     }
     label$280 : {
      if ($19 == Math_fround(3402823466385288598117041.0e14)) {
       break label$280
      }
      $1986($3, 16, Math_fround((Math_fround(Math_abs($16_1)) < Math_fround(2147483648.0) ? ~~$16_1 : -2147483648) | 0));
      $1986($3, 12, Math_fround((Math_fround(Math_abs($19)) < Math_fround(2147483648.0) ? ~~$19 : -2147483648) | 0));
      if ($1937($3 + 9 | 0, 0) & 1) {
       break label$280
      }
      $2_1 = $1944(0, 73568);
      if (!($1963($2_1, 12128) <= Math_fround(0.0))) {
       break label$280
      }
      $1986($2_1, 12128, $1963($2_1 + 28 | 0, 0));
     }
     $1982($3, 20, $1959($3, 28), i64toi32_i32$HIGH_BITS);
     $2_1 = $17_1;
    }
    $10_1 = $12_1 | $2_1;
    $2_1 = $2_1 | $20_1;
   }
   $27_1 = Math_fround($50_1 + $51_1);
   $1968($3, 149, $4_1);
   if (!$1937($3, 141)) {
    $13 = Math_fround(Math_fround($1963($3 + 444 | 0, 0) - $1963($3 + 436 | 0, 0)) + $1963($3 + 132 | 0, 0));
    $11_1 = Math_fround($1963($3 + 32 | 0, 0) - $27_1);
    label$286 : {
     if (!$35_1) {
      $5_1 = Math_fround(0.0);
      $8 = Math_fround(0.0);
      break label$286;
     }
     $5_1 = $1963($3, 60);
     $5_1 = Math_fround(Math_fround($5_1 + $5_1) + $1963($3, 36));
     $8 = $1963($3 - -64 | 0, 0);
     $8 = Math_fround(Math_fround($8 + $8) + $1963($3 + 40 | 0, 0));
    }
    $14 = $1963($3 + 440 | 0, 0);
    $18_1 = $1963($3, 432);
    $19 = $1963($3, 128);
    $16_1 = $1963($3, 28);
    $13 = $2_1 & 1 ? $11_1 : $13;
    $2_1 = $21_1 & 16384 ? 1 : !($21_1 & 8) & $13 < $8;
    $1968($3, 137, $2_1);
    $4_1 = 1;
    label$289 : {
     if ($21_1 & 32768) {
      break label$289
     }
     $14 = $10_1 & 1 ? $16_1 : Math_fround(Math_fround($14 - $18_1) + $19);
     if ($2_1) {
      $11_1 = $1963($15_1 + 5532 | 0, 0)
     } else {
      $11_1 = Math_fround(0.0)
     }
     $4_1 = 0;
     if (!(Math_fround($14 - $11_1) < $5_1)) {
      break label$289
     }
     $4_1 = 0;
     if ($21_1 & 8) {
      break label$289
     }
     $4_1 = ($21_1 & 2048) >>> 11 | 0;
    }
    $1968($3, 136, $4_1);
    if (!($2_1 | $4_1 ^ 1)) {
     $1968($3, 137, !($21_1 & 8) & $8 > $13)
    }
    $8 = Math_fround(0.0);
    if ($1937($3, 137)) {
     $5_1 = $1963($15_1 + 5532 | 0, 0)
    } else {
     $5_1 = Math_fround(0.0)
    }
    if ($4_1) {
     $8 = $1963($15_1 + 5532 | 0, 0)
    }
    $1986($3, 128, $5_1);
    $1986($3 + 132 | 0, 0, $8);
   }
   $11_1 = $1963($3 + 16 | 0, 0);
   $14 = Math_fround($11_1 + $1963($3 + 24 | 0, 0));
   $2_1 = $9 + 120 | 0;
   $7_1 = !$36_1 | ($33_1 | 0) != 0;
   $2_1 = $7_1 ? $2_1 : ($39_1 | 0) == 50331648 ? $2_1 : $26_1 + 496 | 0;
   $4_1 = $1944($2_1, 12);
   $6_1 = $1944($2_1, 8);
   $8 = $1963($2_1, 4);
   $13 = $1963($2_1, 0);
   $19 = $1963($3, 12);
   $18_1 = $1963($3, 20);
   $16_1 = Math_fround($19 + $18_1);
   $22_1 = $1963($3, 28);
   $24 = $1963($3, 12);
   $5_1 = Math_fround(0.0);
   if (!($1937($3, 8) & 1)) {
    $2_1 = $1944(0, 73568);
    $5_1 = Math_fround($1963($2_1, 6472) * $1963($3, 572));
    $10_1 = $1944($3, 728);
    if ($10_1) {
     $5_1 = Math_fround($5_1 * $1963($10_1, 572))
    }
    $29_1 = $1963($2_1 + 5480 | 0, 0);
    $5_1 = Math_fround(Math_fround($29_1 + $29_1) + $5_1);
   }
   $2_1 = $1959($3, 12);
   $10_1 = i64toi32_i32$HIGH_BITS;
   $1986($9 + 76 | 0, 0, Math_fround($11_1 + $5_1));
   $1986($9, 72, Math_fround($24 + $22_1));
   $1983($9, 64, $2_1, $10_1);
   $1986($3 + 420 | 0, 0, $8 <= $11_1 ? $11_1 : $8);
   $1986($3, 416, $13 <= $19 ? $19 : $13);
   $22_1 = Math_fround($27_1 + $11_1);
   $1986($3 + 436 | 0, 0, $22_1);
   $5_1 = (wasm2js_scratch_store_i32(2, $6_1), wasm2js_scratch_load_f32());
   $1986($3 + 424 | 0, 0, $5_1 > $16_1 ? $16_1 : $5_1);
   $11_1 = (wasm2js_scratch_store_i32(2, $4_1), wasm2js_scratch_load_f32());
   $1986($3 + 428 | 0, 0, $11_1 > $14 ? $14 : $11_1);
   $19 = $1963($3, 12);
   $1986($3, 432, $19);
   $14 = Math_fround($14 - $1963($3 + 132 | 0, 0));
   $1986($3 + 444 | 0, 0, $14);
   $24 = Math_fround(Math_fround($18_1 + $19) - $1963($3, 128));
   $1986($3 + 440 | 0, 0, $24);
   $29_1 = $1963(($21_1 & 1025) == 1 ? $3 + 72 | 0 : $15_1 + 5488 | 0, 0);
   $10_1 = $3 + 460 | 0;
   $16_1 = Math_fround($14 + Math_fround(.5));
   $14 = $1963($3, 72);
   $16_1 = Math_fround($16_1 - $14);
   label$299 : {
    if (Math_fround(Math_abs($16_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$16_1;
     break label$299;
    }
    $2_1 = -2147483648;
   }
   $16_1 = Math_fround($2_1 | 0);
   $1986($10_1, 0, $8 > $16_1 ? $8 : $11_1 < $16_1 ? $11_1 : $16_1);
   $10_1 = $3 + 452 | 0;
   $16_1 = Math_fround(Math_fround($22_1 + Math_fround(.5)) + $29_1);
   label$301 : {
    if (Math_fround(Math_abs($16_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$16_1;
     break label$301;
    }
    $2_1 = -2147483648;
   }
   $16_1 = Math_fround($2_1 | 0);
   $1986($10_1, 0, $8 > $16_1 ? $8 : $11_1 < $16_1 ? $11_1 : $16_1);
   $10_1 = $3 + 456 | 0;
   $16_1 = Math_fround($24 + Math_fround(.5));
   $11_1 = Math_fround($1963($3, 60) * Math_fround(.5));
   label$303 : {
    if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$11_1;
     break label$303;
    }
    $2_1 = -2147483648;
   }
   $11_1 = Math_fround($2_1 | 0);
   $14 = $11_1 >= $14 ? $11_1 : $14;
   $11_1 = Math_fround($16_1 - $14);
   label$305 : {
    if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$11_1;
     break label$305;
    }
    $2_1 = -2147483648;
   }
   $11_1 = Math_fround($2_1 | 0);
   $1986($10_1, 0, $11_1 < $13 ? $13 : $5_1 < $11_1 ? $5_1 : $11_1);
   $11_1 = Math_fround(Math_fround($19 + Math_fround(.5)) + $14);
   label$307 : {
    if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$11_1;
     break label$307;
    }
    $2_1 = -2147483648;
   }
   $11_1 = Math_fround($2_1 | 0);
   $1986($3, 448, $11_1 < $13 ? $13 : $5_1 < $11_1 ? $5_1 : $11_1);
   if ($45_1 | (!($18_1 > Math_fround(0.0)) | $46_1)) {
    $5_1 = Math_fround($1963($15_1, 6468) * Math_fround(16.0))
   } else {
    $5_1 = Math_fround($18_1 * Math_fround(.6499999761581421))
   }
   label$311 : {
    if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$5_1;
     break label$311;
    }
    $2_1 = -2147483648;
   }
   $1986($3, 544, Math_fround($2_1 | 0));
   $5_1 = $1963($3, 60);
   $5_1 = Math_fround(Math_fround(Math_fround($5_1 + $5_1) + $1963($3, 36)) - Math_fround($1963($3 + 440 | 0, 0) - $1963($3, 432)));
   $1986($3, 96, $5_1 <= Math_fround(0.0) ? Math_fround(0.0) : $5_1);
   $5_1 = $1963($3 - -64 | 0, 0);
   $5_1 = Math_fround(Math_fround(Math_fround($5_1 + $5_1) + $1963($3 + 40 | 0, 0)) - Math_fround($1963($3 + 444 | 0, 0) - $1963($3 + 436 | 0, 0)));
   $1986($3 + 100 | 0, 0, $5_1 <= Math_fround(0.0) ? Math_fround(0.0) : $5_1);
   $155($9 + 232 | 0, $3);
   $1982($3, 88, $1960($9, 232), i64toi32_i32$HIGH_BITS);
   $1982($3, 104, 2139095039, 2139095039);
   $381($1944($3, 580), $1944($1944($1944($15_1, 6464), 48), 4));
   $2_1 = $1944($1944(0, 73568), 7080);
   $1968($2_1, 140, 1);
   $10_1 = $1944($2_1, 580);
   $1986($9, 236, $8);
   $1986($9, 232, $13);
   $1973($9, 220, $4_1);
   $1973($9, 216, $6_1);
   $1983($9, 56, $1960($9, 232), i64toi32_i32$HIGH_BITS);
   $1983($9, 48, $1960($9, 216), i64toi32_i32$HIGH_BITS);
   $378($10_1, $9 + 56 | 0, $9 + 48 | 0, 0);
   $4_1 = $1944($2_1, 580);
   $4_1 = (($1944($4_1, 60) << 4) + $1944($4_1 + 68 | 0, 0) | 0) - 16 | 0;
   $6_1 = $1959($4_1, 0);
   $10_1 = i64toi32_i32$HIGH_BITS;
   $1982($2_1 + 504 | 0, 0, $1959($4_1, 8), i64toi32_i32$HIGH_BITS);
   $1982($2_1, 496, $6_1, $10_1);
   $6_1 = 0;
   label$313 : {
    if ($7_1 | ($39_1 | 0) == 50331648) {
     break label$313
    }
    $4_1 = 0;
    $2_1 = $1944($26_1 + 352 | 0, 0);
    if (($2_1 | 0) >= 2) {
     $4_1 = $1944(($1944($26_1 + 360 | 0, 0) + ($2_1 << 2) | 0) - 8 | 0, 0)
    }
    $2_1 = 0;
    label$315 : {
     if (!$4_1) {
      break label$315
     }
     $5_1 = $1963($3, 16);
     $8 = $1963($4_1 + 16 | 0, 0);
     $2_1 = 0;
     if (!($5_1 < Math_fround($8 + $1963($4_1 + 24 | 0, 0)))) {
      break label$315
     }
     $2_1 = 0;
     if (!($8 < Math_fround($5_1 + $1963($3, 24)))) {
      break label$315
     }
     $5_1 = $1963($3, 12);
     $8 = $1963($4_1, 12);
     $2_1 = 0;
     if (!($5_1 < Math_fround($8 + $1963($4_1, 20)))) {
      break label$315
     }
     $2_1 = $8 < Math_fround($5_1 + $1963($3, 20));
    }
    $4_1 = $1944($3, 580);
    $6_1 = 0;
    if ($1944((Math_imul($1944($4_1, 0), 40) + $1944($4_1, 8) | 0) - 12 | 0, 0)) {
     break label$313
    }
    $6_1 = 0;
    if (($1944($1944($26_1, 580), 24) | 0) <= 0) {
     break label$313
    }
    $6_1 = $2_1 ^ 1;
   }
   $2_1 = $6_1;
   $20_1 = $2_1;
   if ($2_1) {
    $1973($3, 580, $1944($26_1, 580))
   }
   $2_1 = $1944($15_1, 7844);
   if (!$2_1) {
    $2_1 = $1944($15_1, 7508)
   }
   $10_1 = 1;
   label$322 : {
    if ($34_1) {
     break label$322
    }
    $10_1 = 0;
    if (!$2_1) {
     break label$322
    }
    $10_1 = ($1944($3, 744) | 0) == ($1944($2_1, 744) | 0);
   }
   $2_1 = $1944(0, 73568);
   $1968($3, 143, 0);
   $13 = $1963($3, 72);
   $11_1 = $1963($3, 68);
   label$324 : {
    if ($1937($3, 141)) {
     $4_1 = $2_1 + 5488 | 0;
     $14 = $1963($4_1, 0);
     $1986($4_1, 0, $13);
     $6_1 = $2_1 + 5416 | 0;
     if ($10_1) {
      $4_1 = $1937($2_1, 7570) ? 12 : 11
     } else {
      $4_1 = 12
     }
     $4_1 = $6_1 + ($4_1 << 4) | 0;
     $18_1 = $1963($4_1 + 212 | 0, 0);
     $5_1 = $1963($4_1 + 208 | 0, 0);
     $8 = $1963($4_1 + 200 | 0, 0);
     $13 = $1963($4_1 + 204 | 0, 0);
     $19 = $1963($2_1, 5416);
     $4_1 = $1960($9, 64);
     $6_1 = i64toi32_i32$HIGH_BITS;
     $1983($9, 232, $4_1, $6_1);
     $7_1 = $1960($9, 72);
     $10_1 = i64toi32_i32$HIGH_BITS;
     $1983($9, 216, $7_1, $10_1);
     $1983($9, 40, $4_1, $6_1);
     $1983($9, 32, $7_1, $10_1);
     $13 = Math_fround(Math_fround(($13 < Math_fround(0.0) ? Math_fround(0.0) : $13 > Math_fround(1.0) ? Math_fround(1.0) : $13) * Math_fround(255.0)) + Math_fround(.5));
     label$327 : {
      if (Math_fround(Math_abs($13)) < Math_fround(2147483648.0)) {
       $4_1 = ~~$13;
       break label$327;
      }
      $4_1 = -2147483648;
     }
     $4_1 = $4_1 << 8;
     $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
     label$329 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $6_1 = ~~$8;
       break label$329;
      }
      $6_1 = -2147483648;
     }
     $4_1 = $6_1 | $4_1;
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$331 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $6_1 = ~~$5_1;
       break label$331;
      }
      $6_1 = -2147483648;
     }
     $4_1 = $4_1 | $6_1 << 16;
     $7_1 = $9 + 40 | 0;
     $10_1 = $9 + 32 | 0;
     $5_1 = Math_fround($18_1 * $19);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$333 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $6_1 = ~~$5_1;
       break label$333;
      }
      $6_1 = -2147483648;
     }
     $71($7_1, $10_1, $4_1 | $6_1 << 24, 1, $11_1);
     $1986($2_1, 5488, $14);
     break label$324;
    }
    $4_1 = $1944($3, 8);
    if (!($4_1 & 128)) {
     $6_1 = ($2_1 + 5416 | 0) + (($4_1 & 100663296 ? 4 : $4_1 & 16777216 ? 3 : 2) << 4) | 0;
     $5_1 = $1963($6_1 + 204 | 0, 0);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$336 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $7_1 = ~~$5_1;
       break label$336;
      }
      $7_1 = -2147483648;
     }
     $5_1 = $1963($6_1 + 200 | 0, 0);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$338 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $12_1 = ~~$5_1;
       break label$338;
      }
      $12_1 = -2147483648;
     }
     $5_1 = $1963($6_1 + 208 | 0, 0);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$340 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $17_1 = ~~$5_1;
       break label$340;
      }
      $17_1 = -2147483648;
     }
     $5_1 = Math_fround($1963($6_1 + 212 | 0, 0) * $1963($2_1, 5416));
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$342 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $23_1 = ~~$5_1;
       break label$342;
      }
      $23_1 = -2147483648;
     }
     $8 = Math_fround(1.0);
     $25_1 = $1944($2_1, 7300) & 64;
     if ($25_1) {
      $8 = $1963($2_1 + 7384 | 0, 0)
     }
     $6_1 = $7_1 << 8 | $12_1 | $17_1 << 16;
     if ($25_1) {
      $7_1 = $6_1 & 16777215;
      $5_1 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
      label$347 : {
       if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
        $6_1 = ~~$5_1;
        break label$347;
       }
       $6_1 = -2147483648;
      }
      $6_1 = $7_1 | $6_1 << 24;
     } else {
      $6_1 = $6_1 | $23_1 << 24
     }
     $12_1 = $1944($3, 580);
     $7_1 = 0;
     $14 = Math_fround(0.0);
     if (!($4_1 & 1)) {
      $8 = Math_fround($1963($2_1, 6472) * $1963($3, 572));
      $7_1 = $1944($3, 728);
      if ($7_1) {
       $8 = Math_fround($8 * $1963($7_1, 572))
      }
      $5_1 = $1963($2_1 + 5480 | 0, 0);
      $14 = Math_fround(Math_fround($5_1 + $5_1) + $8);
      $7_1 = 192;
     }
     $5_1 = $1963($3, 12);
     $8 = $1963($3, 16);
     $1986($9, 236, Math_fround($14 + $8));
     $1986($9, 232, Math_fround($5_1 + Math_fround(0.0)));
     $14 = $1963($3, 20);
     $1986($9, 220, Math_fround($8 + $1963($3, 24)));
     $1986($9, 216, Math_fround($5_1 + $14));
     $401($12_1, $9 + 232 | 0, $9 + 216 | 0, $6_1, $11_1, $7_1);
    }
    $7_1 = $4_1 & 1;
    if (!$7_1) {
     $12_1 = $1944(0, 73568);
     $6_1 = ($12_1 + 5416 | 0) + ($10_1 ? 176 : 160) | 0;
     $5_1 = $1963($6_1 + 204 | 0, 0);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$353 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $10_1 = ~~$5_1;
       break label$353;
      }
      $10_1 = -2147483648;
     }
     $10_1 = $10_1 << 8;
     $5_1 = $1963($6_1 + 200 | 0, 0);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$355 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $17_1 = ~~$5_1;
       break label$355;
      }
      $17_1 = -2147483648;
     }
     $10_1 = $17_1 | $10_1;
     $17_1 = $9 + 72 | 0;
     $5_1 = $1963($6_1 + 208 | 0, 0);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$357 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $23_1 = ~~$5_1;
       break label$357;
      }
      $23_1 = -2147483648;
     }
     $10_1 = $10_1 | $23_1 << 16;
     $5_1 = Math_fround($1963($6_1 + 212 | 0, 0) * $1963($12_1, 5416));
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$359 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $6_1 = ~~$5_1;
       break label$359;
      }
      $6_1 = -2147483648;
     }
     $401($1944($3, 580), $9 - -64 | 0, $17_1, $10_1 | $6_1 << 24, $11_1, 48);
    }
    $10_1 = $3 + 12 | 0;
    label$361 : {
     if (!($4_1 & 1024)) {
      break label$361
     }
     $8 = Math_fround(0.0);
     $6_1 = $1944($3, 8);
     if (!($6_1 & 1)) {
      $12_1 = $1944(0, 73568);
      $8 = Math_fround($1963($12_1, 6472) * $1963($3, 572));
      $17_1 = $1944($3, 728);
      if ($17_1) {
       $8 = Math_fround($8 * $1963($17_1, 572))
      }
      $5_1 = $1963($12_1 + 5480 | 0, 0);
      $8 = Math_fround(Math_fround($5_1 + $5_1) + $8);
     }
     $14 = $1963($3, 16);
     $19 = $1963($47_1, 0);
     $18_1 = $1963($10_1, 0);
     $5_1 = Math_fround(0.0);
     if ($6_1 & 1024) {
      $6_1 = $1944(0, 73568);
      $5_1 = Math_fround($1963($6_1, 6472) * $1963($3, 572));
      $16_1 = $1963($3, 312);
      $12_1 = $1944($3, 728);
      if ($12_1) {
       $5_1 = Math_fround($5_1 * $1963($12_1, 572))
      }
      $22_1 = $1963($6_1 + 5480 | 0, 0);
      $5_1 = Math_fround(Math_fround($22_1 + $22_1) + Math_fround($16_1 + $5_1));
     }
     $12_1 = $1944($3, 580);
     $16_1 = $1963($3, 20);
     $22_1 = $1963($3, 24);
     $1986($9, 232, Math_fround($13 + $18_1));
     $8 = Math_fround($14 + $8);
     $1986($9, 236, Math_fround(($8 >= $14 ? $8 : $14) + Math_fround(0.0)));
     $5_1 = Math_fround($8 + $5_1);
     $8 = Math_fround($14 + $22_1);
     $5_1 = $5_1 < $8 ? $5_1 : $8;
     $1986($9, 220, $5_1);
     $8 = Math_fround($18_1 + $19);
     $14 = Math_fround($18_1 + $16_1);
     $14 = $8 < $14 ? $8 : $14;
     $1986($9, 216, Math_fround($14 - $13));
     $6_1 = $1944(0, 73568);
     $8 = $1963($6_1 + 5828 | 0, 0);
     $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
     label$368 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $17_1 = ~~$8;
       break label$368;
      }
      $17_1 = -2147483648;
     }
     $17_1 = $17_1 << 8;
     $8 = $1963($6_1 + 5824 | 0, 0);
     $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
     label$370 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $23_1 = ~~$8;
       break label$370;
      }
      $23_1 = -2147483648;
     }
     $17_1 = $23_1 | $17_1;
     $8 = $1963($6_1 + 5832 | 0, 0);
     $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
     label$372 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $23_1 = ~~$8;
       break label$372;
      }
      $23_1 = -2147483648;
     }
     $17_1 = $17_1 | $23_1 << 16;
     $23_1 = $9 + 232 | 0;
     $35_1 = $9 + 216 | 0;
     $8 = Math_fround($1963($6_1 + 5836 | 0, 0) * $1963($6_1, 5416));
     $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
     label$374 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $6_1 = ~~$8;
       break label$374;
      }
      $6_1 = -2147483648;
     }
     $401($12_1, $23_1, $35_1, $17_1 | $6_1 << 24, $7_1 ? $11_1 : Math_fround(0.0), 48);
     $8 = $1963($2_1 + 5488 | 0, 0);
     if (!($8 > Math_fround(0.0))) {
      break label$361
     }
     if (!($5_1 < Math_fround($1963($3, 16) + $1963($3, 24)))) {
      break label$361
     }
     $6_1 = $1944($3, 580);
     $1986($9, 236, $5_1);
     $1986($9, 232, $18_1);
     $1986($9, 220, $5_1);
     $1986($9, 216, $14);
     $2_1 = $1944(0, 73568);
     $5_1 = $1963($2_1 + 5700 | 0, 0);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$376 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $7_1 = ~~$5_1;
       break label$376;
      }
      $7_1 = -2147483648;
     }
     $7_1 = $7_1 << 8;
     $5_1 = $1963($2_1 + 5696 | 0, 0);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$378 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $17_1 = ~~$5_1;
       break label$378;
      }
      $17_1 = -2147483648;
     }
     $7_1 = $17_1 | $7_1;
     $5_1 = $1963($2_1 + 5704 | 0, 0);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$380 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $17_1 = ~~$5_1;
       break label$380;
      }
      $17_1 = -2147483648;
     }
     $7_1 = $7_1 | $17_1 << 16;
     $17_1 = $9 + 232 | 0;
     $12_1 = $9 + 216 | 0;
     $5_1 = Math_fround($1963($2_1 + 5708 | 0, 0) * $1963($2_1, 5416));
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$382 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $2_1 = ~~$5_1;
       break label$382;
      }
      $2_1 = -2147483648;
     }
     $399($6_1, $17_1, $12_1, $7_1 | $2_1 << 24, $8);
    }
    if ($1937($3, 136)) {
     $578(0)
    }
    if ($1937($3, 137)) {
     $578(1)
    }
    if (!($4_1 & 2)) {
     $5_1 = Math_fround($31_1 | 0);
     $8 = Math_fround($11_1 + $13);
     $4_1 = 0;
     while (1) {
      $14 = $1963($3, 16);
      $6_1 = Math_imul($4_1, 24);
      $14 = Math_fround(Math_fround(Math_fround(Math_fround($14 + $1963($3, 24)) - $14) * $1963($6_1 + 20548 | 0, 0)) + $14);
      $2_1 = $4_1 & 1;
      $22_1 = $2_1 ? $5_1 : $13;
      $18_1 = $1963($6_1 + 20556 | 0, 0);
      $24 = Math_fround($14 + Math_fround($22_1 * $18_1));
      $19 = $1963($3, 12);
      $19 = Math_fround(Math_fround(Math_fround(Math_fround($19 + $1963($3, 20)) - $19) * $1963($6_1 + 20544 | 0, 0)) + $19);
      $29_1 = $2_1 ? $13 : $5_1;
      $16_1 = $1963($6_1 + 20552 | 0, 0);
      $30 = Math_fround($19 + Math_fround($29_1 * $16_1));
      $2_1 = $1944($3, 580);
      $12_1 = $1944($2_1, 84);
      $7_1 = $1944($2_1 + 88 | 0, 0);
      label$388 : {
       if (($12_1 | 0) != ($7_1 | 0)) {
        break label$388
       }
       $17_1 = $7_1;
       $7_1 = $7_1 ? $7_1 + (($7_1 | 0) / 2 | 0) | 0 : 8;
       $12_1 = $12_1 + 1 | 0;
       $7_1 = ($7_1 | 0) > ($12_1 | 0) ? $7_1 : $12_1;
       if (($17_1 | 0) >= ($7_1 | 0)) {
        break label$388
       }
       $12_1 = $1944(0, 73568);
       if ($12_1) {
        $12_1 = $12_1 + 876 | 0;
        $1973($12_1, 0, $1944($12_1, 0) + 1 | 0);
       }
       $12_1 = (((wasm2js_i32$1 = $7_1 << 3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
       $17_1 = $1944($2_1 + 92 | 0, 0);
       if ($17_1) {
        $1602($12_1, $17_1, $1944($2_1, 84) << 3);
        $17_1 = $1944($2_1, 92);
        label$393 : {
         if (!$17_1) {
          break label$393
         }
         $23_1 = $1944(0, 73568);
         if (!$23_1) {
          break label$393
         }
         $23_1 = $23_1 + 876 | 0;
         $1973($23_1, 0, $1944($23_1, 0) - 1 | 0);
        }
        ((wasm2js_i32$2 = $17_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
       }
       $1973($2_1, 88, $7_1);
       $1973($2_1, 92, $12_1);
      }
      $7_1 = $1944($2_1 + 92 | 0, 0) + ($1944($2_1, 84) << 3) | 0;
      $1986($7_1, 4, $24);
      $1986($7_1, 0, $30);
      $1973($2_1, 84, $1944($2_1, 84) + 1 | 0);
      $24 = Math_fround($14 + Math_fround($29_1 * $18_1));
      $22_1 = Math_fround($19 + Math_fround($22_1 * $16_1));
      $2_1 = $1944($3, 580);
      $12_1 = $1944($2_1, 84);
      $7_1 = $1944($2_1 + 88 | 0, 0);
      label$394 : {
       if (($12_1 | 0) != ($7_1 | 0)) {
        break label$394
       }
       $17_1 = $7_1;
       $7_1 = $7_1 ? $7_1 + (($7_1 | 0) / 2 | 0) | 0 : 8;
       $12_1 = $12_1 + 1 | 0;
       $7_1 = ($7_1 | 0) > ($12_1 | 0) ? $7_1 : $12_1;
       if (($17_1 | 0) >= ($7_1 | 0)) {
        break label$394
       }
       $12_1 = $1944(0, 73568);
       if ($12_1) {
        $12_1 = $12_1 + 876 | 0;
        $1973($12_1, 0, $1944($12_1, 0) + 1 | 0);
       }
       $12_1 = (((wasm2js_i32$1 = $7_1 << 3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
       $17_1 = $1944($2_1 + 92 | 0, 0);
       if ($17_1) {
        $1602($12_1, $17_1, $1944($2_1, 84) << 3);
        $17_1 = $1944($2_1, 92);
        label$399 : {
         if (!$17_1) {
          break label$399
         }
         $23_1 = $1944(0, 73568);
         if (!$23_1) {
          break label$399
         }
         $23_1 = $23_1 + 876 | 0;
         $1973($23_1, 0, $1944($23_1, 0) - 1 | 0);
        }
        ((wasm2js_i32$2 = $17_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
       }
       $1973($2_1, 88, $7_1);
       $1973($2_1, 92, $12_1);
      }
      $7_1 = $1944($2_1 + 92 | 0, 0) + ($1944($2_1, 84) << 3) | 0;
      $1986($7_1, 4, $24);
      $1986($7_1, 0, $22_1);
      $1973($2_1, 84, $1944($2_1, 84) + 1 | 0);
      $2_1 = $1944($3, 580);
      $1986($9, 236, Math_fround(Math_fround($18_1 * $8) + $14));
      $1986($9, 232, Math_fround(Math_fround($16_1 * $8) + $19));
      $392($2_1, $9 + 232 | 0, $11_1, $1944($6_1 + 20560 | 0, 0), $1944($6_1 + 20564 | 0, 0));
      $2_1 = $1944($3, 580);
      $6_1 = $1944($2_1 + 92 | 0, 0);
      $389($2_1, $6_1, $1944($2_1, 84), $1944(($9 + 80 | 0) + ($4_1 << 2) | 0, 0));
      $1973($2_1, 84, 0);
      $4_1 = $4_1 + 1 | 0;
      if (($42_1 | 0) != ($4_1 | 0)) {
       continue
      }
      break;
     };
    }
    $22_1 = $1963($3, 68);
    $2_1 = $1944(0, 73568);
    $24 = $1963($3, 72);
    label$400 : {
     if (!($24 > Math_fround(0.0))) {
      break label$400
     }
     if ($1937($3, 8) & 128) {
      break label$400
     }
     $4_1 = $1944($3, 580);
     $5_1 = $1963($3, 20);
     $8 = $1963($3, 12);
     $1986($9, 236, Math_fround($1963($3, 16) + $1963($3, 24)));
     $1986($9, 232, Math_fround($8 + $5_1));
     $5_1 = $1963($2_1 + 5700 | 0, 0);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$401 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $6_1 = ~~$5_1;
       break label$401;
      }
      $6_1 = -2147483648;
     }
     $6_1 = $6_1 << 8;
     $5_1 = $1963($2_1 + 5696 | 0, 0);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$403 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $7_1 = ~~$5_1;
       break label$403;
      }
      $7_1 = -2147483648;
     }
     $6_1 = $7_1 | $6_1;
     $5_1 = $1963($2_1 + 5704 | 0, 0);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$405 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $7_1 = ~~$5_1;
       break label$405;
      }
      $7_1 = -2147483648;
     }
     $6_1 = $6_1 | $7_1 << 16;
     $17_1 = $9 + 232 | 0;
     $5_1 = Math_fround($1963($2_1 + 5708 | 0, 0) * $1963($2_1, 5416));
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$407 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $7_1 = ~~$5_1;
       break label$407;
      }
      $7_1 = -2147483648;
     }
     $400($4_1, $10_1, $17_1, $6_1 | $7_1 << 24, $22_1, 0, $24);
    }
    $6_1 = $1936($3, 149);
    if (($6_1 | 0) != -1) {
     $4_1 = Math_imul($6_1, 28);
     $7_1 = $4_1 + 20640 | 0;
     $14 = $1963($3, 16);
     $18_1 = Math_fround(Math_fround($14 + $1963($3, 24)) + Math_fround(-1.0));
     $19 = $1963($3, 12);
     $16_1 = Math_fround(Math_fround($19 + $1963($3, 20)) + Math_fround(-1.0));
     $11_1 = Math_fround(0.0);
     $13 = Math_fround(0.0);
     $5_1 = Math_fround(0.0);
     $8 = Math_fround(0.0);
     label$410 : {
      label$411 : {
       switch ($6_1 | 0) {
       case 0:
        $11_1 = Math_fround($18_1 - $22_1);
        $13 = Math_fround($19 + Math_fround(0.0));
        $5_1 = Math_fround($22_1 + $14);
        $8 = $19;
        break label$410;
       case 1:
        $11_1 = Math_fround($18_1 - $22_1);
        $13 = Math_fround($16_1 + Math_fround(0.0));
        $5_1 = Math_fround($22_1 + $14);
        $8 = $16_1;
        break label$410;
       case 2:
        $11_1 = Math_fround($14 + Math_fround(0.0));
        $13 = Math_fround($16_1 - $22_1);
        $5_1 = $14;
        $8 = Math_fround($22_1 + $19);
        break label$410;
       case 3:
        break label$411;
       default:
        break label$410;
       };
      }
      $11_1 = Math_fround($18_1 + Math_fround(0.0));
      $13 = Math_fround($16_1 - $22_1);
      $5_1 = $18_1;
      $8 = Math_fround($22_1 + $19);
     }
     $6_1 = $1944($3, 580);
     $11_1 = Math_fround($11_1 - $5_1);
     $18_1 = Math_fround(Math_fround(Math_fround($11_1 * $1963($4_1 + 20652 | 0, 0)) + $5_1) + Math_fround(.5));
     $14 = Math_fround($22_1 * $1963($7_1, 4));
     $1986($9, 236, Math_fround($18_1 + $14));
     $18_1 = Math_fround($13 - $8);
     $13 = Math_fround(Math_fround(Math_fround($18_1 * $1963($4_1 + 20648 | 0, 0)) + $8) + Math_fround(.5));
     $19 = Math_fround($22_1 * $1963($7_1, 0));
     $1986($9, 232, Math_fround($13 + $19));
     $7_1 = $6_1;
     $6_1 = $9 + 232 | 0;
     $13 = $1963($4_1 + 20664 | 0, 0);
     $393($7_1, $6_1, $22_1, Math_fround($13 + Math_fround(-.7853981852531433)), $13, 0);
     $7_1 = $1944($3, 580);
     $1986($9, 236, Math_fround($14 + Math_fround(Math_fround(Math_fround($11_1 * $1963($4_1 + 20660 | 0, 0)) + $5_1) + Math_fround(.5))));
     $1986($9, 232, Math_fround($19 + Math_fround(Math_fround(Math_fround($18_1 * $1963($4_1 + 20656 | 0, 0)) + $8) + Math_fround(.5))));
     $393($7_1, $6_1, $22_1, $13, Math_fround($13 + Math_fround(.7853981852531433)), 0);
     $4_1 = $1944(0, 73568);
     $5_1 = $1963($4_1 + 6084 | 0, 0);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$415 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $6_1 = ~~$5_1;
       break label$415;
      }
      $6_1 = -2147483648;
     }
     $6_1 = $6_1 << 8;
     $5_1 = $1963($4_1 + 6080 | 0, 0);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$417 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $7_1 = ~~$5_1;
       break label$417;
      }
      $7_1 = -2147483648;
     }
     $6_1 = $7_1 | $6_1;
     $5_1 = $1963($4_1 + 6088 | 0, 0);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$419 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $7_1 = ~~$5_1;
       break label$419;
      }
      $7_1 = -2147483648;
     }
     $6_1 = $6_1 | $7_1 << 16;
     $5_1 = Math_fround($1963($4_1 + 6092 | 0, 0) * $1963($4_1, 5416));
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$421 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $7_1 = ~~$5_1;
       break label$421;
      }
      $7_1 = -2147483648;
     }
     $4_1 = $1944($3, 580);
     $10_1 = $1944($4_1 + 92 | 0, 0);
     $388($4_1, $10_1, $1944($4_1, 84), $6_1 | $7_1 << 24, 0, $24 <= Math_fround(2.0) ? Math_fround(2.0) : $24);
     $1973($4_1, 84, 0);
    }
    $8 = $1963($2_1 + 5488 | 0, 0);
    if (!($8 > Math_fround(0.0))) {
     break label$324
    }
    if ($1937($3, 8) & 1) {
     break label$324
    }
    $2_1 = $1944(0, 73568);
    $13 = Math_fround($1963($2_1, 6472) * $1963($3, 572));
    $11_1 = $1963($3, 16);
    $4_1 = $1944($3, 728);
    if ($4_1) {
     $13 = Math_fround($13 * $1963($4_1, 572))
    }
    $5_1 = $1963($2_1 + 5480 | 0, 0);
    $4_1 = $1944($3, 580);
    $14 = $1963($3, 12);
    $1986($9, 232, Math_fround($24 + $14));
    $5_1 = Math_fround(Math_fround($11_1 + Math_fround(Math_fround($5_1 + $5_1) + $13)) + Math_fround(-1.0));
    $1986($9, 236, $5_1);
    $13 = $1963($3, 20);
    $1986($9, 220, $5_1);
    $1986($9, 216, Math_fround(Math_fround($14 + $13) - $24));
    $5_1 = $1963($2_1 + 5700 | 0, 0);
    $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
    label$425 : {
     if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
      $6_1 = ~~$5_1;
      break label$425;
     }
     $6_1 = -2147483648;
    }
    $6_1 = $6_1 << 8;
    $5_1 = $1963($2_1 + 5696 | 0, 0);
    $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
    label$427 : {
     if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
      $7_1 = ~~$5_1;
      break label$427;
     }
     $7_1 = -2147483648;
    }
    $6_1 = $7_1 | $6_1;
    $5_1 = $1963($2_1 + 5704 | 0, 0);
    $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
    label$429 : {
     if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
      $7_1 = ~~$5_1;
      break label$429;
     }
     $7_1 = -2147483648;
    }
    $6_1 = $6_1 | $7_1 << 16;
    $7_1 = $9 + 232 | 0;
    $10_1 = $9 + 216 | 0;
    $5_1 = Math_fround($1963($2_1 + 5708 | 0, 0) * $1963($2_1, 5416));
    $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
    label$431 : {
     if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
      $2_1 = ~~$5_1;
      break label$431;
     }
     $2_1 = -2147483648;
    }
    $399($4_1, $7_1, $10_1, $6_1 | $2_1 << 24, $8);
   }
   if ($20_1) {
    $1973($3, 580, $3 + 584 | 0)
   }
   $5_1 = $1963($3, 52);
   if ($5_1 == Math_fround(0.0)) {
    $8 = Math_fround(0.0);
    if (($21_1 & 2056) == 2048) {
     $8 = $1963($41_1, 0)
    }
    $11_1 = $1963($3, 20);
    $13 = $1963($3, 60);
    $13 = Math_fround(Math_fround($11_1 - Math_fround($13 + $13)) - $1963($3, 128));
    $13 = $8 >= $13 ? $8 : $13;
   } else {
    $13 = $5_1
   }
   $11_1 = $1963($3 + 56 | 0, 0);
   $8 = $11_1;
   if ($8 == Math_fround(0.0)) {
    $8 = Math_fround(0.0);
    if (!($21_1 & 8)) {
     $8 = $1963($3, 40)
    }
    $18_1 = $1963($3, 24);
    $14 = $1963($3, 64);
    $14 = Math_fround(Math_fround(Math_fround($18_1 - Math_fround($14 + $14)) - $27_1) - $1963($3, 132));
    $8 = $8 >= $14 ? $8 : $14;
   }
   $18_1 = $1963($3, 432);
   $19 = $1963($3, 88);
   $14 = $1963($3, 60);
   $16_1 = $1963($3, 72);
   $18_1 = Math_fround(Math_fround($18_1 - $19) + ($14 >= $16_1 ? $14 : $16_1));
   label$438 : {
    if (Math_fround(Math_abs($18_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$18_1;
     break label$438;
    }
    $2_1 = -2147483648;
   }
   $24 = Math_fround($2_1 | 0);
   $1986($3, 464, $24);
   $4_1 = $3 + 468 | 0;
   $28_1 = $1963($3, 436);
   $22_1 = $1963($3 + 92 | 0, 0);
   $18_1 = $1963($3, 64);
   $16_1 = Math_fround(Math_fround($28_1 - $22_1) + ($16_1 <= $18_1 ? $18_1 : $16_1));
   label$440 : {
    if (Math_fround(Math_abs($16_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$16_1;
     break label$440;
    }
    $2_1 = -2147483648;
   }
   $16_1 = Math_fround($2_1 | 0);
   $1986($4_1, 0, $16_1);
   $1986($3 + 476 | 0, 0, Math_fround($8 + $16_1));
   $2_1 = $3 + 472 | 0;
   $1986($2_1, 0, Math_fround($13 + $24));
   $1982($3, 480, $1959($3, 464), i64toi32_i32$HIGH_BITS);
   $1982($3 + 488 | 0, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
   $8 = $1963($3, 12);
   $13 = Math_fround($14 + Math_fround($8 - $19));
   $1986($3, 512, $13);
   $16_1 = $1963($3, 16);
   $24 = Math_fround($27_1 + Math_fround($18_1 + Math_fround($16_1 - $22_1)));
   $1986($3 + 516 | 0, 0, $24);
   $2_1 = $3 + 520 | 0;
   if ($5_1 == Math_fround(0.0)) {
    $5_1 = Math_fround(Math_fround($1963($3, 20) - Math_fround($14 + $14)) - $1963($3, 128))
   }
   $1986($2_1, 0, Math_fround($13 + $5_1));
   if ($11_1 == Math_fround(0.0)) {
    $11_1 = Math_fround(Math_fround(Math_fround($1963($3, 24) - Math_fround($18_1 + $18_1)) - $27_1) - $1963($3, 132))
   }
   $44_1 = +$18_1 + +$16_1 - +$22_1 + +$27_1;
   $5_1 = Math_fround($44_1);
   $1986($3 + 228 | 0, 0, $5_1);
   $2_1 = $3 + 224 | 0;
   $49 = +$14 + +$8 - +$19 + 0.0;
   $8 = Math_fround($49);
   $1986($2_1, 0, $8);
   $1986($3 + 524 | 0, 0, Math_fround($24 + $11_1));
   $1982($3 + 276 | 0, 0, 0, 0);
   $1973($3 + 292 | 0, 0, 0);
   $1982($3 + 248 | 0, 0, 0, 0);
   $1982($3 + 256 | 0, 0, 0, 0);
   $1982($3 + 264 | 0, 0, 0, 0);
   $1986($3 + 272 | 0, 0, Math_fround(Math_fround($14 + Math_fround(0.0)) - $19));
   $2_1 = $1959($2_1, 0);
   $4_1 = i64toi32_i32$HIGH_BITS;
   $1982($3 + 240 | 0, 0, $2_1, $4_1);
   $1982($3 + 232 | 0, 0, $2_1, $4_1);
   $1982($3 + 216 | 0, 0, $2_1, $4_1);
   $1982($3, 208, $2_1, $4_1);
   $1986($3 + 288 | 0, 0, Math_fround($44_1 - +$5_1));
   $1986($3 + 284 | 0, 0, Math_fround($49 - +$8));
   $2_1 = $3 + 298 | 0;
   $4_1 = $1941($2_1, 0);
   $1970($2_1, 0, 0);
   $1968($3 + 304 | 0, 0, 0);
   $1970($3 + 296 | 0, 0, $4_1);
   $5_1 = $1963($3, 100);
   $1968($3 + 306 | 0, 0, 0);
   $1968($3 + 305 | 0, 0, $5_1 > Math_fround(0.0));
   $2_1 = $3 + 316 | 0;
   $5_1 = $1963($15_1, 5492);
   $6_1 = 0;
   $7_1 = 0;
   if ($43_1) {
    $1981($2_1, 18)
   }
   $4_1 = $5_1 < Math_fround(4294967296.0) & $5_1 >= Math_fround(0.0) ? ~~$5_1 >>> 0 : 0;
   $12_1 = $4_1;
   $1970($2_1, 8, $4_1);
   $4_1 = 0;
   while (1) {
    $10_1 = $1941((($4_1 << 1) + $2_1 | 0) + 18 | 0, 0);
    $6_1 = ($7_1 & 1 ? ($10_1 ? $12_1 : 0) : 0) + $6_1 | 0;
    $20_1 = ($10_1 | 0) != 0;
    label$52 : {
     label$6 : {
      switch ($4_1 - 1 | 0) {
      case 0:
       $1970($2_1, 12, $6_1);
       break label$52;
      case 1:
       $1970($2_1, 14, $6_1);
       break label$52;
      case 2:
       break label$6;
      default:
       break label$52;
      };
     }
     $1970($2_1, 16, $6_1);
    }
    $6_1 = $6_1 + $10_1 | 0;
    $7_1 = $7_1 | $20_1;
    $4_1 = $4_1 + 1 | 0;
    if (($4_1 | 0) != 4) {
     continue
    }
    break;
   };
   $1981($2_1, 18);
   $1973($2_1, 4, 0);
   $1973($2_1, 0, $6_1 & 65535);
   $1982($3 + 344 | 0, 0, 0, 0);
   $2_1 = $1944($3 + 356 | 0, 0);
   label$444 : {
    if (($2_1 | 0) >= 0) {
     break label$444
    }
    $4_1 = $2_1 + (($2_1 | 0) / 2 | 0) | 0;
    $4_1 = ($4_1 | 0) > 0 ? $4_1 : 0;
    if (($2_1 | 0) >= ($4_1 | 0)) {
     break label$444
    }
    $2_1 = $1944(0, 73568);
    if ($2_1) {
     $2_1 = $2_1 + 876 | 0;
     $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
    }
    $2_1 = (((wasm2js_i32$1 = $4_1 << 2, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $6_1 = $1944($3 + 360 | 0, 0);
    if ($6_1) {
     $1602($2_1, $6_1, $1944($3, 352) << 2);
     $6_1 = $1944($3, 360);
     label$447 : {
      if (!$6_1) {
       break label$447
      }
      $7_1 = $1944(0, 73568);
      if (!$7_1) {
       break label$447
      }
      $7_1 = $7_1 + 876 | 0;
      $1973($7_1, 0, $1944($7_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $6_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($3, 356, $4_1);
    $1973($3, 360, $2_1);
   }
   $1973($3, 352, 0);
   $1973($3 + 376 | 0, 0, 1);
   $1973($3 + 368 | 0, 0, 0);
   $1973($3 + 364 | 0, 0, $3 + 548 | 0);
   $4_1 = $3 + 380 | 0;
   if ($26_1) {
    $2_1 = $1944($26_1 + 376 | 0, 0)
   } else {
    $2_1 = 1
   }
   $1973($4_1, 0, $2_1);
   $1973($3 + 388 | 0, 0, -1082130432);
   $1986($3 + 384 | 0, 0, $1963($3, 544));
   $2_1 = $1944($3 + 396 | 0, 0);
   label$449 : {
    if (($2_1 | 0) >= 0) {
     break label$449
    }
    $4_1 = $2_1 + (($2_1 | 0) / 2 | 0) | 0;
    $4_1 = ($4_1 | 0) > 0 ? $4_1 : 0;
    if (($2_1 | 0) >= ($4_1 | 0)) {
     break label$449
    }
    $2_1 = $1944(0, 73568);
    if ($2_1) {
     $2_1 = $2_1 + 876 | 0;
     $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
    }
    $2_1 = (((wasm2js_i32$1 = $4_1 << 2, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $6_1 = $1944($3 + 400 | 0, 0);
    if ($6_1) {
     $1602($2_1, $6_1, $1944($3, 392) << 2);
     $6_1 = $1944($3, 400);
     label$452 : {
      if (!$6_1) {
       break label$452
      }
      $7_1 = $1944(0, 73568);
      if (!$7_1) {
       break label$452
      }
      $7_1 = $7_1 + 876 | 0;
      $1973($7_1, 0, $1944($7_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $6_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($3, 396, $4_1);
    $1973($3, 400, $2_1);
   }
   $1973($3, 392, 0);
   $2_1 = $1944($3 + 408 | 0, 0);
   label$453 : {
    if (($2_1 | 0) >= 0) {
     break label$453
    }
    $4_1 = $2_1 + (($2_1 | 0) / 2 | 0) | 0;
    $4_1 = ($4_1 | 0) > 0 ? $4_1 : 0;
    if (($2_1 | 0) >= ($4_1 | 0)) {
     break label$453
    }
    $2_1 = $1944(0, 73568);
    if ($2_1) {
     $2_1 = $2_1 + 876 | 0;
     $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
    }
    $2_1 = (((wasm2js_i32$1 = $4_1 << 2, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $6_1 = $1944($3 + 412 | 0, 0);
    if ($6_1) {
     $1602($2_1, $6_1, $1944($3, 404) << 2);
     $6_1 = $1944($3, 412);
     label$456 : {
      if (!$6_1) {
       break label$456
      }
      $7_1 = $1944(0, 73568);
      if (!$7_1) {
       break label$456
      }
      $7_1 = $7_1 + 876 | 0;
      $1973($7_1, 0, $1944($7_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $6_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($3, 408, $4_1);
    $1973($3, 412, $2_1);
   }
   $1973($3, 404, 0);
   $2_1 = $1936($3, 164);
   if (($2_1 | 0) > 0) {
    $1968($3, 164, $2_1 - 1 | 0)
   }
   $2_1 = $1936($3, 165);
   if (($2_1 | 0) > 0) {
    $1968($3, 165, $2_1 - 1 | 0)
   }
   $6_1 = $21_1 & 1;
   label$459 : {
    if (!$34_1) {
     break label$459
    }
    $125($3);
    $2_1 = $1944(0, 73568);
    $4_1 = $1944($3, 8);
    if ($4_1 & 262144) {
     $1983($2_1, 7512, 0, 0);
     break label$459;
    }
    label$461 : {
     if (!($4_1 & 67108864 | ($1944($3, 736) | 0) == ($3 | 0))) {
      $4_1 = $1944($3, 756);
      if ($4_1) {
       break label$461
      }
     }
     $1983($2_1, 7512, 0, 0);
     $4_1 = $1944($2_1, 7508);
     $7_1 = $1944($2_1, 7564);
     $1973(($4_1 + ($7_1 << 2) | 0) + 756 | 0, 0, 0);
     $4_1 = $4_1 + ($7_1 << 4) | 0;
     $1982($4_1 + 772 | 0, 0, 0, 0);
     $1982($4_1 + 764 | 0, 0, 0, 0);
     $1983($2_1, 7576, 0, 0);
     $1968($2_1, 7574, 0);
     $1970($2_1, 7572, 257);
     $1983($2_1 + 7584 | 0, 0, 0, 0);
     $1973($2_1 + 7592 | 0, 0, 0);
     break label$459;
    }
    $1973($2_1, 7516, 0);
    $1973($2_1, 7512, $4_1);
   }
   label$463 : {
    if ($6_1) {
     break label$463
    }
    $19 = $1963($3, 72);
    $5_1 = $1963($9, 72);
    $12_1 = $1944(0, 73568);
    $4_1 = 0;
    $17_1 = $1944($3, 8);
    if (!($17_1 & 32)) {
     $4_1 = ($1944($12_1 + 5456 | 0, 0) | 0) != -1
    }
    $16_1 = $1963($9, 64);
    $8 = Math_fround($5_1 - $19);
    $18_1 = $1963($9, 76);
    $13 = $1963($9, 68);
    $23_1 = $1944($12_1, 7216);
    $1973($12_1, 7216, $23_1 | 16);
    $1973($3, 292, 1);
    $14 = $1963($12_1 + 5476 | 0, 0);
    $11_1 = $1963($12_1, 6468);
    $1983($9, 264, 0, 0);
    $1983($9, 256, 0, 0);
    $5_1 = $14;
    if ($1_1) {
     $1986($9, 268, $13);
     $5_1 = Math_fround($14 + $11_1);
     $1986($9, 264, Math_fround(Math_fround($8 - $5_1) - $14));
    }
    label$466 : {
     if (!$4_1) {
      break label$466
     }
     if (($1944($12_1 + 5456 | 0, 0) | 0) != 1) {
      break label$466
     }
     $22_1 = $1963($12_1, 5476);
     $1986($9, 260, $13);
     $5_1 = Math_fround($11_1 + $5_1);
     $1986($9, 256, Math_fround(Math_fround($8 - $5_1) - $22_1));
    }
    $19 = Math_fround($16_1 + $19);
    label$469 : {
     if (!$4_1) {
      break label$469
     }
     if ($1944($12_1 + 5456 | 0, 0)) {
      break label$469
     }
     $16_1 = $1963($12_1, 5476);
     $1986($9, 260, $13);
     $1986($9, 256, Math_fround(Math_fround($19 + $14) - $16_1));
     $14 = Math_fround($14 + $11_1);
    }
    label$472 : {
     if (!$4_1) {
      break label$472
     }
     $6_1 = 14988;
     $20_1 = $1944((($1944($3, 196) << 2) + $1944($3 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
     $10_1 = $20_1;
     while (1) {
      $7_1 = $10_1;
      $2_1 = $6_1;
      $6_1 = $2_1 + 1 | 0;
      $4_1 = $1937($2_1, 0);
      if ($4_1) {
       label$476 : {
        if (($4_1 | 0) != 35) {
         break label$476
        }
        if (($1937($6_1, 0) | 0) != 35) {
         break label$476
        }
        $7_1 = ($1937($2_1, 2) | 0) == 35 ? $20_1 : $7_1;
       }
       $7_1 = $1944((($4_1 ^ $7_1 & 255) << 2) + 19360 | 0, 0) ^ $7_1 >>> 8;
      }
      $10_1 = $7_1;
      if (($2_1 | 0) != 14997) {
       continue
      }
      break;
     };
     $4_1 = $10_1 ^ -1;
     if (($1944($12_1, 7136) | 0) == ($4_1 | 0)) {
      $1973($12_1, 7140, $4_1)
     }
     if (($1944($12_1, 7196) | 0) == ($4_1 | 0)) {
      $1968($12_1, 7200, 1)
     }
     if (($1944($12_1, 7112) | 0) == ($4_1 | 0)) {
      $75($4_1, 11, 14988)
     }
     $2_1 = global$0 - 48 | 0;
     global$0 = $2_1;
     $6_1 = $1944(0, 73568);
     $7_1 = $1944($6_1, 7080);
     $16_1 = $1963($6_1 + 5476 | 0, 0);
     $10_1 = $9 + 256 | 0;
     $22_1 = $1963($10_1, 0);
     $25_1 = $1959($10_1, 0);
     $35_1 = i64toi32_i32$HIGH_BITS;
     $20_1 = $2_1 + 32 | 0;
     $33_1 = $20_1 + 12 | 0;
     $27_1 = $1963($6_1, 6468);
     $28_1 = Math_fround($27_1 + $1963($10_1, 4));
     $24 = $1963($6_1 + 5480 | 0, 0);
     $1986($33_1, 0, Math_fround($28_1 + Math_fround($24 + $24)));
     $1983($2_1, 32, $25_1, $35_1);
     $1986($2_1, 40, Math_fround(Math_fround($27_1 + $22_1) + Math_fround($16_1 + $16_1)));
     $213($20_1, $4_1, 0, 0);
     $4_1 = $569($20_1, $4_1, $2_1 + 31 | 0, $2_1 + 30 | 0, 0);
     $10_1 = $51((wasm2js_i32$0 = $1937($2_1, 30) ? 23 : 22, wasm2js_i32$1 = 21, wasm2js_i32$2 = $1937($2_1, 31), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), Math_fround(1.0));
     $20_1 = $51(0, Math_fround(1.0));
     $1986($2_1, 24, Math_fround(Math_fround($1963($2_1, 36) + $1963($33_1, 0)) * Math_fround(.5)));
     $1986($2_1, 20, Math_fround(Math_fround($1963($2_1, 32) + $1963($2_1, 40)) * Math_fround(.5)));
     if ($1937($2_1, 31) | $1937($2_1, 30)) {
      $408($1944($7_1, 580), $2_1 + 20 | 0, Math_fround(Math_fround($1963($6_1, 6468) * Math_fround(.5)) + Math_fround(1.0)), $10_1, 12)
     }
     $10_1 = $1944($7_1, 580);
     $16_1 = $1963($6_1, 5476);
     $1986($2_1, 16, Math_fround($1963($2_1, 36) + $1963($6_1, 5480)));
     $1986($2_1, 12, Math_fround($16_1 + $1963($2_1, 32)));
     $6_1 = $1937($7_1, 141);
     $1983($2_1, 0, $1959($2_1, 12), i64toi32_i32$HIGH_BITS);
     $476($10_1, $2_1, $20_1, $6_1 ? 1 : 3, Math_fround(1.0));
     label$21 : {
      if (!$191()) {
       break label$21
      }
      if (!$181(0, Math_fround(-1.0))) {
       break label$21
      }
      $124($7_1);
     }
     global$0 = $2_1 + 48 | 0;
     if (!$4_1) {
      break label$472
     }
     $1968($3, 142, 1);
    }
    label$482 : {
     if (!$1_1) {
      break label$482
     }
     $6_1 = 14998;
     $20_1 = $1944((($1944($3, 196) << 2) + $1944($3 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
     $10_1 = $20_1;
     while (1) {
      $7_1 = $10_1;
      $2_1 = $6_1;
      $6_1 = $2_1 + 1 | 0;
      $4_1 = $1937($2_1, 0);
      if ($4_1) {
       label$486 : {
        if (($4_1 | 0) != 35) {
         break label$486
        }
        if (($1937($6_1, 0) | 0) != 35) {
         break label$486
        }
        $7_1 = ($1937($2_1, 2) | 0) == 35 ? $20_1 : $7_1;
       }
       $7_1 = $1944((($4_1 ^ $7_1 & 255) << 2) + 19360 | 0, 0) ^ $7_1 >>> 8;
      }
      $10_1 = $7_1;
      if (($2_1 | 0) != 15004) {
       continue
      }
      break;
     };
     $4_1 = $1944(0, 73568);
     $2_1 = $10_1 ^ -1;
     if (($1944($4_1, 7136) | 0) == ($2_1 | 0)) {
      $1973($4_1, 7140, $2_1)
     }
     if (($1944($4_1, 7196) | 0) == ($2_1 | 0)) {
      $1968($4_1, 7200, 1)
     }
     if (($1944($4_1, 7112) | 0) == ($2_1 | 0)) {
      $75($2_1, 11, 14998)
     }
     if (!$576($2_1, $9 + 264 | 0)) {
      break label$482
     }
     $1968($1_1, 0, 0);
    }
    $1973($3, 292, 0);
    $1973($12_1, 7216, $23_1);
    $1_1 = $17_1 & 1048576;
    $11_1 = Math_fround($11_1 * Math_fround(.800000011920929));
    $2_1 = $1944(0, 73568);
    $10_1 = $0_1;
    label$492 : {
     if (($10_1 | 0) == -1) {
      break label$492
     }
     $4_1 = $0_1;
     while (1) {
      label$494 : {
       $6_1 = $1937($4_1, 0);
       if (($6_1 | 0) != 35) {
        if ($6_1) {
         break label$494
        }
        $10_1 = $4_1;
        break label$492;
       }
       if (($1937($4_1, 1) | 0) != 35) {
        break label$494
       }
       $10_1 = $4_1;
       break label$492;
      }
      $10_1 = -1;
      $4_1 = $4_1 + 1 | 0;
      if (($4_1 | 0) != -1) {
       continue
      }
      break;
     };
    }
    $27_1 = $1_1 ? $11_1 : Math_fround(0.0);
    $11_1 = $1963($2_1, 6468);
    label$496 : {
     if (($0_1 | 0) == ($10_1 | 0)) {
      $1986($9, 236, $11_1);
      $1973($9, 232, 0);
      break label$496;
     }
     $474($9 + 232 | 0, $1944($2_1, 6464), $11_1, Math_fround(3402823466385288598117041.0e14), Math_fround(-1.0), $0_1, $10_1, 0);
     $11_1 = Math_fround($1963($9, 232) + Math_fround(.9999899864196777));
     label$498 : {
      if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
       $2_1 = ~~$11_1;
       break label$498;
      }
      $2_1 = -2147483648;
     }
     $1986($9, 232, Math_fround($2_1 | 0));
    }
    $1986($9, 252, Math_fround($1963($9, 236) + Math_fround(0.0)));
    $16_1 = Math_fround($27_1 + $1963($9, 232));
    $1986($9, 248, $16_1);
    $11_1 = $1963($12_1, 5476);
    if ($14 > $11_1) {
     $14 = Math_fround($14 + $1963($12_1 + 5500 | 0, 0))
    }
    if ($5_1 > $11_1) {
     $5_1 = Math_fround($5_1 + $1963($12_1 + 5500 | 0, 0))
    }
    $2_1 = $12_1 + 5448 | 0;
    $22_1 = $1963($2_1, 0);
    if (!(!($22_1 > Math_fround(0.0)) | !($22_1 < Math_fround(1.0)))) {
     $11_1 = $5_1 <= $14 ? $14 : $5_1;
     $24 = Math_fround(Math_fround(Math_fround(Math_fround($8 - $19) - $14) - $5_1) - $16_1);
     $28_1 = $11_1 < $24 ? $11_1 : $24;
     $11_1 = Math_fround(Math_abs(Math_fround($22_1 + Math_fround(-.5))));
     $11_1 = Math_fround(Math_fround(1.0) - Math_fround($11_1 + $11_1));
     $11_1 = Math_fround($28_1 * ($11_1 < Math_fround(0.0) ? Math_fround(0.0) : $11_1 > Math_fround(1.0) ? Math_fround(1.0) : $11_1));
     $5_1 = $5_1 >= $11_1 ? $5_1 : $11_1;
     $14 = $11_1 <= $14 ? $14 : $11_1;
    }
    $1986($9 + 244 | 0, 0, $18_1);
    $1986($9, 236, $13);
    $11_1 = Math_fround($8 - $5_1);
    $1986($9, 240, $11_1);
    $5_1 = Math_fround($19 + $14);
    $1986($9, 232, $5_1);
    $14 = $1963($12_1 + 5500 | 0, 0);
    $1986($9 + 228 | 0, 0, $18_1);
    $1986($9, 220, $13);
    $1986($9, 216, $5_1);
    $14 = Math_fround($11_1 + $14);
    $1986($9, 224, $8 > $14 ? $14 : $8);
    label$506 : {
     if (!$1_1) {
      break label$506
     }
     $8 = Math_fround($16_1 + Math_fround(Math_fround(Math_fround(Math_fround($11_1 - $5_1) - $16_1) * $22_1) + $5_1));
     $11_1 = $5_1 > $8 ? $5_1 : $8 > $11_1 ? $11_1 : $8;
     if (!($11_1 > $5_1)) {
      break label$506
     }
     $4_1 = $1944($3, 580);
     $1986($9, 212, Math_fround(Math_fround($13 + $18_1) * Math_fround(.5)));
     $1_1 = $1944(0, 73568);
     $1986($9, 208, $11_1);
     $14 = $1963($1_1 + 5628 | 0, 0);
     $5_1 = $1963($1_1 + 5624 | 0, 0);
     $8 = $1963($1_1 + 5616 | 0, 0);
     $13 = $1963($1_1 + 5620 | 0, 0);
     $18_1 = $1963($1_1, 5416);
     $1983($9, 24, $1960($9, 208), i64toi32_i32$HIGH_BITS);
     $13 = Math_fround(Math_fround(($13 < Math_fround(0.0) ? Math_fround(0.0) : $13 > Math_fround(1.0) ? Math_fround(1.0) : $13) * Math_fround(255.0)) + Math_fround(.5));
     label$507 : {
      if (Math_fround(Math_abs($13)) < Math_fround(2147483648.0)) {
       $1_1 = ~~$13;
       break label$507;
      }
      $1_1 = -2147483648;
     }
     $1_1 = $1_1 << 8;
     $8 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
     label$509 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $6_1 = ~~$8;
       break label$509;
      }
      $6_1 = -2147483648;
     }
     $1_1 = $6_1 | $1_1;
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$511 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $6_1 = ~~$5_1;
       break label$511;
      }
      $6_1 = -2147483648;
     }
     $1_1 = $1_1 | $6_1 << 16;
     $7_1 = $9 + 24 | 0;
     $5_1 = Math_fround($14 * $18_1);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$513 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $6_1 = ~~$5_1;
       break label$513;
      }
      $6_1 = -2147483648;
     }
     $477($4_1, $7_1, $1_1 | $6_1 << 24);
     $5_1 = $1963($9, 224);
     $8 = Math_fround($27_1 * Math_fround(.5));
     label$515 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $1_1 = ~~$8;
       break label$515;
      }
      $1_1 = -2147483648;
     }
     $8 = Math_fround($11_1 - Math_fround($1_1 | 0));
     $1986($9, 224, $5_1 < $8 ? $5_1 : $8);
    }
    $10_1 = $0_1;
    label$517 : {
     if (($10_1 | 0) == -1) {
      break label$517
     }
     $4_1 = $0_1;
     while (1) {
      label$519 : {
       $1_1 = $1937($4_1, 0);
       if (($1_1 | 0) != 35) {
        if ($1_1) {
         break label$519
        }
        $10_1 = $4_1;
        break label$517;
       }
       if (($1937($4_1, 1) | 0) != 35) {
        break label$519
       }
       $10_1 = $4_1;
       break label$517;
      }
      $10_1 = -1;
      $4_1 = $4_1 + 1 | 0;
      if (($4_1 | 0) != -1) {
       continue
      }
      break;
     };
    }
    if (($0_1 | 0) == ($10_1 | 0)) {
     break label$463
    }
    $1_1 = $1944(0, 73568);
    $67($1944($1944($1_1, 7080), 580), $9 + 232 | 0, $9 + 240 | 0, $0_1, $10_1, $9 + 248 | 0, $2_1, $9 + 216 | 0);
    if (!$1937($1_1, 12196)) {
     break label$463
    }
    $64($9 + 232 | 0, $0_1, $10_1);
   }
   $1973($3, 528, 0);
   $1_1 = $1944($3, 80);
   $2_1 = $1944($15_1, 7216);
   $0_1 = $1944(0, 73568);
   $5_1 = $1963($0_1 + 228 | 0, 0);
   $8 = $1963($9, 64);
   $13 = $1963($0_1 + 5516 | 0, 0);
   $4_1 = 0;
   label$521 : {
    if (!($5_1 >= Math_fround($8 - $13))) {
     break label$521
    }
    $8 = $1963($0_1 + 232 | 0, 0);
    $14 = $1963($9, 68);
    $11_1 = $1963($0_1 + 5520 | 0, 0);
    $4_1 = $8 >= Math_fround($14 - $11_1) & $5_1 < Math_fround($13 + $1963($9, 72)) & $8 < Math_fround($1963($9 + 76 | 0, 0) + $11_1);
   }
   $1973($0_1, 7240, $1_1);
   $1973($0_1 + 7248 | 0, 0, $4_1);
   $1973($0_1 + 7244 | 0, 0, $2_1);
   $1982($0_1 + 7252 | 0, 0, $1960($9, 64), i64toi32_i32$HIGH_BITS);
   $1982($0_1 + 7260 | 0, 0, $1960($9 + 72 | 0, 0), i64toi32_i32$HIGH_BITS);
  }
  label$522 : {
   if ($36_1) {
    $4_1 = $1944($26_1 + 300 | 0, 0);
    break label$522;
   }
   $6_1 = 15005;
   $2_1 = $1944((($1944($3, 196) << 2) + $1944($3 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
   $10_1 = $2_1;
   while (1) {
    $7_1 = $10_1;
    $0_1 = $6_1;
    $6_1 = $6_1 + 1 | 0;
    $1_1 = $1937($0_1, 0);
    if ($1_1) {
     label$527 : {
      if (($1_1 | 0) != 35) {
       break label$527
      }
      if (($1937($6_1, 0) | 0) != 35) {
       break label$527
      }
      $7_1 = ($1937($0_1, 2) | 0) == 35 ? $2_1 : $7_1;
     }
     $7_1 = $1944((($1_1 ^ $7_1 & 255) << 2) + 19360 | 0, 0) ^ $7_1 >>> 8;
    }
    $10_1 = $7_1;
    if (($0_1 | 0) != 15016) {
     continue
    }
    break;
   };
   $0_1 = $1944(0, 73568);
   $4_1 = $10_1 ^ -1;
   if (($1944($0_1, 7136) | 0) == ($4_1 | 0)) {
    $1973($0_1, 7140, $4_1)
   }
   if (($1944($0_1, 7196) | 0) == ($4_1 | 0)) {
    $1968($0_1, 7200, 1)
   }
   if (($1944($0_1, 7112) | 0) == ($4_1 | 0)) {
    $75($4_1, 11, 15005)
   }
  }
  $1973($3 + 300 | 0, 0, $4_1);
  $0_1 = $1944($1944(0, 73568), 7080);
  $1968($0_1, 140, 1);
  $1_1 = $1944($0_1, 580);
  $2_1 = $1959($3, 448);
  $4_1 = i64toi32_i32$HIGH_BITS;
  $1983($9, 232, $2_1, $4_1);
  $6_1 = $1959($3 + 456 | 0, 0);
  $7_1 = i64toi32_i32$HIGH_BITS;
  $1983($9, 216, $6_1, $7_1);
  $1983($9, 16, $2_1, $4_1);
  $1983($9, 8, $6_1, $7_1);
  $378($1_1, $9 + 16 | 0, $9 + 8 | 0, 1);
  $1_1 = $1944($0_1, 580);
  $1_1 = (($1944($1_1, 60) << 4) + $1944($1_1 + 68 | 0, 0) | 0) - 16 | 0;
  $2_1 = $1959($1_1, 0);
  $4_1 = i64toi32_i32$HIGH_BITS;
  $1982($0_1 + 504 | 0, 0, $1959($1_1, 8), i64toi32_i32$HIGH_BITS);
  $1982($0_1, 496, $2_1, $4_1);
  $1968($3, 140, 0);
  $1970($3, 150, $1941($3, 150) + 1 | 0);
  $1973($15_1, 7300, 0);
  if (!$40_1) {
   label$534 : {
    if (!$36_1) {
     break label$534
    }
    label$535 : {
     if ($21_1 & 64) {
      break label$535
     }
     if (($1936($3, 164) | 0) > 0) {
      break label$535
     }
     if (($1936($3, 165) | 0) > 0) {
      break label$535
     }
     $1_1 = 0;
     label$536 : {
      if (!($21_1 & 8388608)) {
       break label$536
      }
      $1_1 = 0;
      if (!$1937($15_1, 7572)) {
       break label$536
      }
      $0_1 = $1944($15_1, 7508);
      $1_1 = 0;
      if (!$0_1) {
       break label$536
      }
      $1_1 = ($1944($0_1, 748) | 0) == ($1944($3, 748) | 0);
     }
     $0_1 = $1_1;
     if ($1937($15_1, 12196) | $0_1) {
      break label$535
     }
     if (!($1963($3, 416) >= $1963($3 + 424 | 0, 0))) {
      if (!($1963($3 + 420 | 0, 0) >= $1963($3 + 428 | 0, 0))) {
       break label$535
      }
     }
     $1968($3, 172, 1);
    }
    if (!$26_1) {
     break label$534
    }
    $0_1 = $1937($26_1, 141);
    label$540 : {
     if (!$0_1) {
      if (($1936($26_1, 172) | 0) <= 0) {
       break label$540
      }
     }
     $1968($3, 172, 1);
    }
    if (!$0_1) {
     if (($1936($26_1, 173) | 0) <= 0) {
      break label$534
     }
    }
    $1968($3, 173, 1);
   }
   if ($1963($15_1, 5416) <= Math_fround(0.0)) {
    $1968($3, 172, 1)
   }
   $6_1 = 1;
   if (($1936($3, 172) | 0) <= 0) {
    $6_1 = ($1936($3, 173) | 0) > 0
   }
   if ($6_1) {
    $0_1 = 1
   } else {
    $0_1 = ($1936($3, 174) | 0) > 0
   }
   $1968($3, 145, $0_1);
   $0_1 = $1936($3, 175);
   if (($0_1 | 0) > 0) {
    $1968($3, 175, $0_1 - 1 | 0);
    $1973($3, 8, $1944($3, 8) | 786944);
   }
   label$547 : {
    if (!$1937($3, 141)) {
     $0_1 = 0;
     if (($6_1 ^ -1) & ($1937($3, 138) | 0) != 0) {
      break label$547
     }
    }
    $0_1 = 0;
    if (($1936($3, 164) | 0) > 0) {
     break label$547
    }
    $0_1 = 0;
    if (($1936($3, 165) | 0) > 0) {
     break label$547
    }
    $0_1 = ($1936($3, 173) | 0) <= 0;
   }
   $1968($3, 143, $0_1);
  }
  $0_1 = $1937($3, 143);
  global$0 = $9 + 272 | 0;
  return !$0_1;
 }
 
 function $144($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0;
  $1_1 = $1944(0, 73568);
  label$1 : {
   if (!$0_1) {
    $0_1 = $1944($1_1, 7020) - 1 | 0;
    break label$1;
   }
   if ($1937($0_1 + 11 | 0, 0) & 1) {
    while (1) {
     $0_1 = $1944($0_1, 728);
     if ($1937($0_1 + 11 | 0, 0) & 1) {
      continue
     }
     break;
    };
    $3 = 0;
   } else {
    $3 = -1
   }
   $0_1 = $3 + $1939($0_1, 156) | 0;
  }
  label$6 : {
   if (($0_1 | 0) < 0) {
    break label$6
   }
   $3 = $1944($1_1 + 7028 | 0, 0);
   while (1) {
    label$8 : {
     $1_1 = $0_1;
     $0_1 = $1944($3 + ($0_1 << 2) | 0, 0);
     if (!$0_1) {
      break label$8
     }
     if (!$1937($0_1, 139)) {
      break label$8
     }
     if (($1944($0_1, 8) & 262656) == 262656) {
      break label$8
     }
     $2_1 = $1944($0_1, 752);
     if (!$2_1) {
      $2_1 = $0_1;
      break label$6;
     }
     if ($1937($2_1, 139)) {
      break label$6
     }
     $2_1 = $0_1;
     break label$6;
    }
    $0_1 = $1_1 - 1 | 0;
    if (($1_1 | 0) > 0) {
     continue
    }
    break;
   };
  }
  $125($2_1);
 }
 
 function $145($0_1, $1_1) {
  var $2_1 = 0, $3 = 0;
  $2_1 = $1944(0, 73568);
  $1973($2_1, 7300, $1944($2_1, 7300) | 2);
  $0_1 = $1959($0_1, 0);
  $3 = i64toi32_i32$HIGH_BITS;
  $1973($2_1 + 7308 | 0, 0, $1_1 >>> 0 <= 1 ? 1 : $1_1);
  $1982($2_1 + 7332 | 0, 0, $0_1, $3);
 }
 
 function $147($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $4_1 = $1944(0, 73568);
  $2_1 = $2_1 & 16777216;
  $6_1 = $2_1 >>> 24 | 0;
  $3 = ($1937($0_1, 147) | 0) == ($6_1 | 0);
  if (!($3 & ($1_1 ^ -1) | $2_1)) {
   $2_1 = $1944($4_1, 7020);
   $1_1 = $1944($4_1 + 7024 | 0, 0);
   label$2 : {
    if (($2_1 | 0) != ($1_1 | 0)) {
     break label$2
    }
    $3 = $2_1 + 1 | 0;
    $5_1 = $1_1;
    if ($1_1) {
     $2_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0
    } else {
     $2_1 = 8
    }
    $1_1 = ($2_1 | 0) > ($3 | 0) ? $2_1 : $3;
    if (($5_1 | 0) >= ($1_1 | 0)) {
     break label$2
    }
    $2_1 = $1_1 << 2;
    if ($4_1) {
     $3 = $4_1 + 876 | 0;
     $1973($3, 0, $1944($3, 0) + 1 | 0);
    }
    $2_1 = (((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $3 = $1944($4_1, 7028);
    if ($3) {
     $1602($2_1, $3, $1944($4_1, 7020) << 2);
     $3 = $1944($4_1, 7028);
     label$7 : {
      if (!$3) {
       break label$7
      }
      $5_1 = $1944(0, 73568);
      if (!$5_1) {
       break label$7
      }
      $5_1 = $5_1 + 876 | 0;
      $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $3, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($4_1, 7024, $1_1);
    $1973($4_1, 7028, $2_1);
   }
   $1973($1944($4_1, 7028) + ($1944($4_1, 7020) << 2) | 0, 0, $0_1);
   $1_1 = $1944($4_1, 7020);
   $1973($4_1, 7020, $1_1 + 1 | 0);
   $1970($0_1, 156, $1_1);
   $1968($0_1, 147, $6_1);
   return;
  }
  if (!($3 | ($1_1 | !$2_1))) {
   $5_1 = $4_1 + 7028 | 0;
   $2_1 = $1944($5_1, 0);
   $1_1 = $1939($0_1, 156) + 1 | 0;
   $3 = $1944($4_1, 7020);
   if (($1_1 | 0) < ($3 | 0)) {
    while (1) {
     $7_1 = $1944($2_1 + ($1_1 << 2) | 0, 0);
     $1970($7_1, 156, $1941($7_1, 156) - 1 | 0);
     $1_1 = $1_1 + 1 | 0;
     if (($3 | 0) != ($1_1 | 0)) {
      continue
     }
     break;
    }
   }
   $1_1 = $1944($5_1, 0) + ($1939($0_1, 156) << 2) | 0;
   $1603($1_1, $1_1 + 4 | 0, $3 + (($1_1 - $2_1 ^ -1) >>> 2 | 0) << 2);
   $1973($4_1, 7020, $1944($4_1, 7020) - 1 | 0);
   $1970($0_1, 156, 65535);
  }
  $1968($0_1, 147, $6_1);
 }
 
 function $148($0_1, $1_1, $2_1) {
  var $3 = Math_fround(0), $4_1 = 0, $5_1 = Math_fround(0);
  label$1 : {
   label$2 : {
    label$3 : {
     if (!$1937($0_1, 141)) {
      break label$3
     }
     if (($1936($0_1, 164) | 0) > 0) {
      break label$3
     }
     if (($1936($0_1, 165) | 0) <= 0) {
      break label$2
     }
    }
    if (!$1937($0_1, 145)) {
     break label$1
    }
    if ($1937($0_1, 173)) {
     break label$1
    }
    if (($1936($0_1, 172) | 0) <= 0) {
     break label$1
    }
   }
   $1982($1_1, 0, $1959($0_1, 36), i64toi32_i32$HIGH_BITS);
   $1982($2_1, 0, $1959($0_1, 44), i64toi32_i32$HIGH_BITS);
   return;
  }
  $3 = $1963($0_1, 52);
  if ($3 == Math_fround(0.0)) {
   $3 = Math_fround($1963($0_1 + 232 | 0, 0) - $1963($0_1 + 224 | 0, 0));
   label$5 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $4_1 = ~~$3;
     break label$5;
    }
    $4_1 = -2147483648;
   }
   $3 = Math_fround($4_1 | 0);
  }
  $1986($1_1, 0, $3);
  $3 = $1963($0_1 + 56 | 0, 0);
  if ($3 == Math_fround(0.0)) {
   $3 = Math_fround($1963($0_1 + 236 | 0, 0) - $1963($0_1 + 228 | 0, 0));
   label$8 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $4_1 = ~~$3;
     break label$8;
    }
    $4_1 = -2147483648;
   }
   $3 = Math_fround($4_1 | 0);
  }
  $1986($1_1, 4, $3);
  $3 = $1963($0_1, 52);
  if ($3 == Math_fround(0.0)) {
   $3 = $1963($0_1 + 232 | 0, 0);
   $5_1 = $1963($0_1 + 240 | 0, 0);
   $3 = Math_fround(($3 >= $5_1 ? $3 : $5_1) - $1963($0_1 + 224 | 0, 0));
   label$11 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $1_1 = ~~$3;
     break label$11;
    }
    $1_1 = -2147483648;
   }
   $3 = Math_fround($1_1 | 0);
  }
  $1986($2_1, 0, $3);
  $3 = $1963($0_1, 56);
  if ($3 == Math_fround(0.0)) {
   $3 = $1963($0_1 + 236 | 0, 0);
   $5_1 = $1963($0_1 + 244 | 0, 0);
   $3 = Math_fround(($3 >= $5_1 ? $3 : $5_1) - $1963($0_1 + 228 | 0, 0));
   label$14 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $0_1 = ~~$3;
     break label$14;
    }
    $0_1 = -2147483648;
   }
   $3 = Math_fround($0_1 | 0);
  }
  $1986($2_1, 4, $3);
 }
 
 function $149($0_1, $1_1, $2_1) {
  var $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = Math_fround(0), $16_1 = 0, $17_1 = Math_fround(0), $18_1 = Math_fround(0);
  $8 = global$0 - 16 | 0;
  global$0 = $8;
  $6_1 = $1944(0, 73568);
  $9 = $1944($1_1, 8);
  if (!($9 & 1)) {
   $4_1 = Math_fround($1963($6_1, 6472) * $1963($1_1, 572));
   $5_1 = $1944($1_1, 728);
   if ($5_1) {
    $4_1 = Math_fround($4_1 * $1963($5_1, 572))
   }
   $3 = $1963($6_1 + 5480 | 0, 0);
   $4_1 = Math_fround(Math_fround($3 + $3) + $4_1);
  }
  $3 = $4_1;
  $4_1 = Math_fround(0.0);
  if ($9 & 1024) {
   $4_1 = Math_fround($1963($6_1, 6472) * $1963($1_1, 572));
   $10_1 = $1963($1_1 + 312 | 0, 0);
   $5_1 = $1944($1_1, 728);
   if ($5_1) {
    $4_1 = Math_fround($4_1 * $1963($5_1, 572))
   }
   $11_1 = $1963($6_1 + 5480 | 0, 0);
   $4_1 = Math_fround(Math_fround($11_1 + $11_1) + Math_fround($10_1 + $4_1));
  }
  $14 = Math_fround($3 + $4_1);
  $3 = $1963($1_1 - -64 | 0, 0);
  $15_1 = Math_fround($3 + $3);
  $12_1 = Math_fround($14 + Math_fround($15_1 + $1963($2_1, 4)));
  $3 = $1963($1_1, 60);
  $10_1 = Math_fround($3 + $3);
  $13 = Math_fround(Math_fround($10_1 + $1963($2_1, 0)) + Math_fround(0.0));
  label$7 : {
   if ($9 & 33554432) {
    $1986($0_1, 4, $12_1);
    $1986($0_1, 0, $13);
    break label$7;
   }
   $16_1 = $1944($1944($6_1 + 7504 | 0, 0), 0);
   $11_1 = $1963($16_1 + 16 | 0, 0);
   $17_1 = $1963($6_1 + 5596 | 0, 0);
   $7_1 = $1963($6_1 + 5444 | 0, 0);
   $3 = $1963($6_1 + 5440 | 0, 0);
   $5_1 = $9 & 335544320;
   $4_1 = $5_1 ? ($3 < Math_fround(4.0) ? $3 : Math_fround(4.0)) : $3;
   $18_1 = $1963($16_1, 12);
   $3 = $1963($6_1 + 5592 | 0, 0);
   $3 = Math_fround($18_1 - Math_fround($3 + $3));
   $3 = $3 <= $4_1 ? $4_1 : $3;
   $4_1 = $4_1 > $13 ? $4_1 : $3 < $13 ? $3 : $13;
   $1986($0_1, 0, $4_1);
   $7_1 = $5_1 ? ($7_1 < Math_fround(4.0) ? $7_1 : Math_fround(4.0)) : $7_1;
   $3 = Math_fround($11_1 - Math_fround($17_1 + $17_1));
   $3 = $3 <= $7_1 ? $7_1 : $3;
   $3 = $7_1 > $12_1 ? $7_1 : $3 < $12_1 ? $3 : $12_1;
   $1986($0_1, 4, $3);
   $150($8 + 8 | 0, $1_1, $0_1);
   label$9 : {
    if (Math_fround($1963($8, 8) - $10_1) < $1963($2_1, 0)) {
     $5_1 = 1;
     if (($1944($1_1, 8) & 2056) == 2048) {
      break label$9
     }
    }
    $5_1 = $1937($1_1 + 9 | 0, 0) >>> 7 | 0;
   }
   label$11 : {
    if (Math_fround(Math_fround($1963($8, 12) - $15_1) - $14) < $1963($2_1, 4)) {
     $2_1 = 1;
     if (!($1937($1_1, 8) & 8)) {
      break label$11
     }
    }
    $2_1 = ($1937($1_1 + 9 | 0, 0) & 64) >>> 6 | 0;
   }
   if ($5_1) {
    $1986($0_1, 4, Math_fround($3 + $1963($6_1 + 5532 | 0, 0)))
   }
   if (!$2_1) {
    break label$7
   }
   $1986($0_1, 0, Math_fround($4_1 + $1963($6_1 + 5532 | 0, 0)));
  }
  global$0 = $8 + 16 | 0;
 }
 
 function $150($0_1, $1_1, $2_1) {
  var $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = 0;
  $7_1 = global$0 - 32 | 0;
  global$0 = $7_1;
  $6_1 = $1944(0, 73568);
  $1982($0_1, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
  if ($1937($6_1, 7300) & 16) {
   $2_1 = $6_1 + 7372 | 0;
   $8 = $1963($6_1 + 7364 | 0, 0);
   label$2 : {
    label$3 : {
     $5_1 = $1963($6_1 + 7360 | 0, 0);
     if (!($5_1 >= Math_fround(0.0))) {
      break label$3
     }
     $4_1 = $1963($6_1 + 7368 | 0, 0);
     if (!($4_1 >= Math_fround(0.0))) {
      break label$3
     }
     $3 = $1963($0_1, 0);
     $10_1 = $3 < $5_1 ? $5_1 : $4_1 < $3 ? $4_1 : $3;
     break label$2;
    }
    $10_1 = $1963($1_1, 28);
   }
   $4_1 = $1963($2_1, 0);
   $1986($0_1, 0, $10_1);
   label$4 : {
    if (!(!($8 >= Math_fround(0.0)) | !($4_1 >= Math_fround(0.0)))) {
     $3 = $1963($0_1, 4);
     $3 = $3 < $8 ? $8 : $4_1 < $3 ? $4_1 : $3;
     break label$4;
    }
    $3 = $1963($1_1 + 32 | 0, 0);
   }
   $1986($0_1, 4, $3);
   $9 = $1944($6_1 + 7376 | 0, 0);
   if ($9) {
    $2_1 = $7_1 + 24 | 0;
    $1982($2_1, 0, 0, 0);
    $11_1 = $7_1 + 16 | 0;
    $1982($11_1, 0, 0, 0);
    $1982($7_1, 8, 0, 0);
    $1973($7_1, 4, $1944($6_1 + 7380 | 0, 0));
    $1982($7_1, 8, $1959($1_1, 12), i64toi32_i32$HIGH_BITS);
    $1982($11_1, 0, $1959($1_1, 28), i64toi32_i32$HIGH_BITS);
    $1982($2_1, 0, $1959($0_1, 0), i64toi32_i32$HIGH_BITS);
    FUNCTION_TABLE[$9 | 0]($7_1 + 4 | 0);
    $1982($0_1, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
   }
   $3 = $1963($0_1, 0);
   label$7 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$3;
     break label$7;
    }
    $2_1 = -2147483648;
   }
   $1986($0_1, 0, Math_fround($2_1 | 0));
   $3 = $1963($0_1, 4);
   label$9 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$3;
     break label$9;
    }
    $2_1 = -2147483648;
   }
   $1986($0_1, 4, Math_fround($2_1 | 0));
  }
  $9 = $1944($1_1, 8);
  if (!($9 & 16777280)) {
   $4_1 = Math_fround(0.0);
   if ($9 & 1) {
    $3 = $4_1
   } else {
    $11_1 = $1944(0, 73568);
    $4_1 = Math_fround($1963($11_1, 6472) * $1963($1_1, 572));
    $2_1 = $1944($1_1, 728);
    if ($2_1) {
     $4_1 = Math_fround($4_1 * $1963($2_1, 572))
    }
    $3 = $1963($11_1 + 5480 | 0, 0);
    $3 = Math_fround(Math_fround($3 + $3) + $4_1);
   }
   $10_1 = Math_fround(0.0);
   if ($9 & 1024) {
    $2_1 = $1944(0, 73568);
    $4_1 = Math_fround($1963($2_1, 6472) * $1963($1_1, 572));
    $8 = $1963($1_1 + 312 | 0, 0);
    $1_1 = $1944($1_1, 728);
    if ($1_1) {
     $4_1 = Math_fround($4_1 * $1963($1_1, 572))
    }
    $5_1 = $1963($2_1 + 5480 | 0, 0);
    $10_1 = Math_fround(Math_fround($5_1 + $5_1) + Math_fround($8 + $4_1));
   }
   $8 = $1963($6_1 + 5440 | 0, 0);
   $5_1 = $1963($0_1, 4);
   $4_1 = $1963($6_1 + 5444 | 0, 0);
   $5_1 = $4_1 <= $5_1 ? $5_1 : $4_1;
   $1986($0_1, 4, $5_1);
   $4_1 = $1963($0_1, 0);
   $1986($0_1, 0, $4_1 >= $8 ? $4_1 : $8);
   $4_1 = Math_fround($3 + $10_1);
   $3 = Math_fround($1963($6_1 + 5432 | 0, 0) + Math_fround(-1.0));
   $3 = Math_fround($4_1 + ($3 <= Math_fround(0.0) ? Math_fround(0.0) : $3));
   $1986($0_1, 4, $3 <= $5_1 ? $5_1 : $3);
  }
  global$0 = $7_1 + 32 | 0;
 }
 
 function $151($0_1, $1_1) {
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = 0, $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = 0;
  $2_1 = global$0 - 48 | 0;
  global$0 = $2_1;
  $7_1 = $1944(0, 73568);
  $4_1 = $1944($1944($7_1 + 7504 | 0, 0), 0);
  $5_1 = $1963($4_1, 12);
  $6_1 = $1963($4_1, 4);
  $12_1 = $2_1 + 44 | 0;
  $3 = $1963($4_1 + 8 | 0, 0);
  $8 = Math_fround($3 + $1963($4_1 + 16 | 0, 0));
  $1986($12_1, 0, $8);
  $1986($2_1, 36, $3);
  $1986($2_1, 32, $6_1);
  $10_1 = Math_fround($6_1 + $5_1);
  $1986($2_1, 40, $10_1);
  $5_1 = $1963($7_1 + 5592 | 0, 0);
  $9 = $8;
  $11_1 = $1963($7_1 + 5596 | 0, 0);
  $8 = Math_fround($11_1 + $11_1) < Math_fround($8 - $3) ? Math_fround(-$11_1) : Math_fround(0.0);
  $1986($12_1, 0, Math_fround($9 + $8));
  $5_1 = Math_fround($5_1 + $5_1) < Math_fround($10_1 - $6_1) ? Math_fround(-$5_1) : Math_fround(0.0);
  $1986($2_1, 40, Math_fround($10_1 + $5_1));
  $1986($2_1, 36, Math_fround($3 - $8));
  $1986($2_1, 32, Math_fround($6_1 - $5_1));
  $4_1 = $1944($1_1, 8);
  label$1 : {
   if ($4_1 & 268435456) {
    $4_1 = $1944((Math_imul($1944($7_1, 7044), 84) + $1944($7_1 + 7052 | 0, 0) | 0) - 168 | 0, 0);
    $5_1 = $1963($7_1 + 5500 | 0, 0);
    $1983($2_1 + 24 | 0, 0, 0, 0);
    $1983($2_1, 16, 0, 0);
    label$3 : {
     if ($1937($4_1 + 306 | 0, 0)) {
      $6_1 = Math_fround(-3402823466385288598117041.0e14);
      $3 = $1963($4_1 + 500 | 0, 0);
      $5_1 = Math_fround(3402823466385288598117041.0e14);
      $9 = $1963($4_1 + 508 | 0, 0);
      break label$3;
     }
     $8 = $1963($4_1, 12);
     $6_1 = Math_fround($5_1 + $8);
     $3 = Math_fround(-3402823466385288598117041.0e14);
     $5_1 = Math_fround(Math_fround(Math_fround($8 + $1963($4_1, 20)) - $5_1) - $1963($4_1, 128));
     $9 = Math_fround(3402823466385288598117041.0e14);
    }
    $1986($2_1, 28, $9);
    $1986($2_1, 24, $5_1);
    $1986($2_1, 20, $3);
    $1986($2_1, 16, $6_1);
    $220($0_1, $1_1 + 12 | 0, $1_1 + 20 | 0, $1_1 + 168 | 0, $2_1 + 32 | 0, $2_1 + 16 | 0, 0);
    break label$1;
   }
   if ($4_1 & 67108864) {
    $6_1 = $1963($1_1, 12);
    $4_1 = $2_1 + 16 | 0;
    $3 = $1963($1_1 + 16 | 0, 0);
    $1986($4_1 + 12 | 0, 0, Math_fround($3 + Math_fround(1.0)));
    $1986($2_1, 24, Math_fround($6_1 + Math_fround(1.0)));
    $1986($2_1, 16, Math_fround($6_1 + Math_fround(-1.0)));
    $1986($2_1, 20, Math_fround($3 + Math_fround(-1.0)));
    $220($0_1, $1_1 + 12 | 0, $1_1 + 20 | 0, $1_1 + 168 | 0, $2_1 + 32 | 0, $4_1, 0);
    break label$1;
   }
   if ($4_1 & 33554432) {
    $3 = $1963($7_1 + 5600 | 0, 0);
    $140($2_1 + 8 | 0);
    $1983($2_1 + 24 | 0, 0, 0, 0);
    $1983($2_1, 16, 0, 0);
    label$7 : {
     label$8 : {
      if ($1937($7_1, 7570)) {
       break label$8
      }
      if (!$1937($7_1, 7571)) {
       break label$8
      }
      if ($1937($7_1, 8) & 4) {
       break label$8
      }
      $6_1 = $1963($2_1, 8);
      $5_1 = Math_fround($6_1 + Math_fround(16.0));
      $3 = $1963($2_1, 12);
      $9 = Math_fround($3 + Math_fround(8.0));
      break label$7;
     }
     $3 = Math_fround($3 * Math_fround(24.0));
     $6_1 = $1963($2_1, 8);
     $5_1 = Math_fround($3 + $6_1);
     $9 = $3;
     $3 = $1963($2_1, 12);
     $9 = Math_fround($9 + $3);
    }
    $1986($2_1, 28, $9);
    $1986($2_1, 24, $5_1);
    $1986($2_1, 20, Math_fround($3 + Math_fround(-8.0)));
    $1986($2_1, 16, Math_fround($6_1 + Math_fround(-16.0)));
    $220($0_1, $2_1 + 8 | 0, $1_1 + 20 | 0, $1_1 + 168 | 0, $2_1 + 32 | 0, $2_1 + 16 | 0, 2);
    break label$1;
   }
   $1982($0_1, 0, $1959($1_1, 12), i64toi32_i32$HIGH_BITS);
  }
  global$0 = $2_1 + 48 | 0;
 }
 
 function $153($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $5_1 = $0_1;
  $7_1 = $1944(0, 73568);
  $3 = $1944($7_1, 7080);
  $6_1 = $1944((($1944($3, 196) << 2) + $1944($3 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
  $1_1 = $6_1;
  while (1) {
   $2_1 = $5_1;
   $5_1 = $2_1 + 1 | 0;
   $4_1 = $1937($2_1, 0);
   if ($4_1) {
    label$4 : {
     if (($4_1 | 0) != 35) {
      break label$4
     }
     if (($1937($5_1, 0) | 0) != 35) {
      break label$4
     }
     $1_1 = ($1937($2_1, 2) | 0) == 35 ? $6_1 : $1_1;
    }
    $1_1 = $1944((($4_1 ^ $1_1 & 255) << 2) + 19360 | 0, 0) ^ $1_1 >>> 8;
   }
   if ($4_1) {
    continue
   }
   break;
  };
  $5_1 = $1_1 ^ -1;
  if (($1944($7_1, 7112) | 0) == ($5_1 | 0)) {
   $75($5_1, 11, $0_1)
  }
  $1_1 = $1944($3, 196);
  $0_1 = $1944($3 + 200 | 0, 0);
  label$8 : {
   if (($1_1 | 0) != ($0_1 | 0)) {
    break label$8
   }
   $2_1 = $1_1 + 1 | 0;
   $6_1 = $0_1;
   if ($0_1) {
    $1_1 = $0_1 + (($0_1 | 0) / 2 | 0) | 0
   } else {
    $1_1 = 8
   }
   $0_1 = ($1_1 | 0) > ($2_1 | 0) ? $1_1 : $2_1;
   if (($6_1 | 0) >= ($0_1 | 0)) {
    break label$8
   }
   $1_1 = $0_1 << 2;
   $2_1 = $1944(0, 73568);
   if ($2_1) {
    $2_1 = $2_1 + 876 | 0;
    $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
   }
   $1_1 = (((wasm2js_i32$1 = $1_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $2_1 = $1944($3 + 204 | 0, 0);
   if ($2_1) {
    $1602($1_1, $2_1, $1944($3, 196) << 2);
    $2_1 = $1944($3, 204);
    label$13 : {
     if (!$2_1) {
      break label$13
     }
     $4_1 = $1944(0, 73568);
     if (!$4_1) {
      break label$13
     }
     $4_1 = $4_1 + 876 | 0;
     $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($3, 200, $0_1);
   $1973($3, 204, $1_1);
  }
  $1973($1944($3 + 204 | 0, 0) + ($1944($3, 196) << 2) | 0, 0, $5_1);
  $1973($3, 196, $1944($3, 196) + 1 | 0);
 }
 
 function $154($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = Math_fround(0), $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0);
  $1982($0_1, 0, 0, 0);
  if ($1_1 & 1) {
   $9 = $1944(0, 73568);
   $6_1 = $1944($9 + 60 | 0, 0);
   if (($6_1 | 0) >= 0) {
    $5_1 = $1937(($9 + $6_1 | 0) + 256 | 0, 0) ? Math_fround(1.0) : Math_fround(0.0)
   } else {
    $5_1 = $7_1
   }
   $8 = $5_1;
   $6_1 = $1944($9 + 56 | 0, 0);
   if (($6_1 | 0) >= 0) {
    $5_1 = $1937(($9 + $6_1 | 0) + 256 | 0, 0) ? Math_fround(1.0) : Math_fround(0.0)
   } else {
    $5_1 = $7_1
   }
   $10_1 = $5_1;
   $6_1 = $1944($9 + 68 | 0, 0);
   if (($6_1 | 0) >= 0) {
    $5_1 = $1937(($9 + $6_1 | 0) + 256 | 0, 0) ? Math_fround(1.0) : Math_fround(0.0)
   } else {
    $5_1 = $7_1
   }
   $8 = Math_fround($8 - $10_1);
   $6_1 = $1944($9 - -64 | 0, 0);
   if (($6_1 | 0) >= 0) {
    $7_1 = $1937(($9 + $6_1 | 0) + 256 | 0, 0) ? Math_fround(1.0) : Math_fround(0.0)
   }
   $1986($0_1, 0, Math_fround($8 + Math_fround(0.0)));
   $1986($0_1, 4, Math_fround(Math_fround($5_1 - $7_1) + Math_fround(0.0)));
  }
  if ($1_1 & 2) {
   $7_1 = $333(17, $2_1);
   $8 = $333(16, $2_1);
   $10_1 = $333(19, $2_1);
   $5_1 = $333(18, $2_1);
   $1986($0_1, 0, Math_fround(Math_fround($7_1 - $8) + $1963($0_1, 0)));
   $1986($0_1, 4, Math_fround(Math_fround($10_1 - $5_1) + $1963($0_1, 4)));
  }
  if ($1_1 & 4) {
   $7_1 = $333(5, $2_1);
   $8 = $333(4, $2_1);
   $10_1 = $333(7, $2_1);
   $5_1 = $333(6, $2_1);
   $1986($0_1, 0, Math_fround(Math_fround($7_1 - $8) + $1963($0_1, 0)));
   $1986($0_1, 4, Math_fround(Math_fround($10_1 - $5_1) + $1963($0_1, 4)));
  }
  if ($1_1 & 8) {
   $7_1 = $333(9, $2_1);
   $8 = $333(8, $2_1);
   $10_1 = $333(11, $2_1);
   $5_1 = $333(10, $2_1);
   $1986($0_1, 0, Math_fround(Math_fround($7_1 - $8) + $1963($0_1, 0)));
   $1986($0_1, 4, Math_fround(Math_fround($10_1 - $5_1) + $1963($0_1, 4)));
  }
  label$9 : {
   if ($3 == Math_fround(0.0)) {
    break label$9
   }
   if (!($1963($1944(0, 73568) + 824 | 0, 0) > Math_fround(0.0))) {
    break label$9
   }
   $1986($0_1, 0, Math_fround($1963($0_1, 0) * $3));
   $1986($0_1, 4, Math_fround($1963($0_1, 4) * $3));
  }
  label$10 : {
   if ($4_1 == Math_fround(0.0)) {
    break label$10
   }
   if (!($1963($1944(0, 73568) + 828 | 0, 0) > Math_fround(0.0))) {
    break label$10
   }
   $1986($0_1, 0, Math_fround($1963($0_1, 0) * $4_1));
   $1986($0_1, 4, Math_fround($1963($0_1, 4) * $4_1));
  }
 }
 
 function $155($0_1, $1_1) {
  var $2_1 = Math_fround(0), $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = 0, $8 = 0, $9 = 0;
  $1982($0_1, 0, $1959($1_1, 88), i64toi32_i32$HIGH_BITS);
  $3 = $1963($1_1, 104);
  if ($3 < Math_fround(3402823466385288598117041.0e14)) {
   $2_1 = $1963($1_1, 112);
   $4_1 = $1963($1_1, 128);
   $5_1 = $1963($1_1, 120);
   label$2 : {
    if (!($5_1 > Math_fround(0.0))) {
     break label$2
    }
    if ($3 <= Math_fround($5_1 + Math_fround(0.0))) {
     $3 = Math_fround(Math_fround($3 * $2_1) + Math_fround(0.0));
     break label$2;
    }
    $6_1 = Math_fround(Math_fround($1963($1_1, 96) + $1963($1_1, 28)) - $4_1);
    if (!(Math_fround($6_1 - $5_1) <= $3)) {
     break label$2
    }
    $3 = Math_fround(Math_fround(Math_fround($6_1 - $3) * $2_1) + $3);
   }
   $1986($0_1, 0, Math_fround($3 - Math_fround($2_1 * Math_fround($1963($1_1, 28) - $4_1))));
  }
  $3 = $1963($1_1 + 108 | 0, 0);
  if ($3 < Math_fround(3402823466385288598117041.0e14)) {
   $2_1 = Math_fround(0.0);
   $8 = $1944($1_1, 8);
   if ($8 & 1) {
    $4_1 = $2_1
   } else {
    $9 = $1944(0, 73568);
    $2_1 = Math_fround($1963($9, 6472) * $1963($1_1, 572));
    $7_1 = $1944($1_1, 728);
    if ($7_1) {
     $2_1 = Math_fround($2_1 * $1963($7_1, 572))
    }
    $4_1 = $1963($9 + 5480 | 0, 0);
    $4_1 = Math_fround(Math_fround($4_1 + $4_1) + $2_1);
   }
   $2_1 = Math_fround(0.0);
   if ($8 & 1024) {
    $8 = $1944(0, 73568);
    $2_1 = Math_fround($1963($8, 6472) * $1963($1_1, 572));
    $5_1 = $1963($1_1 + 312 | 0, 0);
    $9 = $1944($1_1, 728);
    if ($9) {
     $2_1 = Math_fround($2_1 * $1963($9, 572))
    }
    $6_1 = $1963($8 + 5480 | 0, 0);
    $2_1 = Math_fround(Math_fround($6_1 + $6_1) + Math_fround($5_1 + $2_1));
   }
   $4_1 = Math_fround(Math_fround($4_1 + $2_1) + $1963($1_1 + 132 | 0, 0));
   $2_1 = $1963($1_1 + 116 | 0, 0);
   $5_1 = $1963($1_1 + 124 | 0, 0);
   label$13 : {
    if (!($5_1 > Math_fround(0.0))) {
     break label$13
    }
    if ($3 <= Math_fround($5_1 + Math_fround(0.0))) {
     $3 = Math_fround(Math_fround($3 * $2_1) + Math_fround(0.0));
     break label$13;
    }
    $6_1 = Math_fround(Math_fround($1963($1_1 + 100 | 0, 0) + $1963($1_1 + 32 | 0, 0)) - $4_1);
    if (!(Math_fround($6_1 - $5_1) <= $3)) {
     break label$13
    }
    $3 = Math_fround(Math_fround(Math_fround($6_1 - $3) * $2_1) + $3);
   }
   $1986($0_1, 4, Math_fround($3 - Math_fround($2_1 * Math_fround($1963($1_1 + 32 | 0, 0) - $4_1))));
  }
  $2_1 = $1963($0_1, 0);
  $2_1 = $2_1 >= Math_fround(0.0) ? $2_1 : Math_fround(0.0);
  label$17 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $7_1 = ~~$2_1;
    break label$17;
   }
   $7_1 = -2147483648;
  }
  $2_1 = Math_fround($7_1 | 0);
  $1986($0_1, 0, $2_1);
  $4_1 = $1963($0_1, 4);
  $4_1 = $4_1 >= Math_fround(0.0) ? $4_1 : Math_fround(0.0);
  label$19 : {
   if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
    $7_1 = ~~$4_1;
    break label$19;
   }
   $7_1 = -2147483648;
  }
  $4_1 = Math_fround($7_1 | 0);
  $1986($0_1, 4, $4_1);
  label$21 : {
   if ($1937($1_1, 141)) {
    break label$21
   }
   if ($1937($1_1, 143)) {
    break label$21
   }
   $3 = $1963($1_1, 96);
   $1986($0_1, 0, $2_1 < $3 ? $2_1 : $3);
   $2_1 = $1963($1_1 + 100 | 0, 0);
   $1986($0_1, 4, $2_1 > $4_1 ? $4_1 : $2_1);
  }
 }
 
 function $156($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $10_1 = $1944(0, 73568);
  $13 = $1944($10_1 + 12160 | 0, 0);
  $1_1 = $1936(18920, 0);
  $4_1 = $0_1;
  __inlined_func$1700 : {
   if (!$1_1) {
    break __inlined_func$1700
   }
   $1_1 = $1693($0_1, $1_1);
   label$2 : {
    if (!$1_1) {
     break label$2
    }
    $4_1 = $1_1;
    if (!$1937(18920, 1)) {
     break __inlined_func$1700
    }
    if (!$1937($1_1, 1)) {
     break label$2
    }
    if (!$1937(18920, 2)) {
     $3 = $1937($1_1, 1);
     $4_1 = ($3 | 0) != 0;
     label$10 : {
      if (!$3) {
       break label$10
      }
      $5_1 = $3 | $1937($1_1, 0) << 8;
      $6_1 = $1937(18920, 0) << 8 | $1937(18920, 1);
      if (($5_1 | 0) == ($6_1 | 0)) {
       break label$10
      }
      $3 = $1_1 + 1 | 0;
      while (1) {
       $1_1 = $3;
       $2_1 = $1937($1_1, 1);
       $4_1 = ($2_1 | 0) != 0;
       if (!$2_1) {
        break label$10
       }
       $3 = $1_1 + 1 | 0;
       $5_1 = $2_1 | $5_1 << 8 & 65280;
       if (($6_1 | 0) != ($5_1 | 0)) {
        continue
       }
       break;
      };
     }
     $4_1 = $4_1 ? $1_1 : 0;
     break __inlined_func$1700;
    }
    if (!$1937($1_1, 2)) {
     break label$2
    }
    if (!$1937(18920, 3)) {
     $3 = $1_1 + 2 | 0;
     $4_1 = $1937($1_1, 2);
     $5_1 = ($4_1 | 0) != 0;
     label$11 : {
      label$22 : {
       if (!$4_1) {
        break label$22
       }
       $4_1 = $1937($1_1, 1) << 16 | $1937($1_1, 0) << 24 | $4_1 << 8;
       $6_1 = $1937(18920, 1) << 16 | $1937(18920, 0) << 24 | $1937(18920, 2) << 8;
       if (($4_1 | 0) == ($6_1 | 0)) {
        break label$22
       }
       while (1) {
        $1_1 = $3 + 1 | 0;
        $2_1 = $1937($3, 1);
        $5_1 = ($2_1 | 0) != 0;
        if (!$2_1) {
         break label$11
        }
        $3 = $1_1;
        $4_1 = ($2_1 | $4_1) << 8;
        if (($6_1 | 0) != ($4_1 | 0)) {
         continue
        }
        break;
       };
       break label$11;
      }
      $1_1 = $3;
     }
     $4_1 = $5_1 ? $1_1 - 2 | 0 : 0;
     break __inlined_func$1700;
    }
    if (!$1937($1_1, 3)) {
     break label$2
    }
    if (!$1937(18920, 4)) {
     $3 = $1_1 + 3 | 0;
     $4_1 = $1937($1_1, 3);
     $5_1 = ($4_1 | 0) != 0;
     label$12 : {
      label$23 : {
       if (!$4_1) {
        break label$23
       }
       $4_1 = $4_1 | ($1937($1_1, 1) << 16 | $1937($1_1, 0) << 24 | $1937($1_1, 2) << 8);
       $1_1 = $1942(18920, 0);
       $6_1 = $1_1 << 24 | ($1_1 & 65280) << 8 | ($1_1 >>> 8 & 65280 | $1_1 >>> 24);
       if (($4_1 | 0) == ($6_1 | 0)) {
        break label$23
       }
       while (1) {
        $1_1 = $3 + 1 | 0;
        $2_1 = $1937($3, 1);
        $5_1 = ($2_1 | 0) != 0;
        if (!$2_1) {
         break label$12
        }
        $3 = $1_1;
        $4_1 = $2_1 | $4_1 << 8;
        if (($6_1 | 0) != ($4_1 | 0)) {
         continue
        }
        break;
       };
       break label$12;
      }
      $1_1 = $3;
     }
     $4_1 = $5_1 ? $1_1 - 3 | 0 : 0;
     break __inlined_func$1700;
    }
    $5_1 = $1_1;
    $11_1 = global$0 - 1056 | 0;
    global$0 = $11_1;
    $1983($11_1 + 1048 | 0, 0, 0, 0);
    $1983($11_1 + 1040 | 0, 0, 0, 0);
    $1983($11_1, 1032, 0, 0);
    $1983($11_1, 1024, 0, 0);
    label$13 : {
     label$24 : {
      label$35 : {
       label$4 : {
        $2_1 = $1937(18920, 0);
        label$5 : {
         if (!$2_1) {
          $7_1 = -1;
          $1_1 = 1;
          break label$5;
         }
         while (1) {
          if (!$1937($5_1 + $8 | 0, 0)) {
           break label$24
          }
          $8 = $8 + 1 | 0;
          $1973((($2_1 & 255) << 2) + $11_1 | 0, 0, $8);
          $1_1 = ($11_1 + 1024 | 0) + ($2_1 >>> 3 & 28) | 0;
          $1973($1_1, 0, $1944($1_1, 0) | 1 << $2_1);
          $2_1 = $1937($8 + 18920 | 0, 0);
          if ($2_1) {
           continue
          }
          break;
         };
         $1_1 = 1;
         $7_1 = -1;
         if ($8 >>> 0 > 1) {
          break label$4
         }
        }
        $6_1 = -1;
        $3 = 1;
        break label$35;
       }
       $4_1 = 1;
       $2_1 = 1;
       while (1) {
        $6_1 = $1937(($2_1 + $7_1 | 0) + 18920 | 0, 0);
        $9 = $1937($1_1 + 18920 | 0, 0);
        label$9 : {
         if (($6_1 | 0) == ($9 | 0)) {
          if (($2_1 | 0) == ($4_1 | 0)) {
           $3 = $3 + $4_1 | 0;
           $2_1 = 1;
           break label$9;
          }
          $2_1 = $2_1 + 1 | 0;
          break label$9;
         }
         if ($6_1 >>> 0 > $9 >>> 0) {
          $4_1 = $1_1 - $7_1 | 0;
          $3 = $1_1;
          $2_1 = 1;
          break label$9;
         }
         $7_1 = $3;
         $3 = $3 + 1 | 0;
         $4_1 = 1;
         $2_1 = 1;
        }
        $1_1 = $2_1 + $3 | 0;
        if ($1_1 >>> 0 < $8 >>> 0) {
         continue
        }
        break;
       };
       $3 = 1;
       $6_1 = -1;
       if ($8 >>> 0 <= 1) {
        $1_1 = $4_1;
        break label$35;
       }
       $1_1 = 0;
       $9 = 1;
       $2_1 = 1;
       while (1) {
        $12_1 = $1937(($2_1 + $6_1 | 0) + 18920 | 0, 0);
        $14 = $1937($3 + 18920 | 0, 0);
        label$15 : {
         if (($12_1 | 0) == ($14 | 0)) {
          if (($2_1 | 0) == ($9 | 0)) {
           $1_1 = $1_1 + $9 | 0;
           $2_1 = 1;
           break label$15;
          }
          $2_1 = $2_1 + 1 | 0;
          break label$15;
         }
         if ($12_1 >>> 0 < $14 >>> 0) {
          $9 = $3 - $6_1 | 0;
          $1_1 = $3;
          $2_1 = 1;
          break label$15;
         }
         $6_1 = $1_1;
         $1_1 = $1_1 + 1 | 0;
         $9 = 1;
         $2_1 = 1;
        }
        $3 = $2_1 + $1_1 | 0;
        if ($3 >>> 0 < $8 >>> 0) {
         continue
        }
        break;
       };
       $1_1 = $4_1;
       $3 = $9;
      }
      $4_1 = $1_1;
      $1_1 = $6_1 + 1 >>> 0 > $7_1 + 1 >>> 0;
      $4_1 = $1_1 ? $3 : $4_1;
      $12_1 = $1_1 ? $6_1 : $7_1;
      $9 = $12_1 + 1 | 0;
      label$19 : {
       if ($1645(18920, $4_1 + 18920 | 0, $9)) {
        $1_1 = ($12_1 ^ -1) + $8 | 0;
        $4_1 = ($1_1 >>> 0 < $12_1 >>> 0 ? $12_1 : $1_1) + 1 | 0;
        $15_1 = 0;
        break label$19;
       }
       $15_1 = $8 - $4_1 | 0;
      }
      $16_1 = $8 - 1 | 0;
      $14 = $8 | 63;
      $6_1 = 0;
      $1_1 = $5_1;
      while (1) {
       label$227 : {
        if ($5_1 - $1_1 >>> 0 >= $8 >>> 0) {
         break label$227
        }
        $3 = $1644($5_1, 0, $14);
        if ($3) {
         $5_1 = $3;
         if ($3 - $1_1 >>> 0 < $8 >>> 0) {
          break label$24
         }
         break label$227;
        }
        $5_1 = $5_1 + $14 | 0;
       }
       $3 = $1937($1_1 + $16_1 | 0, 0);
       $2_1 = $8;
       label$248 : {
        label$25 : {
         if (!($1944(($11_1 + 1024 | 0) + ($3 >>> 3 & 28) | 0, 0) >>> $3 & 1)) {
          break label$25
         }
         $3 = $1944(($3 << 2) + $11_1 | 0, 0);
         if (($8 | 0) != ($3 | 0)) {
          $3 = $8 - $3 | 0;
          $2_1 = $3 >>> 0 > $6_1 >>> 0 ? $3 : $6_1;
          break label$25;
         }
         label$28 : {
          $2_1 = $9;
          $3 = $2_1 >>> 0 > $6_1 >>> 0 ? $2_1 : $6_1;
          $7_1 = $1937($3 + 18920 | 0, 0);
          if ($7_1) {
           while (1) {
            if (($1937($1_1 + $3 | 0, 0) | 0) != ($7_1 & 255)) {
             break label$28
            }
            $3 = $3 + 1 | 0;
            $7_1 = $1937($3 + 18920 | 0, 0);
            if ($7_1) {
             continue
            }
            break;
           }
          }
          while (1) {
           if ($2_1 >>> 0 <= $6_1 >>> 0) {
            break label$13
           }
           $2_1 = $2_1 - 1 | 0;
           if (($1937($2_1 + 18920 | 0, 0) | 0) == ($1937($1_1 + $2_1 | 0, 0) | 0)) {
            continue
           }
           break;
          };
          $2_1 = $4_1;
          $3 = $15_1;
          break label$248;
         }
         $2_1 = $3 - $12_1 | 0;
        }
        $3 = 0;
       }
       $6_1 = $3;
       $1_1 = $1_1 + $2_1 | 0;
       continue;
      };
     }
     $1_1 = 0;
    }
    global$0 = $11_1 + 1056 | 0;
    $3 = $1_1;
   }
   $4_1 = $3;
  }
  $1_1 = $4_1;
  $1_1 = $1_1 ? $1_1 : $0_1;
  $3 = $1697($1_1);
  $2_1 = ($3 & -4) + 24 | 0;
  $6_1 = $1944($10_1, 12156);
  $0_1 = $2_1 + $6_1 | 0;
  label$1 : {
   if (($13 | 0) >= ($0_1 | 0)) {
    break label$1
   }
   $4_1 = $13 ? $13 + (($13 | 0) / 2 | 0) | 0 : 8;
   $4_1 = ($0_1 | 0) < ($4_1 | 0) ? $4_1 : $0_1;
   if (($13 | 0) >= ($4_1 | 0)) {
    break label$1
   }
   if ($10_1) {
    $5_1 = $10_1 + 876 | 0;
    $1973($5_1, 0, $1944($5_1, 0) + 1 | 0);
   }
   $5_1 = (((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $7_1 = $1944($10_1 + 12164 | 0, 0);
   if ($7_1) {
    $1602($5_1, $7_1, $1944($10_1, 12156));
    $7_1 = $1944($10_1, 12164);
    label$6 : {
     if (!$7_1) {
      break label$6
     }
     $9 = $1944(0, 73568);
     if (!$9) {
      break label$6
     }
     $9 = $9 + 876 | 0;
     $1973($9, 0, $1944($9, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $7_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($10_1, 12160, $4_1);
   $1973($10_1, 12164, $5_1);
  }
  $1973($10_1, 12156, $0_1);
  $0_1 = $1944($10_1 + 12164 | 0, 0) + $6_1 | 0;
  $1982($0_1, 4, 0, 0);
  $1973($0_1, 0, $2_1);
  $1982($0_1 + 12 | 0, 0, 0, 0);
  $6_1 = $0_1 + 4 | 0;
  label$79 : {
   if (!$3) {
    $0_1 = $1_1;
    $2_1 = -1;
    while (1) {
     $4_1 = $0_1;
     $0_1 = $4_1 + 1 | 0;
     $5_1 = $1937($4_1, 0);
     if ($5_1) {
      label$125 : {
       if (($5_1 | 0) != 35) {
        break label$125
       }
       if (($1937($0_1, 0) | 0) != 35) {
        break label$125
       }
       $2_1 = ($1937($4_1, 2) | 0) == 35 ? -1 : $2_1;
      }
      $2_1 = $1944((($5_1 ^ $2_1 & 255) << 2) + 19360 | 0, 0) ^ $2_1 >>> 8;
     }
     if ($5_1) {
      continue
     }
     break;
    };
    break label$79;
   }
   $4_1 = $3;
   $2_1 = -1;
   $0_1 = $1_1;
   while (1) {
    $5_1 = $0_1;
    $0_1 = $5_1 + 1 | 0;
    $7_1 = $1937($5_1, 0);
    $4_1 = $4_1 - 1 | 0;
    label$16 : {
     if (($7_1 | 0) != 35 | $4_1 >>> 0 < 2) {
      break label$16
     }
     if (($1937($0_1, 0) | 0) != 35) {
      break label$16
     }
     $2_1 = ($1937($5_1, 2) | 0) == 35 ? -1 : $2_1;
    }
    $2_1 = $1944((($7_1 ^ $2_1 & 255) << 2) + 19360 | 0, 0) ^ $2_1 >>> 8;
    if ($4_1) {
     continue
    }
    break;
   };
  }
  $1973($6_1, 0, $2_1 ^ -1);
  $1602($6_1 + 16 | 0, $1_1, $3 + 1 | 0);
  return $6_1;
 }
 
 function $158($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $4_1 = $1944($1944(0, 73568), 7080);
  $1968($4_1, 140, 1);
  $7_1 = $1944($4_1, 580);
  $0_1 = $1959($0_1, 0);
  $5_1 = i64toi32_i32$HIGH_BITS;
  $1983($3, 24, $0_1, $5_1);
  $1_1 = $1959($1_1, 0);
  $6_1 = i64toi32_i32$HIGH_BITS;
  $1983($3, 16, $1_1, $6_1);
  $1983($3, 8, $0_1, $5_1);
  $1983($3, 0, $1_1, $6_1);
  $378($7_1, $3 + 8 | 0, $3, $2_1);
  $0_1 = $1944($4_1, 580);
  $0_1 = (($1944($0_1, 60) << 4) + $1944($0_1 + 68 | 0, 0) | 0) - 16 | 0;
  $1_1 = $1959($0_1, 0);
  $2_1 = i64toi32_i32$HIGH_BITS;
  $1982($4_1 + 504 | 0, 0, $1959($0_1, 8), i64toi32_i32$HIGH_BITS);
  $1982($4_1, 496, $1_1, $2_1);
  global$0 = $3 + 32 | 0;
 }
 
 function $159() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0;
  $0_1 = $1944($1944(0, 73568), 7080);
  $1968($0_1, 140, 1);
  $380($1944($0_1, 580));
  $1_1 = $1944($0_1, 580);
  $1_1 = (($1944($1_1, 60) << 4) + $1944($1_1 + 68 | 0, 0) | 0) - 16 | 0;
  $2_1 = $1959($1_1, 0);
  $3 = i64toi32_i32$HIGH_BITS;
  $1982($0_1 + 504 | 0, 0, $1959($1_1, 8), i64toi32_i32$HIGH_BITS);
  $1982($0_1, 496, $2_1, $3);
 }
 
 function $161() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = 0, $8 = 0, $9 = Math_fround(0), $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = 0, $14 = 0, $15_1 = Math_fround(0), $16_1 = 0, $17_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $14 = global$0 - 16 | 0;
  global$0 = $14;
  $4_1 = $1944(0, 73568);
  label$1 : {
   if (($1944($4_1, 6988) | 0) == ($1944($4_1, 6984) | 0)) {
    break label$1
   }
   if (($1944($4_1, 12180) | 0) > 0) {
    while (1) {
     $1_1 = $1944($4_1, 12188) + Math_imul($0_1, 20) | 0;
     if (($1944($1_1, 4) | 0) == 2) {
      FUNCTION_TABLE[$1944($1_1, 12) | 0]($4_1, $1_1)
     }
     $0_1 = $0_1 + 1 | 0;
     if (($1944($4_1, 12180) | 0) > ($0_1 | 0)) {
      continue
     }
     break;
    }
   }
   $0_1 = $1944(0, 73568);
   if (($1944($0_1, 7044) | 0) >= 2) {
    while (1) {
     $142();
     if (($1944($0_1, 7044) | 0) > 1) {
      continue
     }
     break;
    }
   }
   $0_1 = $1944($4_1 + 220 | 0, 0);
   label$7 : {
    if (!$0_1) {
     break label$7
    }
    $6_1 = $1963($4_1, 12116);
    if ($6_1 != Math_fround(3402823466385288598117041.0e14)) {
     $6_1 = Math_fround($6_1 - $1963($4_1, 12108));
     $9 = Math_fround($6_1 * $6_1);
     $6_1 = Math_fround($1963($4_1 + 12120 | 0, 0) - $1963($4_1 + 12112 | 0, 0));
     if (!(Math_fround($9 + Math_fround($6_1 * $6_1)) > Math_fround(9.999999747378752e-05))) {
      break label$7
     }
    }
    $6_1 = $1963($4_1 + 12112 | 0, 0);
    label$9 : {
     if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
      $1_1 = ~~$6_1;
      break label$9;
     }
     $1_1 = -2147483648;
    }
    $6_1 = $1963($4_1, 12108);
    label$11 : {
     if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
      $3 = ~~$6_1;
      break label$11;
     }
     $3 = -2147483648;
    }
    FUNCTION_TABLE[$0_1 | 0]($3, $1_1);
    $1982($4_1, 12116, $1959($4_1, 12108), i64toi32_i32$HIGH_BITS);
   }
   $1968($4_1, 6997, 0);
   $0_1 = $1944($4_1, 7080);
   label$13 : {
    if (!$0_1) {
     break label$13
    }
    if ($1937($0_1, 140)) {
     break label$13
    }
    $1968($0_1, 138, 0);
   }
   $142();
   $7_1 = $1944(0, 73568);
   label$14 : {
    if (!$1944($7_1, 7844)) {
     break label$14
    }
    if ($1963($7_1, 7856) < Math_fround(.15000000596046448)) {
     break label$14
    }
    if (!$1944($7_1, 7852)) {
     $3 = 2611;
     $1_1 = -1;
     while (1) {
      $0_1 = $3;
      $3 = $0_1 + 1 | 0;
      $2_1 = $1937($0_1, 0);
      if ($2_1) {
       label$19 : {
        if (($2_1 | 0) != 35) {
         break label$19
        }
        if (($1937($3, 0) | 0) != 35) {
         break label$19
        }
        $1_1 = ($1937($0_1, 2) | 0) == 35 ? -1 : $1_1;
       }
       $1_1 = $1944((($2_1 ^ $1_1 & 255) << 2) + 19360 | 0, 0) ^ $1_1 >>> 8;
      }
      if (($0_1 | 0) != 2630) {
       continue
      }
      break;
     };
     $10_1 = $1_1 ^ -1;
     $2_1 = $1944($7_1 + 7064 | 0, 0);
     $1_1 = $2_1;
     $5_1 = $1944($7_1, 7056);
     if ($5_1) {
      $3 = $2_1;
      $0_1 = $5_1;
      while (1) {
       $8 = $0_1 >>> 1 | 0;
       $1_1 = ($8 << 3) + $3 | 0;
       $13 = $1944($1_1, 0) >>> 0 < $10_1 >>> 0;
       $3 = $13 ? $1_1 + 8 | 0 : $3;
       $1_1 = $3;
       $0_1 = $13 ? $0_1 + ($8 ^ -1) | 0 : $8;
       if ($0_1) {
        continue
       }
       break;
      };
     }
     $0_1 = 0;
     label$24 : {
      if (($2_1 + ($5_1 << 3) | 0) == ($1_1 | 0)) {
       break label$24
      }
      $0_1 = 0;
      if (($1944($1_1, 0) | 0) != ($10_1 | 0)) {
       break label$24
      }
      $0_1 = $1944($1_1, 4);
     }
     $1973($7_1, 7852, $0_1);
    }
    $0_1 = $1944($1944($7_1 + 7504 | 0, 0), 0);
    $1_1 = $0_1 + 16 | 0;
    $6_1 = $1963($1_1, 0);
    $9 = $1963($0_1, 12);
    $1982($7_1 + 7376 | 0, 0, 0, 0);
    $1982($7_1 + 7368 | 0, 0, 2139095039, 2139095039);
    $1986($7_1 + 7360 | 0, 0, Math_fround($9 * Math_fround(.20000000298023224)));
    $3 = $1944($7_1, 7300);
    $1973($7_1, 7300, $3 | 16);
    $1986($7_1 + 7364 | 0, 0, Math_fround($6_1 * Math_fround(.20000000298023224)));
    $6_1 = $1963($0_1, 4);
    $9 = $1963($0_1, 12);
    $12_1 = $1963($0_1 + 8 | 0, 0);
    $11_1 = $1963($1_1, 0);
    $1982($7_1 + 7324 | 0, 0, 1056964608, 1056964608);
    $1973($7_1 + 7304 | 0, 0, 1);
    $1973($7_1, 7300, $3 | 17);
    $1986($7_1 + 7320 | 0, 0, Math_fround($12_1 + Math_fround($11_1 * Math_fround(.5))));
    $1986($7_1 + 7316 | 0, 0, Math_fround($6_1 + Math_fround($9 * Math_fround(.5))));
    $6_1 = $1963($7_1 + 5424 | 0, 0);
    $9 = $1963($7_1 + 5428 | 0, 0);
    $1986($14, 12, Math_fround($9 + $9));
    $1986($14, 8, Math_fround($6_1 + $6_1));
    $59(2, $14 + 8 | 0);
    $143(2611, 0, 791367);
    $0_1 = $1944($7_1, 7020);
    if (($0_1 | 0) > 0) {
     while (1) {
      $3 = $0_1;
      $2_1 = $0_1 - 1 | 0;
      $5_1 = $1944($1944($7_1, 7028) + ($2_1 << 2) | 0, 0);
      label$28 : {
       if (!$1937($5_1, 139)) {
        break label$28
       }
       if (($1944($5_1, 736) | 0) != ($5_1 | 0)) {
        break label$28
       }
       $8 = $1944($5_1, 8);
       if ($8 & 524288) {
        break label$28
       }
       $10_1 = $1944($5_1, 0);
       $0_1 = $10_1;
       $1_1 = $0_1;
       label$29 : {
        if (($0_1 | 0) == -1) {
         break label$29
        }
        while (1) {
         label$31 : {
          $1_1 = $1937($0_1, 0);
          if (($1_1 | 0) != 35) {
           if ($1_1) {
            break label$31
           }
           $1_1 = $0_1;
           break label$29;
          }
          if (($1937($0_1, 1) | 0) != 35) {
           break label$31
          }
          $1_1 = $0_1;
          break label$29;
         }
         $1_1 = -1;
         $0_1 = $0_1 + 1 | 0;
         if (($0_1 | 0) != -1) {
          continue
         }
         break;
        };
       }
       $0_1 = $10_1;
       label$33 : {
        if (($1_1 | 0) != ($10_1 | 0)) {
         break label$33
        }
        $0_1 = 17942;
        if ($8 & 67108864) {
         break label$33
        }
        label$35 : {
         if (!($8 & 1024)) {
          break label$35
         }
         if ($1695($10_1, 6628)) {
          break label$35
         }
         $0_1 = 17926;
         break label$33;
        }
        $0_1 = 18388;
       }
       $1_1 = $1944($7_1, 7844);
       $1982($14, 8, 0, 0);
       $601($0_1, ($1_1 | 0) == ($5_1 | 0), 0, $14 + 8 | 0);
      }
      $0_1 = $2_1;
      if (($3 | 0) > 1) {
       continue
      }
      break;
     }
    }
    $142();
    $0_1 = $1944(0, 73568);
    $1_1 = $1944($0_1 + 7416 | 0, 0);
    $3 = $1944($0_1, 7408) - 1 | 0;
    $5_1 = $1944($1_1 + Math_imul($3, 12) | 0, 0);
    $2_1 = Math_imul($5_1, 12);
    label$36 : {
     if (($1944($2_1 + 20912 | 0, 0) | 0) != 8) {
      break label$36
     }
     $2_1 = ($1944($2_1 + 20920 | 0, 0) + $0_1 | 0) + 5416 | 0;
     if (8206235 >>> $5_1 & 1) {
      $1986($2_1, 0, $1963($1_1 + Math_imul($3, 12) | 0, 4));
      break label$36;
     }
     if (!(25348196 >>> $5_1 & 1)) {
      break label$36
     }
     $1_1 = $1_1 + Math_imul($3, 12) | 0;
     $1986($2_1, 0, $1963($1_1, 4));
     $1986($2_1, 4, $1963($1_1 + 8 | 0, 0));
    }
    $1973($0_1, 7408, $3);
   }
   label$38 : {
    if (!$1944($7_1, 7508)) {
     break label$38
    }
    $2_1 = $1944(0, 73568);
    if (!$1937($2_1, 7597)) {
     break label$38
    }
    if ($1944($2_1 + 7672 | 0, 0)) {
     break label$38
    }
    if ($1944($2_1 + 7760 | 0, 0)) {
     break label$38
    }
    $0_1 = $1944($7_1, 7600);
    if (!($0_1 & 15) | $0_1 & 128) {
     break label$38
    }
    $7_1 = $1944($2_1, 7508);
    $0_1 = $7_1 + ($1944($2_1, 7564) << 4) | 0;
    $12_1 = $1963($0_1 + 776 | 0, 0);
    $6_1 = $1963($0_1 + 772 | 0, 0);
    $11_1 = $1963($0_1 + 768 | 0, 0);
    $10_1 = $0_1 + 764 | 0;
    $9 = $1963($10_1, 0);
    $5_1 = $1944($2_1, 7600);
    $8 = $1944($2_1, 7612);
    label$39 : {
     if ($8) {
      $1_1 = 0;
      $0_1 = $8;
      break label$39;
     }
     if (!($5_1 & 5)) {
      $1_1 = 0;
      $0_1 = 0;
      break label$39;
     }
     $6_1 = Math_fround($1963($7_1, 36) + $1963($7_1, 60));
     $1_1 = 1;
     label$42 : {
      if (!($5_1 & 4)) {
       $9 = $6_1;
       $0_1 = 0;
       break label$42;
      }
      $9 = Math_fround($12_1 - $11_1);
      $12_1 = Math_fround($12_1 - $9);
      $11_1 = Math_fround($11_1 - $9);
      $9 = $6_1;
      $0_1 = 2;
     }
    }
    $15_1 = $9;
    label$44 : {
     if (!(!($5_1 & 5) | ($8 | 0) != 1)) {
      $9 = Math_fround(-$1963($7_1, 60));
      $1_1 = 1;
      label$46 : {
       if (!($5_1 & 4)) {
        $6_1 = $11_1;
        break label$46;
       }
       $6_1 = Math_fround($12_1 - $11_1);
       $12_1 = Math_fround($12_1 + $6_1);
       $6_1 = Math_fround($11_1 + $6_1);
       $0_1 = 3;
      }
      $11_1 = $9;
      break label$44;
     }
     $9 = $6_1;
     $6_1 = $11_1;
     $11_1 = $15_1;
    }
    $3 = $1_1;
    $1_1 = $0_1;
    $0_1 = $5_1 & 10;
    if (!(!$0_1 | ($8 | 0) != 2)) {
     $6_1 = Math_fround($1963($7_1 + 40 | 0, 0) + $1963($7_1 - -64 | 0, 0));
     if ($5_1 & 8) {
      $12_1 = Math_fround($9 - $11_1);
      $9 = Math_fround($9 - $12_1);
      $11_1 = Math_fround($11_1 - $12_1);
      $1_1 = 0;
     }
     $12_1 = $6_1;
     $3 = 1;
    }
    label$52 : {
     if (!(!$0_1 | ($8 | 0) != 3)) {
      $6_1 = Math_fround(-$1963($7_1 - -64 | 0, 0));
      if (!($5_1 & 8)) {
       $12_1 = $6_1;
       $0_1 = $1_1;
       $3 = 1;
       break label$52;
      }
      $12_1 = $6_1;
      $15_1 = Math_fround($9 - $11_1);
      $9 = Math_fround($9 + $15_1);
      $11_1 = Math_fround($11_1 + $15_1);
      $0_1 = 1;
      $3 = 1;
      break label$52;
     }
     $0_1 = $1_1;
    }
    if (!$3) {
     break label$38
    }
    $1986($10_1, 12, $12_1);
    $1986($10_1, 8, $9);
    $1986($10_1, 4, $6_1);
    $1986($10_1, 0, $11_1);
    $3 = $1944($2_1, 7604);
    $2_1 = $1944($2_1, 7612);
    $1_1 = $1944(0, 73568);
    $1968($1_1, 7596, 0);
    $1969($1_1, 7597, 256);
    $1973($1_1, 7620, $0_1);
    $1973($1_1, 7612, $2_1);
    $1973($1_1, 7604, $3);
    $1973($1_1, 7600, $5_1 | 128);
    $1968($1_1, 7572, $1937($1_1, 7573));
   }
   label$55 : {
    if (!$1937($4_1, 7876)) {
     break label$55
    }
    $0_1 = $1937($4_1 + 7946 | 0, 0);
    $1_1 = 0;
    label$56 : {
     if (($1944($4_1 + 7908 | 0, 0) + 1 | 0) >= ($1944($4_1, 6984) | 0)) {
      break label$56
     }
     $1_1 = 1;
     if ($1937($4_1, 7880) & 32) {
      break label$56
     }
     $1_1 = !$1937(($1944(0, 73568) + $1944($4_1, 7888) | 0) + 236 | 0, 0);
    }
    if (!($1_1 | $0_1 & 255)) {
     break label$55
    }
    $0_1 = $1944(0, 73568);
    $1968($0_1, 7876, 0);
    $1982($0_1, 7892, 0, 0);
    $1973($0_1, 7968, 0);
    $1982($0_1, 7980, 0, -1);
    $1982($0_1, 7972, 2139095039, 0);
    $1982($0_1 + 7912 | 0, 0, 0, 0);
    $1982($0_1 + 7920 | 0, 0, 0, 0);
    $1982($0_1 + 7928 | 0, 0, 0, 0);
    $1982($0_1 + 7936 | 0, 0, 0, 0);
    $1968($0_1 + 7944 | 0, 0, 0);
    $1982($0_1 + 7900 | 0, 0, 0, 0);
    $1973($0_1 + 7908 | 0, 0, -1);
    $1969($0_1 + 7945 | 0, 0, 0);
    $1_1 = $1944($0_1 + 8e3 | 0, 0);
    if ($1_1) {
     $1982($0_1, 7992, 0, 0);
     if ($0_1) {
      $3 = $0_1 + 876 | 0;
      $1973($3, 0, $1944($3, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $1_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     $1973($0_1, 8e3, 0);
    }
    $1982($0_1, 8004, 0, 0);
    $1982($0_1 + 8012 | 0, 0, 0, 0);
   }
   label$60 : {
    if (!$1937($4_1, 7876)) {
     break label$60
    }
    if (($1944($4_1, 7884) | 0) >= ($1944($4_1, 6984) | 0)) {
     break label$60
    }
    if ($1937($4_1, 7880) & 1) {
     break label$60
    }
    $1968($4_1, 7877, 1);
    $162(17682, 0);
    $1968($4_1, 7877, 0);
   }
   $1968($4_1, 6996, 0);
   $1973($4_1, 6988, $1944($4_1, 6984));
   $2_1 = 0;
   $1_1 = 0;
   $6_1 = Math_fround(0.0);
   $7_1 = global$0 - 16 | 0;
   global$0 = $7_1;
   $5_1 = $1944(0, 73568);
   label$10 : {
    if ($1944($5_1, 7136)) {
     break label$10
    }
    if ($1944($5_1, 7116)) {
     break label$10
    }
    $3 = $1944($5_1, 7508);
    if ($3) {
     if ($1937($3, 144)) {
      break label$10
     }
    }
    label$32 : {
     if (!$1937($5_1 + 992 | 0, 0)) {
      break label$32
     }
     $10_1 = $1944($5_1, 7084);
     if ($10_1) {
      $0_1 = $1944($10_1, 736)
     } else {
      $0_1 = 0
     }
     $1_1 = 0;
     label$5 : {
      if (!$0_1) {
       break label$5
      }
      $1_1 = 0;
      if (!($1937($0_1 + 11 | 0, 0) & 4)) {
       break label$5
      }
      $1_1 = $1944($5_1, 7468);
      label$73 : {
       if (($1_1 | 0) <= 0) {
        $16_1 = ($1_1 | 0) > 0;
        break label$73;
       }
       $8 = $1944($5_1 + 7476 | 0, 0);
       $17_1 = $1944($8, 0);
       $13 = $1944($0_1, 160);
       $16_1 = 1;
       if (($17_1 | 0) == ($13 | 0)) {
        break label$73
       }
       while (1) {
        $2_1 = $2_1 + 1 | 0;
        if (($1_1 | 0) != ($2_1 | 0)) {
         if (($1944($8 + Math_imul($2_1, 36) | 0, 0) | 0) != ($13 | 0)) {
          continue
         }
        }
        break;
       };
       $16_1 = ($1_1 | 0) > ($2_1 | 0);
      }
      $1_1 = $16_1 ^ 1;
     }
     if (!($1_1 | !$0_1)) {
      $124($10_1);
      label$12 : {
       if (!$1937($5_1 + 181 | 0, 0)) {
        break label$12
       }
       if ($1937($0_1, 8) & 1) {
        break label$12
       }
       $9 = $1963($0_1 + 16 | 0, 0);
       $12_1 = $1963($0_1, 28);
       $11_1 = $1963($0_1, 12);
       if (!($1937($0_1, 8) & 1)) {
        $3 = $1944(0, 73568);
        $6_1 = Math_fround($1963($3, 6472) * $1963($0_1, 572));
        $2_1 = $1944($0_1, 728);
        if ($2_1) {
         $6_1 = Math_fround($6_1 * $1963($2_1, 572))
        }
        $15_1 = $1963($3 + 5480 | 0, 0);
        $6_1 = Math_fround(Math_fround($15_1 + $15_1) + $6_1);
       }
       $0_1 = $1959($0_1, 12);
       $3 = i64toi32_i32$HIGH_BITS;
       $1986($7_1 + 12 | 0, 0, Math_fround($9 + $6_1));
       $1986($7_1, 8, Math_fround($11_1 + $12_1));
       $1982($7_1, 0, $0_1, $3);
       $6_1 = $1963($5_1 + 908 | 0, 0);
       label$135 : {
        if (!($6_1 >= $1963($7_1, 0))) {
         break label$135
        }
        $9 = $1963($5_1 + 912 | 0, 0);
        if (!($9 >= $1963($7_1, 4))) {
         break label$135
        }
        if (!($1963($7_1, 8) > $6_1)) {
         break label$135
        }
        if ($1963($7_1 + 12 | 0, 0) > $9) {
         break label$12
        }
       }
       $1973($5_1, 7092, 0);
      }
      if (!$1937($5_1, 7127)) {
       break label$32
      }
      $1973($5_1, 7092, 0);
      break label$32;
     }
     if ($0_1 | !$3) {
      break label$32
     }
     $0_1 = 0;
     $10_1 = $1944(0, 73568);
     $2_1 = $1944($10_1, 7468);
     __inlined_func$131 : {
      while (1) {
       $3 = 0;
       if (($2_1 | 0) <= 0) {
        break __inlined_func$131
       }
       $3 = $0_1;
       $2_1 = $2_1 - 1 | 0;
       $0_1 = $1944($1944($10_1, 7476) + Math_imul($2_1, 36) | 0, 4);
       label$327 : {
        if ($0_1) {
         $8 = 0;
         if ($1937($0_1 + 11 | 0, 0) & 8) {
          break label$327
         }
        }
        $0_1 = $3;
        $8 = 1;
       }
       if ($8) {
        continue
       }
       break;
      };
      $3 = $0_1;
     }
     if ($3) {
      break label$32
     }
     $125(0);
    }
    if (!$1937($5_1 + 993 | 0, 0)) {
     break label$10
    }
    $8 = $1944(0, 73568);
    $10_1 = $1944($8, 7468);
    $0_1 = $10_1;
    while (1) {
     label$148 : {
      $3 = $1_1;
      if (($0_1 | 0) <= 0) {
       $2_1 = 0;
       break label$148;
      }
      $0_1 = $0_1 - 1 | 0;
      $1_1 = $1944($1944($8, 7476) + Math_imul($0_1, 36) | 0, 4);
      label$17 : {
       if ($1_1) {
        $13 = 0;
        if ($1937($1_1 + 11 | 0, 0) & 8) {
         break label$17
        }
       }
       $1_1 = $3;
       $13 = 1;
      }
      $2_1 = $1_1;
      if ($13) {
       continue
      }
     }
     break;
    };
    $0_1 = $2_1;
    $5_1 = $1944($5_1, 7084);
    label$199 : {
     if (!$5_1) {
      break label$199
     }
     if ($0_1) {
      $1_1 = $1944($5_1, 8) >>> 25 & 1;
      $2_1 = $1944($0_1, 8) >>> 25 & 1;
      label$22 : {
       if (($1_1 | 0) != ($2_1 | 0)) {
        $1_1 = $1_1 >>> 0 > $2_1 >>> 0;
        break label$22;
       }
       $2_1 = $1944($8, 7008);
       while (1) {
        if (($2_1 | 0) <= 0) {
         break label$199
        }
        $2_1 = $2_1 - 1 | 0;
        $13 = $1944($1944($8, 7016) + ($2_1 << 2) | 0, 0);
        $16_1 = ($0_1 | 0) != ($13 | 0);
        $1_1 = ($13 | 0) == ($5_1 | 0) | $3 & $16_1;
        if (!$16_1) {
         break label$22
        }
        $3 = $1_1;
        if (($5_1 | 0) != ($13 | 0)) {
         continue
        }
        break;
       };
      }
      if (!$1_1) {
       break label$199
      }
     }
     $0_1 = $5_1;
    }
    if (!$10_1) {
     break label$10
    }
    $3 = $0_1;
    $2_1 = 0;
    label$2711 : {
     if (!$0_1) {
      break label$2711
     }
     $2_1 = 0;
     if (($10_1 | 0) <= 0) {
      break label$2711
     }
     $13 = $1944($8, 7476);
     $0_1 = 0;
     while (1) {
      $2_1 = $0_1;
      $5_1 = $1944($13 + Math_imul($0_1, 36) | 0, 4);
      $8 = 4;
      label$3013 : {
       if (!$5_1) {
        break label$3013
       }
       $1_1 = 0;
       $8 = 4;
       if ($1937($5_1 + 11 | 0, 0) & 1) {
        break label$3013
       }
       while (1) {
        $5_1 = $0_1;
        $8 = $1944($13 + Math_imul($0_1, 36) | 0, 4);
        $0_1 = 1;
        label$3314 : {
         if (!$8) {
          break label$3314
         }
         $0_1 = $3;
         if (($1944($0_1, 736) | 0) == ($8 | 0)) {
          $1_1 = 1;
          $0_1 = 0;
          break label$3314;
         }
         while (1) {
          if (($0_1 | 0) == ($8 | 0)) {
           $1_1 = 1;
           $0_1 = ($0_1 | 0) != ($8 | 0);
           break label$3314;
          }
          $0_1 = $1944($0_1, 732);
          if ($0_1) {
           continue
          }
          break;
         };
         $0_1 = 1;
        }
        if ($0_1) {
         $0_1 = $5_1 + 1 | 0;
         if (($10_1 | 0) > ($0_1 | 0)) {
          continue
         }
        }
        break;
       };
       $8 = $1_1 & 1 ? 0 : 2;
      }
      if (($8 | 0) == 2) {
       break label$2711
      }
      $0_1 = $2_1 + 1 | 0;
      if (($10_1 | 0) != ($0_1 | 0)) {
       continue
      }
      break;
     };
     $2_1 = $10_1;
    }
    $0_1 = $2_1;
    if (($10_1 | 0) <= ($0_1 | 0)) {
     break label$10
    }
    $132($0_1, 1);
   }
   global$0 = $7_1 + 16 | 0;
   $0_1 = $1944($4_1 + 7036 | 0, 0);
   label$61 : {
    if (($0_1 | 0) >= 0) {
     break label$61
    }
    $1_1 = $0_1 + (($0_1 | 0) / 2 | 0) | 0;
    $1_1 = ($1_1 | 0) > 0 ? $1_1 : 0;
    if (($0_1 | 0) >= ($1_1 | 0)) {
     break label$61
    }
    $0_1 = $1944(0, 73568);
    if ($0_1) {
     $0_1 = $0_1 + 876 | 0;
     $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
    }
    $0_1 = (((wasm2js_i32$2 = $1_1 << 2, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0) | 0);
    $3 = $1944($4_1 + 7040 | 0, 0);
    if ($3) {
     $1602($0_1, $3, $1944($4_1, 7032) << 2);
     $3 = $1944($4_1, 7040);
     label$64 : {
      if (!$3) {
       break label$64
      }
      $2_1 = $1944(0, 73568);
      if (!$2_1) {
       break label$64
      }
      $2_1 = $2_1 + 876 | 0;
      $1973($2_1, 0, $1944($2_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $1973($4_1, 7036, $1_1);
    $1973($4_1, 7040, $0_1);
   }
   $1973($4_1, 7032, 0);
   $1_1 = $1944($4_1, 7036);
   $0_1 = $1944($4_1, 7008);
   if (($1_1 | 0) < ($0_1 | 0)) {
    $1_1 = $1944(0, 73568);
    if ($1_1) {
     $1_1 = $1_1 + 876 | 0;
     $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
    }
    $1_1 = (((wasm2js_i32$2 = $0_1 << 2, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0) | 0);
    $3 = $1944($4_1 + 7040 | 0, 0);
    if ($3) {
     $1602($1_1, $3, $1944($4_1, 7032) << 2);
     $3 = $1944($4_1, 7040);
     label$68 : {
      if (!$3) {
       break label$68
      }
      $2_1 = $1944(0, 73568);
      if (!$2_1) {
       break label$68
      }
      $2_1 = $2_1 + 876 | 0;
      $1973($2_1, 0, $1944($2_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $1973($4_1, 7036, $0_1);
    $1973($4_1, 7040, $1_1);
   }
   $0_1 = $1944($4_1, 7008);
   $1_1 = $0_1;
   if ($0_1) {
    $3 = $4_1 + 7032 | 0;
    $0_1 = 0;
    while (1) {
     $1_1 = $1944($1944($4_1, 7016) + ($0_1 << 2) | 0, 0);
     label$71 : {
      if ($1937($1_1, 138)) {
       if ($1937($1_1 + 11 | 0, 0) & 1) {
        break label$71
       }
      }
      $163($3, $1_1);
     }
     $0_1 = $0_1 + 1 | 0;
     $1_1 = $1944($4_1, 7008);
     if (($0_1 | 0) != ($1_1 | 0)) {
      continue
     }
     break;
    };
   }
   $1973($4_1, 7008, $1944($4_1, 7032));
   $1973($4_1, 7032, $1_1);
   $1973($4_1 + 872 | 0, 0, $1944($4_1, 7068));
   $0_1 = $1959($4_1, 7036);
   $1_1 = i64toi32_i32$HIGH_BITS;
   $3 = $4_1 + 7012 | 0;
   $1982($4_1, 7036, $1959($3, 0), i64toi32_i32$HIGH_BITS);
   $1982($3, 0, $0_1, $1_1);
   $1968($1944($4_1 + 152 | 0, 0), 16, 0);
   $1982($4_1 + 244 | 0, 0, 0, 0);
   $0_1 = $1944($4_1 + 5408 | 0, 0);
   label$7316 : {
    if (($0_1 | 0) >= 0) {
     break label$7316
    }
    $1_1 = $0_1 + (($0_1 | 0) / 2 | 0) | 0;
    $1_1 = ($1_1 | 0) > 0 ? $1_1 : 0;
    if (($0_1 | 0) >= ($1_1 | 0)) {
     break label$7316
    }
    $0_1 = $1944(0, 73568);
    if ($0_1) {
     $0_1 = $0_1 + 876 | 0;
     $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
    }
    $0_1 = (((wasm2js_i32$2 = $1_1 << 1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0) | 0);
    $3 = $1944($4_1 + 5412 | 0, 0);
    if ($3) {
     $1602($0_1, $3, $1944($4_1, 5404) << 1);
     $3 = $1944($4_1, 5412);
     label$76 : {
      if (!$3) {
       break label$76
      }
      $2_1 = $1944(0, 73568);
      if (!$2_1) {
       break label$76
      }
      $2_1 = $2_1 + 876 | 0;
      $1973($2_1, 0, $1944($2_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $1973($4_1, 5408, $1_1);
    $1973($4_1, 5412, $0_1);
   }
   $1973($4_1, 5404, 0);
   $1973($4_1 + 896 | 0, 0, $1944($4_1 + 892 | 0, 0));
   $1604($4_1 + 768 | 0, 0, 80);
   if (($1944($4_1, 12180) | 0) <= 0) {
    break label$1
   }
   $0_1 = 0;
   while (1) {
    $1_1 = $1944($4_1, 12188) + Math_imul($0_1, 20) | 0;
    if (($1944($1_1, 4) | 0) == 3) {
     FUNCTION_TABLE[$1944($1_1, 12) | 0]($4_1, $1_1)
    }
    $0_1 = $0_1 + 1 | 0;
    if (($1944($4_1, 12180) | 0) > ($0_1 | 0)) {
     continue
    }
    break;
   };
  }
  global$0 = $14 + 16 | 0;
 }
 
 function $162($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 12, $1_1);
  $141(1);
  $2_1 = $1944(0, 73568);
  $4_1 = $1944($2_1, 7080);
  $1968($4_1, 140, 1);
  if (!$1937($4_1, 143)) {
   $2_1 = $2_1 + 12800 | 0;
   $555($2_1, $22($2_1, $0_1, $1_1) + $2_1 | 0, 1);
  }
  $142();
  global$0 = $3 + 16 | 0;
 }
 
 function $163($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $3 = $1944($0_1, 0);
  $4_1 = $1944($0_1, 4);
  label$1 : {
   if (($3 | 0) != ($4_1 | 0)) {
    break label$1
   }
   $2_1 = $3 + 1 | 0;
   $5_1 = $4_1;
   if ($4_1) {
    $3 = $4_1 + (($4_1 | 0) / 2 | 0) | 0
   } else {
    $3 = 8
   }
   $4_1 = ($3 | 0) > ($2_1 | 0) ? $3 : $2_1;
   if (($5_1 | 0) >= ($4_1 | 0)) {
    break label$1
   }
   $3 = $4_1 << 2;
   $2_1 = $1944(0, 73568);
   if ($2_1) {
    $2_1 = $2_1 + 876 | 0;
    $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
   }
   $3 = (((wasm2js_i32$1 = $3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $2_1 = $1944($0_1, 8);
   if ($2_1) {
    $1602($3, $2_1, $1944($0_1, 0) << 2);
    $2_1 = $1944($0_1, 8);
    label$6 : {
     if (!$2_1) {
      break label$6
     }
     $5_1 = $1944(0, 73568);
     if (!$5_1) {
      break label$6
     }
     $5_1 = $5_1 + 876 | 0;
     $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($0_1, 4, $4_1);
   $1973($0_1, 8, $3);
  }
  $1973($1944($0_1, 8) + ($1944($0_1, 0) << 2) | 0, 0, $1_1);
  $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
  label$7 : {
   if (!$1937($1_1, 138)) {
    break label$7
   }
   $4_1 = $1944($1_1 + 352 | 0, 0);
   if ($4_1 >>> 0 >= 2) {
    $1685($1944($1_1 + 360 | 0, 0), $4_1, 4, 9)
   }
   if (($4_1 | 0) <= 0) {
    break label$7
   }
   $3 = 0;
   while (1) {
    $2_1 = $1944($1944($1_1, 360) + ($3 << 2) | 0, 0);
    if ($1937($2_1, 138)) {
     $163($0_1, $2_1)
    }
    $3 = $3 + 1 | 0;
    if (($4_1 | 0) != ($3 | 0)) {
     continue
    }
    break;
   };
  }
 }
 
 function $164() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  label$1 : {
   $0_1 = $1944(0, 73568);
   if (!$1937($0_1, 12196)) {
    break label$1
   }
   $65(19353, 0);
   label$2 : {
    label$3 : {
     switch ($1944($0_1, 12200) - 1 | 0) {
     case 0:
      $1610($1944($0_1, 12204));
      break label$2;
     case 1:
      $1609($1944($0_1, 12204));
      break label$2;
     case 3:
      break label$3;
     default:
      break label$2;
     };
    }
    if (($1944($0_1, 12208) | 0) < 2) {
     break label$2
    }
    $1_1 = $1944(0, 73568);
    $2_1 = $1944($1_1 + 212 | 0, 0);
    if (!$2_1) {
     break label$2
    }
    $3 = $1944($1_1 + 216 | 0, 0);
    $1_1 = $1944($0_1 + 12216 | 0, 0);
    FUNCTION_TABLE[$2_1 | 0]($3, $1_1 ? $1_1 : 73572);
   }
   $1983($0_1, 12200, 0, 0);
   $1968($0_1, 12196, 0);
   $1_1 = $1944($0_1 + 12216 | 0, 0);
   if (!$1_1) {
    break label$1
   }
   $1982($0_1, 12208, 0, 0);
   $2_1 = $1944(0, 73568);
   if ($2_1) {
    $2_1 = $2_1 + 876 | 0;
    $1973($2_1, 0, $1944($2_1, 0) - 1 | 0);
   }
   ((wasm2js_i32$1 = $1_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
   $1973($0_1, 12216, 0);
  }
 }
 
 function $165($0_1) {
  $0_1 = $0_1 | 0;
  return $1937(($1944(0, 73568) + $0_1 | 0) + 236 | 0, 0) | 0;
 }
 
 function $166($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  $4_1 = $1944($0_1, 0);
  $2_1 = $1944($4_1, 8);
  $1_1 = $1944($1_1, 0);
  $0_1 = $1944($1_1, 8);
  $3 = ($2_1 & 67108864) - ($0_1 & 67108864) | 0;
  if ($3) {
   return $3 | 0
  }
  $2_1 = $2_1 & 33554432;
  $0_1 = $0_1 & 33554432;
  if (($2_1 | 0) != ($0_1 | 0)) {
   return (($0_1 | 0) == ($2_1 | 0) ? $3 : $2_1 - $0_1 | 0) | 0
  }
  return $1939($4_1, 152) - $1939($1_1, 152) | 0;
 }
 
 function $167() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = 0, $16_1 = Math_fround(0), $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $9 = global$0 + -64 | 0;
  global$0 = $9;
  $8 = $1944(0, 73568);
  if (($1944($8, 6988) | 0) != ($1944($8, 6984) | 0)) {
   $161()
  }
  $19 = $1944($8, 6992);
  $17_1 = $1944($8, 6984);
  $1973($8, 6992, $17_1);
  $1973($8 + 868 | 0, 0, 0);
  if (($1944($8, 12180) | 0) > 0) {
   while (1) {
    $0_1 = $1944($8, 12188) + Math_imul($4_1, 20) | 0;
    if (($1944($0_1, 4) | 0) == 4) {
     FUNCTION_TABLE[$1944($0_1, 12) | 0]($8, $0_1)
    }
    $0_1 = $4_1 + 1 | 0;
    $4_1 = $0_1;
    if (($1944($8, 12180) | 0) > ($0_1 | 0)) {
     continue
    }
    break;
   }
  }
  if ($1944($8, 7496)) {
   $4_1 = 0;
   while (1) {
    $6_1 = $1944($1944($8, 7504) + ($4_1 << 2) | 0, 0);
    $5_1 = $6_1 + 96 | 0;
    $0_1 = 0;
    while (1) {
     $1_1 = $0_1;
     $0_1 = $5_1 + Math_imul($0_1, 12) | 0;
     $2_1 = $1944($0_1, 4);
     label$8 : {
      if (($2_1 | 0) >= 0) {
       break label$8
      }
      $10_1 = $2_1 + (($2_1 | 0) / 2 | 0) | 0;
      $10_1 = ($10_1 | 0) > 0 ? $10_1 : 0;
      if (($2_1 | 0) >= ($10_1 | 0)) {
       break label$8
      }
      $2_1 = $1944(0, 73568);
      if ($2_1) {
       $2_1 = $2_1 + 876 | 0;
       $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
      }
      $2_1 = $0_1 + 8 | 0;
      $7_1 = (((wasm2js_i32$1 = $10_1 << 2, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
      $15_1 = $1944($0_1, 8);
      if ($15_1) {
       $1602($7_1, $15_1, $1944($0_1, 0) << 2);
       $15_1 = $1944($2_1, 0);
       label$11 : {
        if (!$15_1) {
         break label$11
        }
        $18_1 = $1944(0, 73568);
        if (!$18_1) {
         break label$11
        }
        $18_1 = $18_1 + 876 | 0;
        $1973($18_1, 0, $1944($18_1, 0) - 1 | 0);
       }
       ((wasm2js_i32$2 = $15_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      }
      $1973($2_1, 0, $7_1);
      $1973($0_1 + 4 | 0, 0, $10_1);
     }
     $1973($0_1, 0, 0);
     $0_1 = $1_1 + 1 | 0;
     if (!$1_1) {
      continue
     }
     break;
    };
    if ($1944($6_1, 44)) {
     $168($5_1, $92($6_1, 0, 11755))
    }
    $0_1 = $4_1 + 1 | 0;
    $4_1 = $0_1;
    if (($1944($8, 7496) | 0) != ($0_1 | 0)) {
     continue
    }
    break;
   };
  }
  $19 = ($19 | 0) == ($17_1 | 0);
  label$13 : {
   if ($19) {
    break label$13
   }
   $5_1 = $1944(0, 73568);
   $4_1 = $1944($5_1, 7468);
   while (1) {
    label$14 : {
     $1_1 = $0_1;
     if (($4_1 | 0) <= 0) {
      $1_1 = 0;
      break label$14;
     }
     label$17 : {
      label$18 : {
       $4_1 = $4_1 - 1 | 0;
       $0_1 = $1944($1944($5_1, 7476) + Math_imul($4_1, 36) | 0, 4);
       if (!$0_1) {
        break label$18
       }
       if (!($1937($0_1 + 11 | 0, 0) & 8)) {
        break label$18
       }
       if (!$1937($0_1, 138)) {
        break label$18
       }
       if ($1937($0_1, 145)) {
        break label$18
       }
       $1_1 = $0_1;
       $2_1 = 0;
       break label$17;
      }
      $2_1 = 1;
     }
     $0_1 = $1_1;
     if ($2_1) {
      continue
     }
    }
    break;
   };
   $0_1 = $1944($5_1, 7848);
   if ($0_1) {
    $4_1 = ($1937($0_1, 138) | 0) != 0
   } else {
    $4_1 = 0
   }
   if (!($4_1 | $1_1)) {
    break label$13
   }
   if ($1_1) {
    $4_1 = $1944(0, 73568);
    $2_1 = $1944($4_1 + 7016 | 0, 0);
    $0_1 = $2_1;
    $6_1 = $1944($4_1, 7008);
    label$1 : {
     if (($6_1 | 0) <= 0) {
      break label$1
     }
     $6_1 = $2_1 + ($6_1 << 2) | 0;
     while (1) {
      if (($1944($0_1, 0) | 0) == ($1_1 | 0)) {
       break label$1
      }
      $0_1 = $0_1 + 4 | 0;
      if ($0_1 >>> 0 < $6_1 >>> 0) {
       continue
      }
      break;
     };
    }
    $2_1 = $0_1 - $2_1 | 0;
    $0_1 = $1_1;
    __inlined_func$160 : {
     if (($2_1 | 0) < -3) {
      break __inlined_func$160
     }
     $10_1 = $1944($4_1 + 7016 | 0, 0);
     $0_1 = $1_1;
     $4_1 = $2_1 >> 2;
     while (1) {
      $2_1 = $0_1;
      $6_1 = $4_1;
      $4_1 = $1944(($4_1 << 2) + $10_1 | 0, 0);
      $7_1 = $1944($4_1, 8);
      label$60 : {
       if ($7_1 & 16777216) {
        $0_1 = 4;
        break label$60;
       }
       label$81 : {
        label$9 : {
         if (($1944($4_1, 736) | 0) == ($1_1 | 0)) {
          break label$9
         }
         $0_1 = $4_1;
         if (!$0_1) {
          break label$81
         }
         while (1) {
          if (($0_1 | 0) == ($1_1 | 0)) {
           break label$9
          }
          $0_1 = $1944($0_1, 732);
          if ($0_1) {
           continue
          }
          break;
         };
         break label$81;
        }
        label$112 : {
         if (!$1937($4_1, 138)) {
          break label$112
         }
         if ($1937($4_1, 145)) {
          break label$112
         }
         $0_1 = 0;
         $2_1 = ($7_1 >>> 25 & 1) >>> 0 > ($1944($1_1, 8) >>> 25 & 1) >>> 0 ? $2_1 : $4_1;
         break label$60;
        }
        $0_1 = 0;
        break label$60;
       }
       $0_1 = 2;
      }
      label$12 : {
       switch ($0_1 | 0) {
       case 0:
       case 4:
        $0_1 = $2_1;
        $4_1 = $6_1 - 1 | 0;
        if (($6_1 | 0) > 0) {
         continue
        }
        break;
       default:
        break label$12;
       };
      }
      break;
     };
     $0_1 = $2_1;
    }
    $3 = Math_fround($1963($5_1 + 6460 | 0, 0) * Math_fround($1963($5_1, 7868) * $1963($5_1, 5416)));
    $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
    label$23 : {
     if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
      $1_1 = ~~$3;
      break label$23;
     }
     $1_1 = -2147483648;
    }
    $3 = $1963($5_1 + 6452 | 0, 0);
    $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
    label$25 : {
     if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
      $2_1 = ~~$3;
      break label$25;
     }
     $2_1 = -2147483648;
    }
    $4_1 = $2_1 << 8;
    $1_1 = $1_1 << 24;
    $3 = $1963($5_1 + 6448 | 0, 0);
    $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
    label$27 : {
     if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
      $2_1 = ~~$3;
      break label$27;
     }
     $2_1 = -2147483648;
    }
    $4_1 = $2_1 | $4_1;
    $3 = $1963($5_1 + 6456 | 0, 0);
    $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
    label$29 : {
     if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
      $2_1 = ~~$3;
      break label$29;
     }
     $2_1 = -2147483648;
    }
    $169($0_1, $1_1 | ($4_1 | $2_1 << 16));
    break label$13;
   }
   if (!$4_1) {
    break label$13
   }
   $3 = Math_fround($1963($5_1 + 6444 | 0, 0) * Math_fround($1963($5_1, 7868) * $1963($5_1, 5416)));
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$31 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $1_1 = ~~$3;
     break label$31;
    }
    $1_1 = -2147483648;
   }
   $3 = $1963($5_1 + 6436 | 0, 0);
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$33 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$3;
     break label$33;
    }
    $2_1 = -2147483648;
   }
   $4_1 = $2_1 << 8;
   $1_1 = $1_1 << 24;
   $3 = $1963($5_1 + 6432 | 0, 0);
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$35 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$3;
     break label$35;
    }
    $2_1 = -2147483648;
   }
   $4_1 = $2_1 | $4_1;
   $3 = $1963($5_1 + 6440 | 0, 0);
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$37 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$3;
     break label$37;
    }
    $2_1 = -2147483648;
   }
   $169($0_1, $1_1 | ($4_1 | $2_1 << 16));
   $1_1 = $1944($1944($1944(0, 73568) + 7504 | 0, 0), 0);
   $0_1 = $1944($5_1, 7848);
   $16_1 = $1963($0_1, 20);
   $11_1 = $1963($0_1, 12);
   $3 = $1963($5_1, 6468);
   $14 = $1963($0_1 + 16 | 0, 0);
   $13 = Math_fround($3 + Math_fround($14 + $1963($0_1 + 24 | 0, 0)));
   $1986($9 + 60 | 0, 0, $13);
   $14 = Math_fround($14 - $3);
   $1986($9, 52, $14);
   $12_1 = Math_fround($11_1 - $3);
   $1986($9, 48, $12_1);
   $11_1 = Math_fround($3 + Math_fround($11_1 + $16_1));
   $1986($9, 56, $11_1);
   label$39 : {
    if (!($1963($1_1, 12) <= Math_fround($11_1 - $12_1))) {
     break label$39
    }
    if (!($1963($1_1 + 16 | 0, 0) <= Math_fround($13 - $14))) {
     break label$39
    }
    $3 = Math_fround(Math_fround(-1.0) - $3);
    $1986($9, 60, Math_fround($3 + $13));
    $1986($9, 56, Math_fround($3 + $11_1));
    $1986($9, 52, Math_fround($14 - $3));
    $1986($9, 48, Math_fround($12_1 - $3));
   }
   $4_1 = $1944($0_1, 580);
   if (!$1944($4_1, 0)) {
    $375($4_1)
   }
   $4_1 = $1944($0_1, 580);
   $2_1 = $1959($1_1, 4);
   $6_1 = i64toi32_i32$HIGH_BITS;
   $1983($9, 40, $2_1, $6_1);
   $3 = $1963($1_1, 12);
   $11_1 = $1963($1_1, 4);
   $1986($9, 36, Math_fround($1963($1_1 + 8 | 0, 0) + $1963($1_1 + 16 | 0, 0)));
   $1986($9, 32, Math_fround($11_1 + $3));
   $1983($9, 16, $2_1, $6_1);
   $1983($9, 8, $1959($9, 32), i64toi32_i32$HIGH_BITS);
   $378($4_1, $9 + 16 | 0, $9 + 8 | 0, 0);
   $1_1 = $1944(0, 73568);
   $3 = Math_fround($1963($1_1 + 6428 | 0, 0) * Math_fround($1963($5_1, 7860) * $1963($1_1, 5416)));
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$41 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $4_1 = ~~$3;
     break label$41;
    }
    $4_1 = -2147483648;
   }
   $3 = $1963($1_1 + 6420 | 0, 0);
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$43 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$3;
     break label$43;
    }
    $2_1 = -2147483648;
   }
   $2_1 = $2_1 << 8;
   $6_1 = $9 + 56 | 0;
   $4_1 = $4_1 << 24;
   $3 = $1963($1_1 + 6416 | 0, 0);
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$45 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $17_1 = ~~$3;
     break label$45;
    }
    $17_1 = -2147483648;
   }
   $2_1 = $17_1 | $2_1;
   $3 = $1963($1_1 + 6424 | 0, 0);
   $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
   label$47 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $1_1 = ~~$3;
     break label$47;
    }
    $1_1 = -2147483648;
   }
   $400($1944($0_1, 580), $9 + 48 | 0, $6_1, $4_1 | ($2_1 | $1_1 << 16), $1963($0_1, 68), 0, Math_fround(3.0));
   $380($1944($0_1, 580));
  }
  $0_1 = $1944($8, 7844);
  $1_1 = 0;
  label$49 : {
   if (!$0_1) {
    break label$49
   }
   $1_1 = 0;
   if ($1937($0_1 + 9 | 0, 0) & 32) {
    break label$49
   }
   $1_1 = $1944($0_1, 736);
  }
  $2_1 = $1_1;
  $1973($9, 48, $1_1);
  $4_1 = 0;
  if ($0_1) {
   $4_1 = $1944($8, 7852)
  }
  $1973($9, 52, $4_1);
  if ($1944($8, 7008)) {
   $0_1 = $4_1;
   $4_1 = 0;
   while (1) {
    $1_1 = $1944($1944($8, 7016) + ($4_1 << 2) | 0, 0);
    label$53 : {
     if (!$1937($1_1, 138)) {
      break label$53
     }
     if ($1937($1_1, 145)) {
      break label$53
     }
     $6_1 = $1944($1_1, 8);
     if ($6_1 & 16777216 | ($1_1 | 0) == ($2_1 | 0) | ($0_1 | 0) == ($1_1 | 0)) {
      break label$53
     }
     $170($1_1, $6_1 >>> 25 & 1);
    }
    $4_1 = $4_1 + 1 | 0;
    if (($1944($8, 7008) | 0) != ($4_1 | 0)) {
     continue
    }
    break;
   };
  }
  $0_1 = 0;
  while (1) {
   $1_1 = $0_1;
   $0_1 = $1944(($9 + 48 | 0) + ($0_1 << 2) | 0, 0);
   label$55 : {
    if (!$0_1) {
     break label$55
    }
    if (!$1937($0_1, 138)) {
     break label$55
    }
    if ($1937($0_1, 145)) {
     break label$55
    }
    $170($0_1, $1944($0_1, 8) >>> 25 & 1);
   }
   $0_1 = $1_1 + 1 | 0;
   if (!$1_1) {
    continue
   }
   break;
  };
  $1982($8 + 860 | 0, 0, 0, 0);
  if (($1944($8, 7496) | 0) > 0) {
   $4_1 = 0;
   while (1) {
    $6_1 = $1944($1944($8, 7504) + ($4_1 << 2) | 0, 0);
    $17_1 = $6_1 + 96 | 0;
    $0_1 = $17_1;
    $1_1 = $1944($0_1, 4);
    $2_1 = $1944($0_1, 12);
    $10_1 = $1944($0_1, 0);
    $2_1 = $2_1 + $10_1 | 0;
    label$16 : {
     if (($1_1 | 0) >= ($2_1 | 0)) {
      break label$16
     }
     $5_1 = $1_1 ? $1_1 + (($1_1 | 0) / 2 | 0) | 0 : 8;
     $5_1 = ($2_1 | 0) < ($5_1 | 0) ? $5_1 : $2_1;
     if (($1_1 | 0) >= ($5_1 | 0)) {
      break label$16
     }
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
     }
     $1_1 = (((wasm2js_i32$1 = $5_1 << 2, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
     $7_1 = $1944($0_1, 8);
     if ($7_1) {
      $1602($1_1, $7_1, $1944($0_1, 0) << 2);
      $7_1 = $1944($0_1, 8);
      label$67 : {
       if (!$7_1) {
        break label$67
       }
       $15_1 = $1944(0, 73568);
       if (!$15_1) {
        break label$67
       }
       $15_1 = $15_1 + 876 | 0;
       $1973($15_1, 0, $1944($15_1, 0) - 1 | 0);
      }
      ((wasm2js_i32$2 = $7_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     }
     $1973($0_1, 4, $5_1);
     $1973($0_1, 8, $1_1);
    }
    $1973($0_1, 0, $2_1);
    $1_1 = $1944($0_1, 12);
    if ($1_1) {
     $1602($1944($0_1, 8) + ($10_1 << 2) | 0, $1944($0_1, 20), $1_1 << 2);
     $1_1 = $1944($0_1, 16);
     label$88 : {
      if (($1_1 | 0) >= 0) {
       break label$88
      }
      $2_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0;
      $2_1 = ($2_1 | 0) > 0 ? $2_1 : 0;
      if (($1_1 | 0) >= ($2_1 | 0)) {
       break label$88
      }
      $1_1 = $1944(0, 73568);
      if ($1_1) {
       $1_1 = $1_1 + 876 | 0;
       $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
      }
      $1_1 = (((wasm2js_i32$1 = $2_1 << 2, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
      $5_1 = $1944($0_1, 20);
      if ($5_1) {
       $1602($1_1, $5_1, $1944($0_1, 12) << 2);
       $5_1 = $1944($0_1, 20);
       label$119 : {
        if (!$5_1) {
         break label$119
        }
        $10_1 = $1944(0, 73568);
        if (!$10_1) {
         break label$119
        }
        $10_1 = $10_1 + 876 | 0;
        $1973($10_1, 0, $1944($10_1, 0) - 1 | 0);
       }
       ((wasm2js_i32$2 = $5_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      }
      $1973($0_1, 16, $2_1);
      $1973($0_1, 20, $1_1);
     }
     $1973($0_1, 12, 0);
    }
    if (!($19 | !$1937($8, 176))) {
     $0_1 = $92($6_1, 1, 11768);
     $2_1 = $1959($8, 228);
     $5_1 = i64toi32_i32$HIGH_BITS;
     $1983($9, 24, $2_1, $5_1);
     $1_1 = $1944($8, 7872);
     $3 = $1963($8, 5600);
     $1983($9, 0, $2_1, $5_1);
     $13 = Math_fround(0.0);
     $11_1 = Math_fround(0.0);
     $7_1 = 0;
     $14 = Math_fround(0.0);
     $2_1 = global$0 - 48 | 0;
     global$0 = $2_1;
     label$19 : {
      if (($1_1 | 0) == -1) {
       break label$19
      }
      $5_1 = $1944($1944($1944($0_1, 44), 8), 48);
      $1983($2_1 + 40 | 0, 0, 0, 0);
      $10_1 = $2_1 + 32 | 0;
      $1983($10_1, 0, 0, 0);
      $1983($2_1, 24, 0, 0);
      $1983($2_1, 16, 0, 0);
      $12_1 = Math_fround(0.0);
      label$210 : {
       if ($1_1 >>> 0 > 8) {
        break label$210
       }
       $12_1 = Math_fround(0.0);
       if ($1937($5_1, 0) & 2) {
        break label$210
       }
       $7_1 = $1944($5_1 + 72 | 0, 0) + Math_imul($1944($5_1, 1120), 28) | 0;
       $15_1 = $1941($7_1, 4);
       $13 = $1963($5_1, 36);
       $1_1 = Math_imul($1_1, 24);
       $11_1 = Math_fround($1963($1_1 + 21428 | 0, 0) + Math_fround($1941($7_1, 6) >>> 0));
       $14 = $1963($5_1 + 40 | 0, 0);
       $12_1 = Math_fround($11_1 * $14);
       $1986($2_1 + 36 | 0, 0, $12_1);
       $16_1 = $14;
       $14 = $1963($1_1 + 21436 | 0, 0);
       $16_1 = Math_fround($16_1 * Math_fround($11_1 + $14));
       $1986($2_1 + 44 | 0, 0, $16_1);
       $1986($2_1, 20, $12_1);
       $11_1 = Math_fround($1963($1_1 + 21424 | 0, 0) + Math_fround($15_1 >>> 0));
       $1986($2_1, 16, Math_fround($13 * $11_1));
       $12_1 = Math_fround($11_1 + Math_fround(123.0));
       $1986($2_1, 32, Math_fround($13 * $12_1));
       $1986($2_1, 28, $16_1);
       $16_1 = $11_1;
       $11_1 = $1963($1_1 + 21432 | 0, 0);
       $1986($2_1, 24, Math_fround($13 * Math_fround($16_1 + $11_1)));
       $1986($2_1, 40, Math_fround($13 * Math_fround($12_1 + $11_1)));
       $13 = $1963($1_1 + 21440 | 0, 0);
       $7_1 = 1;
       $12_1 = $1963($1_1 + 21444 | 0, 0);
      }
      if (!$7_1) {
       break label$19
      }
      $13 = Math_fround($1963($9, 0) - $13);
      $1986($9, 0, $13);
      $12_1 = Math_fround($1963($9, 4) - $12_1);
      $1986($9, 4, $12_1);
      $1_1 = $1944($5_1, 4);
      $381($0_1, $1_1);
      $16_1 = Math_fround(Math_fround($3 * Math_fround(0.0)) + $12_1);
      $1986($2_1, 12, $16_1);
      $1986($2_1, 8, Math_fround($13 + $3));
      $20_1 = Math_fround(Math_fround(Math_fround($14 + Math_fround(0.0)) * $3) + $12_1);
      $1986($2_1, 4, $20_1);
      $1986($2_1, 0, Math_fround(Math_fround(Math_fround($11_1 + Math_fround(1.0)) * $3) + $13));
      $5_1 = $2_1 + 8 | 0;
      $7_1 = $2_1 + 40 | 0;
      $417($0_1, $1_1, $5_1, $2_1, $10_1, $7_1, 805306368);
      $1986($2_1, 12, $16_1);
      $1986($2_1, 8, Math_fround(Math_fround($3 + $3) + $13));
      $1986($2_1, 4, $20_1);
      $1986($2_1, 0, Math_fround(Math_fround(Math_fround($11_1 + Math_fround(2.0)) * $3) + $13));
      $417($0_1, $1_1, $5_1, $2_1, $10_1, $7_1, 805306368);
      $14 = Math_fround(Math_fround($14 * $3) + $12_1);
      $1986($2_1, 12, $14);
      $3 = Math_fround(Math_fround($11_1 * $3) + $13);
      $1986($2_1, 8, $3);
      $417($0_1, $1_1, $9, $5_1, $10_1, $7_1, -16777216);
      $1986($2_1, 12, $14);
      $1986($2_1, 8, $3);
      $7_1 = $1_1;
      $1_1 = $2_1 + 16 | 0;
      $417($0_1, $7_1, $9, $5_1, $1_1, $1_1 | 8, -1);
      $1_1 = $1944($0_1, 72);
      $5_1 = $1_1 - 1 | 0;
      $1973($0_1, 72, $5_1);
      $7_1 = $0_1 + 112 | 0;
      if ($5_1) {
       $1_1 = $1944(($1944($0_1 + 80 | 0, 0) + ($1_1 << 2) | 0) - 8 | 0, 0)
      } else {
       $1_1 = 0
      }
      $1973($7_1, 0, $1_1);
      $5_1 = $1944($0_1, 8);
      label$611 : {
       $15_1 = $1944($0_1, 0);
       $10_1 = $15_1 - 1 | 0;
       $7_1 = $5_1 + Math_imul($10_1, 40) | 0;
       $18_1 = $1944($7_1, 28);
       if (!$18_1) {
        break label$611
       }
       if (($1944($7_1, 16) | 0) == ($1_1 | 0)) {
        break label$611
       }
       $375($0_1);
       break label$19;
      }
      label$712 : {
       if (($15_1 | 0) < 2 | $18_1) {
        break label$712
       }
       $7_1 = $7_1 - 40 | 0;
       if ($1645($0_1 + 96 | 0, $7_1, 24)) {
        break label$712
       }
       if ($1944($7_1, 32)) {
        break label$712
       }
       $1973($0_1, 0, $10_1);
       break label$19;
      }
      $1973($5_1 + Math_imul($10_1, 40) | 0, 16, $1_1);
     }
     global$0 = $2_1 + 48 | 0;
    }
    if ($1944($6_1 + 48 | 0, 0)) {
     $168($17_1, $92($6_1, 1, 11768))
    }
    $2_1 = $4_1;
    $0_1 = $1944(0, 73568);
    $1968($6_1, 52, 1);
    $4_1 = 0;
    $5_1 = $1944($6_1, 96);
    $1_1 = ($5_1 | 0) <= 0;
    if (!$1_1) {
     $4_1 = $1944($6_1 + 104 | 0, 0)
    }
    $1982($6_1 + 60 | 0, 0, 0, 0);
    $1973($6_1 + 56 | 0, 0, $5_1);
    $1973($6_1 + 68 | 0, 0, $4_1);
    $1982($6_1 + 72 | 0, 0, $1959($6_1, 4), i64toi32_i32$HIGH_BITS);
    $1982($6_1 + 80 | 0, 0, $1959($6_1, 12), i64toi32_i32$HIGH_BITS);
    $1982($6_1 + 88 | 0, 0, $1960($0_1 + 168 | 0, 0), i64toi32_i32$HIGH_BITS);
    if (!$1_1) {
     $10_1 = $1944($6_1 + 104 | 0, 0);
     $4_1 = 0;
     $0_1 = 0;
     $1_1 = 0;
     while (1) {
      $7_1 = $1944($10_1 + ($1_1 << 2) | 0, 0);
      $4_1 = $1944($7_1, 12) + $4_1 | 0;
      $0_1 = $1944($7_1, 24) + $0_1 | 0;
      $1_1 = $1_1 + 1 | 0;
      if (($5_1 | 0) != ($1_1 | 0)) {
       continue
      }
      break;
     };
     $1973($6_1, 60, $4_1);
     $1973($6_1, 64, $0_1);
    }
    $1973($8, 860, $1944($8, 860) + $1944($6_1, 64) | 0);
    $1973($8, 864, $1944($8, 864) + $1944($6_1, 60) | 0);
    $4_1 = $2_1 + 1 | 0;
    if (($1944($8, 7496) | 0) > ($4_1 | 0)) {
     continue
    }
    break;
   };
  }
  if (($1944($8, 12180) | 0) > 0) {
   $4_1 = 0;
   while (1) {
    $0_1 = $1944($8, 12188) + Math_imul($4_1, 20) | 0;
    if (($1944($0_1, 4) | 0) == 5) {
     FUNCTION_TABLE[$1944($0_1, 12) | 0]($8, $0_1)
    }
    $4_1 = $4_1 + 1 | 0;
    if (($1944($8, 12180) | 0) > ($4_1 | 0)) {
     continue
    }
    break;
   };
  }
  global$0 = $9 - -64 | 0;
 }
 
 function $168($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = $1944($1_1, 0);
  label$1 : {
   if (!$2_1) {
    break label$1
   }
   $2_1 = $2_1 - 1 | 0;
   $3 = $1944($1_1, 8) + Math_imul($2_1, 40) | 0;
   if ($1944($3, 28)) {
    break label$1
   }
   if ($1944($3, 32)) {
    break label$1
   }
   $1973($1_1, 0, $2_1);
  }
  if ($1944($1_1, 0)) {
   $3 = $1944($0_1, 0);
   $2_1 = $1944($0_1, 4);
   label$2 : {
    if (($3 | 0) != ($2_1 | 0)) {
     break label$2
    }
    $4_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
    $3 = $3 + 1 | 0;
    $3 = ($3 | 0) < ($4_1 | 0) ? $4_1 : $3;
    if (($2_1 | 0) >= ($3 | 0)) {
     break label$2
    }
    $2_1 = $1944(0, 73568);
    if ($2_1) {
     $2_1 = $2_1 + 876 | 0;
     $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
    }
    $2_1 = (((wasm2js_i32$1 = $3 << 2, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $4_1 = $1944($0_1, 8);
    if ($4_1) {
     $1602($2_1, $4_1, $1944($0_1, 0) << 2);
     $4_1 = $1944($0_1, 8);
     label$7 : {
      if (!$4_1) {
       break label$7
      }
      $5_1 = $1944(0, 73568);
      if (!$5_1) {
       break label$7
      }
      $5_1 = $5_1 + 876 | 0;
      $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($0_1, 4, $3);
    $1973($0_1, 8, $2_1);
   }
   $1973($1944($0_1, 8) + ($1944($0_1, 0) << 2) | 0, 0, $1_1);
   $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
  }
 }
 
 function $169($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $4_1 = global$0 - 96 | 0;
  global$0 = $4_1;
  if ($1_1 >>> 0 >= 16777216) {
   $3 = $1944($1944($1944(0, 73568) + 7504 | 0, 0), 0);
   $9 = $1963($3, 12);
   $7_1 = $1963($3, 4);
   $2_1 = $4_1 + 92 | 0;
   $8 = $1963($3 + 8 | 0, 0);
   $1986($2_1, 0, Math_fround($8 + $1963($3 + 16 | 0, 0)));
   $1986($4_1, 84, $8);
   $1986($4_1, 80, $7_1);
   $1986($4_1, 88, Math_fround($7_1 + $9));
   $0_1 = $1944($1944($0_1, 736), 580);
   if (!$1944($0_1, 0)) {
    $375($0_1)
   }
   $1986($4_1, 76, Math_fround($1963($4_1, 84) + Math_fround(-1.0)));
   $1986($4_1, 72, Math_fround($1963($4_1, 80) + Math_fround(-1.0)));
   $1986($4_1, 64, Math_fround($1963($4_1, 88) + Math_fround(1.0)));
   $1986($4_1, 68, Math_fround($1963($2_1, 0) + Math_fround(1.0)));
   $1983($4_1, 16, $1959($4_1, 72), i64toi32_i32$HIGH_BITS);
   $1983($4_1, 8, $1959($4_1, 64), i64toi32_i32$HIGH_BITS);
   $378($0_1, $4_1 + 16 | 0, $4_1 + 8 | 0, 0);
   $401($0_1, $4_1 + 80 | 0, $4_1 + 88 | 0, $1_1, Math_fround(0.0), 0);
   $1_1 = $4_1 + 24 | 0;
   $3 = (Math_imul($1944($0_1, 0), 40) + $1944($0_1, 8) | 0) - 40 | 0;
   $1983($1_1 + 32 | 0, 0, $1959($3 + 32 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1983($1_1 + 24 | 0, 0, $1959($3 + 24 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1983($1_1 + 16 | 0, 0, $1959($3 + 16 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1983($1_1 + 8 | 0, 0, $1959($3 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1983($4_1, 24, $1959($3, 0), i64toi32_i32$HIGH_BITS);
   $1973($0_1, 0, $1944($0_1, 0) - 1 | 0);
   $3 = $1944($0_1, 0);
   label$1 : {
    if (!$3) {
     $2_1 = $1944($0_1, 4);
     label$3 : {
      if (($2_1 | 0) != ($3 | 0)) {
       break label$3
      }
      $5_1 = $2_1;
      $2_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
      $3 = $3 + 1 | 0;
      $3 = ($2_1 | 0) > ($3 | 0) ? $2_1 : $3;
      if (($5_1 | 0) >= ($3 | 0)) {
       break label$3
      }
      $2_1 = $1944(0, 73568);
      if ($2_1) {
       $2_1 = $2_1 + 876 | 0;
       $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
      }
      $2_1 = (((wasm2js_i32$1 = Math_imul($3, 40), wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
      $5_1 = $1944($0_1, 8);
      if ($5_1) {
       $1602($2_1, $5_1, Math_imul($1944($0_1, 0), 40));
       $5_1 = $1944($0_1, 8);
       label$8 : {
        if (!$5_1) {
         break label$8
        }
        $6_1 = $1944(0, 73568);
        if (!$6_1) {
         break label$8
        }
        $6_1 = $6_1 + 876 | 0;
        $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
       }
       ((wasm2js_i32$2 = $5_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      }
      $1973($0_1, 4, $3);
      $1973($0_1, 8, $2_1);
     }
     $3 = $1944($0_1, 8) + Math_imul($1944($0_1, 0), 40) | 0;
     break label$1;
    }
    $2_1 = $1944($0_1, 4);
    label$9 : {
     if (($2_1 | 0) != ($3 | 0)) {
      break label$9
     }
     $5_1 = $2_1;
     $2_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
     $3 = $3 + 1 | 0;
     $3 = ($2_1 | 0) > ($3 | 0) ? $2_1 : $3;
     if (($5_1 | 0) >= ($3 | 0)) {
      break label$9
     }
     $2_1 = $1944(0, 73568);
     if ($2_1) {
      $2_1 = $2_1 + 876 | 0;
      $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
     }
     $2_1 = (((wasm2js_i32$1 = Math_imul($3, 40), wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
     $5_1 = $1944($0_1, 8);
     if ($5_1) {
      $1602($2_1, $5_1, Math_imul($1944($0_1, 0), 40));
      $5_1 = $1944($0_1, 8);
      label$14 : {
       if (!$5_1) {
        break label$14
       }
       $6_1 = $1944(0, 73568);
       if (!$6_1) {
        break label$14
       }
       $6_1 = $6_1 + 876 | 0;
       $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
      }
      ((wasm2js_i32$2 = $5_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     }
     $1973($0_1, 4, $3);
     $1973($0_1, 8, $2_1);
    }
    $3 = $1944($0_1, 0);
    if (($3 | 0) > 0) {
     $2_1 = $1944($0_1, 8);
     $1603($2_1 + 40 | 0, $2_1, Math_imul($3, 40));
    }
    $3 = $1944($0_1, 8);
   }
   $1982($3, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
   $1982($3 + 32 | 0, 0, $1959($1_1 + 32 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1982($3 + 24 | 0, 0, $1959($1_1 + 24 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1982($3 + 16 | 0, 0, $1959($1_1 + 16 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1982($3 + 8 | 0, 0, $1959($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
   $380($0_1);
  }
  global$0 = $4_1 + 96 | 0;
 }
 
 function $170($0_1, $1_1) {
  var $2_1 = 0, $3 = 0;
  $2_1 = $1944(0, 73568);
  $3 = $1944($1944($2_1 + 7504 | 0, 0), 0);
  $2_1 = $2_1 + 868 | 0;
  $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
  $168(($3 + Math_imul($1_1, 12) | 0) + 96 | 0, $1944($0_1, 580));
  if (($1944($0_1 + 352 | 0, 0) | 0) > 0) {
   $2_1 = 0;
   while (1) {
    $3 = $1944($1944($0_1, 360) + ($2_1 << 2) | 0, 0);
    label$3 : {
     if (!$1937($3, 138)) {
      break label$3
     }
     if ($1937($3, 145)) {
      break label$3
     }
     $170($3, $1_1);
    }
    $2_1 = $2_1 + 1 | 0;
    if (($1944($0_1, 352) | 0) > ($2_1 | 0)) {
     continue
    }
    break;
   };
  }
 }
 
 function $171($0_1) {
  $0_1 = $0_1 | 0;
  return $1944(($1944(0, 73568) + ($0_1 << 2) | 0) + 52 | 0, 0) | 0;
 }
 
 function $172($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  if (($0_1 | 0) >= 0) {
   $1_1 = ($1937(($1944(0, 73568) + $0_1 | 0) + 256 | 0, 0) | 0) != 0
  }
  return $1_1 | 0;
 }
 
 function $173($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = Math_fround($1_1);
  $2_1 = Math_fround($2_1);
  var $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0);
  $3 = 0;
  label$1 : {
   if (($0_1 | 0) < 0) {
    break label$1
   }
   $4_1 = $1944(0, 73568);
   $6_1 = $1963(($4_1 + ($0_1 << 2) | 0) + 1140 | 0, 0);
   $3 = 1;
   if ($6_1 == Math_fround(0.0)) {
    break label$1
   }
   $5_1 = Math_fround($6_1 - $1963($4_1 + 24 | 0, 0));
   $3 = 0;
   if ($5_1 >= $6_1) {
    break label$1
   }
   if ($2_1 <= Math_fround(0.0)) {
    return $1_1 <= $6_1 & $1_1 > $5_1
   }
   $4_1 = -1;
   if ($1_1 > $5_1) {
    $0_1 = $4_1
   } else {
    $5_1 = Math_fround(Math_fround($5_1 - $1_1) / $2_1);
    label$4 : {
     if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$5_1;
      break label$4;
     }
     $0_1 = -2147483648;
    }
   }
   if (!($1_1 > $6_1)) {
    $1_1 = Math_fround(Math_fround($6_1 - $1_1) / $2_1);
    label$7 : {
     if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
      $4_1 = ~~$1_1;
      break label$7;
     }
     $4_1 = -2147483648;
    }
   }
   $3 = $4_1 - $0_1 | 0;
  }
  return $3 | 0;
 }
 
 function $174($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = Math_fround(0), $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0);
  label$1 : {
   if (($0_1 | 0) < 0) {
    break label$1
   }
   $6_1 = $1944(0, 73568);
   $2_1 = $1963(($6_1 + ($0_1 << 2) | 0) + 1140 | 0, 0);
   $5_1 = $2_1 == Math_fround(0.0);
   if ($5_1) {
    return $5_1 | 0
   }
   if (!$1_1) {
    break label$1
   }
   $3 = $1963($6_1 + 140 | 0, 0);
   if (!($2_1 > $3)) {
    return 0
   }
   $5_1 = 0;
   $4_1 = Math_fround($2_1 - $1963($6_1 + 24 | 0, 0));
   if ($4_1 >= $2_1) {
    break label$1
   }
   $7_1 = $1963($6_1 + 144 | 0, 0);
   if ($7_1 <= Math_fround(0.0)) {
    return $3 > $4_1 & $2_1 >= $3
   }
   $0_1 = -1;
   if ($3 > $4_1) {
    $1_1 = $0_1
   } else {
    $4_1 = Math_fround(Math_fround($4_1 - $3) / $7_1);
    label$6 : {
     if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
      $1_1 = ~~$4_1;
      break label$6;
     }
     $1_1 = -2147483648;
    }
   }
   if (!($2_1 < $3)) {
    $2_1 = Math_fround(Math_fround($2_1 - $3) / $7_1);
    label$9 : {
     if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$2_1;
      break label$9;
     }
     $0_1 = -2147483648;
    }
   }
   $5_1 = ($0_1 | 0) > ($1_1 | 0);
  }
  return $5_1 | 0;
 }
 
 function $175($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0;
  $1_1 = 0;
  label$1 : {
   if (($0_1 | 0) < 0) {
    break label$1
   }
   $2_1 = $1944(0, 73568);
   $1_1 = 0;
   if (!($1963(($2_1 + ($0_1 << 2) | 0) + 3188 | 0, 0) >= Math_fround(0.0))) {
    break label$1
   }
   $1_1 = !$1937(($0_1 + $2_1 | 0) + 256 | 0, 0);
  }
  return $1_1 | 0;
 }
 
 function $176($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = Math_fround(0), $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = 0, $6_1 = Math_fround(0);
  $5_1 = $1944(0, 73568);
  $2_1 = $1963(($5_1 + ($0_1 << 2) | 0) + 1040 | 0, 0);
  if ($2_1 == Math_fround(0.0)) {
   return 1
  }
  label$2 : {
   label$3 : {
    if (!$1_1) {
     break label$3
    }
    $3 = $1963($5_1 + 140 | 0, 0);
    if (!($2_1 > $3)) {
     break label$3
    }
    $4_1 = Math_fround($2_1 - $1963($5_1 + 24 | 0, 0));
    $1_1 = 0;
    label$4 : {
     if ($4_1 >= $2_1) {
      break label$4
     }
     $6_1 = Math_fround($1963($5_1 + 144 | 0, 0) * Math_fround(.5));
     $1_1 = $3 > $4_1 & $2_1 >= $3;
     if ($6_1 <= Math_fround(0.0)) {
      break label$4
     }
     $0_1 = -1;
     if ($3 > $4_1) {
      $1_1 = $0_1
     } else {
      $4_1 = Math_fround(Math_fround($4_1 - $3) / $6_1);
      label$7 : {
       if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
        $1_1 = ~~$4_1;
        break label$7;
       }
       $1_1 = -2147483648;
      }
     }
     if (!($2_1 < $3)) {
      $2_1 = Math_fround(Math_fround($2_1 - $3) / $6_1);
      label$10 : {
       if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
        $0_1 = ~~$2_1;
        break label$10;
       }
       $0_1 = -2147483648;
      }
     }
     $1_1 = $0_1 - $1_1 | 0;
    }
    $0_1 = 1;
    if (($1_1 | 0) > 0) {
     break label$2
    }
   }
   $0_1 = 0;
  }
  return $0_1 | 0;
 }
 
 function $177($0_1) {
  $0_1 = $0_1 | 0;
  return $1937(($1944(0, 73568) + $0_1 | 0) + 1022 | 0, 0) | 0;
 }
 
 function $178($0_1) {
  $0_1 = $0_1 | 0;
  return ($1941(($1944(0, 73568) + ($0_1 << 1) | 0) + 1002 | 0, 0) | 0) == 2 | 0;
 }
 
 function $179($0_1) {
  $0_1 = $0_1 | 0;
  return $1941(($1944(0, 73568) + ($0_1 << 1) | 0) + 1002 | 0, 0) | 0;
 }
 
 function $180($0_1) {
  var $1_1 = 0;
  $1_1 = $1944(0, 73568);
  if ($0_1 < Math_fround(0.0)) {
   $0_1 = $1963($1_1 + 48 | 0, 0)
  }
  return $1963($1_1 + 1120 | 0, 0) >= Math_fround($0_1 * $0_1);
 }
 
 function $181($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = Math_fround($1_1);
  var $2_1 = 0, $3 = 0;
  $2_1 = $1944(0, 73568);
  if ($1937(($2_1 + $0_1 | 0) + 236 | 0, 0)) {
   if ($1_1 < Math_fround(0.0)) {
    $1_1 = $1963($2_1 + 48 | 0, 0)
   }
   $3 = $1963((($0_1 << 2) + $2_1 | 0) + 1120 | 0, 0) >= Math_fround($1_1 * $1_1);
  }
  return $3 | 0;
 }
 
 function $182($0_1) {
  $1982($0_1, 0, $1959($1944(0, 73568) + 228 | 0, 0), i64toi32_i32$HIGH_BITS);
 }
 
 function $184() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0;
  $0_1 = 1;
  $1_1 = $1944(0, 73568);
  if (!$1937($1_1 + 236 | 0, 0)) {
   $0_1 = 0;
   while (1) {
    $2_1 = $0_1;
    $0_1 = $0_1 + 1 | 0;
    if (($0_1 | 0) != 5) {
     if (!$1937(($0_1 + $1_1 | 0) + 236 | 0, 0)) {
      continue
     }
    }
    break;
   };
   $0_1 = $2_1 >>> 0 < 4;
  }
  return $0_1 | 0;
 }
 
 function $186($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = $1944(0, 73568);
  $1982((($0_1 << 3) + $1_1 | 0) + 908 | 0, 0, $1959($1_1 + 228 | 0, 0), i64toi32_i32$HIGH_BITS);
 }
 
 function $187() {
  return $1944($1944(0, 73568), 7872) | 0;
 }
 
 function $188($0_1) {
  $0_1 = $0_1 | 0;
  $1973($1944(0, 73568), 7872, $0_1);
 }
 
 function $189($0_1) {
  $0_1 = $0_1 | 0;
  $1973($1944(0, 73568), 12792, $0_1);
 }
 
 function $190($0_1) {
  $0_1 = $0_1 | 0;
  $1973($1944(0, 73568), 12788, $0_1);
 }
 
 function $191() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0;
  $0_1 = $1944(0, 73568);
  $1_1 = $1944($0_1, 7136);
  if ($1_1) {
   $2_1 = ($1944($0_1, 7240) | 0) == ($1_1 | 0)
  }
  return $2_1 | 0;
 }
 
 function $192() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0;
  $1_1 = $1944(0, 73568);
  $0_1 = $1944($1_1, 7136);
  label$1 : {
   label$2 : {
    if (!$0_1) {
     break label$2
    }
    $2_1 = $1944($1_1, 7240);
    if (($0_1 | 0) != ($2_1 | 0)) {
     break label$2
    }
    $0_1 = 1;
    if (($1944($1_1, 7196) | 0) != ($2_1 | 0)) {
     break label$1
    }
   }
   $0_1 = 0;
  }
  return $0_1 | 0;
 }
 
 function $193() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0;
  $2_1 = $1944(0, 73568);
  $0_1 = $1944($2_1 + 7248 | 0, 0);
  if ($0_1 & 32) {
   return ($0_1 & 64) >>> 6 | 0
  }
  $1_1 = $1944($2_1, 7196);
  if (!$1_1) {
   return 0
  }
  $0_1 = 0;
  $3 = $1_1;
  $1_1 = $1944($2_1, 7240);
  if (($3 | 0) == ($1_1 | 0)) {
   $0_1 = ($1944($2_1, 7136) | 0) != ($1_1 | 0)
  }
  return $0_1 | 0;
 }
 
 function $194() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0;
  $1_1 = $1944(0, 73568);
  $0_1 = $1944($1_1 + 7248 | 0, 0);
  label$1 : {
   label$2 : {
    if ($0_1 & 32) {
     $3 = ($0_1 & 64) >>> 6 | 0;
     break label$2;
    }
    $0_1 = $1944($1_1, 7196);
    if (!$0_1) {
     return 0
    }
    $3 = $0_1;
    $0_1 = $1944($1_1, 7240);
    $2_1 = 0;
    if (($3 | 0) != ($0_1 | 0)) {
     break label$1
    }
    $3 = ($1944($1_1, 7136) | 0) != ($0_1 | 0);
   }
   if (!$3) {
    return 0
   }
   $2_1 = 1;
   if ($1937($1_1, 7201)) {
    break label$1
   }
   $2_1 = 0;
   if ($1944($1_1, 7136)) {
    break label$1
   }
   $2_1 = ($1937($1_1, 7152) | 0) != 0;
  }
  return $2_1 | 0;
 }
 
 function $195($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  if ($1963(($1944(0, 73568) + ($0_1 << 2) | 0) + 1040 | 0, 0) == Math_fround(0.0)) {
   $1_1 = $89(0)
  }
  return $1_1 | 0;
 }
 
 function $196() {
  return ($1937($1944(0, 73568) + 7248 | 0, 0) & 16) >>> 4 | 0;
 }
 
 function $197() {
  var $0_1 = 0, $1_1 = 0;
  $0_1 = 1;
  $1_1 = $1944(0, 73568);
  if (!$1944($1_1, 7116)) {
   $0_1 = ($1944($1_1, 7120) | 0) != 0
  }
  return $0_1 | 0;
 }
 
 function $198() {
  return ($1944($1944(0, 73568), 7136) | 0) != 0 | 0;
 }
 
 function $199() {
  var $0_1 = 0, $1_1 = 0;
  $0_1 = $1944(0, 73568);
  if ($1944($0_1, 7512)) {
   $1_1 = !$1937($0_1, 7570)
  }
  return $1_1 | 0;
 }
 
 function $200() {
  var $0_1 = 0, $1_1 = 0, $2_1 = Math_fround(0), $3 = 0;
  $0_1 = $1944(0, 73568);
  $2_1 = $1963($0_1 + 7256 | 0, 0);
  $1_1 = $1944($0_1, 7080);
  if (!($2_1 < $1963($1_1 + 508 | 0, 0))) {
   return 0
  }
  if (!($1963($0_1 + 7264 | 0, 0) > $1963($1_1 + 500 | 0, 0))) {
   return 0
  }
  if ($1963($0_1, 7252) < $1963($1_1, 504)) {
   $3 = $1963($0_1, 7260) > $1963($1_1, 496)
  }
  return $3 | 0;
 }
 
 function $201() {
  return ($1937($1944(0, 73568) + 7248 | 0, 0) & 4) >>> 2 | 0;
 }
 
 function $202() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0;
  $0_1 = $1944(0, 73568);
  $2_1 = $1944($0_1, 7116);
  $1_1 = $1944($0_1, 7240);
  if (($1_1 | 0) == ($2_1 | 0)) {
   $1968($0_1, 7124, 1)
  }
  if (($1944($0_1, 7136) | 0) == ($1_1 | 0)) {
   $1968($0_1, 7149, 1)
  }
 }
 
 function $203() {
  var $0_1 = 0;
  $0_1 = $1944(0, 73568);
  $1970($0_1, 7596, 0);
  $1968($0_1, 7572, $1937($0_1, 7573));
 }
 
 function $204($0_1) {
  $1982($0_1, 0, $1959($1944(0, 73568) + 7252 | 0, 0), i64toi32_i32$HIGH_BITS);
 }
 
 function $205($0_1) {
  $1982($0_1, 0, $1959($1944(0, 73568) + 7260 | 0, 0), i64toi32_i32$HIGH_BITS);
 }
 
 function $207($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = Math_fround(0), $16_1 = 0, $17_1 = 0;
  $7_1 = global$0 - 32 | 0;
  global$0 = $7_1;
  $5_1 = $1944(0, 73568);
  $8 = $1944($5_1, 7080);
  $12_1 = $1963($8 + 524 | 0, 0);
  label$1 : {
   label$2 : {
    if ($1944($8 + 368 | 0, 0)) {
     break label$2
    }
    if ($1944($5_1, 8036)) {
     break label$2
    }
    $6_1 = $8 + 520 | 0;
    break label$1;
   }
   $6_1 = $8 + 472 | 0;
  }
  $9 = $1944($8, 8);
  $13 = $1963($8 + 212 | 0, 0);
  $11_1 = $1963($2_1, 0);
  $14 = $1963($8, 208);
  $15_1 = $1963($6_1, 0);
  $10_1 = $1963($2_1, 4);
  $1973($5_1, 7300, $1944($5_1, 7300) | 2);
  $1973($5_1 + 7308 | 0, 0, 1);
  $9 = $9 & 4;
  $13 = Math_fround($12_1 - $13);
  if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
   $2_1 = ~~$10_1
  } else {
   $2_1 = -2147483648
  }
  $12_1 = Math_fround($2_1 | 0);
  $10_1 = Math_fround($13 + $12_1);
  $1986($5_1 + 7336 | 0, 0, ($2_1 | 0) > 0 ? $12_1 : $10_1 >= Math_fround(4.0) ? $10_1 : Math_fround(4.0));
  $16_1 = $4_1 | $9;
  $12_1 = Math_fround($15_1 - $14);
  if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
   $6_1 = ~~$11_1
  } else {
   $6_1 = -2147483648
  }
  $10_1 = Math_fround($6_1 | 0);
  $11_1 = Math_fround($12_1 + $10_1);
  $1986($5_1 + 7332 | 0, 0, ($6_1 | 0) > 0 ? $10_1 : $11_1 >= Math_fround(4.0) ? $11_1 : Math_fround(4.0));
  $9 = $5_1 + 12800 | 0;
  $17_1 = !$2_1 << 1;
  $6_1 = !$6_1;
  $2_1 = $1944($8, 0);
  label$7 : {
   if ($0_1) {
    $1973($7_1, 24, $1_1);
    $1973($7_1, 20, $0_1);
    $1973($7_1, 16, $2_1);
    $21($9, 3073, 14551, $7_1 + 16 | 0);
    break label$7;
   }
   $1973($7_1, 4, $1_1);
   $1973($7_1, 0, $2_1);
   $21($9, 3073, 14575, $7_1);
  }
  $0_1 = $16_1 | 16777475;
  $6_1 = $6_1 | $17_1;
  $11_1 = $1963($5_1 + 5464 | 0, 0);
  if (!$3) {
   $1973($5_1, 5464, 0)
  }
  $9 = $143($5_1 + 12800 | 0, 0, $0_1);
  $1986($5_1, 5464, $11_1);
  $2_1 = $1944($5_1, 7080);
  $1968($2_1, 166, $6_1);
  $1973($2_1, 84, $1_1);
  if (($1941($2_1, 150) | 0) == 1) {
   $1982($8, 208, $1959($2_1, 12), i64toi32_i32$HIGH_BITS)
  }
  label$11 : {
   if ($4_1 & 8388608) {
    break label$11
   }
   if (($1944($5_1, 7520) | 0) != ($1_1 | 0)) {
    break label$11
   }
   if (!$1941($2_1 + 296 | 0, 0)) {
    if (!$1937($2_1 + 305 | 0, 0)) {
     break label$11
    }
   }
   $125($2_1);
   $0_1 = $1944(0, 73568);
   $3 = $1944($2_1, 8);
   label$13 : {
    if ($3 & 262144) {
     $1983($0_1, 7512, 0, 0);
     break label$13;
    }
    label$15 : {
     if (!($3 & 67108864 | ($1944($2_1, 736) | 0) == ($2_1 | 0))) {
      $3 = $1944($2_1, 756);
      if ($3) {
       break label$15
      }
     }
     $1983($0_1, 7512, 0, 0);
     $3 = $1944($0_1, 7508);
     $4_1 = $1944($0_1, 7564);
     $1973(($3 + ($4_1 << 2) | 0) + 756 | 0, 0, 0);
     $3 = $3 + ($4_1 << 4) | 0;
     $1982($3 + 772 | 0, 0, 0, 0);
     $1982($3 + 764 | 0, 0, 0, 0);
     $1983($0_1, 7576, 0, 0);
     $1968($0_1, 7574, 0);
     $1970($0_1, 7572, 257);
     $1983($0_1 + 7584 | 0, 0, 0, 0);
     $1973($0_1 + 7592 | 0, 0, 0);
     break label$13;
    }
    $1973($0_1, 7516, 0);
    $1973($0_1, 7512, $3);
   }
   $3 = $1944($0_1, 7136);
   $1_1 = $1_1 + 1 | 0;
   $1968($0_1, 7148, ($3 | 0) != ($1_1 | 0));
   label$17 : {
    if (($1_1 | 0) == ($3 | 0)) {
     break label$17
    }
    $1973($0_1, 7192, -1);
    $1969($0_1, 7151, 0);
    $1973($0_1, 7144, 0);
    if (!$1_1) {
     break label$17
    }
    $1973($0_1, 7212, 0);
    $1973($0_1, 7208, $1_1);
   }
   $1973($0_1, 7184, $2_1);
   $1969($0_1, 7149, 0);
   $1973($0_1, 7136, $1_1);
   $1968($0_1, 7153, 0);
   if ($1_1) {
    $1973($0_1, 7140, $1_1);
    $2_1 = 4;
    label$19 : {
     if (($1944($0_1, 7520) | 0) == ($1_1 | 0)) {
      break label$19
     }
     $2_1 = 4;
     if (($1944($0_1, 7532) | 0) == ($1_1 | 0)) {
      break label$19
     }
     $2_1 = ($1944($0_1, 7540) | 0) == ($1_1 | 0) ? 4 : 1;
    }
    $1973($0_1, 7188, $2_1);
   }
   $1983($0_1, 7168, 0, 0);
   $1982($0_1, 7156, 0, 0);
   $1968($0_1, 7154, 0);
   $1973($5_1, 7188, 4);
  }
  global$0 = $7_1 + 32 | 0;
  return $9;
 }
 
 function $208($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = Math_fround(0), $4_1 = Math_fround(0);
  $2_1 = $1944(0, 73568);
  $1_1 = $1944($2_1, 7080);
  $3 = $1963($1_1 + 524 | 0, 0);
  label$1 : {
   label$2 : {
    if ($1944($1_1 + 368 | 0, 0)) {
     break label$2
    }
    if ($1944($2_1, 8036)) {
     break label$2
    }
    $2_1 = $1_1 + 520 | 0;
    break label$1;
   }
   $2_1 = $1_1 + 472 | 0;
  }
  $4_1 = $1963($1_1 + 212 | 0, 0);
  $1986($0_1, 0, Math_fround($1963($2_1, 0) - $1963($1_1, 208)));
  $1986($0_1, 4, Math_fround($3 - $4_1));
 }
 
 function $211() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = Math_fround(0), $5_1 = 0, $6_1 = 0;
  $0_1 = global$0 - 48 | 0;
  global$0 = $0_1;
  $3 = $1944(0, 73568);
  $1968($3, 6998, 1);
  $1_1 = $1944($3, 7080);
  label$1 : {
   if (($1939($1_1, 150) | 0) >= 2) {
    $142();
    break label$1;
   }
   $1983($0_1, 40, $1959($1_1, 20), i64toi32_i32$HIGH_BITS);
   $2_1 = $1937($1_1, 166);
   if ($2_1 & 1) {
    $4_1 = $1963($0_1, 40);
    $1986($0_1, 40, $4_1 <= Math_fround(4.0) ? Math_fround(4.0) : $4_1);
   }
   if ($2_1 & 2) {
    $4_1 = $1963($0_1, 44);
    $1986($0_1, 44, $4_1 <= Math_fround(4.0) ? Math_fround(4.0) : $4_1);
   }
   $142();
   $2_1 = $1944($3, 7080);
   $4_1 = $1963($2_1, 208);
   $5_1 = $1959($2_1, 208);
   $6_1 = i64toi32_i32$HIGH_BITS;
   $1986($0_1 + 36 | 0, 0, Math_fround($1963($2_1 + 212 | 0, 0) + $1963($0_1, 44)));
   $1983($0_1, 24, $5_1, $6_1);
   $1986($0_1, 32, Math_fround($4_1 + $1963($0_1, 40)));
   $212($0_1 + 40 | 0, Math_fround(-1.0));
   label$5 : {
    label$6 : {
     if (!$1941($1_1 + 296 | 0, 0)) {
      if (!$1937($1_1 + 305 | 0, 0)) {
       break label$6
      }
     }
     if ($1937($1_1 + 10 | 0, 0) & 128) {
      break label$6
     }
     $2_1 = $0_1 + 24 | 0;
     $213($2_1, $1944($1_1, 84), 0, 0);
     $73($2_1, $1944($1_1, 84), 1);
     if ($1941($1_1, 296)) {
      break label$5
     }
     if (($1944($3, 7508) | 0) != ($1_1 | 0)) {
      break label$5
     }
     $2_1 = $0_1 + 8 | 0;
     $1986($2_1 + 12 | 0, 0, Math_fround($1963($0_1 + 36 | 0, 0) + Math_fround(2.0)));
     $1986($0_1, 16, Math_fround($1963($0_1, 32) + Math_fround(2.0)));
     $1986($0_1, 12, Math_fround($1963($0_1, 28) + Math_fround(-2.0)));
     $1986($0_1, 8, Math_fround($1963($0_1, 24) + Math_fround(-2.0)));
     $73($2_1, $1944($3, 7512), 2);
     break label$5;
    }
    $213($0_1 + 24 | 0, 0, 0, 0);
   }
   if (($1944($3, 7084) | 0) != ($1_1 | 0)) {
    break label$1
   }
   $1_1 = $3 + 7248 | 0;
   $1973($1_1, 0, $1944($1_1, 0) | 128);
  }
  $1973($3, 12228, -8388609);
  $1968($3, 6998, 0);
  global$0 = $0_1 + 48 | 0;
 }
 
 function $212($0_1, $1_1) {
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0);
  label$1 : {
   $7_1 = $1944(0, 73568);
   $2_1 = $1944($7_1, 7080);
   if ($1937($2_1, 143)) {
    break label$1
   }
   if ($1_1 >= Math_fround(0.0)) {
    $3 = Math_fround($1963($2_1 + 264 | 0, 0) - $1_1);
    $3 = $3 <= Math_fround(0.0) ? Math_fround(0.0) : $3;
   }
   $11_1 = $1963($0_1, 4);
   $6_1 = Math_fround($1963($2_1, 208) + $1963($0_1, 0));
   $1986($2_1 + 216 | 0, 0, $6_1);
   $9 = $2_1 + 212 | 0;
   $8 = $1963($9, 0);
   $1986($2_1 + 220 | 0, 0, $8);
   $4_1 = Math_fround(Math_fround($1963($2_1, 12) + $1963($2_1 + 272 | 0, 0)) + $1963($2_1 + 276 | 0, 0));
   label$3 : {
    if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
     $0_1 = ~~$4_1;
     break label$3;
    }
    $0_1 = -2147483648;
   }
   $1986($2_1, 208, Math_fround($0_1 | 0));
   $4_1 = $1963($7_1 + 5496 | 0, 0);
   $0_1 = $2_1 + 252 | 0;
   $5_1 = $1963($0_1, 0);
   $1973($0_1, 0, 0);
   $0_1 = $2_1 + 232 | 0;
   $10_1 = $1963($0_1, 0);
   $1986($0_1, 0, $6_1 <= $10_1 ? $10_1 : $6_1);
   $3 = Math_fround($3 + $11_1);
   $3 = $3 <= $5_1 ? $5_1 : $3;
   $1986($2_1 + 260 | 0, 0, $3);
   $3 = Math_fround($4_1 + Math_fround($3 + $8));
   label$5 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $0_1 = ~~$3;
     break label$5;
    }
    $0_1 = -2147483648;
   }
   $5_1 = Math_fround($0_1 | 0);
   $1986($9, 0, $5_1);
   $0_1 = $2_1 + 236 | 0;
   $3 = $1963($0_1, 0);
   $4_1 = Math_fround($5_1 - $4_1);
   $1986($0_1, 0, $3 >= $4_1 ? $3 : $4_1);
   $0_1 = $2_1 + 264 | 0;
   $3 = $1963($0_1, 0);
   $1973($0_1, 0, 0);
   $1_1 = $1_1 <= $3 ? $3 : $1_1;
   $1986($2_1 + 268 | 0, 0, $1_1);
   if ($1944($2_1 + 376 | 0, 0)) {
    break label$1
   }
   $1968($2_1, 140, 1);
   $3 = $1963($7_1 + 5492 | 0, 0);
   $1986($2_1, 212, $8);
   $1986($2_1, 264, $1_1);
   $1982($2_1 + 248 | 0, 0, $1959($2_1 + 256 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1986($2_1, 208, Math_fround($6_1 + $3));
  }
 }
 
 function $213($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = 0, $14 = Math_fround(0), $15_1 = Math_fround(0), $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = 0;
  $4_1 = $1944(0, 73568);
  $1973($4_1, 7240, $1_1);
  $1982($4_1 + 7252 | 0, 0, $1959($0_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($4_1 + 7260 | 0, 0, $1959($0_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
  $2_1 = $2_1 ? $2_1 : $0_1;
  $5_1 = $1959($2_1, 0);
  $10_1 = i64toi32_i32$HIGH_BITS;
  $13 = $1959($2_1 + 8 | 0, 0);
  $18_1 = i64toi32_i32$HIGH_BITS;
  $2_1 = $1944($4_1, 7216) | $3;
  $1973($4_1 + 7244 | 0, 0, $2_1);
  $1973($4_1 + 7248 | 0, 0, 0);
  $1982($4_1 + 7276 | 0, 0, $13, $18_1);
  $1982($4_1 + 7268 | 0, 0, $5_1, $10_1);
  label$1 : {
   if (!$1_1) {
    break label$1
   }
   $3 = $1944($4_1, 7080);
   $5_1 = $3 + 298 | 0;
   $10_1 = $1941($5_1, 0);
   $13 = $1944($3 + 292 | 0, 0);
   $1970($5_1, 0, $10_1 | 1 << $13);
   if (($1944($4_1, 7512) | 0) != ($1_1 | 0)) {
    if (!$1937($4_1, 7572)) {
     break label$1
    }
   }
   $5_1 = $1944($4_1, 7508);
   if (($1944($5_1, 748) | 0) != ($1944($3, 748) | 0)) {
    break label$1
   }
   if (($3 | 0) != ($5_1 | 0)) {
    if (!(($1944($5_1, 8) | $1944($3, 8)) & 8388608)) {
     break label$1
    }
   }
   $8 = $1963($4_1 + 7280 | 0, 0);
   $14 = $1963($4_1 + 7276 | 0, 0);
   $11_1 = $1963($4_1 + 7272 | 0, 0);
   $12_1 = $1963($4_1, 7268);
   label$4 : {
    if (!$1937($4_1, 7573)) {
     break label$4
    }
    if (($1944($4_1, 7564) | 0) != ($13 | 0)) {
     break label$4
    }
    $5_1 = $2_1 & 20;
    label$5 : {
     if ($5_1) {
      if ($1944($4_1, 7576)) {
       break label$5
      }
     }
     $1973($4_1, 7576, $1_1);
     $6_1 = $1963($3 + 224 | 0, 0);
     $7_1 = $1963($3 + 228 | 0, 0);
     $1986($4_1 + 7592 | 0, 0, Math_fround($8 - $7_1));
     $1986($4_1 + 7588 | 0, 0, Math_fround($14 - $6_1));
     $1986($4_1 + 7584 | 0, 0, Math_fround($11_1 - $7_1));
     $1986($4_1, 7580, Math_fround($12_1 - $6_1));
    }
    if ($5_1) {
     break label$4
    }
    $1968($4_1, 7573, 0);
    $1968($4_1, 7572, $1937($4_1, 7597));
   }
   label$7 : {
    if (!$1937($4_1, 7597)) {
     break label$7
    }
    $5_1 = $1944($4_1, 7600);
    if ($5_1 & 1024) {
     if (!($5_1 & 512) & ($2_1 & 261) != 256) {
      break label$7
     }
     label$10 : {
      switch ($1944($4_1, 7660) + 1 | 0) {
      case 2:
       if (!$1944($4_1 + 7804 | 0, 0)) {
        $1973($4_1, 7804, $1_1);
        $1973($4_1, 7800, $3);
        $5_1 = $1944($3 + 300 | 0, 0);
        $1973($4_1 + 7828 | 0, 0, $2_1);
        $1973($4_1 + 7808 | 0, 0, $5_1);
        $6_1 = $1963($3 + 224 | 0, 0);
        $9 = $1963($4_1, 7280);
        $7_1 = $1963($3 + 228 | 0, 0);
        $1986($4_1 + 7824 | 0, 0, Math_fround($9 - $7_1));
        $1986($4_1 + 7820 | 0, 0, Math_fround($1963($4_1, 7276) - $6_1));
        $1986($4_1 + 7816 | 0, 0, Math_fround($1963($4_1, 7272) - $7_1));
        $1986($4_1 + 7812 | 0, 0, Math_fround($12_1 - $6_1));
       }
       $5_1 = $1944($4_1, 7664) - 1 | 0;
       $1973($4_1, 7664, $5_1);
       if (!$5_1) {
        $1973($4_1, 7668, $3);
        $1968($4_1, 7597, 0);
        $1973($4_1 + 7672 | 0, 0, $1_1);
        $5_1 = $1944($3 + 300 | 0, 0);
        $1973($4_1 + 7696 | 0, 0, $2_1);
        $1973($4_1 + 7676 | 0, 0, $5_1);
        $6_1 = $1963($3 + 224 | 0, 0);
        $7_1 = $1963($3 + 228 | 0, 0);
        $1968($4_1, 7572, $1937($4_1, 7573));
        $1986($4_1 + 7692 | 0, 0, Math_fround($1963($4_1, 7280) - $7_1));
        $1986($4_1 + 7688 | 0, 0, Math_fround($1963($4_1, 7276) - $6_1));
        $1986($4_1 + 7684 | 0, 0, Math_fround($1963($4_1, 7272) - $7_1));
        $1986($4_1 + 7680 | 0, 0, Math_fround($12_1 - $6_1));
        break label$7;
       }
       if (($1944($4_1, 7512) | 0) != ($1_1 | 0)) {
        break label$7
       }
       $1973($4_1, 7664, 1);
       break label$7;
      case 0:
       if (($1944($4_1, 7512) | 0) == ($1_1 | 0)) {
        if (!$1944($4_1 + 7672 | 0, 0)) {
         break label$7
        }
        $1968($4_1, 7597, 0);
        $1968($4_1, 7572, $1937($4_1, 7573));
        break label$7;
       }
       $1973($4_1, 7668, $3);
       $1973($4_1 + 7672 | 0, 0, $1_1);
       $5_1 = $1944($3 + 300 | 0, 0);
       $1973($4_1 + 7696 | 0, 0, $2_1);
       $1973($4_1 + 7676 | 0, 0, $5_1);
       $6_1 = $1963($3 + 224 | 0, 0);
       $9 = $1963($4_1, 7280);
       $7_1 = $1963($3 + 228 | 0, 0);
       $1986($4_1 + 7692 | 0, 0, Math_fround($9 - $7_1));
       $1986($4_1 + 7688 | 0, 0, Math_fround($1963($4_1, 7276) - $6_1));
       $1986($4_1 + 7684 | 0, 0, Math_fround($1963($4_1, 7272) - $7_1));
       $1986($4_1 + 7680 | 0, 0, Math_fround($12_1 - $6_1));
       break label$7;
      case 1:
       break label$10;
      default:
       break label$7;
      };
     }
     if ($1944($4_1 + 7804 | 0, 0)) {
      break label$7
     }
     $1973($4_1, 7804, $1_1);
     $1973($4_1, 7800, $3);
     $1968($4_1, 7597, 0);
     $5_1 = $1944($3 + 300 | 0, 0);
     $1973($4_1 + 7828 | 0, 0, $2_1);
     $1973($4_1 + 7808 | 0, 0, $5_1);
     $6_1 = $1963($3 + 224 | 0, 0);
     $7_1 = $1963($3 + 228 | 0, 0);
     $1968($4_1, 7572, $1937($4_1, 7573));
     $1986($4_1 + 7824 | 0, 0, Math_fround($1963($4_1, 7280) - $7_1));
     $1986($4_1 + 7820 | 0, 0, Math_fround($1963($4_1, 7276) - $6_1));
     $1986($4_1 + 7816 | 0, 0, Math_fround($1963($4_1, 7272) - $7_1));
     $1986($4_1 + 7812 | 0, 0, Math_fround($12_1 - $6_1));
     break label$7;
    }
    if (!(($5_1 & 16) >>> 4 | ($1944($4_1, 7512) | 0) != ($1_1 | 0)) | $2_1 & 12) {
     break label$7
    }
    $5_1 = ($1944($4_1, 7508) | 0) == ($3 | 0);
    $2_1 = $5_1 ? $4_1 + 7668 | 0 : $4_1 + 7756 | 0;
    if ($214($2_1)) {
     $13 = ($5_1 ? 7668 : 7756) + $4_1 | 0;
     $5_1 = $1944(0, 73568);
     $10_1 = $1944($5_1, 7080);
     $1973($13, 0, $10_1);
     $1973($2_1, 4, $1944($5_1, 7240));
     $1973($2_1, 8, $1944($10_1 + 300 | 0, 0));
     $1973($2_1, 28, $1944($5_1 + 7244 | 0, 0));
     $7_1 = $1963($5_1 + 7268 | 0, 0);
     $15_1 = $1963($5_1 + 7272 | 0, 0);
     $16_1 = $1963($5_1 + 7276 | 0, 0);
     $6_1 = $1963($10_1 + 224 | 0, 0);
     $17_1 = $1963($5_1 + 7280 | 0, 0);
     $9 = $1963($10_1 + 228 | 0, 0);
     $1986($2_1 + 24 | 0, 0, Math_fround($17_1 - $9));
     $1986($2_1 + 20 | 0, 0, Math_fround($16_1 - $6_1));
     $1986($2_1 + 16 | 0, 0, Math_fround($15_1 - $9));
     $1986($2_1, 12, Math_fround($7_1 - $6_1));
    }
    if (!($1937($4_1, 7600) & 32)) {
     break label$7
    }
    $6_1 = $1963($3 + 508 | 0, 0);
    if (!($6_1 > $11_1)) {
     break label$7
    }
    $7_1 = $1963($3 + 500 | 0, 0);
    if (!($7_1 < $8)) {
     break label$7
    }
    if (!($1963($3, 504) > $12_1)) {
     break label$7
    }
    if (!($1963($3, 496) < $14) | !(Math_fround(($7_1 > $8 ? $7_1 : $6_1 < $8 ? $6_1 : $8) - ($7_1 > $11_1 ? $7_1 : $6_1 < $11_1 ? $6_1 : $11_1)) >= Math_fround(Math_fround($8 - $11_1) * Math_fround(.699999988079071)))) {
     break label$7
    }
    $2_1 = $4_1 + 7712 | 0;
    if (!$214($2_1)) {
     break label$7
    }
    $5_1 = $1944(0, 73568);
    $10_1 = $1944($5_1, 7080);
    $1973($2_1, 0, $10_1);
    $1973($2_1, 4, $1944($5_1, 7240));
    $1973($2_1, 8, $1944($10_1 + 300 | 0, 0));
    $1973($2_1, 28, $1944($5_1 + 7244 | 0, 0));
    $7_1 = $1963($5_1 + 7268 | 0, 0);
    $15_1 = $1963($5_1 + 7272 | 0, 0);
    $16_1 = $1963($5_1 + 7276 | 0, 0);
    $6_1 = $1963($10_1 + 224 | 0, 0);
    $17_1 = $1963($5_1 + 7280 | 0, 0);
    $9 = $1963($10_1 + 228 | 0, 0);
    $1986($2_1 + 24 | 0, 0, Math_fround($17_1 - $9));
    $1986($2_1 + 20 | 0, 0, Math_fround($16_1 - $6_1));
    $1986($2_1 + 16 | 0, 0, Math_fround($15_1 - $9));
    $1986($2_1, 12, Math_fround($7_1 - $6_1));
   }
   if (($1944($4_1, 7512) | 0) != ($1_1 | 0)) {
    break label$1
   }
   $1973($4_1, 7508, $3);
   $2_1 = $1944($3, 292);
   $1973($4_1, 7564, $2_1);
   $5_1 = $1944($3 + 300 | 0, 0);
   $1968($4_1, 7568, 1);
   $1973($4_1, 7516, $5_1);
   $6_1 = $1963($3 + 224 | 0, 0);
   $2_1 = $3 + ($2_1 << 4) | 0;
   $9 = $8;
   $8 = $1963($3 + 228 | 0, 0);
   $1986($2_1 + 776 | 0, 0, Math_fround($9 - $8));
   $1986($2_1 + 772 | 0, 0, Math_fround($14 - $6_1));
   $1986($2_1 + 768 | 0, 0, Math_fround($11_1 - $8));
   $1986($2_1 + 764 | 0, 0, Math_fround($12_1 - $6_1));
  }
  $1973($4_1, 7220, 0);
  $2_1 = $1944(0, 73568);
  $3 = $1944($2_1, 7080);
  $8 = $1963($3 + 500 | 0, 0);
  label$17 : {
   label$18 : {
    label$19 : {
     if (!($1963($0_1 + 12 | 0, 0) > $8)) {
      break label$19
     }
     if (!($1963($3 + 508 | 0, 0) > $1963($0_1, 4))) {
      break label$19
     }
     if (!($1963($3, 496) < $1963($0_1, 8))) {
      break label$19
     }
     if ($1963($3, 504) > $1963($0_1, 0)) {
      break label$18
     }
    }
    if ($1_1) {
     if (($1944($2_1, 7136) | 0) == ($1_1 | 0)) {
      break label$18
     }
     if (($1944($2_1, 7512) | 0) == ($1_1 | 0)) {
      break label$18
     }
    }
    if ($1937($2_1, 12196)) {
     break label$18
    }
    $1_1 = 1;
    break label$17;
   }
   $1_1 = 0;
  }
  label$21 : {
   if ($1_1) {
    break label$21
   }
   $11_1 = $1963($2_1 + 228 | 0, 0);
   $12_1 = $1963($0_1, 0);
   $6_1 = $1963($3, 496);
   $9 = $6_1 <= $12_1 ? $12_1 : $6_1;
   $6_1 = $1963($2_1 + 5516 | 0, 0);
   if (!($11_1 >= Math_fround($9 - $6_1))) {
    break label$21
   }
   $12_1 = $1963($2_1 + 232 | 0, 0);
   $7_1 = $1963($0_1, 4);
   $9 = $7_1 >= $8 ? $7_1 : $8;
   $8 = $1963($2_1 + 5520 | 0, 0);
   if (!($12_1 >= Math_fround($9 - $8))) {
    break label$21
   }
   $9 = $6_1;
   $6_1 = $1963($0_1, 8);
   $7_1 = $1963($3 + 504 | 0, 0);
   if (!($11_1 < Math_fround($9 + ($6_1 < $7_1 ? $6_1 : $7_1)))) {
    break label$21
   }
   $11_1 = $1963($0_1 + 12 | 0, 0);
   $6_1 = $1963($3 + 508 | 0, 0);
   if (!($12_1 < Math_fround(($6_1 > $11_1 ? $11_1 : $6_1) + $8))) {
    break label$21
   }
   $1973($4_1, 7248, $1944($4_1, 7248) | 1);
  }
  return $1_1 ^ 1;
 }
 
 function $214($0_1) {
  var $1_1 = Math_fround(0), $2_1 = Math_fround(0), $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = 0, $16_1 = Math_fround(0), $17_1 = 0, $18_1 = Math_fround(0);
  $3 = $1944(0, 73568);
  $15_1 = $1944($3, 7564);
  $4_1 = $1944($3, 7080);
  if (($15_1 | 0) != ($1944($4_1 + 292 | 0, 0) | 0)) {
   return 0
  }
  $1973($3, 7656, $1944($3, 7656) + 1 | 0);
  $16_1 = $1963($3 + 7636 | 0, 0);
  $13 = $1963($3 + 7632 | 0, 0);
  $11_1 = $1963($3 + 7628 | 0, 0);
  $1_1 = $1963($3 + 7280 | 0, 0);
  $8 = $1963($3 + 7276 | 0, 0);
  $7_1 = $1963($3 + 7272 | 0, 0);
  $6_1 = $1963($3 + 7268 | 0, 0);
  $14 = $1963($3, 7624);
  $9 = $1944($4_1, 728);
  $17_1 = $1944($3, 7508);
  label$2 : {
   label$3 : {
    if (($17_1 | 0) != ($9 | 0)) {
     break label$3
    }
    if (!($1963($4_1 + 508 | 0, 0) > $7_1)) {
     return 0
    }
    if (!($1963($4_1 + 500 | 0, 0) < $1_1)) {
     return 0
    }
    if (!($1963($4_1, 504) > $6_1)) {
     return 0
    }
    $9 = 0;
    if (!($1963($4_1, 496) < $8)) {
     break label$2
    }
    $2_1 = $1963($4_1 + 500 | 0, 0);
    $9 = $1959($4_1, 504);
    $5_1 = (wasm2js_scratch_store_i32(2, i64toi32_i32$HIGH_BITS), wasm2js_scratch_load_f32());
    $1_1 = $1_1 < $2_1 ? $2_1 : $1_1 > $5_1 ? $5_1 : $1_1;
    $10_1 = $1963($4_1, 496);
    $12_1 = (wasm2js_scratch_store_i32(2, $9), wasm2js_scratch_load_f32());
    $8 = $8 < $10_1 ? $10_1 : $8 > $12_1 ? $12_1 : $8;
    $7_1 = $2_1 > $7_1 ? $2_1 : $5_1 < $7_1 ? $5_1 : $7_1;
    $6_1 = $6_1 < $10_1 ? $10_1 : $6_1 > $12_1 ? $12_1 : $6_1;
   }
   $2_1 = $8;
   $8 = $1_1;
   label$8 : {
    if ($1944($3, 7620) >>> 0 <= 1) {
     $1_1 = $1963($4_1 + 500 | 0, 0);
     $5_1 = $1963($4_1 + 508 | 0, 0);
     $8 = $1_1 > $8 ? $1_1 : $5_1 < $8 ? $5_1 : $8;
     $7_1 = $1_1 > $7_1 ? $1_1 : $5_1 < $7_1 ? $5_1 : $7_1;
     break label$8;
    }
    $1_1 = $1963($4_1, 496);
    $5_1 = $1963($4_1 + 504 | 0, 0);
    $2_1 = $1_1 > $2_1 ? $1_1 : $2_1 > $5_1 ? $5_1 : $2_1;
    $6_1 = $1_1 > $6_1 ? $1_1 : $5_1 < $6_1 ? $5_1 : $6_1;
   }
   $5_1 = $6_1;
   $10_1 = $2_1;
   label$10 : {
    if ($2_1 < $14) {
     $2_1 = Math_fround($10_1 - $14);
     break label$10;
    }
    $2_1 = Math_fround(0.0);
    if (!($5_1 > $13)) {
     break label$10
    }
    $2_1 = Math_fround($5_1 - $13);
   }
   $1_1 = Math_fround($8 - $7_1);
   $6_1 = Math_fround(Math_fround($1_1 * Math_fround(.800000011920929)) + $7_1);
   $12_1 = Math_fround($16_1 - $11_1);
   $18_1 = Math_fround(Math_fround($12_1 * Math_fround(.20000000298023224)) + $11_1);
   label$12 : {
    if ($6_1 < $18_1) {
     $6_1 = Math_fround($6_1 - $18_1);
     break label$12;
    }
    $12_1 = Math_fround(Math_fround($12_1 * Math_fround(.800000011920929)) + $11_1);
    $1_1 = Math_fround(Math_fround($1_1 * Math_fround(.20000000298023224)) + $7_1);
    $6_1 = Math_fround(0.0);
    if (!($12_1 < $1_1)) {
     break label$12
    }
    $6_1 = Math_fround($1_1 - $12_1);
   }
   if (!($2_1 == Math_fround(0.0) | $6_1 == Math_fround(0.0))) {
    $2_1 = Math_fround(Math_fround($2_1 / Math_fround(1.0e3)) + ($2_1 > Math_fround(0.0) ? Math_fround(1.0) : Math_fround(-1.0)))
   }
   $1_1 = Math_fround(Math_fround($8 + $7_1) - Math_fround($11_1 + $16_1));
   $11_1 = Math_fround(Math_abs($1_1));
   $7_1 = Math_fround(Math_fround($10_1 + $5_1) - Math_fround($14 + $13));
   $13 = Math_fround(Math_abs($7_1));
   $5_1 = Math_fround($11_1 + $13);
   $8 = $2_1;
   $14 = Math_fround(Math_abs($6_1));
   $2_1 = Math_fround(Math_abs($2_1));
   $10_1 = Math_fround($14 + $2_1);
   label$17 : {
    if (!($6_1 == Math_fround(0.0) & $8 == Math_fround(0.0))) {
     $9 = $2_1 > $14 ? $8 > Math_fround(0.0) : $6_1 > Math_fround(0.0) ? 3 : 2;
     $7_1 = $8;
     $1_1 = $6_1;
     $2_1 = $10_1;
     break label$17;
    }
    if (!($7_1 == Math_fround(0.0) & $1_1 == Math_fround(0.0))) {
     $9 = $11_1 < $13 ? $7_1 > Math_fround(0.0) : $1_1 > Math_fround(0.0) ? 3 : 2;
     $2_1 = $5_1;
     break label$17;
    }
    $9 = $1944($3, 7240) >>> 0 >= $1944($3, 7512) >>> 0;
    $7_1 = Math_fround(0.0);
    $1_1 = Math_fround(0.0);
    $2_1 = Math_fround(0.0);
   }
   $3 = $1944($3, 7612);
   $4_1 = 0;
   label$22 : {
    if (($9 | 0) != ($3 | 0)) {
     break label$22
    }
    $11_1 = $1963($0_1, 32);
    if ($10_1 < $11_1) {
     $1986($0_1, 36, $5_1);
     $1986($0_1, 32, $10_1);
     return 1;
    }
    $4_1 = 0;
    if ($10_1 != $11_1) {
     break label$22
    }
    $10_1 = $1963($0_1, 36);
    if ($5_1 < $10_1) {
     $1986($0_1, 36, $5_1);
     $4_1 = 1;
     break label$22;
    }
    $4_1 = 0;
    if ($5_1 != $10_1) {
     break label$22
    }
    $4_1 = 0;
    if (!((($3 & -2) == 2 ? $6_1 : $8) < Math_fround(0.0))) {
     break label$22
    }
    $4_1 = 1;
   }
   $9 = $4_1;
   if ($1963($0_1, 32) != Math_fround(3402823466385288598117041.0e14)) {
    return $9
   }
   if (!($1963($0_1, 40) > $2_1)) {
    return $9
   }
   if (($15_1 | 0) != 1) {
    return $9
   }
   if ($1937($17_1 + 11 | 0, 0) & 16) {
    return $9
   }
   label$32 : {
    if (!$3 & $7_1 < Math_fround(0.0) | ($3 | 0) == 1 & $7_1 > Math_fround(0.0)) {
     break label$32
    }
    if (($3 | 0) == 2 & $1_1 < Math_fround(0.0)) {
     break label$32
    }
    if (($3 | 0) != 3) {
     return $9
    }
    if (!($1_1 > Math_fround(0.0))) {
     break label$2
    }
   }
   $1986($0_1, 40, $2_1);
   $9 = 1;
  }
  return $9;
 }
 
 function $216($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $3 = $1944(0, 73568);
  $56(3, $3 + 5728 | 0);
  $58(7, $1963($3 + 5484 | 0, 0));
  $58(8, $1963($3 + 5488 | 0, 0));
  $59(2, $3 + 5476 | 0);
  $6_1 = $207(0, $0_1, $1_1, 1, $2_1 | 65540);
  $3 = $1944(0, 73568);
  $7_1 = $3 + 5416 | 0;
  $8 = $1944($3 + 7416 | 0, 0);
  $2_1 = $1944($3, 7408);
  $1_1 = 3;
  while (1) {
   $0_1 = $1_1;
   $2_1 = $2_1 - 1 | 0;
   $1_1 = Math_imul($2_1, 12) + $8 | 0;
   $5_1 = $1944($1_1, 0);
   $4_1 = Math_imul($5_1, 12);
   label$2 : {
    if (($1944($4_1 + 20912 | 0, 0) | 0) != 8) {
     break label$2
    }
    $4_1 = $1944($4_1 + 20920 | 0, 0) + $7_1 | 0;
    if (8206235 >>> $5_1 & 1) {
     $1986($4_1, 0, $1963($1_1, 4));
     break label$2;
    }
    if (!(25348196 >>> $5_1 & 1)) {
     break label$2
    }
    $1986($4_1, 0, $1963($1_1, 4));
    $1986($4_1, 4, $1963($1_1 + 8 | 0, 0));
   }
   $1973($3, 7408, $2_1);
   $1_1 = $0_1 - 1 | 0;
   if ($0_1 >>> 0 > 1) {
    continue
   }
   break;
  };
  $0_1 = (Math_imul($1944($3, 7396), 20) + $1944($3 + 7404 | 0, 0) | 0) - 20 | 0;
  $1_1 = ($1944($0_1, 0) << 4) + $3 | 0;
  $1982($1_1 + 5624 | 0, 0, $1959($0_1 + 12 | 0, 0), i64toi32_i32$HIGH_BITS);
  $1982($1_1 + 5616 | 0, 0, $1959($0_1, 4), i64toi32_i32$HIGH_BITS);
  $1973($3, 7396, $1944($3, 7396) - 1 | 0);
  return $6_1;
 }
 
 function $217() {
  $211();
 }
 
 function $218($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $1_1 = $0_1;
  $0_1 = -1;
  while (1) {
   $3 = $1_1;
   $1_1 = $1_1 + 1 | 0;
   $2_1 = $1937($3, 0);
   if ($2_1) {
    label$4 : {
     if (($2_1 | 0) != 35) {
      break label$4
     }
     if (($1937($1_1, 0) | 0) != 35) {
      break label$4
     }
     $0_1 = ($1937($3, 2) | 0) == 35 ? -1 : $0_1;
    }
    $0_1 = $1944((($2_1 ^ $0_1 & 255) << 2) + 19360 | 0, 0) ^ $0_1 >>> 8;
   }
   if ($2_1) {
    continue
   }
   break;
  };
  $5_1 = $0_1 ^ -1;
  $0_1 = $1944(0, 73568);
  $3 = $1944($0_1 + 7064 | 0, 0);
  $1_1 = $3;
  $2_1 = $1944($0_1, 7056);
  if ($2_1) {
   $0_1 = $2_1;
   while (1) {
    $4_1 = $0_1 >>> 1 | 0;
    $6_1 = ($4_1 << 3) + $1_1 | 0;
    $7_1 = $1944($6_1, 0) >>> 0 < $5_1 >>> 0;
    $1_1 = $7_1 ? $6_1 + 8 | 0 : $1_1;
    $0_1 = $7_1 ? $0_1 + ($4_1 ^ -1) | 0 : $4_1;
    if ($0_1) {
     continue
    }
    break;
   };
  }
  $0_1 = $1_1;
  if (($0_1 | 0) == (($2_1 << 3) + $3 | 0)) {
   return 0
  }
  $1_1 = 0;
  if (($1944($0_1, 0) | 0) == ($5_1 | 0)) {
   $1_1 = $1944($0_1, 4)
  }
  return $1_1;
 }
 
 function $220($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  var $7_1 = Math_fround(0), $8 = 0, $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = 0, $15_1 = Math_fround(0), $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = 0, $19 = Math_fround(0), $20_1 = Math_fround(0), $21_1 = Math_fround(0), $22_1 = Math_fround(0), $23_1 = 0, $24 = Math_fround(0), $25_1 = Math_fround(0), wasm2js_f32$0 = Math_fround(0), wasm2js_f32$1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_f32$2 = Math_fround(0), wasm2js_f32$3 = Math_fround(0), wasm2js_i32$1 = 0;
  $9 = $1963($2_1, 0);
  $15_1 = $1963($4_1, 8);
  $16_1 = $1963($1_1, 0);
  $10_1 = $1963($4_1, 0);
  $8 = $4_1 + 12 | 0;
  $7_1 = $1963($8, 0);
  $11_1 = $1963($2_1, 4);
  $17_1 = $1963($1_1, 4);
  $12_1 = $1963($4_1, 4);
  if (($6_1 | 0) == 1) {
   $13 = $1963($8, 0);
   $18_1 = $1944($5_1, 0);
   $14 = $1944($5_1 + 12 | 0, 0);
   $19 = Math_fround($1963($5_1, 4) - $11_1);
   $20_1 = Math_fround($1963($5_1, 8) - $9);
   $23_1 = $1944($3, 0);
   $2_1 = ($23_1 | 0) != -1 ? -1 : 0;
   while (1) {
    $8 = $1944(($2_1 | 0) != -1 ? ($2_1 << 2) + 20752 | 0 : $3, 0);
    label$3 : {
     if (($8 | 0) == ($23_1 | 0) & ($2_1 | 0) != -1) {
      break label$3
     }
     $1982($0_1, 0, 0, 0);
     label$5 : {
      label$6 : {
       switch ($8 | 0) {
       case 3:
        $1973($0_1, 4, $14);
        $1973($0_1, 0, $18_1);
        break label$5;
       case 1:
        $1986($0_1, 4, $19);
        $1973($0_1, 0, $18_1);
        break label$5;
       case 0:
        $1973($0_1, 4, $14);
        $1986($0_1, 0, $20_1);
        break label$5;
       case 2:
        break label$6;
       default:
        break label$5;
       };
      }
      $1986($0_1, 4, $19);
      $1986($0_1, 0, $20_1);
     }
     $21_1 = $1963($0_1, 0);
     if (!($21_1 >= $10_1)) {
      break label$3
     }
     $22_1 = $1963($0_1, 4);
     if (!($22_1 >= $12_1) | !(Math_fround($9 + $21_1) <= $15_1) | !($13 >= Math_fround($11_1 + $22_1))) {
      break label$3
     }
     $1973($3, 0, $8);
     return;
    }
    $2_1 = $2_1 + 1 | 0;
    if (($2_1 | 0) != 4) {
     continue
    }
    break;
   };
  }
  label$10 : {
   switch ($6_1 | 0) {
   case 0:
   case 2:
    $13 = Math_fround($15_1 - $9);
    $13 = $10_1 > $16_1 ? $10_1 : $13 < $16_1 ? $13 : $16_1;
    $7_1 = Math_fround($7_1 - $11_1);
    $7_1 = $12_1 > $17_1 ? $12_1 : $7_1 < $17_1 ? $7_1 : $17_1;
    $18_1 = $5_1 + 8 | 0;
    $19 = $1963($4_1 + 12 | 0, 0);
    $20_1 = $1963($5_1, 4);
    $21_1 = $1963($4_1, 0);
    $22_1 = $1963($5_1, 8);
    $24 = $1963($4_1, 8);
    $25_1 = $1963($5_1, 0);
    $2_1 = ($1944($3, 0) | 0) != -1 ? -1 : 0;
    while (1) {
     $14 = ($2_1 | 0) == -1;
     $8 = $1944($14 ? $3 : ($2_1 << 2) + 20768 | 0, 0);
     label$13 : {
      if (!$14) {
       if (($1944($3, 0) | 0) == ($8 | 0)) {
        break label$13
       }
      }
      if ($8 >>> 0 < 2 & Math_fround(($8 ? $24 : $25_1) - (($8 | 0) == 1 ? $22_1 : $21_1)) < $9) {
       break label$13
      }
      if (($8 & -2) == 2 & $11_1 > Math_fround((($8 | 0) == 2 ? $20_1 : $19) - $1963(($8 | 0) == 3 ? $18_1 : $4_1, 4))) {
       break label$13
      }
      $1982($0_1, 0, 0, 0);
      $9 = (wasm2js_f32$0 = (wasm2js_f32$2 = $1963($5_1, 8), wasm2js_f32$3 = $13, wasm2js_i32$1 = ($8 | 0) == 1, wasm2js_i32$1 ? wasm2js_f32$2 : wasm2js_f32$3), wasm2js_f32$1 = Math_fround($1963($5_1, 0) - $9), wasm2js_i32$0 = $8, wasm2js_i32$0 ? wasm2js_f32$0 : wasm2js_f32$1);
      $1986($0_1, 0, $9);
      label$17 : {
       if (($8 | 0) == 2) {
        $7_1 = Math_fround($1963($5_1, 4) - $11_1);
        break label$17;
       }
       if (($8 | 0) != 3) {
        break label$17
       }
       $7_1 = $1963($5_1 + 12 | 0, 0);
      }
      $1986($0_1, 4, $7_1 >= $12_1 ? $7_1 : $12_1);
      $1986($0_1, 0, $9 >= $10_1 ? $9 : $10_1);
      $1973($3, 0, $8);
      return;
     }
     $2_1 = $2_1 + 1 | 0;
     if (($2_1 | 0) != 4) {
      continue
     }
     break;
    };
    break;
   default:
    break label$10;
   };
  }
  $1973($3, 0, -1);
  if (($6_1 | 0) == 2) {
   $1986($0_1, 4, Math_fround($17_1 + Math_fround(2.0)));
   $1986($0_1, 0, Math_fround($16_1 + Math_fround(2.0)));
   return;
  }
  $1982($0_1, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
  $7_1 = Math_fround($9 + $1963($0_1, 0));
  $7_1 = Math_fround(($7_1 < $15_1 ? $7_1 : $15_1) - $9);
  $1986($0_1, 0, $7_1 >= $10_1 ? $7_1 : $10_1);
  $7_1 = Math_fround($11_1 + $1963($0_1, 4));
  $9 = $1963($4_1 + 12 | 0, 0);
  $7_1 = Math_fround(($7_1 < $9 ? $7_1 : $9) - $11_1);
  $1986($0_1, 4, $7_1 >= $12_1 ? $7_1 : $12_1);
 }
 
 function $221() {
  return $1944($1944($1944(0, 73568) + 7504 | 0, 0), 0);
 }
 
 function $222($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = $1944(0, 73568);
  label$1 : {
   if ($0_1) {
    break label$1
   }
   $0_1 = $1944($1_1 + 164 | 0, 0);
   if ($0_1) {
    break label$1
   }
   $0_1 = $1944($1944($1944($1_1 + 152 | 0, 0) + 60 | 0, 0), 0);
  }
  $1973($1_1, 6464, $0_1);
  $5_1 = Math_fround(Math_fround($1963($1_1 + 156 | 0, 0) * $1963($0_1, 16)) * $1963($0_1, 68));
  $5_1 = $5_1 <= Math_fround(1.0) ? Math_fround(1.0) : $5_1;
  $1986($1_1, 6472, $5_1);
  $2_1 = $1944($1_1, 7080);
  label$2 : {
   if (!$2_1) {
    $5_1 = Math_fround(0.0);
    break label$2;
   }
   $5_1 = Math_fround($5_1 * $1963($2_1, 572));
   $2_1 = $1944($2_1, 728);
   if (!$2_1) {
    break label$2
   }
   $5_1 = Math_fround($5_1 * $1963($2_1, 572));
  }
  $1986($1_1, 6468, $5_1);
  $2_1 = $1944($0_1, 48);
  $3 = $1959($2_1, 44);
  $4_1 = i64toi32_i32$HIGH_BITS;
  $1973($1_1 + 6972 | 0, 0, $2_1 + 88 | 0);
  $1982($1_1, 6476, $3, $4_1);
  $1986($1_1 + 6488 | 0, 0, $5_1);
  $1973($1_1 + 6484 | 0, 0, $0_1);
  $3 = $1944($1_1, 7420);
  $2_1 = $1944($1_1 + 7424 | 0, 0);
  label$5 : {
   if (($3 | 0) != ($2_1 | 0)) {
    break label$5
   }
   $4_1 = $3 + 1 | 0;
   $6_1 = $2_1;
   if ($2_1) {
    $3 = $2_1 + (($2_1 | 0) / 2 | 0) | 0
   } else {
    $3 = 8
   }
   $2_1 = ($3 | 0) > ($4_1 | 0) ? $3 : $4_1;
   if (($6_1 | 0) >= ($2_1 | 0)) {
    break label$5
   }
   $3 = $2_1 << 2;
   if ($1_1) {
    $4_1 = $1_1 + 876 | 0;
    $1973($4_1, 0, $1944($4_1, 0) + 1 | 0);
   }
   $3 = (((wasm2js_i32$1 = $3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $4_1 = $1944($1_1 + 7428 | 0, 0);
   if ($4_1) {
    $1602($3, $4_1, $1944($1_1, 7420) << 2);
    $4_1 = $1944($1_1, 7428);
    label$10 : {
     if (!$4_1) {
      break label$10
     }
     $6_1 = $1944(0, 73568);
     if (!$6_1) {
      break label$10
     }
     $6_1 = $6_1 + 876 | 0;
     $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($1_1, 7424, $2_1);
   $1973($1_1, 7428, $3);
  }
  $1973($1944($1_1 + 7428 | 0, 0) + ($1944($1_1, 7420) << 2) | 0, 0, $0_1);
  $1973($1_1, 7420, $1944($1_1, 7420) + 1 | 0);
  $381($1944($1944($1_1, 7080), 580), $1944($1944($0_1, 48), 4));
 }
 
 function $223() {
  var $0_1 = 0, $1_1 = 0, $2_1 = Math_fround(0), $3 = 0, $4_1 = 0, $5_1 = 0;
  $0_1 = $1944(0, 73568);
  $382($1944($1944($0_1, 7080), 580));
  $3 = $1944($0_1, 7420);
  $1_1 = $3 - 1 | 0;
  $1973($0_1, 7420, $1_1);
  label$1 : {
   label$2 : {
    if (!$1_1) {
     $0_1 = $1944(0, 73568);
     $3 = $1944($0_1 + 164 | 0, 0);
     if ($3) {
      break label$1
     }
     $0_1 = $1944($1944($0_1 + 152 | 0, 0) + 60 | 0, 0);
     break label$2;
    }
    $0_1 = ($1944($0_1 + 7428 | 0, 0) + ($3 << 2) | 0) - 8 | 0;
   }
   $3 = $1944($0_1, 0);
  }
  $0_1 = $1944(0, 73568);
  $1973($0_1, 6464, $3);
  $2_1 = Math_fround(Math_fround($1963($0_1 + 156 | 0, 0) * $1963($3, 16)) * $1963($3, 68));
  $2_1 = $2_1 <= Math_fround(1.0) ? Math_fround(1.0) : $2_1;
  $1986($0_1, 6472, $2_1);
  $1_1 = $1944($0_1, 7080);
  label$4 : {
   if (!$1_1) {
    $2_1 = Math_fround(0.0);
    break label$4;
   }
   $2_1 = Math_fround($2_1 * $1963($1_1, 572));
   $1_1 = $1944($1_1, 728);
   if (!$1_1) {
    break label$4
   }
   $2_1 = Math_fround($2_1 * $1963($1_1, 572));
  }
  $1986($0_1, 6468, $2_1);
  $1_1 = $1944($3, 48);
  $4_1 = $1959($1_1, 44);
  $5_1 = i64toi32_i32$HIGH_BITS;
  $1973($0_1 + 6972 | 0, 0, $1_1 + 88 | 0);
  $1982($0_1, 6476, $4_1, $5_1);
  $1986($0_1 + 6488 | 0, 0, $2_1);
  $1973($0_1 + 6484 | 0, 0, $3);
 }
 
 function $224($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = $1944(0, 73568);
  $5_1 = $1944($2_1, 7216);
  $5_1 = $1_1 ? $5_1 | $0_1 : $5_1 & ($0_1 ^ -1);
  $1973($2_1, 7216, $5_1);
  $1_1 = $1944($2_1, 7444);
  $0_1 = $1944($2_1 + 7448 | 0, 0);
  label$1 : {
   if (($1_1 | 0) != ($0_1 | 0)) {
    break label$1
   }
   $3 = $1_1 + 1 | 0;
   $4_1 = $0_1;
   if ($0_1) {
    $1_1 = $0_1 + (($0_1 | 0) / 2 | 0) | 0
   } else {
    $1_1 = 8
   }
   $0_1 = ($1_1 | 0) > ($3 | 0) ? $1_1 : $3;
   if (($4_1 | 0) >= ($0_1 | 0)) {
    break label$1
   }
   $1_1 = $0_1 << 2;
   if ($2_1) {
    $3 = $2_1 + 876 | 0;
    $1973($3, 0, $1944($3, 0) + 1 | 0);
   }
   $1_1 = (((wasm2js_i32$1 = $1_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $3 = $1944($2_1, 7452);
   if ($3) {
    $1602($1_1, $3, $1944($2_1, 7444) << 2);
    $3 = $1944($2_1, 7452);
    label$6 : {
     if (!$3) {
      break label$6
     }
     $4_1 = $1944(0, 73568);
     if (!$4_1) {
      break label$6
     }
     $4_1 = $4_1 + 876 | 0;
     $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $3, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($2_1, 7448, $0_1);
   $1973($2_1, 7452, $1_1);
  }
  $1973($1944($2_1, 7452) + ($1944($2_1, 7444) << 2) | 0, 0, $5_1);
  $1973($2_1, 7444, $1944($2_1, 7444) + 1 | 0);
 }
 
 function $225() {
  var $0_1 = 0, $1_1 = 0;
  $0_1 = $1944(0, 73568);
  $1_1 = $1944($0_1, 7444);
  $1973($0_1, 7444, $1_1 - 1 | 0);
  $1973($0_1, 7216, $1944(($1944($0_1 + 7452 | 0, 0) + ($1_1 << 2) | 0) - 8 | 0, 0));
 }
 
 function $226($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = $1944(0, 73568);
  $2_1 = $1944($1_1, 7216);
  $3 = $2_1 & 4;
  if (!($3 | !$0_1)) {
   $5_1 = $1963($1_1, 5416);
   $1986($1_1, 12072, $5_1);
   $1986($1_1, 5416, Math_fround($5_1 * $1963($1_1 + 5420 | 0, 0)));
  }
  if ($3 | $0_1) {
   $1973($1_1, 7216, $2_1 | 4)
  }
  $2_1 = $1944($1_1, 7444);
  $0_1 = $1944($1_1 + 7448 | 0, 0);
  label$4 : {
   if (($2_1 | 0) != ($0_1 | 0)) {
    break label$4
   }
   $3 = $2_1 + 1 | 0;
   $4_1 = $0_1;
   if ($0_1) {
    $2_1 = $0_1 + (($0_1 | 0) / 2 | 0) | 0
   } else {
    $2_1 = 8
   }
   $0_1 = ($2_1 | 0) > ($3 | 0) ? $2_1 : $3;
   if (($4_1 | 0) >= ($0_1 | 0)) {
    break label$4
   }
   $2_1 = $0_1 << 2;
   if ($1_1) {
    $3 = $1_1 + 876 | 0;
    $1973($3, 0, $1944($3, 0) + 1 | 0);
   }
   $2_1 = (((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $3 = $1944($1_1 + 7452 | 0, 0);
   if ($3) {
    $1602($2_1, $3, $1944($1_1, 7444) << 2);
    $3 = $1944($1_1, 7452);
    label$9 : {
     if (!$3) {
      break label$9
     }
     $4_1 = $1944(0, 73568);
     if (!$4_1) {
      break label$9
     }
     $4_1 = $4_1 + 876 | 0;
     $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $3, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($1_1, 7448, $0_1);
   $1973($1_1, 7452, $2_1);
  }
  $1973($1944($1_1 + 7452 | 0, 0) + ($1944($1_1, 7444) << 2) | 0, 0, $1944($1_1, 7216));
  $1973($1_1, 7444, $1944($1_1, 7444) + 1 | 0);
  $1970($1_1, 12076, $1941($1_1, 12076) + 1 | 0);
 }
 
 function $227() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0;
  $0_1 = $1944(0, 73568);
  $1970($0_1, 12076, $1941($0_1, 12076) - 1 | 0);
  $1_1 = $1944($0_1, 7444);
  $1973($0_1, 7444, $1_1 - 1 | 0);
  $2_1 = $1944($0_1, 7216);
  $1_1 = $1944(($1944($0_1 + 7452 | 0, 0) + ($1_1 << 2) | 0) - 8 | 0, 0);
  $1973($0_1, 7216, $1_1);
  if (!(!($2_1 & 4) | $1_1 & 4)) {
   $1986($0_1, 5416, $1963($0_1, 12072))
  }
 }
 
 function $228($0_1) {
  $0_1 = $0_1 | 0;
  $224(1, $0_1 ^ 1);
 }
 
 function $230($0_1) {
  $0_1 = $0_1 | 0;
  $224(2, $0_1);
 }
 
 function $232($0_1) {
  $0_1 = Math_fround($0_1);
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = $1944(0, 73568);
  $1_1 = $1944($2_1, 7080);
  $1968($1_1, 140, 1);
  $4_1 = $1944($1_1 + 404 | 0, 0);
  $3 = $1944($1_1 + 408 | 0, 0);
  label$1 : {
   if (($4_1 | 0) != ($3 | 0)) {
    break label$1
   }
   $5_1 = $4_1 + 1 | 0;
   $6_1 = $3;
   if ($3) {
    $4_1 = $3 + (($3 | 0) / 2 | 0) | 0
   } else {
    $4_1 = 8
   }
   $3 = ($4_1 | 0) > ($5_1 | 0) ? $4_1 : $5_1;
   if (($6_1 | 0) >= ($3 | 0)) {
    break label$1
   }
   $4_1 = $3 << 2;
   if ($2_1) {
    $2_1 = $2_1 + 876 | 0;
    $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
   }
   $4_1 = (((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $2_1 = $1944($1_1 + 412 | 0, 0);
   if ($2_1) {
    $1602($4_1, $2_1, $1944($1_1, 404) << 2);
    $2_1 = $1944($1_1, 412);
    label$6 : {
     if (!$2_1) {
      break label$6
     }
     $5_1 = $1944(0, 73568);
     if (!$5_1) {
      break label$6
     }
     $5_1 = $5_1 + 876 | 0;
     $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($1_1, 408, $3);
   $1973($1_1, 412, $4_1);
  }
  $3 = $1_1 + 388 | 0;
  $1973($1944($1_1 + 412 | 0, 0) + ($1944($1_1, 404) << 2) | 0, 0, $1944($3, 0));
  $1986($3, 0, $0_1);
  $1973($1_1, 404, $1944($1_1, 404) + 1 | 0);
 }
 
 function $233() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = Math_fround(0);
  $0_1 = $1944($1944(0, 73568), 7080);
  $1968($0_1, 140, 1);
  $3 = $1944($0_1 + 412 | 0, 0);
  $1_1 = $0_1 + 404 | 0;
  $2_1 = $1944($1_1, 0) - 1 | 0;
  $4_1 = $1963($3 + ($2_1 << 2) | 0, 0);
  $1973($1_1, 0, $2_1);
  $1986($0_1 + 388 | 0, 0, $4_1);
 }
 
 function $234($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $6_1 = $1944(0, 73568);
  $4_1 = $1944($6_1, 7084);
  if (!$4_1) {
   return 0
  }
  label$2 : {
   if ($0_1 & 4) {
    break label$2
   }
   $5_1 = $1944($6_1, 7080);
   $7_1 = $0_1 & 8;
   if (!(!($0_1 & 2) | !$5_1)) {
    $1_1 = $5_1;
    while (1) {
     $3 = $1_1;
     $2_1 = $1944($1_1, 736);
     if (!$7_1) {
      $2_1 = $1944($2_1, 740)
     }
     $1_1 = $2_1;
     $5_1 = $1_1;
     if (($1_1 | 0) != ($3 | 0)) {
      continue
     }
     break;
    };
   }
   label$9 : {
    if ($0_1 & 1) {
     $1_1 = $4_1;
     while (1) {
      $3 = $1_1;
      $2_1 = $1944($1_1, 736);
      if (!$7_1) {
       $2_1 = $1944($2_1, 740)
      }
      $1_1 = $2_1;
      if (($3 | 0) != ($1_1 | 0)) {
       continue
      }
      break;
     };
     if (($2_1 | 0) == ($5_1 | 0)) {
      break label$2
     }
     $3 = $4_1;
     while (1) {
      $1_1 = ($3 | 0) == ($5_1 | 0);
      if ($1_1 | ($2_1 | 0) == ($3 | 0)) {
       break label$9
      }
      $1_1 = $1944($3, 728);
      $3 = $1_1;
      if ($1_1) {
       continue
      }
      break;
     };
     return 0;
    }
    $1_1 = ($5_1 | 0) == ($4_1 | 0);
   }
   if ($1_1) {
    break label$2
   }
   return 0;
  }
  label$16 : {
   $1_1 = $1944($6_1, 7508);
   if (!$1_1) {
    break label$16
   }
   $1_1 = $1944($1_1, 736);
   if (!$1_1) {
    break label$16
   }
   if (!$1937($1_1, 139)) {
    break label$16
   }
   if (($1944($4_1, 736) | 0) == ($1_1 | 0)) {
    break label$16
   }
   $1_1 = $1944($1_1, 8);
   if ($1_1 & 134217728) {
    return 0
   }
   if (!($1_1 & 67108864) | $0_1 & 32) {
    break label$16
   }
   return 0;
  }
  label$18 : {
   label$19 : {
    if ($0_1 & 128) {
     break label$19
    }
    $0_1 = $1944($6_1, 7136);
    if (!$0_1) {
     break label$19
    }
    if ($1937($6_1, 7149)) {
     break label$19
    }
    $1_1 = 0;
    if (($1944($4_1, 80) | 0) != ($0_1 | 0)) {
     break label$18
    }
   }
   $1_1 = 1;
  }
  return $1_1 | 0;
 }
 
 function $235($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $3 = $1944(0, 73568);
  $4_1 = $1944($3, 7508);
  if (!$4_1) {
   return 0
  }
  $1_1 = 1;
  label$2 : {
   if ($0_1 & 4) {
    break label$2
   }
   $1_1 = $1944($3, 7080);
   $5_1 = $0_1 & 8;
   label$3 : {
    if (!($0_1 & 2)) {
     $3 = $1_1;
     break label$3;
    }
    if (!$1_1) {
     $3 = $1_1;
     break label$3;
    }
    while (1) {
     $6_1 = $1_1;
     $2_1 = $1944($1_1, 736);
     if (!$5_1) {
      $2_1 = $1944($2_1, 740)
     }
     $1_1 = $2_1;
     $3 = $1_1;
     if (($1_1 | 0) != ($6_1 | 0)) {
      continue
     }
     break;
    };
   }
   if ($0_1 & 1) {
    $1_1 = $4_1;
    while (1) {
     $0_1 = $1_1;
     $2_1 = $1944($1_1, 736);
     if (!$5_1) {
      $2_1 = $1944($2_1, 740)
     }
     $1_1 = $2_1;
     if (($0_1 | 0) != ($1_1 | 0)) {
      continue
     }
     break;
    };
    if (($2_1 | 0) == ($3 | 0)) {
     return 1
    }
    while (1) {
     $1_1 = ($3 | 0) == ($4_1 | 0);
     if ($1_1) {
      return $1_1 | 0
     }
     if (($2_1 | 0) == ($4_1 | 0)) {
      break label$2
     }
     $0_1 = $1944($4_1, 728);
     $4_1 = $0_1;
     if ($0_1) {
      continue
     }
     break;
    };
    return 0;
   }
   $1_1 = ($3 | 0) == ($4_1 | 0);
  }
  return $1_1 | 0;
 }
 
 function $236() {
  return Math_fround($1963($1944($1944(0, 73568), 7080), 20));
 }
 
 function $237() {
  return Math_fround($1963($1944($1944(0, 73568), 7080) + 24 | 0, 0));
 }
 
 function $245() {
  return $1937($1944($1944(0, 73568), 7080), 141) | 0;
 }
 
 function $246() {
  return $1937($1944($1944(0, 73568), 7080), 144) | 0;
 }
 
 function $250($0_1, $1_1, $2_1) {
  var $3 = 0;
  $3 = $1944(0, 73568);
  $1973($3, 7300, $1944($3, 7300) | 1);
  $1982($3 + 7316 | 0, 0, $1959($0_1, 0), i64toi32_i32$HIGH_BITS);
  $0_1 = $1959($2_1, 0);
  $2_1 = i64toi32_i32$HIGH_BITS;
  $1973($3 + 7304 | 0, 0, $1_1 >>> 0 <= 1 ? 1 : $1_1);
  $1982($3 + 7324 | 0, 0, $0_1, $2_1);
 }
 
 function $251($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0;
  $3 = $1944(0, 73568);
  $1973($3, 7300, $1944($3, 7300) | 16);
  $0_1 = $1959($0_1, 0);
  $4_1 = i64toi32_i32$HIGH_BITS;
  $1_1 = $1959($1_1, 0);
  $5_1 = i64toi32_i32$HIGH_BITS;
  $1973($3 + 7380 | 0, 0, 0);
  $1973($3 + 7376 | 0, 0, $2_1);
  $1982($3 + 7368 | 0, 0, $1_1, $5_1);
  $1982($3 + 7360 | 0, 0, $0_1, $4_1);
 }
 
 function $252($0_1) {
  var $1_1 = 0, $2_1 = Math_fround(0), $3 = Math_fround(0), $4_1 = 0;
  $1_1 = $1944(0, 73568);
  $1973($1_1, 7300, $1944($1_1, 7300) | 4);
  $2_1 = $1963($0_1, 0);
  $4_1 = $1_1 + 7344 | 0;
  $3 = $1963($0_1, 4);
  label$1 : {
   if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
    $0_1 = ~~$3;
    break label$1;
   }
   $0_1 = -2147483648;
  }
  $1986($4_1, 0, Math_fround($0_1 | 0));
  $1_1 = $1_1 + 7340 | 0;
  if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
   $0_1 = ~~$2_1
  } else {
   $0_1 = -2147483648
  }
  $1986($1_1, 0, Math_fround($0_1 | 0));
 }
 
 function $254($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = $1944(0, 73568);
  $1968($2_1 + 7356 | 0, 0, $0_1);
  $1973($2_1 + 7312 | 0, 0, $1_1 >>> 0 <= 1 ? 1 : $1_1);
  $1973($2_1, 7300, $1944($2_1, 7300) | 8);
 }
 
 function $255() {
  var $0_1 = 0;
  $0_1 = $1944(0, 73568);
  $1973($0_1, 7300, $1944($0_1, 7300) | 32);
 }
 
 function $256($0_1) {
  $0_1 = Math_fround($0_1);
  var $1_1 = 0;
  $1_1 = $1944(0, 73568);
  $1986($1_1 + 7384 | 0, 0, $0_1);
  $1973($1_1, 7300, $1944($1_1, 7300) | 64);
 }
 
 function $259() {
  return Math_fround($1963($1944(0, 73568), 6468));
 }
 
 function $260($0_1) {
  $1982($0_1, 0, $1959($1944(0, 73568), 6476), i64toi32_i32$HIGH_BITS);
 }
 
 function $261($0_1) {
  $0_1 = Math_fround($0_1);
  var $1_1 = 0, $2_1 = 0;
  $2_1 = $1944(0, 73568);
  $1_1 = $1944($2_1, 7080);
  $1986($1_1, 572, $0_1);
  $1968($1_1, 140, 1);
  $0_1 = Math_fround($1963($2_1, 6472) * $0_1);
  $1_1 = $1944($1_1, 728);
  if ($1_1) {
   $0_1 = Math_fround($0_1 * $1963($1_1, 572))
  }
  $1986($2_1, 6468, $0_1);
  $1986($2_1 + 6488 | 0, 0, $0_1);
 }
 
 function $262($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = 0, $8 = Math_fround(0);
  $1_1 = $1944(0, 73568);
  $2_1 = $1944($1_1, 7080);
  $1973($1_1, 7508, $2_1);
  $7_1 = $1937($2_1, 144);
  $1973($1_1 + 7740 | 0, 0, 0);
  $1973($1_1 + 7752 | 0, 0, 2139095039);
  $1973($1_1 + 7720 | 0, 0, 0);
  $1982($1_1, 7712, 0, 0);
  $1982($1_1 + 7700 | 0, 0, 2139095039, 2139095039);
  $1973($1_1 + 7708 | 0, 0, 2139095039);
  $3 = $1_1 + 7672 | 0;
  $1983($3, 0, 0, 0);
  $1983($1_1, 7664, 0, 0);
  $1973($1_1, 7608, $1944($1_1 + 892 | 0, 0));
  $4_1 = $1_1 + 7696 | 0;
  $1973($4_1, 0, 0);
  $1969($1_1, 7597, 1);
  $1973($1_1, 7600, 1552);
  $1968($1_1, 7596, 1);
  $1973($1_1, 7620, ($0_1 | 0) < 0 ? 2 : 3);
  $1982($1_1, 7612, -1, -1);
  $1973($1_1, 7604, $7_1 ? 33 : 3);
  $1973($1_1, 7756, 0);
  $1982($1_1 + 7744 | 0, 0, 2139095039, 2139095039);
  $1982($1_1 + 7760 | 0, 0, 0, 0);
  $1982($1_1 + 7792 | 0, 0, 2139095039, 2139095039);
  $1982($1_1 + 7784 | 0, 0, 0, 2139095039);
  $1968($1_1, 7572, 1);
  if (($0_1 | 0) == -1) {
   $1973($1_1, 7668, $2_1);
   $1968($1_1, 7597, 0);
   $1973($3, 0, $1944($1_1, 7240));
   $1973($1_1 + 7676 | 0, 0, $1944($2_1 + 300 | 0, 0));
   $1973($4_1, 0, $1944($1_1 + 7244 | 0, 0));
   $5_1 = $1963($2_1 + 228 | 0, 0);
   $8 = $1963($1_1 + 7268 | 0, 0);
   $6_1 = $1963($2_1 + 224 | 0, 0);
   $1986($1_1 + 7680 | 0, 0, Math_fround($8 - $6_1));
   $1986($1_1 + 7684 | 0, 0, Math_fround($1963($1_1 + 7272 | 0, 0) - $5_1));
   $1986($1_1 + 7688 | 0, 0, Math_fround($1963($1_1 + 7276 | 0, 0) - $6_1));
   $1986($1_1 + 7692 | 0, 0, Math_fround($1963($1_1 + 7280 | 0, 0) - $5_1));
   $1968($1_1, 7572, $1937($1_1, 7573));
   return;
  }
  $1973($1_1, 7660, 1);
  $1973($1_1, 7664, $0_1 + 1 | 0);
 }
 
 function $263() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = 0, $7_1 = Math_fround(0);
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $0_1 = $1944(0, 73568);
  $1_1 = $1944($0_1, 7080);
  label$1 : {
   if (!$1937($1_1, 144)) {
    break label$1
   }
   if (($1944($0_1, 7508) | 0) != ($1944($1_1, 748) | 0)) {
    break label$1
   }
   if (!$1937($0_1, 7573)) {
    if (!$1944($0_1, 7576)) {
     break label$1
    }
   }
   if (($1944($0_1, 7564) | 0) != ($1944($1_1 + 292 | 0, 0) | 0)) {
    break label$1
   }
   $1968($0_1, 7573, 0);
   $1973($0_1, 7576, $1944($0_1, 7240));
   $4_1 = $1963($1_1 + 224 | 0, 0);
   $5_1 = $1963($1_1 + 228 | 0, 0);
   $1968($0_1, 7572, $1937($0_1, 7597));
   $6_1 = $0_1 + 7264 | 0;
   $1986($0_1 + 7592 | 0, 0, Math_fround($1963($6_1, 0) - $5_1));
   $1986($0_1 + 7588 | 0, 0, Math_fround($1963($0_1 + 7260 | 0, 0) - $4_1));
   $7_1 = $1963($0_1 + 7256 | 0, 0);
   $1986($0_1 + 7584 | 0, 0, Math_fround($7_1 - $5_1));
   $3 = $0_1 + 7252 | 0;
   $1986($0_1, 7580, Math_fround($1963($3, 0) - $4_1));
   label$3 : {
    if (!($1963($1_1 + 508 | 0, 0) > $7_1)) {
     break label$3
    }
    if (!($1963($6_1, 0) > $1963($1_1 + 500 | 0, 0))) {
     break label$3
    }
    if (!($1963($3, 0) < $1963($1_1, 504))) {
     break label$3
    }
    if ($1963($0_1, 7260) > $1963($1_1, 496)) {
     break label$1
    }
   }
   $264($2_1 + 8 | 0, $1_1, $3, 0);
  }
  global$0 = $2_1 + 16 | 0;
 }
 
 function $264($0_1, $1_1, $2_1, $3) {
  var $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = Math_fround(0), $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = Math_fround(0), $19 = Math_fround(0), $20_1 = Math_fround(0), $21_1 = Math_fround(0), $22_1 = Math_fround(0), $23_1 = Math_fround(0), $24 = Math_fround(0);
  $11_1 = global$0 - 32 | 0;
  global$0 = $11_1;
  $22_1 = $1963($1_1, 432);
  $5_1 = $1963($1_1 + 444 | 0, 0);
  $4_1 = $1963($1_1 + 440 | 0, 0);
  $23_1 = $1963($1_1 + 436 | 0, 0);
  $12_1 = $3;
  if (!($12_1 & 21)) {
   $12_1 = $1937($1_1, 136) | $3
  }
  $18_1 = Math_fround($22_1 + Math_fround(-1.0));
  $19 = Math_fround($5_1 + Math_fround(1.0));
  $20_1 = Math_fround($4_1 + Math_fround(1.0));
  $21_1 = Math_fround($23_1 + Math_fround(-1.0));
  $10_1 = $1944(0, 73568);
  if (!($12_1 & 42)) {
   $12_1 = ($1937($1_1, 144) ? 32 : 2) | $12_1
  }
  $5_1 = $1963($2_1, 0);
  $14 = $1963($2_1, 8);
  $9 = $5_1 >= $18_1 & $20_1 >= $14;
  $15_1 = $1963($2_1 + 12 | 0, 0);
  $7_1 = $1963($2_1, 4);
  $13 = Math_fround($15_1 - $7_1);
  $16_1 = $1963($10_1 + 5496 | 0, 0);
  $8 = Math_fround($16_1 + $16_1);
  $17_1 = $1963($10_1 + 5492 | 0, 0);
  $24 = Math_fround(Math_fround($17_1 + $17_1) + Math_fround($14 - $5_1));
  $6_1 = $15_1 <= $19 & $7_1 >= $21_1;
  $4_1 = Math_fround($20_1 - $18_1);
  label$4 : {
   label$5 : {
    if (!($9 | !($12_1 & 1))) {
     if (!(!($5_1 < $18_1) & $4_1 >= $24)) {
      $5_1 = Math_fround($5_1 - $17_1);
      $4_1 = Math_fround(0.0);
      break label$5;
     }
     if (!($14 >= $20_1)) {
      break label$4
     }
     $5_1 = Math_fround($14 + $17_1);
     $4_1 = Math_fround(1.0);
     break label$5;
    }
    if (!($9 | !($12_1 & 4) ? $12_1 & 16 : 1)) {
     break label$4
    }
    if ($4_1 >= $24) {
     $4_1 = Math_fround(Math_fround(Math_fround($5_1 + $14) - Math_fround($1963($1_1 + 440 | 0, 0) - $22_1)) * Math_fround(.5));
     label$12 : {
      if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
       $9 = ~~$4_1;
       break label$12;
      }
      $9 = -2147483648;
     }
     $5_1 = Math_fround($9 | 0);
    }
    $4_1 = Math_fround(0.0);
   }
   $1973($1_1, 120, 0);
   $1986($1_1, 112, $4_1);
   $4_1 = Math_fround($1963($1_1, 88) + Math_fround($5_1 - $1963($1_1, 12)));
   label$14 : {
    if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
     $9 = ~~$4_1;
     break label$14;
    }
    $9 = -2147483648;
   }
   $1986($1_1, 104, Math_fround($9 | 0));
  }
  $5_1 = Math_fround($8 + $13);
  $4_1 = Math_fround($19 - $21_1);
  label$16 : {
   label$17 : {
    if (!($6_1 | !($12_1 & 2))) {
     if (!(!($7_1 < $21_1) & $4_1 >= $5_1)) {
      $8 = Math_fround($7_1 - $16_1);
      $7_1 = $1963($1_1 + 16 | 0, 0);
      $4_1 = Math_fround(0.0);
      $9 = $1944($1_1, 8);
      if (!($9 & 1)) {
       $4_1 = Math_fround($1963($10_1, 6472) * $1963($1_1, 572));
       $6_1 = $1944($1_1, 728);
       if ($6_1) {
        $4_1 = Math_fround($4_1 * $1963($6_1, 572))
       }
       $5_1 = $1963($10_1 + 5480 | 0, 0);
       $4_1 = Math_fround(Math_fround($5_1 + $5_1) + $4_1);
      }
      $5_1 = $4_1;
      $4_1 = Math_fround(0.0);
      $13 = Math_fround($8 - $7_1);
      if ($9 & 1024) {
       $4_1 = Math_fround($1963($10_1, 6472) * $1963($1_1, 572));
       $8 = $1963($1_1 + 312 | 0, 0);
       $6_1 = $1944($1_1, 728);
       if ($6_1) {
        $4_1 = Math_fround($4_1 * $1963($6_1, 572))
       }
       $7_1 = $1963($10_1 + 5480 | 0, 0);
       $4_1 = Math_fround(Math_fround($7_1 + $7_1) + Math_fround($8 + $4_1));
      }
      $4_1 = Math_fround($13 - Math_fround($5_1 + $4_1));
      $5_1 = Math_fround(0.0);
      break label$17;
     }
     if (!($15_1 >= $19)) {
      break label$16
     }
     $8 = Math_fround($15_1 + $16_1);
     $7_1 = $1963($1_1 + 16 | 0, 0);
     $4_1 = Math_fround(0.0);
     $9 = $1944($1_1, 8);
     if (!($9 & 1)) {
      $4_1 = Math_fround($1963($10_1, 6472) * $1963($1_1, 572));
      $6_1 = $1944($1_1, 728);
      if ($6_1) {
       $4_1 = Math_fround($4_1 * $1963($6_1, 572))
      }
      $5_1 = $1963($10_1 + 5480 | 0, 0);
      $4_1 = Math_fround(Math_fround($5_1 + $5_1) + $4_1);
     }
     $5_1 = $4_1;
     $4_1 = Math_fround(0.0);
     $13 = Math_fround($8 - $7_1);
     if ($9 & 1024) {
      $4_1 = Math_fround($1963($10_1, 6472) * $1963($1_1, 572));
      $8 = $1963($1_1 + 312 | 0, 0);
      $6_1 = $1944($1_1, 728);
      if ($6_1) {
       $4_1 = Math_fround($4_1 * $1963($6_1, 572))
      }
      $7_1 = $1963($10_1 + 5480 | 0, 0);
      $4_1 = Math_fround(Math_fround($7_1 + $7_1) + Math_fround($8 + $4_1));
     }
     $4_1 = Math_fround($13 - Math_fround($5_1 + $4_1));
     $5_1 = Math_fround(1.0);
     break label$17;
    }
    if (!($6_1 | !($12_1 & 8) ? $12_1 & 32 : 1)) {
     break label$16
    }
    if ($4_1 >= $5_1) {
     $4_1 = Math_fround(Math_fround(Math_fround($7_1 + $15_1) - Math_fround($1963($1_1 + 444 | 0, 0) - $23_1)) * Math_fround(.5));
     label$36 : {
      if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
       $6_1 = ~~$4_1;
       break label$36;
      }
      $6_1 = -2147483648;
     }
     $7_1 = Math_fround($6_1 | 0);
    }
    $8 = $1963($1_1 + 16 | 0, 0);
    $4_1 = Math_fround(0.0);
    $9 = $1944($1_1, 8);
    if (!($9 & 1)) {
     $4_1 = Math_fround($1963($10_1, 6472) * $1963($1_1, 572));
     $6_1 = $1944($1_1, 728);
     if ($6_1) {
      $4_1 = Math_fround($4_1 * $1963($6_1, 572))
     }
     $5_1 = $1963($10_1 + 5480 | 0, 0);
     $4_1 = Math_fround(Math_fround($5_1 + $5_1) + $4_1);
    }
    $5_1 = $4_1;
    $4_1 = Math_fround(0.0);
    $13 = Math_fround($7_1 - $8);
    if ($9 & 1024) {
     $4_1 = Math_fround($1963($10_1, 6472) * $1963($1_1, 572));
     $8 = $1963($1_1 + 312 | 0, 0);
     $6_1 = $1944($1_1, 728);
     if ($6_1) {
      $4_1 = Math_fround($4_1 * $1963($6_1, 572))
     }
     $7_1 = $1963($10_1 + 5480 | 0, 0);
     $4_1 = Math_fround(Math_fround($7_1 + $7_1) + Math_fround($8 + $4_1));
    }
    $4_1 = Math_fround($13 - Math_fround($5_1 + $4_1));
    $5_1 = Math_fround(0.0);
   }
   $1973($1_1 + 124 | 0, 0, 0);
   $1986($1_1 + 116 | 0, 0, $5_1);
   $10_1 = $1_1 + 108 | 0;
   $4_1 = Math_fround($1963($1_1 + 92 | 0, 0) + $4_1);
   label$44 : {
    if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
     $6_1 = ~~$4_1;
     break label$44;
    }
    $6_1 = -2147483648;
   }
   $1986($10_1, 0, Math_fround($6_1 | 0));
  }
  $155($11_1 + 24 | 0, $1_1);
  $5_1 = $1963($1_1 + 92 | 0, 0);
  $4_1 = $1963($11_1, 28);
  $13 = Math_fround($1963($11_1, 24) - $1963($1_1, 88));
  $1986($0_1, 0, $13);
  $8 = Math_fround($4_1 - $5_1);
  $1986($0_1, 4, $8);
  label$46 : {
   if ($12_1 & 64) {
    break label$46
   }
   if (!($1937($1_1 + 11 | 0, 0) & 1)) {
    break label$46
   }
   $1_1 = $1944($1_1, 728);
   $7_1 = $1963($2_1, 0);
   $5_1 = $1963($2_1, 4);
   $4_1 = $1963($2_1, 8);
   $1986($11_1 + 12 | 0, 0, Math_fround($1963($2_1 + 12 | 0, 0) - $8));
   $1986($11_1, 8, Math_fround($4_1 - $13));
   $1986($11_1, 4, Math_fround($5_1 - $8));
   $1986($11_1, 0, Math_fround($7_1 - $13));
   $2_1 = $1_1;
   $1_1 = $3 & 20 ? $3 & -22 | 1 : $3;
   $264($11_1 + 16 | 0, $2_1, $11_1, $1_1 & 40 ? $1_1 & -43 | 2 : $1_1);
   $1986($0_1, 0, Math_fround($13 + $1963($11_1, 16)));
   $1986($0_1, 4, Math_fround($8 + $1963($11_1, 20)));
  }
  global$0 = $11_1 + 32 | 0;
 }
 
 function $265($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $7_1 = $1944(0, 73568);
  $3 = $1944($7_1, 7080);
  $1973($6_1, 12, $0_1);
  $4_1 = 4;
  $2_1 = $6_1 + 12 | 0;
  $1_1 = $1944((($1944($3, 196) << 2) + $1944($3 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
  while (1) {
   $5_1 = $2_1;
   $2_1 = $2_1 + 1 | 0;
   $5_1 = $1944((($1937($5_1, 0) ^ $1_1 & 255) << 2) + 19360 | 0, 0) ^ $1_1 >>> 8;
   $1_1 = $5_1;
   $4_1 = $4_1 - 1 | 0;
   if ($4_1) {
    continue
   }
   break;
  };
  $5_1 = $5_1 ^ -1;
  if (($1944($7_1, 7112) | 0) == ($5_1 | 0)) {
   $75($5_1, 12, $0_1)
  }
  $2_1 = $1944($3, 196);
  $0_1 = $1944($3 + 200 | 0, 0);
  label$3 : {
   if (($2_1 | 0) != ($0_1 | 0)) {
    break label$3
   }
   $1_1 = $2_1 + 1 | 0;
   $4_1 = $0_1;
   if ($0_1) {
    $2_1 = $0_1 + (($0_1 | 0) / 2 | 0) | 0
   } else {
    $2_1 = 8
   }
   $0_1 = ($1_1 | 0) < ($2_1 | 0) ? $2_1 : $1_1;
   if (($4_1 | 0) >= ($0_1 | 0)) {
    break label$3
   }
   $2_1 = $0_1 << 2;
   $1_1 = $1944(0, 73568);
   if ($1_1) {
    $1_1 = $1_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
   }
   $2_1 = (((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $1_1 = $1944($3 + 204 | 0, 0);
   if ($1_1) {
    $1602($2_1, $1_1, $1944($3, 196) << 2);
    $1_1 = $1944($3, 204);
    label$8 : {
     if (!$1_1) {
      break label$8
     }
     $4_1 = $1944(0, 73568);
     if (!$4_1) {
      break label$8
     }
     $4_1 = $4_1 + 876 | 0;
     $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $1_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($3, 200, $0_1);
   $1973($3, 204, $2_1);
  }
  $1973($1944($3 + 204 | 0, 0) + ($1944($3, 196) << 2) | 0, 0, $5_1);
  $1973($3, 196, $1944($3, 196) + 1 | 0);
  global$0 = $6_1 + 16 | 0;
 }
 
 function $266($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $7_1 = $1944(0, 73568);
  $3 = $1944($7_1, 7080);
  $1973($6_1, 12, $0_1);
  $4_1 = 4;
  $2_1 = $6_1 + 12 | 0;
  $1_1 = $1944((($1944($3, 196) << 2) + $1944($3 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
  while (1) {
   $5_1 = $2_1;
   $2_1 = $2_1 + 1 | 0;
   $5_1 = $1944((($1937($5_1, 0) ^ $1_1 & 255) << 2) + 19360 | 0, 0) ^ $1_1 >>> 8;
   $1_1 = $5_1;
   $4_1 = $4_1 - 1 | 0;
   if ($4_1) {
    continue
   }
   break;
  };
  $5_1 = $5_1 ^ -1;
  if (($1944($7_1, 7112) | 0) == ($5_1 | 0)) {
   $75($5_1, 4, $0_1)
  }
  $2_1 = $1944($3, 196);
  $0_1 = $1944($3 + 200 | 0, 0);
  label$3 : {
   if (($2_1 | 0) != ($0_1 | 0)) {
    break label$3
   }
   $1_1 = $2_1 + 1 | 0;
   $4_1 = $0_1;
   if ($0_1) {
    $2_1 = $0_1 + (($0_1 | 0) / 2 | 0) | 0
   } else {
    $2_1 = 8
   }
   $0_1 = ($1_1 | 0) < ($2_1 | 0) ? $2_1 : $1_1;
   if (($4_1 | 0) >= ($0_1 | 0)) {
    break label$3
   }
   $2_1 = $0_1 << 2;
   $1_1 = $1944(0, 73568);
   if ($1_1) {
    $1_1 = $1_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
   }
   $2_1 = (((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $1_1 = $1944($3 + 204 | 0, 0);
   if ($1_1) {
    $1602($2_1, $1_1, $1944($3, 196) << 2);
    $1_1 = $1944($3, 204);
    label$8 : {
     if (!$1_1) {
      break label$8
     }
     $4_1 = $1944(0, 73568);
     if (!$4_1) {
      break label$8
     }
     $4_1 = $4_1 + 876 | 0;
     $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $1_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($3, 200, $0_1);
   $1973($3, 204, $2_1);
  }
  $1973($1944($3 + 204 | 0, 0) + ($1944($3, 196) << 2) | 0, 0, $5_1);
  $1973($3, 196, $1944($3, 196) + 1 | 0);
  global$0 = $6_1 + 16 | 0;
 }
 
 function $267($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = $1944(0, 73568);
  $3 = $1944($2_1, 7080);
  if (($1944($2_1, 7112) | 0) == ($0_1 | 0)) {
   $75($0_1, 13, 0)
  }
  $4_1 = $1944($3, 196);
  $2_1 = $1944($3 + 200 | 0, 0);
  label$2 : {
   if (($4_1 | 0) != ($2_1 | 0)) {
    break label$2
   }
   $1_1 = $4_1 + 1 | 0;
   $5_1 = $2_1;
   if ($2_1) {
    $4_1 = $2_1 + (($2_1 | 0) / 2 | 0) | 0
   } else {
    $4_1 = 8
   }
   $2_1 = ($1_1 | 0) < ($4_1 | 0) ? $4_1 : $1_1;
   if (($5_1 | 0) >= ($2_1 | 0)) {
    break label$2
   }
   $4_1 = $2_1 << 2;
   $1_1 = $1944(0, 73568);
   if ($1_1) {
    $1_1 = $1_1 + 876 | 0;
    $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
   }
   $4_1 = (((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $1_1 = $1944($3 + 204 | 0, 0);
   if ($1_1) {
    $1602($4_1, $1_1, $1944($3, 196) << 2);
    $1_1 = $1944($3, 204);
    label$7 : {
     if (!$1_1) {
      break label$7
     }
     $5_1 = $1944(0, 73568);
     if (!$5_1) {
      break label$7
     }
     $5_1 = $5_1 + 876 | 0;
     $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $1_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($3, 200, $2_1);
   $1973($3, 204, $4_1);
  }
  $1973($1944($3 + 204 | 0, 0) + ($1944($3, 196) << 2) | 0, 0, $0_1);
  $1973($3, 196, $1944($3, 196) + 1 | 0);
 }
 
 function $268($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0;
  $1_1 = 14998;
  $3 = $0_1 ^ -1;
  $0_1 = $3;
  while (1) {
   $4_1 = $1_1;
   $1_1 = $1_1 + 1 | 0;
   $2_1 = $1937($4_1, 0);
   if ($2_1) {
    label$11 : {
     if (($2_1 | 0) != 35) {
      break label$11
     }
     if (($1937($1_1, 0) | 0) != 35) {
      break label$11
     }
     $0_1 = ($1937($4_1, 2) | 0) == 35 ? $3 : $0_1;
    }
    $0_1 = $1944((($2_1 ^ $0_1 & 255) << 2) + 19360 | 0, 0) ^ $0_1 >>> 8;
   }
   if ($2_1) {
    continue
   }
   break;
  };
  $1_1 = $1944(0, 73568);
  $0_1 = $0_1 ^ -1;
  if (($1944($1_1, 7136) | 0) == ($0_1 | 0)) {
   $1973($1_1, 7140, $0_1)
  }
  if (($1944($1_1, 7196) | 0) == ($0_1 | 0)) {
   $1968($1_1, 7200, 1)
  }
  if (($1944($1_1, 7112) | 0) == ($0_1 | 0)) {
   $75($0_1, 11, 14998)
  }
  return $0_1;
 }
 
 function $269() {
  var $0_1 = 0;
  $0_1 = $1944($1944(0, 73568), 7080);
  $1973($0_1, 196, $1944($0_1, 196) - 1 | 0);
 }
 
 function $270($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $4_1 = $0_1;
  $2_1 = $1944(0, 73568);
  $1_1 = $1944($2_1, 7080);
  $6_1 = $1944((($1944($1_1, 196) << 2) + $1944($1_1 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
  $1_1 = $6_1;
  while (1) {
   $5_1 = $4_1;
   $4_1 = $5_1 + 1 | 0;
   $3 = $1937($5_1, 0);
   if ($3) {
    label$4 : {
     if (($3 | 0) != 35) {
      break label$4
     }
     if (($1937($4_1, 0) | 0) != 35) {
      break label$4
     }
     $1_1 = ($1937($5_1, 2) | 0) == 35 ? $6_1 : $1_1;
    }
    $1_1 = $1944((($3 ^ $1_1 & 255) << 2) + 19360 | 0, 0) ^ $1_1 >>> 8;
   }
   if ($3) {
    continue
   }
   break;
  };
  $1_1 = $1_1 ^ -1;
  if (($1944($2_1, 7136) | 0) == ($1_1 | 0)) {
   $1973($2_1, 7140, $1_1)
  }
  if (($1944($2_1, 7196) | 0) == ($1_1 | 0)) {
   $1968($2_1, 7200, 1)
  }
  if (($1944($2_1, 7112) | 0) == ($1_1 | 0)) {
   $75($1_1, 11, $0_1)
  }
  return $1_1;
 }
 
 function $273($0_1, $1_1) {
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = 0;
  $3 = $1963($0_1, 4);
  $2_1 = $1944($1944(0, 73568), 7080);
  if (!($3 < $1963($2_1 + 508 | 0, 0))) {
   return 0
  }
  if (!($1963($1_1, 4) > $1963($2_1 + 500 | 0, 0))) {
   return 0
  }
  if ($1963($0_1, 0) < $1963($2_1, 504)) {
   $4_1 = $1963($1_1, 0) > $1963($2_1, 496)
  }
  return $4_1;
 }
 
 function $274($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  return !$1695($0_1, 16215) & (($1_1 | 0) == 5408 & ($2_1 | 0) == 1048 & ($3 | 0) == 8 & ($4_1 | 0) == 16 & ($5_1 | 0) == 20 & ($6_1 | 0) == 2);
 }
 
 function $275() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = 0, $9 = Math_fround(0), $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $1_1 = $1944(0, 73568);
  $10_1 = $1944($1_1 + 7464 | 0, 0);
  $11_1 = $1944($1_1, 7456) - 1 | 0;
  $0_1 = $10_1 + Math_imul($11_1, 48) | 0;
  $7_1 = $1963($0_1, 4);
  $4_1 = $1959($0_1, 4);
  $8 = i64toi32_i32$HIGH_BITS;
  $2_1 = $1944($1_1, 7080);
  $12_1 = $2_1 + 232 | 0;
  $5_1 = $1963($12_1, 0);
  $13 = $2_1 + 236 | 0;
  $6_1 = $1963($13, 0);
  $9 = $1963($0_1 + 8 | 0, 0);
  $1986($3 + 28 | 0, 0, $6_1 >= $9 ? $6_1 : $9);
  $1983($3, 16, $4_1, $8);
  $1986($3, 24, $5_1 >= $7_1 ? $5_1 : $7_1);
  $1982($2_1, 208, $4_1, $8);
  $7_1 = $1963($0_1, 12);
  $9 = $1963($0_1 + 16 | 0, 0);
  $1986($13, 0, $6_1 <= $9 ? $9 : $6_1);
  $1986($12_1, 0, $5_1 <= $7_1 ? $7_1 : $5_1);
  $1973($2_1 + 272 | 0, 0, $1944($0_1, 20));
  $1973($2_1 + 280 | 0, 0, $1944($0_1, 24));
  $1982($2_1 + 248 | 0, 0, $1959($0_1, 28), i64toi32_i32$HIGH_BITS);
  $5_1 = $1963($0_1, 36);
  $1986($2_1 + 264 | 0, 0, $5_1);
  if ($1937($1_1, 12196)) {
   $1973($1_1, 12228, -8388609)
  }
  label$2 : {
   if (!$1937($0_1, 46)) {
    break label$2
   }
   $6_1 = $1963($2_1 + 268 | 0, 0);
   $1986($2_1, 264, $5_1 <= $6_1 ? $6_1 : $5_1);
   $1986($3, 12, Math_fround($1963($3 + 28 | 0, 0) - $1963($3, 20)));
   $1986($3, 8, Math_fround($1963($3, 24) - $1963($3, 16)));
   $212($3 + 8 | 0, Math_fround(-1.0));
   $213($3 + 16 | 0, 0, 0, 1);
   $8 = Math_imul($11_1, 48) + $10_1 | 0;
   $4_1 = $1944($8, 40);
   $0_1 = $1944($1_1, 7136);
   $2_1 = 0;
   label$3 : {
    if (($4_1 | 0) == ($0_1 | 0)) {
     break label$3
    }
    $2_1 = ($1944($1_1, 7140) | 0) == ($0_1 | 0) & ($0_1 | 0) != 0;
   }
   $4_1 = 0;
   if (!$1937($8, 44)) {
    $4_1 = ($1937($1_1, 7200) | 0) != 0
   }
   label$5 : {
    if (!$2_1) {
     if (!$4_1) {
      break label$5
     }
     $0_1 = $1944($1_1, 7196);
    }
    $1973($1_1, 7240, $0_1);
   }
   $1982($1_1 + 7252 | 0, 0, $1960($3, 16), i64toi32_i32$HIGH_BITS);
   $1982($1_1 + 7260 | 0, 0, $1960($3 + 24 | 0, 0), i64toi32_i32$HIGH_BITS);
   label$7 : {
    if ($1937(Math_imul($11_1, 48) + $10_1 | 0, 45)) {
     break label$7
    }
    if (!$1944($1_1, 7116)) {
     break label$7
    }
    $0_1 = $1_1 + 7248 | 0;
    $1973($0_1, 0, $1944($0_1, 0) | 128);
   }
   label$8 : {
    if (!$2_1) {
     break label$8
    }
    if (!$1937($1_1, 7153)) {
     break label$8
    }
    $0_1 = $1_1 + 7248 | 0;
    $1973($0_1, 0, $1944($0_1, 0) | 4);
   }
   $2_1 = $1_1 + 7248 | 0;
   $0_1 = $1944($2_1, 0);
   $1973($2_1, 0, $0_1 | 32);
   if (!$4_1) {
    break label$2
   }
   if (($1944($1_1, 7136) | 0) == ($1944($1_1, 7196) | 0)) {
    break label$2
   }
   $1973($1_1, 7248, $0_1 | 96);
  }
  $1973($1_1, 7456, $1944($1_1, 7456) - 1 | 0);
  global$0 = $3 + 32 | 0;
 }
 
 function $276($0_1, $1_1) {
  $0_1 = Math_fround($0_1);
  $1_1 = Math_fround($1_1);
  var $2_1 = 0, $3 = 0;
  $3 = $1944(0, 73568);
  $2_1 = $1944($3, 7080);
  $1968($2_1, 140, 1);
  if (!$1937($2_1, 143)) {
   label$2 : {
    if ($0_1 != Math_fround(0.0)) {
     $1_1 = Math_fround($1963($2_1 + 280 | 0, 0) + Math_fround(($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1) + Math_fround(Math_fround($1963($2_1, 12) - $1963($2_1, 88)) + $0_1)));
     $0_1 = $1963($2_1 + 276 | 0, 0);
     break label$2;
    }
    $0_1 = $1_1;
    if ($1_1 < Math_fround(0.0)) {
     $0_1 = $1963($3 + 5492 | 0, 0)
    }
    $1_1 = $1963($2_1 + 216 | 0, 0);
   }
   $1986($2_1, 208, Math_fround($0_1 + $1_1));
   $1986($2_1 + 212 | 0, 0, $1963($2_1 + 220 | 0, 0));
   $1982($2_1 + 248 | 0, 0, $1959($2_1 + 256 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1986($2_1 + 264 | 0, 0, $1963($2_1 + 268 | 0, 0));
  }
 }
 
 function $277($0_1, $1_1) {
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = Math_fround(0);
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $1963($0_1 + 12 | 0, 0);
  $4_1 = $1963($0_1, 4);
  $1986($2_1, 8, Math_fround($1963($0_1, 8) - $1963($0_1, 0)));
  $1986($2_1, 12, Math_fround($3 - $4_1));
  $212($2_1 + 8 | 0, $1_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $278($0_1) {
  $1982($0_1, 0, $1959($1944($1944(0, 73568), 7080), 208), i64toi32_i32$HIGH_BITS);
 }
 
 function $279($0_1) {
  var $1_1 = 0, $2_1 = Math_fround(0), $3 = Math_fround(0);
  $1_1 = $1944($1944(0, 73568), 7080);
  $1968($1_1, 140, 1);
  $1982($1_1, 208, $1959($0_1, 0), i64toi32_i32$HIGH_BITS);
  $0_1 = $1_1 + 232 | 0;
  $2_1 = $1963($0_1, 0);
  $3 = $1963($1_1, 208);
  $1986($0_1, 0, $2_1 >= $3 ? $2_1 : $3);
  $0_1 = $1_1 + 236 | 0;
  $2_1 = $1963($0_1, 0);
  $3 = $1963($1_1 + 212 | 0, 0);
  $1986($0_1, 0, $2_1 >= $3 ? $2_1 : $3);
 }
 
 function $281() {
  var $0_1 = 0;
  $0_1 = $1944($1944(0, 73568), 7080);
  return Math_fround(Math_fround(Math_fround($1963($0_1, 208) - $1963($0_1, 12)) + $1963($0_1, 88)));
 }
 
 function $282() {
  var $0_1 = 0;
  $0_1 = $1944($1944(0, 73568), 7080);
  return Math_fround(Math_fround(Math_fround($1963($0_1 + 212 | 0, 0) - $1963($0_1 + 16 | 0, 0)) + $1963($0_1 + 92 | 0, 0)));
 }
 
 function $284($0_1) {
  $0_1 = Math_fround($0_1);
  var $1_1 = 0, $2_1 = Math_fround(0);
  $1_1 = $1944($1944(0, 73568), 7080);
  $1968($1_1, 140, 1);
  $0_1 = Math_fround(Math_fround($1963($1_1, 12) - $1963($1_1, 88)) + $0_1);
  $1986($1_1, 208, $0_1);
  $1_1 = $1_1 + 232 | 0;
  $2_1 = $1963($1_1, 0);
  $1986($1_1, 0, $0_1 <= $2_1 ? $2_1 : $0_1);
 }
 
 function $285($0_1) {
  $0_1 = Math_fround($0_1);
  var $1_1 = 0, $2_1 = Math_fround(0);
  $1_1 = $1944($1944(0, 73568), 7080);
  $1968($1_1, 140, 1);
  $0_1 = Math_fround(Math_fround($1963($1_1 + 16 | 0, 0) - $1963($1_1 + 92 | 0, 0)) + $0_1);
  $1986($1_1 + 212 | 0, 0, $0_1);
  $1_1 = $1_1 + 236 | 0;
  $2_1 = $1963($1_1, 0);
  $1986($1_1, 0, $0_1 <= $2_1 ? $2_1 : $0_1);
 }
 
 function $287($0_1) {
  $0_1 = Math_fround($0_1);
  var $1_1 = 0, $2_1 = 0;
  $1_1 = $1944(0, 73568);
  $2_1 = $1944($1_1, 7080);
  $1968($2_1, 140, 1);
  if ($0_1 == Math_fround(0.0)) {
   $0_1 = $1963($1_1 + 5524 | 0, 0)
  }
  $1_1 = $2_1 + 272 | 0;
  $0_1 = Math_fround($0_1 + $1963($1_1, 0));
  $1986($1_1, 0, $0_1);
  $1986($2_1, 208, Math_fround(Math_fround($0_1 + $1963($2_1, 12)) + $1963($2_1 + 276 | 0, 0)));
 }
 
 function $288($0_1) {
  $0_1 = Math_fround($0_1);
  var $1_1 = 0, $2_1 = 0;
  $1_1 = $1944(0, 73568);
  $2_1 = $1944($1_1, 7080);
  $1968($2_1, 140, 1);
  if ($0_1 == Math_fround(0.0)) {
   $0_1 = $1963($1_1 + 5524 | 0, 0)
  }
  $1_1 = $2_1 + 272 | 0;
  $0_1 = Math_fround($1963($1_1, 0) - $0_1);
  $1986($1_1, 0, $0_1);
  $1986($2_1, 208, Math_fround(Math_fround($0_1 + $1963($2_1, 12)) + $1963($2_1 + 276 | 0, 0)));
 }
 
 function $289($0_1) {
  $0_1 = Math_fround($0_1);
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $6_1 = $1944(0, 73568);
  $1_1 = $1944($6_1, 7080);
  $2_1 = $1944($1_1 + 392 | 0, 0);
  $4_1 = $1944($1_1 + 396 | 0, 0);
  label$1 : {
   if (($2_1 | 0) != ($4_1 | 0)) {
    break label$1
   }
   $3 = $2_1 + 1 | 0;
   $5_1 = $4_1;
   if ($4_1) {
    $2_1 = $4_1 + (($4_1 | 0) / 2 | 0) | 0
   } else {
    $2_1 = 8
   }
   $4_1 = ($2_1 | 0) > ($3 | 0) ? $2_1 : $3;
   if (($5_1 | 0) >= ($4_1 | 0)) {
    break label$1
   }
   $2_1 = $4_1 << 2;
   if ($6_1) {
    $3 = $6_1 + 876 | 0;
    $1973($3, 0, $1944($3, 0) + 1 | 0);
   }
   $2_1 = (((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $3 = $1944($1_1 + 400 | 0, 0);
   if ($3) {
    $1602($2_1, $3, $1944($1_1, 392) << 2);
    $3 = $1944($1_1, 400);
    label$6 : {
     if (!$3) {
      break label$6
     }
     $5_1 = $1944(0, 73568);
     if (!$5_1) {
      break label$6
     }
     $5_1 = $5_1 + 876 | 0;
     $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $3, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($1_1, 396, $4_1);
   $1973($1_1, 400, $2_1);
  }
  $1973($1944($1_1 + 400 | 0, 0) + ($1944($1_1, 392) << 2) | 0, 0, $1944($1_1, 384));
  $1973($1_1, 392, $1944($1_1, 392) + 1 | 0);
  if ($0_1 == Math_fround(0.0)) {
   $0_1 = $1963($1_1, 544)
  }
  $1986($1_1, 384, $0_1);
  $1973($6_1, 7220, $1944($6_1, 7220) & -2);
 }
 
 function $290($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = 0, $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $10_1 = $1944(0, 73568);
  $7_1 = $1963($10_1 + 5500 | 0, 0);
  $12_1 = Math_fround($0_1 - 1 | 0);
  $11_1 = Math_fround(Math_fround($1_1 - Math_fround($7_1 * $12_1)) / Math_fround($0_1 | 0));
  label$1 : {
   if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
    $2_1 = ~~$11_1;
    break label$1;
   }
   $2_1 = -2147483648;
  }
  $11_1 = $1_1;
  $1_1 = Math_fround($2_1 | 0);
  $1_1 = $1_1 <= Math_fround(1.0) ? Math_fround(1.0) : $1_1;
  $7_1 = Math_fround($11_1 - Math_fround(Math_fround($7_1 + $1_1) * $12_1));
  label$3 : {
   if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
    $2_1 = ~~$7_1;
    break label$3;
   }
   $2_1 = -2147483648;
  }
  $7_1 = Math_fround($2_1 | 0);
  $6_1 = $7_1 <= Math_fround(1.0);
  $4_1 = $1944($10_1, 7080);
  $5_1 = $1944($4_1 + 392 | 0, 0);
  $2_1 = $1944($4_1 + 396 | 0, 0);
  label$5 : {
   if (($5_1 | 0) != ($2_1 | 0)) {
    break label$5
   }
   $3 = $5_1 + 1 | 0;
   $8 = $2_1;
   if ($2_1) {
    $5_1 = $2_1 + (($2_1 | 0) / 2 | 0) | 0
   } else {
    $5_1 = 8
   }
   $2_1 = ($3 | 0) < ($5_1 | 0) ? $5_1 : $3;
   if (($8 | 0) >= ($2_1 | 0)) {
    break label$5
   }
   $5_1 = $2_1 << 2;
   if ($10_1) {
    $3 = $10_1 + 876 | 0;
    $1973($3, 0, $1944($3, 0) + 1 | 0);
   }
   $5_1 = (((wasm2js_i32$1 = $5_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $3 = $1944($4_1 + 400 | 0, 0);
   if ($3) {
    $1602($5_1, $3, $1944($4_1, 392) << 2);
    $3 = $1944($4_1, 400);
    label$10 : {
     if (!$3) {
      break label$10
     }
     $9 = $1944(0, 73568);
     if (!$9) {
      break label$10
     }
     $9 = $9 + 876 | 0;
     $1973($9, 0, $1944($9, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $3, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($4_1, 396, $2_1);
   $1973($4_1, 400, $5_1);
  }
  $7_1 = $6_1 ? Math_fround(1.0) : $7_1;
  $1973($1944($4_1 + 400 | 0, 0) + ($1944($4_1, 392) << 2) | 0, 0, $1944($4_1, 384));
  $5_1 = $1944($4_1, 392);
  $2_1 = $5_1 + 1 | 0;
  $1973($4_1, 392, $2_1);
  $3 = $2_1;
  $2_1 = $1944($4_1, 396);
  label$11 : {
   if (($3 | 0) != ($2_1 | 0)) {
    break label$11
   }
   $3 = $5_1 + 2 | 0;
   $8 = $2_1;
   if ($2_1) {
    $5_1 = $2_1 + (($2_1 | 0) / 2 | 0) | 0
   } else {
    $5_1 = 8
   }
   $2_1 = ($3 | 0) < ($5_1 | 0) ? $5_1 : $3;
   if (($8 | 0) >= ($2_1 | 0)) {
    break label$11
   }
   $5_1 = $2_1 << 2;
   $3 = $1944(0, 73568);
   if ($3) {
    $3 = $3 + 876 | 0;
    $1973($3, 0, $1944($3, 0) + 1 | 0);
   }
   $5_1 = (((wasm2js_i32$1 = $5_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $3 = $1944($4_1, 400);
   if ($3) {
    $1602($5_1, $3, $1944($4_1, 392) << 2);
    $3 = $1944($4_1, 400);
    label$16 : {
     if (!$3) {
      break label$16
     }
     $6_1 = $1944(0, 73568);
     if (!$6_1) {
      break label$16
     }
     $6_1 = $6_1 + 876 | 0;
     $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $3, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($4_1, 396, $2_1);
   $1973($4_1, 400, $5_1);
  }
  $1986($1944($4_1, 400) + ($1944($4_1, 392) << 2) | 0, 0, $7_1);
  $1973($4_1, 392, $1944($4_1, 392) + 1 | 0);
  if (($0_1 | 0) >= 3) {
   $9 = $0_1 - 3 | 0;
   $2_1 = 0;
   while (1) {
    $5_1 = $2_1;
    $3 = $1944($4_1, 392);
    $2_1 = $1944($4_1, 396);
    label$19 : {
     if (($3 | 0) != ($2_1 | 0)) {
      break label$19
     }
     $6_1 = $3 + 1 | 0;
     $8 = $2_1;
     if ($2_1) {
      $3 = $2_1 + (($2_1 | 0) / 2 | 0) | 0
     } else {
      $3 = 8
     }
     $2_1 = ($3 | 0) > ($6_1 | 0) ? $3 : $6_1;
     if (($8 | 0) >= ($2_1 | 0)) {
      break label$19
     }
     $3 = $2_1 << 2;
     $6_1 = $1944(0, 73568);
     if ($6_1) {
      $6_1 = $6_1 + 876 | 0;
      $1973($6_1, 0, $1944($6_1, 0) + 1 | 0);
     }
     $3 = (((wasm2js_i32$1 = $3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
     $6_1 = $1944($4_1, 400);
     if ($6_1) {
      $1602($3, $6_1, $1944($4_1, 392) << 2);
      $6_1 = $1944($4_1, 400);
      label$24 : {
       if (!$6_1) {
        break label$24
       }
       $8 = $1944(0, 73568);
       if (!$8) {
        break label$24
       }
       $8 = $8 + 876 | 0;
       $1973($8, 0, $1944($8, 0) - 1 | 0);
      }
      ((wasm2js_i32$2 = $6_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     }
     $1973($4_1, 396, $2_1);
     $1973($4_1, 400, $3);
    }
    $1986($1944($4_1, 400) + ($1944($4_1, 392) << 2) | 0, 0, $1_1);
    $1973($4_1, 392, $1944($4_1, 392) + 1 | 0);
    $2_1 = $5_1 + 1 | 0;
    if (($5_1 | 0) != ($9 | 0)) {
     continue
    }
    break;
   };
  }
  $1986($4_1, 384, ($0_1 | 0) == 1 ? $7_1 : $1_1);
  $1973($10_1, 7220, $1944($10_1, 7220) & -2);
 }
 
 function $291() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = Math_fround(0);
  $0_1 = $1944($1944(0, 73568), 7080);
  $1968($0_1, 140, 1);
  $3 = $1944($0_1 + 400 | 0, 0);
  $1_1 = $0_1 + 392 | 0;
  $2_1 = $1944($1_1, 0) - 1 | 0;
  $4_1 = $1963($3 + ($2_1 << 2) | 0, 0);
  $1973($1_1, 0, $2_1);
  $1986($0_1 + 384 | 0, 0, $4_1);
 }
 
 function $292() {
  var $0_1 = 0, $1_1 = Math_fround(0), $2_1 = 0;
  $0_1 = $1944(0, 73568);
  $2_1 = $1944($0_1, 7080);
  $1_1 = $1963($1937($0_1, 7220) & 1 ? $0_1 + 7224 | 0 : $2_1 + 384 | 0, 0);
  label$1 : {
   if (!($1_1 < Math_fround(0.0))) {
    break label$1
   }
   label$3 : {
    label$4 : {
     if ($1944($2_1 + 368 | 0, 0)) {
      break label$4
     }
     if ($1944($0_1, 8036)) {
      break label$4
     }
     $0_1 = $2_1 + 520 | 0;
     break label$3;
    }
    $0_1 = $2_1 + 472 | 0;
   }
   $1_1 = Math_fround($1_1 + Math_fround($1963($0_1, 0) - $1963($2_1, 208)));
   $1_1 = $1_1 <= Math_fround(1.0) ? Math_fround(1.0) : $1_1;
  }
  if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
   $0_1 = ~~$1_1
  } else {
   $0_1 = -2147483648
  }
  return Math_fround(Math_fround($0_1 | 0));
 }
 
 function $293($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = 0, $11_1 = Math_fround(0);
  $6_1 = $1963($1_1, 4);
  $5_1 = $1944(0, 73568);
  $4_1 = $1944($5_1, 7080);
  $7_1 = $1963($1_1, 0);
  label$1 : {
   if (!($7_1 < Math_fround(0.0))) {
    $9 = Math_fround(0.0);
    if (!($6_1 < Math_fround(0.0))) {
     break label$1
    }
   }
   $10_1 = $4_1 + 524 | 0;
   label$3 : {
    label$4 : {
     if ($1944($4_1 + 368 | 0, 0)) {
      break label$4
     }
     if ($1944($5_1, 8036)) {
      break label$4
     }
     $5_1 = $4_1 + 520 | 0;
     break label$3;
    }
    $5_1 = $4_1 + 472 | 0;
   }
   $8 = $1963($5_1, 0);
   $9 = $1963($10_1, 0);
  }
  $11_1 = $8;
  $8 = $2_1;
  label$5 : {
   if ($7_1 != Math_fround(0.0)) {
    if (!($7_1 < Math_fround(0.0))) {
     break label$5
    }
    $2_1 = Math_fround($7_1 + Math_fround($11_1 - $1963($4_1, 208)));
    $8 = $2_1 <= Math_fround(4.0) ? Math_fround(4.0) : $2_1;
   }
   $1986($1_1, 0, $8);
  }
  label$7 : {
   if ($6_1 != Math_fround(0.0)) {
    if (!($6_1 < Math_fround(0.0))) {
     break label$7
    }
    $2_1 = Math_fround($6_1 + Math_fround($9 - $1963($4_1 + 212 | 0, 0)));
    $3 = $2_1 <= Math_fround(4.0) ? Math_fround(4.0) : $2_1;
   }
   $1986($1_1, 4, $3);
  }
  $1982($0_1, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
 }
 
 function $295() {
  var $0_1 = 0;
  $0_1 = $1944(0, 73568);
  return Math_fround(Math_fround($1963($0_1, 6468) + $1963($0_1 + 5496 | 0, 0)));
 }
 
 function $296() {
  var $0_1 = 0, $1_1 = Math_fround(0);
  $0_1 = $1944(0, 73568);
  $1_1 = $1963($0_1 + 5480 | 0, 0);
  return Math_fround(Math_fround(Math_fround($1_1 + $1_1) + $1963($0_1, 6468)));
 }
 
 function $297() {
  var $0_1 = 0, $1_1 = Math_fround(0);
  $0_1 = $1944(0, 73568);
  $1_1 = $1963($0_1 + 5480 | 0, 0);
  return Math_fround(Math_fround(Math_fround(Math_fround($1_1 + $1_1) + $1963($0_1, 6468)) + $1963($0_1 + 5496 | 0, 0)));
 }
 
 function $301() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = $1944(0, 73568);
  $6_1 = $1944($1_1, 7456);
  $7_1 = $6_1 + 1 | 0;
  $2_1 = $1944($1_1, 7080);
  $0_1 = $1944($1_1 + 7460 | 0, 0);
  label$1 : {
   if (($0_1 | 0) > ($6_1 | 0)) {
    break label$1
   }
   $5_1 = $0_1;
   if ($0_1) {
    $3 = $0_1 + (($0_1 | 0) / 2 | 0) | 0
   } else {
    $3 = 8
   }
   $0_1 = ($3 | 0) > ($7_1 | 0) ? $3 : $7_1;
   if (($5_1 | 0) >= ($0_1 | 0)) {
    break label$1
   }
   $3 = Math_imul($0_1, 48);
   if ($1_1) {
    $4_1 = $1_1 + 876 | 0;
    $1973($4_1, 0, $1944($4_1, 0) + 1 | 0);
   }
   $3 = (((wasm2js_i32$1 = $3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $4_1 = $1944($1_1 + 7464 | 0, 0);
   if ($4_1) {
    $1602($3, $4_1, Math_imul($1944($1_1, 7456), 48));
    $4_1 = $1944($1_1, 7464);
    label$6 : {
     if (!$4_1) {
      break label$6
     }
     $5_1 = $1944(0, 73568);
     if (!$5_1) {
      break label$6
     }
     $5_1 = $5_1 + 876 | 0;
     $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($1_1, 7460, $0_1);
   $1973($1_1, 7464, $3);
  }
  $1973($1_1, 7456, $7_1);
  $0_1 = $1944($1_1 + 7464 | 0, 0) + Math_imul($6_1, 48) | 0;
  $1973($0_1, 0, $1944($2_1, 4));
  $1982($0_1, 4, $1959($2_1, 208), i64toi32_i32$HIGH_BITS);
  $7_1 = $2_1 + 232 | 0;
  $1982($0_1, 12, $1959($7_1, 0), i64toi32_i32$HIGH_BITS);
  $3 = $2_1 + 272 | 0;
  $1973($0_1, 20, $1944($3, 0));
  $6_1 = $2_1 + 280 | 0;
  $1973($0_1, 24, $1944($6_1, 0));
  $4_1 = $2_1 + 248 | 0;
  $1982($0_1, 28, $1959($4_1, 0), i64toi32_i32$HIGH_BITS);
  $1986($0_1, 36, $1963($2_1 + 264 | 0, 0));
  $1973($0_1, 40, $1944($1_1, 7140));
  $1968($0_1, 45, ($1944($1_1, 7116) | 0) != 0);
  $5_1 = $1937($1_1, 7200);
  $1968($0_1, 46, 1);
  $1968($0_1, 44, $5_1);
  $1982($4_1, 0, 0, 0);
  $1982($7_1, 0, $1959($2_1, 208), i64toi32_i32$HIGH_BITS);
  $8 = Math_fround(Math_fround($1963($2_1, 208) - $1963($2_1, 12)) - $1963($2_1 + 276 | 0, 0));
  $1986($6_1, 0, $8);
  $1986($3, 0, $8);
  if ($1937($1_1, 12196)) {
   $1973($1_1, 12228, -8388609)
  }
 }
 
 function $302($0_1, $1_1) {
  var $2_1 = 0;
  $1973($0_1, 120, 0);
  $1986($0_1, 112, Math_fround(1.0));
  $1_1 = Math_fround($1963($0_1, 88) + $1_1);
  label$1 : {
   if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
    $2_1 = ~~$1_1;
    break label$1;
   }
   $2_1 = -2147483648;
  }
  $1986($0_1, 104, Math_fround($2_1 | 0));
 }
 
 function $303() {
  return Math_fround($1963($1944($1944(0, 73568), 7080), 88));
 }
 
 function $304() {
  return Math_fround($1963($1944($1944(0, 73568), 7080) + 92 | 0, 0));
 }
 
 function $305() {
  return Math_fround($1963($1944($1944(0, 73568), 7080), 96));
 }
 
 function $306() {
  return Math_fround($1963($1944($1944(0, 73568), 7080) + 100 | 0, 0));
 }
 
 function $307($0_1, $1_1) {
  $1973($0_1 + 124 | 0, 0, 0);
  $1973($0_1 + 116 | 0, 0, 0);
  $1986($0_1 + 108 | 0, 0, $1_1);
 }
 
 function $308($0_1) {
  $0_1 = Math_fround($0_1);
  var $1_1 = 0;
  $1_1 = $1944($1944(0, 73568), 7080);
  $1973($1_1, 120, 0);
  $1973($1_1, 112, 0);
  $1986($1_1, 104, $0_1);
 }
 
 function $309($0_1) {
  $0_1 = Math_fround($0_1);
  var $1_1 = 0;
  $1_1 = $1944($1944(0, 73568), 7080);
  $1973($1_1 + 124 | 0, 0, 0);
  $1973($1_1 + 116 | 0, 0, 0);
  $1986($1_1 + 108 | 0, 0, $0_1);
 }
 
 function $310($0_1, $1_1) {
  $0_1 = Math_fround($0_1);
  $1_1 = Math_fround($1_1);
  var $2_1 = 0, $3 = 0;
  $2_1 = $1944($1944(0, 73568), 7080);
  $1973($2_1, 120, 0);
  $1986($2_1, 112, $1_1);
  $0_1 = Math_fround($1963($2_1, 88) + $0_1);
  label$1 : {
   if (Math_fround(Math_abs($0_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$0_1;
    break label$1;
   }
   $3 = -2147483648;
  }
  $1986($2_1, 104, Math_fround($3 | 0));
 }
 
 function $311($0_1, $1_1) {
  $0_1 = Math_fround($0_1);
  $1_1 = Math_fround($1_1);
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = 0, $8 = Math_fround(0), $9 = Math_fround(0);
  $4_1 = $1944(0, 73568);
  $2_1 = $1944($4_1, 7080);
  $7_1 = $1944($2_1, 8);
  if (!($7_1 & 1)) {
   $3 = Math_fround($1963($4_1, 6472) * $1963($2_1, 572));
   $5_1 = $1944($2_1, 728);
   if ($5_1) {
    $3 = Math_fround($3 * $1963($5_1, 572))
   }
   $6_1 = $1963($4_1 + 5480 | 0, 0);
   $3 = Math_fround(Math_fround($6_1 + $6_1) + $3);
  }
  $6_1 = $3;
  $3 = Math_fround(0.0);
  if ($7_1 & 1024) {
   $3 = Math_fround($1963($4_1, 6472) * $1963($2_1, 572));
   $9 = $1963($2_1 + 312 | 0, 0);
   $5_1 = $1944($2_1, 728);
   if ($5_1) {
    $3 = Math_fround($3 * $1963($5_1, 572))
   }
   $8 = $1963($4_1 + 5480 | 0, 0);
   $3 = Math_fround(Math_fround($8 + $8) + Math_fround($9 + $3));
  }
  $1973($2_1 + 124 | 0, 0, 0);
  $1986($2_1 + 116 | 0, 0, $1_1);
  $4_1 = $2_1 + 108 | 0;
  $0_1 = Math_fround($1963($2_1 + 92 | 0, 0) + Math_fround($0_1 - Math_fround($6_1 + $3)));
  label$7 : {
   if (Math_fround(Math_abs($0_1)) < Math_fround(2147483648.0)) {
    $2_1 = ~~$0_1;
    break label$7;
   }
   $2_1 = -2147483648;
  }
  $1986($4_1, 0, Math_fround($2_1 | 0));
 }
 
 function $312($0_1) {
  $0_1 = Math_fround($0_1);
  var $1_1 = 0, $2_1 = Math_fround(0), $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = 0, $6_1 = Math_fround(0);
  $1_1 = $1944(0, 73568);
  $4_1 = $1963($1_1 + 7260 | 0, 0);
  $6_1 = $1963($1_1 + 7252 | 0, 0);
  $2_1 = $1963($1_1 + 5492 | 0, 0);
  $1_1 = $1944($1_1, 7080);
  $1986($1_1, 112, $0_1);
  $3 = $1963($1_1, 60);
  $2_1 = $2_1 <= $3 ? $3 : $2_1;
  $3 = Math_fround($3 - $2_1);
  $1986($1_1, 120, $3 <= Math_fround(0.0) ? Math_fround(0.0) : $3);
  $4_1 = Math_fround($4_1 + $2_1);
  $2_1 = Math_fround($6_1 - $2_1);
  $0_1 = Math_fround($1963($1_1, 88) + Math_fround(Math_fround(Math_fround(Math_fround($4_1 - $2_1) * $0_1) + $2_1) - $1963($1_1, 12)));
  label$1 : {
   if (Math_fround(Math_abs($0_1)) < Math_fround(2147483648.0)) {
    $5_1 = ~~$0_1;
    break label$1;
   }
   $5_1 = -2147483648;
  }
  $1986($1_1, 104, Math_fround($5_1 | 0));
 }
 
 function $313($0_1) {
  $0_1 = Math_fround($0_1);
  var $1_1 = 0, $2_1 = Math_fround(0), $3 = Math_fround(0), $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = 0, $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = Math_fround(0);
  $4_1 = $1944(0, 73568);
  $8 = $4_1 + 5496 | 0;
  $1_1 = $1944($4_1, 7080);
  $12_1 = $1_1 + 16 | 0;
  $13 = $1_1 + 260 | 0;
  $14 = $1_1 + 220 | 0;
  $15_1 = $1_1 - -64 | 0;
  $9 = $1944($1_1, 8);
  if (!($9 & 1)) {
   $6_1 = Math_fround($1963($4_1, 6472) * $1963($1_1, 572));
   $10_1 = $1944($1_1, 728);
   if ($10_1) {
    $6_1 = Math_fround($6_1 * $1963($10_1, 572))
   }
   $3 = $1963($4_1 + 5480 | 0, 0);
   $6_1 = Math_fround(Math_fround($3 + $3) + $6_1);
  }
  $7_1 = $1963($8, 0);
  $16_1 = $1963($12_1, 0);
  $17_1 = $1963($13, 0);
  $11_1 = $1963($14, 0);
  $2_1 = $1963($15_1, 0);
  $3 = Math_fround(0.0);
  if ($9 & 1024) {
   $3 = Math_fround($1963($4_1, 6472) * $1963($1_1, 572));
   $18_1 = $1963($1_1 + 312 | 0, 0);
   $8 = $1944($1_1, 728);
   if ($8) {
    $3 = Math_fround($3 * $1963($8, 572))
   }
   $5_1 = $1963($4_1 + 5480 | 0, 0);
   $3 = Math_fround(Math_fround($5_1 + $5_1) + Math_fround($18_1 + $3));
  }
  $1986($1_1 + 116 | 0, 0, $0_1);
  $5_1 = $2_1;
  $2_1 = $2_1 >= $7_1 ? $2_1 : $7_1;
  $7_1 = Math_fround($5_1 - $2_1);
  $1986($1_1 + 124 | 0, 0, $7_1 <= Math_fround(0.0) ? Math_fround(0.0) : $7_1);
  $4_1 = $1_1 + 108 | 0;
  $5_1 = Math_fround($2_1 + Math_fround($11_1 + $17_1));
  $2_1 = Math_fround($11_1 - $2_1);
  $0_1 = Math_fround($1963($1_1 + 92 | 0, 0) + Math_fround(Math_fround(Math_fround(Math_fround(Math_fround($5_1 - $2_1) * $0_1) + $2_1) - $16_1) - Math_fround($6_1 + $3)));
  label$7 : {
   if (Math_fround(Math_abs($0_1)) < Math_fround(2147483648.0)) {
    $1_1 = ~~$0_1;
    break label$7;
   }
   $1_1 = -2147483648;
  }
  $1986($4_1, 0, Math_fround($1_1 | 0));
 }
 
 function $314() {
  $141(0);
 }
 
 function $315() {
  $142();
 }
 
 function $317($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $5_1 = $0_1;
  $3 = $1944(0, 73568);
  $2_1 = $1944($3, 7080);
  $7_1 = $1944((($1944($2_1, 196) << 2) + $1944($2_1 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
  $2_1 = $7_1;
  while (1) {
   $6_1 = $5_1;
   $5_1 = $6_1 + 1 | 0;
   $4_1 = $1937($6_1, 0);
   if ($4_1) {
    label$4 : {
     if (($4_1 | 0) != 35) {
      break label$4
     }
     if (($1937($5_1, 0) | 0) != 35) {
      break label$4
     }
     $2_1 = ($1937($6_1, 2) | 0) == 35 ? $7_1 : $2_1;
    }
    $2_1 = $1944((($4_1 ^ $2_1 & 255) << 2) + 19360 | 0, 0) ^ $2_1 >>> 8;
   }
   if ($4_1) {
    continue
   }
   break;
  };
  $2_1 = $2_1 ^ -1;
  if (($1944($3, 7136) | 0) == ($2_1 | 0)) {
   $1973($3, 7140, $2_1)
  }
  if (($1944($3, 7196) | 0) == ($2_1 | 0)) {
   $1968($3, 7200, 1)
  }
  if (($1944($3, 7112) | 0) == ($2_1 | 0)) {
   $75($2_1, 11, $0_1)
  }
  $318($2_1, $1_1);
 }
 
 function $318($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $8 = global$0 - 16 | 0;
  global$0 = $8;
  $5_1 = $1944(0, 73568);
  $4_1 = $1944($5_1, 7480);
  $2_1 = $1944($5_1, 7080);
  label$1 : {
   if ($1_1 & 32) {
    if (($1944($5_1, 7468) | 0) > ($4_1 | 0)) {
     break label$1
    }
   }
   $1983($8, 8, 0, 0);
   $11_1 = $1944((($1944($2_1, 196) << 2) + $1944($2_1 + 204 | 0, 0) | 0) - 4 | 0, 0);
   $10_1 = $1944($5_1, 6984);
   $12_1 = $1944($5_1, 7508);
   $2_1 = $8 + 8 | 0;
   $140($2_1);
   $1_1 = $5_1 + 228 | 0;
   $1_1 = $1959((wasm2js_i32$0 = $1963($5_1 + 232 | 0, 0) >= Math_fround(-256.0e3) ? $1_1 : $2_1, wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1963($1_1, 0) >= Math_fround(-256.0e3), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0);
   $13 = i64toi32_i32$HIGH_BITS;
   $2_1 = $1944(0, 73568);
   $3 = $1944($5_1, 7468);
   if (($4_1 | 0) >= ($3 | 0)) {
    $4_1 = $1944($5_1 + 7472 | 0, 0);
    label$4 : {
     if (($4_1 | 0) != ($3 | 0)) {
      break label$4
     }
     $6_1 = $3 + 1 | 0;
     $7_1 = $4_1;
     if ($4_1) {
      $3 = $4_1 + (($4_1 | 0) / 2 | 0) | 0
     } else {
      $3 = 8
     }
     $4_1 = ($3 | 0) > ($6_1 | 0) ? $3 : $6_1;
     if (($7_1 | 0) >= ($4_1 | 0)) {
      break label$4
     }
     $3 = Math_imul($4_1, 36);
     if ($2_1) {
      $2_1 = $2_1 + 876 | 0;
      $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
     }
     $2_1 = (((wasm2js_i32$1 = $3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
     $3 = $1944($5_1 + 7476 | 0, 0);
     if ($3) {
      $1602($2_1, $3, Math_imul($1944($5_1, 7468), 36));
      $3 = $1944($5_1, 7476);
      label$9 : {
       if (!$3) {
        break label$9
       }
       $6_1 = $1944(0, 73568);
       if (!$6_1) {
        break label$9
       }
       $6_1 = $6_1 + 876 | 0;
       $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
      }
      ((wasm2js_i32$2 = $3, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     }
     $1973($5_1, 7472, $4_1);
     $1973($5_1, 7476, $2_1);
    }
    $2_1 = $1944($5_1 + 7476 | 0, 0) + Math_imul($1944($5_1, 7468), 36) | 0;
    $1973($2_1, 16, $11_1);
    $1973($2_1, 12, $10_1);
    $1973($2_1, 8, $12_1);
    $1973($2_1, 4, 0);
    $1973($2_1, 0, $0_1);
    $0_1 = $1960($8, 8);
    $4_1 = i64toi32_i32$HIGH_BITS;
    $1982($2_1, 28, $1_1, $13);
    $1982($2_1, 20, $0_1, $4_1);
    $1973($5_1, 7468, $1944($5_1, 7468) + 1 | 0);
    break label$1;
   }
   label$10 : {
    $3 = $1944($5_1 + 7476 | 0, 0) + Math_imul($4_1, 36) | 0;
    if (($1944($3, 0) | 0) != ($0_1 | 0)) {
     break label$10
    }
    if (($1944($3, 12) | 0) != ($1944($5_1, 6984) - 1 | 0)) {
     break label$10
    }
    $1973($3 + 12 | 0, 0, $10_1);
    break label$1;
   }
   $6_1 = $1944($2_1 + 7472 | 0, 0);
   label$11 : {
    if (($6_1 | 0) >= ($4_1 | 0)) {
     break label$11
    }
    if ($6_1) {
     $3 = $6_1 + (($6_1 | 0) / 2 | 0) | 0
    } else {
     $3 = 8
    }
    $3 = ($3 | 0) > ($4_1 | 0) ? $3 : $4_1;
    if (($3 | 0) <= ($6_1 | 0)) {
     break label$11
    }
    $6_1 = Math_imul($3, 36);
    if ($2_1) {
     $7_1 = $2_1 + 876 | 0;
     $1973($7_1, 0, $1944($7_1, 0) + 1 | 0);
    }
    $6_1 = (((wasm2js_i32$1 = $6_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $7_1 = $1944($2_1, 7476);
    if ($7_1) {
     $1602($6_1, $7_1, Math_imul($1944($2_1, 7468), 36));
     $7_1 = $1944($2_1, 7476);
     label$16 : {
      if (!$7_1) {
       break label$16
      }
      $9 = $1944(0, 73568);
      if (!$9) {
       break label$16
      }
      $9 = $9 + 876 | 0;
      $1973($9, 0, $1944($9, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $7_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($2_1, 7472, $3);
    $1973($2_1, 7476, $6_1);
   }
   $1973($2_1, 7468, $4_1);
   $4_1 = $1944($5_1, 7468);
   $2_1 = $1944($5_1 + 7472 | 0, 0);
   label$17 : {
    if (($4_1 | 0) != ($2_1 | 0)) {
     break label$17
    }
    $3 = $4_1 + 1 | 0;
    $7_1 = $2_1;
    if ($2_1) {
     $4_1 = $2_1 + (($2_1 | 0) / 2 | 0) | 0
    } else {
     $4_1 = 8
    }
    $2_1 = ($3 | 0) < ($4_1 | 0) ? $4_1 : $3;
    if (($7_1 | 0) >= ($2_1 | 0)) {
     break label$17
    }
    $4_1 = Math_imul($2_1, 36);
    $3 = $1944(0, 73568);
    if ($3) {
     $3 = $3 + 876 | 0;
     $1973($3, 0, $1944($3, 0) + 1 | 0);
    }
    $4_1 = (((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $3 = $1944($5_1, 7476);
    if ($3) {
     $1602($4_1, $3, Math_imul($1944($5_1, 7468), 36));
     $3 = $1944($5_1, 7476);
     label$22 : {
      if (!$3) {
       break label$22
      }
      $6_1 = $1944(0, 73568);
      if (!$6_1) {
       break label$22
      }
      $6_1 = $6_1 + 876 | 0;
      $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $3, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($5_1, 7472, $2_1);
    $1973($5_1, 7476, $4_1);
   }
   $2_1 = $1944($5_1, 7476) + Math_imul($1944($5_1, 7468), 36) | 0;
   $1973($2_1, 16, $11_1);
   $1973($2_1, 12, $10_1);
   $1973($2_1, 8, $12_1);
   $1973($2_1, 4, 0);
   $1973($2_1, 0, $0_1);
   $0_1 = $1960($8, 8);
   $4_1 = i64toi32_i32$HIGH_BITS;
   $1982($2_1, 28, $1_1, $13);
   $1982($2_1, 20, $0_1, $4_1);
   $1973($5_1, 7468, $1944($5_1, 7468) + 1 | 0);
  }
  global$0 = $8 + 16 | 0;
 }
 
 function $319() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0;
  label$1 : {
   $3 = $1944(0, 73568);
   $0_1 = $1944($3, 7480);
   if (($0_1 | 0) <= 0) {
    break label$1
   }
   if (($1944($3, 7468) | 0) < ($0_1 | 0)) {
    break label$1
   }
   $0_1 = $0_1 - 1 | 0;
   $1_1 = Math_imul($0_1, 36);
   $2_1 = $1944($1944($3 + 7488 | 0, 0) + $1_1 | 0, 0);
   $4_1 = $1944($3 + 7476 | 0, 0);
   if (($2_1 | 0) != ($1944($1_1 + $4_1 | 0, 0) | 0)) {
    break label$1
   }
   while (1) {
    label$2 : {
     if (($0_1 | 0) <= 0) {
      $0_1 = 0;
      break label$2;
     }
     label$5 : {
      label$6 : {
       $1_1 = Math_imul($0_1, 36) + $4_1 | 0;
       $2_1 = $1944($1_1, 4);
       if (!$2_1) {
        break label$6
       }
       if (!($1937($2_1 + 11 | 0, 0) & 16)) {
        break label$6
       }
       $1_1 = $1944($1_1 - 32 | 0, 0);
       if (!$1_1) {
        break label$6
       }
       $2_1 = $1937($1_1 + 9 | 0, 0) & 4;
       $1_1 = !$2_1;
       $0_1 = $2_1 ? $0_1 : $0_1 - 1 | 0;
       break label$5;
      }
      $1_1 = 0;
     }
     if ($1_1) {
      continue
     }
    }
    break;
   };
   $132($0_1, 1);
   $0_1 = $1944($3, 7508);
   if (!$0_1) {
    break label$1
   }
   $1968($0_1 + 304 | 0, 0, 1);
  }
 }
 
 function $320($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 + -64 | 0;
  global$0 = $2_1;
  $3 = $1944(0, 73568);
  $5_1 = $1944($3, 7468);
  label$1 : {
   label$2 : {
    $4_1 = $1944($3, 7480);
    if (($4_1 | 0) < ($5_1 | 0)) {
     if (($1944($1944($3 + 7476 | 0, 0) + Math_imul($4_1, 36) | 0, 0) | 0) == ($0_1 | 0)) {
      break label$2
     }
    }
    $1973($3, 7300, 0);
    $0_1 = 0;
    break label$1;
   }
   label$4 : {
    if ($1_1 & 268435456) {
     $1973($2_1, 16, $1944($3, 7492));
     $21($2_1 + 32 | 0, 20, 12856, $2_1 + 16 | 0);
     break label$4;
    }
    $1973($2_1, 0, $0_1);
    $21($2_1 + 32 | 0, 20, 1603, $2_1);
   }
   $0_1 = $143($2_1 + 32 | 0, 0, $1_1 | 67108864);
   if (!$0_1) {
    $1_1 = $1944(0, 73568);
    $4_1 = $1944($1_1, 7508);
    $3 = $1944($1_1, 7080);
    label$7 : {
     if (($4_1 | 0) != ($3 | 0)) {
      break label$7
     }
     if (!$1937($1_1, 7597)) {
      break label$7
     }
     if ($1944($1_1, 7564)) {
      break label$7
     }
     $1973($1_1, 7600, $1944($1_1, 7600) | 2);
    }
    if ($1937($3 + 11 | 0, 0) & 1) {
     $1968($1_1, 6998, 1)
    }
    $142();
    $1968($1_1, 6998, 0);
   }
  }
  global$0 = $2_1 - -64 | 0;
  return $0_1;
 }
 
 function $321() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0;
  $0_1 = $1944(0, 73568);
  $2_1 = $1944($0_1, 7508);
  $1_1 = $1944($0_1, 7080);
  label$1 : {
   if (($2_1 | 0) != ($1_1 | 0)) {
    break label$1
   }
   if (!$1937($0_1, 7597)) {
    break label$1
   }
   if ($1944($0_1, 7564)) {
    break label$1
   }
   $1973($0_1, 7600, $1944($0_1, 7600) | 2);
  }
  if ($1937($1_1 + 11 | 0, 0) & 1) {
   $1968($0_1, 6998, 1)
  }
  $142();
  $1968($0_1, 6998, 0);
 }
 
 function $322($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $3 = $1944(0, 73568);
  if (($1944($3, 7468) | 0) <= ($1944($3, 7480) | 0)) {
   $1973($3, 7300, 0);
   return 0;
  }
  $5_1 = $0_1;
  $2_1 = $1944($3, 7080);
  $7_1 = $1944((($1944($2_1, 196) << 2) + $1944($2_1 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
  $2_1 = $7_1;
  while (1) {
   $6_1 = $5_1;
   $5_1 = $6_1 + 1 | 0;
   $4_1 = $1937($6_1, 0);
   if ($4_1) {
    label$5 : {
     if (($4_1 | 0) != 35) {
      break label$5
     }
     if (($1937($5_1, 0) | 0) != 35) {
      break label$5
     }
     $2_1 = ($1937($6_1, 2) | 0) == 35 ? $7_1 : $2_1;
    }
    $2_1 = $1944((($4_1 ^ $2_1 & 255) << 2) + 19360 | 0, 0) ^ $2_1 >>> 8;
   }
   if ($4_1) {
    continue
   }
   break;
  };
  $2_1 = $2_1 ^ -1;
  if (($1944($3, 7136) | 0) == ($2_1 | 0)) {
   $1973($3, 7140, $2_1)
  }
  if (($1944($3, 7196) | 0) == ($2_1 | 0)) {
   $1968($3, 7200, 1)
  }
  $1_1 = $1_1 | 321;
  if (($1944($3, 7112) | 0) == ($2_1 | 0)) {
   $75($2_1, 11, $0_1)
  }
  return $320($2_1, $1_1);
 }
 
 function $324($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  label$1 : {
   $3 = $1944(0, 73568);
   if (!$1937(($3 + ($1_1 & 31) | 0) + 1022 | 0, 0)) {
    break label$1
   }
   $2_1 = $1944($3, 7080);
   if (!$89(32)) {
    break label$1
   }
   label$2 : {
    if ($0_1) {
     $5_1 = $0_1;
     $7_1 = $1944((($1944($2_1, 196) << 2) + $1944($2_1 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
     $2_1 = $7_1;
     while (1) {
      $6_1 = $5_1;
      $5_1 = $6_1 + 1 | 0;
      $4_1 = $1937($6_1, 0);
      if ($4_1) {
       label$7 : {
        if (($4_1 | 0) != 35) {
         break label$7
        }
        if (($1937($5_1, 0) | 0) != 35) {
         break label$7
        }
        $2_1 = ($1937($6_1, 2) | 0) == 35 ? $7_1 : $2_1;
       }
       $2_1 = $1944((($4_1 ^ $2_1 & 255) << 2) + 19360 | 0, 0) ^ $2_1 >>> 8;
      }
      if ($4_1) {
       continue
      }
      break;
     };
     $2_1 = $2_1 ^ -1;
     if (($1944($3, 7136) | 0) == ($2_1 | 0)) {
      $1973($3, 7140, $2_1)
     }
     if (($1944($3, 7196) | 0) == ($2_1 | 0)) {
      $1968($3, 7200, 1)
     }
     if (($1944($3, 7112) | 0) != ($2_1 | 0)) {
      break label$2
     }
     $75($2_1, 11, $0_1);
     break label$2;
    }
    $2_1 = $1944($3, 7240);
   }
   $318($2_1, $1_1);
  }
 }
 
 function $329($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0;
  $4_1 = $1944(0, 73568);
  $1973($4_1, 7564, $1_1);
  $1973($4_1, 7512, $0_1);
  $1973($4_1, 7516, $2_1);
  $2_1 = $1944($4_1, 7508);
  $1973(($2_1 + ($1_1 << 2) | 0) + 756 | 0, 0, $0_1);
  $1_1 = $2_1 + ($1_1 << 4) | 0;
  $1982($1_1 + 772 | 0, 0, $1959($3 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
  $1982($1_1 + 764 | 0, 0, $1959($3, 0), i64toi32_i32$HIGH_BITS);
 }
 
 function $330($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0);
  $3 = $1944($1_1 + 292 | 0, 0);
  $2_1 = $1944(0, 73568);
  if (($1944($2_1, 7508) | 0) != ($1_1 | 0)) {
   $1968($2_1, 7573, 0)
  }
  $1973($2_1, 7564, $3);
  $1973($2_1, 7512, $0_1);
  $1973($2_1, 7508, $1_1);
  $1973($2_1, 7516, $1944($1_1 + 300 | 0, 0));
  $1973((($3 << 2) + $1_1 | 0) + 756 | 0, 0, $0_1);
  if (($1944($2_1, 7240) | 0) == ($0_1 | 0)) {
   $6_1 = $1963($2_1 + 7268 | 0, 0);
   $7_1 = $1963($2_1 + 7272 | 0, 0);
   $8 = $1963($2_1 + 7276 | 0, 0);
   $4_1 = $1963($1_1 + 224 | 0, 0);
   $0_1 = ($3 << 4) + $1_1 | 0;
   $9 = $1963($2_1 + 7280 | 0, 0);
   $5_1 = $1963($1_1 + 228 | 0, 0);
   $1986($0_1 + 776 | 0, 0, Math_fround($9 - $5_1));
   $1986($0_1 + 772 | 0, 0, Math_fround($8 - $4_1));
   $1986($0_1 + 768 | 0, 0, Math_fround($7_1 - $5_1));
   $1986($0_1 + 764 | 0, 0, Math_fround($6_1 - $4_1));
  }
  if (($1944($2_1, 7188) | 0) == 4) {
   $1968($2_1, 7571, 1);
   return;
  }
  $1968($2_1, 7570, 1);
 }
 
 function $331() {
  var $0_1 = 0, $1_1 = 0;
  $0_1 = $1944(0, 73568);
  if (!$1937($0_1, 7597)) {
   return 0
  }
  if (!$1944($0_1 + 7672 | 0, 0)) {
   $1_1 = !$1944($0_1 + 7760 | 0, 0)
  }
  return $1_1;
 }
 
 function $333($0_1, $1_1) {
  var $2_1 = Math_fround(0), $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = 0;
  $6_1 = $1944(0, 73568);
  if (!$1_1) {
   return $1963(($6_1 + ($0_1 << 2) | 0) + 768 | 0, 0)
  }
  $2_1 = $1963(($6_1 + ($0_1 << 2) | 0) + 5236 | 0, 0);
  if (!(!($2_1 < Math_fround(0.0)) | ($1_1 | 0) != 2)) {
   return $1963(($6_1 + ($0_1 << 2) | 0) + 5316 | 0, 0) >= Math_fround(0.0) ? Math_fround(1.0) : Math_fround(0.0)
  }
  if ($2_1 < Math_fround(0.0)) {
   return Math_fround(0.0)
  }
  label$4 : {
   switch ($1_1 - 1 | 0) {
   case 0:
    return $2_1 == Math_fround(0.0) ? Math_fround(1.0) : Math_fround(0.0);
   case 2:
    $0_1 = 1;
    label$9 : {
     if ($2_1 == Math_fround(0.0)) {
      break label$9
     }
     $3 = Math_fround($2_1 - $1963($6_1 + 24 | 0, 0));
     $0_1 = 0;
     if ($3 >= $2_1) {
      break label$9
     }
     $4_1 = Math_fround($1963($6_1 + 140 | 0, 0) * Math_fround(.7200000286102295));
     $5_1 = Math_fround($1963($6_1 + 144 | 0, 0) * Math_fround(.800000011920929));
     $0_1 = $4_1 > $3 & $2_1 >= $4_1;
     if ($5_1 <= Math_fround(0.0)) {
      break label$9
     }
     $1_1 = -1;
     if ($4_1 > $3) {
      $0_1 = $1_1
     } else {
      $3 = Math_fround(Math_fround($3 - $4_1) / $5_1);
      label$12 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $0_1 = ~~$3;
        break label$12;
       }
       $0_1 = -2147483648;
      }
     }
     if (!($2_1 < $4_1)) {
      $2_1 = Math_fround(Math_fround($2_1 - $4_1) / $5_1);
      label$15 : {
       if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
        $1_1 = ~~$2_1;
        break label$15;
       }
       $1_1 = -2147483648;
      }
     }
     $0_1 = $1_1 - $0_1 | 0;
    }
    return Math_fround($0_1 | 0);
   case 3:
    $0_1 = 1;
    label$17 : {
     if ($2_1 == Math_fround(0.0)) {
      break label$17
     }
     $3 = Math_fround($2_1 - $1963($6_1 + 24 | 0, 0));
     $0_1 = 0;
     if ($3 >= $2_1) {
      break label$17
     }
     $4_1 = Math_fround($1963($6_1 + 140 | 0, 0) * Math_fround(1.25));
     $5_1 = $1963($6_1 + 144 | 0, 0);
     $5_1 = Math_fround($5_1 + $5_1);
     $0_1 = $4_1 > $3 & $2_1 >= $4_1;
     if ($5_1 <= Math_fround(0.0)) {
      break label$17
     }
     $1_1 = -1;
     if ($4_1 > $3) {
      $0_1 = $1_1
     } else {
      $3 = Math_fround(Math_fround($3 - $4_1) / $5_1);
      label$20 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $0_1 = ~~$3;
        break label$20;
       }
       $0_1 = -2147483648;
      }
     }
     if (!($2_1 < $4_1)) {
      $2_1 = Math_fround(Math_fround($2_1 - $4_1) / $5_1);
      label$23 : {
       if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
        $1_1 = ~~$2_1;
        break label$23;
       }
       $1_1 = -2147483648;
      }
     }
     $0_1 = $1_1 - $0_1 | 0;
    }
    return Math_fround($0_1 | 0);
   case 4:
    $0_1 = 1;
    label$25 : {
     if ($2_1 == Math_fround(0.0)) {
      break label$25
     }
     $3 = Math_fround($2_1 - $1963($6_1 + 24 | 0, 0));
     $0_1 = 0;
     if ($3 >= $2_1) {
      break label$25
     }
     $4_1 = Math_fround($1963($6_1 + 140 | 0, 0) * Math_fround(.7200000286102295));
     $5_1 = Math_fround($1963($6_1 + 144 | 0, 0) * Math_fround(.30000001192092896));
     $0_1 = $4_1 > $3 & $2_1 >= $4_1;
     if ($5_1 <= Math_fround(0.0)) {
      break label$25
     }
     $1_1 = -1;
     if ($4_1 > $3) {
      $0_1 = $1_1
     } else {
      $3 = Math_fround(Math_fround($3 - $4_1) / $5_1);
      label$28 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $0_1 = ~~$3;
        break label$28;
       }
       $0_1 = -2147483648;
      }
     }
     if (!($2_1 < $4_1)) {
      $2_1 = Math_fround(Math_fround($2_1 - $4_1) / $5_1);
      label$31 : {
       if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
        $1_1 = ~~$2_1;
        break label$31;
       }
       $1_1 = -2147483648;
      }
     }
     $0_1 = $1_1 - $0_1 | 0;
    }
    $4_1 = Math_fround($0_1 | 0);
    break;
   default:
    break label$4;
   };
  }
  return $4_1;
 }
 
 function $334($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = $1944(0, 73568);
  label$1 : {
   label$2 : {
    if ($0_1 & 16) {
     $4_1 = 7241;
     $2_1 = -1;
     while (1) {
      $6_1 = $2_1;
      $7_1 = $4_1;
      $4_1 = $4_1 + 1 | 0;
      $2_1 = $1937($7_1, 0);
      if ($2_1) {
       label$7 : {
        if (($2_1 | 0) != 35) {
         break label$7
        }
        if (($1937($4_1, 0) | 0) != 35) {
         break label$7
        }
        $6_1 = ($1937($7_1, 2) | 0) == 35 ? -1 : $6_1;
       }
       $6_1 = $1944((($2_1 ^ $6_1 & 255) << 2) + 19360 | 0, 0) ^ $6_1 >>> 8;
      }
      $2_1 = $6_1;
      if (($7_1 | 0) != 7254) {
       continue
      }
      break;
     };
     $4_1 = 1;
     $7_1 = $2_1 ^ -1;
     $2_1 = 0;
     $6_1 = 0;
     break label$2;
    }
    $5_1 = $1944($1_1, 7080);
    $4_1 = $1944($1_1, 7240);
    label$10 : {
     label$11 : {
      if ($4_1) {
       if (($1944($1_1, 7136) | 0) != ($4_1 | 0)) {
        break label$1
       }
       $2_1 = $1944($1_1, 7192);
       $6_1 = ($2_1 | 0) != -1 ? $2_1 : 0;
       if (!$1937(($6_1 + $1_1 | 0) + 236 | 0, 0)) {
        break label$1
       }
       if ($1937($5_1, 143)) {
        return 0
       }
       $2_1 = 0;
       break label$11;
      }
      if (!$1937($1_1 + 236 | 0, 0)) {
       return 0
      }
      if ($1937($5_1, 143)) {
       return 0
      }
      label$16 : {
       if (!($1937($1_1 + 7248 | 0, 0) & 1)) {
        if (!$1944($1_1, 7136)) {
         return 0
        }
        if (!($0_1 & 8)) {
         return 0
        }
        if (($1944($1_1, 7184) | 0) == ($5_1 | 0)) {
         break label$16
        }
        break label$1;
       }
       if (!($0_1 & 8)) {
        break label$1
       }
      }
      $2_1 = $1_1 + 7252 | 0;
      $4_1 = $82($5_1, $2_1);
      $1973($1_1, 7240, $4_1);
      $2_1 = $91($2_1, $4_1);
      label$20 : {
       if (!$2_1) {
        break label$20
       }
       if (!$1937($1_1 + 992 | 0, 0)) {
        break label$20
       }
       $85($4_1, $5_1);
       $125($5_1);
      }
      $3 = 0;
      if (($1944($1_1, 7136) | 0) != ($4_1 | 0)) {
       break label$10
      }
     }
     $1968($1_1, 7149, $2_1);
     $3 = $6_1;
    }
    $6_1 = $3;
    if (($1944($1_1, 7136) | 0) != ($4_1 | 0)) {
     break label$1
    }
    $7_1 = $4_1;
    $2_1 = (($1944($5_1, 196) << 2) + $1944($5_1 + 204 | 0, 0) | 0) - 4 | 0;
    $4_1 = 0;
    $5_1 = $1944(0, 73568);
    if ($1937(($5_1 + $6_1 | 0) + 236 | 0, 0)) {
     $9 = $1963(($5_1 + ($6_1 << 2) | 0) + 1120 | 0, 0);
     $8 = $1963($5_1 + 48 | 0, 0);
     $4_1 = $9 >= Math_fround($8 * $8);
    }
    $2_1 = $1944($2_1, 0);
    $1983($5_1, 7168, -1, -1);
    $1982($5_1, 7156, -1, -1);
    $1970($5_1, 7596, 0);
    $1968($5_1, 7572, $1937($5_1, 7573));
   }
   $5_1 = $7_1;
   $7_1 = 0;
   if (!$4_1) {
    break label$1
   }
   label$22 : {
    if ($1937($1_1, 7876)) {
     break label$22
    }
    $3 = $1944(0, 73568);
    $1968($3, 7876, 0);
    $1982($3, 7892, 0, 0);
    $1973($3, 7968, 0);
    $1982($3, 7980, 0, -1);
    $1982($3, 7972, 2139095039, 0);
    $1982($3 + 7912 | 0, 0, 0, 0);
    $1982($3 + 7920 | 0, 0, 0, 0);
    $1982($3 + 7928 | 0, 0, 0, 0);
    $1982($3 + 7936 | 0, 0, 0, 0);
    $1968($3 + 7944 | 0, 0, 0);
    $1982($3 + 7900 | 0, 0, 0, 0);
    $1973($3 + 7908 | 0, 0, -1);
    $1969($3 + 7945 | 0, 0, 0);
    $7_1 = $1944($3 + 8e3 | 0, 0);
    if ($7_1) {
     $1982($3, 7992, 0, 0);
     if ($3) {
      $4_1 = $3 + 876 | 0;
      $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $7_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     $1973($3, 8e3, 0);
    }
    $1982($3, 8004, 0, 0);
    $1982($3 + 8012 | 0, 0, 0, 0);
    $1973($1_1 + 7904 | 0, 0, $2_1);
    $1973($1_1 + 7900 | 0, 0, $5_1);
    $1973($1_1, 7888, $6_1);
    $1973($1_1, 7880, $0_1);
    $1968($1_1, 7876, 1);
    if (($1944($1_1, 7136) | 0) != ($5_1 | 0)) {
     break label$22
    }
    $1968($1_1, 7150, 1);
   }
   $1968($1_1, 7877, 1);
   $1973($1_1, 7884, $1944($1_1, 6984));
   label$25 : {
    if ($0_1 & 1) {
     break label$25
    }
    $141(0);
    if (!$1944($1_1, 7980)) {
     break label$25
    }
    if (!($1937($1_1 + 7969 | 0, 0) & 16)) {
     break label$25
    }
    $2_1 = $1944($1_1, 7080);
    $1968($2_1, 172, 1);
    $1968($2_1, 145, 1);
    $1968($2_1, 143, 1);
   }
   if (!($0_1 & 18)) {
    $0_1 = $1_1 + 7248 | 0;
    $1973($0_1, 0, $1944($0_1, 0) & -2);
   }
   $7_1 = 1;
  }
  return $7_1 | 0;
 }
 
 function $335() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = $1944(0, 73568);
  if (!($1937($1_1, 7880) & 1)) {
   $142()
  }
  if (($1944($1_1 + 7908 | 0, 0) | 0) == -1) {
   $0_1 = $1944(0, 73568);
   $1968($0_1, 7876, 0);
   $1982($0_1, 7892, 0, 0);
   $1973($0_1, 7968, 0);
   $1982($0_1, 7980, 0, -1);
   $1982($0_1, 7972, 2139095039, 0);
   $1982($0_1 + 7912 | 0, 0, 0, 0);
   $1982($0_1 + 7920 | 0, 0, 0, 0);
   $1982($0_1 + 7928 | 0, 0, 0, 0);
   $1982($0_1 + 7936 | 0, 0, 0, 0);
   $1968($0_1 + 7944 | 0, 0, 0);
   $1982($0_1 + 7900 | 0, 0, 0, 0);
   $1973($0_1 + 7908 | 0, 0, -1);
   $1969($0_1 + 7945 | 0, 0, 0);
   $2_1 = $1944($0_1 + 8e3 | 0, 0);
   if ($2_1) {
    $1982($0_1, 7992, 0, 0);
    if ($0_1) {
     $3 = $0_1 + 876 | 0;
     $1973($3, 0, $1944($3, 0) - 1 | 0);
    }
    ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    $1973($0_1, 8e3, 0);
   }
   $1982($0_1, 8004, 0, 0);
   $1982($0_1 + 8012 | 0, 0, 0, 0);
  }
  $1968($1_1, 7877, 0);
 }
 
 function $336($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $4_1 = $1944(0, 73568);
  label$1 : {
   if ($3 >>> 0 >= 2) {
    if (($1944($4_1 + 7908 | 0, 0) | 0) != -1) {
     break label$1
    }
   }
   $1699($4_1 + 7912 | 0, $0_1, 32);
   $1968($4_1 + 7944 | 0, 0, 0);
   $0_1 = $1944($4_1 + 7996 | 0, 0);
   label$3 : {
    if (($0_1 | 0) >= 0) {
     break label$3
    }
    $3 = $0_1;
    $0_1 = $0_1 + (($0_1 | 0) / 2 | 0) | 0;
    $0_1 = ($0_1 | 0) > 0 ? $0_1 : 0;
    if (($3 | 0) >= ($0_1 | 0)) {
     break label$3
    }
    if ($4_1) {
     $3 = $4_1 + 876 | 0;
     $1973($3, 0, $1944($3, 0) + 1 | 0);
    }
    $3 = (((wasm2js_i32$1 = $0_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
    $5_1 = $1944($4_1 + 8e3 | 0, 0);
    if ($5_1) {
     $1602($3, $5_1, $1944($4_1, 7992));
     $5_1 = $1944($4_1, 8e3);
     label$6 : {
      if (!$5_1) {
       break label$6
      }
      $6_1 = $1944(0, 73568);
      if (!$6_1) {
       break label$6
      }
      $6_1 = $6_1 + 876 | 0;
      $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $5_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $1973($4_1, 7996, $0_1);
    $1973($4_1, 8e3, $3);
   }
   $1973($4_1, 7992, 0);
   label$7 : {
    if ($2_1 >>> 0 >= 17) {
     $3 = $1944($4_1, 7996);
     label$9 : {
      if (($3 | 0) >= ($2_1 | 0)) {
       break label$9
      }
      if ($3) {
       $0_1 = $3 + (($3 | 0) / 2 | 0) | 0
      } else {
       $0_1 = 8
      }
      $0_1 = ($0_1 | 0) > ($2_1 | 0) ? $0_1 : $2_1;
      if (($0_1 | 0) <= ($3 | 0)) {
       break label$9
      }
      $3 = $1944(0, 73568);
      if ($3) {
       $3 = $3 + 876 | 0;
       $1973($3, 0, $1944($3, 0) + 1 | 0);
      }
      $3 = (((wasm2js_i32$1 = $0_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
      $5_1 = $1944($4_1 + 8e3 | 0, 0);
      if ($5_1) {
       $1602($3, $5_1, $1944($4_1, 7992));
       $5_1 = $1944($4_1, 8e3);
       label$14 : {
        if (!$5_1) {
         break label$14
        }
        $6_1 = $1944(0, 73568);
        if (!$6_1) {
         break label$14
        }
        $6_1 = $6_1 + 876 | 0;
        $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
       }
       ((wasm2js_i32$2 = $5_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      }
      $1973($4_1, 7996, $0_1);
      $1973($4_1, 8e3, $3);
     }
     $1973($4_1, 7992, $2_1);
     $0_1 = $1944($4_1 + 8e3 | 0, 0);
     $1973($4_1, 7892, $0_1);
     $1602($0_1, $1_1, $2_1);
     break label$7;
    }
    if ($2_1) {
     $1982($4_1, 8004, 0, 0);
     $1982($4_1 + 8012 | 0, 0, 0, 0);
     $0_1 = $4_1 + 8004 | 0;
     $1973($4_1, 7892, $0_1);
     $1602($0_1, $1_1, $2_1);
     break label$7;
    }
    $1973($4_1, 7892, 0);
   }
   $1973($4_1 + 7896 | 0, 0, $2_1);
  }
  $0_1 = $1944($4_1, 6984);
  $1973($4_1 + 7908 | 0, 0, $0_1);
  $1_1 = $1944($4_1, 7984);
  return ($1_1 | 0) == ($0_1 | 0) | ($1_1 | 0) == ($0_1 - 1 | 0);
 }
 
 function $337() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0;
  $0_1 = $1944(0, 73568);
  if (!$1937($0_1, 7876)) {
   return 0
  }
  $2_1 = $1944($0_1 + 7248 | 0, 0);
  if (!($2_1 & 1)) {
   return 0
  }
  $1_1 = $1944($0_1, 7088);
  if (!$1_1) {
   return 0
  }
  $3 = $1944($0_1, 7080);
  if (($1944($3, 736) | 0) != ($1944($1_1, 736) | 0)) {
   return 0
  }
  $1_1 = 0;
  if (!$1937($3, 143)) {
   $2_1 = ($0_1 + 7240 | 0) + ($2_1 & 2 ? 44 : 12) | 0;
   $1_1 = $1944($0_1, 7240);
   if (!$1_1) {
    $1_1 = $82($3, $2_1)
   }
   $3 = $1944($0_1 + 7900 | 0, 0);
   if (($1_1 | 0) == ($3 | 0)) {
    return ($1_1 | 0) != ($3 | 0) | 0
   }
   $1982($0_1, 7948, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
   $1982($0_1 + 7956 | 0, 0, $1959($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1973($0_1, 7964, $1_1);
   $1968($0_1, 7878, 1);
   $1_1 = 1;
  }
  return $1_1 | 0;
 }
 
 function $338($0_1, $1_1) {
  var $2_1 = Math_fround(0), $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $3 = $1944(0, 73568);
  $7_1 = $1944($3, 7080);
  label$1 : {
   if ($0_1) {
    if (($1944($3 + 7908 | 0, 0) | 0) == -1) {
     break label$1
    }
    if ($1695($0_1, $3 + 7912 | 0)) {
     break label$1
    }
   }
   $8 = $1944($3, 7980);
   $5_1 = $1944($3, 7964);
   $0_1 = ($8 | 0) == ($5_1 | 0);
   $2_1 = $1963($3 + 7956 | 0, 0);
   $9 = $1963($3, 7948);
   $10_1 = $1963($3 + 7960 | 0, 0);
   $11_1 = $1963($3 + 7952 | 0, 0);
   $12_1 = Math_fround(Math_fround($2_1 - $9) * Math_fround($10_1 - $11_1));
   if ($12_1 <= $1963($3, 7972)) {
    $1973($3, 7976, $5_1);
    $1973($3, 7968, $1_1);
    $1986($3, 7972, $12_1);
   }
   $1968($3 + 7945 | 0, 0, $0_1);
   if (!(($1944($3, 7880) | $1_1) & 2048 | ($5_1 | 0) != ($8 | 0))) {
    $7_1 = $1944($7_1, 580);
    $1986($4_1, 12, Math_fround($11_1 + Math_fround(-3.5)));
    $1986($4_1, 8, Math_fround($9 + Math_fround(-3.5)));
    $1986($4_1, 4, Math_fround($10_1 + Math_fround(3.5)));
    $1986($4_1, 0, Math_fround($2_1 + Math_fround(3.5)));
    $2_1 = $1963($3 + 6388 | 0, 0);
    $2_1 = Math_fround(Math_fround(($2_1 < Math_fround(0.0) ? Math_fround(0.0) : $2_1 > Math_fround(1.0) ? Math_fround(1.0) : $2_1) * Math_fround(255.0)) + Math_fround(.5));
    label$6 : {
     if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$2_1;
      break label$6;
     }
     $0_1 = -2147483648;
    }
    $0_1 = $0_1 << 8;
    $2_1 = $1963($3 + 6384 | 0, 0);
    $2_1 = Math_fround(Math_fround(($2_1 < Math_fround(0.0) ? Math_fround(0.0) : $2_1 > Math_fround(1.0) ? Math_fround(1.0) : $2_1) * Math_fround(255.0)) + Math_fround(.5));
    label$8 : {
     if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
      $6_1 = ~~$2_1;
      break label$8;
     }
     $6_1 = -2147483648;
    }
    $0_1 = $6_1 | $0_1;
    $2_1 = $1963($3 + 6392 | 0, 0);
    $2_1 = Math_fround(Math_fround(($2_1 < Math_fround(0.0) ? Math_fround(0.0) : $2_1 > Math_fround(1.0) ? Math_fround(1.0) : $2_1) * Math_fround(255.0)) + Math_fround(.5));
    label$10 : {
     if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
      $6_1 = ~~$2_1;
      break label$10;
     }
     $6_1 = -2147483648;
    }
    $0_1 = $0_1 | $6_1 << 16;
    $13 = $4_1 + 8 | 0;
    $2_1 = Math_fround($1963($3 + 6396 | 0, 0) * $1963($3, 5416));
    $2_1 = Math_fround(Math_fround(($2_1 < Math_fround(0.0) ? Math_fround(0.0) : $2_1 > Math_fround(1.0) ? Math_fround(1.0) : $2_1) * Math_fround(255.0)) + Math_fround(.5));
    label$12 : {
     if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
      $6_1 = ~~$2_1;
      break label$12;
     }
     $6_1 = -2147483648;
    }
    $400($7_1, $13, $4_1, $0_1 | $6_1 << 24, Math_fround(0.0), 0, Math_fround(2.0));
   }
   $1973($3, 7984, $1944($3, 6984));
   label$14 : {
    if (($5_1 | 0) == ($8 | 0)) {
     $0_1 = $1937(($1944(0, 73568) + $1944($3, 7888) | 0) + 236 | 0, 0);
     $1968($3 + 7946 | 0, 0, !$0_1);
     if ($1_1 & 1024) {
      break label$14
     }
     $5_1 = 0;
     if (!$0_1) {
      break label$14
     }
     break label$1;
    }
    $1968($3 + 7946 | 0, 0, 0);
    $5_1 = 0;
    if (!($1_1 & 1024)) {
     break label$1
    }
   }
   $5_1 = $3 + 7892 | 0;
  }
  global$0 = $4_1 + 16 | 0;
  return $5_1;
 }
 
 function $339() {
  $1968($1944(0, 73568), 7878, 0);
 }
 
 function $341($0_1, $1_1) {
  var $2_1 = 0;
  $2_1 = $1944(0, 73568);
  $1973($2_1, 12224, $1_1);
  $1973($2_1, 12220, $0_1);
 }
 
 function $342($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = $1944(0, 73568);
  if (!$1937($1_1, 12196)) {
   $1973($1_1, 12200, 1);
   $1968($1_1, 12196, 1);
   $1982($1_1, 12220, 0, 0);
   $1973($1_1, 12236, $1944($1944($1_1, 7080) + 344 | 0, 0));
   if (($0_1 | 0) < 0) {
    $0_1 = $1944($1_1, 12244)
   }
   $1968($1_1, 12232, 1);
   $1973($1_1, 12228, 2139095039);
   $1973($1_1, 12240, $0_1);
   $1973($1_1, 12204, $1944(0, 71168));
  }
 }
 
 function $344($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = $1944(0, 73568);
  if (!$1937($1_1, 12196)) {
   $1973($1_1, 12200, 4);
   $1968($1_1, 12196, 1);
   $1982($1_1, 12220, 0, 0);
   $1973($1_1, 12236, $1944($1944($1_1, 7080) + 344 | 0, 0));
   if (($0_1 | 0) < 0) {
    $0_1 = $1944($1_1, 12244)
   }
   $1968($1_1, 12232, 1);
   $1973($1_1, 12228, 2139095039);
   $1973($1_1, 12240, $0_1);
  }
 }
 
 function $345() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = $1944(0, 73568);
  $153(4625);
  $1982($2_1, 8, 0, 0);
  $4_1 = $571(14105, $2_1 + 8 | 0);
  $5_1 = $1944(0, 73568);
  $0_1 = $1944($5_1, 7080);
  $1968($0_1, 140, 1);
  if (!$1937($0_1, 143)) {
   $3 = $1963($5_1 + 5492 | 0, 0);
   $1986($0_1 + 212 | 0, 0, $1963($0_1 + 220 | 0, 0));
   $1982($0_1 + 248 | 0, 0, $1959($0_1 + 256 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1986($0_1 + 264 | 0, 0, $1963($0_1 + 268 | 0, 0));
   $1986($0_1, 208, Math_fround($3 + $1963($0_1 + 216 | 0, 0)));
  }
  $1982($2_1, 8, 0, 0);
  $5_1 = $571(11290, $2_1 + 8 | 0);
  $6_1 = $1944(0, 73568);
  $0_1 = $1944($6_1, 7080);
  $1968($0_1, 140, 1);
  if (!$1937($0_1, 143)) {
   $3 = $1963($6_1 + 5492 | 0, 0);
   $1986($0_1 + 212 | 0, 0, $1963($0_1 + 220 | 0, 0));
   $1982($0_1 + 248 | 0, 0, $1959($0_1 + 256 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1986($0_1 + 264 | 0, 0, $1963($0_1 + 268 | 0, 0));
   $1986($0_1, 208, Math_fround($3 + $1963($0_1 + 216 | 0, 0)));
  }
  $1982($2_1, 8, 0, 0);
  $6_1 = $571(11738, $2_1 + 8 | 0);
  $7_1 = $1944(0, 73568);
  $0_1 = $1944($7_1, 7080);
  $1968($0_1, 140, 1);
  if (!$1937($0_1, 143)) {
   $3 = $1963($7_1 + 5492 | 0, 0);
   $1986($0_1 + 212 | 0, 0, $1963($0_1 + 220 | 0, 0));
   $1982($0_1 + 248 | 0, 0, $1959($0_1 + 256 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1986($0_1 + 264 | 0, 0, $1963($0_1 + 268 | 0, 0));
   $1986($0_1, 208, Math_fround($3 + $1963($0_1 + 216 | 0, 0)));
  }
  $224(1, 1);
  $0_1 = $1944(0, 73568);
  $1973($0_1 + 7224 | 0, 0, 1117782016);
  $1973($0_1, 7220, $1944($0_1, 7220) | 1);
  $659(8596, $1_1 + 12244 | 0, 0, 9, 0, 0);
  $0_1 = $1944(0, 73568);
  $1_1 = $1944($0_1, 7444);
  $1973($0_1, 7444, $1_1 - 1 | 0);
  $1973($0_1, 7216, $1944(($1944($0_1 + 7452 | 0, 0) + ($1_1 << 2) | 0) - 8 | 0, 0));
  $1_1 = $1944($0_1, 7080);
  $1973($1_1, 196, $1944($1_1, 196) - 1 | 0);
  label$4 : {
   if (!$4_1) {
    break label$4
   }
   if ($1937($0_1, 12196)) {
    break label$4
   }
   $1973($0_1, 12200, 1);
   $1968($0_1, 12196, 1);
   $1982($0_1, 12220, 0, 0);
   $1973($0_1, 12236, $1944($1_1 + 344 | 0, 0));
   $1973($0_1, 12240, $1944($0_1, 12244));
   $1968($0_1, 12232, 1);
   $1973($0_1, 12228, 2139095039);
   $1973($0_1, 12204, $1944(0, 71168));
  }
  label$5 : {
   if (!$5_1) {
    break label$5
   }
   if ($1937($0_1, 12196)) {
    break label$5
   }
   $1_1 = $1944($0_1 + 36 | 0, 0);
   if (!$1_1) {
    break label$5
   }
   if (!$1937($1_1, 0)) {
    break label$5
   }
   $4_1 = $1622($1_1, 13565);
   if (!$4_1) {
    break label$5
   }
   $1_1 = $1944(0, 73568);
   $1973($1_1, 12200, 2);
   $1968($1_1, 12196, 1);
   $1982($1_1, 12220, 0, 0);
   $1973($1_1, 12236, $1944($1944($1_1, 7080) + 344 | 0, 0));
   $1968($1_1, 12232, 1);
   $1973($1_1, 12228, 2139095039);
   $1973($1_1, 12240, $1944($1_1, 12244));
   $1973($0_1, 12204, $4_1);
  }
  label$6 : {
   if (!$6_1) {
    break label$6
   }
   $0_1 = $1944(0, 73568);
   if ($1937($0_1, 12196)) {
    break label$6
   }
   $1973($0_1, 12200, 4);
   $1968($0_1, 12196, 1);
   $1982($0_1, 12220, 0, 0);
   $1973($0_1, 12236, $1944($1944($0_1, 7080) + 344 | 0, 0));
   $1968($0_1, 12232, 1);
   $1973($0_1, 12228, 2139095039);
   $1973($0_1, 12240, $1944($0_1, 12244));
  }
  global$0 = $2_1 + 16 | 0;
 }
 
 function $346() {
  var $0_1 = 0;
  $0_1 = $1944(0, 73568);
  if ($1963($0_1, 12128) <= Math_fround(0.0)) {
   $1986($0_1, 12128, $1963($0_1 + 28 | 0, 0))
  }
 }
 
 function $349($0_1) {
  var $1_1 = Math_fround(0), $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0;
  $3 = global$0 + -64 | 0;
  global$0 = $3;
  $2_1 = $1944(0, 73568);
  $6_1 = $1944($2_1, 7300);
  if (!($6_1 & 2)) {
   $1973($2_1 + 7332 | 0, 0, 0);
   $1973($2_1, 7300, $6_1 | 2);
   $1973($2_1 + 7308 | 0, 0, 4);
   $1986($2_1 + 7336 | 0, 0, Math_fround($1963($2_1, 6468) * Math_fround(8.0)));
  }
  label$2 : {
   if (!$143(8100, $0_1, 0)) {
    break label$2
   }
   $0_1 = $1944($1944(0, 73568), 7080);
   $1968($0_1, 140, 1);
   if (($1939($0_1, 150) | 0) > 1) {
    break label$2
   }
   $0_1 = $1944($2_1, 7120);
   $1973($3, 52, $1944($2_1, 7136));
   $1973($3, 48, $0_1);
   $557(14514, $3 + 48 | 0);
   $6_1 = $1944(0, 73568);
   $0_1 = $1944($6_1, 7080);
   $1968($0_1, 140, 1);
   if (!$1937($0_1, 143)) {
    $1_1 = $1963($6_1 + 5492 | 0, 0);
    $1986($0_1 + 212 | 0, 0, $1963($0_1 + 220 | 0, 0));
    $1982($0_1 + 248 | 0, 0, $1959($0_1 + 256 | 0, 0), i64toi32_i32$HIGH_BITS);
    $1986($0_1 + 264 | 0, 0, $1963($0_1 + 268 | 0, 0));
    $1986($0_1, 208, Math_fround($1_1 + $1963($0_1 + 216 | 0, 0)));
   }
   $350(16681);
   $1973($2_1, 12272, $1944($2_1, 6984));
   if (($1944($2_1 + 12284 | 0, 0) | 0) <= 0) {
    break label$2
   }
   $1982($3, 56, 0, 0);
   if (!$490(11393, 3, 1920, $3 + 56 | 0, Math_fround(0.0))) {
    break label$2
   }
   $0_1 = $1944(0, 73568);
   $474($3 + 56 | 0, $1944($0_1, 6464), $1963($0_1, 6468), Math_fround(3402823466385288598117041.0e14), Math_fround(-1.0), 15090, 0, 0);
   $1_1 = Math_fround($1963($3, 56) + Math_fround(.9999899864196777));
   label$4 : {
    if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
     $0_1 = ~~$1_1;
     break label$4;
    }
    $0_1 = -2147483648;
   }
   $1_1 = Math_fround($0_1 | 0);
   $509(12685, 16, $1_1, 0);
   $509(15056, 8, Math_fround(0.0), 0);
   $509(3128, 16, $1_1, 0);
   $528();
   if (($1944($2_1, 12284) | 0) > 0) {
    $0_1 = 0;
    while (1) {
     $5_1 = $0_1 << 6;
     $7_1 = $1944($2_1, 12292);
     $521();
     $4_1 = 0;
     $6_1 = $0_1;
     if ($0_1) {
      $4_1 = $1944(($1944($2_1, 12292) + $5_1 | 0) + -64 | 0, 0)
     }
     $5_1 = $5_1 + $7_1 | 0;
     $1973($3, 32, $4_1);
     $557(14544, $3 + 32 | 0);
     $521();
     $0_1 = 0;
     label$9 : {
      if ($6_1) {
       break label$9
      }
      $0_1 = 0;
      if ($1937($5_1, 6) & 255) {
       break label$9
      }
      $7_1 = $1944($5_1, 0);
      $0_1 = $1944(0, 73568);
      $9 = $1944($0_1 + 7064 | 0, 0);
      $4_1 = $9;
      $10_1 = $1944($0_1, 7056);
      $0_1 = $10_1;
      if ($0_1) {
       while (1) {
        $8 = $0_1 >>> 1 | 0;
        $11_1 = ($8 << 3) + $4_1 | 0;
        $12_1 = $1944($11_1, 0) >>> 0 < $7_1 >>> 0;
        $4_1 = $12_1 ? $11_1 + 8 | 0 : $4_1;
        $0_1 = $12_1 ? $0_1 + ($8 ^ -1) | 0 : $8;
        if ($0_1) {
         continue
        }
        break;
       }
      }
      $0_1 = 0;
      if (($4_1 | 0) == (($10_1 << 3) + $9 | 0)) {
       break label$9
      }
      $0_1 = 0;
      if (($1944($4_1, 0) | 0) != ($7_1 | 0)) {
       break label$9
      }
      $0_1 = $1944($4_1, 4);
     }
     label$15 : {
      if ($0_1) {
       $1973($3, 16, $1944($0_1, 0));
       $557(13947, $3 + 16 | 0);
       break label$15;
      }
      if ($1937($5_1, 5)) {
       $556($5_1 + 6 | 0);
       break label$15;
      }
      if (($1944($2_1, 12276) | 0) < ($1944($2_1, 12284) | 0)) {
       break label$15
      }
      $556(15508);
     }
     $521();
     $1973($3, 0, $1944($5_1, 0));
     $557(14544, $3);
     if (($6_1 | 0) == ($1944($2_1, 12284) - 1 | 0)) {
      $5_1 = $1944(0, 73568);
      $1_1 = $1963($5_1 + 6004 | 0, 0);
      $1_1 = Math_fround(Math_fround(($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1 > Math_fround(1.0) ? Math_fround(1.0) : $1_1) * Math_fround(255.0)) + Math_fround(.5));
      label$19 : {
       if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
        $0_1 = ~~$1_1;
        break label$19;
       }
       $0_1 = -2147483648;
      }
      $4_1 = $0_1 << 8;
      $1_1 = $1963($5_1 + 6e3 | 0, 0);
      $1_1 = Math_fround(Math_fround(($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1 > Math_fround(1.0) ? Math_fround(1.0) : $1_1) * Math_fround(255.0)) + Math_fround(.5));
      label$21 : {
       if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
        $0_1 = ~~$1_1;
        break label$21;
       }
       $0_1 = -2147483648;
      }
      $4_1 = $0_1 | $4_1;
      $1_1 = $1963($5_1 + 6008 | 0, 0);
      $1_1 = Math_fround(Math_fround(($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1 > Math_fround(1.0) ? Math_fround(1.0) : $1_1) * Math_fround(255.0)) + Math_fround(.5));
      label$23 : {
       if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
        $0_1 = ~~$1_1;
        break label$23;
       }
       $0_1 = -2147483648;
      }
      $4_1 = $4_1 | $0_1 << 16;
      $1_1 = Math_fround($1963($5_1 + 6012 | 0, 0) * $1963($5_1, 5416));
      $1_1 = Math_fround(Math_fround(($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1 > Math_fround(1.0) ? Math_fround(1.0) : $1_1) * Math_fround(255.0)) + Math_fround(.5));
      label$25 : {
       if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
        $0_1 = ~~$1_1;
        break label$25;
       }
       $0_1 = -2147483648;
      }
      $515(3, $4_1 | $0_1 << 24, -1);
     }
     $0_1 = $6_1 + 1 | 0;
     if (($1944($2_1, 12284) | 0) > ($0_1 | 0)) {
      continue
     }
     break;
    };
   }
   $503();
  }
  $142();
  global$0 = $3 - -64 | 0;
 }
 
 function $350($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = Math_fround(0);
  $561(18622, 0);
  if ($89(0)) {
   $141(0);
   $232(Math_fround($1963($1944(0, 73568), 6468) * Math_fround(35.0)));
   $556($0_1);
   $0_1 = $1944($1944(0, 73568), 7080);
   $1968($0_1, 140, 1);
   $3 = $1944($0_1 + 412 | 0, 0);
   $1_1 = $0_1 + 404 | 0;
   $2_1 = $1944($1_1, 0) - 1 | 0;
   $4_1 = $1963($3 + ($2_1 << 2) | 0, 0);
   $1973($1_1, 0, $2_1);
   $1986($0_1 + 388 | 0, 0, $4_1);
   $142();
  }
 }
 
 function $351($0_1, $1_1, $2_1, $3) {
  var $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0);
  folding_inner2 : {
   folding_inner1 : {
    folding_inner0 : {
     label$1 : {
      switch ($2_1 | 0) {
      case 0:
       $1982($0_1, 0, $1959($1_1, 212), i64toi32_i32$HIGH_BITS);
       $1982($0_1 + 8 | 0, 0, $1959($1_1 + 220 | 0, 0), i64toi32_i32$HIGH_BITS);
       return;
      case 1:
       $1982($0_1, 0, $1959($1_1, 228), i64toi32_i32$HIGH_BITS);
       $1982($0_1 + 8 | 0, 0, $1959($1_1 + 236 | 0, 0), i64toi32_i32$HIGH_BITS);
       return;
      case 2:
       $1982($0_1, 0, $1959($1_1, 244), i64toi32_i32$HIGH_BITS);
       $1982($0_1 + 8 | 0, 0, $1959($1_1 + 252 | 0, 0), i64toi32_i32$HIGH_BITS);
       return;
      case 3:
       $1982($0_1, 0, $1959($1_1, 324), i64toi32_i32$HIGH_BITS);
       $1982($0_1 + 8 | 0, 0, $1959($1_1 + 332 | 0, 0), i64toi32_i32$HIGH_BITS);
       return;
      case 4:
       $1982($0_1, 0, $1959($1_1, 260), i64toi32_i32$HIGH_BITS);
       $1982($0_1 + 8 | 0, 0, $1959($1_1 + 268 | 0, 0), i64toi32_i32$HIGH_BITS);
       return;
      case 5:
       $1982($0_1, 0, $1959($1_1, 276), i64toi32_i32$HIGH_BITS);
       $1982($0_1 + 8 | 0, 0, $1959($1_1 + 284 | 0, 0), i64toi32_i32$HIGH_BITS);
       return;
      case 6:
       $2_1 = $1944($1_1, 16) + Math_imul($3, 104) | 0;
       $6_1 = $1963($2_1, 8);
       $4_1 = $1963($2_1, 12);
       $5_1 = $1963($1_1 + 264 | 0, 0);
       $1986($0_1 + 12 | 0, 0, Math_fround($5_1 + $1963($1_1, 180)));
       break folding_inner1;
      case 7:
       $2_1 = $1944($1_1, 16) + Math_imul($3, 104) | 0;
       $6_1 = $1963($2_1, 52);
       $4_1 = $1963($1_1 + 248 | 0, 0);
       $5_1 = $1963($2_1, 56);
       $1986($0_1 + 12 | 0, 0, $1963($1_1 + 256 | 0, 0));
       $1986($0_1, 8, $5_1);
       $1986($0_1, 4, $4_1);
       break folding_inner2;
      case 8:
       $1_1 = $1944($1_1, 16) + Math_imul($3, 104) | 0;
       $1982($0_1, 0, $1959($1_1, 32), i64toi32_i32$HIGH_BITS);
       $1982($0_1 + 8 | 0, 0, $1959($1_1 + 40 | 0, 0), i64toi32_i32$HIGH_BITS);
       return;
      case 9:
       $2_1 = $1944($1_1, 16) + Math_imul($3, 104) | 0;
       $6_1 = $1963($2_1, 52);
       $4_1 = $1963($2_1, 72);
       break folding_inner0;
      case 10:
       $2_1 = $1944($1_1, 16) + Math_imul($3, 104) | 0;
       $6_1 = $1963($2_1, 52);
       $4_1 = $1963($2_1, 76);
       break folding_inner0;
      case 11:
       $2_1 = $1944($1_1, 16) + Math_imul($3, 104) | 0;
       $6_1 = $1963($2_1, 52);
       $4_1 = $1963($2_1, 64);
       break folding_inner0;
      case 12:
       $2_1 = $1944($1_1, 16) + Math_imul($3, 104) | 0;
       $6_1 = $1963($2_1, 52);
       $4_1 = $1963($1_1 + 264 | 0, 0);
       $5_1 = $1963($2_1, 68);
       $7_1 = $1963($1_1, 184);
       $1986($0_1 + 12 | 0, 0, $1963($1_1 + 272 | 0, 0));
       $1986($0_1, 8, $5_1);
       $1986($0_1, 4, Math_fround($4_1 + $7_1));
       break folding_inner2;
      default:
       break label$1;
      };
     }
     $1982($0_1, 0, 0, 0);
     $1982($0_1 + 8 | 0, 0, 0, 0);
     return;
    }
    $5_1 = $1963($1_1 + 264 | 0, 0);
    $1986($0_1 + 12 | 0, 0, Math_fround($5_1 + $1963($1_1, 184)));
   }
   $1986($0_1, 8, $4_1);
   $1986($0_1, 4, $5_1);
  }
  $1986($0_1, 0, $6_1);
 }
 
 function $352($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = 0, $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0);
  $2_1 = global$0 - 400 | 0;
  global$0 = $2_1;
  label$1 : {
   if (!$0_1) {
    $1973($2_1, 0, $1_1);
    $567(14873, $2_1);
    break label$1;
   }
   $5_1 = $1944(0, 73568);
   $7_1 = ($1944($5_1, 7508) | 0) == ($0_1 | 0);
   $3 = 19354;
   $4_1 = $1937($0_1, 139);
   if (!$4_1) {
    $56(0, $5_1 + 5632 | 0);
    $3 = 17707;
   }
   $5_1 = $1944($0_1, 0);
   $1973($2_1, 376, $3);
   $1973($2_1, 372, $5_1);
   $1973($2_1, 368, $1_1);
   $5_1 = $712($1_1, $7_1, 5679, $2_1 + 368 | 0);
   if (!$4_1) {
    $1_1 = $1944(0, 73568);
    $3 = (Math_imul($1944($1_1, 7396), 20) + $1944($1_1 + 7404 | 0, 0) | 0) - 20 | 0;
    $7_1 = ($1944($3, 0) << 4) + $1_1 | 0;
    $1982($7_1 + 5624 | 0, 0, $1959($3 + 12 | 0, 0), i64toi32_i32$HIGH_BITS);
    $1982($7_1 + 5616 | 0, 0, $1959($3, 4), i64toi32_i32$HIGH_BITS);
    $1973($1_1, 7396, $1944($1_1, 7396) - 1 | 0);
   }
   if (!(!$4_1 | !$89(0))) {
    $1_1 = $92($1944($1944($1944(0, 73568) + 7504 | 0, 0), 0), 1, 11768);
    $6_1 = $1963($0_1, 20);
    $8 = $1963($0_1, 12);
    $1986($2_1, 396, Math_fround($1963($0_1 + 16 | 0, 0) + $1963($0_1 + 24 | 0, 0)));
    $1986($2_1, 392, Math_fround($8 + $6_1));
    $400($1_1, $0_1 + 12 | 0, $2_1 + 392 | 0, -16711681, Math_fround(0.0), 0, Math_fround(1.0));
   }
   if (!$5_1) {
    break label$1
   }
   if ($1937($0_1, 804)) {
    $561(17230, 0)
   }
   $1_1 = $1944($0_1, 8);
   $355($0_1, $1944($0_1, 580));
   $6_1 = $1963($0_1 + 16 | 0, 0);
   $8 = $1963($0_1 + 24 | 0, 0);
   $10_1 = $1963($0_1 + 40 | 0, 0);
   $9 = $1963($0_1, 12);
   $11_1 = $1963($0_1, 20);
   $12_1 = $1963($0_1, 36);
   $13 = $1963($0_1, 44);
   $1990($2_1 + 360 | 0, 0, +$1963($0_1 + 48 | 0, 0));
   $3 = $2_1 + 304 | 0;
   $1990($3 + 48 | 0, 0, +$13);
   $1990($3 + 40 | 0, 0, +$10_1);
   $1990($3 + 32 | 0, 0, +$12_1);
   $1990($3 + 24 | 0, 0, +$8);
   $1990($3 + 16 | 0, 0, +$11_1);
   $1990($2_1, 312, +$6_1);
   $1990($2_1, 304, +$9);
   $567(18207, $3);
   $3 = $2_1 + 256 | 0;
   $1973($3 + 36 | 0, 0, $1_1 & 64 ? 10030 : 19354);
   $1973($3 + 32 | 0, 0, $1_1 & 262144 ? 4082 : 19354);
   $1973($2_1 + 284 | 0, 0, $1_1 & 512 ? 4128 : 19354);
   $1973($3 + 24 | 0, 0, $1_1 & 256 ? 19057 : 19354);
   $1973($2_1 + 276 | 0, 0, $1_1 & 268435456 ? 19046 : 19354);
   $1973($3 + 16 | 0, 0, $1_1 & 134217728 ? 19090 : 19354);
   $1973($2_1, 268, $1_1 & 67108864 ? 19074 : 19354);
   $1973($2_1, 264, $1_1 & 33554432 ? 19081 : 19354);
   $1973($2_1, 260, $1_1 & 16777216 ? 19128 : 19354);
   $1973($2_1, 256, $1_1);
   $567(18626, $3);
   $6_1 = $1963($0_1 + 92 | 0, 0);
   $8 = $1963($0_1 + 100 | 0, 0);
   $10_1 = $1963($0_1, 88);
   $9 = $1963($0_1, 96);
   $3 = $1937($0_1, 136);
   $1_1 = $2_1 + 208 | 0;
   $1973($1_1 + 36 | 0, 0, $1937($0_1, 137) ? 14127 : 19354);
   $1973($1_1 + 32 | 0, 0, $3 ? 14745 : 19354);
   $1990($1_1 + 24 | 0, 0, +$8);
   $1990($1_1 + 16 | 0, 0, +$6_1);
   $1990($2_1, 216, +$9);
   $1990($2_1, 208, +$10_1);
   $567(5472, $1_1);
   $1_1 = $1937($0_1, 140);
   $3 = $1937($0_1, 139);
   $4_1 = $1937($0_1, 138);
   if ($3 | $4_1) {
    $5_1 = $1939($0_1, 154)
   } else {
    $5_1 = -1
   }
   $1973($2_1, 204, $5_1);
   $1973($2_1, 200, $1_1);
   $1973($2_1, 196, $3);
   $1973($2_1, 192, $4_1);
   $567(13013, $2_1 + 192 | 0);
   $1_1 = $1937($0_1, 144);
   $3 = $1937($0_1, 145);
   $4_1 = $1936($0_1, 172);
   $5_1 = $1936($0_1, 173);
   $7_1 = $2_1 + 160 | 0;
   $1973($7_1 + 16 | 0, 0, $1937($0_1, 143));
   $1973($2_1, 172, $5_1);
   $1973($2_1, 168, $4_1);
   $1973($2_1, 164, $3);
   $1973($2_1, 160, $1_1);
   $567(13075, $7_1);
   $1_1 = $2_1 + 96 | 0;
   $5_1 = $1_1 + 32 | 0;
   $7_1 = $1_1 + 24 | 0;
   $1_1 = 0;
   while (1) {
    $3 = $1_1;
    $4_1 = $1944((($1_1 << 2) + $0_1 | 0) + 756 | 0, 0);
    $1_1 = ($1_1 << 4) + $0_1 | 0;
    $10_1 = $1963($1_1 + 772 | 0, 0);
    $6_1 = $1963($1_1 + 768 | 0, 0);
    $9 = $1963($1_1 + 764 | 0, 0);
    $8 = $1963($1_1 + 776 | 0, 0);
    label$10 : {
     if (!(!($9 >= $8) | !($6_1 >= $8))) {
      $1973($2_1, 148, $4_1);
      $1973($2_1, 144, $3);
      $567(14491, $2_1 + 144 | 0);
      break label$10;
     }
     $1990($5_1, 0, +$8);
     $1990($7_1, 0, +$10_1);
     $1_1 = $2_1 + 96 | 0;
     $1990($1_1 + 16 | 0, 0, +$6_1);
     $1973($2_1, 100, $4_1);
     $1973($2_1, 96, $3);
     $1990($2_1, 104, +$9);
     $567(18157, $1_1);
     if (!$89(0)) {
      break label$10
     }
     $1_1 = $92($1944($1944($1944(0, 73568) + 7504 | 0, 0), 0), 1, 11768);
     $11_1 = $1963($0_1, 12);
     $12_1 = $6_1;
     $6_1 = $1963($0_1, 16);
     $1986($2_1, 396, Math_fround($12_1 + $6_1));
     $1986($2_1, 392, Math_fround($9 + $11_1));
     $1986($2_1, 388, Math_fround($8 + $6_1));
     $1986($2_1, 384, Math_fround($10_1 + $11_1));
     $400($1_1, $2_1 + 392 | 0, $2_1 + 384 | 0, -16711681, Math_fround(0.0), 0, Math_fround(1.0));
    }
    $1_1 = $3 + 1 | 0;
    if (!$3) {
     continue
    }
    break;
   };
   $1_1 = $1939($0_1 + 296 | 0, 0);
   $3 = $1944($0_1, 752);
   if ($3) {
    $3 = $1944($3, 0)
   } else {
    $3 = 14877
   }
   $1973($2_1, 84, $3);
   $1973($2_1, 80, $1_1);
   $567(5760, $2_1 + 80 | 0);
   $1_1 = $1944($0_1, 736);
   if (($0_1 | 0) != ($1_1 | 0)) {
    $352($1_1, 1685)
   }
   $1_1 = $1944($0_1, 728);
   if ($1_1) {
    $352($1_1, 1696)
   }
   $1_1 = $1944($0_1 + 352 | 0, 0);
   label$16 : {
    if (($1_1 | 0) <= 0) {
     break label$16
    }
    $1973($2_1, 68, $1_1);
    $1973($2_1, 64, 3951);
    if (!$706(3951, 18512, $2_1 - -64 | 0)) {
     break label$16
    }
    $1_1 = $1944($0_1, 352);
    if (($1_1 | 0) > 0) {
     while (1) {
      $3 = $1_1;
      $1_1 = $1_1 - 1 | 0;
      $4_1 = $1_1 << 2;
      $265($1944($1944($0_1, 360) + $4_1 | 0, 0));
      $352($1944($1944($0_1, 360) + $4_1 | 0, 0), 1800);
      $4_1 = $1944($1944(0, 73568), 7080);
      $1973($4_1, 196, $1944($4_1, 196) - 1 | 0);
      if (($3 | 0) > 1) {
       continue
      }
      break;
     }
    }
    $716();
   }
   $1_1 = $1944($0_1, 560);
   label$19 : {
    if (($1_1 | 0) <= 0) {
     break label$19
    }
    $1973($2_1, 48, $1_1);
    if (!$706(4753, 18456, $2_1 + 48 | 0)) {
     break label$19
    }
    if (($1944($0_1, 560) | 0) > 0) {
     $1_1 = 0;
     while (1) {
      $4_1 = $1944($0_1, 568) + Math_imul($1_1, 124) | 0;
      $3 = global$0 - 80 | 0;
      global$0 = $3;
      $5_1 = $1944($4_1, 0);
      $7_1 = $1944($4_1, 16);
      $1973($3, 72, $1944($4_1, 4));
      $1973($3, 68, $7_1);
      $1973($3, 64, $5_1);
      if ($708($5_1, 14643, $3 - -64 | 0)) {
       $6_1 = $1963($4_1, 20);
       $5_1 = $3 + 32 | 0;
       $8 = $1963($4_1, 24);
       $1990($5_1 + 16 | 0, 0, +$8);
       $1990($3, 40, +$6_1);
       $1990($3, 32, +Math_fround($8 - $6_1));
       $567(18286, $5_1);
       if (($1944($4_1, 92) | 0) > 0) {
        $7_1 = $3 + 16 | 0;
        $5_1 = 0;
        while (1) {
         $6_1 = $1963($1944($4_1, 100) + Math_imul($5_1, 28) | 0, 0);
         $1990($7_1, 0, +Math_fround(Math_fround($1963($4_1, 24) - $1963($4_1, 20)) * $6_1));
         $1990($3, 8, +$6_1);
         $1973($3, 0, $5_1);
         $567(17719, $3);
         $5_1 = $5_1 + 1 | 0;
         if (($1944($4_1, 92) | 0) > ($5_1 | 0)) {
          continue
         }
         break;
        };
       }
       $716();
      }
      global$0 = $3 + 80 | 0;
      $1_1 = $1_1 + 1 | 0;
      if (($1944($0_1, 560) | 0) > ($1_1 | 0)) {
       continue
      }
      break;
     };
    }
    $716();
   }
   $1_1 = $1944($0_1, 548);
   $1973($2_1, 36, $1_1);
   $1973($2_1, 32, 11574);
   $1973($2_1, 40, $1_1 << 3);
   if ($706(11574, 5090, $2_1 + 32 | 0)) {
    if (($1944($0_1, 548) | 0) > 0) {
     $1_1 = 0;
     while (1) {
      $1983($2_1, 16, $1959($1944($0_1, 556) + ($1_1 << 3) | 0, 0), i64toi32_i32$HIGH_BITS);
      $567(1024, $2_1 + 16 | 0);
      $1_1 = $1_1 + 1 | 0;
      if (($1944($0_1, 548) | 0) > ($1_1 | 0)) {
       continue
      }
      break;
     };
    }
    $716();
   }
   $716();
  }
  global$0 = $2_1 + 400 | 0;
 }
 
 function $353($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  return $1939($1944($0_1, 0), 154) - $1939($1944($1_1, 0), 154) | 0;
 }
 
 function $354($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  $6_1 = global$0 - 48 | 0;
  global$0 = $6_1;
  if (($1_1 | 0) > 0) {
   while (1) {
    $7_1 = ($9 << 2) + $0_1 | 0;
    $4_1 = $1944($7_1, 0);
    if (($1944($4_1, 732) | 0) == ($2_1 | 0)) {
     $1973($6_1, 0, $1939($4_1, 154));
     $3 = $6_1 + 16 | 0;
     $21($3, 20, 1793, $6_1);
     $352($4_1, $3);
     $8 = $1944(0, 73568);
     $3 = $1944($8, 7080);
     $1968($3, 140, 1);
     $5_1 = $1963($8 + 5524 | 0, 0);
     $8 = $3 + 272 | 0;
     $5_1 = Math_fround($5_1 + $1963($8, 0));
     $1986($8, 0, $5_1);
     $1986($3, 208, Math_fround(Math_fround($5_1 + $1963($3, 12)) + $1963($3 + 276 | 0, 0)));
     $354($7_1 + 4 | 0, ($9 ^ -1) + $1_1 | 0, $4_1);
     $4_1 = $1944(0, 73568);
     $3 = $1944($4_1, 7080);
     $1968($3, 140, 1);
     $7_1 = $3 + 272 | 0;
     $5_1 = Math_fround($1963($7_1, 0) - $1963($4_1 + 5524 | 0, 0));
     $1986($7_1, 0, $5_1);
     $1986($3, 208, Math_fround(Math_fround($5_1 + $1963($3, 12)) + $1963($3 + 276 | 0, 0)));
    }
    $9 = $9 + 1 | 0;
    if (($9 | 0) != ($1_1 | 0)) {
     continue
    }
    break;
   }
  }
  global$0 = $6_1 + 48 | 0;
 }
 
 function $355($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = 0, $13 = Math_fround(0), $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = 0, $21_1 = Math_fround(0), $22_1 = Math_fround(0), $23_1 = 0;
  $2_1 = global$0 - 560 | 0;
  global$0 = $2_1;
  $3 = $1944($1_1, 0);
  label$1 : {
   if (($3 | 0) <= 0) {
    break label$1
   }
   $5_1 = $3 - 1 | 0;
   $4_1 = $1944($1_1, 8) + Math_imul($5_1, 40) | 0;
   if ($1944($4_1, 28)) {
    break label$1
   }
   $3 = $1944($4_1, 32) ? $3 : $5_1;
  }
  $14 = $1944(0, 73568);
  $5_1 = $1944($1_1, 48);
  $4_1 = $1944($1_1, 24);
  $10_1 = $1944($1_1, 12);
  $15_1 = $3;
  $1973($2_1 + 176 | 0, 0, $3);
  $1973($2_1, 172, $10_1);
  $1973($2_1, 168, $4_1);
  $1973($2_1, 160, 2602);
  $1973($2_1, 164, $5_1 ? $5_1 : 19354);
  $5_1 = $708($1_1, 5292, $2_1 + 160 | 0);
  $4_1 = $1944(0, 73568);
  $3 = $1944($4_1, 7080);
  $1968($3, 140, 1);
  label$4 : {
   label$5 : {
    if (($1944($3, 580) | 0) == ($1_1 | 0)) {
     $1968($3, 140, 1);
     if (!$1937($3, 143)) {
      $6_1 = $1963($4_1 + 5492 | 0, 0);
      $1986($3 + 212 | 0, 0, $1963($3 + 220 | 0, 0));
      $1982($3 + 248 | 0, 0, $1959($3 + 256 | 0, 0), i64toi32_i32$HIGH_BITS);
      $1986($3 + 264 | 0, 0, $1963($3 + 268 | 0, 0));
      $1986($3, 208, Math_fround($6_1 + $1963($3 + 216 | 0, 0)));
     }
     $1982($2_1, 264, 1053609165, 1065353216);
     $1982($2_1, 256, 1065353216, 1053609165);
     $559($2_1 + 256 | 0, 14915, 0);
     if ($5_1) {
      break label$5
     }
     break label$4;
    }
    $7_1 = $92($1944($1944($4_1 + 7504 | 0, 0), 0), 1, 11768);
    label$8 : {
     if (!$0_1) {
      break label$8
     }
     if (!$7_1 | !$89(0)) {
      break label$8
     }
     $6_1 = $1963($0_1 + 24 | 0, 0);
     $8 = $1963($0_1 + 16 | 0, 0);
     $1986($2_1, 256, Math_fround($1963($0_1, 12) + $1963($0_1, 20)));
     $1986($2_1, 260, Math_fround($8 + $6_1));
     $400($7_1, $0_1 + 12 | 0, $2_1 + 256 | 0, -16711681, Math_fround(0.0), 0, Math_fround(1.0));
    }
    if (!$5_1) {
     break label$4
    }
    label$9 : {
     if (!$0_1) {
      break label$9
     }
     if ($1937($0_1, 139)) {
      break label$9
     }
     $561(18964, 0);
    }
    if (($15_1 | 0) <= 0) {
     break label$5
    }
    $17_1 = $2_1 + 556 | 0;
    $0_1 = $2_1 + 96 | 0;
    $18_1 = $0_1 + 32 | 0;
    $19 = $0_1 + 24 | 0;
    $20_1 = $0_1 + 16 | 0;
    $3 = $1944($1_1, 8);
    while (1) {
     $4_1 = $3;
     $0_1 = $1944($3, 32);
     label$11 : {
      if ($0_1) {
       $1973($2_1, 148, $1944($4_1, 36));
       $1973($2_1, 144, $0_1);
       $567(6997, $2_1 + 144 | 0);
       break label$11;
      }
      $0_1 = $1944($4_1, 28);
      $6_1 = $1963($4_1, 0);
      $3 = $1944($4_1, 16);
      $8 = $1963($4_1, 4);
      $11_1 = $1963($4_1, 8);
      $1990($18_1, 0, +$1963($4_1, 12));
      $1990($19, 0, +$11_1);
      $1990($20_1, 0, +$8);
      $1973($2_1, 100, $3);
      $1990($2_1, 104, +$6_1);
      $1973($2_1, 96, ($0_1 >>> 0) / 3 | 0);
      $0_1 = $2_1 + 256 | 0;
      $21($0_1, 300, 18323, $2_1 + 96 | 0);
      $3 = $1944($1_1, 8);
      $1973($2_1, 80, $0_1);
      $0_1 = $708(($4_1 - $3 | 0) / 40 | 0, 5950, $2_1 + 80 | 0);
      label$13 : {
       if (!$89(0)) {
        break label$13
       }
       $3 = $1937($14, 12260);
       label$14 : {
        if (!$3) {
         if (!$7_1) {
          break label$13
         }
         if ($1937($14, 12261) & 255) {
          break label$14
         }
         break label$13;
        }
        if (!$7_1) {
         break label$13
        }
       }
       $358($7_1, $1_1, $4_1, ($3 | 0) != 0, $1937($14, 12261));
      }
      if (!$0_1) {
       break label$11
      }
      if (($1944($1_1, 12) | 0) <= 0) {
       $12_1 = 0
      } else {
       $12_1 = $1944($1_1, 20)
      }
      $16_1 = $1944($1_1, 32) + Math_imul($1944($4_1, 20), 20) | 0;
      $0_1 = $1944($4_1, 24);
      $3 = $1944($4_1, 28);
      label$18 : {
       if ($0_1 + $3 >>> 0 <= $0_1 >>> 0) {
        $6_1 = Math_fround(0.0);
        $5_1 = $0_1;
        break label$18;
       }
       $6_1 = Math_fround(0.0);
       while (1) {
        $1983($2_1 + 240 | 0, 0, 0, 0);
        $1983($2_1, 232, 0, 0);
        $1983($2_1, 224, 0, 0);
        $3 = 0;
        while (1) {
         $10_1 = ($2_1 + 224 | 0) + ($3 << 3) | 0;
         if ($12_1) {
          $5_1 = $1941($12_1 + ($0_1 << 1) | 0, 0)
         } else {
          $5_1 = $0_1
         }
         $1983($10_1, 0, $1959($16_1 + Math_imul($5_1, 20) | 0, 0), i64toi32_i32$HIGH_BITS);
         $0_1 = $0_1 + 1 | 0;
         $3 = $3 + 1 | 0;
         if (($3 | 0) != 3) {
          continue
         }
         break;
        };
        $11_1 = $6_1;
        $13 = $1963($2_1, 240);
        $6_1 = $1963($2_1, 228);
        $8 = $1963($2_1, 236);
        $21_1 = Math_fround($13 * Math_fround($6_1 - $8));
        $22_1 = $1963($2_1, 224);
        $13 = $8;
        $8 = $1963($2_1, 244);
        $6_1 = Math_fround($11_1 + Math_fround(Math_fround(Math_abs(Math_fround($21_1 + Math_fround(Math_fround($22_1 * Math_fround($13 - $8)) + Math_fround($1963($2_1, 232) * Math_fround($8 - $6_1)))))) * Math_fround(.5)));
        $5_1 = $1944($4_1, 24);
        $3 = $1944($4_1, 28);
        if ($5_1 + $3 >>> 0 > $0_1 >>> 0) {
         continue
        }
        break;
       };
      }
      $0_1 = $1944($4_1, 20);
      $10_1 = $2_1 + 48 | 0;
      $1990($10_1 + 16 | 0, 0, +$6_1);
      $1973($2_1, 56, $5_1);
      $1973($2_1, 52, $0_1);
      $1973($2_1, 48, $3);
      $0_1 = $2_1 + 256 | 0;
      $21($0_1, 300, 1290, $10_1);
      $1982($2_1, 224, 0, 0);
      $601($0_1, 0, 0, $2_1 + 224 | 0);
      if (!(!$7_1 | !$89(0))) {
       $358($7_1, $1_1, $4_1, 1, 0)
      }
      $0_1 = $2_1 + 224 | 0;
      $42($0_1);
      $46($0_1, ($1944($4_1, 28) >>> 0) / 3 | 0, Math_fround(-1.0));
      if ($48($0_1)) {
       while (1) {
        $3 = $1944($2_1, 224);
        if (($3 | 0) < ($1944($2_1, 228) | 0)) {
         $5_1 = $1944($4_1, 24) + Math_imul($3, 3) | 0;
         while (1) {
          $10_1 = $3;
          $1983($2_1 + 208 | 0, 0, 0, 0);
          $1983($2_1, 200, 0, 0);
          $1983($2_1, 192, 0, 0);
          $3 = 0;
          $0_1 = $2_1 + 256 | 0;
          while (1) {
           $23_1 = ($2_1 + 192 | 0) + ($3 << 3) | 0;
           if ($12_1) {
            $9 = $1941($12_1 + ($5_1 << 1) | 0, 0)
           } else {
            $9 = $5_1
           }
           $9 = $16_1 + Math_imul($9, 20) | 0;
           $1983($23_1, 0, $1959($9, 0), i64toi32_i32$HIGH_BITS);
           $6_1 = $1963($9, 0);
           $8 = $1963($9, 4);
           $11_1 = $1963($9, 8);
           $13 = $1963($9 + 12 | 0, 0);
           $1973($2_1 + 40 | 0, 0, $1944($9, 16));
           $1990($2_1 + 32 | 0, 0, +$13);
           $1990($2_1 + 24 | 0, 0, +$11_1);
           $1990($2_1 + 16 | 0, 0, +$8);
           $1973($2_1, 0, $3 ? 19150 : 16155);
           $1990($2_1, 8, +$6_1);
           $1973($2_1, 4, $5_1);
           $0_1 = $21($0_1, $17_1 - $0_1 | 0, 19267, $2_1) + $0_1 | 0;
           $5_1 = $5_1 + 1 | 0;
           $3 = $3 + 1 | 0;
           if (($3 | 0) != 3) {
            continue
           }
           break;
          };
          $1982($2_1, 184, 0, 0);
          $601($2_1 + 256 | 0, 0, 0, $2_1 + 184 | 0);
          label$30 : {
           if (!$7_1) {
            break label$30
           }
           if (!$89(0)) {
            break label$30
           }
           $0_1 = $1944($7_1, 36);
           $1973($7_1, 36, $0_1 & -2);
           $388($7_1, $2_1 + 192 | 0, 3, -16711681, 1, Math_fround(1.0));
           $1973($7_1, 36, $0_1);
          }
          $3 = $10_1 + 1 | 0;
          if (($1944($2_1, 228) | 0) > ($3 | 0)) {
           continue
          }
          break;
         };
        }
        if ($48($2_1 + 224 | 0)) {
         continue
        }
        break;
       }
      }
      $716();
      $43($2_1 + 224 | 0);
     }
     $3 = $4_1 + 40 | 0;
     if ($3 >>> 0 < $1944($1_1, 8) + Math_imul($15_1, 40) >>> 0) {
      continue
     }
     break;
    };
   }
   $716();
  }
  global$0 = $2_1 + 560 | 0;
 }
 
 function $358($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = 0, $14 = Math_fround(0), $15_1 = Math_fround(0), $16_1 = 0, $17_1 = Math_fround(0), $18_1 = Math_fround(0), $19 = Math_fround(0), $20_1 = Math_fround(0), $21_1 = 0, $22_1 = 0, $23_1 = 0, $24 = 0, $25_1 = 0, $26_1 = 0;
  $5_1 = global$0 - 48 | 0;
  global$0 = $5_1;
  $17_1 = $1963($2_1, 12);
  $18_1 = $1963($2_1, 8);
  $19 = $1963($2_1, 4);
  $20_1 = $1963($2_1, 0);
  $21_1 = $1944($0_1, 36);
  $1973($0_1, 36, $21_1 & -2);
  $6_1 = $1944($2_1, 24);
  $22_1 = $6_1 + $1944($2_1, 28) | 0;
  if ($6_1 >>> 0 < $22_1 >>> 0) {
   $25_1 = $5_1 + 32 | 0;
   $9 = Math_fround(3402823466385288598117041.0e14);
   $10_1 = Math_fround(3402823466385288598117041.0e14);
   $11_1 = Math_fround(-3402823466385288598117041.0e14);
   $12_1 = Math_fround(-3402823466385288598117041.0e14);
   while (1) {
    $14 = $12_1;
    $15_1 = $11_1;
    $16_1 = $6_1;
    $6_1 = 0;
    if (($1944($1_1, 12) | 0) > 0) {
     $6_1 = $1944($1_1, 20)
    }
    $23_1 = $6_1;
    $6_1 = $1944($1_1, 32);
    $13 = $1944($2_1, 20);
    $1983($25_1, 0, 0, 0);
    $1983($5_1, 24, 0, 0);
    $1983($5_1, 16, 0, 0);
    $26_1 = $6_1 + Math_imul($13, 20) | 0;
    $6_1 = 0;
    $12_1 = $9;
    $11_1 = $10_1;
    $9 = $15_1;
    $10_1 = $14;
    while (1) {
     $13 = $16_1;
     if ($23_1) {
      $24 = $1941(($16_1 << 1) + $23_1 | 0, 0)
     } else {
      $24 = $13
     }
     $13 = ($5_1 + 16 | 0) + ($6_1 << 3) | 0;
     $1983($13, 0, $1959(Math_imul($24, 20) + $26_1 | 0, 0), i64toi32_i32$HIGH_BITS);
     $16_1 = $16_1 + 1 | 0;
     $7_1 = $1963($13, 0);
     $14 = $12_1 > $7_1 ? $7_1 : $12_1;
     $12_1 = $14;
     $8 = $1963($13, 4);
     $15_1 = $11_1 > $8 ? $8 : $11_1;
     $11_1 = $15_1;
     $7_1 = $9 < $7_1 ? $7_1 : $9;
     $9 = $7_1;
     $8 = $10_1 < $8 ? $8 : $10_1;
     $10_1 = $8;
     $6_1 = $6_1 + 1 | 0;
     if (($6_1 | 0) != 3) {
      continue
     }
     break;
    };
    if ($3) {
     $388($0_1, $5_1 + 16 | 0, 3, -16711681, 1, Math_fround(1.0))
    }
    $9 = $14;
    $10_1 = $15_1;
    $11_1 = $7_1;
    $12_1 = $8;
    $6_1 = $16_1;
    if ($22_1 >>> 0 > $6_1 >>> 0) {
     continue
    }
    break;
   };
   if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
    $1_1 = ~~$8
   } else {
    $1_1 = -2147483648
   }
   $9 = Math_fround($1_1 | 0);
   if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
    $1_1 = ~~$7_1
   } else {
    $1_1 = -2147483648
   }
   $10_1 = Math_fround($1_1 | 0);
   if (Math_fround(Math_abs($15_1)) < Math_fround(2147483648.0)) {
    $1_1 = ~~$15_1
   } else {
    $1_1 = -2147483648
   }
   $12_1 = Math_fround($1_1 | 0);
   if (Math_fround(Math_abs($14)) < Math_fround(2147483648.0)) {
    $1_1 = ~~$14
   } else {
    $1_1 = -2147483648
   }
   $11_1 = Math_fround($1_1 | 0);
  }
  if ($4_1) {
   if (Math_fround(Math_abs($19)) < Math_fround(2147483648.0)) {
    $1_1 = ~~$19
   } else {
    $1_1 = -2147483648
   }
   $1986($5_1, 20, Math_fround($1_1 | 0));
   if (Math_fround(Math_abs($20_1)) < Math_fround(2147483648.0)) {
    $1_1 = ~~$20_1
   } else {
    $1_1 = -2147483648
   }
   $1986($5_1, 16, Math_fround($1_1 | 0));
   if (Math_fround(Math_abs($17_1)) < Math_fround(2147483648.0)) {
    $1_1 = ~~$17_1
   } else {
    $1_1 = -2147483648
   }
   $1986($5_1, 12, Math_fround($1_1 | 0));
   if (Math_fround(Math_abs($18_1)) < Math_fround(2147483648.0)) {
    $1_1 = ~~$18_1
   } else {
    $1_1 = -2147483648
   }
   $1986($5_1, 8, Math_fround($1_1 | 0));
   $1_1 = $5_1 + 16 | 0;
   $2_1 = $5_1 + 8 | 0;
   $400($0_1, $1_1, $2_1, -65281, Math_fround(0.0), 0, Math_fround(1.0));
   $1986($5_1, 20, $12_1);
   $1986($5_1, 16, $11_1);
   $1986($5_1, 12, $9);
   $1986($5_1, 8, $10_1);
   $400($0_1, $1_1, $2_1, -256, Math_fround(0.0), 0, Math_fround(1.0));
  }
  $1973($0_1, 36, $21_1);
  global$0 = $5_1 + 48 | 0;
 }
 
 function $360($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  return $1755($0_1) | 0;
 }
 
 function $361($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1756($0_1);
 }
 
 function $363($0_1) {
  
 }
 
 function $365() {
  
 }
 
 function $367($0_1) {
  var $1_1 = Math_fround(0), $2_1 = Math_fround(0), $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = Math_fround(0), $18_1 = Math_fround(0);
  if (!$0_1) {
   $0_1 = $50()
  }
  $1982($0_1, 200, 1065353216, 1065353216);
  $1982($0_1 + 248 | 0, 0, 0, 0);
  $1982($0_1 + 240 | 0, 0, 1031127695, 1064346583);
  $1982($0_1 + 232 | 0, 0, 1031127695, 1031127695);
  $1982($0_1 + 224 | 0, 0, 1056964608, 1065353216);
  $1982($0_1 + 216 | 0, 0, 1056964608, 1056964608);
  $1982($0_1 + 208 | 0, 0, 1065353216, 1065353216);
  $1982($0_1 + 256 | 0, 0, 0, 0);
  $8 = $0_1 + 288 | 0;
  $1982($8, 0, 1056964608, 1056964608);
  $9 = $0_1 + 280 | 0;
  $1982($9, 0, 1054615798, 1054615798);
  $1982($0_1 + 272 | 0, 0, 1034147594, 1064346583);
  $1982($0_1 + 264 | 0, 0, 1034147594, 1034147594);
  $1982($0_1 + 296 | 0, 0, 0, 0);
  $1982($0_1 + 304 | 0, 0, 0, 0);
  $1982($0_1 + 312 | 0, 0, 1042536202, 1049918177);
  $1982($0_1 + 320 | 0, 0, 1056293519, 1057635697);
  $1982($0_1 + 328 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 336 | 0, 0, 1065017672, 1053609165);
  $1982($0_1 + 344 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 352 | 0, 0, 1065017672, 1059816735);
  $10_1 = $0_1 + 360 | 0;
  $1982($10_1, 0, 1025758986, 1025758986);
  $11_1 = $0_1 + 368 | 0;
  $1982($11_1, 0, 1025758986, 1065353216);
  $1982($0_1 + 376 | 0, 0, 1042536202, 1049918177);
  $12_1 = $0_1 + 384 | 0;
  $1982($12_1, 0, 1056293519, 1065353216);
  $1982($0_1 + 392 | 0, 0, 0, 0);
  $1982($0_1 + 400 | 0, 0, 0, 1057132380);
  $1982($0_1 + 408 | 0, 0, 1041194025, 1041194025);
  $1982($0_1 + 416 | 0, 0, 1041194025, 1065353216);
  $1982($0_1 + 424 | 0, 0, 1017370378, 1017370378);
  $1982($0_1 + 432 | 0, 0, 1017370378, 1057467924);
  $1982($0_1 + 440 | 0, 0, 1050589266, 1050589266);
  $1982($0_1 + 448 | 0, 0, 1050589266, 1065353216);
  $1982($0_1 + 456 | 0, 0, 1053944709, 1053944709);
  $1982($0_1 + 464 | 0, 0, 1053944709, 1065353216);
  $1982($0_1 + 472 | 0, 0, 1057132380, 1057132380);
  $1982($0_1 + 480 | 0, 0, 1057132380, 1065353216);
  $1982($0_1 + 488 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 496 | 0, 0, 1065017672, 1065353216);
  $1982($0_1 + 504 | 0, 0, 1047904911, 1057300152);
  $1982($0_1 + 512 | 0, 0, 1063339950, 1065353216);
  $1982($0_1 + 520 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 528 | 0, 0, 1065017672, 1065353216);
  $1982($0_1 + 536 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 544 | 0, 0, 1065017672, 1053609165);
  $1982($0_1 + 552 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 560 | 0, 0, 1065017672, 1065353216);
  $1982($0_1 + 568 | 0, 0, 1031127695, 1057467924);
  $1982($0_1 + 576 | 0, 0, 1065017672, 1065353216);
  $1982($0_1 + 584 | 0, 0, 1048911544, 1058474557);
  $13 = $0_1 + 592 | 0;
  $1982($13, 0, 1065017672, 1050589266);
  $14 = $0_1 + 600 | 0;
  $1982($14, 0, 1048911544, 1058474557);
  $15_1 = $0_1 + 608 | 0;
  $1982($15_1, 0, 1065017672, 1061997773);
  $1982($0_1 + 616 | 0, 0, 1048911544, 1058474557);
  $16_1 = $0_1 + 624 | 0;
  $1982($16_1, 0, 1065017672, 1065353216);
  $1982($0_1 + 720 | 0, 0, 1065017672, 1064514355);
  $1982($0_1 + 712 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 704 | 0, 0, 1065017672, 1059816735);
  $1982($0_1 + 696 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 688 | 0, 0, 1065017672, 1045220557);
  $1982($0_1 + 680 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 672 | 0, 0, 1061158912, 1065353216);
  $1982($0_1 + 664 | 0, 0, 1036831949, 1053609165);
  $1982($0_1 + 656 | 0, 0, 1061158912, 1061662228);
  $1982($0_1 + 648 | 0, 0, 1036831949, 1053609165);
  $1982($0_1 + 640 | 0, 0, $1959($8, 0), i64toi32_i32$HIGH_BITS);
  $1982($0_1 + 632 | 0, 0, $1959($9, 0), i64toi32_i32$HIGH_BITS);
  $1_1 = $1963($0_1 + 380 | 0, 0);
  $5_1 = $1963($0_1 + 588 | 0, 0);
  $2_1 = $1963($12_1, 0);
  $6_1 = $1963($13, 0);
  $3 = $1963($0_1 + 388 | 0, 0);
  $7_1 = $1963($0_1 + 596 | 0, 0);
  $1973($0_1 + 728 | 0, 0, 1043878379);
  $1973($0_1 + 760 | 0, 0, 1045220556);
  $1982($0_1 + 752 | 0, 0, $1959($15_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($0_1 + 744 | 0, 0, $1959($14, 0), i64toi32_i32$HIGH_BITS);
  $7_1 = Math_fround($7_1 + Math_fround(Math_fround($3 - $7_1) * Math_fround(.800000011920929)));
  $1986($0_1 + 740 | 0, 0, $7_1);
  $6_1 = Math_fround($6_1 + Math_fround(Math_fround($2_1 - $6_1) * Math_fround(.800000011920929)));
  $1986($0_1 + 736 | 0, 0, $6_1);
  $5_1 = Math_fround($5_1 + Math_fround(Math_fround($1_1 - $5_1) * Math_fround(.800000011920929)));
  $1986($0_1 + 732 | 0, 0, $5_1);
  $4_1 = $3;
  $3 = $1963($0_1 + 628 | 0, 0);
  $3 = Math_fround(Math_fround(Math_fround($4_1 - $3) * Math_fround(.6000000238418579)) + $3);
  $1986($0_1 + 772 | 0, 0, $3);
  $4_1 = $2_1;
  $2_1 = $1963($16_1, 0);
  $2_1 = Math_fround(Math_fround(Math_fround($4_1 - $2_1) * Math_fround(.6000000238418579)) + $2_1);
  $1986($0_1 + 768 | 0, 0, $2_1);
  $4_1 = $1_1;
  $1_1 = $1963($0_1 + 620 | 0, 0);
  $1_1 = Math_fround(Math_fround(Math_fround($4_1 - $1_1) * Math_fround(.6000000238418579)) + $1_1);
  $1986($0_1 + 764 | 0, 0, $1_1);
  $17_1 = $1963($0_1 + 364 | 0, 0);
  $18_1 = $1963($11_1, 0);
  $4_1 = $1963($0_1 + 372 | 0, 0);
  $1986($0_1 + 788 | 0, 0, Math_fround(Math_fround(Math_fround($4_1 - $7_1) * Math_fround(.800000011920929)) + $7_1));
  $1986($0_1 + 784 | 0, 0, Math_fround(Math_fround(Math_fround($18_1 - $6_1) * Math_fround(.800000011920929)) + $6_1));
  $1986($0_1 + 780 | 0, 0, Math_fround(Math_fround(Math_fround($17_1 - $5_1) * Math_fround(.800000011920929)) + $5_1));
  $1973($0_1 + 776 | 0, 0, 1032536982);
  $1982($0_1 + 808 | 0, 0, 1058810102, 1058810102);
  $1982($0_1 + 816 | 0, 0, 1058810102, 1065353216);
  $1982($0_1 + 824 | 0, 0, 1065353216, 1054615798);
  $1982($0_1 + 832 | 0, 0, 1051931443, 1065353216);
  $1982($0_1 + 840 | 0, 0, 1063675494, 1060320051);
  $1982($0_1 + 848 | 0, 0, 0, 1065353216);
  $1982($0_1 + 856 | 0, 0, 1065353216, 1058642330);
  $1982($0_1 + 864 | 0, 0, 0, 1065353216);
  $1982($0_1 + 872 | 0, 0, 1044549468, 1044549468);
  $1982($0_1 + 880 | 0, 0, 1045220557, 1065353216);
  $1982($0_1 + 888 | 0, 0, 1050589266, 1050589266);
  $1982($0_1 + 896 | 0, 0, 1051931443, 1065353216);
  $1982($0_1 + 904 | 0, 0, 1047233823, 1047233823);
  $1982($0_1 + 912 | 0, 0, 1048576e3, 1065353216);
  $1986($0_1 + 796 | 0, 0, Math_fround(Math_fround(Math_fround($17_1 - $1_1) * Math_fround(.4000000059604645)) + $1_1));
  $1986($0_1 + 800 | 0, 0, Math_fround(Math_fround(Math_fround($18_1 - $2_1) * Math_fround(.4000000059604645)) + $2_1));
  $1986($0_1 + 804 | 0, 0, Math_fround(Math_fround(Math_fround($4_1 - $3) * Math_fround(.4000000059604645)) + $3));
  $1986($0_1 + 792 | 0, 0, Math_fround(Math_fround(Math_fround($1963($10_1, 0) + Math_fround(-.19999998807907104)) * Math_fround(.4000000059604645)) + Math_fround(.19999998807907104)));
  $1982($0_1 + 928 | 0, 0, 0, 0);
  $1982($0_1 + 920 | 0, 0, 0, 0);
  $1982($0_1 + 1040 | 0, 0, 1061997773, 1051931443);
  $1982($0_1 + 1032 | 0, 0, 1061997773, 1061997773);
  $1982($0_1 + 1024 | 0, 0, 1061997773, 1045220557);
  $1982($0_1 + 1016 | 0, 0, 1061997773, 1061997773);
  $1982($0_1 + 1008 | 0, 0, 1065353216, 1060320051);
  $1982($0_1 + 1e3 | 0, 0, 1065353216, 1065353216);
  $1982($0_1 + 992 | 0, 0, 1065017672, 1065353216);
  $1982($0_1 + 984 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 976 | 0, 0, 0, 1063675494);
  $1982($0_1 + 968 | 0, 0, 1065353216, 1065353216);
  $1982($0_1 + 960 | 0, 0, 1065017672, 1051931443);
  $1982($0_1 + 952 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 944 | 0, 0, 1065353216, 1031127695);
  $1982($0_1 + 936 | 0, 0, 1065353216, 1065353216);
 }
 
 function $372($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0;
  $1_1 = $1944($0_1, 4);
  label$1 : {
   if (($1_1 | 0) >= 0) {
    break label$1
   }
   $2_1 = $1_1;
   $1_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0;
   $1_1 = ($1_1 | 0) > 0 ? $1_1 : 0;
   if (($2_1 | 0) >= ($1_1 | 0)) {
    break label$1
   }
   $2_1 = $16(Math_imul($1_1, 40));
   $3 = $1944($0_1, 8);
   if ($3) {
    $1602($2_1, $3, Math_imul($1944($0_1, 0), 40));
    $17($1944($0_1, 8));
   }
   $1973($0_1, 4, $1_1);
   $1973($0_1, 8, $2_1);
  }
  $1973($0_1, 0, 0);
  $1_1 = $1944($0_1 + 16 | 0, 0);
  label$3 : {
   if (($1_1 | 0) >= 0) {
    break label$3
   }
   $2_1 = $1_1;
   $1_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0;
   $1_1 = ($1_1 | 0) > 0 ? $1_1 : 0;
   if (($2_1 | 0) >= ($1_1 | 0)) {
    break label$3
   }
   $2_1 = $16($1_1 << 1);
   $3 = $1944($0_1 + 20 | 0, 0);
   if ($3) {
    $1602($2_1, $3, $1944($0_1, 12) << 1);
    $17($1944($0_1, 20));
   }
   $1973($0_1, 16, $1_1);
   $1973($0_1, 20, $2_1);
  }
  $1973($0_1, 12, 0);
  $1_1 = $1944($0_1 + 28 | 0, 0);
  label$5 : {
   if (($1_1 | 0) >= 0) {
    break label$5
   }
   $2_1 = $1_1;
   $1_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0;
   $1_1 = ($1_1 | 0) > 0 ? $1_1 : 0;
   if (($2_1 | 0) >= ($1_1 | 0)) {
    break label$5
   }
   $2_1 = $16(Math_imul($1_1, 20));
   $3 = $1944($0_1 + 32 | 0, 0);
   if ($3) {
    $1602($2_1, $3, Math_imul($1944($0_1, 24), 20));
    $17($1944($0_1, 32));
   }
   $1973($0_1, 28, $1_1);
   $1973($0_1, 32, $2_1);
  }
  $1973($0_1, 24, 0);
  $1_1 = $1944($1944($0_1, 44), 40);
  $1982($0_1, 96, 0, 0);
  $1973($0_1, 36, $1_1);
  $1982($0_1 + 104 | 0, 0, 0, 0);
  $1982($0_1 + 112 | 0, 0, 0, 0);
  $1982($0_1, 52, 0, 0);
  $1973($0_1, 40, 0);
  $1_1 = $1944($0_1 - -64 | 0, 0);
  label$7 : {
   if (($1_1 | 0) >= 0) {
    break label$7
   }
   $2_1 = $1_1;
   $1_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0;
   $1_1 = ($1_1 | 0) > 0 ? $1_1 : 0;
   if (($2_1 | 0) >= ($1_1 | 0)) {
    break label$7
   }
   $2_1 = $16($1_1 << 4);
   $3 = $1944($0_1 + 68 | 0, 0);
   if ($3) {
    $1602($2_1, $3, $1944($0_1, 60) << 4);
    $17($1944($0_1, 68));
   }
   $1973($0_1, 64, $1_1);
   $1973($0_1, 68, $2_1);
  }
  $1973($0_1, 60, 0);
  $1_1 = $1944($0_1 + 76 | 0, 0);
  label$9 : {
   if (($1_1 | 0) >= 0) {
    break label$9
   }
   $2_1 = $1_1;
   $1_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0;
   $1_1 = ($1_1 | 0) > 0 ? $1_1 : 0;
   if (($2_1 | 0) >= ($1_1 | 0)) {
    break label$9
   }
   $2_1 = $16($1_1 << 2);
   $3 = $1944($0_1 + 80 | 0, 0);
   if ($3) {
    $1602($2_1, $3, $1944($0_1, 72) << 2);
    $17($1944($0_1, 80));
   }
   $1973($0_1, 76, $1_1);
   $1973($0_1, 80, $2_1);
  }
  $1973($0_1, 72, 0);
  $1_1 = $1944($0_1 + 88 | 0, 0);
  label$11 : {
   if (($1_1 | 0) >= 0) {
    break label$11
   }
   $2_1 = $1_1;
   $1_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0;
   $1_1 = ($1_1 | 0) > 0 ? $1_1 : 0;
   if (($2_1 | 0) >= ($1_1 | 0)) {
    break label$11
   }
   $2_1 = $16($1_1 << 3);
   $3 = $1944($0_1 + 92 | 0, 0);
   if ($3) {
    $1602($2_1, $3, $1944($0_1, 84) << 3);
    $17($1944($0_1, 92));
   }
   $1973($0_1, 88, $1_1);
   $1973($0_1, 92, $2_1);
  }
  $1982($0_1, 120, 0, 1);
  $1973($0_1, 84, 0);
  $2_1 = $1944($0_1, 0);
  $1_1 = $1944($0_1, 4);
  label$13 : {
   if (($2_1 | 0) != ($1_1 | 0)) {
    break label$13
   }
   $3 = $2_1 + 1 | 0;
   $4_1 = $1_1;
   if ($1_1) {
    $2_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0
   } else {
    $2_1 = 8
   }
   $1_1 = ($2_1 | 0) > ($3 | 0) ? $2_1 : $3;
   if (($4_1 | 0) >= ($1_1 | 0)) {
    break label$13
   }
   $2_1 = $16(Math_imul($1_1, 40));
   $3 = $1944($0_1, 8);
   if ($3) {
    $1602($2_1, $3, Math_imul($1944($0_1, 0), 40));
    $17($1944($0_1, 8));
   }
   $1973($0_1, 4, $1_1);
   $1973($0_1, 8, $2_1);
  }
  $1_1 = $1944($0_1, 8) + Math_imul($1944($0_1, 0), 40) | 0;
  $1982($1_1, 0, 0, 0);
  $1982($1_1 + 32 | 0, 0, 0, 0);
  $1982($1_1 + 24 | 0, 0, 0, 0);
  $1982($1_1 + 16 | 0, 0, 0, 0);
  $1982($1_1 + 8 | 0, 0, 0, 0);
  $1973($0_1, 140, 1065353216);
  $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
 }
 
 function $373($0_1) {
  var $1_1 = 0;
  $1_1 = $1944($0_1, 8);
  if ($1_1) {
   $1982($0_1, 0, 0, 0);
   $17($1_1);
   $1973($0_1, 8, 0);
  }
  $1_1 = $1944($0_1 + 20 | 0, 0);
  if ($1_1) {
   $1982($0_1, 12, 0, 0);
   $17($1_1);
   $1973($0_1, 20, 0);
  }
  $1_1 = $1944($0_1 + 32 | 0, 0);
  if ($1_1) {
   $1982($0_1, 24, 0, 0);
   $17($1_1);
   $1973($0_1, 32, 0);
  }
  $1982($0_1, 52, 0, 0);
  $1982($0_1, 36, 0, 0);
  $1_1 = $1944($0_1 + 68 | 0, 0);
  if ($1_1) {
   $1982($0_1, 60, 0, 0);
   $17($1_1);
   $1973($0_1, 68, 0);
  }
  $1_1 = $1944($0_1 + 80 | 0, 0);
  if ($1_1) {
   $1982($0_1, 72, 0, 0);
   $17($1_1);
   $1973($0_1, 80, 0);
  }
  $1_1 = $1944($0_1 + 92 | 0, 0);
  if ($1_1) {
   $1982($0_1, 84, 0, 0);
   $17($1_1);
   $1973($0_1, 92, 0);
  }
  $374($0_1 + 120 | 0);
 }
 
 function $374($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0;
  if (($1944($0_1, 8) | 0) > 0) {
   while (1) {
    if (($1944($0_1, 0) | 0) == ($2_1 | 0)) {
     $1_1 = $1944($0_1, 16) + Math_imul($2_1, 24) | 0;
     $1982($1_1, 0, 0, 0);
     $1982($1_1 + 16 | 0, 0, 0, 0);
     $1982($1_1 + 8 | 0, 0, 0, 0);
    }
    $3 = Math_imul($2_1, 24);
    $1_1 = $1944($0_1, 16) + $3 | 0;
    $4_1 = $1944($1_1, 8);
    if ($4_1) {
     $1982($1_1, 0, 0, 0);
     $17($4_1);
     $1973($1_1, 8, 0);
    }
    $1_1 = $1944($0_1, 16) + $3 | 0;
    $3 = $1_1 + 20 | 0;
    $4_1 = $1944($3, 0);
    if ($4_1) {
     $1982($1_1, 12, 0, 0);
     $17($4_1);
     $1973($3, 0, 0);
    }
    $2_1 = $2_1 + 1 | 0;
    if (($1944($0_1, 8) | 0) > ($2_1 | 0)) {
     continue
    }
    break;
   }
  }
  $1982($0_1, 0, 0, 1);
  $2_1 = $1944($0_1 + 16 | 0, 0);
  if ($2_1) {
   $1982($0_1, 8, 0, 0);
   $17($2_1);
   $1973($0_1, 16, 0);
  }
 }
 
 function $375($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $5_1 = $4_1 + 8 | 0;
  $1983($5_1, 0, $1959($0_1 + 104 | 0, 0), i64toi32_i32$HIGH_BITS);
  $1983($4_1, 0, $1959($0_1, 96), i64toi32_i32$HIGH_BITS);
  $7_1 = $1944($0_1 + 116 | 0, 0);
  $8 = $1944($0_1 + 112 | 0, 0);
  $9 = $1944($0_1, 12);
  $2_1 = $1944($0_1, 0);
  $1_1 = $1944($0_1, 4);
  label$1 : {
   if (($2_1 | 0) != ($1_1 | 0)) {
    break label$1
   }
   $3 = $2_1 + 1 | 0;
   $2_1 = 8;
   $6_1 = $1_1;
   $2_1 = $1_1 ? $1_1 + (($1_1 | 0) / 2 | 0) | 0 : $2_1;
   $1_1 = ($2_1 | 0) > ($3 | 0) ? $2_1 : $3;
   if (($6_1 | 0) >= ($1_1 | 0)) {
    break label$1
   }
   $2_1 = $16(Math_imul($1_1, 40));
   $3 = $1944($0_1, 8);
   if ($3) {
    $1602($2_1, $3, Math_imul($1944($0_1, 0), 40));
    $17($1944($0_1, 8));
   }
   $1973($0_1, 4, $1_1);
   $1973($0_1, 8, $2_1);
  }
  $2_1 = $1960($5_1, 0);
  $3 = i64toi32_i32$HIGH_BITS;
  $5_1 = $1960($4_1, 0);
  $6_1 = i64toi32_i32$HIGH_BITS;
  $1_1 = $1944($0_1, 8) + Math_imul($1944($0_1, 0), 40) | 0;
  $1973($1_1, 16, $8);
  $1973($1_1, 20, $7_1);
  $1973($1_1, 24, $9);
  $1982($1_1, 28, 0, 0);
  $1982($1_1, 0, $5_1, $6_1);
  $1973($1_1 + 36 | 0, 0, 0);
  $1982($1_1 + 8 | 0, 0, $2_1, $3);
  $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
  global$0 = $4_1 + 16 | 0;
 }
 
 function $377($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = Math_fround($1_1);
  var $2_1 = Math_fround(0), $3 = 0;
  $0_1 = $1944($0_1, 44);
  $2_1 = Math_fround($1_1 + Math_fround(.9999989867210388));
  label$1 : {
   if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$2_1;
    break label$1;
   }
   $3 = -2147483648;
  }
  if (($3 | 0) <= 63) {
   return $1937(($0_1 + $3 | 0) + 432 | 0, 0) | 0
  }
  $2_1 = $1963($0_1, 20);
  $1_1 = Math_fround(Math_ceil(Math_fround(Math_fround(3.1415927410125732) / $1590(Math_fround(Math_fround(1.0) - Math_fround(($1_1 > $2_1 ? $2_1 : $1_1) / $1_1))))));
  label$4 : {
   if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
    $0_1 = ~~$1_1;
    break label$4;
   }
   $0_1 = -2147483648;
  }
  $0_1 = ($0_1 + 1 | 0) / 2 << 1;
  $0_1 = ($0_1 | 0) >= 512 ? 512 : $0_1;
  return (($0_1 | 0) <= 4 ? 4 : $0_1) | 0;
 }
 
 function $378($0_1, $1_1, $2_1, $3) {
  var $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = 0, $10_1 = 0;
  $5_1 = $1963($2_1, 4);
  $8 = $1963($2_1, 0);
  $6_1 = $1963($1_1, 4);
  $7_1 = $1963($1_1, 0);
  label$1 : {
   if (!$3) {
    $4_1 = $5_1;
    $5_1 = $8;
    break label$1;
   }
   $4_1 = $1963($0_1 + 104 | 0, 0);
   $8 = $4_1 < $8 ? $4_1 : $8;
   $4_1 = $1963($0_1 + 100 | 0, 0);
   $6_1 = $4_1 > $6_1 ? $4_1 : $6_1;
   $4_1 = $1963($0_1, 96);
   $7_1 = $4_1 > $7_1 ? $4_1 : $7_1;
   $4_1 = $1963($0_1 + 108 | 0, 0);
   if (!($5_1 > $4_1)) {
    $4_1 = $5_1
   }
   $5_1 = $8;
  }
  $4_1 = $4_1 <= $6_1 ? $6_1 : $4_1;
  $5_1 = $5_1 <= $7_1 ? $7_1 : $5_1;
  $1_1 = $1944($0_1, 60);
  $2_1 = $1944($0_1 - -64 | 0, 0);
  label$5 : {
   if (($1_1 | 0) != ($2_1 | 0)) {
    break label$5
   }
   $1_1 = $1_1 + 1 | 0;
   if ($2_1) {
    $3 = $2_1 + (($2_1 | 0) / 2 | 0) | 0
   } else {
    $3 = 8
   }
   $3 = ($1_1 | 0) < ($3 | 0) ? $3 : $1_1;
   if (($3 | 0) <= ($2_1 | 0)) {
    break label$5
   }
   $2_1 = $16($3 << 4);
   $1_1 = $1944($0_1 + 68 | 0, 0);
   if ($1_1) {
    $1602($2_1, $1_1, $1944($0_1, 60) << 4);
    $17($1944($0_1, 68));
   }
   $1973($0_1, 64, $3);
   $1973($0_1, 68, $2_1);
  }
  $1_1 = $1944($0_1 + 68 | 0, 0) + ($1944($0_1, 60) << 4) | 0;
  $1986($1_1, 12, $4_1);
  $1986($1_1, 8, $5_1);
  $1986($1_1, 4, $6_1);
  $1986($1_1, 0, $7_1);
  $1986($0_1 + 108 | 0, 0, $4_1);
  $1986($0_1 + 104 | 0, 0, $5_1);
  $1986($0_1 + 100 | 0, 0, $6_1);
  $1986($0_1, 96, $7_1);
  $1973($0_1, 60, $1944($0_1, 60) + 1 | 0);
  $10_1 = $0_1 + 96 | 0;
  label$9 : {
   $1_1 = $1944($0_1, 8);
   $3 = $1944($0_1, 0);
   $2_1 = $3 - 1 | 0;
   $9 = $1_1 + Math_imul($2_1, 40) | 0;
   $1_1 = $1944($9, 28);
   if (!$1_1) {
    break label$9
   }
   if (!$1645($9, $10_1, 16)) {
    break label$9
   }
   $375($0_1);
   return;
  }
  label$10 : {
   if (($3 | 0) < 2 | $1_1) {
    break label$10
   }
   $1_1 = $9 - 40 | 0;
   if ($1645($10_1, $1_1, 24)) {
    break label$10
   }
   if ($1944($1_1, 32)) {
    break label$10
   }
   $1973($0_1, 0, $2_1);
   return;
  }
  $1982($9, 0, $1959($10_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($9 + 8 | 0, 0, $1959($10_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
 }
 
 function $379($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $1_1 = global$0 - 32 | 0;
  global$0 = $1_1;
  $2_1 = $1944($0_1, 44);
  $3 = $1959($2_1, 24);
  $4_1 = i64toi32_i32$HIGH_BITS;
  $1982($1_1, 24, $3, $4_1);
  $2_1 = $1959($2_1 + 32 | 0, 0);
  $5_1 = i64toi32_i32$HIGH_BITS;
  $1983($1_1, 8, $3, $4_1);
  $1982($1_1, 16, $2_1, $5_1);
  $1983($1_1, 0, $2_1, $5_1);
  $378($0_1, $1_1 + 8 | 0, $1_1, 0);
  global$0 = $1_1 + 32 | 0;
 }
 
 function $380($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = $1944($0_1, 60);
  $2_1 = $1_1 - 1 | 0;
  $1973($0_1, 60, $2_1);
  $2_1 = (wasm2js_i32$0 = ($1944($0_1 + 68 | 0, 0) + ($1_1 << 4) | 0) - 32 | 0, wasm2js_i32$1 = $1944($0_1, 44) + 24 | 0, wasm2js_i32$2 = $2_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1982($0_1, 96, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($0_1 + 104 | 0, 0, $1959($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
  $3 = $0_1 + 96 | 0;
  label$1 : {
   $1_1 = $1944($0_1, 8);
   $4_1 = $1944($0_1, 0);
   $5_1 = $4_1 - 1 | 0;
   $1_1 = $1_1 + Math_imul($5_1, 40) | 0;
   $6_1 = $1944($1_1, 28);
   if (!$6_1) {
    break label$1
   }
   if (!$1645($1_1, $3, 16)) {
    break label$1
   }
   $375($0_1);
   return;
  }
  label$2 : {
   if (($4_1 | 0) < 2 | $6_1) {
    break label$2
   }
   $4_1 = $3;
   $3 = $1_1 - 40 | 0;
   if ($1645($4_1, $3, 24)) {
    break label$2
   }
   if ($1944($3, 32)) {
    break label$2
   }
   $1973($0_1, 0, $5_1);
   return;
  }
  $0_1 = $1959($2_1, 0);
  $3 = i64toi32_i32$HIGH_BITS;
  $1982($1_1 + 8 | 0, 0, $1959($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
  $1982($1_1, 0, $0_1, $3);
 }
 
 function $381($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = $1944($0_1, 72);
  $3 = $1944($0_1 + 76 | 0, 0);
  label$1 : {
   if (($2_1 | 0) != ($3 | 0)) {
    break label$1
   }
   $4_1 = $2_1 + 1 | 0;
   $5_1 = $3;
   if ($3) {
    $2_1 = $3 + (($3 | 0) / 2 | 0) | 0
   } else {
    $2_1 = 8
   }
   $3 = ($2_1 | 0) > ($4_1 | 0) ? $2_1 : $4_1;
   if (($5_1 | 0) >= ($3 | 0)) {
    break label$1
   }
   $2_1 = $16($3 << 2);
   $4_1 = $1944($0_1 + 80 | 0, 0);
   if ($4_1) {
    $1602($2_1, $4_1, $1944($0_1, 72) << 2);
    $17($1944($0_1, 80));
   }
   $1973($0_1, 76, $3);
   $1973($0_1, 80, $2_1);
  }
  $1973($1944($0_1 + 80 | 0, 0) + ($1944($0_1, 72) << 2) | 0, 0, $1_1);
  $1973($0_1 + 112 | 0, 0, $1_1);
  $1973($0_1, 72, $1944($0_1, 72) + 1 | 0);
  label$5 : {
   $4_1 = $1944($0_1, 8);
   $5_1 = $1944($0_1, 0);
   $3 = $5_1 - 1 | 0;
   $2_1 = $4_1 + Math_imul($3, 40) | 0;
   $6_1 = $1944($2_1, 28);
   if (!$6_1) {
    break label$5
   }
   if (($1944($2_1, 16) | 0) == ($1_1 | 0)) {
    break label$5
   }
   $375($0_1);
   return;
  }
  label$6 : {
   if (($5_1 | 0) < 2 | $6_1) {
    break label$6
   }
   $2_1 = $2_1 - 40 | 0;
   if ($1645($0_1 + 96 | 0, $2_1, 24)) {
    break label$6
   }
   if ($1944($2_1, 32)) {
    break label$6
   }
   $1973($0_1, 0, $3);
   return;
  }
  $1973(Math_imul($3, 40) + $4_1 | 0, 16, $1_1);
 }
 
 function $382($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $1_1 = $1944($0_1, 72);
  $2_1 = $1_1 - 1 | 0;
  $1973($0_1, 72, $2_1);
  $4_1 = $0_1 + 112 | 0;
  if ($2_1) {
   $1_1 = $1944(($1944($0_1 + 80 | 0, 0) + ($1_1 << 2) | 0) - 8 | 0, 0)
  } else {
   $1_1 = 0
  }
  $1973($4_1, 0, $1_1);
  label$3 : {
   $5_1 = $1944($0_1, 8);
   $6_1 = $1944($0_1, 0);
   $2_1 = $6_1 - 1 | 0;
   $3 = $5_1 + Math_imul($2_1, 40) | 0;
   $4_1 = $1944($3, 28);
   if (!$4_1) {
    break label$3
   }
   if (($1944($3, 16) | 0) == ($1_1 | 0)) {
    break label$3
   }
   $375($0_1);
   return;
  }
  label$4 : {
   if (($6_1 | 0) < 2 | $4_1) {
    break label$4
   }
   $3 = $3 - 40 | 0;
   if ($1645($0_1 + 96 | 0, $3, 24)) {
    break label$4
   }
   if ($1944($3, 32)) {
    break label$4
   }
   $1973($0_1, 0, $2_1);
   return;
  }
  $1973(Math_imul($2_1, 40) + $5_1 | 0, 16, $1_1);
 }
 
 function $383($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  label$1 : {
   if ($1944($0_1, 40) + $2_1 >>> 0 < 65536) {
    break label$1
   }
   if (!($1937($0_1, 36) & 8)) {
    break label$1
   }
   $1973($0_1, 40, 0);
   $3 = $1944($0_1, 24);
   $1973($0_1 + 116 | 0, 0, $3);
   $4_1 = $1944($0_1, 8) + Math_imul($1944($0_1, 0) - 1 | 0, 40) | 0;
   if ($1944($4_1, 28)) {
    $375($0_1);
    break label$1;
   }
   $1973($4_1, 20, $3);
  }
  $3 = (Math_imul($1944($0_1, 0), 40) + $1944($0_1, 8) | 0) - 12 | 0;
  $1973($3, 0, $1944($3, 0) + $1_1 | 0);
  $3 = $1944($0_1 + 28 | 0, 0);
  $5_1 = $1944($0_1, 24);
  $2_1 = $5_1 + $2_1 | 0;
  label$3 : {
   if (($3 | 0) >= ($2_1 | 0)) {
    break label$3
   }
   $6_1 = $3;
   if ($3) {
    $4_1 = $3 + (($3 | 0) / 2 | 0) | 0
   } else {
    $4_1 = 8
   }
   $3 = ($2_1 | 0) < ($4_1 | 0) ? $4_1 : $2_1;
   if (($6_1 | 0) >= ($3 | 0)) {
    break label$3
   }
   $4_1 = $16(Math_imul($3, 20));
   $6_1 = $1944($0_1 + 32 | 0, 0);
   if ($6_1) {
    $1602($4_1, $6_1, Math_imul($1944($0_1, 24), 20));
    $17($1944($0_1, 32));
   }
   $1973($0_1, 28, $3);
   $1973($0_1, 32, $4_1);
  }
  $1973($0_1, 24, $2_1);
  $1973($0_1, 52, $1944($0_1 + 32 | 0, 0) + Math_imul($5_1, 20) | 0);
  $2_1 = $1944($0_1 + 16 | 0, 0);
  $4_1 = $1944($0_1, 12);
  $3 = $4_1 + $1_1 | 0;
  label$7 : {
   if (($2_1 | 0) >= ($3 | 0)) {
    break label$7
   }
   if ($2_1) {
    $1_1 = $2_1 + (($2_1 | 0) / 2 | 0) | 0
   } else {
    $1_1 = 8
   }
   $1_1 = ($1_1 | 0) > ($3 | 0) ? $1_1 : $3;
   if (($1_1 | 0) <= ($2_1 | 0)) {
    break label$7
   }
   $2_1 = $16($1_1 << 1);
   $5_1 = $1944($0_1 + 20 | 0, 0);
   if ($5_1) {
    $1602($2_1, $5_1, $1944($0_1, 12) << 1);
    $17($1944($0_1, 20));
   }
   $1973($0_1, 16, $1_1);
   $1973($0_1, 20, $2_1);
  }
  $1973($0_1, 12, $3);
  $1973($0_1, 56, $1944($0_1 + 20 | 0, 0) + ($4_1 << 1) | 0);
 }
 
 function $384($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = (Math_imul($1944($0_1, 0), 40) + $1944($0_1, 8) | 0) - 12 | 0;
  $1973($3, 0, $1944($3, 0) - $1_1 | 0);
  $1973($0_1, 24, $1944($0_1, 24) - $2_1 | 0);
  $1973($0_1, 12, $1944($0_1, 12) - $1_1 | 0);
 }
 
 function $388($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = 0, $14 = 0, $15_1 = Math_fround(0), $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = 0, $21_1 = 0, $22_1 = Math_fround(0), $23_1 = 0, $24 = 0, $25_1 = 0, $26_1 = 0, $27_1 = 0, $28_1 = 0, $29_1 = Math_fround(0), $30 = Math_fround(0), $31_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $13 = global$0;
  $26_1 = $13;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       if (($2_1 | 0) < 2) {
        break label$5
       }
       $9 = $2_1 - 1 | 0;
       $6_1 = $4_1 & 1;
       $20_1 = $6_1 ? $2_1 : $9;
       $19 = $1959($1944($0_1, 44), 0);
       $21_1 = i64toi32_i32$HIGH_BITS;
       $4_1 = $1944($0_1, 36);
       if ($4_1 & 1) {
        $10_1 = $1963($0_1, 140);
        $7_1 = $4_1 >>> 1 | 0;
        $12_1 = $5_1 >= Math_fround(1.0) ? $5_1 : Math_fround(1.0);
        label$7 : {
         if (Math_fround(Math_abs($12_1)) < Math_fround(2147483648.0)) {
          $4_1 = ~~$12_1;
          break label$7;
         }
         $4_1 = -2147483648;
        }
        $17_1 = $4_1;
        $16_1 = $5_1 > $10_1;
        $18_1 = $7_1 & ($4_1 | 0) < 63 & Math_fround($12_1 - Math_fround($4_1 | 0)) <= Math_fround(9.999999747378752e-06) & $10_1 == Math_fround(1.0);
        $14 = Math_imul($20_1, $18_1 ? 6 : $16_1 ? 18 : 12);
        label$9 : {
         if (($18_1 | 0) == 1) {
          $7_1 = $2_1 << 1;
          $4_1 = 3;
          break label$9;
         }
         $7_1 = $16_1 ? $2_1 << 2 : Math_imul($2_1, 3);
         $4_1 = $16_1 ? 5 : 3;
        }
        $31_1 = $7_1;
        $383($0_1, $14, $7_1);
        $7_1 = $13;
        $13 = $2_1 << 3;
        $14 = $7_1 - (Math_imul($13, $4_1) + 15 & -16) | 0;
        global$0 = $14;
        if (($20_1 | 0) > 0) {
         $7_1 = 0;
         while (1) {
          $4_1 = $7_1 + 1 | 0;
          $24 = ((($2_1 | 0) != ($4_1 | 0) ? $4_1 : 0) << 3) + $1_1 | 0;
          $7_1 = $7_1 << 3;
          $25_1 = $7_1 + $1_1 | 0;
          $5_1 = Math_fround($1963($24, 0) - $1963($25_1, 0));
          $8 = Math_fround($1963($24, 4) - $1963($25_1, 4));
          $11_1 = Math_fround(Math_fround($5_1 * $5_1) + Math_fround($8 * $8));
          if ($11_1 > Math_fround(0.0)) {
           $11_1 = Math_fround(Math_fround(1.0) / Math_fround(Math_sqrt($11_1)));
           $8 = Math_fround($8 * $11_1);
           $5_1 = Math_fround($5_1 * $11_1);
          }
          $7_1 = $7_1 + $14 | 0;
          $1986($7_1, 4, Math_fround(-$5_1));
          $1986($7_1, 0, $8);
          $7_1 = $4_1;
          if (($4_1 | 0) != ($20_1 | 0)) {
           continue
          }
          break;
         };
        }
        if (!$6_1) {
         $1983($14 + ($9 << 3) | 0, 0, $1960(($14 + ($2_1 << 3) | 0) - 16 | 0, 0), i64toi32_i32$HIGH_BITS)
        }
        $24 = $3 & 16777215;
        $13 = $13 + $14 | 0;
        if ((!$16_1 | $18_1) == 1) {
         $12_1 = $18_1 ? Math_fround(Math_fround($12_1 * Math_fround(.5)) + Math_fround(1.0)) : $10_1;
         if (!$6_1) {
          $5_1 = $1963($1_1, 0);
          $8 = $1963($14, 0);
          $10_1 = $1963($1_1, 4);
          $11_1 = Math_fround($12_1 * $1963($14, 4));
          $1986($13 + 12 | 0, 0, Math_fround($10_1 - $11_1));
          $8 = Math_fround($12_1 * $8);
          $1986($13, 8, Math_fround($5_1 - $8));
          $1986($13, 4, Math_fround($11_1 + $10_1));
          $1986($13, 0, Math_fround($8 + $5_1));
          $4_1 = $9 << 3;
          $7_1 = $4_1 + $1_1 | 0;
          $5_1 = $1963($7_1, 4);
          $6_1 = $4_1 + $14 | 0;
          $8 = $1963($6_1, 4);
          $4_1 = $13 + ($9 << 4) | 0;
          $10_1 = $1963($7_1, 0);
          $11_1 = Math_fround($12_1 * $1963($6_1, 0));
          $1986($4_1 + 8 | 0, 0, Math_fround($10_1 - $11_1));
          $8 = Math_fround($12_1 * $8);
          $1986($4_1, 4, Math_fround($5_1 + $8));
          $1986($4_1, 0, Math_fround($11_1 + $10_1));
          $1986($4_1 + 12 | 0, 0, Math_fround($5_1 - $8));
         }
         if (($20_1 | 0) <= 0) {
          break label$2
         }
         $25_1 = $18_1 ? 2 : 3;
         $4_1 = $1944($0_1, 56);
         $7_1 = $1944($0_1, 40);
         $6_1 = 0;
         while (1) {
          $9 = $7_1;
          $16_1 = $6_1 + 1 | 0;
          $23_1 = ($16_1 | 0) == ($2_1 | 0);
          $7_1 = (wasm2js_i32$0 = $1944($0_1, 40), wasm2js_i32$1 = $7_1 + $25_1 | 0, wasm2js_i32$2 = $23_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
          $6_1 = $14 + ($6_1 << 3) | 0;
          $23_1 = $23_1 ? 0 : $16_1;
          $27_1 = $23_1 << 3;
          $28_1 = $27_1 + $14 | 0;
          $5_1 = Math_fround(Math_fround($1963($6_1, 0) + $1963($28_1, 0)) * Math_fround(.5));
          $8 = Math_fround(Math_fround($1963($6_1, 4) + $1963($28_1, 4)) * Math_fround(.5));
          $10_1 = Math_fround(Math_fround($5_1 * $5_1) + Math_fround($8 * $8));
          if ($10_1 > Math_fround(9.999999974752427e-07)) {
           $22_1 = $8;
           $8 = Math_fround(Math_fround(1.0) / $10_1);
           $10_1 = $8 > Math_fround(100.0) ? Math_fround(100.0) : $8;
           $8 = Math_fround($22_1 * $10_1);
           $5_1 = Math_fround($5_1 * $10_1);
          }
          $6_1 = $13 + ($23_1 << 4) | 0;
          $23_1 = $1_1 + $27_1 | 0;
          $10_1 = $1963($23_1, 0);
          $11_1 = Math_fround($12_1 * $5_1);
          $1986($6_1, 0, Math_fround($10_1 + $11_1));
          $5_1 = $1963($23_1, 4);
          $1986($6_1, 8, Math_fround($10_1 - $11_1));
          $8 = Math_fround($12_1 * $8);
          $1986($6_1 + 12 | 0, 0, Math_fround($5_1 - $8));
          $1986($6_1, 4, Math_fround($8 + $5_1));
          $1970($4_1, 2, $9);
          $1970($4_1, 0, $7_1);
          label$21 : {
           if ($18_1) {
            $1970($4_1, 10, $7_1);
            $9 = $9 + 1 | 0;
            $1970($4_1, 8, $9);
            $1970($4_1, 6, $7_1 + 1 | 0);
            $1970($4_1, 4, $9);
            $4_1 = $4_1 + 12 | 0;
            $1973($0_1, 56, $4_1);
            break label$21;
           }
           $1970($4_1, 20, $7_1);
           $1970($4_1, 18, $9);
           $1970($4_1, 16, $9);
           $1970($4_1, 10, $7_1);
           $6_1 = $7_1 + 1 | 0;
           $1970($4_1, 22, $6_1);
           $1970($4_1, 14, $9 + 1 | 0);
           $1970($4_1, 12, $6_1);
           $1970($4_1, 8, $7_1 + 2 | 0);
           $9 = $9 + 2 | 0;
           $1970($4_1, 6, $9);
           $1970($4_1, 4, $9);
           $4_1 = $4_1 + 24 | 0;
           $1973($0_1, 56, $4_1);
          }
          $6_1 = $16_1;
          if (($20_1 | 0) != ($6_1 | 0)) {
           continue
          }
          break;
         };
         break label$2;
        }
        $12_1 = Math_fround(Math_fround($12_1 - $10_1) * Math_fround(.5));
        if (!$6_1) {
         $8 = $1963($1_1, 0);
         $15_1 = $1963($14, 0);
         $5_1 = $1963($14, 4);
         $11_1 = $1963($1_1, 4);
         $1986($13 + 12 | 0, 0, Math_fround(Math_fround($12_1 * $5_1) + $11_1));
         $1986($13, 8, Math_fround($8 + Math_fround($12_1 * $15_1)));
         $22_1 = $5_1;
         $5_1 = Math_fround($10_1 + $12_1);
         $1986($13, 4, Math_fround($11_1 + Math_fround($22_1 * $5_1)));
         $1986($13, 0, Math_fround($8 + Math_fround($5_1 * $15_1)));
         $15_1 = $1963($14, 0);
         $1986($13 + 20 | 0, 0, Math_fround($11_1 - Math_fround($12_1 * $1963($14, 4))));
         $1986($13, 16, Math_fround($8 - Math_fround($12_1 * $15_1)));
         $15_1 = $1963($14, 0);
         $1986($13 + 28 | 0, 0, Math_fround($11_1 - Math_fround($5_1 * $1963($14, 4))));
         $1986($13, 24, Math_fround($8 - Math_fround($5_1 * $15_1)));
         $4_1 = $9 << 3;
         $7_1 = $4_1 + $1_1 | 0;
         $8 = $1963($7_1, 4);
         $6_1 = $4_1 + $14 | 0;
         $15_1 = $1963($6_1, 4);
         $4_1 = $13 + ($9 << 5) | 0;
         $22_1 = $1963($6_1, 0);
         $29_1 = Math_fround($12_1 * $22_1);
         $11_1 = $1963($7_1, 0);
         $1986($4_1 + 8 | 0, 0, Math_fround($29_1 + $11_1));
         $30 = Math_fround($5_1 * $15_1);
         $1986($4_1, 4, Math_fround($8 + $30));
         $5_1 = Math_fround($5_1 * $22_1);
         $1986($4_1, 0, Math_fround($11_1 + $5_1));
         $15_1 = Math_fround($12_1 * $15_1);
         $1986($4_1 + 12 | 0, 0, Math_fround($8 + $15_1));
         $1986($4_1 + 20 | 0, 0, Math_fround($8 - $15_1));
         $1986($4_1 + 16 | 0, 0, Math_fround($11_1 - $29_1));
         $1986($4_1 + 28 | 0, 0, Math_fround($8 - $30));
         $1986($4_1 + 24 | 0, 0, Math_fround($11_1 - $5_1));
        }
        if (($20_1 | 0) <= 0) {
         break label$3
        }
        $15_1 = Math_fround($10_1 + $12_1);
        $4_1 = $1944($0_1, 56);
        $7_1 = $1944($0_1, 40);
        $6_1 = 0;
        while (1) {
         $16_1 = $6_1 + 1 | 0;
         $17_1 = ($16_1 | 0) == ($2_1 | 0);
         $9 = (wasm2js_i32$0 = $1944($0_1, 40), wasm2js_i32$1 = $7_1 + 4 | 0, wasm2js_i32$2 = $17_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
         $6_1 = $14 + ($6_1 << 3) | 0;
         $17_1 = $17_1 ? 0 : $16_1;
         $18_1 = $17_1 << 3;
         $25_1 = $18_1 + $14 | 0;
         $5_1 = Math_fround(Math_fround($1963($6_1, 0) + $1963($25_1, 0)) * Math_fround(.5));
         $8 = Math_fround(Math_fround($1963($6_1, 4) + $1963($25_1, 4)) * Math_fround(.5));
         $10_1 = Math_fround(Math_fround($5_1 * $5_1) + Math_fround($8 * $8));
         if ($10_1 > Math_fround(9.999999974752427e-07)) {
          $22_1 = $5_1;
          $5_1 = Math_fround(Math_fround(1.0) / $10_1);
          $10_1 = $5_1 > Math_fround(100.0) ? Math_fround(100.0) : $5_1;
          $5_1 = Math_fround($22_1 * $10_1);
          $8 = Math_fround($8 * $10_1);
         }
         $6_1 = $13 + ($17_1 << 5) | 0;
         $22_1 = Math_fround($15_1 * $5_1);
         $17_1 = $1_1 + $18_1 | 0;
         $11_1 = $1963($17_1, 0);
         $1986($6_1, 0, Math_fround($22_1 + $11_1));
         $10_1 = $1963($17_1, 4);
         $1986($6_1, 24, Math_fround($11_1 - $22_1));
         $5_1 = Math_fround($12_1 * $5_1);
         $1986($6_1, 16, Math_fround($11_1 - $5_1));
         $1986($6_1, 8, Math_fround($5_1 + $11_1));
         $5_1 = Math_fround($15_1 * $8);
         $1986($6_1 + 28 | 0, 0, Math_fround($10_1 - $5_1));
         $8 = Math_fround($12_1 * $8);
         $1986($6_1 + 20 | 0, 0, Math_fround($10_1 - $8));
         $1986($6_1 + 12 | 0, 0, Math_fround($8 + $10_1));
         $1986($6_1, 4, Math_fround($5_1 + $10_1));
         $17_1 = $9 + 2 | 0;
         $1970($4_1, 34, $17_1);
         $1970($4_1, 32, $9 + 3 | 0);
         $6_1 = $7_1 + 3 | 0;
         $1970($4_1, 30, $6_1);
         $1970($4_1, 28, $6_1);
         $18_1 = $7_1 + 2 | 0;
         $1970($4_1, 26, $18_1);
         $1970($4_1, 24, $17_1);
         $6_1 = $9 + 1 | 0;
         $1970($4_1, 22, $6_1);
         $1970($4_1, 20, $9);
         $1970($4_1, 18, $7_1);
         $1970($4_1, 16, $7_1);
         $7_1 = $7_1 + 1 | 0;
         $1970($4_1, 14, $7_1);
         $1970($4_1, 12, $6_1);
         $1970($4_1, 10, $6_1);
         $1970($4_1, 8, $17_1);
         $1970($4_1, 6, $18_1);
         $1970($4_1, 4, $18_1);
         $1970($4_1, 2, $7_1);
         $1970($4_1, 0, $6_1);
         $4_1 = $4_1 + 36 | 0;
         $7_1 = $9;
         $6_1 = $16_1;
         if (($20_1 | 0) != ($6_1 | 0)) {
          continue
         }
         break;
        };
        break label$4;
       }
       $383($0_1, Math_imul($20_1, 6), $20_1 << 2);
       if (($20_1 | 0) <= 0) {
        break label$5
       }
       $12_1 = Math_fround($5_1 * Math_fround(.5));
       $4_1 = 0;
       while (1) {
        $7_1 = $4_1 + 1 | 0;
        $9 = ((($2_1 | 0) != ($7_1 | 0) ? $7_1 : 0) << 3) + $1_1 | 0;
        $16_1 = $9 + 4 | 0;
        $4_1 = ($4_1 << 3) + $1_1 | 0;
        $17_1 = $4_1 + 4 | 0;
        $5_1 = $1963($9, 0);
        $10_1 = $1963($4_1, 0);
        $5_1 = Math_fround($5_1 - $10_1);
        $8 = $1963($9, 4);
        $11_1 = $1963($4_1, 4);
        $8 = Math_fround($8 - $11_1);
        $15_1 = Math_fround(Math_fround($5_1 * $5_1) + Math_fround($8 * $8));
        if ($15_1 > Math_fround(0.0)) {
         $15_1 = Math_fround(Math_fround(1.0) / Math_fround(Math_sqrt($15_1)));
         $5_1 = Math_fround($5_1 * $15_1);
         $8 = Math_fround($8 * $15_1);
        }
        $6_1 = $1944($0_1, 52);
        $1982($6_1, 8, $19, $21_1);
        $5_1 = Math_fround($12_1 * $5_1);
        $1986($6_1, 4, Math_fround($11_1 - $5_1));
        $8 = Math_fround($12_1 * $8);
        $1986($6_1, 0, Math_fround($10_1 + $8));
        $6_1 = $1944($0_1, 52);
        $1973($6_1, 16, $3);
        $1986($6_1, 20, Math_fround($8 + $1963($9, 0)));
        $10_1 = $1963($16_1, 0);
        $1982($6_1 + 28 | 0, 0, $19, $21_1);
        $1986($6_1 + 24 | 0, 0, Math_fround($10_1 - $5_1));
        $6_1 = $1944($0_1, 52);
        $1973($6_1 + 36 | 0, 0, $3);
        $1986($6_1, 40, Math_fround($1963($9, 0) - $8));
        $10_1 = $1963($16_1, 0);
        $1982($6_1 + 48 | 0, 0, $19, $21_1);
        $1986($6_1 + 44 | 0, 0, Math_fround($5_1 + $10_1));
        $9 = $1944($0_1, 52);
        $1973($9 + 56 | 0, 0, $3);
        $1986($9, 60, Math_fround($1963($4_1, 0) - $8));
        $8 = $1963($17_1, 0);
        $1982($9 + 68 | 0, 0, $19, $21_1);
        $1986($9 - -64 | 0, 0, Math_fround($5_1 + $8));
        $4_1 = $1944($0_1, 52);
        $1973($4_1 + 76 | 0, 0, $3);
        $1973($0_1, 52, $4_1 + 80 | 0);
        $4_1 = $1944($0_1, 56);
        $9 = $1944($0_1, 40);
        $1970($4_1, 6, $9);
        $1970($4_1, 0, $9);
        $1970($4_1, 10, $9 + 3 | 0);
        $6_1 = $9 + 2 | 0;
        $1970($4_1, 8, $6_1);
        $1970($4_1, 4, $6_1);
        $1970($4_1, 2, $9 + 1 | 0);
        $1973($0_1, 40, $9 + 4 | 0);
        $1973($0_1, 56, $4_1 + 12 | 0);
        $4_1 = $7_1;
        if (($20_1 | 0) != ($4_1 | 0)) {
         continue
        }
        break;
       };
      }
      global$0 = $26_1;
      return;
     }
     $1973($0_1, 56, $4_1);
    }
    if (($2_1 | 0) <= 0) {
     break label$1
    }
    $4_1 = 0;
    while (1) {
     $1_1 = $13 + ($4_1 << 5) | 0;
     $1982($1944($0_1, 52), 0, $1960($1_1, 0), i64toi32_i32$HIGH_BITS);
     $1982($1944($0_1, 52), 8, $19, $21_1);
     $7_1 = $1944($0_1, 52);
     $1973($7_1, 16, $24);
     $1982($7_1, 20, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1982($1944($0_1, 52) + 28 | 0, 0, $19, $21_1);
     $7_1 = $1944($0_1, 52);
     $1973($7_1 + 36 | 0, 0, $3);
     $1982($7_1, 40, $1960($1_1 + 16 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1982($1944($0_1, 52) + 48 | 0, 0, $19, $21_1);
     $7_1 = $1944($0_1, 52);
     $1973($7_1 + 56 | 0, 0, $3);
     $1982($7_1, 60, $1960($1_1 + 24 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1982($1944($0_1, 52) + 68 | 0, 0, $19, $21_1);
     $1_1 = $1944($0_1, 52);
     $1973($1_1 + 76 | 0, 0, $24);
     $1973($0_1, 52, $1_1 + 80 | 0);
     $4_1 = $4_1 + 1 | 0;
     if (($4_1 | 0) != ($2_1 | 0)) {
      continue
     }
     break;
    };
    break label$1;
   }
   if (!$18_1) {
    if (($2_1 | 0) <= 0) {
     break label$1
    }
    $4_1 = 0;
    while (1) {
     $1982($1944($0_1, 52), 0, $1959(($4_1 << 3) + $1_1 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1982($1944($0_1, 52), 8, $19, $21_1);
     $7_1 = $1944($0_1, 52);
     $1973($7_1, 16, $3);
     $9 = $13 + ($4_1 << 4) | 0;
     $1982($7_1, 20, $1960($9, 0), i64toi32_i32$HIGH_BITS);
     $1982($1944($0_1, 52) + 28 | 0, 0, $19, $21_1);
     $7_1 = $1944($0_1, 52);
     $1973($7_1 + 36 | 0, 0, $24);
     $1982($7_1, 40, $1960($9 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1982($1944($0_1, 52) + 48 | 0, 0, $19, $21_1);
     $7_1 = $1944($0_1, 52);
     $1973($7_1 + 56 | 0, 0, $24);
     $1973($0_1, 52, $7_1 + 60 | 0);
     $4_1 = $4_1 + 1 | 0;
     if (($4_1 | 0) != ($2_1 | 0)) {
      continue
     }
     break;
    };
    break label$1;
   }
   if (($2_1 | 0) <= 0) {
    break label$1
   }
   $1_1 = $1944($1944($0_1, 44), 496) + ($17_1 << 4) | 0;
   $7_1 = $1944($1_1, 12);
   $19 = $1944($1_1, 8);
   $9 = $1944($1_1, 4);
   $1_1 = $1944($1_1, 0);
   $4_1 = 0;
   while (1) {
    $16_1 = $13 + ($4_1 << 4) | 0;
    $1982($1944($0_1, 52), 0, $1960($16_1, 0), i64toi32_i32$HIGH_BITS);
    $6_1 = $1944($0_1, 52);
    $1973($6_1, 8, $1_1);
    $1973($6_1 + 12 | 0, 0, $9);
    $6_1 = $1944($0_1, 52);
    $1973($6_1, 16, $3);
    $1982($6_1, 20, $1960($16_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
    $6_1 = $1944($0_1, 52);
    $1973($6_1 + 32 | 0, 0, $7_1);
    $1973($6_1 + 28 | 0, 0, $19);
    $6_1 = $1944($0_1, 52);
    $1973($6_1 + 36 | 0, 0, $3);
    $1973($0_1, 52, $6_1 + 40 | 0);
    $4_1 = $4_1 + 1 | 0;
    if (($4_1 | 0) != ($2_1 | 0)) {
     continue
    }
    break;
   };
  }
  $1973($0_1, 40, $1944($0_1, 40) + ($31_1 & 65535) | 0);
  global$0 = $26_1;
 }
 
 function $389($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = Math_fround(0), $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = 0, $21_1 = Math_fround(0);
  $11_1 = global$0;
  $19 = $11_1;
  if (($2_1 | 0) >= 3) {
   $16_1 = $1959($1944($0_1, 44), 0);
   $17_1 = i64toi32_i32$HIGH_BITS;
   label$2 : {
    label$3 : {
     if ($1937($0_1, 36) & 4) {
      $15_1 = $1963($0_1, 140);
      $18_1 = $2_1 << 1;
      $383($0_1, Math_imul($2_1, 9) - 6 | 0, $18_1);
      $12_1 = $1944($0_1, 40);
      if (($2_1 | 0) >= 3) {
       $4_1 = $1944($0_1, 56);
       $5_1 = 2;
       while (1) {
        $1970($4_1, 0, $12_1);
        $10_1 = $12_1 + ($5_1 << 1) | 0;
        $1970($4_1, 4, $10_1);
        $1970($4_1, 2, $10_1 - 2 | 0);
        $4_1 = $4_1 + 6 | 0;
        $5_1 = $5_1 + 1 | 0;
        if (($5_1 | 0) != ($2_1 | 0)) {
         continue
        }
        break;
       };
       $1973($0_1, 56, $4_1);
      }
      $10_1 = $2_1 - 1 | 0;
      $11_1 = $11_1 - (($2_1 << 3) + 15 & -16) | 0;
      global$0 = $11_1;
      if (($2_1 | 0) <= 0) {
       break label$3
      }
      $5_1 = $10_1;
      $4_1 = 0;
      while (1) {
       $6_1 = ($4_1 << 3) + $1_1 | 0;
       $5_1 = $5_1 << 3;
       $13 = $5_1 + $1_1 | 0;
       $7_1 = Math_fround($1963($6_1, 0) - $1963($13, 0));
       $8 = Math_fround($1963($6_1, 4) - $1963($13, 4));
       $9 = Math_fround(Math_fround($7_1 * $7_1) + Math_fround($8 * $8));
       if ($9 > Math_fround(0.0)) {
        $9 = Math_fround(Math_fround(1.0) / Math_fround(Math_sqrt($9)));
        $8 = Math_fround($8 * $9);
        $7_1 = Math_fround($7_1 * $9);
       }
       $5_1 = $5_1 + $11_1 | 0;
       $1986($5_1, 4, Math_fround(-$7_1));
       $1986($5_1, 0, $8);
       $5_1 = $4_1;
       $4_1 = $4_1 + 1 | 0;
       if (($4_1 | 0) != ($2_1 | 0)) {
        continue
       }
       break;
      };
      break label$3;
     }
     $383($0_1, Math_imul($2_1, 3) - 6 | 0, $2_1);
     if (($2_1 | 0) > 0) {
      while (1) {
       $1982($1944($0_1, 52), 0, $1959(($4_1 << 3) + $1_1 | 0, 0), i64toi32_i32$HIGH_BITS);
       $1982($1944($0_1, 52), 8, $16_1, $17_1);
       $5_1 = $1944($0_1, 52);
       $1973($5_1, 16, $3);
       $1973($0_1, 52, $5_1 + 20 | 0);
       $4_1 = $4_1 + 1 | 0;
       if (($4_1 | 0) != ($2_1 | 0)) {
        continue
       }
       break;
      }
     }
     if (($2_1 | 0) >= 3) {
      $1_1 = $1944($0_1, 40);
      $4_1 = $1944($0_1, 56);
      $5_1 = 2;
      while (1) {
       $1970($4_1, 0, $1_1);
       $3 = $1_1 + $5_1 | 0;
       $1970($4_1, 4, $3);
       $1970($4_1, 2, $3 - 1 | 0);
       $3 = $4_1 + 6 | 0;
       $4_1 = $3;
       $5_1 = $5_1 + 1 | 0;
       if (($5_1 | 0) != ($2_1 | 0)) {
        continue
       }
       break;
      };
      $1973($0_1, 56, $3);
     }
     $4_1 = $2_1 & 65535;
     $0_1 = $0_1 + 40 | 0;
     break label$2;
    }
    if (($2_1 | 0) > 0) {
     $20_1 = $3 & 16777215;
     $13 = $12_1 + 1 | 0;
     $15_1 = Math_fround($15_1 * Math_fround(.5));
     $4_1 = 0;
     $5_1 = $10_1;
     while (1) {
      $10_1 = $5_1;
      $6_1 = $11_1 + ($5_1 << 3) | 0;
      $8 = $1963($6_1, 0);
      $5_1 = $4_1;
      $4_1 = $4_1 << 3;
      $14 = $4_1 + $11_1 | 0;
      $7_1 = Math_fround(Math_fround($8 + $1963($14, 0)) * Math_fround(.5));
      $8 = Math_fround(Math_fround($1963($6_1, 4) + $1963($14, 4)) * Math_fround(.5));
      $9 = Math_fround(Math_fround($7_1 * $7_1) + Math_fround($8 * $8));
      label$16 : {
       if (!($9 > Math_fround(9.999999974752427e-07))) {
        break label$16
       }
       $21_1 = $7_1;
       $7_1 = Math_fround(Math_fround(1.0) / $9);
       $9 = $7_1 > Math_fround(100.0) ? Math_fround(100.0) : $7_1;
       $7_1 = Math_fround($21_1 * $9);
       $8 = Math_fround($8 * $9);
      }
      $6_1 = $1944($0_1, 52);
      $4_1 = $1_1 + $4_1 | 0;
      $7_1 = Math_fround($15_1 * $7_1);
      $1986($6_1, 0, Math_fround($1963($4_1, 0) - $7_1));
      $9 = $1963($4_1, 4);
      $1982($6_1, 8, $16_1, $17_1);
      $8 = Math_fround($15_1 * $8);
      $1986($6_1, 4, Math_fround($9 - $8));
      $6_1 = $1944($0_1, 52);
      $1973($6_1, 16, $3);
      $1986($6_1, 20, Math_fround($7_1 + $1963($4_1, 0)));
      $7_1 = $1963($4_1, 4);
      $1982($6_1 + 28 | 0, 0, $16_1, $17_1);
      $1986($6_1 + 24 | 0, 0, Math_fround($8 + $7_1));
      $4_1 = $1944($0_1, 52);
      $1973($4_1 + 36 | 0, 0, $20_1);
      $1973($0_1, 52, $4_1 + 40 | 0);
      $4_1 = $1944($0_1, 56);
      $6_1 = $5_1 << 1;
      $14 = $6_1 + $12_1 | 0;
      $1970($4_1, 10, $14);
      $1970($4_1, 8, $6_1 + $13 | 0);
      $10_1 = $10_1 << 1;
      $6_1 = $10_1 + $13 | 0;
      $1970($4_1, 6, $6_1);
      $1970($4_1, 4, $6_1);
      $1970($4_1, 2, $10_1 + $12_1 | 0);
      $1970($4_1, 0, $14);
      $1973($0_1, 56, $4_1 + 12 | 0);
      $4_1 = $5_1 + 1 | 0;
      if (($4_1 | 0) != ($2_1 | 0)) {
       continue
      }
      break;
     };
    }
    $4_1 = $18_1 & 65534;
    $0_1 = $0_1 + 40 | 0;
   }
   $1973($0_1, 0, $1944($0_1, 0) + $4_1 | 0);
  }
  global$0 = $19;
 }
 
 function $390($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = Math_fround(0), $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0;
  if ($2_1 <= Math_fround(0.0)) {
   $4_1 = $1944($0_1, 84);
   $3 = $1944($0_1 + 88 | 0, 0);
   label$2 : {
    if (($4_1 | 0) != ($3 | 0)) {
     break label$2
    }
    $5_1 = $3 ? $3 + (($3 | 0) / 2 | 0) | 0 : 8;
    $4_1 = $4_1 + 1 | 0;
    $4_1 = ($4_1 | 0) < ($5_1 | 0) ? $5_1 : $4_1;
    if (($3 | 0) >= ($4_1 | 0)) {
     break label$2
    }
    $3 = $16($4_1 << 3);
    $5_1 = $1944($0_1 + 92 | 0, 0);
    if ($5_1) {
     $1602($3, $5_1, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $4_1);
    $1973($0_1, 92, $3);
   }
   $1982($1944($0_1 + 92 | 0, 0) + ($1944($0_1, 84) << 3) | 0, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
   $1973($0_1, 84, $1944($0_1, 84) + 1 | 0);
   return;
  }
  $5_1 = $1944($0_1, 44);
  $9 = Math_fround($2_1 + Math_fround(.9999989867210388));
  label$7 : {
   if (Math_fround(Math_abs($9)) < Math_fround(2147483648.0)) {
    $8 = ~~$9;
    break label$7;
   }
   $8 = -2147483648;
  }
  label$9 : {
   if (($8 | 0) <= 63) {
    $5_1 = $1937(($5_1 + $8 | 0) + 432 | 0, 0);
    break label$9;
   }
   $9 = $1963($5_1, 20);
   $9 = Math_fround(Math_ceil(Math_fround(Math_fround(3.1415927410125732) / $1590(Math_fround(Math_fround(1.0) - Math_fround(($2_1 > $9 ? $9 : $2_1) / $2_1))))));
   label$11 : {
    if (Math_fround(Math_abs($9)) < Math_fround(2147483648.0)) {
     $5_1 = ~~$9;
     break label$11;
    }
    $5_1 = -2147483648;
   }
   $5_1 = ($5_1 + 1 | 0) / 2 << 1;
   $5_1 = ($5_1 | 0) >= 512 ? 512 : $5_1;
   $5_1 = ($5_1 | 0) <= 4 ? 4 : $5_1;
  }
  $7_1 = 48 / ($5_1 >>> 0) | 0;
  $8 = $4_1 - $3 | 0;
  $5_1 = $8 >> 31;
  $5_1 = ($5_1 ^ $8) - $5_1 | 0;
  $8 = ($7_1 | 0) >= 12 ? 12 : $7_1;
  $8 = ($8 | 0) <= 1 ? 1 : $8;
  label$13 : {
   if ($8 >>> 0 < 2) {
    $7_1 = $5_1 + 1 | 0;
    $5_1 = 1;
    break label$13;
   }
   $6_1 = $5_1;
   $5_1 = ($5_1 >>> 0) / ($8 >>> 0) | 0;
   $6_1 = $6_1 - Math_imul($5_1, $8) | 0;
   if (!$6_1) {
    $13 = ($6_1 | 0) != 0;
    $7_1 = $5_1 + 1 | 0;
    $5_1 = $8;
    break label$13;
   }
   $7_1 = $5_1 + 2 | 0;
   if (($3 | 0) == ($4_1 | 0)) {
    $13 = 1;
    $5_1 = $8;
    break label$13;
   }
   $13 = 1;
   $5_1 = $8 + (($8 - $6_1 | 0) / -2 | 0) | 0;
  }
  $6_1 = $1944($0_1 + 88 | 0, 0);
  $11_1 = $1944($0_1, 84);
  $7_1 = $11_1 + $7_1 | 0;
  label$17 : {
   if (($6_1 | 0) >= ($7_1 | 0)) {
    break label$17
   }
   $10_1 = $6_1 ? $6_1 + (($6_1 | 0) / 2 | 0) | 0 : 8;
   $10_1 = ($7_1 | 0) < ($10_1 | 0) ? $10_1 : $7_1;
   if (($6_1 | 0) >= ($10_1 | 0)) {
    break label$17
   }
   $6_1 = $16($10_1 << 3);
   $12_1 = $1944($0_1 + 92 | 0, 0);
   if ($12_1) {
    $1602($6_1, $12_1, $1944($0_1, 84) << 3);
    $17($1944($0_1, 92));
   }
   $1973($0_1, 88, $10_1);
   $1973($0_1, 92, $6_1);
  }
  $1973($0_1, 84, $7_1);
  $10_1 = $1944($0_1 + 92 | 0, 0);
  $7_1 = $3;
  if ($3 >>> 0 >= 48) {
   $6_1 = ($3 | 0) % 48 | 0;
   $7_1 = ($6_1 | 0) < 0 ? $6_1 + 48 | 0 : $6_1;
  }
  $11_1 = $10_1 + ($11_1 << 3) | 0;
  $12_1 = $1944($0_1, 44);
  label$22 : {
   if (($3 | 0) > ($4_1 | 0)) {
    $6_1 = $3;
    while (1) {
     $10_1 = $5_1;
     $3 = ($7_1 | 0) < 0 ? $7_1 + 48 | 0 : $7_1;
     $5_1 = $12_1 + ($3 << 3) | 0;
     $9 = $1963($5_1 + 48 | 0, 0);
     $1986($11_1, 0, Math_fround(Math_fround($1963($5_1 + 44 | 0, 0) * $2_1) + $1963($1_1, 0)));
     $1986($11_1, 4, Math_fround(Math_fround($9 * $2_1) + $1963($1_1, 4)));
     $5_1 = $8;
     $7_1 = $3 - $10_1 | 0;
     $11_1 = $11_1 + 8 | 0;
     $3 = $11_1;
     $6_1 = $6_1 - $10_1 | 0;
     if (($6_1 | 0) >= ($4_1 | 0)) {
      continue
     }
     break;
    };
    break label$22;
   }
   $6_1 = $3;
   while (1) {
    $10_1 = $5_1;
    $3 = ($7_1 | 0) > 47 ? $7_1 - 48 | 0 : $7_1;
    $5_1 = $12_1 + ($3 << 3) | 0;
    $9 = $1963($5_1 + 48 | 0, 0);
    $1986($11_1, 0, Math_fround(Math_fround($1963($5_1 + 44 | 0, 0) * $2_1) + $1963($1_1, 0)));
    $1986($11_1, 4, Math_fround(Math_fround($9 * $2_1) + $1963($1_1, 4)));
    $5_1 = $8;
    $7_1 = $3 + $10_1 | 0;
    $11_1 = $11_1 + 8 | 0;
    $3 = $11_1;
    $6_1 = $6_1 + $10_1 | 0;
    if (($6_1 | 0) <= ($4_1 | 0)) {
     continue
    }
    break;
   };
  }
  if ($13) {
   $5_1 = $1944($0_1, 44);
   $0_1 = ($4_1 | 0) % 48 | 0;
   $0_1 = $5_1 + ((($0_1 | 0) < 0 ? $0_1 + 48 | 0 : $0_1) << 3) | 0;
   $9 = $1963($0_1 + 48 | 0, 0);
   $1986($3, 0, Math_fround(Math_fround($1963($0_1 + 44 | 0, 0) * $2_1) + $1963($1_1, 0)));
   $1986($3, 4, Math_fround(Math_fround($9 * $2_1) + $1963($1_1, 4)));
  }
 }
 
 function $391($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = 0;
  $6_1 = $1944($0_1, 84);
  if ($2_1 <= Math_fround(0.0)) {
   $5_1 = $1944($0_1 + 88 | 0, 0);
   label$2 : {
    if (($5_1 | 0) != ($6_1 | 0)) {
     break label$2
    }
    $8 = $6_1 + 1 | 0;
    $7_1 = $5_1;
    if ($5_1) {
     $6_1 = $5_1 + (($5_1 | 0) / 2 | 0) | 0
    } else {
     $6_1 = 8
    }
    $5_1 = ($6_1 | 0) > ($8 | 0) ? $6_1 : $8;
    if (($7_1 | 0) >= ($5_1 | 0)) {
     break label$2
    }
    $6_1 = $16($5_1 << 3);
    $8 = $1944($0_1 + 92 | 0, 0);
    if ($8) {
     $1602($6_1, $8, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $5_1);
    $1973($0_1, 92, $6_1);
   }
   $1982($1944($0_1 + 92 | 0, 0) + ($1944($0_1, 84) << 3) | 0, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
   $1973($0_1, 84, $1944($0_1, 84) + 1 | 0);
   return;
  }
  $6_1 = ($5_1 + $6_1 | 0) + 1 | 0;
  if (($1944($0_1 + 88 | 0, 0) | 0) < ($6_1 | 0)) {
   $8 = $16($6_1 << 3);
   $7_1 = $1944($0_1 + 92 | 0, 0);
   if ($7_1) {
    $1602($8, $7_1, $1944($0_1, 84) << 3);
    $17($1944($0_1, 92));
   }
   $1973($0_1, 88, $6_1);
   $1973($0_1, 92, $8);
  }
  if (($5_1 | 0) >= 0) {
   $4_1 = Math_fround($4_1 - $3);
   $11_1 = Math_fround($5_1 | 0);
   $6_1 = 0;
   while (1) {
    $8 = $6_1;
    $10_1 = Math_fround(Math_fround(Math_fround(Math_fround($6_1 | 0) / $11_1) * $4_1) + $3);
    $12_1 = Math_fround(Math_fround($1688($10_1) * $2_1) + $1963($1_1, 4));
    $10_1 = Math_fround(Math_fround($1601($10_1) * $2_1) + $1963($1_1, 0));
    $7_1 = $1944($0_1, 84);
    $6_1 = $1944($0_1, 88);
    label$10 : {
     if (($7_1 | 0) != ($6_1 | 0)) {
      break label$10
     }
     $9 = $7_1 + 1 | 0;
     $13 = $6_1;
     if ($6_1) {
      $7_1 = $6_1 + (($6_1 | 0) / 2 | 0) | 0
     } else {
      $7_1 = 8
     }
     $6_1 = ($7_1 | 0) > ($9 | 0) ? $7_1 : $9;
     if (($13 | 0) >= ($6_1 | 0)) {
      break label$10
     }
     $7_1 = $16($6_1 << 3);
     $9 = $1944($0_1, 92);
     if ($9) {
      $1602($7_1, $9, $1944($0_1, 84) << 3);
      $17($1944($0_1, 92));
     }
     $1973($0_1, 88, $6_1);
     $1973($0_1, 92, $7_1);
    }
    $6_1 = $1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0;
    $1986($6_1, 4, $12_1);
    $1986($6_1, 0, $10_1);
    $1973($0_1, 84, $1944($0_1, 84) + 1 | 0);
    $6_1 = $8 + 1 | 0;
    if (($5_1 | 0) != ($8 | 0)) {
     continue
    }
    break;
   };
  }
 }
 
 function $392($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0;
  if ($2_1 <= Math_fround(0.0)) {
   $4_1 = $1944($0_1, 84);
   $3 = $1944($0_1 + 88 | 0, 0);
   label$2 : {
    if (($4_1 | 0) != ($3 | 0)) {
     break label$2
    }
    $5_1 = $4_1 + 1 | 0;
    $6_1 = $3;
    if ($3) {
     $4_1 = $3 + (($3 | 0) / 2 | 0) | 0
    } else {
     $4_1 = 8
    }
    $3 = ($4_1 | 0) > ($5_1 | 0) ? $4_1 : $5_1;
    if (($6_1 | 0) >= ($3 | 0)) {
     break label$2
    }
    $4_1 = $16($3 << 3);
    $5_1 = $1944($0_1 + 92 | 0, 0);
    if ($5_1) {
     $1602($4_1, $5_1, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $3);
    $1973($0_1, 92, $4_1);
   }
   $1982($1944($0_1 + 92 | 0, 0) + ($1944($0_1, 84) << 3) | 0, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
   $1973($0_1, 84, $1944($0_1, 84) + 1 | 0);
   return;
  }
  $390($0_1, $1_1, $2_1, $3 << 2, $4_1 << 2);
 }
 
 function $393($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0, $7_1 = Math_fround(0), $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = 0, $12_1 = Math_fround(0), $13 = 0, $14 = 0;
  folding_inner0 : {
   if ($2_1 <= Math_fround(0.0)) {
    $6_1 = $1944($0_1, 84);
    $5_1 = $1944($0_1 + 88 | 0, 0);
    label$2 : {
     if (($6_1 | 0) != ($5_1 | 0)) {
      break label$2
     }
     $8 = $6_1 + 1 | 0;
     $9 = $5_1;
     if ($5_1) {
      $6_1 = $5_1 + (($5_1 | 0) / 2 | 0) | 0
     } else {
      $6_1 = 8
     }
     $5_1 = ($6_1 | 0) > ($8 | 0) ? $6_1 : $8;
     if (($9 | 0) >= ($5_1 | 0)) {
      break label$2
     }
     $6_1 = $16($5_1 << 3);
     $8 = $1944($0_1 + 92 | 0, 0);
     if ($8) {
      $1602($6_1, $8, $1944($0_1, 84) << 3);
      $17($1944($0_1, 92));
     }
     $1973($0_1, 88, $5_1);
     $1973($0_1, 92, $6_1);
    }
    $1982($1944($0_1 + 92 | 0, 0) + ($1944($0_1, 84) << 3) | 0, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
    break folding_inner0;
   }
   if (($5_1 | 0) > 0) {
    $391($0_1, $1_1, $2_1, $3, $4_1, $5_1);
    return;
   }
   $5_1 = $1944($0_1, 44);
   label$7 : {
    if ($1963($5_1, 428) >= $2_1) {
     $7_1 = Math_fround(Math_fround($3 * Math_fround(48.0)) / Math_fround(6.2831854820251465));
     $10_1 = Math_fround($4_1 * Math_fround(48.0));
     $8 = $3 > $4_1;
     label$9 : {
      if ($8) {
       label$11 : {
        if (!($7_1 >= Math_fround(0.0))) {
         if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
          $5_1 = ~~$7_1
         } else {
          $5_1 = -2147483648
         }
         if ($7_1 != Math_fround($5_1 | 0)) {
          break label$11
         }
        }
        $12_1 = Math_fround(~~$7_1 | 0);
        if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
         break label$9
        }
        $12_1 = Math_fround(-2147483648.0);
        break label$9;
       }
       $12_1 = Math_fround($5_1 - 1 | 0);
       break label$9;
      }
      $12_1 = Math_fround(Math_ceil($7_1));
     }
     $7_1 = $12_1;
     label$16 : {
      if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
       $5_1 = ~~$7_1;
       break label$16;
      }
      $5_1 = -2147483648;
     }
     $7_1 = Math_fround($10_1 / Math_fround(6.2831854820251465));
     if ($8) {
      $7_1 = Math_fround(Math_ceil($7_1))
     } else {
      label$20 : {
       label$21 : {
        if (!($7_1 >= Math_fround(0.0))) {
         if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
          $6_1 = ~~$7_1
         } else {
          $6_1 = -2147483648
         }
         if ($7_1 != Math_fround($6_1 | 0)) {
          break label$21
         }
        }
        $6_1 = ~~$7_1;
        if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
         break label$20
        }
        $6_1 = -2147483648;
        break label$20;
       }
       $6_1 = $6_1 - 1 | 0;
      }
      $7_1 = Math_fround($6_1 | 0);
     }
     label$26 : {
      if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
       $6_1 = ~~$7_1;
       break label$26;
      }
      $6_1 = -2147483648;
     }
     $9 = $1944($0_1 + 88 | 0, 0);
     $10_1 = Math_fround(Math_fround($6_1 | 0) * Math_fround(3.1415927410125732));
     $10_1 = Math_fround($4_1 - Math_fround(Math_fround($10_1 + $10_1) / Math_fround(48.0)));
     $7_1 = Math_fround(Math_fround($5_1 | 0) * Math_fround(3.1415927410125732));
     $7_1 = Math_fround(Math_fround(Math_fround($7_1 + $7_1) / Math_fround(48.0)) - $3);
     $13 = $8 ? $5_1 - $6_1 | 0 : $6_1 - $5_1 | 0;
     $8 = $1944($0_1, 84) + ((($10_1 != Math_fround(0.0)) + ($7_1 != Math_fround(0.0) ? 2 : 1) | 0) + (($13 | 0) > 0 ? $13 : 0) | 0) | 0;
     if (($9 | 0) < ($8 | 0)) {
      $9 = $16($8 << 3);
      $11_1 = $1944($0_1 + 92 | 0, 0);
      if ($11_1) {
       $1602($9, $11_1, $1944($0_1, 84) << 3);
       $17($1944($0_1, 92));
      }
      $1973($0_1, 88, $8);
      $1973($0_1, 92, $9);
     }
     if ($7_1 != Math_fround(0.0)) {
      $7_1 = Math_fround(Math_fround($1688($3) * $2_1) + $1963($1_1, 4));
      $3 = Math_fround(Math_fround($1601($3) * $2_1) + $1963($1_1, 0));
      $9 = $1944($0_1, 84);
      $8 = $1944($0_1, 88);
      label$31 : {
       if (($9 | 0) != ($8 | 0)) {
        break label$31
       }
       $11_1 = $9 + 1 | 0;
       $14 = $8;
       if ($8) {
        $9 = $8 + (($8 | 0) / 2 | 0) | 0
       } else {
        $9 = 8
       }
       $8 = ($9 | 0) > ($11_1 | 0) ? $9 : $11_1;
       if (($14 | 0) >= ($8 | 0)) {
        break label$31
       }
       $9 = $16($8 << 3);
       $11_1 = $1944($0_1 + 92 | 0, 0);
       if ($11_1) {
        $1602($9, $11_1, $1944($0_1, 84) << 3);
        $17($1944($0_1, 92));
       }
       $1973($0_1, 88, $8);
       $1973($0_1, 92, $9);
      }
      $8 = $1944($0_1 + 92 | 0, 0) + ($1944($0_1, 84) << 3) | 0;
      $1986($8, 4, $7_1);
      $1986($8, 0, $3);
      $1973($0_1, 84, $1944($0_1, 84) + 1 | 0);
     }
     if (($13 | 0) > 0) {
      $390($0_1, $1_1, $2_1, $5_1, $6_1)
     }
     if ($10_1 == Math_fround(0.0)) {
      break label$7
     }
     $3 = Math_fround(Math_fround($1688($4_1) * $2_1) + $1963($1_1, 4));
     $2_1 = Math_fround(Math_fround($1601($4_1) * $2_1) + $1963($1_1, 0));
     $5_1 = $1944($0_1, 84);
     $1_1 = $1944($0_1, 88);
     label$36 : {
      if (($5_1 | 0) != ($1_1 | 0)) {
       break label$36
      }
      $5_1 = $5_1 + 1 | 0;
      $8 = $1_1;
      if ($1_1) {
       $6_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0
      } else {
       $6_1 = 8
      }
      $1_1 = ($5_1 | 0) < ($6_1 | 0) ? $6_1 : $5_1;
      if (($8 | 0) >= ($1_1 | 0)) {
       break label$36
      }
      $5_1 = $16($1_1 << 3);
      $6_1 = $1944($0_1 + 92 | 0, 0);
      if ($6_1) {
       $1602($5_1, $6_1, $1944($0_1, 84) << 3);
       $17($1944($0_1, 92));
      }
      $1973($0_1, 88, $1_1);
      $1973($0_1, 92, $5_1);
     }
     $1_1 = $1944($0_1 + 92 | 0, 0) + ($1944($0_1, 84) << 3) | 0;
     $1986($1_1, 4, $3);
     $1986($1_1, 0, $2_1);
     break folding_inner0;
    }
    $7_1 = Math_fround($2_1 + Math_fround(.9999989867210388));
    label$40 : {
     if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
      $6_1 = ~~$7_1;
      break label$40;
     }
     $6_1 = -2147483648;
    }
    $7_1 = Math_fround(Math_abs(Math_fround($4_1 - $3)));
    label$42 : {
     if (($6_1 | 0) <= 63) {
      $6_1 = $1937(($5_1 + $6_1 | 0) + 432 | 0, 0);
      break label$42;
     }
     $10_1 = $1963($5_1, 20);
     $10_1 = Math_fround(Math_ceil(Math_fround(Math_fround(3.1415927410125732) / $1590(Math_fround(Math_fround(1.0) - Math_fround(($2_1 > $10_1 ? $10_1 : $2_1) / $2_1))))));
     label$44 : {
      if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
       $5_1 = ~~$10_1;
       break label$44;
      }
      $5_1 = -2147483648;
     }
     $5_1 = ($5_1 + 1 | 0) / 2 << 1;
     $5_1 = ($5_1 | 0) >= 512 ? 512 : $5_1;
     $6_1 = ($5_1 | 0) <= 4 ? 4 : $5_1;
    }
    $10_1 = Math_fround(Math_fround(6.2831854820251465) / $7_1);
    label$46 : {
     if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
      $5_1 = ~~$10_1;
      break label$46;
     }
     $5_1 = -2147483648;
    }
    $7_1 = Math_fround(Math_ceil(Math_fround(Math_fround($7_1 * Math_fround($6_1 | 0)) / Math_fround(6.2831854820251465))));
    label$48 : {
     if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
      $6_1 = ~~$7_1;
      break label$48;
     }
     $6_1 = -2147483648;
    }
    $391($0_1, $1_1, $2_1, $3, $4_1, ($5_1 | 0) < ($6_1 | 0) ? $6_1 : $5_1);
   }
   return;
  }
  $1973($0_1, 84, $1944($0_1, 84) + 1 | 0);
 }
 
 function $394($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = Math_fround(0), $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = 0, $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = Math_fround(0), $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = 0;
  $5_1 = (($1944($0_1, 84) << 3) + $1944($0_1 + 92 | 0, 0) | 0) - 8 | 0;
  $10_1 = $1963($5_1, 4);
  $11_1 = $1963($5_1, 0);
  if (!$4_1) {
   $395($0_1 + 84 | 0, $11_1, $10_1, $1963($1_1, 0), $1963($1_1, 4), $1963($2_1, 0), $1963($2_1, 4), $1963($3, 0), $1963($3, 4), $1963($1944($0_1, 44), 16), 0);
   return;
  }
  if (($4_1 | 0) > 0) {
   $17_1 = Math_fround(Math_fround(1.0) / Math_fround($4_1 | 0));
   $5_1 = 1;
   while (1) {
    $12_1 = $5_1;
    $6_1 = Math_fround($17_1 * Math_fround($5_1 | 0));
    $13 = Math_fround($6_1 * Math_fround($6_1 * $6_1));
    $8 = Math_fround(Math_fround(1.0) - $6_1);
    $14 = Math_fround($8 * Math_fround(3.0));
    $15_1 = Math_fround($6_1 * Math_fround($6_1 * $14));
    $16_1 = Math_fround($8 * Math_fround($8 * $8));
    $6_1 = Math_fround($6_1 * Math_fround($8 * $14));
    $8 = Math_fround(Math_fround($13 * $1963($3, 4)) + Math_fround(Math_fround($15_1 * $1963($2_1, 4)) + Math_fround(Math_fround($16_1 * $10_1) + Math_fround($6_1 * $1963($1_1, 4)))));
    $6_1 = Math_fround(Math_fround($13 * $1963($3, 0)) + Math_fround(Math_fround($15_1 * $1963($2_1, 0)) + Math_fround(Math_fround($16_1 * $11_1) + Math_fround($6_1 * $1963($1_1, 0)))));
    $7_1 = $1944($0_1, 84);
    $5_1 = $1944($0_1, 88);
    label$4 : {
     if (($7_1 | 0) != ($5_1 | 0)) {
      break label$4
     }
     $9 = $7_1 + 1 | 0;
     $18_1 = $5_1;
     if ($5_1) {
      $7_1 = $5_1 + (($5_1 | 0) / 2 | 0) | 0
     } else {
      $7_1 = 8
     }
     $5_1 = ($7_1 | 0) > ($9 | 0) ? $7_1 : $9;
     if (($18_1 | 0) >= ($5_1 | 0)) {
      break label$4
     }
     $7_1 = $16($5_1 << 3);
     $9 = $1944($0_1, 92);
     if ($9) {
      $1602($7_1, $9, $1944($0_1, 84) << 3);
      $17($1944($0_1, 92));
     }
     $1973($0_1, 88, $5_1);
     $1973($0_1, 92, $7_1);
    }
    $5_1 = $1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0;
    $1986($5_1, 4, $8);
    $1986($5_1, 0, $6_1);
    $1973($0_1, 84, $1944($0_1, 84) + 1 | 0);
    $5_1 = $12_1 + 1 | 0;
    if (($4_1 | 0) != ($12_1 | 0)) {
     continue
    }
    break;
   };
  }
 }
 
 function $395($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8, $9, $10_1) {
  var $11_1 = Math_fround(0), $12_1 = 0, $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = 0, $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = Math_fround(0), $19 = 0, $20_1 = Math_fround(0), $21_1 = Math_fround(0);
  while (1) {
   label$1 : {
    $13 = Math_fround($8 - $2_1);
    $14 = Math_fround($7_1 - $1_1);
    $11_1 = Math_fround(Math_fround(Math_fround($3 - $7_1) * $13) - Math_fround($14 * Math_fround($4_1 - $8)));
    $16_1 = $11_1 >= Math_fround(0.0) ? $11_1 : Math_fround(-$11_1);
    $11_1 = Math_fround(Math_fround(Math_fround($5_1 - $7_1) * $13) - Math_fround($14 * Math_fround($6_1 - $8)));
    $11_1 = Math_fround($16_1 + ($11_1 >= Math_fround(0.0) ? $11_1 : Math_fround(-$11_1)));
    if (Math_fround($11_1 * $11_1) < Math_fround(Math_fround(Math_fround($14 * $14) + Math_fround($13 * $13)) * $9)) {
     $12_1 = $1944($0_1, 0);
     $10_1 = $1944($0_1, 4);
     label$4 : {
      if (($12_1 | 0) != ($10_1 | 0)) {
       break label$4
      }
      $15_1 = $12_1 + 1 | 0;
      $19 = $10_1;
      if ($10_1) {
       $12_1 = $10_1 + (($10_1 | 0) / 2 | 0) | 0
      } else {
       $12_1 = 8
      }
      $10_1 = ($12_1 | 0) > ($15_1 | 0) ? $12_1 : $15_1;
      if (($19 | 0) >= ($10_1 | 0)) {
       break label$4
      }
      $12_1 = $16($10_1 << 3);
      $15_1 = $1944($0_1, 8);
      if ($15_1) {
       $1602($12_1, $15_1, $1944($0_1, 0) << 3);
       $17($1944($0_1, 8));
      }
      $1973($0_1, 4, $10_1);
      $1973($0_1, 8, $12_1);
     }
     $10_1 = $1944($0_1, 8) + ($1944($0_1, 0) << 3) | 0;
     $1986($10_1, 4, $8);
     $1986($10_1, 0, $7_1);
     $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
     break label$1;
    }
    if (($10_1 | 0) > 9) {
     break label$1
    }
    $13 = Math_fround(Math_fround($1_1 + $3) * Math_fround(.5));
    $14 = Math_fround(Math_fround($3 + $5_1) * Math_fround(.5));
    $3 = Math_fround(Math_fround($13 + $14) * Math_fround(.5));
    $11_1 = Math_fround(Math_fround($2_1 + $4_1) * Math_fround(.5));
    $17_1 = Math_fround(Math_fround($4_1 + $6_1) * Math_fround(.5));
    $4_1 = Math_fround(Math_fround($11_1 + $17_1) * Math_fround(.5));
    $20_1 = $1_1;
    $21_1 = $2_1;
    $16_1 = $3;
    $18_1 = $4_1;
    $5_1 = Math_fround(Math_fround($5_1 + $7_1) * Math_fround(.5));
    $3 = Math_fround(Math_fround($14 + $5_1) * Math_fround(.5));
    $1_1 = Math_fround(Math_fround($16_1 + $3) * Math_fround(.5));
    $6_1 = Math_fround(Math_fround($6_1 + $8) * Math_fround(.5));
    $4_1 = Math_fround(Math_fround($17_1 + $6_1) * Math_fround(.5));
    $2_1 = Math_fround(Math_fround($18_1 + $4_1) * Math_fround(.5));
    $10_1 = $10_1 + 1 | 0;
    $395($0_1, $20_1, $21_1, $13, $11_1, $16_1, $18_1, $1_1, $2_1, $9, $10_1);
    continue;
   }
   break;
  };
 }
 
 function $396($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = Math_fround(0), $8 = 0, $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = 0, $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = 0;
  $4_1 = (($1944($0_1, 84) << 3) + $1944($0_1 + 92 | 0, 0) | 0) - 8 | 0;
  $9 = $1963($4_1, 4);
  $10_1 = $1963($4_1, 0);
  if (!$3) {
   $397($0_1 + 84 | 0, $10_1, $9, $1963($1_1, 0), $1963($1_1, 4), $1963($2_1, 0), $1963($2_1, 4), $1963($1944($0_1, 44), 16), 0);
   return;
  }
  if (($3 | 0) > 0) {
   $14 = Math_fround(Math_fround(1.0) / Math_fround($3 | 0));
   $4_1 = 1;
   while (1) {
    $11_1 = $4_1;
    $5_1 = Math_fround($14 * Math_fround($4_1 | 0));
    $12_1 = Math_fround($5_1 * $5_1);
    $7_1 = Math_fround(Math_fround(1.0) - $5_1);
    $13 = Math_fround($7_1 * $7_1);
    $5_1 = Math_fround($5_1 * Math_fround($7_1 + $7_1));
    $7_1 = Math_fround(Math_fround($12_1 * $1963($2_1, 4)) + Math_fround(Math_fround($13 * $9) + Math_fround($5_1 * $1963($1_1, 4))));
    $5_1 = Math_fround(Math_fround($12_1 * $1963($2_1, 0)) + Math_fround(Math_fround($13 * $10_1) + Math_fround($5_1 * $1963($1_1, 0))));
    $6_1 = $1944($0_1, 84);
    $4_1 = $1944($0_1, 88);
    label$4 : {
     if (($6_1 | 0) != ($4_1 | 0)) {
      break label$4
     }
     $8 = $6_1 + 1 | 0;
     $15_1 = $4_1;
     if ($4_1) {
      $6_1 = $4_1 + (($4_1 | 0) / 2 | 0) | 0
     } else {
      $6_1 = 8
     }
     $4_1 = ($6_1 | 0) > ($8 | 0) ? $6_1 : $8;
     if (($15_1 | 0) >= ($4_1 | 0)) {
      break label$4
     }
     $6_1 = $16($4_1 << 3);
     $8 = $1944($0_1, 92);
     if ($8) {
      $1602($6_1, $8, $1944($0_1, 84) << 3);
      $17($1944($0_1, 92));
     }
     $1973($0_1, 88, $4_1);
     $1973($0_1, 92, $6_1);
    }
    $4_1 = $1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0;
    $1986($4_1, 4, $7_1);
    $1986($4_1, 0, $5_1);
    $1973($0_1, 84, $1944($0_1, 84) + 1 | 0);
    $4_1 = $11_1 + 1 | 0;
    if (($3 | 0) != ($11_1 | 0)) {
     continue
    }
    break;
   };
  }
 }
 
 function $397($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  var $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = 0, $13 = Math_fround(0), $14 = 0, $15_1 = Math_fround(0);
  while (1) {
   label$1 : {
    $10_1 = Math_fround($6_1 - $2_1);
    $11_1 = Math_fround($5_1 - $1_1);
    $13 = Math_fround(Math_fround(Math_fround($3 - $5_1) * $10_1) - Math_fround($11_1 * Math_fround($4_1 - $6_1)));
    if (Math_fround(Math_fround($13 * $13) * Math_fround(4.0)) < Math_fround(Math_fround(Math_fround($11_1 * $11_1) + Math_fround($10_1 * $10_1)) * $7_1)) {
     $9 = $1944($0_1, 0);
     $8 = $1944($0_1, 4);
     label$4 : {
      if (($9 | 0) != ($8 | 0)) {
       break label$4
      }
      $12_1 = $9 + 1 | 0;
      $14 = $8;
      if ($8) {
       $9 = $8 + (($8 | 0) / 2 | 0) | 0
      } else {
       $9 = 8
      }
      $8 = ($9 | 0) > ($12_1 | 0) ? $9 : $12_1;
      if (($14 | 0) >= ($8 | 0)) {
       break label$4
      }
      $9 = $16($8 << 3);
      $12_1 = $1944($0_1, 8);
      if ($12_1) {
       $1602($9, $12_1, $1944($0_1, 0) << 3);
       $17($1944($0_1, 8));
      }
      $1973($0_1, 4, $8);
      $1973($0_1, 8, $9);
     }
     $8 = $1944($0_1, 8) + ($1944($0_1, 0) << 3) | 0;
     $1986($8, 4, $6_1);
     $1986($8, 0, $5_1);
     $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
     break label$1;
    }
    if (($8 | 0) > 9) {
     break label$1
    }
    $10_1 = $1_1;
    $11_1 = $2_1;
    $1_1 = Math_fround(Math_fround($1_1 + $3) * Math_fround(.5));
    $13 = $1_1;
    $2_1 = Math_fround(Math_fround($2_1 + $4_1) * Math_fround(.5));
    $15_1 = $2_1;
    $3 = Math_fround(Math_fround($3 + $5_1) * Math_fround(.5));
    $1_1 = Math_fround(Math_fround($1_1 + $3) * Math_fround(.5));
    $4_1 = Math_fround(Math_fround($4_1 + $6_1) * Math_fround(.5));
    $2_1 = Math_fround(Math_fround($2_1 + $4_1) * Math_fround(.5));
    $8 = $8 + 1 | 0;
    $397($0_1, $10_1, $11_1, $13, $15_1, $1_1, $2_1, $7_1, $8);
    continue;
   }
   break;
  };
 }
 
 function $398($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = Math_fround(0), $7_1 = 0, $8 = 0, $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = 0, $12_1 = 0, $13 = 0;
  $8 = global$0 - 16 | 0;
  global$0 = $8;
  label$1 : {
   label$2 : {
    $4_1 = $4_1 & 496 ? $4_1 : $4_1 | 240;
    if (($4_1 & 496) != 256) {
     $9 = $1963($2_1, 0);
     $10_1 = $1963($1_1, 0);
     $6_1 = Math_fround(Math_fround(Math_fround(Math_abs(Math_fround($9 - $10_1))) * (($4_1 & 48) == 48 ? Math_fround(.5) : ($4_1 & 192) == 192 ? Math_fround(.5) : Math_fround(1.0))) + Math_fround(-1.0));
     $3 = $3 < $6_1 ? $3 : $6_1;
     $9 = $1963($2_1, 4);
     $6_1 = $1963($1_1, 4);
     $9 = Math_fround(Math_fround(Math_fround(Math_abs(Math_fround($9 - $6_1))) * (($4_1 & 80) == 80 ? Math_fround(.5) : ($4_1 & 160) == 160 ? Math_fround(.5) : Math_fround(1.0))) + Math_fround(-1.0));
     $3 = $3 < $9 ? $3 : $9;
     if (!($3 <= Math_fround(0.0))) {
      break label$2
     }
    }
    $4_1 = $1944($0_1, 84);
    $5_1 = $1944($0_1 + 88 | 0, 0);
    label$4 : {
     if (($4_1 | 0) != ($5_1 | 0)) {
      break label$4
     }
     $7_1 = $4_1 + 1 | 0;
     if ($5_1) {
      $4_1 = $5_1 + (($5_1 | 0) / 2 | 0) | 0
     } else {
      $4_1 = 8
     }
     $4_1 = ($4_1 | 0) > ($7_1 | 0) ? $4_1 : $7_1;
     if (($4_1 | 0) <= ($5_1 | 0)) {
      break label$4
     }
     $5_1 = $16($4_1 << 3);
     $7_1 = $1944($0_1 + 92 | 0, 0);
     if ($7_1) {
      $1602($5_1, $7_1, $1944($0_1, 84) << 3);
      $17($1944($0_1, 92));
     }
     $1973($0_1, 88, $4_1);
     $1973($0_1, 92, $5_1);
    }
    $1982($1944($0_1 + 92 | 0, 0) + ($1944($0_1, 84) << 3) | 0, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
    $5_1 = $1944($0_1, 84);
    $4_1 = $5_1 + 1 | 0;
    $1973($0_1, 84, $4_1);
    $12_1 = $1944($1_1, 4);
    $13 = $1944($2_1, 0);
    $11_1 = $4_1;
    $4_1 = $1944($0_1, 88);
    label$8 : {
     if (($11_1 | 0) != ($4_1 | 0)) {
      break label$8
     }
     $7_1 = $5_1 + 2 | 0;
     $11_1 = $4_1;
     if ($4_1) {
      $5_1 = $4_1 + (($4_1 | 0) / 2 | 0) | 0
     } else {
      $5_1 = 8
     }
     $4_1 = ($5_1 | 0) > ($7_1 | 0) ? $5_1 : $7_1;
     if (($11_1 | 0) >= ($4_1 | 0)) {
      break label$8
     }
     $5_1 = $16($4_1 << 3);
     $7_1 = $1944($0_1, 92);
     if ($7_1) {
      $1602($5_1, $7_1, $1944($0_1, 84) << 3);
      $17($1944($0_1, 92));
     }
     $1973($0_1, 88, $4_1);
     $1973($0_1, 92, $5_1);
    }
    $4_1 = $1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0;
    $1973($4_1, 4, $12_1);
    $1973($4_1, 0, $13);
    $4_1 = $1944($0_1, 84);
    $5_1 = $4_1 + 1 | 0;
    $1973($0_1, 84, $5_1);
    $11_1 = $5_1;
    $5_1 = $1944($0_1, 88);
    label$12 : {
     if (($11_1 | 0) != ($5_1 | 0)) {
      break label$12
     }
     $7_1 = $4_1 + 2 | 0;
     if ($5_1) {
      $4_1 = $5_1 + (($5_1 | 0) / 2 | 0) | 0
     } else {
      $4_1 = 8
     }
     $4_1 = ($4_1 | 0) > ($7_1 | 0) ? $4_1 : $7_1;
     if (($4_1 | 0) <= ($5_1 | 0)) {
      break label$12
     }
     $5_1 = $16($4_1 << 3);
     $7_1 = $1944($0_1, 92);
     if ($7_1) {
      $1602($5_1, $7_1, $1944($0_1, 84) << 3);
      $17($1944($0_1, 92));
     }
     $1973($0_1, 88, $4_1);
     $1973($0_1, 92, $5_1);
    }
    $1982($1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
    $4_1 = $1944($0_1, 84);
    $5_1 = $4_1 + 1 | 0;
    $1973($0_1, 84, $5_1);
    $7_1 = $1944($2_1, 4);
    $12_1 = $1944($1_1, 0);
    $1_1 = $1944($0_1, 88);
    label$16 : {
     if (($1_1 | 0) != ($5_1 | 0)) {
      break label$16
     }
     $2_1 = $4_1 + 2 | 0;
     $5_1 = $1_1;
     if ($1_1) {
      $4_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0
     } else {
      $4_1 = 8
     }
     $1_1 = ($2_1 | 0) < ($4_1 | 0) ? $4_1 : $2_1;
     if (($5_1 | 0) >= ($1_1 | 0)) {
      break label$16
     }
     $2_1 = $16($1_1 << 3);
     $4_1 = $1944($0_1, 92);
     if ($4_1) {
      $1602($2_1, $4_1, $1944($0_1, 84) << 3);
      $17($1944($0_1, 92));
     }
     $1973($0_1, 88, $1_1);
     $1973($0_1, 92, $2_1);
    }
    $1_1 = $1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0;
    $1973($1_1, 4, $7_1);
    $1973($1_1, 0, $12_1);
    $1973($0_1, 84, $1944($0_1, 84) + 1 | 0);
    break label$1;
   }
   $9 = $6_1;
   $6_1 = $4_1 & 16 ? $3 : Math_fround(0.0);
   $1986($8, 12, Math_fround($9 + $6_1));
   $1986($8, 8, Math_fround($10_1 + $6_1));
   $5_1 = $8 + 8 | 0;
   $392($0_1, $5_1, $6_1, 6, 9);
   $10_1 = $1963($2_1, 0);
   $6_1 = $4_1 & 32 ? $3 : Math_fround(0.0);
   $1986($8, 12, Math_fround($6_1 + $1963($1_1, 4)));
   $1986($8, 8, Math_fround($10_1 - $6_1));
   $392($0_1, $5_1, $6_1, 9, 12);
   $10_1 = $1963($2_1, 0);
   $6_1 = $4_1 & 128 ? $3 : Math_fround(0.0);
   $1986($8, 12, Math_fround($1963($2_1, 4) - $6_1));
   $1986($8, 8, Math_fround($10_1 - $6_1));
   $392($0_1, $5_1, $6_1, 0, 3);
   $6_1 = $1963($1_1, 0);
   $3 = $4_1 & 64 ? $3 : Math_fround(0.0);
   $1986($8, 12, Math_fround($1963($2_1, 4) - $3));
   $1986($8, 8, Math_fround($3 + $6_1));
   $392($0_1, $5_1, $3, 3, 6);
  }
  global$0 = $8 + 16 | 0;
 }
 
 function $399($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = 0;
  if ($3 >>> 0 >= 16777216) {
   $7_1 = Math_fround($1963($1_1, 4) + Math_fround(.5));
   $8 = Math_fround($1963($1_1, 0) + Math_fround(.5));
   $5_1 = $1944($0_1, 84);
   $1_1 = $1944($0_1 + 88 | 0, 0);
   label$2 : {
    if (($5_1 | 0) != ($1_1 | 0)) {
     break label$2
    }
    $6_1 = $5_1 + 1 | 0;
    $9 = $1_1;
    if ($1_1) {
     $5_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0
    } else {
     $5_1 = 8
    }
    $1_1 = ($5_1 | 0) > ($6_1 | 0) ? $5_1 : $6_1;
    if (($9 | 0) >= ($1_1 | 0)) {
     break label$2
    }
    $5_1 = $16($1_1 << 3);
    $6_1 = $1944($0_1 + 92 | 0, 0);
    if ($6_1) {
     $1602($5_1, $6_1, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $1_1);
    $1973($0_1, 92, $5_1);
   }
   $1_1 = $1944($0_1 + 92 | 0, 0) + ($1944($0_1, 84) << 3) | 0;
   $1986($1_1, 4, $7_1);
   $1986($1_1, 0, $8);
   $5_1 = $1944($0_1, 84);
   $1_1 = $5_1 + 1 | 0;
   $1973($0_1, 84, $1_1);
   $7_1 = Math_fround($1963($2_1, 4) + Math_fround(.5));
   $8 = Math_fround($1963($2_1, 0) + Math_fround(.5));
   $2_1 = $1_1;
   $1_1 = $1944($0_1, 88);
   label$6 : {
    if (($2_1 | 0) != ($1_1 | 0)) {
     break label$6
    }
    $5_1 = $5_1 + 2 | 0;
    $9 = $1_1;
    if ($1_1) {
     $2_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0
    } else {
     $2_1 = 8
    }
    $1_1 = ($2_1 | 0) > ($5_1 | 0) ? $2_1 : $5_1;
    if (($9 | 0) >= ($1_1 | 0)) {
     break label$6
    }
    $2_1 = $16($1_1 << 3);
    $5_1 = $1944($0_1, 92);
    if ($5_1) {
     $1602($2_1, $5_1, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $1_1);
    $1973($0_1, 92, $2_1);
   }
   $1_1 = $1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0;
   $1986($1_1, 4, $7_1);
   $1986($1_1, 0, $8);
   $1_1 = $1944($0_1, 84) + 1 | 0;
   $1973($0_1, 84, $1_1);
   $388($0_1, $1944($0_1, 92), $1_1, $3, 0, $4_1);
   $1973($0_1, 84, 0);
  }
 }
 
 function $400($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  var $7_1 = 0, $8 = Math_fround(0);
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  if ($3 >>> 0 >= 16777216) {
   label$2 : {
    if ($1937($0_1, 36) & 1) {
     $8 = $1963($1_1, 0);
     $1986($7_1, 12, Math_fround($1963($1_1, 4) + Math_fround(.5)));
     $1986($7_1, 8, Math_fround($8 + Math_fround(.5)));
     $8 = $1963($2_1, 0);
     $1986($7_1, 4, Math_fround($1963($2_1, 4) + Math_fround(-.5)));
     $1986($7_1, 0, Math_fround($8 + Math_fround(-.5)));
     break label$2;
    }
    $8 = $1963($1_1, 0);
    $1986($7_1, 12, Math_fround($1963($1_1, 4) + Math_fround(.5)));
    $1986($7_1, 8, Math_fround($8 + Math_fround(.5)));
    $8 = $1963($2_1, 0);
    $1986($7_1, 4, Math_fround($1963($2_1, 4) + Math_fround(-.49000000953674316)));
    $1986($7_1, 0, Math_fround($8 + Math_fround(-.49000000953674316)));
   }
   $398($0_1, $7_1 + 8 | 0, $7_1, $4_1, $5_1);
   $388($0_1, $1944($0_1 + 92 | 0, 0), $1944($0_1, 84), $3, 1, $6_1);
   $1973($0_1, 84, 0);
  }
  global$0 = $7_1 + 16 | 0;
 }
 
 function $401($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0;
  if ($3 >>> 0 >= 16777216) {
   if (!(!($4_1 <= Math_fround(0.0)) & ($5_1 & 496) != 256)) {
    $383($0_1, 6, 4);
    $10_1 = $1944($2_1, 4);
    $11_1 = $1944($1_1, 0);
    $12_1 = $1944($1_1, 4);
    $13 = $1944($2_1, 0);
    $5_1 = $1959($1944($0_1, 44), 0);
    $9 = i64toi32_i32$HIGH_BITS;
    $6_1 = $1944($0_1, 56);
    $7_1 = $1941($0_1, 40);
    $1970($6_1, 10, $7_1 + 3 | 0);
    $8 = $7_1 + 2 | 0;
    $1970($6_1, 8, $8);
    $1970($6_1, 6, $7_1);
    $1970($6_1, 4, $8);
    $1970($6_1, 2, $7_1 + 1 | 0);
    $1970($6_1, 0, $7_1);
    $1982($1944($0_1, 52), 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
    $1982($1944($0_1, 52), 8, $5_1, $9);
    $1_1 = $1944($0_1, 52);
    $1973($1_1, 20, $13);
    $1973($1_1, 16, $3);
    $1973($1_1 + 24 | 0, 0, $12_1);
    $1982($1944($0_1, 52) + 28 | 0, 0, $5_1, $9);
    $8 = $1944($0_1, 52);
    $1973($8 + 36 | 0, 0, $3);
    $1982($8, 40, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
    $1982($1944($0_1, 52) + 48 | 0, 0, $5_1, $9);
    $1_1 = $1944($0_1, 52);
    $1973($1_1, 60, $11_1);
    $1973($1_1 - -64 | 0, 0, $10_1);
    $1973($1_1 + 56 | 0, 0, $3);
    $1982($1944($0_1, 52) + 68 | 0, 0, $5_1, $9);
    $1_1 = $1944($0_1, 52);
    $1973($1_1 + 76 | 0, 0, $3);
    $1973($0_1, 52, $1_1 + 80 | 0);
    $1973($0_1, 40, $1944($0_1, 40) + 4 | 0);
    $1973($0_1, 56, $1944($0_1, 56) + 12 | 0);
    return;
   }
   $398($0_1, $1_1, $2_1, $4_1, $5_1);
   $389($0_1, $1944($0_1 + 92 | 0, 0), $1944($0_1, 84), $3);
   $1973($0_1, 84, 0);
  }
 }
 
 function $402($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0;
  if (($3 | $4_1 | $5_1 | $6_1) >>> 0 >= 16777216) {
   $9 = $1959($1944($0_1, 44), 0);
   $10_1 = i64toi32_i32$HIGH_BITS;
   $383($0_1, 6, 4);
   $7_1 = $1944($0_1, 56);
   $8 = $1941($0_1, 40);
   $1970($7_1, 0, $8);
   $1973($0_1, 56, $7_1 + 2 | 0);
   $1970($7_1, 2, $8 + 1 | 0);
   $1973($0_1, 56, $7_1 + 4 | 0);
   $11_1 = $8 + 2 | 0;
   $1970($7_1, 4, $11_1);
   $1973($0_1, 56, $7_1 + 6 | 0);
   $1970($7_1, 6, $8);
   $1973($0_1, 56, $7_1 + 8 | 0);
   $1970($7_1, 8, $11_1);
   $1973($0_1, 56, $7_1 + 10 | 0);
   $1970($7_1, 10, $8 + 3 | 0);
   $1973($0_1, 56, $7_1 + 12 | 0);
   $1982($1944($0_1, 52), 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
   $1982($1944($0_1, 52), 8, $9, $10_1);
   $7_1 = $1944($0_1, 52);
   $1973($7_1, 16, $3);
   $1973($0_1, 52, $7_1 + 20 | 0);
   $1973($0_1, 40, $1944($0_1, 40) + 1 | 0);
   $3 = $1944($2_1, 0);
   $1973($7_1 + 24 | 0, 0, $1944($1_1, 4));
   $1973($7_1, 20, $3);
   $1982($1944($0_1, 52), 8, $9, $10_1);
   $3 = $1944($0_1, 52);
   $1973($3, 16, $4_1);
   $1973($0_1, 52, $3 + 20 | 0);
   $1973($0_1, 40, $1944($0_1, 40) + 1 | 0);
   $1982($3, 20, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
   $1982($1944($0_1, 52), 8, $9, $10_1);
   $3 = $1944($0_1, 52);
   $1973($3, 16, $5_1);
   $1973($0_1, 52, $3 + 20 | 0);
   $1973($0_1, 40, $1944($0_1, 40) + 1 | 0);
   $1_1 = $1944($1_1, 0);
   $1973($3 + 24 | 0, 0, $1944($2_1, 4));
   $1973($3, 20, $1_1);
   $1982($1944($0_1, 52), 8, $9, $10_1);
   $1_1 = $1944($0_1, 52);
   $1973($1_1, 16, $6_1);
   $1973($0_1, 52, $1_1 + 20 | 0);
   $1973($0_1, 40, $1944($0_1, 40) + 1 | 0);
  }
 }
 
 function $405($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  if ($4_1 >>> 0 >= 16777216) {
   $7_1 = $1944($0_1, 84);
   $6_1 = $1944($0_1 + 88 | 0, 0);
   label$2 : {
    if (($7_1 | 0) != ($6_1 | 0)) {
     break label$2
    }
    $8 = $7_1 + 1 | 0;
    $9 = $6_1;
    if ($6_1) {
     $7_1 = $6_1 + (($6_1 | 0) / 2 | 0) | 0
    } else {
     $7_1 = 8
    }
    $6_1 = ($7_1 | 0) > ($8 | 0) ? $7_1 : $8;
    if (($9 | 0) >= ($6_1 | 0)) {
     break label$2
    }
    $7_1 = $16($6_1 << 3);
    $8 = $1944($0_1 + 92 | 0, 0);
    if ($8) {
     $1602($7_1, $8, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $6_1);
    $1973($0_1, 92, $7_1);
   }
   $1982($1944($0_1 + 92 | 0, 0) + ($1944($0_1, 84) << 3) | 0, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
   $6_1 = $1944($0_1, 84);
   $1_1 = $6_1 + 1 | 0;
   $1973($0_1, 84, $1_1);
   $7_1 = $1_1;
   $1_1 = $1944($0_1, 88);
   label$6 : {
    if (($7_1 | 0) != ($1_1 | 0)) {
     break label$6
    }
    $7_1 = $6_1 + 2 | 0;
    $9 = $1_1;
    if ($1_1) {
     $6_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0
    } else {
     $6_1 = 8
    }
    $1_1 = ($6_1 | 0) > ($7_1 | 0) ? $6_1 : $7_1;
    if (($9 | 0) >= ($1_1 | 0)) {
     break label$6
    }
    $6_1 = $16($1_1 << 3);
    $7_1 = $1944($0_1, 92);
    if ($7_1) {
     $1602($6_1, $7_1, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $1_1);
    $1973($0_1, 92, $6_1);
   }
   $1982($1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
   $2_1 = $1944($0_1, 84);
   $1_1 = $2_1 + 1 | 0;
   $1973($0_1, 84, $1_1);
   $6_1 = $1_1;
   $1_1 = $1944($0_1, 88);
   label$10 : {
    if (($6_1 | 0) != ($1_1 | 0)) {
     break label$10
    }
    $6_1 = $2_1 + 2 | 0;
    $7_1 = $1_1;
    if ($1_1) {
     $2_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0
    } else {
     $2_1 = 8
    }
    $1_1 = ($2_1 | 0) > ($6_1 | 0) ? $2_1 : $6_1;
    if (($7_1 | 0) >= ($1_1 | 0)) {
     break label$10
    }
    $2_1 = $16($1_1 << 3);
    $6_1 = $1944($0_1, 92);
    if ($6_1) {
     $1602($2_1, $6_1, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $1_1);
    $1973($0_1, 92, $2_1);
   }
   $1982($1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0, 0, $1959($3, 0), i64toi32_i32$HIGH_BITS);
   $1_1 = $1944($0_1, 84) + 1 | 0;
   $1973($0_1, 84, $1_1);
   $388($0_1, $1944($0_1, 92), $1_1, $4_1, 1, $5_1);
   $1973($0_1, 84, 0);
  }
 }
 
 function $406($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  if ($4_1 >>> 0 >= 16777216) {
   $6_1 = $1944($0_1, 84);
   $5_1 = $1944($0_1 + 88 | 0, 0);
   label$2 : {
    if (($6_1 | 0) != ($5_1 | 0)) {
     break label$2
    }
    $7_1 = $6_1 + 1 | 0;
    $8 = $5_1;
    if ($5_1) {
     $6_1 = $5_1 + (($5_1 | 0) / 2 | 0) | 0
    } else {
     $6_1 = 8
    }
    $5_1 = ($6_1 | 0) > ($7_1 | 0) ? $6_1 : $7_1;
    if (($8 | 0) >= ($5_1 | 0)) {
     break label$2
    }
    $6_1 = $16($5_1 << 3);
    $7_1 = $1944($0_1 + 92 | 0, 0);
    if ($7_1) {
     $1602($6_1, $7_1, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $5_1);
    $1973($0_1, 92, $6_1);
   }
   $1982($1944($0_1 + 92 | 0, 0) + ($1944($0_1, 84) << 3) | 0, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
   $5_1 = $1944($0_1, 84);
   $1_1 = $5_1 + 1 | 0;
   $1973($0_1, 84, $1_1);
   $6_1 = $1_1;
   $1_1 = $1944($0_1, 88);
   label$6 : {
    if (($6_1 | 0) != ($1_1 | 0)) {
     break label$6
    }
    $6_1 = $5_1 + 2 | 0;
    $8 = $1_1;
    if ($1_1) {
     $5_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0
    } else {
     $5_1 = 8
    }
    $1_1 = ($5_1 | 0) > ($6_1 | 0) ? $5_1 : $6_1;
    if (($8 | 0) >= ($1_1 | 0)) {
     break label$6
    }
    $5_1 = $16($1_1 << 3);
    $6_1 = $1944($0_1, 92);
    if ($6_1) {
     $1602($5_1, $6_1, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $1_1);
    $1973($0_1, 92, $5_1);
   }
   $1982($1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
   $2_1 = $1944($0_1, 84);
   $1_1 = $2_1 + 1 | 0;
   $1973($0_1, 84, $1_1);
   $5_1 = $1_1;
   $1_1 = $1944($0_1, 88);
   label$10 : {
    if (($5_1 | 0) != ($1_1 | 0)) {
     break label$10
    }
    $5_1 = $2_1 + 2 | 0;
    $6_1 = $1_1;
    if ($1_1) {
     $2_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0
    } else {
     $2_1 = 8
    }
    $1_1 = ($2_1 | 0) > ($5_1 | 0) ? $2_1 : $5_1;
    if (($6_1 | 0) >= ($1_1 | 0)) {
     break label$10
    }
    $2_1 = $16($1_1 << 3);
    $5_1 = $1944($0_1, 92);
    if ($5_1) {
     $1602($2_1, $5_1, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $1_1);
    $1973($0_1, 92, $2_1);
   }
   $1982($1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0, 0, $1959($3, 0), i64toi32_i32$HIGH_BITS);
   $1_1 = $1944($0_1, 84) + 1 | 0;
   $1973($0_1, 84, $1_1);
   $389($0_1, $1944($0_1, 92), $1_1, $4_1);
   $1973($0_1, 84, 0);
  }
 }
 
 function $407($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0, $7_1 = Math_fround(0);
  if (!($3 >>> 0 < 16777216 | $2_1 <= Math_fround(0.0))) {
   label$2 : {
    if (($4_1 | 0) <= 0) {
     $390($0_1, $1_1, Math_fround($2_1 + Math_fround(-.5)), 0, 48);
     $1973($0_1, 84, $1944($0_1, 84) - 1 | 0);
     break label$2;
    }
    $6_1 = $1_1;
    $7_1 = Math_fround($2_1 + Math_fround(-.5));
    $1_1 = ($4_1 | 0) >= 512 ? 512 : $4_1;
    $1_1 = ($1_1 | 0) <= 3 ? 3 : $1_1;
    $2_1 = Math_fround($1_1 | 0);
    $393($0_1, $6_1, $7_1, Math_fround(0.0), Math_fround(Math_fround(Math_fround($2_1 + Math_fround(-1.0)) * Math_fround(6.2831854820251465)) / $2_1), $1_1 - 1 | 0);
   }
   $388($0_1, $1944($0_1 + 92 | 0, 0), $1944($0_1, 84), $3, 1, $5_1);
   $1973($0_1, 84, 0);
  }
 }
 
 function $408($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = Math_fround(0);
  if (!($3 >>> 0 < 16777216 | $2_1 <= Math_fround(0.0))) {
   label$2 : {
    if (($4_1 | 0) <= 0) {
     $390($0_1, $1_1, $2_1, 0, 48);
     $1973($0_1, 84, $1944($0_1, 84) - 1 | 0);
     break label$2;
    }
    $5_1 = $1_1;
    $6_1 = $2_1;
    $1_1 = ($4_1 | 0) >= 512 ? 512 : $4_1;
    $1_1 = ($1_1 | 0) <= 3 ? 3 : $1_1;
    $2_1 = Math_fround($1_1 | 0);
    $393($0_1, $5_1, $6_1, Math_fround(0.0), Math_fround(Math_fround(Math_fround($2_1 + Math_fround(-1.0)) * Math_fround(6.2831854820251465)) / $2_1), $1_1 - 1 | 0);
   }
   $389($0_1, $1944($0_1 + 92 | 0, 0), $1944($0_1, 84), $3);
   $1973($0_1, 84, 0);
  }
 }
 
 function $413($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  var $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = 0;
  $9 = global$0 - 32 | 0;
  global$0 = $9;
  label$1 : {
   if ($4_1 >>> 0 < 16777216) {
    break label$1
   }
   if (!$6_1) {
    $6_1 = $1697($5_1) + $5_1 | 0
   }
   $12_1 = $6_1;
   if (($12_1 | 0) == ($5_1 | 0)) {
    break label$1
   }
   $6_1 = $1_1;
   if (!$6_1) {
    $6_1 = $1944($1944($0_1, 44), 8)
   }
   if ($2_1 == Math_fround(0.0)) {
    $2_1 = $1963($1944($0_1, 44), 12)
   }
   $1983($9 + 24 | 0, 0, $1959($0_1 + 104 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1983($9, 16, $1959($0_1, 96), i64toi32_i32$HIGH_BITS);
   if ($8) {
    $10_1 = $1963($9, 16);
    $11_1 = $1963($8, 0);
    $1986($9, 16, $10_1 >= $11_1 ? $10_1 : $11_1);
    $10_1 = $1963($9, 20);
    $11_1 = $1963($8, 4);
    $1986($9, 20, $10_1 >= $11_1 ? $10_1 : $11_1);
    $10_1 = $1963($9, 24);
    $11_1 = $1963($8, 8);
    $1986($9, 24, $10_1 < $11_1 ? $10_1 : $11_1);
    $10_1 = $1963($9, 28);
    $11_1 = $1963($8, 12);
    $1986($9, 28, $10_1 < $11_1 ? $10_1 : $11_1);
   }
   $1_1 = $1959($3, 0);
   $3 = i64toi32_i32$HIGH_BITS;
   $1983($9, 0, $1_1, $3);
   $1983($9, 8, $1_1, $3);
   $414($6_1, $0_1, $2_1, $9, $4_1, $9 + 16 | 0, $5_1, $12_1, $7_1, ($8 | 0) != 0);
  }
  global$0 = $9 + 32 | 0;
 }
 
 function $414($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8, $9) {
  var $10_1 = Math_fround(0), $11_1 = 0, $12_1 = 0, $13 = 0, $14 = Math_fround(0), $15_1 = Math_fround(0), $16_1 = 0, $17_1 = Math_fround(0), $18_1 = 0, $19 = 0, $20_1 = Math_fround(0), $21_1 = 0, $22_1 = Math_fround(0), $23_1 = Math_fround(0), $24 = Math_fround(0), $25_1 = Math_fround(0), $26_1 = 0, $27_1 = Math_fround(0), $28_1 = 0, $29_1 = Math_fround(0), $30 = Math_fround(0), $31_1 = 0, $32_1 = Math_fround(0), $33_1 = Math_fround(0), $34_1 = 0, $35_1 = Math_fround(0), $36_1 = 0, $37 = 0, $38_1 = 0;
  $26_1 = global$0 - 16 | 0;
  global$0 = $26_1;
  $12_1 = $7_1;
  if (!$7_1) {
   $12_1 = $1697($6_1) + $6_1 | 0
  }
  $13 = $12_1;
  $10_1 = $1963($3, 0);
  label$2 : {
   if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
    $7_1 = ~~$10_1;
    break label$2;
   }
   $7_1 = -2147483648;
  }
  $15_1 = Math_fround($7_1 | 0);
  $1986($3, 0, $15_1);
  $10_1 = $1963($3, 4);
  label$4 : {
   if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
    $7_1 = ~~$10_1;
    break label$4;
   }
   $7_1 = -2147483648;
  }
  $10_1 = Math_fround($7_1 | 0);
  $1986($3, 4, $10_1);
  $17_1 = $1963($5_1, 12);
  label$6 : {
   if ($17_1 < $10_1) {
    break label$6
   }
   $14 = $2_1;
   $2_1 = $1963($0_1, 16);
   $23_1 = Math_fround($14 / $2_1);
   $27_1 = Math_fround($2_1 * $23_1);
   label$7 : {
    label$8 : {
     $18_1 = $8 > Math_fround(0.0);
     if ($18_1) {
      break label$8
     }
     $14 = Math_fround($27_1 + $10_1);
     $20_1 = $1963($5_1, 4);
     $7_1 = $14 < $20_1;
     if (!$7_1 | !$7_1 | $6_1 >>> 0 >= $13 >>> 0) {
      break label$8
     }
     $12_1 = $6_1;
     while (1) {
      $6_1 = $1644($12_1, 10, $13 - $12_1 | 0);
      $12_1 = $6_1 ? $6_1 + 1 | 0 : $13;
      $2_1 = $14;
      $14 = Math_fround($27_1 + $2_1);
      if (!($20_1 > $14)) {
       $19 = $12_1;
       break label$7;
      }
      $19 = $12_1;
      if ($12_1 >>> 0 < $13 >>> 0) {
       continue
      }
      break;
     };
     break label$7;
    }
    $19 = $6_1;
    $2_1 = $10_1;
   }
   $7_1 = $19;
   label$11 : {
    if ($18_1) {
     $19 = $13;
     break label$11;
    }
    if (($13 - $7_1 | 0) < 10001) {
     $19 = $13;
     break label$11;
    }
    if (!($2_1 < $17_1)) {
     break label$11
    }
    if ($7_1 >>> 0 >= $13 >>> 0) {
     break label$11
    }
    $12_1 = $7_1;
    $14 = $2_1;
    while (1) {
     $6_1 = $1644($12_1, 10, $13 - $12_1 | 0);
     $12_1 = $6_1 ? $6_1 + 1 | 0 : $13;
     $14 = Math_fround($27_1 + $14);
     if (!($17_1 > $14)) {
      $19 = $12_1;
      break label$11;
     }
     $19 = $12_1;
     if ($12_1 >>> 0 < $13 >>> 0) {
      continue
     }
     break;
    };
   }
   if (($7_1 | 0) == ($19 | 0)) {
    break label$6
   }
   $36_1 = $1944($1_1, 12);
   $6_1 = $19 - $7_1 | 0;
   $34_1 = Math_imul($6_1, 6);
   $383($1_1, $34_1, $6_1 << 2);
   $37 = $4_1 | 16777215;
   $6_1 = $1944($1_1, 52);
   $12_1 = $1944($1_1, 56);
   $11_1 = $1944($1_1, 40);
   $18_1 = 0;
   $14 = $2_1;
   $2_1 = $15_1;
   label$16 : {
    while (1) {
     label$17 : {
      $16_1 = $11_1;
      $13 = $12_1;
      $11_1 = $6_1;
      if ($7_1 >>> 0 >= $19 >>> 0) {
       break label$17
      }
      $15_1 = $14;
      $17_1 = $1963($3, 0);
      $10_1 = $2_1;
      $14 = $10_1;
      $2_1 = $15_1;
      $6_1 = $18_1;
      $28_1 = $7_1;
      while (1) {
       label$19 : {
        if (!($8 > Math_fround(0.0))) {
         $14 = $15_1;
         $7_1 = $28_1;
         $6_1 = $18_1;
         break label$19;
        }
        $12_1 = $6_1;
        if ($6_1) {
         $6_1 = $12_1
        } else {
         $6_1 = $415($0_1, $23_1, $7_1, $19, Math_fround($8 - Math_fround($14 - $17_1)));
         $6_1 = (($6_1 | 0) == ($7_1 | 0)) + $6_1 | 0;
        }
        if ($6_1 >>> 0 > $7_1 >>> 0) {
         $10_1 = $14;
         $14 = $2_1;
         break label$19;
        }
        $6_1 = $7_1;
        $12_1 = $7_1;
        label$24 : {
         if ($7_1 >>> 0 >= $19 >>> 0) {
          break label$24
         }
         while (1) {
          $7_1 = $1937($6_1, 0);
          $12_1 = ($7_1 | 0) == 32;
          $6_1 = $6_1 + ($12_1 | ($7_1 - 9 & 255) >>> 0 < 2) | 0;
          if (!(($7_1 | 0) == 9 | $12_1)) {
           $12_1 = $6_1;
           break label$24;
          }
          $12_1 = $6_1;
          if ($6_1 >>> 0 < $19 >>> 0) {
           continue
          }
          break;
         };
        }
        $14 = $17_1;
        $2_1 = Math_fround($27_1 + $2_1);
        $6_1 = 0;
        $7_1 = $12_1;
        if ($7_1 >>> 0 < $19 >>> 0) {
         continue
        }
        break label$17;
       }
       break;
      };
      $38_1 = $6_1;
      $2_1 = $10_1;
      $6_1 = $1936($7_1, 0);
      $1973($26_1, 12, $6_1);
      label$27 : {
       label$28 : {
        label$29 : {
         label$30 : {
          label$31 : {
           label$32 : {
            label$33 : {
             label$34 : {
              label$35 : {
               label$36 : {
                if (($6_1 | 0) >= 0) {
                 $7_1 = $7_1 + 1 | 0;
                 break label$36;
                }
                $7_1 = $10($26_1 + 12 | 0, $7_1, $19) + $7_1 | 0;
                if (!$1944($26_1, 12)) {
                 break label$35
                }
               }
               $28_1 = $7_1;
               label$38 : {
                $31_1 = $1944($26_1, 12);
                if ($31_1 >>> 0 > 31) {
                 break label$38
                }
                $6_1 = $11_1;
                $12_1 = $13;
                $18_1 = $16_1;
                $21_1 = 0;
                $10_1 = $14;
                label$39 : {
                 switch ($31_1 - 10 | 0) {
                 case 3:
                  break label$27;
                 case 0:
                  break label$39;
                 default:
                  break label$38;
                 };
                }
                $10_1 = Math_fround($27_1 + $14);
                $21_1 = $1963($5_1, 12) < $10_1;
                $2_1 = $1963($3, 0);
                break label$27;
               }
               $6_1 = $31_1 & 65535;
               label$40 : {
                if ($1944($0_1, 20) >>> 0 <= $6_1 >>> 0) {
                 $7_1 = $1944($0_1, 44);
                 break label$40;
                }
                $7_1 = $1944($0_1, 44);
                $12_1 = $1944($0_1, 40);
                $6_1 = $1941($1944($0_1, 28) + ($6_1 << 1) | 0, 0);
                $7_1 = ($6_1 | 0) == 65535 ? $7_1 : $12_1 + Math_imul($6_1, 40) | 0;
               }
               if (!$7_1) {
                $7_1 = $28_1;
                $6_1 = $11_1;
                $12_1 = $13;
                $18_1 = $16_1;
                $21_1 = 0;
                break label$28;
               }
               $35_1 = Math_fround($23_1 * $1963($7_1, 4));
               $6_1 = $1944($7_1, 0);
               if (!($6_1 & 2)) {
                $6_1 = $11_1;
                $12_1 = $13;
                $11_1 = $16_1;
                break label$29;
               }
               $10_1 = Math_fround(Math_fround($1963($7_1, 8) * $23_1) + $2_1);
               $32_1 = $1963($5_1, 8);
               if (!($10_1 <= $32_1)) {
                break label$32
               }
               $20_1 = Math_fround(Math_fround($1963($7_1, 16) * $23_1) + $2_1);
               $15_1 = $1963($5_1, 0);
               if (!($20_1 >= $15_1)) {
                break label$32
               }
               $17_1 = Math_fround(Math_fround($1963($7_1, 20) * $23_1) + $14);
               $22_1 = Math_fround(Math_fround($1963($7_1, 12) * $23_1) + $14);
               $29_1 = $1963($7_1, 36);
               $30 = $1963($7_1, 32);
               $24 = $1963($7_1, 28);
               $25_1 = $1963($7_1, 24);
               if (!$9) {
                $15_1 = $10_1;
                $10_1 = $25_1;
                break label$34;
               }
               label$45 : {
                if (!($10_1 < $15_1)) {
                 $15_1 = $10_1;
                 break label$45;
                }
                $25_1 = Math_fround(Math_fround(Math_fround(Math_fround(1.0) - Math_fround(Math_fround($20_1 - $15_1) / Math_fround($20_1 - $10_1))) * Math_fround($30 - $25_1)) + $25_1);
               }
               $33_1 = $15_1;
               $15_1 = $1963($5_1, 4);
               label$47 : {
                if (!($15_1 > $22_1)) {
                 $15_1 = $22_1;
                 break label$47;
                }
                $24 = Math_fround(Math_fround(Math_fround(Math_fround(1.0) - Math_fround(Math_fround($17_1 - $15_1) / Math_fround($17_1 - $22_1))) * Math_fround($29_1 - $24)) + $24);
               }
               $22_1 = $15_1;
               label$49 : {
                if (!($20_1 > $32_1)) {
                 $10_1 = $20_1;
                 break label$49;
                }
                $10_1 = $32_1;
                $30 = Math_fround(Math_fround(Math_fround(Math_fround($10_1 - $33_1) / Math_fround($20_1 - $33_1)) * Math_fround($30 - $25_1)) + $25_1);
               }
               $20_1 = $10_1;
               $10_1 = $1963($5_1, 12);
               label$51 : {
                if (!($10_1 < $17_1)) {
                 $10_1 = $17_1;
                 break label$51;
                }
                $29_1 = Math_fround(Math_fround(Math_fround(Math_fround($10_1 - $22_1) / Math_fround($17_1 - $22_1)) * Math_fround($29_1 - $24)) + $24);
               }
               $15_1 = $33_1;
               $17_1 = $10_1;
               $10_1 = $25_1;
               if (!($17_1 <= $22_1)) {
                break label$34
               }
               $7_1 = $11_1;
               $11_1 = $16_1;
               $16_1 = 0;
               $18_1 = 6;
               $2_1 = Math_fround($2_1 + $35_1);
               $12_1 = $13;
               break label$33;
              }
              $6_1 = $11_1;
              $12_1 = $13;
              $18_1 = $16_1;
              $21_1 = 1;
              break label$28;
             }
             $1970($13, 6, $16_1);
             $1970($13, 0, $16_1);
             $1970($13, 10, $16_1 + 3 | 0);
             $7_1 = $16_1 + 2 | 0;
             $1970($13, 8, $7_1);
             $1970($13, 4, $7_1);
             $1970($13, 2, $16_1 + 1 | 0);
             $6_1 = $6_1 & 1 ? $37 : $4_1;
             $1973($11_1, 16, $6_1);
             $1986($11_1, 4, $22_1);
             $1986($11_1, 0, $15_1);
             $1973($11_1 + 36 | 0, 0, $6_1);
             $1986($11_1 + 24 | 0, 0, $22_1);
             $1986($11_1, 20, $20_1);
             $1986($11_1 + 12 | 0, 0, $24);
             $1986($11_1, 8, $10_1);
             $1973($11_1 + 56 | 0, 0, $6_1);
             $1986($11_1 + 44 | 0, 0, $17_1);
             $1986($11_1, 40, $20_1);
             $1986($11_1 + 32 | 0, 0, $24);
             $1986($11_1 + 28 | 0, 0, $30);
             $1973($11_1 + 76 | 0, 0, $6_1);
             $1986($11_1 - -64 | 0, 0, $17_1);
             $1986($11_1, 60, $15_1);
             $1986($11_1 + 52 | 0, 0, $29_1);
             $1986($11_1 + 48 | 0, 0, $30);
             $1986($11_1 + 72 | 0, 0, $29_1);
             $1986($11_1 + 68 | 0, 0, $10_1);
             $7_1 = $11_1 + 80 | 0;
             $11_1 = $16_1 + 4 | 0;
             $16_1 = 1;
             $18_1 = 0;
             $12_1 = $13 + 12 | 0;
            }
            $6_1 = $7_1;
            $21_1 = $12_1;
            $13 = $11_1;
            $10_1 = $2_1;
            if (!$16_1) {
             break label$30
            }
            break label$31;
           }
           $6_1 = $11_1;
           $21_1 = $13;
           $13 = $16_1;
           $10_1 = $2_1;
          }
          $7_1 = $6_1;
          $12_1 = $21_1;
          $11_1 = $13;
          $18_1 = 0;
          $2_1 = $10_1;
         }
         $6_1 = $7_1;
         if (!$18_1) {
          break label$29
         }
         $7_1 = $28_1;
         $18_1 = $11_1;
         $21_1 = 0;
         $10_1 = $14;
         break label$27;
        }
        $7_1 = $28_1;
        $18_1 = $11_1;
        $21_1 = 0;
        $10_1 = $14;
        $2_1 = Math_fround($35_1 + $2_1);
        break label$27;
       }
       $10_1 = $14;
      }
      $11_1 = $18_1;
      $18_1 = $38_1;
      $14 = $10_1;
      $13 = $12_1;
      $16_1 = $11_1;
      if (!$21_1) {
       continue
      }
      break label$16;
     }
     break;
    };
    $6_1 = $11_1;
   }
   $1973($1_1, 24, ($6_1 - $1944($1_1 + 32 | 0, 0) | 0) / 20 | 0);
   $0_1 = $13 - $1944($1_1 + 20 | 0, 0) >> 1;
   $1973($1_1, 12, $0_1);
   $3 = (Math_imul($1944($1_1, 0), 40) + $1944($1_1, 8) | 0) - 12 | 0;
   $1973($3, 0, $1944($3, 0) + ($0_1 - ($36_1 + $34_1 | 0) | 0) | 0);
   $1973($1_1, 56, $13);
   $1973($1_1, 52, $6_1);
   $1973($1_1, 40, $16_1);
  }
  global$0 = $26_1 + 16 | 0;
 }
 
 function $415($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = Math_fround(0), $17_1 = 0, $18_1 = Math_fround(0), $19 = Math_fround(0), $20_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $13 = global$0 - 16 | 0;
  global$0 = $13;
  $20_1 = $0_1 + 12 | 0;
  $19 = Math_fround($4_1 / $1_1);
  $1_1 = Math_fround(0.0);
  $4_1 = Math_fround(0.0);
  $6_1 = 1;
  $7_1 = $2_1;
  while (1) {
   label$1 : {
    $15_1 = $6_1;
    $5_1 = $11_1;
    $6_1 = $7_1;
    $8 = $10_1;
    $18_1 = $4_1;
    $16_1 = $1_1;
    $7_1 = $2_1;
    if ($3 >>> 0 <= $2_1 >>> 0) {
     $5_1 = $7_1;
     break label$1;
    }
    $2_1 = $1936($7_1, 0);
    $1973($13, 12, $2_1);
    $11_1 = 1;
    if (($2_1 | 0) < 0) {
     $11_1 = $10($13 + 12 | 0, $7_1, $3)
    }
    $9 = $1944($13, 12);
    label$5 : {
     if (!$9) {
      $2_1 = $6_1;
      $12_1 = $15_1;
      $14 = $7_1;
      $17_1 = 1;
      break label$5;
     }
     $14 = $7_1 + $11_1 | 0;
     label$7 : {
      if ($9 >>> 0 > 31) {
       break label$7
      }
      $1_1 = Math_fround(0.0);
      $4_1 = Math_fround(0.0);
      $10_1 = Math_fround(0.0);
      $2_1 = $6_1;
      $12_1 = 1;
      $17_1 = 0;
      label$8 : {
       switch ($9 - 10 | 0) {
       case 0:
        break label$5;
       case 3:
        break label$8;
       default:
        break label$7;
       };
      }
      $1_1 = $16_1;
      $4_1 = $18_1;
      $10_1 = $8;
      $12_1 = $15_1;
      break label$5;
     }
     $1_1 = $1963((wasm2js_i32$0 = $1944($0_1, 8) + ($9 << 2) | 0, wasm2js_i32$1 = $20_1, wasm2js_i32$2 = ($1944($0_1, 0) | 0) > ($9 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0);
     label$9 : {
      label$10 : {
       label$11 : {
        if (!(($9 | 0) == 9 | ($9 | 0) == 32 | ($9 | 0) == 12288)) {
         $10_1 = Math_fround($18_1 + $1_1);
         if (!($15_1 & 1)) {
          break label$11
         }
         $4_1 = $16_1;
         $2_1 = $14;
         $6_1 = $5_1;
         $1_1 = $8;
         break label$10;
        }
        $2_1 = $15_1 & 1;
        $4_1 = Math_fround($16_1 + ($2_1 ? $8 : Math_fround(-0.0)));
        $10_1 = $18_1;
        $8 = Math_fround(($2_1 ? Math_fround(0.0) : $8) + $1_1);
        $12_1 = 0;
        $2_1 = $2_1 ? $7_1 : $6_1;
        break label$9;
       }
       $4_1 = Math_fround($16_1 + Math_fround($8 + $10_1));
       $10_1 = Math_fround(0.0);
       $2_1 = $6_1;
       $1_1 = Math_fround(0.0);
      }
      $5_1 = $9 - 33 | 0;
      if (!($5_1 >>> 0 > 30 | !(1 << $5_1 & 1140860931))) {
       $8 = $1_1;
       $5_1 = $6_1;
       $12_1 = 0;
       break label$9;
      }
      $8 = $1_1;
      $5_1 = $6_1;
      $12_1 = 1;
     }
     $11_1 = $2_1;
     $1_1 = $4_1;
     $4_1 = $10_1;
     $10_1 = $8;
     $2_1 = $11_1;
     $17_1 = Math_fround($1_1 + $4_1) > $19;
     $14 = $17_1 ? ($4_1 < $19 ? ($5_1 ? $5_1 : $2_1) : $7_1) : $14;
    }
    $7_1 = $2_1;
    $11_1 = $5_1;
    $6_1 = $12_1;
    $2_1 = $14;
    $5_1 = $2_1;
    if (!$17_1) {
     continue
    }
   }
   break;
  };
  global$0 = $13 + 16 | 0;
  return $5_1;
 }
 
 function $416($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = Math_fround(0);
  $4_1 = global$0 - 32 | 0;
  global$0 = $4_1;
  label$1 : {
   if ($2_1 >>> 0 < 16777216) {
    break label$1
   }
   $6_1 = $1697($3) + $3 | 0;
   if (($6_1 | 0) == ($3 | 0)) {
    break label$1
   }
   $5_1 = $1944($0_1, 44);
   $8 = $1963($5_1, 12);
   $5_1 = $1944($5_1, 8);
   $1983($4_1 + 24 | 0, 0, $1959($0_1 + 104 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1983($4_1, 16, $1959($0_1, 96), i64toi32_i32$HIGH_BITS);
   $1_1 = $1959($1_1, 0);
   $7_1 = i64toi32_i32$HIGH_BITS;
   $1983($4_1, 0, $1_1, $7_1);
   $1983($4_1, 8, $1_1, $7_1);
   $414($5_1, $0_1, $8, $4_1, $2_1, $4_1 + 16 | 0, $3, $6_1, Math_fround(0.0), 0);
  }
  global$0 = $4_1 + 32 | 0;
 }
 
 function $417($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0;
  if ($6_1 >>> 0 >= 16777216) {
   if (($1944($0_1 + 112 | 0, 0) | 0) != ($1_1 | 0)) {
    $381($0_1, $1_1);
    $383($0_1, 6, 4);
    $9 = $1944($4_1, 0);
    $10_1 = $1944($5_1, 4);
    $11_1 = $1944($3, 4);
    $12_1 = $1944($2_1, 0);
    $13 = $1944($5_1, 0);
    $14 = $1944($4_1, 4);
    $15_1 = $1944($2_1, 4);
    $16_1 = $1944($3, 0);
    $1_1 = $1944($0_1, 56);
    $7_1 = $1941($0_1, 40);
    $1970($1_1, 6, $7_1);
    $1970($1_1, 0, $7_1);
    $1970($1_1, 10, $7_1 + 3 | 0);
    $8 = $7_1 + 2 | 0;
    $1970($1_1, 8, $8);
    $1970($1_1, 4, $8);
    $1970($1_1, 2, $7_1 + 1 | 0);
    $1982($1944($0_1, 52), 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
    $1982($1944($0_1, 52), 8, $1959($4_1, 0), i64toi32_i32$HIGH_BITS);
    $1_1 = $1944($0_1, 52);
    $1973($1_1, 20, $16_1);
    $1973($1_1, 16, $6_1);
    $1973($1_1 + 24 | 0, 0, $15_1);
    $1_1 = $1944($0_1, 52);
    $1973($1_1 + 32 | 0, 0, $14);
    $1973($1_1 + 28 | 0, 0, $13);
    $1_1 = $1944($0_1, 52);
    $1973($1_1 + 36 | 0, 0, $6_1);
    $1982($1_1, 40, $1959($3, 0), i64toi32_i32$HIGH_BITS);
    $1982($1944($0_1, 52) + 48 | 0, 0, $1959($5_1, 0), i64toi32_i32$HIGH_BITS);
    $1_1 = $1944($0_1, 52);
    $1973($1_1, 60, $12_1);
    $1973($1_1 - -64 | 0, 0, $11_1);
    $1973($1_1 + 56 | 0, 0, $6_1);
    $1_1 = $1944($0_1, 52);
    $1973($1_1 + 72 | 0, 0, $10_1);
    $1973($1_1 + 68 | 0, 0, $9);
    $1_1 = $1944($0_1, 52);
    $1973($1_1 + 76 | 0, 0, $6_1);
    $1973($0_1, 52, $1_1 + 80 | 0);
    $1973($0_1, 40, $1944($0_1, 40) + 4 | 0);
    $1973($0_1, 56, $1944($0_1, 56) + 12 | 0);
    $1_1 = $1944($0_1, 72);
    $2_1 = $1_1 - 1 | 0;
    $1973($0_1, 72, $2_1);
    if ($2_1) {
     $6_1 = $1944(($1944($0_1 + 80 | 0, 0) + ($1_1 << 2) | 0) - 8 | 0, 0)
    } else {
     $6_1 = 0
    }
    $1973($0_1, 112, $6_1);
    $1_1 = $1944($0_1, 8);
    label$5 : {
     $4_1 = $1944($0_1, 0);
     $2_1 = $4_1 - 1 | 0;
     $3 = $1_1 + Math_imul($2_1, 40) | 0;
     $5_1 = $1944($3, 28);
     if (!$5_1) {
      break label$5
     }
     if (($1944($3, 16) | 0) == ($6_1 | 0)) {
      break label$5
     }
     $375($0_1);
     return;
    }
    label$6 : {
     if (($4_1 | 0) < 2 | $5_1) {
      break label$6
     }
     $3 = $3 - 40 | 0;
     if ($1645($0_1 + 96 | 0, $3, 24)) {
      break label$6
     }
     if ($1944($3, 32)) {
      break label$6
     }
     $1973($0_1, 0, $2_1);
     return;
    }
    $1973($1_1 + Math_imul($2_1, 40) | 0, 16, $6_1);
    return;
   }
   $383($0_1, 6, 4);
   $9 = $1944($4_1, 0);
   $10_1 = $1944($5_1, 4);
   $11_1 = $1944($3, 4);
   $12_1 = $1944($2_1, 0);
   $13 = $1944($5_1, 0);
   $14 = $1944($4_1, 4);
   $15_1 = $1944($2_1, 4);
   $16_1 = $1944($3, 0);
   $1_1 = $1944($0_1, 56);
   $7_1 = $1941($0_1, 40);
   $1970($1_1, 6, $7_1);
   $1970($1_1, 0, $7_1);
   $1970($1_1, 10, $7_1 + 3 | 0);
   $8 = $7_1 + 2 | 0;
   $1970($1_1, 8, $8);
   $1970($1_1, 4, $8);
   $1970($1_1, 2, $7_1 + 1 | 0);
   $1982($1944($0_1, 52), 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
   $1982($1944($0_1, 52), 8, $1959($4_1, 0), i64toi32_i32$HIGH_BITS);
   $1_1 = $1944($0_1, 52);
   $1973($1_1, 20, $16_1);
   $1973($1_1, 16, $6_1);
   $1973($1_1 + 24 | 0, 0, $15_1);
   $1_1 = $1944($0_1, 52);
   $1973($1_1 + 32 | 0, 0, $14);
   $1973($1_1 + 28 | 0, 0, $13);
   $1_1 = $1944($0_1, 52);
   $1973($1_1 + 36 | 0, 0, $6_1);
   $1982($1_1, 40, $1959($3, 0), i64toi32_i32$HIGH_BITS);
   $1982($1944($0_1, 52) + 48 | 0, 0, $1959($5_1, 0), i64toi32_i32$HIGH_BITS);
   $1_1 = $1944($0_1, 52);
   $1973($1_1, 60, $12_1);
   $1973($1_1 - -64 | 0, 0, $11_1);
   $1973($1_1 + 56 | 0, 0, $6_1);
   $1_1 = $1944($0_1, 52);
   $1973($1_1 + 72 | 0, 0, $10_1);
   $1973($1_1 + 68 | 0, 0, $9);
   $1_1 = $1944($0_1, 52);
   $1973($1_1 + 76 | 0, 0, $6_1);
   $1973($0_1, 52, $1_1 + 80 | 0);
   $1973($0_1, 40, $1944($0_1, 40) + 4 | 0);
   $1973($0_1, 56, $1944($0_1, 56) + 12 | 0);
  }
 }
 
 function $420($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  $9 = $1944($0_1, 8);
  if (($2_1 | 0) > ($9 | 0)) {
   if (($1944($0_1 + 12 | 0, 0) | 0) < ($2_1 | 0)) {
    $1_1 = $16(Math_imul($2_1, 24));
    $3 = $1944($0_1 + 16 | 0, 0);
    if ($3) {
     $1602($1_1, $3, Math_imul($1944($0_1, 8), 24));
     $17($1944($0_1, 16));
    }
    $1973($0_1, 12, $2_1);
    $1973($0_1, 16, $1_1);
   }
   $1_1 = $1944($0_1, 12);
   label$4 : {
    if (($1_1 | 0) >= ($2_1 | 0)) {
     break label$4
    }
    $4_1 = $1_1;
    if ($1_1) {
     $3 = $1_1 + (($1_1 | 0) / 2 | 0) | 0
    } else {
     $3 = 8
    }
    $1_1 = ($2_1 | 0) < ($3 | 0) ? $3 : $2_1;
    if (($4_1 | 0) >= ($1_1 | 0)) {
     break label$4
    }
    $3 = $16(Math_imul($1_1, 24));
    $4_1 = $1944($0_1 + 16 | 0, 0);
    if ($4_1) {
     $1602($3, $4_1, Math_imul($1944($0_1, 8), 24));
     $17($1944($0_1, 16));
    }
    $1973($0_1, 12, $1_1);
    $1973($0_1, 16, $3);
   }
   $1973($0_1, 8, $2_1);
  }
  $1973($0_1, 4, $2_1);
  $1_1 = $1944($0_1 + 16 | 0, 0);
  $1982($1_1, 0, 0, 0);
  $1982($1_1 + 16 | 0, 0, 0, 0);
  $1982($1_1 + 8 | 0, 0, 0, 0);
  if (($2_1 | 0) > 1) {
   $1_1 = 1;
   while (1) {
    $6_1 = Math_imul($1_1, 24);
    $3 = $1944($0_1, 16) + $6_1 | 0;
    label$10 : {
     if (($1_1 | 0) >= ($9 | 0)) {
      $1982($3, 0, 0, 0);
      $1982($3 + 16 | 0, 0, 0, 0);
      $1982($3 + 8 | 0, 0, 0, 0);
      break label$10;
     }
     $4_1 = $1944($3, 4);
     label$12 : {
      if (($4_1 | 0) >= 0) {
       break label$12
      }
      $5_1 = $4_1;
      $4_1 = $4_1 + (($4_1 | 0) / 2 | 0) | 0;
      $4_1 = ($4_1 | 0) > 0 ? $4_1 : 0;
      if (($5_1 | 0) >= ($4_1 | 0)) {
       break label$12
      }
      $7_1 = $16(Math_imul($4_1, 40));
      $8 = $1944($3, 8);
      if ($8) {
       $1602($7_1, $8, Math_imul($1944($3, 0), 40));
       $17($1944($3, 8));
      }
      $1973($3, 4, $4_1);
      $1973($3, 8, $7_1);
     }
     $1973($3, 0, 0);
     $4_1 = $1944($0_1, 16) + $6_1 | 0;
     $7_1 = $4_1 + 12 | 0;
     $8 = $4_1 + 16 | 0;
     $3 = $1944($8, 0);
     label$14 : {
      if (($3 | 0) >= 0) {
       break label$14
      }
      $5_1 = $3;
      $3 = $3 + (($3 | 0) / 2 | 0) | 0;
      $3 = ($3 | 0) > 0 ? $3 : 0;
      if (($5_1 | 0) >= ($3 | 0)) {
       break label$14
      }
      $6_1 = $16($3 << 1);
      $4_1 = $4_1 + 20 | 0;
      $5_1 = $1944($4_1, 0);
      if ($5_1) {
       $1602($6_1, $5_1, $1944($7_1, 0) << 1);
       $17($1944($4_1, 0));
      }
      $1973($4_1, 0, $6_1);
      $1973($8, 0, $3);
     }
     $1973($7_1, 0, 0);
    }
    $1_1 = $1_1 + 1 | 0;
    if (($1_1 | 0) != ($2_1 | 0)) {
     continue
    }
    break;
   };
  }
 }
 
 function $421($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0;
  if (($1944($0_1, 4) | 0) >= 2) {
   $422($0_1, $1_1, 0);
   $3 = $1944($1_1, 0);
   label$2 : {
    if (!$3) {
     break label$2
    }
    $3 = $3 - 1 | 0;
    $2_1 = $1944($1_1, 8) + Math_imul($3, 40) | 0;
    if ($1944($2_1, 28)) {
     break label$2
    }
    if ($1944($2_1, 32)) {
     break label$2
    }
    $1973($1_1, 0, $3);
   }
   $2_1 = 0;
   $4_1 = 0;
   label$3 : {
    if (($1944($0_1, 4) | 0) <= 0) {
     break label$3
    }
    $3 = $1944($1_1, 0);
    $4_1 = 0;
    if (($3 | 0) <= 0) {
     break label$3
    }
    $4_1 = ($1944($1_1, 8) + Math_imul($3, 40) | 0) - 40 | 0;
   }
   if ($4_1) {
    $5_1 = $1944($4_1, 28) + $1944($4_1, 24) | 0
   } else {
    $5_1 = $2_1
   }
   $3 = 0;
   if (($1944($0_1, 4) | 0) >= 2) {
    $6_1 = 1;
    while (1) {
     $7_1 = $3;
     $10_1 = $2_1;
     $9 = $6_1;
     $2_1 = $1944($0_1, 16) + Math_imul($6_1, 24) | 0;
     $3 = $1944($2_1, 0);
     label$8 : {
      if (($3 | 0) <= 0) {
       break label$8
      }
      $3 = $3 - 1 | 0;
      if ($1944($1944($2_1, 8) + Math_imul($3, 40) | 0, 28)) {
       break label$8
      }
      $1973($2_1, 0, $3);
     }
     $6_1 = $1944($2_1, 0);
     label$9 : {
      if (($6_1 | 0) <= 0) {
       break label$9
      }
      if (!$4_1) {
       break label$9
      }
      $3 = $1944($2_1, 8);
      if ($1645($4_1, $3, 24)) {
       break label$9
      }
      if ($1944($4_1, 32) | $1944($3, 32)) {
       break label$9
      }
      $1973($4_1, 28, $1944($4_1, 28) + $1944($3, 28) | 0);
      $8 = $1944($3, 28);
      $1603($3, $3 + 40 | 0, Math_imul($6_1, 40) - 40 | 0);
      $1973($2_1, 0, $1944($2_1, 0) - 1 | 0);
      $5_1 = $5_1 + $8 | 0;
     }
     $3 = $5_1;
     $8 = $1944($2_1, 0);
     $6_1 = ($8 | 0) <= 0;
     if ($6_1) {
      $5_1 = $4_1
     } else {
      $5_1 = ($1944($2_1, 8) + Math_imul($8, 40) | 0) - 40 | 0
     }
     $11_1 = $1944($2_1, 12);
     label$15 : {
      if ($6_1) {
       $6_1 = $3;
       break label$15;
      }
      $12_1 = $1944($2_1, 8);
      $2_1 = $3;
      $4_1 = 0;
      while (1) {
       $3 = $12_1 + Math_imul($4_1, 40) | 0;
       $1973($3, 24, $2_1);
       $2_1 = $1944($3, 28) + $2_1 | 0;
       $6_1 = $2_1;
       $4_1 = $4_1 + 1 | 0;
       if (($8 | 0) != ($4_1 | 0)) {
        continue
       }
       break;
      };
     }
     $3 = $7_1 + $11_1 | 0;
     $2_1 = $8 + $10_1 | 0;
     $4_1 = $5_1;
     $5_1 = $6_1;
     $6_1 = $9 + 1 | 0;
     if (($1944($0_1, 4) | 0) > ($6_1 | 0)) {
      continue
     }
     break;
    };
   }
   $4_1 = $1944($1_1, 4);
   $6_1 = $2_1;
   $2_1 = $1944($1_1, 0) + $2_1 | 0;
   label$18 : {
    if (($4_1 | 0) >= ($2_1 | 0)) {
     break label$18
    }
    if ($4_1) {
     $5_1 = $4_1 + (($4_1 | 0) / 2 | 0) | 0
    } else {
     $5_1 = 8
    }
    $5_1 = ($2_1 | 0) < ($5_1 | 0) ? $5_1 : $2_1;
    if (($5_1 | 0) <= ($4_1 | 0)) {
     break label$18
    }
    $4_1 = $16(Math_imul($5_1, 40));
    $7_1 = $1944($1_1, 8);
    if ($7_1) {
     $1602($4_1, $7_1, Math_imul($1944($1_1, 0), 40));
     $17($1944($1_1, 8));
    }
    $1973($1_1, 4, $5_1);
    $1973($1_1, 8, $4_1);
   }
   $1973($1_1, 0, $2_1);
   $2_1 = $1944($1_1 + 16 | 0, 0);
   $4_1 = $1944($1_1, 12);
   $5_1 = $4_1 + $3 | 0;
   label$22 : {
    if (($2_1 | 0) >= ($5_1 | 0)) {
     break label$22
    }
    if ($2_1) {
     $3 = $2_1 + (($2_1 | 0) / 2 | 0) | 0
    } else {
     $3 = 8
    }
    $3 = ($3 | 0) > ($5_1 | 0) ? $3 : $5_1;
    if (($3 | 0) <= ($2_1 | 0)) {
     break label$22
    }
    $2_1 = $16($3 << 1);
    $7_1 = $1944($1_1 + 20 | 0, 0);
    if ($7_1) {
     $1602($2_1, $7_1, $1944($1_1, 12) << 1);
     $17($1944($1_1, 20));
    }
    $1973($1_1, 16, $3);
    $1973($1_1, 20, $2_1);
   }
   $1973($1_1, 12, $5_1);
   $4_1 = $1944($1_1 + 20 | 0, 0) + ($4_1 << 1) | 0;
   label$26 : {
    if (($1944($0_1, 4) | 0) < 2) {
     $6_1 = $4_1;
     break label$26;
    }
    $2_1 = 1;
    $3 = ($1944($1_1, 8) + Math_imul($1944($1_1, 0), 40) | 0) + Math_imul($6_1, -40) | 0;
    while (1) {
     $5_1 = $2_1;
     $2_1 = $1944($0_1, 16) + Math_imul($2_1, 24) | 0;
     $6_1 = $1944($2_1, 0);
     label$29 : {
      if (!$6_1) {
       break label$29
      }
      $9 = $3;
      $3 = Math_imul($6_1, 40);
      $3 = $1602($9, $1944($2_1, 8), $3) + $3 | 0;
     }
     $6_1 = $1944($2_1, 12);
     if ($6_1) {
      $9 = $1944($2_1 + 20 | 0, 0);
      $2_1 = $6_1 << 1;
      $4_1 = $1602($4_1, $9, $2_1) + $2_1 | 0;
     }
     $6_1 = $4_1;
     $2_1 = $5_1 + 1 | 0;
     if (($1944($0_1, 4) | 0) > ($2_1 | 0)) {
      continue
     }
     break;
    };
   }
   $1973($1_1, 56, $6_1);
   $3 = $1944($1_1, 0);
   label$33 : {
    if ($3) {
     if (!$1944(($1944($1_1, 8) + Math_imul($3, 40) | 0) - 8 | 0, 0)) {
      break label$33
     }
    }
    $375($1_1);
   }
   $3 = $1_1 + 96 | 0;
   $2_1 = (Math_imul($1944($1_1, 0), 40) + $1944($1_1, 8) | 0) - 40 | 0;
   label$35 : {
    if (!$1944($2_1, 28)) {
     $1982($2_1, 0, $1959($3, 0), i64toi32_i32$HIGH_BITS);
     $1982($2_1 + 16 | 0, 0, $1959($3 + 16 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1982($2_1 + 8 | 0, 0, $1959($3 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
     break label$35;
    }
    if (!$1645($2_1, $3, 24)) {
     break label$35
    }
    $375($1_1);
   }
   $1973($0_1, 4, 1);
  }
 }
 
 function $422($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  label$1 : {
   $3 = $1944($0_1, 0);
   if (($3 | 0) == ($2_1 | 0)) {
    break label$1
   }
   $4_1 = $0_1 + 16 | 0;
   $3 = $1944($4_1, 0) + Math_imul($3, 24) | 0;
   $1982($3, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
   $6_1 = $1_1 + 8 | 0;
   $1973($3 + 8 | 0, 0, $1944($6_1, 0));
   $3 = $1944($4_1, 0) + Math_imul($1944($0_1, 0), 24) | 0;
   $1982($3, 12, $1959($1_1, 12), i64toi32_i32$HIGH_BITS);
   $5_1 = $3 + 20 | 0;
   $3 = $1_1 + 20 | 0;
   $1973($5_1, 0, $1944($3, 0));
   $1973($0_1, 0, $2_1);
   $2_1 = Math_imul($2_1, 24);
   $5_1 = $1944($4_1, 0) + $2_1 | 0;
   $0_1 = $1959($5_1, 0);
   $1982($1_1, 0, $0_1, i64toi32_i32$HIGH_BITS);
   $1973($6_1, 0, $1944($5_1 + 8 | 0, 0));
   $4_1 = $1944($4_1, 0) + $2_1 | 0;
   $2_1 = $1959($4_1, 12);
   $1982($1_1, 12, $2_1, i64toi32_i32$HIGH_BITS);
   $4_1 = $1944($4_1 + 20 | 0, 0);
   $1973($3, 0, $4_1);
   $1973($1_1, 56, $4_1 + ($2_1 << 1) | 0);
   if ($0_1) {
    $0_1 = ($1944($1_1, 8) + Math_imul($0_1, 40) | 0) - 40 | 0
   } else {
    $0_1 = 0
   }
   if ($0_1) {
    $2_1 = $1_1 + 96 | 0;
    if (!$1944($0_1, 28)) {
     $1982($0_1, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
     $1982($0_1 + 16 | 0, 0, $1959($2_1 + 16 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1982($0_1 + 8 | 0, 0, $1959($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
     return;
    }
    if (!$1645($0_1, $2_1, 24)) {
     break label$1
    }
   }
   $375($1_1);
  }
 }
 
 function $423($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $1982($0_1, 8, 0, 0);
  label$1 : {
   if (($1944($0_1, 4) | 0) <= 0) {
    break label$1
   }
   while (1) {
    $8 = $3;
    $2_1 = $1944($1944($0_1, 16) + ($3 << 2) | 0, 0);
    $4_1 = $1944($2_1, 12);
    label$4 : {
     if (!$4_1) {
      $3 = $1_1;
      break label$4;
     }
     label$6 : {
      if (($5_1 | 0) >= ($4_1 | 0)) {
       break label$6
      }
      if ($5_1) {
       $3 = (($5_1 | 0) / 2 | 0) + $5_1 | 0
      } else {
       $3 = 8
      }
      $3 = ($3 | 0) > ($4_1 | 0) ? $3 : $4_1;
      if (($3 | 0) <= ($5_1 | 0)) {
       break label$6
      }
      $5_1 = $16(Math_imul($3, 20));
      if ($1_1) {
       $1602($5_1, $1_1, Math_imul($7_1, 20));
       $17($1_1);
      }
      $1_1 = $5_1;
      $5_1 = $3;
     }
     $3 = $5_1;
     if (($1944($2_1, 12) | 0) > 0) {
      $5_1 = 0;
      while (1) {
       $6_1 = $1_1 + Math_imul($5_1, 20) | 0;
       $7_1 = $1944($2_1, 32) + Math_imul($1941($1944($2_1, 20) + ($5_1 << 1) | 0, 0), 20) | 0;
       $1982($6_1, 0, $1959($7_1, 0), i64toi32_i32$HIGH_BITS);
       $1973($6_1 + 16 | 0, 0, $1944($7_1 + 16 | 0, 0));
       $1982($6_1 + 8 | 0, 0, $1959($7_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
       $5_1 = $5_1 + 1 | 0;
       if (($1944($2_1, 12) | 0) > ($5_1 | 0)) {
        continue
       }
       break;
      };
     }
     $7_1 = $1944($2_1, 24);
     $1973($2_1, 24, $4_1);
     $4_1 = $2_1 + 28 | 0;
     $5_1 = $1944($4_1, 0);
     $1973($4_1, 0, $3);
     $4_1 = $2_1 + 32 | 0;
     $3 = $1944($4_1, 0);
     $1973($4_1, 0, $1_1);
     $1_1 = $1944($2_1 + 16 | 0, 0);
     label$13 : {
      if (($1_1 | 0) >= 0) {
       break label$13
      }
      $4_1 = $1_1;
      $1_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0;
      $1_1 = ($1_1 | 0) > 0 ? $1_1 : 0;
      if (($4_1 | 0) >= ($1_1 | 0)) {
       break label$13
      }
      $4_1 = $16($1_1 << 1);
      $6_1 = $1944($2_1 + 20 | 0, 0);
      if ($6_1) {
       $1602($4_1, $6_1, $1944($2_1, 12) << 1);
       $17($1944($2_1, 20));
      }
      $1973($2_1, 16, $1_1);
      $1973($2_1, 20, $4_1);
     }
     $1973($2_1, 12, 0);
     $1973($0_1, 12, $1944($0_1, 12) + $1944($2_1, 24) | 0);
    }
    $1_1 = $3;
    $3 = $8 + 1 | 0;
    if (($1944($0_1, 4) | 0) > ($3 | 0)) {
     continue
    }
    break;
   };
  }
  if ($1_1) {
   $17($1_1)
  }
 }
 
 function $426($0_1) {
  $0_1 = $1604($0_1, 0, 120);
  $1970($0_1, 72, 65535);
  $1973($0_1, 68, 1065353216);
  $1973($0_1, 56, 2139095039);
  $1982($0_1, 20, 3, 1);
  $1968($0_1, 8, 1);
  return $0_1;
 }
 
 function $428($0_1) {
  var $1_1 = 0;
  $429($0_1);
  $1_1 = $1944($0_1 + 84 | 0, 0);
  if ($1_1) {
   $17($1_1)
  }
  $1_1 = $1944($0_1 + 72 | 0, 0);
  if ($1_1) {
   $17($1_1)
  }
  $1_1 = $1944($0_1 + 60 | 0, 0);
  if ($1_1) {
   $17($1_1)
  }
  return $0_1;
 }
 
 function $429($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0;
  $430($0_1);
  $1_1 = $1944($0_1, 20);
  if ($1_1) {
   $17($1_1)
  }
  $1_1 = $1944($0_1, 24);
  if ($1_1) {
   $17($1_1)
  }
  $1968($0_1, 18, 0);
  $1982($0_1, 20, 0, 0);
  if (($1944($0_1, 52) | 0) > 0) {
   $1_1 = 0;
   while (1) {
    $2_1 = $1944($1944($0_1, 60) + ($1_1 << 2) | 0, 0);
    if ($2_1) {
     $471($2_1);
     $17($2_1);
    }
    $1_1 = $1_1 + 1 | 0;
    if (($1944($0_1, 52) | 0) > ($1_1 | 0)) {
     continue
    }
    break;
   };
  }
  $1_1 = $1944($0_1 + 60 | 0, 0);
  if ($1_1) {
   $1982($0_1, 52, 0, 0);
   $17($1_1);
   $1973($0_1, 60, 0);
  }
  $1968($0_1, 17, 0);
 }
 
 function $430($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $1_1 = $1944($0_1, 76);
  if (($1_1 | 0) > 0) {
   while (1) {
    $1_1 = Math_imul($2_1, 120);
    $3 = $1944($0_1, 84) + $1_1 | 0;
    $4_1 = $1944($3, 0);
    label$3 : {
     if (!$4_1) {
      break label$3
     }
     if (!$1937($3, 8)) {
      break label$3
     }
     $17($4_1);
     $1973($1944($0_1, 84) + $1_1 | 0, 0, 0);
    }
    $2_1 = $2_1 + 1 | 0;
    $1_1 = $1944($0_1, 76);
    if (($2_1 | 0) < ($1_1 | 0)) {
     continue
    }
    break;
   }
  }
  $3 = $1944($0_1, 52);
  if (($3 | 0) > 0) {
   $4_1 = $1944($0_1 + 84 | 0, 0);
   $1_1 = $4_1 + Math_imul($1_1, 120) | 0;
   $8 = $1944($0_1 + 60 | 0, 0);
   $2_1 = 0;
   while (1) {
    $5_1 = ($2_1 << 2) + $8 | 0;
    $6_1 = $1944($5_1, 0);
    $7_1 = $1944($6_1, 52);
    if (!($7_1 >>> 0 < $4_1 >>> 0 | $1_1 >>> 0 <= $7_1 >>> 0)) {
     $1973($6_1, 52, 0);
     $1970($1944($5_1, 0), 56, 0);
    }
    $2_1 = $2_1 + 1 | 0;
    if (($3 | 0) != ($2_1 | 0)) {
     continue
    }
    break;
   };
  }
  $1_1 = $1944($0_1 + 84 | 0, 0);
  if ($1_1) {
   $1982($0_1, 76, 0, 0);
   $17($1_1);
   $1973($0_1, 84, 0);
  }
  $1_1 = $1944($0_1 + 72 | 0, 0);
  if ($1_1) {
   $1982($0_1, 64, 0, 0);
   $17($1_1);
   $1973($0_1, 72, 0);
  }
  $1982($0_1, 1120, -1, -1);
 }
 
 function $431($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = $1944($0_1, 20);
  if ($1_1) {
   $17($1_1)
  }
  $1_1 = $1944($0_1, 24);
  if ($1_1) {
   $17($1_1)
  }
  $1968($0_1, 18, 0);
  $1982($0_1, 20, 0, 0);
 }
 
 function $432($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0;
  if (($1944($0_1, 52) | 0) > 0) {
   while (1) {
    $2_1 = $1944($1944($0_1, 60) + ($1_1 << 2) | 0, 0);
    if ($2_1) {
     $471($2_1);
     $17($2_1);
    }
    $1_1 = $1_1 + 1 | 0;
    if (($1944($0_1, 52) | 0) > ($1_1 | 0)) {
     continue
    }
    break;
   }
  }
  $1_1 = $1944($0_1 + 60 | 0, 0);
  if ($1_1) {
   $1982($0_1, 52, 0, 0);
   $17($1_1);
   $1973($0_1, 60, 0);
  }
  $1968($0_1, 17, 0);
 }
 
 function $434($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = Math_fround(0);
  $1_1 = global$0 - 128 | 0;
  global$0 = $1_1;
  if (!$1944($0_1, 76)) {
   $426($1_1 + 8 | 0);
   $1968($1_1, 36, 1);
   $1982($1_1, 28, 1, 1);
   if ($1963($1_1, 24) <= Math_fround(0.0)) {
    $1973($1_1, 24, 1095761920)
   }
   if (!$1937($1_1, 82)) {
    $2_1 = $1_1 + 82 | 0;
    $3 = $1963($1_1, 24);
    label$4 : {
     if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
      $4_1 = ~~$3;
      break label$4;
     }
     $4_1 = -2147483648;
    }
    $1973($1_1, 0, $4_1);
    $21($2_1, 40, 1268, $1_1);
   }
   $4_1 = $1_1 + 52 | 0;
   $3 = $1963($1_1, 24);
   $5_1 = Math_fround($3 / Math_fround(13.0));
   label$6 : {
    if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$5_1;
     break label$6;
    }
    $2_1 = -2147483648;
   }
   $1986($4_1, 0, Math_fround($2_1 | 0));
   $1970($1_1, 80, 133);
   $2_1 = $1944($1_1, 56);
   $435($0_1, $3, $1_1 + 8 | 0, $2_1 ? $2_1 : 21640);
  }
  $2_1 = $1944($0_1, 1112);
  if (!$2_1) {
   $1973(0, 73580, 13);
   $2_1 = 73580;
  }
  $0_1 = FUNCTION_TABLE[$1944($2_1, 0) | 0]($0_1) | 0;
  global$0 = $1_1 + 128 | 0;
  return $0_1 | 0;
 }
 
 function $435($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, wasm2js_f32$0 = Math_fround(0), wasm2js_f32$1 = Math_fround(0), wasm2js_i32$0 = 0;
  $5_1 = 36160;
  $11_1 = $16(($1697(36160) + 4 | 0) / 5 << 2);
  $4_1 = $1937(36160, 0);
  if ($4_1) {
   $6_1 = $11_1;
   while (1) {
    $4_1 = $4_1 << 24 >> 24;
    $7_1 = (($4_1 | 0) > 91 ? -36 : -35) + $4_1 | 0;
    $4_1 = $1936($5_1, 1);
    $8 = (($4_1 | 0) > 91 ? -36 : -35) + $4_1 | 0;
    $4_1 = $1936($5_1, 2);
    $12_1 = (($4_1 | 0) > 91 ? -36 : -35) + $4_1 | 0;
    $4_1 = $1936($5_1, 3);
    $13 = (($4_1 | 0) > 91 ? -36 : -35) + $4_1 | 0;
    $4_1 = $1936($5_1, 4);
    $1971($6_1, 0, $7_1 + Math_imul($8 + Math_imul($12_1 + Math_imul($13 + Math_imul((($4_1 | 0) > 91 ? -36 : -35) + $4_1 | 0, 85) | 0, 85) | 0, 85) | 0, 85) | 0);
    $4_1 = $1937($5_1, 5);
    $5_1 = $5_1 + 5 | 0;
    $6_1 = $6_1 + 4 | 0;
    if ($4_1) {
     continue
    }
    break;
   };
  }
  $15_1 = $0_1;
  $12_1 = $2_1;
  $13 = $3;
  $9 = global$0 - 240 | 0;
  global$0 = $9;
  $0_1 = $1942($11_1, 8);
  $14 = $0_1 << 24 | ($0_1 & 65280) << 8 | ($0_1 >>> 8 & 65280 | $0_1 >>> 24);
  $8 = $16($14);
  $0_1 = $1942($11_1, 0);
  label$1 : {
   if (($0_1 << 24 | ($0_1 & 65280) << 8 | ($0_1 >>> 8 & 65280 | $0_1 >>> 24)) != 1471938560) {
    break label$1
   }
   $0_1 = $1942($11_1, 4);
   if ($0_1 << 24 | ($0_1 & 65280) << 8 | ($0_1 >>> 8 & 65280 | $0_1 >>> 24)) {
    break label$1
   }
   $0_1 = $1942($11_1, 8);
   $1973(0, 95648, $8);
   $1973(0, 95636, $11_1);
   $1973(0, 95644, $8);
   $10_1 = ($0_1 << 24 | ($0_1 & 65280) << 8 | ($0_1 >>> 8 & 65280 | $0_1 >>> 24)) + $8 | 0;
   $1973(0, 95640, $10_1);
   $3 = $10_1 + 1 | 0;
   $2_1 = $8;
   $4_1 = $11_1 + 16 | 0;
   while (1) {
    $5_1 = $2_1;
    $6_1 = $4_1;
    $4_1 = $1937($4_1, 0);
    label$3 : {
     if ($4_1 >>> 0 >= 32) {
      if ($4_1 << 24 >> 24 < 0) {
       $2_1 = $4_1 - 127 | 0;
       $0_1 = $2_1 + $5_1 | 0;
       label$6 : {
        if ($0_1 >>> 0 > $10_1 >>> 0) {
         break label$6
        }
        $0_1 = $3;
        $4_1 = ($1937($6_1, 1) ^ -1) + $5_1 | 0;
        if ($4_1 >>> 0 < $8 >>> 0) {
         break label$6
        }
        $0_1 = $5_1;
        if (!$2_1) {
         break label$6
        }
        while (1) {
         $1968($0_1, 0, $1937($4_1, 0));
         $4_1 = $4_1 + 1 | 0;
         $0_1 = $0_1 + 1 | 0;
         $2_1 = $2_1 - 1 | 0;
         if ($2_1) {
          continue
         }
         break;
        };
       }
       $2_1 = $0_1;
       $0_1 = $6_1 + 2 | 0;
       break label$3;
      }
      if ($4_1 >>> 0 >= 64) {
       $2_1 = $1937($6_1, 2) + 1 | 0;
       $0_1 = $2_1 + $5_1 | 0;
       label$9 : {
        if ($0_1 >>> 0 > $10_1 >>> 0) {
         break label$9
        }
        $0_1 = $3;
        $4_1 = ($5_1 - ($1937($6_1, 1) | $4_1 << 8) | 0) + 16383 | 0;
        if ($4_1 >>> 0 < $8 >>> 0) {
         break label$9
        }
        while (1) {
         $1968($5_1, 0, $1937($4_1, 0));
         $4_1 = $4_1 + 1 | 0;
         $5_1 = $5_1 + 1 | 0;
         $0_1 = $5_1;
         $2_1 = $2_1 - 1 | 0;
         if ($2_1) {
          continue
         }
         break;
        };
       }
       $2_1 = $0_1;
       $0_1 = $6_1 + 3 | 0;
       break label$3;
      }
      $0_1 = $4_1 - 31 | 0;
      $2_1 = $0_1 + $5_1 | 0;
      label$11 : {
       if ($10_1 >>> 0 >= $2_1 >>> 0) {
        $4_1 = $6_1 + 1 | 0;
        $7_1 = $3;
        if ($4_1 >>> 0 < $11_1 >>> 0) {
         break label$11
        }
        $1602($5_1, $4_1, $0_1);
       }
       $7_1 = $2_1;
      }
      $2_1 = $7_1;
      $0_1 = ($1937($6_1, 0) + $6_1 | 0) - 30 | 0;
      break label$3;
     }
     if ($4_1 >>> 0 >= 24) {
      $2_1 = $1937($6_1, 3) + 1 | 0;
      $0_1 = $2_1 + $5_1 | 0;
      label$14 : {
       if ($0_1 >>> 0 > $10_1 >>> 0) {
        break label$14
       }
       $0_1 = $3;
       $4_1 = ($5_1 - ($1937($6_1, 2) | $4_1 << 16 | $1937($6_1, 1) << 8) | 0) + 1572863 | 0;
       if ($4_1 >>> 0 < $8 >>> 0) {
        break label$14
       }
       while (1) {
        $1968($5_1, 0, $1937($4_1, 0));
        $4_1 = $4_1 + 1 | 0;
        $5_1 = $5_1 + 1 | 0;
        $0_1 = $5_1;
        $2_1 = $2_1 - 1 | 0;
        if ($2_1) {
         continue
        }
        break;
       };
      }
      $2_1 = $0_1;
      $0_1 = $6_1 + 4 | 0;
      break label$3;
     }
     if ($4_1 >>> 0 >= 16) {
      $2_1 = ($1937($6_1, 3) << 8 | $1937($6_1, 4)) + 1 | 0;
      $0_1 = $2_1 + $5_1 | 0;
      label$17 : {
       if ($0_1 >>> 0 > $10_1 >>> 0) {
        break label$17
       }
       $0_1 = $3;
       $4_1 = ($5_1 - ($1937($6_1, 2) | $4_1 << 16 | $1937($6_1, 1) << 8) | 0) + 1048575 | 0;
       if ($4_1 >>> 0 < $8 >>> 0) {
        break label$17
       }
       while (1) {
        $1968($5_1, 0, $1937($4_1, 0));
        $4_1 = $4_1 + 1 | 0;
        $5_1 = $5_1 + 1 | 0;
        $0_1 = $5_1;
        $2_1 = $2_1 - 1 | 0;
        if ($2_1) {
         continue
        }
        break;
       };
      }
      $2_1 = $0_1;
      $0_1 = $6_1 + 5 | 0;
      break label$3;
     }
     if ($4_1 >>> 0 >= 8) {
      $0_1 = ($1937($6_1, 1) | $4_1 << 8) - 2047 | 0;
      $2_1 = $0_1 + $5_1 | 0;
      label$201 : {
       if ($10_1 >>> 0 >= $2_1 >>> 0) {
        $4_1 = $6_1 + 2 | 0;
        $7_1 = $3;
        if ($4_1 >>> 0 < $11_1 >>> 0) {
         break label$201
        }
        $1602($5_1, $4_1, $0_1);
       }
       $7_1 = $2_1;
      }
      $2_1 = $7_1;
      $0_1 = ($6_1 + ($1937($6_1, 0) << 8 | $1937($6_1, 1)) | 0) - 2045 | 0;
      break label$3;
     }
     $0_1 = $6_1;
     label$22 : {
      switch ($4_1 - 4 | 0) {
      case 3:
       $0_1 = ($1937($6_1, 1) << 8 | $1937($6_1, 2)) + 1 | 0;
       $2_1 = $0_1 + $5_1 | 0;
       label$25 : {
        if ($10_1 >>> 0 >= $2_1 >>> 0) {
         $4_1 = $6_1 + 3 | 0;
         $7_1 = $3;
         if ($4_1 >>> 0 < $11_1 >>> 0) {
          break label$25
         }
         $1602($5_1, $4_1, $0_1);
        }
        $7_1 = $2_1;
       }
       $2_1 = $7_1;
       $0_1 = ($6_1 + ($1937($6_1, 1) << 8 | $1937($6_1, 2)) | 0) + 4 | 0;
       break label$3;
      case 2:
       $2_1 = $1937($6_1, 4) + 1 | 0;
       $0_1 = $2_1 + $5_1 | 0;
       label$27 : {
        if ($0_1 >>> 0 > $10_1 >>> 0) {
         break label$27
        }
        $0_1 = $3;
        $4_1 = (($1937($6_1, 1) << 16 | $1937($6_1, 3) | $1937($6_1, 2) << 8) ^ -1) + $5_1 | 0;
        if ($4_1 >>> 0 < $8 >>> 0) {
         break label$27
        }
        while (1) {
         $1968($5_1, 0, $1937($4_1, 0));
         $4_1 = $4_1 + 1 | 0;
         $5_1 = $5_1 + 1 | 0;
         $0_1 = $5_1;
         $2_1 = $2_1 - 1 | 0;
         if ($2_1) {
          continue
         }
         break;
        };
       }
       $2_1 = $0_1;
       $0_1 = $6_1 + 5 | 0;
       break label$3;
      case 0:
       break label$22;
      default:
       break label$3;
      };
     }
     $2_1 = ($1937($6_1, 4) << 8 | $1937($6_1, 5)) + 1 | 0;
     $0_1 = $2_1 + $5_1 | 0;
     label$29 : {
      if ($0_1 >>> 0 > $10_1 >>> 0) {
       break label$29
      }
      $0_1 = $3;
      $4_1 = (($1937($6_1, 1) << 16 | $1937($6_1, 3) | $1937($6_1, 2) << 8) ^ -1) + $5_1 | 0;
      if ($4_1 >>> 0 < $8 >>> 0) {
       break label$29
      }
      while (1) {
       $1968($5_1, 0, $1937($4_1, 0));
       $4_1 = $4_1 + 1 | 0;
       $5_1 = $5_1 + 1 | 0;
       $0_1 = $5_1;
       $2_1 = $2_1 - 1 | 0;
       if ($2_1) {
        continue
       }
       break;
      };
     }
     $2_1 = $0_1;
     $0_1 = $6_1 + 6 | 0;
    }
    $4_1 = $0_1;
    if (($4_1 | 0) != ($6_1 | 0) & $2_1 >>> 0 <= $10_1 >>> 0) {
     continue
    }
    break;
   };
   $1973(0, 95648, $2_1);
  }
  label$32 : {
   if ($12_1) {
    $1602($9, $12_1, 120);
    break label$32;
   }
   $426($9);
  }
  $1968($9, 8, 1);
  $1602($9 + 120 | 0, $9, 120);
  $1973($9, 124, $14);
  $1973($9, 120, $8);
  $1986($9, 136, (wasm2js_f32$0 = $1_1, wasm2js_f32$1 = $1963($9, 136), wasm2js_i32$0 = $1_1 > Math_fround(0.0), wasm2js_i32$0 ? wasm2js_f32$0 : wasm2js_f32$1));
  if ($13) {
   $1973($9, 168, $13)
  }
  $0_1 = $438($15_1, $9 + 120 | 0);
  global$0 = $9 + 240 | 0;
  $17($11_1);
  return $0_1;
 }
 
 function $436($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = 0, $16_1 = Math_fround(0), $17_1 = 0, $18_1 = Math_fround(0), $19 = 0, $20_1 = Math_fround(0), $21_1 = Math_fround(0), $22_1 = 0, $23_1 = Math_fround(0), $24 = 0, $25_1 = 0, $26_1 = 0, $27_1 = 0, $28_1 = 0, $29_1 = Math_fround(0), $30 = Math_fround(0), $31_1 = 0, $32_1 = 0, $33_1 = 0, $34_1 = 0, $35_1 = 0, $36_1 = 0, $37 = 0, $38_1 = 0, $39_1 = 0, $40_1 = 0, $41_1 = 0, $42_1 = 0, $43_1 = Math_fround(0), $44_1 = 0, $45_1 = 0, $46_1 = 0, $47_1 = Math_fround(0), $48_1 = 0, $49 = 0, $50_1 = Math_fround(0), $51_1 = Math_fround(0), $52_1 = 0, $53_1 = 0, $54_1 = 0, $55_1 = 0, $56_1 = Math_fround(0), $57_1 = Math_fround(0), $58_1 = Math_fround(0), $59_1 = Math_fround(0), $60_1 = 0, $61 = 0, $62_1 = 0, $63_1 = 0, $64_1 = 0, $65_1 = Math_fround(0), $66 = 0, $67_1 = Math_fround(0), $68_1 = Math_fround(0), $69_1 = Math_fround(0), $70_1 = Math_fround(0), $71_1 = Math_fround(0), $72_1 = Math_fround(0), $73_1 = 0, $74 = 0, $75_1 = 0, $76_1 = 0, $77 = 0, $78_1 = 0, $79_1 = 0, $80_1 = 0, $81_1 = 0, $82_1 = 0, $83 = 0, $84 = Math_fround(0), $85_1 = Math_fround(0);
  $11_1 = global$0 - 640 | 0;
  global$0 = $11_1;
  if (($1944($0_1, 1120) | 0) < 0) {
   $2_1 = $1944($0_1 + 68 | 0, 0);
   $1_1 = $1944($0_1, 64);
   label$2 : {
    if (!($1937($0_1, 0) & 2)) {
     label$4 : {
      if (($1_1 | 0) != ($2_1 | 0)) {
       break label$4
      }
      $3 = $2_1;
      $2_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
      $1_1 = $1_1 + 1 | 0;
      $2_1 = ($1_1 | 0) < ($2_1 | 0) ? $2_1 : $1_1;
      if (($3 | 0) >= ($2_1 | 0)) {
       break label$4
      }
      $1_1 = $16(Math_imul($2_1, 28));
      $3 = $1944($0_1 + 72 | 0, 0);
      if ($3) {
       $1602($1_1, $3, Math_imul($1944($0_1, 64), 28));
       $17($1944($0_1, 72));
      }
      $1973($0_1, 68, $2_1);
      $1973($0_1, 72, $1_1);
     }
     $2_1 = $1944($0_1 + 72 | 0, 0) + Math_imul($1944($0_1, 64), 28) | 0;
     $1970($2_1, 0, 245);
     $1_1 = 27;
     break label$2;
    }
    label$8 : {
     if (($1_1 | 0) != ($2_1 | 0)) {
      break label$8
     }
     $3 = $2_1;
     $2_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
     $1_1 = $1_1 + 1 | 0;
     $2_1 = ($1_1 | 0) < ($2_1 | 0) ? $2_1 : $1_1;
     if (($3 | 0) >= ($2_1 | 0)) {
      break label$8
     }
     $1_1 = $16(Math_imul($2_1, 28));
     $3 = $1944($0_1 + 72 | 0, 0);
     if ($3) {
      $1602($1_1, $3, Math_imul($1944($0_1, 64), 28));
      $17($1944($0_1, 72));
     }
     $1973($0_1, 68, $2_1);
     $1973($0_1, 72, $1_1);
    }
    $2_1 = $1944($0_1 + 72 | 0, 0) + Math_imul($1944($0_1, 64), 28) | 0;
    $1970($2_1, 0, 2);
    $1_1 = 2;
   }
   $1982($2_1, 8, 0, 0);
   $1973($2_1, 4, -1);
   $1970($2_1, 2, $1_1);
   $1982($2_1 + 16 | 0, 0, 0, 0);
   $1973($2_1 + 24 | 0, 0, 0);
   $2_1 = $1944($0_1, 64);
   $1973($0_1, 1120, $2_1);
   $1973($0_1, 64, $2_1 + 1 | 0);
  }
  label$12 : {
   if (($1944($0_1, 1124) | 0) >= 0) {
    break label$12
   }
   if ($1937($0_1, 0) & 4) {
    break label$12
   }
   $1_1 = $1944($0_1, 64);
   $2_1 = $1944($0_1 + 68 | 0, 0);
   label$13 : {
    if (($1_1 | 0) != ($2_1 | 0)) {
     break label$13
    }
    $3 = $2_1;
    $2_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
    $1_1 = $1_1 + 1 | 0;
    $2_1 = ($1_1 | 0) < ($2_1 | 0) ? $2_1 : $1_1;
    if (($3 | 0) >= ($2_1 | 0)) {
     break label$13
    }
    $1_1 = $16(Math_imul($2_1, 28));
    $3 = $1944($0_1 + 72 | 0, 0);
    if ($3) {
     $1602($1_1, $3, Math_imul($1944($0_1, 64), 28));
     $17($1944($0_1, 72));
    }
    $1973($0_1, 68, $2_1);
    $1973($0_1, 72, $1_1);
   }
   $2_1 = $1944($0_1 + 72 | 0, 0) + Math_imul($1944($0_1, 64), 28) | 0;
   $1982($2_1, 8, 0, 0);
   $1982($2_1, 0, 4194369, -1);
   $1982($2_1 + 16 | 0, 0, 0, 0);
   $1973($2_1 + 24 | 0, 0, 0);
   $2_1 = $1944($0_1, 64);
   $1973($0_1, 1124, $2_1);
   $1973($0_1, 64, $2_1 + 1 | 0);
  }
  $1982($0_1, 28, 0, 0);
  $1973($0_1, 4, 0);
  $1982($0_1 + 36 | 0, 0, 0, 0);
  $1982($0_1 + 44 | 0, 0, 0, 0);
  $2_1 = $1944($0_1, 20);
  if ($2_1) {
   $17($2_1)
  }
  $2_1 = $1944($0_1, 24);
  if ($2_1) {
   $17($2_1)
  }
  $1968($0_1, 18, 0);
  $1982($0_1, 20, 0, 0);
  $1_1 = 0;
  $37 = $1944($0_1, 76);
  if (($37 | 0) > 0) {
   $2_1 = $16(Math_imul(($37 | 0) <= 8 ? 8 : $37, 196))
  } else {
   $2_1 = 0
  }
  $38_1 = $1944($0_1, 52);
  if (($38_1 | 0) > 0) {
   $1_1 = $16(Math_imul(($38_1 | 0) <= 8 ? 8 : $38_1, 24))
  }
  $35_1 = $1604($2_1, 0, Math_imul($37, 196));
  $17_1 = $1604($1_1, 0, Math_imul($38_1, 24));
  label$5 : {
   label$6 : {
    $4_1 = ($1944($0_1, 76) | 0) <= 0;
    if ($4_1) {
     $2_1 = $4_1;
     break label$6;
    }
    $3 = 0;
    while (1) {
     label$80 : {
      $60_1 = $4_1;
      $45_1 = $1944($0_1, 84) + Math_imul($3, 120) | 0;
      $2_1 = $1944($45_1, 116);
      $25_1 = Math_imul($3, 196) + $35_1 | 0;
      $1973($25_1, 160, -1);
      $5_1 = $1944($0_1, 52);
      if (($5_1 | 0) <= 0) {
       break label$80
      }
      $27_1 = $3;
      $54_1 = $25_1 + 160 | 0;
      $9 = $1944($0_1, 60);
      $4_1 = 0;
      $3 = -1;
      while (1) {
       $1_1 = $3;
       if (($1944($9 + ($4_1 << 2) | 0, 0) | 0) == ($2_1 | 0)) {
        $1973($54_1, 0, $4_1);
        $1_1 = $4_1;
       }
       $4_1 = $4_1 + 1 | 0;
       if (($4_1 | 0) < ($5_1 | 0)) {
        $3 = $1_1;
        if (($1_1 | 0) == -1) {
         continue
        }
       }
       break;
      };
      if (($1_1 | 0) == -1) {
       break label$80
      }
      $5_1 = $1944($45_1, 12);
      label$131 : {
       label$14 : {
        label$15 : {
         $22_1 = $1944($45_1, 0);
         $2_1 = $1937($22_1, 0);
         label$16 : {
          label$17 : {
           if (($2_1 | 0) != 49) {
            break label$17
           }
           if ($1937($22_1, 1)) {
            break label$17
           }
           if ($1937($22_1, 2)) {
            break label$17
           }
           if (!$1937($22_1, 3)) {
            break label$16
           }
          }
          $1_1 = ($2_1 | 0) != 116;
          label$18 : {
           if ($1_1) {
            break label$18
           }
           if (($1937($22_1, 1) | 0) != 121) {
            break label$18
           }
           if (($1937($22_1, 2) | 0) != 112) {
            break label$18
           }
           if (($1937($22_1, 3) | 0) == 49) {
            break label$16
           }
          }
          label$19 : {
           if ($2_1) {
            if (($2_1 | 0) != 79) {
             break label$19
            }
            label$21 : {
             if (($1937($22_1, 1) | 0) != 84) {
              break label$21
             }
             if (($1937($22_1, 2) | 0) != 84) {
              break label$21
             }
             if (($1937($22_1, 3) | 0) == 79) {
              break label$16
             }
            }
            if ($2_1) {
             break label$19
            }
           }
           if (($1937($22_1, 1) | 0) != 1) {
            break label$19
           }
           if ($1937($22_1, 2)) {
            break label$19
           }
           if (!$1937($22_1, 3)) {
            break label$16
           }
          }
          if ($1_1) {
           $4_1 = -1;
           break label$131;
          }
          $4_1 = -1;
          label$23 : {
           $2_1 = $1937($22_1, 1);
           switch ($2_1 - 114 | 0) {
           case 2:
            break label$14;
           case 0:
            break label$23;
           default:
            break label$131;
           };
          }
          if (($1937($22_1, 2) | 0) != 117) {
           break label$15
          }
          if (($1937($22_1, 3) | 0) != 101) {
           break label$15
          }
         }
         $4_1 = $5_1 ? -1 : 0;
         break label$131;
        }
        if (($2_1 | 0) == 116) {
         break label$14
        }
        break label$131;
       }
       if (($1937($22_1, 2) | 0) != 99) {
        break label$131
       }
       if (($1937($22_1, 3) | 0) != 102) {
        break label$131
       }
       $2_1 = $1942($22_1, 4);
       $2_1 = $2_1 << 24 | ($2_1 & 65280) << 8 | ($2_1 >>> 8 & 65280 | $2_1 >>> 24);
       if (!(($2_1 | 0) == 131072 | ($2_1 | 0) == 65536)) {
        break label$131
       }
       $2_1 = $1942($22_1, 8);
       if (($2_1 << 24 | ($2_1 & 65280) << 8 | ($2_1 >>> 8 & 65280 | $2_1 >>> 24)) <= ($5_1 | 0)) {
        break label$131
       }
       $2_1 = $1942(($22_1 + ($5_1 << 2) | 0) + 12 | 0, 0);
       $4_1 = $2_1 << 24 | ($2_1 & 65280) << 8 | ($2_1 >>> 8 & 65280 | $2_1 >>> 24);
      }
      $1982($25_1, 52, 0, 0);
      $1973($25_1, 8, $4_1);
      $1973($25_1, 4, $22_1);
      $1973($25_1 + 60 | 0, 0, 0);
      $33_1 = $4_1 + 12 | 0;
      $9 = 0;
      $2_1 = $4_1 + $22_1 | 0;
      $31_1 = $2_1 + 4 | 0;
      $1_1 = $1937($31_1, 0) << 8 | $1937($2_1 + 5 | 0, 0);
      $34_1 = 0;
      label$27 : {
       if (!$1_1) {
        break label$27
       }
       while (1) {
        label$29 : {
         label$30 : {
          $2_1 = $22_1 + ($33_1 + ($9 << 4) | 0) | 0;
          if (($1937($2_1, 0) | 0) != 99) {
           break label$30
          }
          if (($1937($2_1, 1) | 0) != 109) {
           break label$30
          }
          if (($1937($2_1, 2) | 0) != 97) {
           break label$30
          }
          $3 = 1;
          if (($1937($2_1, 3) | 0) != 112) {
           break label$29
          }
          $2_1 = $1942($2_1, 8);
          $5_1 = $2_1 << 24 | ($2_1 & 65280) << 8 | ($2_1 >>> 8 & 65280 | $2_1 >>> 24);
          $3 = 0;
          break label$29;
         }
         $3 = 1;
        }
        if (!$3) {
         $34_1 = $5_1;
         break label$27;
        }
        $9 = $9 + 1 | 0;
        if (($1_1 | 0) != ($9 | 0)) {
         continue
        }
        break;
       };
       $34_1 = 0;
      }
      $9 = 0;
      $3 = 0;
      label$32 : {
       if (!$1_1) {
        break label$32
       }
       label$34 : {
        while (1) {
         label$36 : {
          label$37 : {
           $2_1 = $22_1 + ($33_1 + ($9 << 4) | 0) | 0;
           if (($1937($2_1, 0) | 0) != 108) {
            break label$37
           }
           if (($1937($2_1, 1) | 0) != 111) {
            break label$37
           }
           if (($1937($2_1, 2) | 0) != 99) {
            break label$37
           }
           $3 = 1;
           if (($1937($2_1, 3) | 0) != 97) {
            break label$36
           }
           $2_1 = $1942($2_1, 8);
           $5_1 = $2_1 << 24 | ($2_1 & 65280) << 8 | ($2_1 >>> 8 & 65280 | $2_1 >>> 24);
           $3 = 0;
           break label$36;
          }
          $3 = 1;
         }
         if (!$3) {
          break label$34
         }
         $9 = $9 + 1 | 0;
         if (($1_1 | 0) != ($9 | 0)) {
          continue
         }
         break;
        };
        $3 = 0;
        break label$32;
       }
       $3 = $5_1;
      }
      $9 = $3;
      $1973($25_1, 16, $3);
      $5_1 = 0;
      $1_1 = $1937($31_1, 0) << 8 | $1937($31_1, 1);
      $2_1 = 0;
      label$38 : {
       if (!$1_1) {
        break label$38
       }
       while (1) {
        label$40 : {
         label$41 : {
          $2_1 = $22_1 + ($33_1 + ($5_1 << 4) | 0) | 0;
          if (($1937($2_1, 0) | 0) != 104) {
           break label$41
          }
          if (($1937($2_1, 1) | 0) != 101) {
           break label$41
          }
          if (($1937($2_1, 2) | 0) != 97) {
           break label$41
          }
          $4_1 = 1;
          if (($1937($2_1, 3) | 0) != 100) {
           break label$40
          }
          $2_1 = $1942($2_1, 8);
          $3 = $2_1 << 24 | ($2_1 & 65280) << 8 | ($2_1 >>> 8 & 65280 | $2_1 >>> 24);
          $4_1 = 0;
          break label$40;
         }
         $4_1 = 1;
        }
        if (!$4_1) {
         $2_1 = $3;
         break label$38;
        }
        $2_1 = $5_1 + 1 | 0;
        $5_1 = $2_1;
        if (($1_1 | 0) != ($2_1 | 0)) {
         continue
        }
        break;
       };
       $2_1 = 0;
      }
      $7_1 = $2_1;
      $1973($25_1, 20, $2_1);
      $5_1 = 0;
      $1_1 = $1937($31_1, 0) << 8 | $1937($31_1, 1);
      label$43 : {
       if (!$1_1) {
        $3 = 0;
        break label$43;
       }
       label$45 : {
        while (1) {
         label$47 : {
          label$48 : {
           $2_1 = $22_1 + ($33_1 + ($5_1 << 4) | 0) | 0;
           if (($1937($2_1, 0) | 0) != 103) {
            break label$48
           }
           if (($1937($2_1, 1) | 0) != 108) {
            break label$48
           }
           if (($1937($2_1, 2) | 0) != 121) {
            break label$48
           }
           $4_1 = 1;
           if (($1937($2_1, 3) | 0) != 102) {
            break label$47
           }
           $2_1 = $1942($2_1, 8);
           $3 = $2_1 << 24 | ($2_1 & 65280) << 8 | ($2_1 >>> 8 & 65280 | $2_1 >>> 24);
           $4_1 = 0;
           break label$47;
          }
          $4_1 = 1;
         }
         if (!$4_1) {
          break label$45
         }
         $2_1 = $5_1 + 1 | 0;
         $5_1 = $2_1;
         if (($1_1 | 0) != ($2_1 | 0)) {
          continue
         }
         break;
        };
        $3 = 0;
       }
      }
      $2_1 = $3;
      $1973($25_1, 24, $2_1);
      $5_1 = 0;
      $4_1 = $1937($31_1, 0) << 8 | $1937($31_1, 1);
      $1_1 = 0;
      label$49 : {
       if (!$4_1) {
        break label$49
       }
       while (1) {
        label$51 : {
         label$52 : {
          $1_1 = $22_1 + ($33_1 + ($5_1 << 4) | 0) | 0;
          if (($1937($1_1, 0) | 0) != 104) {
           break label$52
          }
          if (($1937($1_1, 1) | 0) != 104) {
           break label$52
          }
          if (($1937($1_1, 2) | 0) != 101) {
           break label$52
          }
          $10_1 = 1;
          if (($1937($1_1, 3) | 0) != 97) {
           break label$51
          }
          $1_1 = $1942($1_1, 8);
          $3 = $1_1 << 24 | ($1_1 & 65280) << 8 | ($1_1 >>> 8 & 65280 | $1_1 >>> 24);
          $10_1 = 0;
          break label$51;
         }
         $10_1 = 1;
        }
        if (!$10_1) {
         $1_1 = $3;
         break label$49;
        }
        $1_1 = $5_1 + 1 | 0;
        $5_1 = $1_1;
        if (($1_1 | 0) != ($4_1 | 0)) {
         continue
        }
        break;
       };
       $1_1 = 0;
      }
      $10_1 = $1_1;
      $1973($25_1, 28, $1_1);
      $5_1 = 0;
      $4_1 = $1937($31_1, 0) << 8 | $1937($31_1, 1);
      label$54 : {
       if (!$4_1) {
        $3 = 0;
        break label$54;
       }
       label$56 : {
        while (1) {
         label$58 : {
          label$59 : {
           $1_1 = $22_1 + ($33_1 + ($5_1 << 4) | 0) | 0;
           if (($1937($1_1, 0) | 0) != 104) {
            break label$59
           }
           if (($1937($1_1, 1) | 0) != 109) {
            break label$59
           }
           if (($1937($1_1, 2) | 0) != 116) {
            break label$59
           }
           $28_1 = 1;
           if (($1937($1_1, 3) | 0) != 120) {
            break label$58
           }
           $1_1 = $1942($1_1, 8);
           $3 = $1_1 << 24 | ($1_1 & 65280) << 8 | ($1_1 >>> 8 & 65280 | $1_1 >>> 24);
           $28_1 = 0;
           break label$58;
          }
          $28_1 = 1;
         }
         if (!$28_1) {
          break label$56
         }
         $1_1 = $5_1 + 1 | 0;
         $5_1 = $1_1;
         if (($1_1 | 0) != ($4_1 | 0)) {
          continue
         }
         break;
        };
        $3 = 0;
       }
      }
      $1_1 = $3;
      $1973($25_1, 32, $1_1);
      $5_1 = 0;
      $24 = $1937($31_1, 0) << 8 | $1937($31_1, 1);
      $5_1 = 0;
      label$60 : {
       if (!$24) {
        break label$60
       }
       while (1) {
        label$62 : {
         label$63 : {
          $4_1 = $22_1 + ($33_1 + ($5_1 << 4) | 0) | 0;
          if (($1937($4_1, 0) | 0) != 107) {
           break label$63
          }
          if (($1937($4_1, 1) | 0) != 101) {
           break label$63
          }
          if (($1937($4_1, 2) | 0) != 114) {
           break label$63
          }
          $28_1 = 1;
          if (($1937($4_1, 3) | 0) != 110) {
           break label$62
          }
          $3 = $1942($4_1, 8);
          $3 = $3 << 24 | ($3 & 65280) << 8 | ($3 >>> 8 & 65280 | $3 >>> 24);
          $28_1 = 0;
          break label$62;
         }
         $28_1 = 1;
        }
        if (!$28_1) {
         $5_1 = $3;
         break label$60;
        }
        $5_1 = $5_1 + 1 | 0;
        if (($5_1 | 0) != ($24 | 0)) {
         continue
        }
        break;
       };
       $5_1 = 0;
      }
      $1973($25_1, 36, $5_1);
      $5_1 = 0;
      $24 = $1937($31_1, 0) << 8 | $1937($31_1, 1);
      label$65 : {
       if (!$24) {
        $3 = 0;
        break label$65;
       }
       label$67 : {
        while (1) {
         label$69 : {
          label$70 : {
           $4_1 = $22_1 + ($33_1 + ($5_1 << 4) | 0) | 0;
           if (($1937($4_1, 0) | 0) != 71) {
            break label$70
           }
           if (($1937($4_1, 1) | 0) != 80) {
            break label$70
           }
           if (($1937($4_1, 2) | 0) != 79) {
            break label$70
           }
           $28_1 = 1;
           if (($1937($4_1, 3) | 0) != 83) {
            break label$69
           }
           $3 = $1942($4_1, 8);
           $3 = $3 << 24 | ($3 & 65280) << 8 | ($3 >>> 8 & 65280 | $3 >>> 24);
           $28_1 = 0;
           break label$69;
          }
          $28_1 = 1;
         }
         if (!$28_1) {
          break label$67
         }
         $5_1 = $5_1 + 1 | 0;
         if (($5_1 | 0) != ($24 | 0)) {
          continue
         }
         break;
        };
        $3 = 0;
       }
      }
      $1973($25_1, 40, $3);
      if (!$34_1 | !$7_1 | (!$10_1 | !$1_1)) {
       break label$80
      }
      label$71 : {
       if ($2_1) {
        if ($9) {
         break label$71
        }
        break label$80;
       }
       $1973($11_1, 108, 2);
       $1973($11_1, 104, 0);
       $1973($11_1, 100, 0);
       $1973($11_1, 96, 0);
       $5_1 = 0;
       $1_1 = $1937($31_1, 0) << 8 | $1937($31_1, 1);
       label$73 : {
        if (!$1_1) {
         $3 = 0;
         break label$73;
        }
        label$75 : {
         while (1) {
          label$77 : {
           label$78 : {
            $2_1 = $22_1 + ($33_1 + ($5_1 << 4) | 0) | 0;
            if (($1937($2_1, 0) | 0) != 67) {
             break label$78
            }
            if (($1937($2_1, 1) | 0) != 70) {
             break label$78
            }
            if (($1937($2_1, 2) | 0) != 70) {
             break label$78
            }
            $4_1 = 1;
            if (($1937($2_1, 3) | 0) != 32) {
             break label$77
            }
            $2_1 = $1942($2_1, 8);
            $3 = $2_1 << 24 | ($2_1 & 65280) << 8 | ($2_1 >>> 8 & 65280 | $2_1 >>> 24);
            $4_1 = 0;
            break label$77;
           }
           $4_1 = 1;
          }
          if (!$4_1) {
           break label$75
          }
          $2_1 = $5_1 + 1 | 0;
          $5_1 = $2_1;
          if (($1_1 | 0) != ($2_1 | 0)) {
           continue
          }
          break;
         };
         $3 = 0;
        }
       }
       if (!$3) {
        break label$80
       }
       $1982($25_1, 100, 0, 0);
       $1982($25_1, 56, 0, 536870912);
       $1982($25_1 + 116 | 0, 0, 0, 0);
       $55_1 = $25_1 + 108 | 0;
       $1982($55_1, 0, 0, 0);
       $1973($25_1, 52, $3 + $22_1 | 0);
       $39_1 = $11_1 + 120 | 0;
       $2_1 = $25_1 + 52 | 0;
       $10_1 = $1944($2_1 + 8 | 0, 0);
       $1973($39_1, 0, $10_1);
       $1983($11_1, 112, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
       $2_1 = $1944($11_1, 116);
       $1_1 = $2_1 + 2 | 0;
       $2_1 = ($2_1 | 0) < -2 ? $10_1 : ($1_1 | 0) > ($10_1 | 0) ? $10_1 : $1_1;
       $1973($11_1, 116, $2_1);
       if (($2_1 | 0) < ($10_1 | 0)) {
        $1973($11_1, 116, $2_1 + 1 | 0);
        $2_1 = $1937($1944($11_1, 112) + $2_1 | 0, 0);
       } else {
        $2_1 = 0
       }
       $2_1 = $2_1 & 255;
       $9 = ($2_1 | 0) > ($10_1 | 0) ? $10_1 : $2_1;
       $1973($11_1, 116, $9);
       $24 = $1944($11_1, 112);
       $2_1 = $9;
       $1_1 = 0;
       $7_1 = 0;
       while (1) {
        $4_1 = $7_1 << 8;
        $3 = $2_1;
        label$81 : {
         if (($10_1 | 0) <= ($2_1 | 0)) {
          $2_1 = $9;
          $7_1 = 0;
          break label$81;
         }
         $7_1 = $1937($3 + $24 | 0, 0);
         $2_1 = $3 + 1 | 0;
         $3 = $2_1;
        }
        $5_1 = $3;
        $3 = $2_1;
        $9 = $2_1;
        $2_1 = $5_1;
        $4_1 = $4_1 | $7_1 & 255;
        $7_1 = $4_1;
        $1_1 = $1_1 + 1 | 0;
        if (($1_1 | 0) != 2) {
         continue
        }
        break;
       };
       $1973($11_1, 116, $3);
       if ($4_1) {
        $9 = 0;
        if (($3 | 0) < ($10_1 | 0)) {
         $1973($11_1, 116, $3 + 1 | 0);
         $9 = $1937($3 + $24 | 0, 0);
        }
        $5_1 = $9;
        $2_1 = $1944($11_1, 116) + Math_imul($4_1, $5_1) | 0;
        $9 = ($2_1 | 0) < 0 ? $10_1 : ($2_1 | 0) > ($10_1 | 0) ? $10_1 : $2_1;
        $1973($11_1, 116, $9);
        $2_1 = $9;
        $1_1 = 0;
        $7_1 = 0;
        if ($5_1) {
         while (1) {
          $28_1 = $7_1 << 8;
          $3 = $2_1;
          label$88 : {
           if (($10_1 | 0) <= ($2_1 | 0)) {
            $2_1 = $9;
            $7_1 = 0;
            break label$88;
           }
           $7_1 = $1937($3 + $24 | 0, 0);
           $2_1 = $3 + 1 | 0;
           $3 = $2_1;
          }
          $4_1 = $2_1;
          $9 = $2_1;
          $2_1 = $3;
          $3 = $28_1 | $7_1 & 255;
          $7_1 = $3;
          $1_1 = $1_1 + 1 | 0;
          if (($1_1 | 0) != ($5_1 | 0)) {
           continue
          }
          break;
         };
         $1973($11_1, 116, $4_1);
         $2_1 = $3 - 1 | 0;
        } else {
         $2_1 = -1
        }
        $2_1 = $2_1 + $1944($11_1, 116) | 0;
        $1973($11_1, 116, ($2_1 | 0) < 0 ? $10_1 : ($2_1 | 0) > ($10_1 | 0) ? $10_1 : $2_1);
       }
       $28_1 = $1944($11_1, 116);
       $9 = $28_1;
       $2_1 = $9;
       $1_1 = 0;
       $7_1 = 0;
       while (1) {
        $4_1 = $7_1 << 8;
        $3 = $2_1;
        label$91 : {
         if (($10_1 | 0) <= ($2_1 | 0)) {
          $2_1 = $9;
          $7_1 = 0;
          break label$91;
         }
         $7_1 = $1937($3 + $24 | 0, 0);
         $2_1 = $3 + 1 | 0;
         $3 = $2_1;
        }
        $5_1 = $3;
        $3 = $2_1;
        $9 = $2_1;
        $2_1 = $5_1;
        $4_1 = $4_1 | $7_1 & 255;
        $7_1 = $4_1;
        $1_1 = $1_1 + 1 | 0;
        if (($1_1 | 0) != 2) {
         continue
        }
        break;
       };
       $1973($11_1, 116, $3);
       if ($4_1) {
        $9 = 0;
        if (($3 | 0) < ($10_1 | 0)) {
         $1973($11_1, 116, $3 + 1 | 0);
         $9 = $1937($3 + $24 | 0, 0);
        }
        $5_1 = $9;
        $2_1 = $1944($11_1, 116) + Math_imul($4_1, $5_1) | 0;
        $9 = ($2_1 | 0) < 0 ? $10_1 : ($2_1 | 0) > ($10_1 | 0) ? $10_1 : $2_1;
        $1973($11_1, 116, $9);
        $2_1 = $9;
        $1_1 = 0;
        $7_1 = 0;
        if ($5_1) {
         while (1) {
          $32_1 = $7_1 << 8;
          $3 = $2_1;
          label$98 : {
           if (($10_1 | 0) <= ($2_1 | 0)) {
            $2_1 = $9;
            $7_1 = 0;
            break label$98;
           }
           $7_1 = $1937($3 + $24 | 0, 0);
           $2_1 = $3 + 1 | 0;
           $3 = $2_1;
          }
          $4_1 = $2_1;
          $9 = $2_1;
          $2_1 = $3;
          $3 = $32_1 | $7_1 & 255;
          $7_1 = $3;
          $1_1 = $1_1 + 1 | 0;
          if (($1_1 | 0) != ($5_1 | 0)) {
           continue
          }
          break;
         };
         $1973($11_1, 116, $4_1);
         $2_1 = $3 - 1 | 0;
        } else {
         $2_1 = -1
        }
        $2_1 = $2_1 + $1944($11_1, 116) | 0;
        $1973($11_1, 116, ($2_1 | 0) < 0 ? $10_1 : ($2_1 | 0) > ($10_1 | 0) ? $10_1 : $2_1);
       }
       $5_1 = $11_1 + 76 | 0;
       $2_1 = $1944($11_1, 116);
       $1_1 = $2_1 - $28_1 | 0;
       label$100 : {
        if (($1_1 | $28_1) < 0) {
         $9 = 0;
         $1_1 = 0;
         break label$100;
        }
        $3 = ($10_1 | 0) < ($28_1 | 0) | ($2_1 | 0) > ($10_1 | 0);
        $9 = $3 ? 0 : $24 + $28_1 | 0;
        $1_1 = $3 ? 0 : $1_1;
       }
       $1973($5_1, 0, $1_1);
       $3 = $11_1 + 40 | 0;
       $1973($3 + 8 | 0, 0, $1_1);
       $1973($11_1, 72, 0);
       $1973($11_1, 68, $9);
       $1983($11_1, 40, $1959($11_1, 68), i64toi32_i32$HIGH_BITS);
       $444($11_1 + 80 | 0, $3, 0);
       $9 = $2_1;
       $1_1 = 0;
       $7_1 = 0;
       while (1) {
        $4_1 = $7_1 << 8;
        $3 = $2_1;
        label$103 : {
         if (($10_1 | 0) <= ($2_1 | 0)) {
          $2_1 = $9;
          $7_1 = 0;
          break label$103;
         }
         $7_1 = $1937($3 + $24 | 0, 0);
         $2_1 = $3 + 1 | 0;
         $3 = $2_1;
        }
        $5_1 = $3;
        $3 = $2_1;
        $9 = $2_1;
        $2_1 = $5_1;
        $4_1 = $4_1 | $7_1 & 255;
        $7_1 = $4_1;
        $1_1 = $1_1 + 1 | 0;
        if (($1_1 | 0) != 2) {
         continue
        }
        break;
       };
       $1973($11_1, 116, $3);
       if ($4_1) {
        $9 = 0;
        if (($3 | 0) < ($10_1 | 0)) {
         $1973($11_1, 116, $3 + 1 | 0);
         $9 = $1937($3 + $24 | 0, 0);
        }
        $5_1 = $9;
        $2_1 = $1944($11_1, 116) + Math_imul($4_1, $5_1) | 0;
        $9 = ($2_1 | 0) < 0 ? $10_1 : ($2_1 | 0) > ($10_1 | 0) ? $10_1 : $2_1;
        $1973($11_1, 116, $9);
        $2_1 = $9;
        $1_1 = 0;
        $7_1 = 0;
        if ($5_1) {
         while (1) {
          $28_1 = $7_1 << 8;
          $3 = $2_1;
          label$110 : {
           if (($10_1 | 0) <= ($2_1 | 0)) {
            $2_1 = $9;
            $7_1 = 0;
            break label$110;
           }
           $7_1 = $1937($3 + $24 | 0, 0);
           $2_1 = $3 + 1 | 0;
           $3 = $2_1;
          }
          $4_1 = $2_1;
          $9 = $2_1;
          $2_1 = $3;
          $3 = $28_1 | $7_1 & 255;
          $7_1 = $3;
          $1_1 = $1_1 + 1 | 0;
          if (($1_1 | 0) != ($5_1 | 0)) {
           continue
          }
          break;
         };
         $1973($11_1, 116, $4_1);
         $2_1 = $3 - 1 | 0;
        } else {
         $2_1 = -1
        }
        $2_1 = $2_1 + $1944($11_1, 116) | 0;
        $1973($11_1, 116, ($2_1 | 0) < 0 ? $10_1 : ($2_1 | 0) > ($10_1 | 0) ? $10_1 : $2_1);
       }
       $28_1 = $1944($11_1, 116);
       $9 = $28_1;
       $2_1 = $9;
       $1_1 = 0;
       $7_1 = 0;
       while (1) {
        $4_1 = $7_1 << 8;
        $3 = $2_1;
        label$113 : {
         if (($10_1 | 0) <= ($2_1 | 0)) {
          $2_1 = $9;
          $7_1 = 0;
          break label$113;
         }
         $7_1 = $1937($3 + $24 | 0, 0);
         $2_1 = $3 + 1 | 0;
         $3 = $2_1;
        }
        $5_1 = $3;
        $3 = $2_1;
        $9 = $2_1;
        $2_1 = $5_1;
        $4_1 = $4_1 | $7_1 & 255;
        $7_1 = $4_1;
        $1_1 = $1_1 + 1 | 0;
        if (($1_1 | 0) != 2) {
         continue
        }
        break;
       };
       $1973($11_1, 116, $3);
       if ($4_1) {
        $9 = 0;
        if (($3 | 0) < ($10_1 | 0)) {
         $1973($11_1, 116, $3 + 1 | 0);
         $9 = $1937($3 + $24 | 0, 0);
        }
        $5_1 = $9;
        $2_1 = $1944($11_1, 116) + Math_imul($4_1, $5_1) | 0;
        $9 = ($2_1 | 0) < 0 ? $10_1 : ($2_1 | 0) > ($10_1 | 0) ? $10_1 : $2_1;
        $1973($11_1, 116, $9);
        $2_1 = $9;
        $1_1 = 0;
        $7_1 = 0;
        if ($5_1) {
         while (1) {
          $32_1 = $7_1 << 8;
          $3 = $2_1;
          label$120 : {
           if (($10_1 | 0) <= ($2_1 | 0)) {
            $2_1 = $9;
            $7_1 = 0;
            break label$120;
           }
           $7_1 = $1937($3 + $24 | 0, 0);
           $2_1 = $3 + 1 | 0;
           $3 = $2_1;
          }
          $4_1 = $2_1;
          $9 = $2_1;
          $2_1 = $3;
          $3 = $32_1 | $7_1 & 255;
          $7_1 = $3;
          $1_1 = $1_1 + 1 | 0;
          if (($1_1 | 0) != ($5_1 | 0)) {
           continue
          }
          break;
         };
         $1973($11_1, 116, $4_1);
         $2_1 = $3 - 1 | 0;
        } else {
         $2_1 = -1
        }
        $2_1 = $2_1 + $1944($11_1, 116) | 0;
        $1973($11_1, 116, ($2_1 | 0) < 0 ? $10_1 : ($2_1 | 0) > ($10_1 | 0) ? $10_1 : $2_1);
       }
       $2_1 = $1944($11_1, 116);
       $1_1 = $2_1 - $28_1 | 0;
       label$122 : {
        if (($1_1 | $28_1) < 0) {
         $9 = 0;
         $2_1 = 0;
         break label$122;
        }
        $2_1 = ($10_1 | 0) < ($28_1 | 0) | ($2_1 | 0) > ($10_1 | 0);
        $9 = $2_1 ? 0 : $1_1;
        $2_1 = $2_1 ? 0 : $24 + $28_1 | 0;
       }
       $1973($25_1, 76, $2_1);
       $1973($25_1 + 84 | 0, 0, $9);
       $1973($25_1 + 80 | 0, 0, 0);
       $2_1 = $11_1 + 80 | 0;
       $445($2_1, 17, 1, $11_1 + 104 | 0);
       $445($2_1, 262, 1, $11_1 + 108 | 0);
       $445($2_1, 292, 1, $11_1 + 100 | 0);
       $445($2_1, 293, 1, $11_1 + 96 | 0);
       $1_1 = $11_1 + 24 | 0;
       $1973($1_1 + 8 | 0, 0, $1944($39_1, 0));
       $3 = $11_1 + 8 | 0;
       $1973($3 + 8 | 0, 0, $1944($2_1 + 8 | 0, 0));
       $1983($11_1, 24, $1960($11_1, 112), i64toi32_i32$HIGH_BITS);
       $1983($11_1, 8, $1959($11_1, 80), i64toi32_i32$HIGH_BITS);
       $2_1 = $11_1 + 56 | 0;
       $446($2_1, $1_1, $3);
       $1973($25_1 + 96 | 0, 0, $1944($2_1 + 8 | 0, 0));
       $1982($25_1, 88, $1959($11_1, 56), i64toi32_i32$HIGH_BITS);
       if (($1944($11_1, 108) | 0) != 2) {
        break label$80
       }
       $39_1 = $1944($11_1, 104);
       if (!$39_1) {
        break label$80
       }
       $2_1 = $1944($11_1, 100);
       if ($2_1) {
        $28_1 = $1944($11_1, 96);
        if (!$28_1) {
         break label$80
        }
        $1_1 = ($2_1 | 0) < 0 ? $10_1 : ($2_1 | 0) > ($10_1 | 0) ? $10_1 : $2_1;
        $1973($11_1, 116, $1_1);
        $24 = $1944($11_1, 112);
        $10_1 = $1944($11_1, 120);
        $3 = $1_1;
        $5_1 = $1_1;
        $9 = 0;
        $2_1 = 0;
        while (1) {
         $32_1 = $2_1 << 8;
         $2_1 = $5_1;
         label$126 : {
          if (($10_1 | 0) <= ($2_1 | 0)) {
           $5_1 = $3;
           $7_1 = 0;
           break label$126;
          }
          $7_1 = $1937($2_1 + $24 | 0, 0);
          $5_1 = $2_1 + 1 | 0;
          $2_1 = $5_1;
         }
         $4_1 = $5_1;
         $3 = $4_1;
         $5_1 = $2_1;
         $2_1 = $32_1 | $7_1 & 255;
         $9 = $9 + 1 | 0;
         if (($9 | 0) != 2) {
          continue
         }
         break;
        };
        $1973($11_1, 116, $4_1);
        if ($2_1) {
         $3 = 0;
         if (($4_1 | 0) < ($10_1 | 0)) {
          $1973($11_1, 116, $4_1 + 1 | 0);
          $3 = $1937($4_1 + $24 | 0, 0);
         }
         $4_1 = $3;
         $2_1 = $1944($11_1, 116) + Math_imul($2_1, $3) | 0;
         $3 = ($2_1 | 0) < 0 ? $10_1 : ($2_1 | 0) > ($10_1 | 0) ? $10_1 : $2_1;
         $1973($11_1, 116, $3);
         $5_1 = $3;
         $9 = 0;
         $2_1 = 0;
         if ($4_1) {
          while (1) {
           $32_1 = $2_1 << 8;
           $2_1 = $5_1;
           label$133 : {
            if (($10_1 | 0) <= ($2_1 | 0)) {
             $5_1 = $3;
             $7_1 = 0;
             break label$133;
            }
            $7_1 = $1937($2_1 + $24 | 0, 0);
            $5_1 = $2_1 + 1 | 0;
            $2_1 = $5_1;
           }
           $3 = $5_1;
           $5_1 = $2_1;
           $2_1 = $32_1 | $7_1 & 255;
           $9 = $9 + 1 | 0;
           if (($4_1 | 0) != ($9 | 0)) {
            continue
           }
           break;
          };
          $1973($11_1, 116, $3);
          $2_1 = $2_1 - 1 | 0;
         } else {
          $2_1 = -1
         }
         $2_1 = $2_1 + $1944($11_1, 116) | 0;
         $1973($11_1, 116, ($2_1 | 0) < 0 ? $10_1 : ($2_1 | 0) > ($10_1 | 0) ? $10_1 : $2_1);
        }
        $2_1 = $1944($11_1, 116);
        $5_1 = $2_1 - $1_1 | 0;
        label$135 : {
         if (($5_1 | $1_1) < 0) {
          $3 = 0;
          $2_1 = 0;
          break label$135;
         }
         $2_1 = ($2_1 | 0) > ($10_1 | 0) | ($1_1 | 0) > ($10_1 | 0);
         $3 = $2_1 ? 0 : $1_1 + $24 | 0;
         $2_1 = $2_1 ? 0 : $5_1;
        }
        $1973($25_1, 116, 0);
        $1973($25_1, 100, $3);
        $1973($55_1, 0, $2_1);
        $1973($25_1 + 104 | 0, 0, 0);
        $1_1 = $10_1 - $28_1 | 0;
        $2_1 = ($1_1 | $28_1) < 0 | ($10_1 | 0) < ($28_1 | 0);
        $1973($25_1, 120, $2_1 ? 0 : $1_1);
        $1973($25_1, 112, $2_1 ? 0 : $24 + $28_1 | 0);
       }
       $10_1 = $1944($11_1, 120);
       $1_1 = ($39_1 | 0) < 0 ? $10_1 : ($10_1 | 0) < ($39_1 | 0) ? $10_1 : $39_1;
       $1973($11_1, 116, $1_1);
       $24 = $1944($11_1, 112);
       $3 = $1_1;
       $5_1 = $1_1;
       $9 = 0;
       $2_1 = 0;
       while (1) {
        $28_1 = $2_1 << 8;
        $2_1 = $5_1;
        label$138 : {
         if (($10_1 | 0) <= ($2_1 | 0)) {
          $5_1 = $3;
          $7_1 = 0;
          break label$138;
         }
         $7_1 = $1937($2_1 + $24 | 0, 0);
         $5_1 = $2_1 + 1 | 0;
         $2_1 = $5_1;
        }
        $4_1 = $5_1;
        $3 = $4_1;
        $5_1 = $2_1;
        $2_1 = $28_1 | $7_1 & 255;
        $9 = $9 + 1 | 0;
        if (($9 | 0) != 2) {
         continue
        }
        break;
       };
       $1973($11_1, 116, $4_1);
       if ($2_1) {
        $3 = 0;
        if (($4_1 | 0) < ($10_1 | 0)) {
         $1973($11_1, 116, $4_1 + 1 | 0);
         $3 = $1937($4_1 + $24 | 0, 0);
        }
        $4_1 = $3;
        $2_1 = $1944($11_1, 116) + Math_imul($2_1, $3) | 0;
        $3 = ($2_1 | 0) < 0 ? $10_1 : ($2_1 | 0) > ($10_1 | 0) ? $10_1 : $2_1;
        $1973($11_1, 116, $3);
        $5_1 = $3;
        $9 = 0;
        $2_1 = 0;
        if ($4_1) {
         while (1) {
          $28_1 = $2_1 << 8;
          $2_1 = $5_1;
          label$145 : {
           if (($10_1 | 0) <= ($2_1 | 0)) {
            $5_1 = $3;
            $7_1 = 0;
            break label$145;
           }
           $7_1 = $1937($2_1 + $24 | 0, 0);
           $5_1 = $2_1 + 1 | 0;
           $2_1 = $5_1;
          }
          $3 = $5_1;
          $5_1 = $2_1;
          $2_1 = $28_1 | $7_1 & 255;
          $9 = $9 + 1 | 0;
          if (($4_1 | 0) != ($9 | 0)) {
           continue
          }
          break;
         };
         $1973($11_1, 116, $3);
         $2_1 = $2_1 - 1 | 0;
        } else {
         $2_1 = -1
        }
        $2_1 = $2_1 + $1944($11_1, 116) | 0;
        $1973($11_1, 116, ($2_1 | 0) < 0 ? $10_1 : ($2_1 | 0) > ($10_1 | 0) ? $10_1 : $2_1);
       }
       $2_1 = $1944($11_1, 116);
       $1973($25_1 + 68 | 0, 0, 0);
       $5_1 = $2_1 - $1_1 | 0;
       $3 = ($5_1 | $1_1) < 0 | ($2_1 | 0) > ($10_1 | 0);
       $1973($25_1 + 72 | 0, 0, $3 ? 0 : $5_1);
       $1973($25_1, 64, $3 ? 0 : $1_1 + $24 | 0);
      }
      $5_1 = 0;
      $1_1 = $1937($31_1, 0) << 8 | $1937($31_1, 1);
      $2_1 = 0;
      label$147 : {
       if (!$1_1) {
        break label$147
       }
       label$149 : {
        while (1) {
         label$151 : {
          label$152 : {
           $2_1 = $22_1 + ($33_1 + ($5_1 << 4) | 0) | 0;
           if (($1937($2_1, 0) | 0) != 109) {
            break label$152
           }
           if (($1937($2_1, 1) | 0) != 97) {
            break label$152
           }
           if (($1937($2_1, 2) | 0) != 120) {
            break label$152
           }
           $4_1 = 1;
           if (($1937($2_1, 3) | 0) != 112) {
            break label$151
           }
           $2_1 = $1942($2_1, 8);
           $3 = $2_1 << 24 | ($2_1 & 65280) << 8 | ($2_1 >>> 8 & 65280 | $2_1 >>> 24);
           $4_1 = 0;
           break label$151;
          }
          $4_1 = 1;
         }
         if (!$4_1) {
          break label$149
         }
         $2_1 = $5_1 + 1 | 0;
         $5_1 = $2_1;
         if (($1_1 | 0) != ($2_1 | 0)) {
          continue
         }
         break;
        };
        $2_1 = 0;
        break label$147;
       }
       $2_1 = $3;
      }
      if ($2_1) {
       $2_1 = $2_1 + $22_1 | 0;
       $2_1 = $1937($2_1 + 4 | 0, 0) << 8 | $1937($2_1 + 5 | 0, 0);
      } else {
       $2_1 = 65535
      }
      $1973($25_1, 12, $2_1);
      $2_1 = $22_1 + $34_1 | 0;
      $1_1 = $1937($2_1 + 3 | 0, 0);
      $2_1 = $1937($2_1 + 2 | 0, 0);
      $1973($25_1, 44, 0);
      $1_1 = $1_1 | $2_1 << 8;
      if ($1_1) {
       $3 = $34_1 + 4 | 0;
       $4_1 = 0;
       while (1) {
        label$157 : {
         label$158 : {
          label$159 : {
           $2_1 = $22_1 + ($3 + ($4_1 << 3) | 0) | 0;
           $5_1 = $1940($2_1, 0);
           switch (($5_1 << 8 | $5_1 >>> 8) & 65535) {
           case 0:
            break label$158;
           case 3:
            break label$159;
           default:
            break label$157;
           };
          }
          $5_1 = $1940($2_1, 2);
          switch ((($5_1 << 8 | $5_1 >>> 8) & 65535) - 1 | 0) {
          case 0:
          case 9:
           break label$158;
          default:
           break label$157;
          };
         }
         $2_1 = $1942($2_1, 4);
         $1973($25_1, 44, $34_1 + ($2_1 << 24 | ($2_1 & 65280) << 8 | ($2_1 >>> 8 & 65280 | $2_1 >>> 24)) | 0);
        }
        $2_1 = $4_1 + 1 | 0;
        $4_1 = $2_1;
        if (($1_1 | 0) != ($2_1 | 0)) {
         continue
        }
        break;
       };
      }
      if (!$1944($25_1, 44)) {
       break label$80
      }
      $2_1 = $1944($25_1, 20) + $22_1 | 0;
      $1973($25_1, 48, $1937($2_1 + 50 | 0, 0) << 8 | $1937($2_1 + 51 | 0, 0));
      $2_1 = $1944($54_1, 0);
      $1_1 = $1944($45_1, 48);
      $4_1 = $1_1 ? $1_1 : 21640;
      $1973($25_1, 156, $4_1);
      $1_1 = $17_1 + Math_imul($2_1, 24) | 0;
      label$160 : {
       if (!$1941($4_1, 0)) {
        break label$160
       }
       $3 = $25_1 + 164 | 0;
       while (1) {
        $2_1 = $4_1;
        $5_1 = $1941($2_1, 2);
        if (!$5_1) {
         break label$160
        }
        $4_1 = $1944($3, 0);
        $1973($3, 0, ($4_1 | 0) > ($5_1 | 0) ? $4_1 : $5_1);
        $4_1 = $2_1 + 4 | 0;
        if ($1941($2_1, 4)) {
         continue
        }
        break;
       };
      }
      $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
      $3 = $1_1;
      $2_1 = $1944($1_1, 4);
      $1_1 = $1944($25_1, 164);
      $1973($3, 4, ($1_1 | 0) < ($2_1 | 0) ? $2_1 : $1_1);
      $3 = $27_1 + 1 | 0;
      $4_1 = ($1944($0_1, 76) | 0) <= ($3 | 0);
      $2_1 = $4_1;
      if (!$2_1) {
       continue
      }
      break label$6;
     }
     break;
    };
    $4_1 = $60_1;
    $1_1 = $35_1;
    $0_1 = $17_1;
    break label$5;
   }
   $60_1 = $2_1;
   $2_1 = 0;
   $24 = ($37 | 0) > 0;
   if ($24) {
    $1_1 = 0;
    $4_1 = 0;
    while (1) {
     $2_1 = $1_1;
     $10_1 = Math_imul($4_1, 196) + $35_1 | 0;
     $27_1 = $10_1 + 172 | 0;
     $9 = $1944($10_1, 160);
     $1_1 = $1944($10_1 + 176 | 0, 0);
     $3 = $1944($10_1, 164) + 32 >> 5;
     label$164 : {
      if (($1_1 | 0) >= ($3 | 0)) {
       break label$164
      }
      $5_1 = $1_1;
      $1_1 = $1_1 ? $1_1 + (($1_1 | 0) / 2 | 0) | 0 : 8;
      $1_1 = ($1_1 | 0) > ($3 | 0) ? $1_1 : $3;
      if (($5_1 | 0) >= ($1_1 | 0)) {
       break label$164
      }
      $5_1 = $16($1_1 << 2);
      $7_1 = $1944($27_1, 8);
      if ($7_1) {
       $1602($5_1, $7_1, $1944($27_1, 0) << 2);
       $17($1944($27_1, 8));
      }
      $1973($27_1, 4, $1_1);
      $1973($27_1, 8, $5_1);
     }
     $1973($27_1, 0, $3);
     $1604($1944($27_1, 8), 0, $3 << 2);
     $5_1 = $17_1 + Math_imul($9, 24) | 0;
     $7_1 = $5_1 + 12 | 0;
     if (!$1944($5_1, 12)) {
      $1_1 = $1944($7_1, 4);
      $3 = $1944($5_1, 4) + 32 >> 5;
      label$169 : {
       if (($1_1 | 0) >= ($3 | 0)) {
        break label$169
       }
       $9 = $1_1;
       $1_1 = $1_1 ? $1_1 + (($1_1 | 0) / 2 | 0) | 0 : 8;
       $1_1 = ($1_1 | 0) > ($3 | 0) ? $1_1 : $3;
       if (($9 | 0) >= ($1_1 | 0)) {
        break label$169
       }
       $9 = $16($1_1 << 2);
       $25_1 = $1944($7_1, 8);
       if ($25_1) {
        $1602($9, $25_1, $1944($7_1, 0) << 2);
        $17($1944($7_1, 8));
       }
       $1973($7_1, 4, $1_1);
       $1973($7_1, 8, $9);
      }
      $1973($7_1, 0, $3);
      $1604($1944($7_1, 8), 0, $3 << 2);
     }
     $9 = $4_1;
     $3 = $1944($10_1, 156);
     $1_1 = $1941($3, 0);
     label$173 : {
      if (!$1_1) {
       break label$173
      }
      $25_1 = $5_1 + 8 | 0;
      $22_1 = $10_1 + 168 | 0;
      $4_1 = $2_1;
      while (1) {
       $31_1 = $1941($3, 2);
       if (!$31_1) {
        $2_1 = $4_1;
        break label$173;
       }
       $5_1 = $3;
       $3 = $1_1 & 65535;
       label$177 : {
        if ($31_1 >>> 0 < $3 >>> 0) {
         $2_1 = $4_1;
         break label$177;
        }
        $33_1 = $1944($7_1, 8);
        while (1) {
         $34_1 = $3 >>> 5 << 2;
         $2_1 = $34_1 + $33_1 | 0;
         $1_1 = $3;
         $3 = 1 << $1_1;
         label$180 : {
          if ($1944($2_1, 0) & $3) {
           break label$180
          }
          if (!$447($10_1, $1_1)) {
           break label$180
          }
          $1973($22_1, 0, $1944($22_1, 0) + 1 | 0);
          $1973($25_1, 0, $1944($25_1, 0) + 1 | 0);
          $34_1 = $1944($27_1, 8) + $34_1 | 0;
          $1973($34_1, 0, $1944($34_1, 0) | $3);
          $1973($2_1, 0, $1944($2_1, 0) | $3);
          $4_1 = $4_1 + 1 | 0;
         }
         $2_1 = $4_1;
         $3 = $1_1 + 1 | 0;
         if (($1_1 | 0) != ($31_1 | 0)) {
          continue
         }
         break;
        };
       }
       $3 = $5_1 + 4 | 0;
       $4_1 = $2_1;
       $1_1 = $1941($5_1, 4);
       if ($1_1) {
        continue
       }
       break;
      };
     }
     $1_1 = $2_1;
     $3 = $9 + 1 | 0;
     $4_1 = $3;
     if (($3 | 0) != ($37 | 0)) {
      continue
     }
     break;
    };
   }
   if ($24) {
    $1_1 = 0;
    while (1) {
     $9 = Math_imul($1_1, 196) + $35_1 | 0;
     $7_1 = $9 + 184 | 0;
     $25_1 = $9 + 188 | 0;
     $5_1 = $1944($25_1, 0);
     $3 = $1944($9, 168);
     if (($5_1 | 0) < ($3 | 0)) {
      $5_1 = $16($3 << 2);
      $4_1 = $9 + 192 | 0;
      $27_1 = $1944($4_1, 0);
      if ($27_1) {
       $1602($5_1, $27_1, $1944($7_1, 0) << 2);
       $17($1944($4_1, 0));
      }
      $1973($4_1, 0, $5_1);
      $1973($25_1, 0, $3);
     }
     $4_1 = $1_1;
     $1_1 = $1944($9, 172);
     if (($1_1 | 0) > 0) {
      $3 = $1944($9 + 180 | 0, 0);
      $31_1 = $3 + ($1_1 << 2) | 0;
      $27_1 = $9 + 192 | 0;
      $1_1 = $3;
      while (1) {
       $5_1 = $1_1;
       $24 = $1944($1_1, 0);
       if ($24) {
        $33_1 = $5_1 - $3 << 3;
        $1_1 = 0;
        while (1) {
         if ($24 >>> $1_1 & 1) {
          $34_1 = $1_1 + $33_1 | 0;
          $22_1 = $1944($7_1, 0);
          $10_1 = $1944($25_1, 0);
          label$192 : {
           if (($22_1 | 0) != ($10_1 | 0)) {
            break label$192
           }
           $28_1 = $10_1 ? $10_1 + (($10_1 | 0) / 2 | 0) | 0 : 8;
           $22_1 = $22_1 + 1 | 0;
           $22_1 = ($22_1 | 0) < ($28_1 | 0) ? $28_1 : $22_1;
           if (($10_1 | 0) >= ($22_1 | 0)) {
            break label$192
           }
           $10_1 = $16($22_1 << 2);
           $28_1 = $1944($27_1, 0);
           if ($28_1) {
            $1602($10_1, $28_1, $1944($7_1, 0) << 2);
            $17($1944($27_1, 0));
           }
           $1973($27_1, 0, $10_1);
           $1973($25_1, 0, $22_1);
          }
          $1973($1944($27_1, 0) + ($1944($7_1, 0) << 2) | 0, 0, $34_1);
          $1973($7_1, 0, $1944($7_1, 0) + 1 | 0);
         }
         $1_1 = $1_1 + 1 | 0;
         if (($1_1 | 0) != 32) {
          continue
         }
         break;
        };
       }
       $1_1 = $5_1 + 4 | 0;
       if ($1_1 >>> 0 < $31_1 >>> 0) {
        continue
       }
       break;
      };
     }
     $1_1 = $9 + 172 | 0;
     $3 = $1944($1_1, 8);
     if ($3) {
      $1982($1_1, 0, 0, 0);
      $17($3);
      $1973($1_1, 8, 0);
     }
     $1_1 = $4_1 + 1 | 0;
     if (($37 | 0) != ($1_1 | 0)) {
      continue
     }
     break;
    };
   }
   if (($38_1 | 0) > 0) {
    $1_1 = 0;
    while (1) {
     $3 = $17_1 + Math_imul($1_1, 24) | 0;
     $5_1 = $1944($3 + 20 | 0, 0);
     if ($5_1) {
      $3 = $3 + 12 | 0;
      $1982($3, 0, 0, 0);
      $17($5_1);
      $1973($3, 8, 0);
     }
     $1_1 = $1_1 + 1 | 0;
     if (($38_1 | 0) != ($1_1 | 0)) {
      continue
     }
     break;
    };
   }
   if ($17_1) {
    $17($17_1);
    $17_1 = 0;
   }
   $54_1 = $17_1;
   $1_1 = 0;
   $3 = ($2_1 | 0) <= 0;
   if ($3) {
    $5_1 = 0
   } else {
    $5_1 = $16((($2_1 | 0) <= 8 ? 8 : $2_1) << 4)
   }
   if (!$3) {
    $1_1 = $16(Math_imul(($2_1 | 0) <= 8 ? 8 : $2_1, 28))
   }
   $25_1 = $1604($5_1, 0, $2_1 << 4);
   $61 = $1604($1_1, 0, Math_imul($2_1, 28));
   $9 = 0;
   if (($37 | 0) > 0) {
    $1_1 = 0;
    $4_1 = 0;
    $3 = 0;
    $5_1 = 0;
    while (1) {
     $9 = $1_1;
     $2_1 = Math_imul($5_1, 196) + $35_1 | 0;
     $7_1 = $1944($2_1, 168);
     $9 = $1_1;
     label$206 : {
      if (!$7_1) {
       break label$206
      }
      $17_1 = Math_imul($3, 28) + $61 | 0;
      $1973($2_1, 152, $17_1);
      $1973($2_1, 148, ($4_1 << 4) + $25_1 | 0);
      $1_1 = $1944($0_1, 84) + Math_imul($5_1, 120) | 0;
      $6_1 = $1963($1_1, 16);
      $22_1 = $2_1 + 192 | 0;
      $1973($2_1 + 132 | 0, 0, $1944($22_1, 0));
      $1973($2_1 + 128 | 0, 0, 0);
      $1986($2_1, 124, $6_1);
      $1973($2_1 + 140 | 0, 0, $17_1);
      $1973($2_1 + 136 | 0, 0, $1944($2_1, 184));
      $1968($2_1 + 144 | 0, 0, $1944($1_1, 20));
      $1968($2_1 + 145 | 0, 0, $1944($1_1, 24));
      $17_1 = $2_1 + 184 | 0;
      label$208 : {
       if ($6_1 > Math_fround(0.0)) {
        $27_1 = $1944($2_1, 4) + $1944($2_1, 28) | 0;
        $10_1 = $1940($27_1, 4);
        $27_1 = $1940($27_1, 6);
        $6_1 = Math_fround($6_1 / Math_fround((($10_1 << 8 | $10_1 >>> 8) << 16 >> 16) - (($27_1 << 8 | $27_1 >>> 8) << 16 >> 16) | 0));
        break label$208;
       }
       $27_1 = $1940(($1944($2_1, 4) + $1944($2_1, 20) | 0) + 18 | 0, 0);
       $6_1 = Math_fround(Math_fround(-$6_1) / Math_fround((($27_1 << 8 | $27_1 >>> 8) & 65535) >>> 0));
      }
      $3 = $3 + $7_1 | 0;
      $4_1 = $4_1 + $7_1 | 0;
      if (($1944($17_1, 0) | 0) <= 0) {
       break label$206
      }
      $31_1 = $2_1 + 148 | 0;
      $7_1 = $1_1 + 24 | 0;
      $27_1 = $1_1 + 20 | 0;
      $10_1 = $1944($0_1, 12);
      $1_1 = 0;
      while (1) {
       $448($2_1, $447($2_1, $1944($1944($22_1, 0) + ($1_1 << 2) | 0, 0)), Math_fround($6_1 * Math_fround($1944($27_1, 0) | 0)), Math_fround($6_1 * Math_fround($1944($7_1, 0) | 0)), $11_1 + 112 | 0, $11_1 + 80 | 0, $11_1 + 68 | 0, $11_1 + 56 | 0);
       $24 = $1944($31_1, 0) + ($1_1 << 4) | 0;
       $33_1 = ((($1944($11_1, 68) + $10_1 | 0) - $1944($11_1, 112) | 0) + $1944($27_1, 0) | 0) - 1 | 0;
       $1970($24, 4, $33_1);
       $28_1 = $24;
       $24 = ((($1944($11_1, 56) + $10_1 | 0) - $1944($11_1, 80) | 0) + $1944($7_1, 0) | 0) - 1 | 0;
       $1970($28_1, 6, $24);
       $9 = Math_imul($24 & 65535, $33_1 & 65535) + $9 | 0;
       $1_1 = $1_1 + 1 | 0;
       if (($1944($17_1, 0) | 0) > ($1_1 | 0)) {
        continue
       }
       break;
      };
     }
     $1_1 = $9;
     $9 = $1_1;
     $5_1 = $5_1 + 1 | 0;
     if (($5_1 | 0) != ($37 | 0)) {
      continue
     }
     break;
    };
   }
   $1973($0_1, 32, 0);
   $1_1 = $1944($0_1, 8);
   label$212 : {
    if (($1_1 | 0) > 0) {
     break label$212
    }
    $1_1 = 4096;
    $6_1 = Math_fround(Math_sqrt(Math_fround($9 | 0)));
    label$213 : {
     if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
      $2_1 = ~~$6_1;
      break label$213;
     }
     $2_1 = -2147483648;
    }
    if (($2_1 | 0) > 2866) {
     break label$212
    }
    $1_1 = 2048;
    if (($2_1 | 0) > 1432) {
     break label$212
    }
    $1_1 = ($2_1 | 0) > 715 ? 1024 : 512;
   }
   $1973($0_1, 28, $1_1);
   $17_1 = $1944($0_1, 12);
   $5_1 = $16(48);
   $7_1 = $1_1 - $17_1 | 0;
   $3 = $16($7_1 << 3);
   label$215 : {
    if (!($3 ? $5_1 : 0)) {
     if ($5_1) {
      $17($5_1)
     }
     if (!$3) {
      $1_1 = 0;
      $3 = 0;
      $2_1 = 0;
      $17_1 = 0;
      break label$215;
     }
     $17($3);
     $1_1 = 0;
     $3 = 0;
     $2_1 = 0;
     $17_1 = 0;
     break label$215;
    }
    $4_1 = 0;
    if (($7_1 | 0) >= 2) {
     $27_1 = $7_1 - 2 | 0;
     $2_1 = 0;
     while (1) {
      $9 = $2_1;
      $4_1 = $2_1 + 1 | 0;
      $1973(($2_1 << 3) + $3 | 0, 4, ($4_1 << 3) + $3 | 0);
      $2_1 = $4_1;
      if (($9 | 0) != ($27_1 | 0)) {
       continue
      }
      break;
     };
    }
    $1973(($4_1 << 3) + $3 | 0, 4, 0);
    $1973($5_1, 28, $3);
    $1982($5_1, 12, 1, 0);
    $1973($5_1, 24, $5_1 + 32 | 0);
    $1973($5_1, 20, $7_1);
    $1973($5_1, 4, 32768 - $17_1 | 0);
    $1973($5_1, 0, $7_1);
    $1973($5_1 + 44 | 0, 0, 0);
    $1970($5_1 + 42 | 0, 0, 65535);
    $2_1 = $5_1 + 40 | 0;
    $1970($2_1, 0, $7_1);
    $1973($5_1 + 36 | 0, 0, $2_1);
    $1973($5_1, 32, 0);
    $1973($5_1, 8, (($7_1 << 1) - 1 | 0) / ($7_1 | 0) | 0);
    $2_1 = $5_1;
   }
   $22_1 = $17_1;
   $27_1 = $1_1;
   $28_1 = $2_1;
   $1_1 = 0;
   $5_1 = $1944($0_1, 64);
   if (($5_1 | 0) > 0) {
    $4_1 = $16((($5_1 | 0) <= 8 ? 8 : $5_1) << 4)
   } else {
    $4_1 = 0
   }
   $4_1 = $1604($4_1, 0, $5_1 << 4);
   $9 = $1944($0_1, 64);
   if (($9 | 0) > 0) {
    $7_1 = $1944($0_1 + 72 | 0, 0);
    while (1) {
     $17_1 = ($1_1 << 4) + $4_1 | 0;
     $10_1 = Math_imul($1_1, 28) + $7_1 | 0;
     $1970($17_1, 4, $1941($10_1, 0));
     $1970($17_1, 6, $1941($10_1, 2));
     $1_1 = $1_1 + 1 | 0;
     if (($9 | 0) != ($1_1 | 0)) {
      continue
     }
     break;
    };
   }
   $450($2_1, $4_1, $5_1);
   if (($5_1 | 0) > 0) {
    $1_1 = 0;
    while (1) {
     $2_1 = ($1_1 << 4) + $4_1 | 0;
     if ($1944($2_1, 12)) {
      $9 = $1944($0_1, 72) + Math_imul($1_1, 28) | 0;
      $1970($9, 4, $1941($2_1, 8));
      $7_1 = $9;
      $9 = $1941($2_1, 10);
      $1970($7_1, 6, $9);
      $7_1 = $1944($0_1, 32);
      $2_1 = $1941($2_1, 6) + $9 | 0;
      $1973($0_1, 32, ($2_1 | 0) < ($7_1 | 0) ? $7_1 : $2_1);
     }
     $1_1 = $1_1 + 1 | 0;
     if (($5_1 | 0) != ($1_1 | 0)) {
      continue
     }
     break;
    };
   }
   if ($4_1) {
    $17($4_1)
   }
   if (($37 | 0) > 0) {
    $1_1 = 0;
    while (1) {
     $2_1 = $1_1;
     $1_1 = Math_imul($2_1, 196) + $35_1 | 0;
     $5_1 = $1944($1_1, 168);
     label$224 : {
      if (!$5_1) {
       break label$224
      }
      $450($28_1, $1944($1_1, 148), $5_1);
      $4_1 = $1944($1_1 + 168 | 0, 0);
      if (($4_1 | 0) <= 0) {
       break label$224
      }
      $9 = $1944($1_1 + 148 | 0, 0);
      $1_1 = 0;
      while (1) {
       $5_1 = $9 + ($1_1 << 4) | 0;
       if ($1944($5_1, 12)) {
        $7_1 = $1944($0_1, 32);
        $5_1 = $1941($5_1, 6) + $1941($5_1, 10) | 0;
        $1973($0_1, 32, ($5_1 | 0) < ($7_1 | 0) ? $7_1 : $5_1);
       }
       $1_1 = $1_1 + 1 | 0;
       if (($4_1 | 0) != ($1_1 | 0)) {
        continue
       }
       break;
      };
     }
     $1_1 = $2_1 + 1 | 0;
     if (($37 | 0) != ($1_1 | 0)) {
      continue
     }
     break;
    };
   }
   $1_1 = $1944($0_1, 32);
   $55_1 = $3;
   if (!($1937($0_1, 0) & 1)) {
    $2_1 = $1_1 - 1 | 0;
    $2_1 = $2_1 >> 1 | $2_1;
    $2_1 = $2_1 >> 2 | $2_1;
    $2_1 = $2_1 >> 4 | $2_1;
    $2_1 = $2_1 >> 8 | $2_1;
    $1_1 = $2_1 >> 16 | $2_1;
   }
   $2_1 = $1_1 + 1 | 0;
   $1973($0_1, 32, $2_1);
   $1986($0_1, 40, Math_fround(Math_fround(1.0) / Math_fround($2_1 | 0)));
   $1_1 = $1944($0_1, 28);
   $1986($0_1, 36, Math_fround(Math_fround(1.0) / Math_fround($1_1 | 0)));
   $2_1 = $16(Math_imul($1_1, $2_1));
   $1973($0_1, 20, $2_1);
   $1604($2_1, 0, Math_imul($1944($0_1, 32), $1944($0_1, 28)));
   if (($37 | 0) > 0) {
    $75_1 = $0_1 + 28 | 0;
    $62_1 = $1944($0_1, 20);
    $1_1 = 0;
    while (1) {
     $45_1 = $1_1;
     $36_1 = Math_imul($1_1, 196) + $35_1 | 0;
     if ($1944($36_1, 168)) {
      $2_1 = $36_1 + 145 | 0;
      $1_1 = $36_1 + 144 | 0;
      $6_1 = $1963($36_1, 124);
      label$232 : {
       if ($6_1 > Math_fround(0.0)) {
        $3 = $1944($36_1, 4) + $1944($36_1, 28) | 0;
        $5_1 = $1940($3, 4);
        $3 = $1940($3, 6);
        $56_1 = Math_fround($6_1 / Math_fround((($5_1 << 8 | $5_1 >>> 8) << 16 >> 16) - (($3 << 8 | $3 >>> 8) << 16 >> 16) | 0));
        break label$232;
       }
       $3 = $1940(($1944($36_1, 4) + $1944($36_1, 20) | 0) + 18 | 0, 0);
       $56_1 = Math_fround(Math_fround(-$6_1) / Math_fround((($3 << 8 | $3 >>> 8) & 65535) >>> 0));
      }
      $41_1 = $1937($2_1, 0);
      $42_1 = $1937($1_1, 0);
      $6_1 = Math_fround($42_1 >>> 0);
      $76_1 = $1944($0_1, 84);
      $66 = $36_1 + 136 | 0;
      if (($1944($66, 0) | 0) > 0) {
       $67_1 = $42_1 ? Math_fround(Math_fround(1 - $42_1 | 0) / Math_fround($6_1 + $6_1)) : Math_fround(0.0);
       $8 = Math_fround($41_1 >>> 0);
       $68_1 = $41_1 ? Math_fround(Math_fround(1 - $41_1 | 0) / Math_fround($8 + $8)) : Math_fround(0.0);
       $77 = $36_1 + 128 | 0;
       $78_1 = $36_1 + 132 | 0;
       $79_1 = $36_1 + 140 | 0;
       $80_1 = $1944($36_1, 148);
       $69_1 = Math_fround(Math_fround(1.0) / $8);
       $70_1 = Math_fround(Math_fround(1.0) / $6_1);
       $51_1 = Math_fround($56_1 * $8);
       $47_1 = Math_fround($56_1 * $6_1);
       $6_1 = Math_fround(Math_fround(.3499999940395355) / ($47_1 > $51_1 ? $51_1 : $47_1));
       $71_1 = Math_fround($6_1 * $6_1);
       $72_1 = Math_fround(-$51_1);
       $1_1 = 0;
       while (1) {
        $31_1 = $1_1;
        $40_1 = ($1_1 << 4) + $80_1 | 0;
        label$238 : {
         if (!$1944($40_1, 12)) {
          break label$238
         }
         $1_1 = $1941($40_1, 4);
         if (!$1_1) {
          break label$238
         }
         $3 = $1941($40_1, 6);
         if (!$3) {
          break label$238
         }
         $52_1 = $40_1 + 4 | 0;
         $53_1 = $40_1 + 6 | 0;
         $2_1 = $1944($78_1, 0);
         label$239 : {
          if (!$2_1) {
           $2_1 = $1944($77, 0) + $31_1 | 0;
           break label$239;
          }
          $2_1 = $1944($2_1 + ($31_1 << 2) | 0, 0);
         }
         $81_1 = $1944($79_1, 0);
         $2_1 = $447($36_1, $2_1);
         $1970($40_1, 8, $1941($40_1, 8) + $22_1 | 0);
         $1970($40_1, 10, $1941($40_1, 10) + $22_1 | 0);
         $1970($52_1, 0, $1_1 - $22_1 | 0);
         $1970($53_1, 0, $3 - $22_1 | 0);
         $1_1 = $1944($36_1, 4);
         $3 = $1944($36_1, 32) + $1_1 | 0;
         $1_1 = $1944($36_1, 28) + $1_1 | 0;
         $1_1 = $1937($1_1 + 34 | 0, 0) << 8 | $1937($1_1 + 35 | 0, 0);
         $73_1 = $1940($3 + (($1_1 | 0) > ($2_1 | 0) ? $2_1 << 2 : ($1_1 << 2) - 4 | 0) | 0, 0);
         $448($36_1, $2_1, $47_1, $51_1, $11_1 + 104 | 0, $11_1 + 100 | 0, $11_1 + 96 | 0, $11_1 + 92 | 0);
         $26_1 = $1941($40_1, 8);
         $19 = $1941($40_1, 10);
         $1_1 = $1941($52_1, 0);
         $3 = $1941($53_1, 0);
         $24 = $451($36_1, $2_1, $11_1 + 108 | 0);
         $448($36_1, $2_1, $47_1, $51_1, $11_1 + 68 | 0, $11_1 + 56 | 0, 0, 0);
         $48_1 = $1_1 - $42_1 | 0;
         $33_1 = $48_1 + 1 | 0;
         label$241 : {
          if (!$33_1) {
           break label$241
          }
          $63_1 = $3 - $41_1 | 0;
          $44_1 = $63_1 + 1 | 0;
          if (!$44_1) {
           break label$241
          }
          $38_1 = $1944($11_1, 56);
          $64_1 = $1944($11_1, 68);
          $34_1 = $1944($11_1, 108);
          $1973($11_1, 112, 0);
          $1_1 = 0;
          $4_1 = 0;
          $39_1 = ($24 | 0) <= 0;
          if (!$39_1) {
           while (1) {
            $1_1 = (($1937($34_1 + Math_imul($4_1, 14) | 0, 12) | 0) == 1) + $1_1 | 0;
            $2_1 = $4_1 + 1 | 0;
            $4_1 = $2_1;
            if (($2_1 | 0) != ($24 | 0)) {
             continue
            }
            break;
           }
          }
          $17_1 = $1_1;
          label$244 : {
           if (!$1_1) {
            $4_1 = 0;
            $3 = 0;
            break label$244;
           }
           $4_1 = 0;
           $1_1 = 0;
           $3 = 0;
           $5_1 = $16($17_1 << 2);
           if (!$5_1) {
            $4_1 = $5_1;
            $17_1 = 0;
            break label$244;
           }
           label$247 : {
            while (1) {
             $2_1 = $1_1;
             $1_1 = $3;
             $10_1 = $4_1;
             label$249 : {
              label$250 : {
               if (($4_1 | 0) != 1) {
                break label$250
               }
               $1_1 = $16($1944($11_1, 112) << 3);
               if ($1_1) {
                break label$250
               }
               $4_1 = $2_1;
               $3 = 0;
               $2_1 = 0;
               break label$249;
              }
              $7_1 = $1_1;
              $1973($11_1, 112, 0);
              label$251 : {
               if ($39_1) {
                $9 = -1;
                $3 = $2_1;
                break label$251;
               }
               $18_1 = Math_fround(0.0);
               $6_1 = Math_fround(0.0);
               $1_1 = $2_1;
               $4_1 = -1;
               $2_1 = 0;
               while (1) {
                $3 = $1_1;
                label$254 : {
                 label$257 : {
                  label$258 : {
                   label$259 : {
                    label$260 : {
                     $1_1 = $34_1 + Math_imul($2_1, 14) | 0;
                     switch ($1937($1_1, 12) - 1 | 0) {
                     case 3:
                      break label$257;
                     case 2:
                      break label$258;
                     case 1:
                      break label$259;
                     case 0:
                      break label$260;
                     default:
                      break label$254;
                     };
                    }
                    if (($4_1 | 0) >= 0) {
                     $1973($5_1 + ($4_1 << 2) | 0, 0, $1944($11_1, 112) - $3 | 0)
                    }
                    $9 = $1939($1_1, 2);
                    $1_1 = $1939($1_1, 0);
                    $3 = $1944($11_1, 112);
                    $1973($11_1, 112, $3 + 1 | 0);
                    $4_1 = $4_1 + 1 | 0;
                    $18_1 = Math_fround($9 | 0);
                    $6_1 = Math_fround($1_1 | 0);
                    if (!$7_1) {
                     break label$254
                    }
                    $1_1 = $7_1 + ($3 << 3) | 0;
                    $1986($1_1, 4, $18_1);
                    $1986($1_1, 0, $6_1);
                    break label$254;
                   }
                   $9 = $1939($1_1, 2);
                   $1_1 = $1939($1_1, 0);
                   $32_1 = $1944($11_1, 112);
                   $1973($11_1, 112, $32_1 + 1 | 0);
                   $18_1 = Math_fround($9 | 0);
                   $6_1 = Math_fround($1_1 | 0);
                   if (!$7_1) {
                    break label$254
                   }
                   $1_1 = $7_1 + ($32_1 << 3) | 0;
                   $1986($1_1, 4, $18_1);
                   $1986($1_1, 0, $6_1);
                   break label$254;
                  }
                  $452($7_1, $11_1 + 112 | 0, $6_1, $18_1, Math_fround($1939($1_1, 4) | 0), Math_fround($1939($1_1, 6) | 0), Math_fround($1939($1_1, 0) | 0), Math_fround($1939($1_1, 2) | 0), $71_1, 0);
                  $6_1 = Math_fround($1939($1_1, 0) | 0);
                  $18_1 = Math_fround($1939($1_1, 2) | 0);
                  break label$254;
                 }
                 $453($7_1, $11_1 + 112 | 0, $6_1, $18_1, Math_fround($1939($1_1, 4) | 0), Math_fround($1939($1_1, 6) | 0), Math_fround($1939($1_1, 8) | 0), Math_fround($1939($1_1, 10) | 0), Math_fround($1939($1_1, 0) | 0), Math_fround($1939($1_1, 2) | 0), $71_1, 0);
                 $6_1 = Math_fround($1939($1_1, 0) | 0);
                 $18_1 = Math_fround($1939($1_1, 2) | 0);
                }
                $1_1 = $3;
                $9 = $4_1;
                $2_1 = $2_1 + 1 | 0;
                if (($24 | 0) != ($2_1 | 0)) {
                 continue
                }
                break;
               };
              }
              $1973($5_1 + ($9 << 2) | 0, 0, $1944($11_1, 112) - $3 | 0);
              $4_1 = $3;
              $3 = 1;
              $2_1 = $7_1;
             }
             if (!$3) {
              break label$247
             }
             $1_1 = $4_1;
             $4_1 = $10_1 + 1 | 0;
             $3 = $2_1;
             if (!$10_1) {
              continue
             }
             break;
            };
            $4_1 = $5_1;
            break label$244;
           }
           $17($2_1);
           $17($5_1);
           $4_1 = 0;
           $3 = 0;
           $17_1 = 0;
          }
          $5_1 = $17_1;
          if (!$3) {
           break label$241
          }
          $34_1 = $4_1;
          $39_1 = $3;
          $1_1 = 0;
          $4_1 = 0;
          $2_1 = ($5_1 | 0) <= 0;
          if ($2_1) {
           $3 = 20
          } else {
           while (1) {
            $1_1 = $1944($34_1 + ($4_1 << 2) | 0, 0) + $1_1 | 0;
            $3 = $4_1 + 1 | 0;
            $4_1 = $3;
            if (($3 | 0) != ($5_1 | 0)) {
             continue
            }
            break;
           };
           $3 = Math_imul($1_1, 20) + 20 | 0;
          }
          $10_1 = $16($3);
          if ($10_1) {
           $1_1 = 0;
           $4_1 = 0;
           $3 = 0;
           if (!$2_1) {
            while (1) {
             $7_1 = $3;
             $46_1 = $34_1 + ($4_1 << 2) | 0;
             $24 = $1944($46_1, 0);
             label$268 : {
              if (($24 | 0) <= 0) {
               $2_1 = $1_1;
               break label$268;
              }
              $17_1 = ($7_1 << 3) + $39_1 | 0;
              $3 = $1_1;
              $9 = 0;
              $1_1 = $24 - 1 | 0;
              while (1) {
               $2_1 = $1_1;
               $6_1 = $1963($17_1 + ($2_1 << 3) | 0, 4);
               $1_1 = $9;
               $8 = $1963($17_1 + ($1_1 << 3) | 0, 4);
               if ($6_1 != $8) {
                $9 = $10_1 + Math_imul($3, 20) | 0;
                $32_1 = $6_1 > $8;
                $1973($9, 16, $32_1);
                $49 = $17_1 + (($32_1 ? $2_1 : $1_1) << 3) | 0;
                $1986($9, 0, Math_fround(Math_fround($1963($49, 0) * $47_1) + Math_fround(0.0)));
                $1986($9, 4, Math_fround(Math_fround($1963($49, 4) * $72_1) + Math_fround(0.0)));
                $2_1 = $17_1 + (($32_1 ? $1_1 : $2_1) << 3) | 0;
                $1986($9, 8, Math_fround(Math_fround($1963($2_1, 0) * $47_1) + Math_fround(0.0)));
                $1986($9, 12, Math_fround(Math_fround($1963($2_1, 4) * $72_1) + Math_fround(0.0)));
                $3 = $3 + 1 | 0;
               }
               $2_1 = $3;
               $9 = $1_1 + 1 | 0;
               if (($1944($46_1, 0) | 0) > ($9 | 0)) {
                continue
               }
               break;
              };
             }
             $1_1 = $2_1;
             $3 = $7_1 + $24 | 0;
             $4_1 = $4_1 + 1 | 0;
             if (($5_1 | 0) != ($4_1 | 0)) {
              continue
             }
             break;
            }
           }
           $2_1 = $1_1;
           $454($10_1, $2_1);
           $1_1 = 1;
           if (($2_1 | 0) >= 2) {
            while (1) {
             $3 = $10_1 + Math_imul($1_1, 20) | 0;
             $6_1 = $1963($3, 4);
             $8 = $1963($3, 0);
             $9 = $11_1 + 120 | 0;
             $1973($9, 0, $1944($3 + 16 | 0, 0));
             $1983($11_1, 112, $1959($3, 8), i64toi32_i32$HIGH_BITS);
             $3 = $1_1;
             while (1) {
              label$275 : {
               if (($1_1 | 0) <= 0) {
                $4_1 = $1_1;
                break label$275;
               }
               $5_1 = $1_1 - 1 | 0;
               $4_1 = $10_1 + Math_imul($5_1, 20) | 0;
               $7_1 = $1963($4_1, 4) > $6_1;
               if ($7_1) {
                $1_1 = $10_1 + Math_imul($1_1, 20) | 0;
                $1982($1_1, 0, $1959($4_1, 0), i64toi32_i32$HIGH_BITS);
                $1973($1_1 + 16 | 0, 0, $1944($4_1 + 16 | 0, 0));
                $1982($1_1 + 8 | 0, 0, $1959($4_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
                $1_1 = $5_1;
               }
               $4_1 = $1_1;
               if ($7_1) {
                continue
               }
              }
              break;
             };
             if (($3 | 0) != ($4_1 | 0)) {
              $1_1 = $10_1 + Math_imul($4_1, 20) | 0;
              $1986($1_1, 4, $6_1);
              $1986($1_1, 0, $8);
              $1982($1_1, 8, $1960($11_1, 112), i64toi32_i32$HIGH_BITS);
              $1973($1_1 + 16 | 0, 0, $1944($9, 0));
             }
             $1_1 = $3 + 1 | 0;
             if (($2_1 | 0) != ($1_1 | 0)) {
              continue
             }
             break;
            }
           }
           $1973($11_1, 80, 0);
           $24 = $11_1 + 112 | 0;
           if (($48_1 | 0) >= 64) {
            $24 = $16($33_1 << 3 | 4)
           }
           $1986($10_1 + Math_imul($2_1, 20) | 0, 4, Math_fround(Math_fround($38_1 + $44_1 | 0) + Math_fround(1.0)));
           $5_1 = 0;
           if ($63_1 >>> 0 <= 2147483646) {
            $82_1 = ($26_1 + $62_1 | 0) + Math_imul($19, $27_1) | 0;
            $49 = $33_1 << 2;
            $44_1 = $49 + $24 | 0;
            $46_1 = $44_1 + 4 | 0;
            $83 = $49 + 4 | 0;
            $65_1 = Math_fround($33_1 | 0);
            $84 = Math_fround($64_1 | 0);
            $1_1 = $10_1;
            $4_1 = $38_1;
            $3 = 0;
            $9 = 0;
            $7_1 = 0;
            $2_1 = 0;
            while (1) {
             $5_1 = $2_1;
             $33_1 = $3;
             $2_1 = $1_1;
             $26_1 = $1604($24, 0, $49);
             $64_1 = $1604($44_1, 0, $83);
             $32_1 = $4_1;
             $23_1 = Math_fround($4_1 | 0);
             $21_1 = Math_fround($23_1 + Math_fround(1.0));
             $1_1 = $7_1;
             $3 = $11_1 + 80 | 0;
             $4_1 = $1944($11_1, 80);
             if ($4_1) {
              while (1) {
               label$286 : {
                if (!($1963($4_1, 24) <= $23_1)) {
                 $3 = $4_1;
                 break label$286;
                }
                $1973($3, 0, $1944($4_1, 0));
                $1973($4_1, 0, $1_1);
                $1973($4_1, 16, 0);
                $1_1 = $4_1;
               }
               $4_1 = $1944($3, 0);
               if ($4_1) {
                continue
               }
               break;
              }
             }
             $3 = $9;
             $4_1 = $1_1;
             $18_1 = $1963($2_1, 4);
             label$288 : {
              if (!($21_1 >= $18_1)) {
               $7_1 = $2_1;
               break label$288;
              }
              $17_1 = !$33_1 & ($38_1 | 0) != 0;
              $9 = $2_1 + 4 | 0;
              $1_1 = $2_1;
              while (1) {
               if ($1963($1_1, 12) != $18_1) {
                label$293 : {
                 if ($4_1) {
                  $7_1 = $1944($4_1, 0);
                  break label$293;
                 }
                 if (!$3) {
                  $2_1 = $16(56004);
                  if (!$2_1) {
                   $7_1 = $4_1;
                   $4_1 = 0;
                   break label$293;
                  }
                  $1973($2_1, 0, $5_1);
                  $5_1 = $2_1;
                  $3 = 2e3;
                 }
                 $7_1 = $4_1;
                 $3 = $3 - 1 | 0;
                 $4_1 = (Math_imul($3, 28) + $5_1 | 0) + 4 | 0;
                }
                if ($4_1) {
                 $6_1 = $1963($1_1, 8);
                 $12_1 = $1963($1_1, 0);
                 $8 = $1963($1_1, 12);
                 $13 = $1963($9, 0);
                 $6_1 = Math_fround(Math_fround($6_1 - $12_1) / Math_fround($8 - $13));
                 $1986($4_1, 8, $6_1);
                 $1986($4_1, 12, $6_1 != Math_fround(0.0) ? Math_fround(Math_fround(1.0) / $6_1) : Math_fround(0.0));
                 $1986($4_1, 4, Math_fround(Math_fround($12_1 + Math_fround($6_1 * Math_fround($23_1 - $13))) - $84));
                 $2_1 = $1944($1_1, 16);
                 $1986($4_1, 24, $8);
                 $1986($4_1, 20, $13);
                 $1973($4_1, 0, 0);
                 $1986($4_1, 16, $2_1 ? Math_fround(1.0) : Math_fround(-1.0));
                 if ($8 < $23_1 & $17_1) {
                  $1986($4_1, 24, $23_1)
                 }
                 $1973($4_1, 0, $1944($11_1, 80));
                 $1973($11_1, 80, $4_1);
                }
                $4_1 = $7_1;
               }
               $9 = $1_1 + 24 | 0;
               $6_1 = $1963($9, 0);
               $18_1 = $6_1;
               $1_1 = $1_1 + 20 | 0;
               $7_1 = $1_1;
               if ($6_1 <= $21_1) {
                continue
               }
               break;
              };
             }
             $9 = $7_1;
             $17_1 = $3;
             $7_1 = $4_1;
             $2_1 = $5_1;
             $5_1 = $1944($11_1, 80);
             if ($5_1) {
              $57_1 = Math_fround($21_1 - $23_1);
              $1_1 = $5_1;
              while (1) {
               $4_1 = $1_1;
               $18_1 = $1963($1_1, 4);
               $50_1 = $1963($1_1, 8);
               label$302 : {
                if ($50_1 == Math_fround(0.0)) {
                 if (!($18_1 < $65_1)) {
                  break label$302
                 }
                 if ($18_1 >= Math_fround(0.0)) {
                  $1_1 = Math_fround(Math_abs($18_1)) < Math_fround(2147483648.0) ? ~~$18_1 : -2147483648;
                  $3 = $21_1 == $23_1;
                  label$307 : {
                   if ($3) {
                    break label$307
                   }
                   $13 = $1963($4_1, 24);
                   if ($13 < $23_1) {
                    break label$307
                   }
                   $6_1 = $1963($4_1, 20);
                   if ($6_1 > $21_1) {
                    break label$307
                   }
                   $12_1 = $18_1;
                   if ($6_1 > $23_1) {
                    $12_1 = Math_fround($18_1 + Math_fround(Math_fround(Math_fround($18_1 - $18_1) * Math_fround($6_1 - $23_1)) / $57_1))
                   } else {
                    $6_1 = $23_1
                   }
                   $14 = $6_1;
                   $6_1 = $12_1;
                   $12_1 = $18_1;
                   $8 = $21_1;
                   if ($8 > $13) {
                    $12_1 = Math_fround($18_1 + Math_fround(Math_fround(Math_fround($13 - $21_1) * Math_fround($18_1 - $6_1)) / Math_fround($21_1 - $14)));
                    $8 = $13;
                   }
                   $13 = Math_fround($1_1 | 0);
                   if (!(!($13 >= $6_1) | !($12_1 <= $13))) {
                    $19 = $26_1 + ($1_1 << 2) | 0;
                    $1986($19, 0, Math_fround(Math_fround($1963($4_1, 16) * Math_fround($8 - $14)) + $1963($19, 0)));
                    break label$307;
                   }
                   $16_1 = Math_fround($1_1 + 1 | 0);
                   if ($6_1 >= $16_1 & $12_1 >= $16_1) {
                    break label$307
                   }
                   $19 = $26_1 + ($1_1 << 2) | 0;
                   $1986($19, 0, Math_fround(Math_fround(Math_fround(Math_fround($8 - $14) * $1963($4_1, 16)) * Math_fround(Math_fround(Math_fround(Math_fround($6_1 - $13) + Math_fround($12_1 - $13)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($19, 0)));
                  }
                  if ($3) {
                   break label$302
                  }
                  $13 = $1963($4_1, 24);
                  if ($23_1 > $13) {
                   break label$302
                  }
                  $6_1 = $1963($4_1, 20);
                  if ($6_1 > $21_1) {
                   break label$302
                  }
                  $12_1 = $18_1;
                  $8 = $23_1;
                  if ($8 < $6_1) {
                   $12_1 = Math_fround($18_1 + Math_fround(Math_fround(Math_fround($18_1 - $18_1) * Math_fround($6_1 - $23_1)) / $57_1));
                   $8 = $6_1;
                  }
                  $3 = $1_1 + 1 | 0;
                  label$313 : {
                   if (!($13 < $21_1)) {
                    $13 = $21_1;
                    break label$313;
                   }
                   $18_1 = Math_fround($18_1 + Math_fround(Math_fround(Math_fround($13 - $21_1) * Math_fround($18_1 - $12_1)) / Math_fround($21_1 - $8)));
                  }
                  $6_1 = Math_fround($3 | 0);
                  if (!(!($6_1 >= $12_1) | !($6_1 >= $18_1))) {
                   $1_1 = $46_1 + ($1_1 << 2) | 0;
                   $1986($1_1, 0, Math_fround(Math_fround($1963($4_1, 16) * Math_fround($13 - $8)) + $1963($1_1, 0)));
                   break label$302;
                  }
                  $14 = Math_fround($1_1 + 2 | 0);
                  if ($12_1 >= $14 & $14 <= $18_1) {
                   break label$302
                  }
                  $1_1 = $46_1 + ($1_1 << 2) | 0;
                  $1986($1_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($13 - $8) * $1963($4_1, 16)) * Math_fround(Math_fround(Math_fround(Math_fround($12_1 - $6_1) + Math_fround($18_1 - $6_1)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($1_1, 0)));
                  break label$302;
                 }
                 if ($21_1 == $23_1) {
                  break label$302
                 }
                 $13 = $1963($4_1, 24);
                 if ($23_1 > $13) {
                  break label$302
                 }
                 $6_1 = $1963($4_1, 20);
                 if ($6_1 > $21_1) {
                  break label$302
                 }
                 $12_1 = $18_1;
                 $8 = $23_1;
                 if ($8 < $6_1) {
                  $12_1 = Math_fround($18_1 + Math_fround(Math_fround(Math_fround($18_1 - $18_1) * Math_fround($6_1 - $23_1)) / $57_1));
                  $8 = $6_1;
                 }
                 label$318 : {
                  if (!($13 < $21_1)) {
                   $13 = $21_1;
                   break label$318;
                  }
                  $18_1 = Math_fround($18_1 + Math_fround(Math_fround(Math_fround($13 - $21_1) * Math_fround($18_1 - $12_1)) / Math_fround($21_1 - $8)));
                 }
                 if (!(!($12_1 <= Math_fround(0.0)) | !($18_1 <= Math_fround(0.0)))) {
                  $1986($44_1, 0, Math_fround(Math_fround($1963($4_1, 16) * Math_fround($13 - $8)) + $1963($44_1, 0)));
                  break label$302;
                 }
                 if ($12_1 >= Math_fround(1.0) & $18_1 >= Math_fround(1.0)) {
                  break label$302
                 }
                 $1986($44_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($13 - $8) * $1963($4_1, 16)) * Math_fround(Math_fround(Math_fround($12_1 + $18_1) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($44_1, 0)));
                 break label$302;
                }
                $29_1 = Math_fround($50_1 + $18_1);
                $6_1 = $1963($4_1, 20);
                $1_1 = $6_1 > $23_1;
                label$322 : {
                 $14 = $1_1 ? Math_fround(Math_fround($50_1 * Math_fround($6_1 - $23_1)) + $18_1) : $18_1;
                 if (!($14 >= Math_fround(0.0))) {
                  break label$322
                 }
                 $8 = $1963($4_1, 24);
                 $3 = $8 < $21_1;
                 $12_1 = $3 ? Math_fround(Math_fround($50_1 * Math_fround($8 - $23_1)) + $18_1) : $29_1;
                 if (!($12_1 >= Math_fround(0.0)) | !($14 < $65_1) | !($12_1 < $65_1)) {
                  break label$322
                 }
                 $16_1 = $1963($4_1, 12);
                 $8 = $3 ? $8 : $21_1;
                 $13 = $1_1 ? $6_1 : $23_1;
                 $1_1 = Math_fround(Math_abs($14)) < Math_fround(2147483648.0) ? ~~$14 : -2147483648;
                 if (($1_1 | 0) == ((Math_fround(Math_abs($12_1)) < Math_fround(2147483648.0) ? ~~$12_1 : -2147483648) | 0)) {
                  $3 = $1_1 << 2;
                  $19 = $3 + $26_1 | 0;
                  $6_1 = Math_fround($1_1 | 0);
                  $12_1 = Math_fround(Math_fround(Math_fround(Math_fround(Math_fround($14 - $6_1) + Math_fround($12_1 - $6_1)) * Math_fround(-.5)) + Math_fround(1.0)) * $1963($4_1, 16));
                  $6_1 = Math_fround($8 - $13);
                  $1986($19, 0, Math_fround(Math_fround($12_1 * $6_1) + $1963($19, 0)));
                  $1_1 = $3 + $46_1 | 0;
                  $1986($1_1, 0, Math_fround(Math_fround($1963($4_1, 16) * $6_1) + $1963($1_1, 0)));
                  break label$302;
                 }
                 label$328 : {
                  if (!($12_1 < $14)) {
                   $6_1 = $8;
                   $8 = $12_1;
                   break label$328;
                  }
                  $16_1 = Math_fround(-$16_1);
                  $6_1 = Math_fround($21_1 - Math_fround($13 - $23_1));
                  $13 = Math_fround($21_1 - Math_fround($8 - $23_1));
                  $8 = $14;
                  $14 = $12_1;
                  $18_1 = $29_1;
                 }
                 $1_1 = Math_fround(Math_abs($14)) < Math_fround(2147483648.0) ? ~~$14 : -2147483648;
                 $19 = $26_1 + ($1_1 << 2) | 0;
                 $20_1 = $1963($4_1, 16);
                 $3 = $1_1 + 1 | 0;
                 $29_1 = Math_fround(Math_fround(Math_fround(Math_fround($3 | 0) - $18_1) * $16_1) + $23_1);
                 $12_1 = $13;
                 $13 = Math_fround($20_1 * Math_fround($29_1 - $12_1));
                 $1986($19, 0, Math_fround(Math_fround($13 * Math_fround(Math_fround(Math_fround(Math_fround($14 - Math_fround($1_1 | 0)) + Math_fround(1.0)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($19, 0)));
                 $1_1 = Math_fround(Math_abs($8)) < Math_fround(2147483648.0) ? ~~$8 : -2147483648;
                 $19 = $1_1;
                 if (($1_1 | 0) > ($3 | 0)) {
                  $14 = Math_fround($16_1 * $20_1);
                  $30 = Math_fround($14 * Math_fround(.5));
                  $18_1 = $13;
                  $1_1 = $3;
                  while (1) {
                   $15_1 = $26_1 + ($1_1 << 2) | 0;
                   $1986($15_1, 0, Math_fround(Math_fround($30 + $18_1) + $1963($15_1, 0)));
                   $13 = Math_fround($14 + $18_1);
                   $18_1 = $13;
                   $1_1 = $1_1 + 1 | 0;
                   if (($1_1 | 0) != ($19 | 0)) {
                    continue
                   }
                   break;
                  };
                 }
                 $1_1 = $19 << 2;
                 $15_1 = $1_1 + $26_1 | 0;
                 $1986($15_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($20_1 * Math_fround(Math_fround(Math_fround(Math_fround($8 - Math_fround($19 | 0)) + Math_fround(0.0)) * Math_fround(-.5)) + Math_fround(1.0))) * Math_fround($6_1 - Math_fround(Math_fround($16_1 * Math_fround($19 - $3 | 0)) + $29_1))) + $13) + $1963($15_1, 0)));
                 $1_1 = $1_1 + $46_1 | 0;
                 $1986($1_1, 0, Math_fround(Math_fround($20_1 * Math_fround($6_1 - $12_1)) + $1963($1_1, 0)));
                 break label$302;
                }
                if ($48_1 >>> 0 > 2147483646) {
                 break label$302
                }
                $19 = $4_1 + 16 | 0;
                $85_1 = Math_fround($29_1 - $18_1);
                $3 = 0;
                while (1) {
                 $1_1 = $3;
                 $16_1 = Math_fround($1_1 | 0);
                 $58_1 = Math_fround($16_1 - $18_1);
                 $14 = Math_fround(Math_fround($58_1 / $50_1) + $23_1);
                 $3 = $1_1 + 1 | 0;
                 $20_1 = Math_fround($3 | 0);
                 $59_1 = Math_fround($20_1 - $18_1);
                 $12_1 = Math_fround(Math_fround($59_1 / $50_1) + $23_1);
                 $15_1 = $16_1 > $18_1;
                 label$338 : {
                  if (!(!$15_1 | !($20_1 < $29_1))) {
                   label$340 : {
                    if ($14 == $23_1) {
                     break label$340
                    }
                    $43_1 = $1963($4_1, 24);
                    if ($43_1 < $23_1) {
                     break label$340
                    }
                    $8 = $1963($4_1, 20);
                    if ($8 > $14) {
                     break label$340
                    }
                    $13 = $18_1;
                    $6_1 = $23_1;
                    if ($6_1 < $8) {
                     $13 = Math_fround($18_1 + Math_fround(Math_fround($58_1 * Math_fround($8 - $23_1)) / Math_fround($14 - $23_1)));
                     $6_1 = $8;
                    }
                    $30 = $13;
                    $13 = $14;
                    $8 = $16_1;
                    $15_1 = !($30 <= $8);
                    $16_1 = $8;
                    if ($14 > $43_1) {
                     $13 = $43_1;
                     $8 = Math_fround(Math_fround(Math_fround(Math_fround($13 - $14) * Math_fround($16_1 - $30)) / Math_fround($14 - $6_1)) + $16_1);
                    }
                    if (!($15_1 | !($16_1 >= $8))) {
                     $15_1 = $26_1 + ($1_1 << 2) | 0;
                     $1986($15_1, 0, Math_fround(Math_fround($1963($19, 0) * Math_fround($13 - $6_1)) + $1963($15_1, 0)));
                     break label$340;
                    }
                    if ($20_1 <= $30 & $8 >= $20_1) {
                     break label$340
                    }
                    $15_1 = $26_1 + ($1_1 << 2) | 0;
                    $1986($15_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($13 - $6_1) * $1963($19, 0)) * Math_fround(Math_fround(Math_fround(Math_fround($30 - $16_1) + Math_fround($8 - $16_1)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($15_1, 0)));
                   }
                   label$345 : {
                    if ($12_1 == $14) {
                     break label$345
                    }
                    $30 = $1963($4_1, 24);
                    if ($30 < $14) {
                     break label$345
                    }
                    $6_1 = $1963($4_1, 20);
                    if ($6_1 > $12_1) {
                     break label$345
                    }
                    label$346 : {
                     if (!($6_1 > $14)) {
                      $8 = $16_1;
                      break label$346;
                     }
                     $8 = Math_fround(Math_fround(Math_fround(Math_fround($20_1 - $16_1) * Math_fround($6_1 - $14)) / Math_fround($12_1 - $14)) + $16_1);
                     $14 = $6_1;
                    }
                    $6_1 = $20_1;
                    $13 = $8;
                    $15_1 = !($8 <= $16_1);
                    $8 = $12_1;
                    if ($8 > $30) {
                     $8 = $30;
                     $6_1 = Math_fround(Math_fround(Math_fround(Math_fround($8 - $12_1) * Math_fround($20_1 - $13)) / Math_fround($12_1 - $14)) + $20_1);
                    }
                    if (!($15_1 | !($6_1 <= $16_1))) {
                     $15_1 = $26_1 + ($1_1 << 2) | 0;
                     $1986($15_1, 0, Math_fround(Math_fround($1963($19, 0) * Math_fround($8 - $14)) + $1963($15_1, 0)));
                     break label$345;
                    }
                    if ($13 >= $20_1 & $6_1 >= $20_1) {
                     break label$345
                    }
                    $15_1 = $26_1 + ($1_1 << 2) | 0;
                    $1986($15_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($8 - $14) * $1963($19, 0)) * Math_fround(Math_fround(Math_fround(Math_fround($13 - $16_1) + Math_fround($6_1 - $16_1)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($15_1, 0)));
                   }
                   if ($12_1 == $21_1) {
                    break label$338
                   }
                   $14 = $1963($4_1, 24);
                   if ($14 < $12_1) {
                    break label$338
                   }
                   $8 = $1963($4_1, 20);
                   if ($8 > $21_1) {
                    break label$338
                   }
                   label$351 : {
                    if (!($8 > $12_1)) {
                     $6_1 = $20_1;
                     break label$351;
                    }
                    $6_1 = Math_fround(Math_fround(Math_fround(Math_fround($29_1 - $20_1) * Math_fround($8 - $12_1)) / Math_fround($21_1 - $12_1)) + $20_1);
                    $12_1 = $8;
                   }
                   $13 = $6_1;
                   $8 = $29_1;
                   $6_1 = $21_1;
                   if ($6_1 > $14) {
                    $8 = Math_fround($29_1 + Math_fround(Math_fround(Math_fround($14 - $21_1) * Math_fround($29_1 - $13)) / Math_fround($21_1 - $12_1)));
                    $6_1 = $14;
                   }
                   if (!(!($13 <= $16_1) | !($8 <= $16_1))) {
                    $15_1 = $26_1 + ($1_1 << 2) | 0;
                    $1986($15_1, 0, Math_fround(Math_fround($1963($19, 0) * Math_fround($6_1 - $12_1)) + $1963($15_1, 0)));
                    break label$338;
                   }
                   if ($13 >= $20_1 & $8 >= $20_1) {
                    break label$338
                   }
                   $15_1 = $26_1 + ($1_1 << 2) | 0;
                   $1986($15_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($6_1 - $12_1) * $1963($19, 0)) * Math_fround(Math_fround(Math_fround(Math_fround($13 - $16_1) + Math_fround($8 - $16_1)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($15_1, 0)));
                   break label$338;
                  }
                  $74 = $16_1 > $29_1;
                  if (!(!$74 | !($18_1 > $20_1))) {
                   label$357 : {
                    if ($12_1 == $23_1) {
                     break label$357
                    }
                    $43_1 = $1963($4_1, 24);
                    if ($43_1 < $23_1) {
                     break label$357
                    }
                    $8 = $1963($4_1, 20);
                    if ($8 > $12_1) {
                     break label$357
                    }
                    $13 = $18_1;
                    $6_1 = $23_1;
                    if ($6_1 < $8) {
                     $13 = Math_fround($18_1 + Math_fround(Math_fround($59_1 * Math_fround($8 - $23_1)) / Math_fround($12_1 - $23_1)));
                     $6_1 = $8;
                    }
                    $30 = $13;
                    $8 = $20_1;
                    $13 = $12_1;
                    if ($12_1 > $43_1) {
                     $13 = $43_1;
                     $8 = Math_fround(Math_fround(Math_fround(Math_fround($13 - $12_1) * Math_fround($20_1 - $30)) / Math_fround($12_1 - $6_1)) + $20_1);
                    }
                    if (!(!($16_1 >= $30) | !($8 <= $16_1))) {
                     $15_1 = $26_1 + ($1_1 << 2) | 0;
                     $1986($15_1, 0, Math_fround(Math_fround($1963($19, 0) * Math_fround($13 - $6_1)) + $1963($15_1, 0)));
                     break label$357;
                    }
                    if ($20_1 <= $30 & $8 >= $20_1) {
                     break label$357
                    }
                    $15_1 = $26_1 + ($1_1 << 2) | 0;
                    $1986($15_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($13 - $6_1) * $1963($19, 0)) * Math_fround(Math_fround(Math_fround(Math_fround($30 - $16_1) + Math_fround($8 - $16_1)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($15_1, 0)));
                   }
                   label$362 : {
                    if ($12_1 == $14) {
                     break label$362
                    }
                    $30 = $1963($4_1, 24);
                    if ($30 < $12_1) {
                     break label$362
                    }
                    $6_1 = $1963($4_1, 20);
                    if ($6_1 > $14) {
                     break label$362
                    }
                    label$363 : {
                     if (!($6_1 > $12_1)) {
                      $8 = $20_1;
                      break label$363;
                     }
                     $8 = Math_fround(Math_fround(Math_fround(Math_fround($16_1 - $20_1) * Math_fround($6_1 - $12_1)) / Math_fround($14 - $12_1)) + $20_1);
                     $12_1 = $6_1;
                    }
                    $6_1 = $16_1;
                    $13 = $8;
                    $15_1 = !($6_1 >= $8);
                    $16_1 = $6_1;
                    $8 = $14;
                    if ($8 > $30) {
                     $8 = $30;
                     $6_1 = Math_fround(Math_fround(Math_fround(Math_fround($8 - $14) * Math_fround($16_1 - $13)) / Math_fround($14 - $12_1)) + $16_1);
                    }
                    if (!($15_1 | !($16_1 >= $6_1))) {
                     $15_1 = $26_1 + ($1_1 << 2) | 0;
                     $1986($15_1, 0, Math_fround(Math_fround($1963($19, 0) * Math_fround($8 - $12_1)) + $1963($15_1, 0)));
                     break label$362;
                    }
                    if ($13 >= $20_1 & $6_1 >= $20_1) {
                     break label$362
                    }
                    $15_1 = $26_1 + ($1_1 << 2) | 0;
                    $1986($15_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($8 - $12_1) * $1963($19, 0)) * Math_fround(Math_fround(Math_fround(Math_fround($13 - $16_1) + Math_fround($6_1 - $16_1)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($15_1, 0)));
                   }
                   if ($14 == $21_1) {
                    break label$338
                   }
                   $12_1 = $1963($4_1, 24);
                   if ($12_1 < $14) {
                    break label$338
                   }
                   $8 = $1963($4_1, 20);
                   if ($8 > $21_1) {
                    break label$338
                   }
                   label$368 : {
                    if (!($8 > $14)) {
                     $6_1 = $16_1;
                     break label$368;
                    }
                    $6_1 = Math_fround(Math_fround(Math_fround(Math_fround($29_1 - $16_1) * Math_fround($8 - $14)) / Math_fround($21_1 - $14)) + $16_1);
                    $14 = $8;
                   }
                   $13 = $6_1;
                   $8 = $29_1;
                   $6_1 = $21_1;
                   if ($6_1 > $12_1) {
                    $8 = Math_fround($29_1 + Math_fround(Math_fround(Math_fround($12_1 - $21_1) * Math_fround($29_1 - $13)) / Math_fround($21_1 - $14)));
                    $6_1 = $12_1;
                   }
                   if (!(!($13 <= $16_1) | !($8 <= $16_1))) {
                    $15_1 = $26_1 + ($1_1 << 2) | 0;
                    $1986($15_1, 0, Math_fround(Math_fround($1963($19, 0) * Math_fround($6_1 - $14)) + $1963($15_1, 0)));
                    break label$338;
                   }
                   if ($13 >= $20_1 & $8 >= $20_1) {
                    break label$338
                   }
                   $15_1 = $26_1 + ($1_1 << 2) | 0;
                   $1986($15_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($6_1 - $14) * $1963($19, 0)) * Math_fround(Math_fround(Math_fround(Math_fround($13 - $16_1) + Math_fround($8 - $16_1)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($15_1, 0)));
                   break label$338;
                  }
                  if (!(!$15_1 | !($16_1 < $29_1))) {
                   label$374 : {
                    if ($14 == $23_1) {
                     break label$374
                    }
                    $30 = $1963($4_1, 24);
                    if ($30 < $23_1) {
                     break label$374
                    }
                    $8 = $1963($4_1, 20);
                    if ($8 > $14) {
                     break label$374
                    }
                    $6_1 = $16_1;
                    $13 = $23_1;
                    if ($13 < $8) {
                     $13 = $8;
                     $12_1 = Math_fround($18_1 + Math_fround(Math_fround($58_1 * Math_fround($8 - $23_1)) / Math_fround($14 - $23_1)));
                    } else {
                     $12_1 = $18_1
                    }
                    $15_1 = !($6_1 >= $12_1);
                    $43_1 = $6_1;
                    $8 = $14;
                    if ($8 > $30) {
                     $8 = $30;
                     $6_1 = Math_fround(Math_fround(Math_fround(Math_fround($8 - $14) * Math_fround($16_1 - $12_1)) / Math_fround($14 - $13)) + $16_1);
                    }
                    if (!($15_1 | !($43_1 >= $6_1))) {
                     $15_1 = $26_1 + ($1_1 << 2) | 0;
                     $1986($15_1, 0, Math_fround(Math_fround($1963($19, 0) * Math_fround($8 - $13)) + $1963($15_1, 0)));
                     break label$374;
                    }
                    if ($12_1 >= $20_1 & $6_1 >= $20_1) {
                     break label$374
                    }
                    $15_1 = $26_1 + ($1_1 << 2) | 0;
                    $1986($15_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($8 - $13) * $1963($19, 0)) * Math_fround(Math_fround(Math_fround(Math_fround($12_1 - $16_1) + Math_fround($6_1 - $16_1)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($15_1, 0)));
                   }
                   if ($14 == $21_1) {
                    break label$338
                   }
                   $12_1 = $1963($4_1, 24);
                   if ($12_1 < $14) {
                    break label$338
                   }
                   $8 = $1963($4_1, 20);
                   if ($8 > $21_1) {
                    break label$338
                   }
                   label$379 : {
                    if (!($8 > $14)) {
                     $6_1 = $16_1;
                     break label$379;
                    }
                    $6_1 = Math_fround(Math_fround(Math_fround(Math_fround($29_1 - $16_1) * Math_fround($8 - $14)) / Math_fround($21_1 - $14)) + $16_1);
                    $14 = $8;
                   }
                   $13 = $6_1;
                   $8 = $29_1;
                   $6_1 = $21_1;
                   if ($6_1 > $12_1) {
                    $8 = Math_fround($29_1 + Math_fround(Math_fround(Math_fround($12_1 - $21_1) * Math_fround($29_1 - $13)) / Math_fround($21_1 - $14)));
                    $6_1 = $12_1;
                   }
                   if (!(!($13 <= $16_1) | !($8 <= $16_1))) {
                    $15_1 = $26_1 + ($1_1 << 2) | 0;
                    $1986($15_1, 0, Math_fround(Math_fround($1963($19, 0) * Math_fround($6_1 - $14)) + $1963($15_1, 0)));
                    break label$338;
                   }
                   if ($13 >= $20_1 & $8 >= $20_1) {
                    break label$338
                   }
                   $15_1 = $26_1 + ($1_1 << 2) | 0;
                   $1986($15_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($6_1 - $14) * $1963($19, 0)) * Math_fround(Math_fround(Math_fround(Math_fround($13 - $16_1) + Math_fround($8 - $16_1)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($15_1, 0)));
                   break label$338;
                  }
                  if (!(!$74 | !($16_1 < $18_1))) {
                   label$385 : {
                    if ($14 == $23_1) {
                     break label$385
                    }
                    $30 = $1963($4_1, 24);
                    if ($30 < $23_1) {
                     break label$385
                    }
                    $8 = $1963($4_1, 20);
                    if ($8 > $14) {
                     break label$385
                    }
                    $6_1 = $16_1;
                    $13 = $23_1;
                    if ($13 < $8) {
                     $13 = $8;
                     $12_1 = Math_fround($18_1 + Math_fround(Math_fround($58_1 * Math_fround($8 - $23_1)) / Math_fround($14 - $23_1)));
                    } else {
                     $12_1 = $18_1
                    }
                    $15_1 = !($6_1 >= $12_1);
                    $43_1 = $6_1;
                    $8 = $14;
                    if ($8 > $30) {
                     $8 = $30;
                     $6_1 = Math_fround(Math_fround(Math_fround(Math_fround($8 - $14) * Math_fround($16_1 - $12_1)) / Math_fround($14 - $13)) + $16_1);
                    }
                    if (!($15_1 | !($43_1 >= $6_1))) {
                     $15_1 = $26_1 + ($1_1 << 2) | 0;
                     $1986($15_1, 0, Math_fround(Math_fround($1963($19, 0) * Math_fround($8 - $13)) + $1963($15_1, 0)));
                     break label$385;
                    }
                    if ($12_1 >= $20_1 & $6_1 >= $20_1) {
                     break label$385
                    }
                    $15_1 = $26_1 + ($1_1 << 2) | 0;
                    $1986($15_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($8 - $13) * $1963($19, 0)) * Math_fround(Math_fround(Math_fround(Math_fround($12_1 - $16_1) + Math_fround($6_1 - $16_1)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($15_1, 0)));
                   }
                   if ($14 == $21_1) {
                    break label$338
                   }
                   $12_1 = $1963($4_1, 24);
                   if ($12_1 < $14) {
                    break label$338
                   }
                   $8 = $1963($4_1, 20);
                   if ($8 > $21_1) {
                    break label$338
                   }
                   label$390 : {
                    if (!($8 > $14)) {
                     $6_1 = $16_1;
                     break label$390;
                    }
                    $6_1 = Math_fround(Math_fround(Math_fround(Math_fround($29_1 - $16_1) * Math_fround($8 - $14)) / Math_fround($21_1 - $14)) + $16_1);
                    $14 = $8;
                   }
                   $13 = $6_1;
                   $8 = $29_1;
                   $6_1 = $21_1;
                   if ($6_1 > $12_1) {
                    $8 = Math_fround($29_1 + Math_fround(Math_fround(Math_fround($12_1 - $21_1) * Math_fround($29_1 - $13)) / Math_fround($21_1 - $14)));
                    $6_1 = $12_1;
                   }
                   if (!(!($13 <= $16_1) | !($8 <= $16_1))) {
                    $15_1 = $26_1 + ($1_1 << 2) | 0;
                    $1986($15_1, 0, Math_fround(Math_fround($1963($19, 0) * Math_fround($6_1 - $14)) + $1963($15_1, 0)));
                    break label$338;
                   }
                   if ($13 >= $20_1 & $8 >= $20_1) {
                    break label$338
                   }
                   $15_1 = $26_1 + ($1_1 << 2) | 0;
                   $1986($15_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($6_1 - $14) * $1963($19, 0)) * Math_fround(Math_fround(Math_fround(Math_fround($13 - $16_1) + Math_fround($8 - $16_1)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($15_1, 0)));
                   break label$338;
                  }
                  if (!(!($18_1 < $20_1) | !($20_1 < $29_1))) {
                   label$396 : {
                    if ($12_1 == $23_1) {
                     break label$396
                    }
                    $30 = $1963($4_1, 24);
                    if ($30 < $23_1) {
                     break label$396
                    }
                    $6_1 = $1963($4_1, 20);
                    if ($6_1 > $12_1) {
                     break label$396
                    }
                    $13 = $23_1;
                    if ($13 < $6_1) {
                     $13 = $6_1;
                     $14 = Math_fround($18_1 + Math_fround(Math_fround($59_1 * Math_fround($6_1 - $23_1)) / Math_fround($12_1 - $23_1)));
                    } else {
                     $14 = $18_1
                    }
                    $6_1 = $20_1;
                    $8 = $12_1;
                    if ($8 > $30) {
                     $8 = $30;
                     $6_1 = Math_fround(Math_fround(Math_fround(Math_fround($8 - $12_1) * Math_fround($20_1 - $14)) / Math_fround($12_1 - $13)) + $20_1);
                    }
                    if (!(!($14 <= $16_1) | !($6_1 <= $16_1))) {
                     $15_1 = $26_1 + ($1_1 << 2) | 0;
                     $1986($15_1, 0, Math_fround(Math_fround($1963($19, 0) * Math_fround($8 - $13)) + $1963($15_1, 0)));
                     break label$396;
                    }
                    if ($14 >= $20_1 & $6_1 >= $20_1) {
                     break label$396
                    }
                    $15_1 = $26_1 + ($1_1 << 2) | 0;
                    $1986($15_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($8 - $13) * $1963($19, 0)) * Math_fround(Math_fround(Math_fround(Math_fround($14 - $16_1) + Math_fround($6_1 - $16_1)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($15_1, 0)));
                   }
                   if ($12_1 == $21_1) {
                    break label$338
                   }
                   $14 = $1963($4_1, 24);
                   if ($14 < $12_1) {
                    break label$338
                   }
                   $8 = $1963($4_1, 20);
                   if ($8 > $21_1) {
                    break label$338
                   }
                   label$401 : {
                    if (!($8 > $12_1)) {
                     $6_1 = $20_1;
                     break label$401;
                    }
                    $6_1 = Math_fround(Math_fround(Math_fround(Math_fround($29_1 - $20_1) * Math_fround($8 - $12_1)) / Math_fround($21_1 - $12_1)) + $20_1);
                    $12_1 = $8;
                   }
                   $13 = $6_1;
                   $8 = $29_1;
                   $6_1 = $21_1;
                   if ($6_1 > $14) {
                    $8 = Math_fround($29_1 + Math_fround(Math_fround(Math_fround($14 - $21_1) * Math_fround($29_1 - $13)) / Math_fround($21_1 - $12_1)));
                    $6_1 = $14;
                   }
                   if (!(!($13 <= $16_1) | !($8 <= $16_1))) {
                    $15_1 = $26_1 + ($1_1 << 2) | 0;
                    $1986($15_1, 0, Math_fround(Math_fround($1963($19, 0) * Math_fround($6_1 - $12_1)) + $1963($15_1, 0)));
                    break label$338;
                   }
                   if ($13 >= $20_1 & $8 >= $20_1) {
                    break label$338
                   }
                   $15_1 = $26_1 + ($1_1 << 2) | 0;
                   $1986($15_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($6_1 - $12_1) * $1963($19, 0)) * Math_fround(Math_fround(Math_fround(Math_fround($13 - $16_1) + Math_fround($8 - $16_1)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($15_1, 0)));
                   break label$338;
                  }
                  if (!(!($20_1 > $29_1) | !($18_1 > $20_1))) {
                   label$407 : {
                    if ($12_1 == $23_1) {
                     break label$407
                    }
                    $30 = $1963($4_1, 24);
                    if ($30 < $23_1) {
                     break label$407
                    }
                    $6_1 = $1963($4_1, 20);
                    if ($6_1 > $12_1) {
                     break label$407
                    }
                    $13 = $23_1;
                    if ($13 < $6_1) {
                     $13 = $6_1;
                     $14 = Math_fround($18_1 + Math_fround(Math_fround($59_1 * Math_fround($6_1 - $23_1)) / Math_fround($12_1 - $23_1)));
                    } else {
                     $14 = $18_1
                    }
                    $6_1 = $20_1;
                    $8 = $12_1;
                    if ($8 > $30) {
                     $8 = $30;
                     $6_1 = Math_fround(Math_fround(Math_fround(Math_fround($8 - $12_1) * Math_fround($20_1 - $14)) / Math_fround($12_1 - $13)) + $20_1);
                    }
                    if (!(!($14 <= $16_1) | !($6_1 <= $16_1))) {
                     $15_1 = $26_1 + ($1_1 << 2) | 0;
                     $1986($15_1, 0, Math_fround(Math_fround($1963($19, 0) * Math_fround($8 - $13)) + $1963($15_1, 0)));
                     break label$407;
                    }
                    if ($14 >= $20_1 & $6_1 >= $20_1) {
                     break label$407
                    }
                    $15_1 = $26_1 + ($1_1 << 2) | 0;
                    $1986($15_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($8 - $13) * $1963($19, 0)) * Math_fround(Math_fround(Math_fround(Math_fround($14 - $16_1) + Math_fround($6_1 - $16_1)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($15_1, 0)));
                   }
                   if ($12_1 == $21_1) {
                    break label$338
                   }
                   $14 = $1963($4_1, 24);
                   if ($14 < $12_1) {
                    break label$338
                   }
                   $8 = $1963($4_1, 20);
                   if ($8 > $21_1) {
                    break label$338
                   }
                   label$412 : {
                    if (!($8 > $12_1)) {
                     $6_1 = $20_1;
                     break label$412;
                    }
                    $6_1 = Math_fround(Math_fround(Math_fround(Math_fround($29_1 - $20_1) * Math_fround($8 - $12_1)) / Math_fround($21_1 - $12_1)) + $20_1);
                    $12_1 = $8;
                   }
                   $13 = $6_1;
                   $8 = $29_1;
                   $6_1 = $21_1;
                   if ($6_1 > $14) {
                    $8 = Math_fround($29_1 + Math_fround(Math_fround(Math_fround($14 - $21_1) * Math_fround($29_1 - $13)) / Math_fround($21_1 - $12_1)));
                    $6_1 = $14;
                   }
                   if (!(!($13 <= $16_1) | !($8 <= $16_1))) {
                    $15_1 = $26_1 + ($1_1 << 2) | 0;
                    $1986($15_1, 0, Math_fround(Math_fround($1963($19, 0) * Math_fround($6_1 - $12_1)) + $1963($15_1, 0)));
                    break label$338;
                   }
                   if ($13 >= $20_1 & $8 >= $20_1) {
                    break label$338
                   }
                   $15_1 = $26_1 + ($1_1 << 2) | 0;
                   $1986($15_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($6_1 - $12_1) * $1963($19, 0)) * Math_fround(Math_fround(Math_fround(Math_fround($13 - $16_1) + Math_fround($8 - $16_1)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($15_1, 0)));
                   break label$338;
                  }
                  if ($21_1 == $23_1) {
                   break label$338
                  }
                  $12_1 = $1963($4_1, 24);
                  if ($12_1 < $23_1) {
                   break label$338
                  }
                  $6_1 = $1963($4_1, 20);
                  if ($6_1 > $21_1) {
                   break label$338
                  }
                  $8 = $18_1;
                  if ($6_1 > $23_1) {
                   $8 = Math_fround($18_1 + Math_fround(Math_fround($85_1 * Math_fround($6_1 - $23_1)) / $57_1))
                  } else {
                   $6_1 = $23_1
                  }
                  $14 = $6_1;
                  $13 = $8;
                  $8 = $29_1;
                  $6_1 = $21_1;
                  if ($6_1 > $12_1) {
                   $8 = Math_fround($29_1 + Math_fround(Math_fround(Math_fround($12_1 - $21_1) * Math_fround($29_1 - $13)) / Math_fround($21_1 - $14)));
                   $6_1 = $12_1;
                  }
                  if (!(!($13 <= $16_1) | !($8 <= $16_1))) {
                   $15_1 = $26_1 + ($1_1 << 2) | 0;
                   $1986($15_1, 0, Math_fround(Math_fround($1963($19, 0) * Math_fround($6_1 - $14)) + $1963($15_1, 0)));
                   break label$338;
                  }
                  if ($13 >= $20_1 & $8 >= $20_1) {
                   break label$338
                  }
                  $15_1 = $26_1 + ($1_1 << 2) | 0;
                  $1986($15_1, 0, Math_fround(Math_fround(Math_fround(Math_fround($6_1 - $14) * $1963($19, 0)) * Math_fround(Math_fround(Math_fround(Math_fround($13 - $16_1) + Math_fround($8 - $16_1)) * Math_fround(-.5)) + Math_fround(1.0))) + $1963($15_1, 0)));
                 }
                 if (($1_1 | 0) != ($48_1 | 0)) {
                  continue
                 }
                 break;
                };
               }
               $1_1 = $1944($4_1, 0);
               if ($1_1) {
                continue
               }
               break;
              };
             }
             if ($48_1 >>> 0 <= 2147483646) {
              $19 = Math_imul($27_1, $33_1);
              $6_1 = Math_fround(0.0);
              $4_1 = 0;
              while (1) {
               $1_1 = $4_1;
               $3 = $1_1 << 2;
               $8 = $1963($3 + $26_1 | 0, 0);
               $6_1 = Math_fround($6_1 + $1963($3 + $64_1 | 0, 0));
               $8 = Math_fround(Math_fround(Math_fround(Math_abs(Math_fround($8 + $6_1))) * Math_fround(255.0)) + Math_fround(.5));
               label$423 : {
                if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
                 $3 = ~~$8;
                 break label$423;
                }
                $3 = -2147483648;
               }
               $1968($82_1 + ($1_1 + $19 | 0) | 0, 0, ($3 | 0) >= 255 ? 255 : $3);
               $4_1 = $1_1 + 1 | 0;
               if (($1_1 | 0) != ($48_1 | 0)) {
                continue
               }
               break;
              };
             }
             $1_1 = $5_1;
             if ($1_1) {
              while (1) {
               $1986($1_1, 4, Math_fround($1963($1_1, 8) + $1963($1_1, 4)));
               $1_1 = $1944($1_1, 0);
               if ($1_1) {
                continue
               }
               break;
              }
             }
             $1_1 = $9;
             $4_1 = $32_1 + 1 | 0;
             $3 = $33_1 + 1 | 0;
             $9 = $17_1;
             $5_1 = $2_1;
             if (($33_1 | 0) != ($63_1 | 0)) {
              continue
             }
             break;
            };
           }
           $4_1 = $5_1;
           if ($4_1) {
            while (1) {
             $2_1 = $1944($4_1, 0);
             $17($4_1);
             $4_1 = $2_1;
             if ($2_1) {
              continue
             }
             break;
            }
           }
           if (($24 | 0) != ($11_1 + 112 | 0)) {
            $17($24)
           }
           $17($10_1);
          }
          $17($34_1);
          $17($39_1);
         }
         $34_1 = Math_imul($31_1, 28);
         $39_1 = $73_1 >>> 8 | 0;
         $32_1 = $73_1 << 8;
         $24 = $40_1 + 10 | 0;
         $33_1 = $40_1 + 8 | 0;
         $17($1944($11_1, 108));
         label$430 : {
          if ($42_1 >>> 0 < 2) {
           break label$430
          }
          $38_1 = $1941($53_1, 0);
          $10_1 = $1941($52_1, 0);
          $2_1 = $1941($24, 0);
          $3 = $1941($33_1, 0);
          $1983($11_1, 112, 0, 0);
          if (!$38_1) {
           break label$430
          }
          $17_1 = $10_1 - $42_1 | 0;
          $1_1 = 0;
          $4_1 = ($3 + $62_1 | 0) + Math_imul($2_1, $27_1) | 0;
          while (1) {
           $2_1 = $1_1;
           $1604($11_1 + 112 | 0, 0, $42_1);
           label$432 : {
            label$433 : {
             switch ($42_1 - 2 | 0) {
             case 0:
              $5_1 = 0;
              $7_1 = 0;
              $1_1 = 0;
              $3 = 0;
              if (($17_1 | 0) < 0) {
               break label$432
              }
              while (1) {
               $1_1 = $11_1 + 112 | 0;
               $9 = $7_1;
               $3 = $1937($1_1 | $7_1 & 7, 0);
               $19 = $7_1 + 2 & 7 | $1_1;
               $1_1 = $4_1 + $7_1 | 0;
               $26_1 = $1937($1_1, 0);
               $1968($19, 0, $26_1);
               $3 = ($26_1 - $3 | 0) + $5_1 | 0;
               $1968($1_1, 0, $3 >>> 1 | 0);
               $5_1 = $3;
               $1_1 = $7_1 + 1 | 0;
               $7_1 = $1_1;
               if (($9 | 0) != ($17_1 | 0)) {
                continue
               }
               break;
              };
              break label$432;
             case 1:
              $5_1 = 0;
              $7_1 = 0;
              $1_1 = 0;
              $3 = 0;
              if (($17_1 | 0) < 0) {
               break label$432
              }
              while (1) {
               $1_1 = $11_1 + 112 | 0;
               $9 = $7_1;
               $3 = $1937($1_1 | $7_1 & 7, 0);
               $19 = $7_1 + 3 & 7 | $1_1;
               $1_1 = $4_1 + $7_1 | 0;
               $26_1 = $1937($1_1, 0);
               $1968($19, 0, $26_1);
               $3 = ($26_1 - $3 | 0) + $5_1 | 0;
               $1968($1_1, 0, ($3 >>> 0) / 3 | 0);
               $5_1 = $3;
               $1_1 = $7_1 + 1 | 0;
               $7_1 = $1_1;
               if (($9 | 0) != ($17_1 | 0)) {
                continue
               }
               break;
              };
              break label$432;
             case 2:
              $5_1 = 0;
              $7_1 = 0;
              $1_1 = 0;
              $3 = 0;
              if (($17_1 | 0) < 0) {
               break label$432
              }
              while (1) {
               $1_1 = $11_1 + 112 | 0;
               $9 = $7_1;
               $3 = $1937($1_1 | $7_1 & 7, 0);
               $19 = $7_1 + 4 & 7 | $1_1;
               $1_1 = $4_1 + $7_1 | 0;
               $26_1 = $1937($1_1, 0);
               $1968($19, 0, $26_1);
               $3 = ($26_1 - $3 | 0) + $5_1 | 0;
               $1968($1_1, 0, $3 >>> 2 | 0);
               $5_1 = $3;
               $1_1 = $7_1 + 1 | 0;
               $7_1 = $1_1;
               if (($9 | 0) != ($17_1 | 0)) {
                continue
               }
               break;
              };
              break label$432;
             case 3:
              $5_1 = 0;
              $7_1 = 0;
              $1_1 = 0;
              $3 = 0;
              if (($17_1 | 0) < 0) {
               break label$432
              }
              while (1) {
               $1_1 = $11_1 + 112 | 0;
               $9 = $7_1;
               $3 = $1937($1_1 | $7_1 & 7, 0);
               $19 = $7_1 + 5 & 7 | $1_1;
               $1_1 = $4_1 + $7_1 | 0;
               $26_1 = $1937($1_1, 0);
               $1968($19, 0, $26_1);
               $3 = ($26_1 - $3 | 0) + $5_1 | 0;
               $1968($1_1, 0, ($3 >>> 0) / 5 | 0);
               $5_1 = $3;
               $1_1 = $7_1 + 1 | 0;
               $7_1 = $1_1;
               if (($9 | 0) != ($17_1 | 0)) {
                continue
               }
               break;
              };
              break label$432;
             default:
              break label$433;
             };
            }
            $5_1 = 0;
            $7_1 = 0;
            $1_1 = 0;
            $3 = 0;
            if (($17_1 | 0) < 0) {
             break label$432
            }
            while (1) {
             $1_1 = $11_1 + 112 | 0;
             $9 = $7_1;
             $3 = $1937($1_1 | $7_1 & 7, 0);
             $19 = $7_1 + $42_1 & 7 | $1_1;
             $1_1 = $4_1 + $7_1 | 0;
             $26_1 = $1937($1_1, 0);
             $1968($19, 0, $26_1);
             $3 = ($26_1 - $3 | 0) + $5_1 | 0;
             $1968($1_1, 0, ($3 >>> 0) / ($42_1 >>> 0) | 0);
             $5_1 = $3;
             $1_1 = $7_1 + 1 | 0;
             $7_1 = $1_1;
             if (($9 | 0) != ($17_1 | 0)) {
              continue
             }
             break;
            };
           }
           if (($1_1 | 0) < ($10_1 | 0)) {
            while (1) {
             $3 = $3 - $1937($11_1 + 112 | $1_1 & 7, 0) | 0;
             $1968($1_1 + $4_1 | 0, 0, ($3 >>> 0) / ($42_1 >>> 0) | 0);
             $1_1 = $1_1 + 1 | 0;
             if (($10_1 | 0) != ($1_1 | 0)) {
              continue
             }
             break;
            }
           }
           $4_1 = $4_1 + $27_1 | 0;
           $1_1 = $2_1 + 1 | 0;
           if (($1_1 | 0) != ($38_1 | 0)) {
            continue
           }
           break;
          };
         }
         $10_1 = $34_1 + $81_1 | 0;
         $39_1 = $32_1 | $39_1;
         label$445 : {
          if ($41_1 >>> 0 < 2) {
           break label$445
          }
          $38_1 = $1941($53_1, 0);
          $34_1 = $1941($52_1, 0);
          $2_1 = $1941($24, 0);
          $3 = $1941($33_1, 0);
          $1983($11_1, 112, 0, 0);
          if (!$34_1) {
           break label$445
          }
          $17_1 = $38_1 - $41_1 | 0;
          $1_1 = 0;
          $4_1 = ($3 + $62_1 | 0) + Math_imul($2_1, $27_1) | 0;
          while (1) {
           $2_1 = $1_1;
           $1604($11_1 + 112 | 0, 0, $41_1);
           label$447 : {
            label$448 : {
             switch ($41_1 - 2 | 0) {
             case 0:
              $5_1 = 0;
              $7_1 = 0;
              $1_1 = 0;
              $3 = 0;
              if (($17_1 | 0) < 0) {
               break label$447
              }
              while (1) {
               $1_1 = $11_1 + 112 | 0;
               $9 = $7_1;
               $3 = $1937($1_1 | $7_1 & 7, 0);
               $19 = $7_1 + 2 & 7 | $1_1;
               $1_1 = Math_imul($7_1, $27_1) + $4_1 | 0;
               $32_1 = $1937($1_1, 0);
               $1968($19, 0, $32_1);
               $3 = ($32_1 - $3 | 0) + $5_1 | 0;
               $1968($1_1, 0, $3 >>> 1 | 0);
               $5_1 = $3;
               $1_1 = $7_1 + 1 | 0;
               $7_1 = $1_1;
               if (($9 | 0) != ($17_1 | 0)) {
                continue
               }
               break;
              };
              break label$447;
             case 1:
              $5_1 = 0;
              $7_1 = 0;
              $1_1 = 0;
              $3 = 0;
              if (($17_1 | 0) < 0) {
               break label$447
              }
              while (1) {
               $1_1 = $11_1 + 112 | 0;
               $9 = $7_1;
               $3 = $1937($1_1 | $7_1 & 7, 0);
               $19 = $7_1 + 3 & 7 | $1_1;
               $1_1 = Math_imul($7_1, $27_1) + $4_1 | 0;
               $32_1 = $1937($1_1, 0);
               $1968($19, 0, $32_1);
               $3 = ($32_1 - $3 | 0) + $5_1 | 0;
               $1968($1_1, 0, ($3 >>> 0) / 3 | 0);
               $5_1 = $3;
               $1_1 = $7_1 + 1 | 0;
               $7_1 = $1_1;
               if (($9 | 0) != ($17_1 | 0)) {
                continue
               }
               break;
              };
              break label$447;
             case 2:
              $5_1 = 0;
              $7_1 = 0;
              $1_1 = 0;
              $3 = 0;
              if (($17_1 | 0) < 0) {
               break label$447
              }
              while (1) {
               $1_1 = $11_1 + 112 | 0;
               $9 = $7_1;
               $3 = $1937($1_1 | $7_1 & 7, 0);
               $19 = $7_1 + 4 & 7 | $1_1;
               $1_1 = Math_imul($7_1, $27_1) + $4_1 | 0;
               $32_1 = $1937($1_1, 0);
               $1968($19, 0, $32_1);
               $3 = ($32_1 - $3 | 0) + $5_1 | 0;
               $1968($1_1, 0, $3 >>> 2 | 0);
               $5_1 = $3;
               $1_1 = $7_1 + 1 | 0;
               $7_1 = $1_1;
               if (($9 | 0) != ($17_1 | 0)) {
                continue
               }
               break;
              };
              break label$447;
             case 3:
              $5_1 = 0;
              $7_1 = 0;
              $1_1 = 0;
              $3 = 0;
              if (($17_1 | 0) < 0) {
               break label$447
              }
              while (1) {
               $1_1 = $11_1 + 112 | 0;
               $9 = $7_1;
               $3 = $1937($1_1 | $7_1 & 7, 0);
               $19 = $7_1 + 5 & 7 | $1_1;
               $1_1 = Math_imul($7_1, $27_1) + $4_1 | 0;
               $32_1 = $1937($1_1, 0);
               $1968($19, 0, $32_1);
               $3 = ($32_1 - $3 | 0) + $5_1 | 0;
               $1968($1_1, 0, ($3 >>> 0) / 5 | 0);
               $5_1 = $3;
               $1_1 = $7_1 + 1 | 0;
               $7_1 = $1_1;
               if (($9 | 0) != ($17_1 | 0)) {
                continue
               }
               break;
              };
              break label$447;
             default:
              break label$448;
             };
            }
            $5_1 = 0;
            $7_1 = 0;
            $1_1 = 0;
            $3 = 0;
            if (($17_1 | 0) < 0) {
             break label$447
            }
            while (1) {
             $1_1 = $11_1 + 112 | 0;
             $9 = $7_1;
             $3 = $1937($1_1 | $7_1 & 7, 0);
             $19 = $7_1 + $41_1 & 7 | $1_1;
             $1_1 = Math_imul($7_1, $27_1) + $4_1 | 0;
             $32_1 = $1937($1_1, 0);
             $1968($19, 0, $32_1);
             $3 = ($32_1 - $3 | 0) + $5_1 | 0;
             $1968($1_1, 0, ($3 >>> 0) / ($41_1 >>> 0) | 0);
             $5_1 = $3;
             $1_1 = $7_1 + 1 | 0;
             $7_1 = $1_1;
             if (($9 | 0) != ($17_1 | 0)) {
              continue
             }
             break;
            };
           }
           if (($1_1 | 0) < ($38_1 | 0)) {
            while (1) {
             $3 = $3 - $1937($11_1 + 112 | $1_1 & 7, 0) | 0;
             $1968(Math_imul($1_1, $27_1) + $4_1 | 0, 0, ($3 >>> 0) / ($41_1 >>> 0) | 0);
             $1_1 = $1_1 + 1 | 0;
             if (($38_1 | 0) != ($1_1 | 0)) {
              continue
             }
             break;
            }
           }
           $4_1 = $4_1 + 1 | 0;
           $1_1 = $2_1 + 1 | 0;
           if (($1_1 | 0) != ($34_1 | 0)) {
            continue
           }
           break;
          };
         }
         $2_1 = $1941($33_1, 0);
         $1970($10_1, 0, $2_1);
         $1_1 = $1941($24, 0);
         $1970($10_1, 2, $1_1);
         $3 = $1941($52_1, 0);
         $1970($10_1, 4, $2_1 + $3 | 0);
         $2_1 = $1941($53_1, 0);
         $1986($10_1, 16, Math_fround($56_1 * Math_fround($39_1 << 16 >> 16)));
         $1970($10_1, 6, $1_1 + $2_1 | 0);
         $5_1 = $1944($11_1, 104);
         $1986($10_1, 8, Math_fround(Math_fround(Math_fround($5_1 | 0) * $70_1) + $67_1));
         $1_1 = $1944($11_1, 100);
         $1986($10_1, 20, Math_fround(Math_fround(Math_fround($3 + $5_1 | 0) * $70_1) + $67_1));
         $1986($10_1, 12, Math_fround(Math_fround(Math_fround($1_1 | 0) * $69_1) + $68_1));
         $1986($10_1, 24, Math_fround(Math_fround(Math_fround($1_1 + $2_1 | 0) * $69_1) + $68_1));
        }
        $1_1 = $31_1 + 1 | 0;
        if (($1944($66, 0) | 0) > ($1_1 | 0)) {
         continue
        }
        break;
       };
      }
      $9 = $36_1 + 148 | 0;
      $8 = $1963(Math_imul($45_1, 120) + $76_1 | 0, 68);
      label$460 : {
       if ($8 == Math_fround(1.0)) {
        break label$460
       }
       $7_1 = $36_1 + 168 | 0;
       $1_1 = 0;
       while (1) {
        $3 = ($11_1 + 112 | 0) + $1_1 | 0;
        $6_1 = Math_fround($8 * Math_fround($1_1 >>> 0));
        label$462 : {
         if ($6_1 < Math_fround(4294967296.0) & $6_1 >= Math_fround(0.0)) {
          $2_1 = ~~$6_1 >>> 0;
          break label$462;
         }
         $2_1 = 0;
        }
        $1968($3, 0, $2_1 >>> 0 >= 255 ? 255 : $2_1);
        $1_1 = $1_1 + 1 | 0;
        if (($1_1 | 0) != 256) {
         continue
        }
        break;
       };
       if (($1944($7_1, 0) | 0) <= 0) {
        break label$460
       }
       $1_1 = 0;
       $4_1 = $1944($9, 0);
       while (1) {
        $5_1 = $1_1;
        $2_1 = $4_1;
        label$465 : {
         if (!$1944($2_1, 12)) {
          break label$465
         }
         $1_1 = $1941($2_1, 6);
         if (!$1_1) {
          break label$465
         }
         $17_1 = $1941($2_1, 4);
         $3 = $1944($0_1, 20) + $1941($2_1, 8) | 0;
         $10_1 = $1944($75_1, 0);
         $4_1 = Math_imul($1941($2_1, 10), $10_1) + $3 | 0;
         while (1) {
          $3 = $1_1;
          $1_1 = 0;
          if ($17_1) {
           while (1) {
            $31_1 = $1_1 + $4_1 | 0;
            $1968($31_1, 0, $1937($1937($31_1, 0) + ($11_1 + 112 | 0) | 0, 0));
            $1_1 = $1_1 + 1 | 0;
            if (($17_1 | 0) != ($1_1 | 0)) {
             continue
            }
            break;
           }
          }
          $1_1 = $3 - 1 | 0;
          $4_1 = $4_1 + $10_1 | 0;
          if (($3 | 0) > 1) {
           continue
          }
          break;
         };
        }
        $4_1 = $2_1 + 16 | 0;
        $1_1 = $5_1 + 1 | 0;
        if (($1944($7_1, 0) | 0) > ($1_1 | 0)) {
         continue
        }
        break;
       };
      }
      $1973($9, 0, 0);
     }
     $1_1 = $45_1 + 1 | 0;
     if (($37 | 0) != ($1_1 | 0)) {
      continue
     }
     break;
    };
   }
   $17($55_1);
   $17($28_1);
   if ($25_1) {
    $17($25_1);
    $25_1 = 0;
   }
   if (($37 | 0) > 0) {
    $1_1 = 0;
    while (1) {
     $3 = $1_1;
     $5_1 = Math_imul($1_1, 196) + $35_1 | 0;
     label$473 : {
      if (!$1944($5_1, 168)) {
       break label$473
      }
      $4_1 = $1944($5_1, 4) + $1944($5_1, 28) | 0;
      $2_1 = $1940($4_1, 6);
      $1_1 = ($2_1 << 8 | $2_1 >>> 8) << 16 >> 16;
      $2_1 = $1944($0_1, 84) + Math_imul($3, 120) | 0;
      $6_1 = $1963($2_1, 16);
      $4_1 = $1940($4_1, 4);
      $4_1 = ($4_1 << 8 | $4_1 >>> 8) << 16 >> 16;
      $8 = Math_fround($6_1 / Math_fround($4_1 - $1_1 | 0));
      $6_1 = Math_fround(Math_fround(Math_fround($1_1 | 0) * $8) + (($1_1 | 0) <= 0 ? Math_fround(-1.0) : Math_fround(1.0)));
      label$474 : {
       if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
        $1_1 = ~~$6_1;
        break label$474;
       }
       $1_1 = -2147483648;
      }
      $6_1 = Math_fround($1_1 | 0);
      $9 = $5_1 + 168 | 0;
      $7_1 = $1944($2_1, 116);
      $1_1 = $7_1;
      $8 = Math_fround(Math_fround(Math_fround($4_1 | 0) * $8) + (($4_1 | 0) <= 0 ? Math_fround(-1.0) : Math_fround(1.0)));
      label$476 : {
       if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
        $4_1 = ~~$8;
        break label$476;
       }
       $4_1 = -2147483648;
      }
      $8 = Math_fround($4_1 | 0);
      if (!$1937($2_1, 60)) {
       $1982($1_1, 12, 0, 0);
       $4_1 = $1944($1_1 + 40 | 0, 0);
       if ($4_1) {
        $1982($1_1, 32, 0, 0);
        $17($4_1);
        $1973($1_1, 40, 0);
       }
       $4_1 = $1944($1_1, 8);
       if ($4_1) {
        $1982($1_1, 0, 0, 0);
        $17($4_1);
        $1973($1_1, 8, 0);
       }
       $4_1 = $1944($1_1 + 28 | 0, 0);
       if ($4_1) {
        $1982($1_1, 20, 0, 0);
        $17($4_1);
        $1973($1_1, 28, 0);
       }
       $1968($1_1, 64, 1);
       $1982($1_1, 44, 0, 0);
       $1973($1_1, 80, 0);
       $1982($1_1, 72, 0, 0);
       $13 = $1963($2_1, 16);
       $1970($1_1, 56, 0);
       $1973($1_1, 52, $2_1);
       $1986($1_1, 16, $13);
       $1986($1_1, 76, $6_1);
       $1986($1_1, 72, $8);
       $1973($1_1, 48, $0_1);
      }
      $1970($1_1, 56, $1941($1_1, 56) + 1 | 0);
      $6_1 = $1963($2_1 + 44 | 0, 0);
      $8 = Math_fround($1963($7_1, 72) + Math_fround(.5));
      label$478 : {
       if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
        $1_1 = ~~$8;
        break label$478;
       }
       $1_1 = -2147483648;
      }
      if (($1944($9, 0) | 0) <= 0) {
       break label$473
      }
      $6_1 = Math_fround($6_1 + Math_fround($1_1 | 0));
      $8 = $1963($2_1, 40);
      $4_1 = $5_1 + 152 | 0;
      $17_1 = $5_1 + 192 | 0;
      $1_1 = 0;
      while (1) {
       $10_1 = $1941($1944($17_1, 0) + ($1_1 << 2) | 0, 0);
       $5_1 = $1944($4_1, 0) + Math_imul($1_1, 28) | 0;
       $14 = Math_fround($8 + Math_fround($1963($5_1, 8) + Math_fround(0.0)));
       $18_1 = Math_fround($6_1 + Math_fround($1963($5_1, 12) + Math_fround(0.0)));
       $21_1 = Math_fround($8 + Math_fround($1963($5_1, 20) + Math_fround(0.0)));
       $23_1 = Math_fround($6_1 + Math_fround($1963($5_1, 24) + Math_fround(0.0)));
       $13 = Math_fround(Math_fround(1.0) / Math_fround($1944($0_1, 28) | 0));
       $16_1 = Math_fround($13 * Math_fround($1941($5_1, 0) >>> 0));
       $12_1 = Math_fround(Math_fround(1.0) / Math_fround($1944($0_1, 32) | 0));
       $456($7_1, $2_1, $10_1, $14, $18_1, $21_1, $23_1, $16_1, Math_fround($12_1 * Math_fround($1941($5_1, 2) >>> 0)), Math_fround($13 * Math_fround($1941($5_1, 4) >>> 0)), Math_fround($12_1 * Math_fround($1941($5_1, 6) >>> 0)), $1963($5_1, 16));
       $1_1 = $1_1 + 1 | 0;
       if (($1944($9, 0) | 0) > ($1_1 | 0)) {
        continue
       }
       break;
      };
     }
     $1_1 = $3 + 1 | 0;
     if (($37 | 0) != ($1_1 | 0)) {
      continue
     }
     break;
    };
   }
   if (($37 | 0) > 0) {
    $1_1 = 0;
    while (1) {
     $2_1 = Math_imul($1_1, 196) + $35_1 | 0;
     $3 = $1944($2_1 + 192 | 0, 0);
     if ($3) {
      $17($3)
     }
     $2_1 = $1944($2_1 + 180 | 0, 0);
     if ($2_1) {
      $17($2_1)
     }
     $1_1 = $1_1 + 1 | 0;
     if (($37 | 0) != ($1_1 | 0)) {
      continue
     }
     break;
    };
   }
   if ($35_1) {
    $17($35_1);
    $1_1 = 0;
   } else {
    $1_1 = $35_1
   }
   $2_1 = $0_1;
   $35_1 = $1944($2_1 + 72 | 0, 0);
   $27_1 = $1944($2_1, 1120);
   $5_1 = $35_1 + Math_imul($27_1, 28) | 0;
   $10_1 = $5_1 + 4 | 0;
   $4_1 = $1941($5_1, 4);
   $3 = $1944($2_1, 28);
   $9 = $1944($2_1, 20);
   label$1 : {
    if (!($1937($2_1, 0) & 2)) {
     $17_1 = $4_1 + 123 | 0;
     $7_1 = $1941($5_1, 6);
     if ($9) {
      $22_1 = $5_1 + 6 | 0;
      $0_1 = 0;
      $5_1 = ($4_1 + $9 | 0) + Math_imul($3, $7_1) | 0;
      $4_1 = 32864;
      while (1) {
       $3 = $0_1;
       $0_1 = 0;
       while (1) {
        $1968($0_1 + $5_1 | 0, 0, ($1937($0_1 + $4_1 | 0, 0) | 0) == 46 ? -1 : 0);
        $0_1 = $0_1 + 1 | 0;
        if (($0_1 | 0) != 122) {
         continue
        }
        break;
       };
       $9 = $1944($2_1, 28);
       $5_1 = $9 + $5_1 | 0;
       $4_1 = $4_1 + 122 | 0;
       $0_1 = $3 + 1 | 0;
       if (($0_1 | 0) != 27) {
        continue
       }
       break;
      };
      $0_1 = 0;
      $5_1 = ($1944($2_1, 20) + $17_1 | 0) + Math_imul($1941($22_1, 0), $9) | 0;
      $4_1 = 32864;
      while (1) {
       $3 = $0_1;
       $0_1 = 0;
       while (1) {
        $1968($0_1 + $5_1 | 0, 0, ($1937($0_1 + $4_1 | 0, 0) | 0) == 88 ? -1 : 0);
        $0_1 = $0_1 + 1 | 0;
        if (($0_1 | 0) != 122) {
         continue
        }
        break;
       };
       $5_1 = $1944($2_1, 28) + $5_1 | 0;
       $4_1 = $4_1 + 122 | 0;
       $0_1 = $3 + 1 | 0;
       if (($0_1 | 0) != 27) {
        continue
       }
       break;
      };
      break label$1;
     }
     $0_1 = 0;
     $9 = $1944($2_1, 24);
     $5_1 = ($9 + ($4_1 << 2) | 0) + (Math_imul($3, $7_1) << 2) | 0;
     $4_1 = 32864;
     while (1) {
      $3 = $0_1;
      $0_1 = 0;
      while (1) {
       $1973($5_1 + ($0_1 << 2) | 0, 0, ($1937($0_1 + $4_1 | 0, 0) | 0) == 46 ? -1 : 0);
       $0_1 = $0_1 + 1 | 0;
       if (($0_1 | 0) != 122) {
        continue
       }
       break;
      };
      $22_1 = $1944($2_1, 28);
      $5_1 = $5_1 + ($22_1 << 2) | 0;
      $4_1 = $4_1 + 122 | 0;
      $0_1 = $3 + 1 | 0;
      if (($0_1 | 0) != 27) {
       continue
      }
      break;
     };
     $0_1 = 0;
     $5_1 = ($9 + ($17_1 << 2) | 0) + (Math_imul($7_1, $22_1) << 2) | 0;
     $4_1 = 32864;
     while (1) {
      $3 = $0_1;
      $0_1 = 0;
      while (1) {
       $1973($5_1 + ($0_1 << 2) | 0, 0, ($1937($0_1 + $4_1 | 0, 0) | 0) == 88 ? -1 : 0);
       $0_1 = $0_1 + 1 | 0;
       if (($0_1 | 0) != 122) {
        continue
       }
       break;
      };
      $5_1 = $5_1 + ($1944($2_1, 28) << 2) | 0;
      $4_1 = $4_1 + 122 | 0;
      $0_1 = $3 + 1 | 0;
      if (($0_1 | 0) != 27) {
       continue
      }
      break;
     };
     break label$1;
    }
    $0_1 = $4_1 + Math_imul($1941($5_1, 6), $3) | 0;
    $5_1 = $0_1 + 1 | 0;
    if ($9) {
     $3 = $0_1 + $3 | 0;
     $1968(($3 + $9 | 0) + 1 | 0, 0, 255);
     $1968($1944($2_1, 20) + $3 | 0, 0, 255);
     $1968($1944($2_1, 20) + $5_1 | 0, 0, 255);
     $1968($1944($2_1, 20) + $0_1 | 0, 0, 255);
     break label$1;
    }
    $4_1 = $1944($2_1, 24);
    $1982($4_1 + ($0_1 + $3 << 2) | 0, 0, -1, -1);
    $1973($4_1 + ($5_1 << 2) | 0, 0, -1);
    $1973($4_1 + ($0_1 << 2) | 0, 0, -1);
   }
   $0_1 = $1941($35_1 + Math_imul($27_1, 28) | 0, 6);
   $1986($2_1, 44, Math_fround($1963($2_1, 36) * Math_fround(Math_fround($1941($10_1, 0) >>> 0) + Math_fround(.5))));
   $1986($2_1 + 48 | 0, 0, Math_fround($1963($2_1 + 40 | 0, 0) * Math_fround(Math_fround($0_1 >>> 0) + Math_fround(.5))));
   if (!($1937($2_1, 0) & 4)) {
    $27_1 = $1944($2_1, 72) + Math_imul($1944($2_1, 1124), 28) | 0;
    $4_1 = $27_1 + 6 | 0;
    $9 = $27_1 + 4 | 0;
    $0_1 = 0;
    while (1) {
     $7_1 = $1941($27_1, 0);
     $10_1 = $7_1 - $0_1 | 0;
     $3 = $10_1 >>> 1 | 0;
     $35_1 = $3 + $0_1 | 0;
     $5_1 = $7_1 - $35_1 | 0;
     $17_1 = $1944($2_1, 20);
     label$1513 : {
      if ($17_1) {
       $17_1 = $17_1 + (Math_imul($1941($4_1, 0) + $0_1 | 0, $1944($2_1, 28)) + $1941($9, 0) | 0) | 0;
       if ($10_1 >>> 0 >= 2) {
        $1604($17_1, 0, $3 >>> 0 <= 1 ? 1 : $3)
       }
       if ($0_1) {
        $1604($3 + $17_1 | 0, 255, $0_1)
       }
       if (($7_1 | 0) == ($35_1 | 0)) {
        break label$1513
       }
       $1604(($3 + $17_1 | 0) + $0_1 | 0, 0, $5_1 >>> 0 <= 1 ? 1 : $5_1);
       break label$1513;
      }
      $17_1 = $1944($2_1, 24) + (Math_imul($1941($4_1, 0) + $0_1 | 0, $1944($2_1, 28)) + $1941($9, 0) << 2) | 0;
      if ($10_1 >>> 0 >= 2) {
       $1604($17_1, 0, ($3 >>> 0 <= 1 ? 1 : $3) << 2)
      }
      $10_1 = $0_1 << 2;
      if ($0_1) {
       $1604($17_1 + ($3 << 2) | 0, 255, $10_1)
      }
      if (($7_1 | 0) == ($35_1 | 0)) {
       break label$1513
      }
      $1604($10_1 + ($17_1 + ($3 << 2) | 0) | 0, 0, ($5_1 >>> 0 <= 1 ? 1 : $5_1) << 2);
     }
     $6_1 = $1963($2_1, 40);
     $7_1 = $1941($4_1, 0);
     $5_1 = ($0_1 << 4) + $2_1 | 0;
     $8 = $1963($2_1, 36);
     $35_1 = $1941($9, 0) + $3 | 0;
     $3 = $0_1 + 1 | 0;
     $1986($5_1 + 96 | 0, 0, Math_fround($8 * Math_fround($35_1 + $3 >>> 0)));
     $1986($5_1 + 88 | 0, 0, Math_fround($8 * Math_fround($35_1 - 1 >>> 0)));
     $0_1 = $0_1 + $7_1 | 0;
     $6_1 = Math_fround(Math_fround(Math_fround($6_1 * Math_fround($0_1 >>> 0)) + Math_fround($6_1 * Math_fround($0_1 + 1 >>> 0))) * Math_fround(.5));
     $1986($5_1 + 100 | 0, 0, $6_1);
     $1986($5_1 + 92 | 0, 0, $6_1);
     $0_1 = $3;
     if (($3 | 0) != 64) {
      continue
     }
     break;
    };
   }
   if (($1944($2_1, 64) | 0) > 0) {
    $0_1 = 0;
    while (1) {
     $3 = $1944($2_1, 72) + Math_imul($0_1, 28) | 0;
     $5_1 = $1944($3, 24);
     label$2314 : {
      if (!$5_1) {
       break label$2314
      }
      $4_1 = $1944($3, 8);
      if (!$4_1) {
       break label$2314
      }
      $10_1 = $5_1;
      $17_1 = $4_1 & 65535;
      $6_1 = $1963($3, 16);
      $13 = $6_1;
      $8 = $1963($3 + 20 | 0, 0);
      $12_1 = $8;
      $5_1 = $1941($3, 0);
      $14 = Math_fround($6_1 + Math_fround($5_1 >>> 0));
      $4_1 = $1941($3, 2);
      $18_1 = Math_fround($8 + Math_fround($4_1 >>> 0));
      $6_1 = $1963($2_1, 36);
      $9 = $1941($3, 4);
      $8 = $1963($2_1, 40);
      $7_1 = $1941($3, 6);
      $456($10_1, 0, $17_1, $13, $12_1, $14, $18_1, Math_fround($6_1 * Math_fround($9 >>> 0)), Math_fround($8 * Math_fround($7_1 >>> 0)), Math_fround($6_1 * Math_fround($5_1 + $9 | 0)), Math_fround($8 * Math_fround($4_1 + $7_1 | 0)), $1963($3, 12));
     }
     $0_1 = $0_1 + 1 | 0;
     if (($1944($2_1, 64) | 0) > ($0_1 | 0)) {
      continue
     }
     break;
    };
   }
   if (($1944($2_1, 52) | 0) > 0) {
    $0_1 = 0;
    while (1) {
     $3 = $1944($1944($2_1, 60) + ($0_1 << 2) | 0, 0);
     if ($1937($3, 64)) {
      $461($3)
     }
     $0_1 = $0_1 + 1 | 0;
     if (($1944($2_1, 52) | 0) > ($0_1 | 0)) {
      continue
     }
     break;
    };
   }
   $1968($2_1, 17, 1);
   if ($61) {
    $17($61)
   }
   if ($25_1) {
    $17($25_1)
   }
   $4_1 = $60_1;
   $0_1 = $54_1;
  }
  if ($0_1) {
   $17($0_1)
  }
  if ($1_1) {
   $17($1_1)
  }
  global$0 = $11_1 + 640 | 0;
  return $4_1 & 1;
 }
 
 function $438($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  if (!$1937($1_1, 60)) {
   $5_1 = $16(88);
   $470($5_1);
   $3 = $1944($0_1, 52);
   $2_1 = $1944($0_1 + 56 | 0, 0);
   label$2 : {
    if (($3 | 0) != ($2_1 | 0)) {
     break label$2
    }
    $4_1 = $3 + 1 | 0;
    $6_1 = $2_1;
    if ($2_1) {
     $3 = $2_1 + (($2_1 | 0) / 2 | 0) | 0
    } else {
     $3 = 8
    }
    $2_1 = ($3 | 0) > ($4_1 | 0) ? $3 : $4_1;
    if (($6_1 | 0) >= ($2_1 | 0)) {
     break label$2
    }
    $3 = $16($2_1 << 2);
    $4_1 = $1944($0_1 + 60 | 0, 0);
    if ($4_1) {
     $1602($3, $4_1, $1944($0_1, 52) << 2);
     $17($1944($0_1, 60));
    }
    $1973($0_1, 56, $2_1);
    $1973($0_1, 60, $3);
   }
   $1973($1944($0_1 + 60 | 0, 0) + ($1944($0_1, 52) << 2) | 0, 0, $5_1);
   $1973($0_1, 52, $1944($0_1, 52) + 1 | 0);
  }
  $3 = $1944($0_1, 76);
  $2_1 = $1944($0_1 + 80 | 0, 0);
  label$6 : {
   if (($3 | 0) != ($2_1 | 0)) {
    break label$6
   }
   $4_1 = $3 + 1 | 0;
   $6_1 = $2_1;
   if ($2_1) {
    $3 = $2_1 + (($2_1 | 0) / 2 | 0) | 0
   } else {
    $3 = 8
   }
   $2_1 = ($3 | 0) > ($4_1 | 0) ? $3 : $4_1;
   if (($6_1 | 0) >= ($2_1 | 0)) {
    break label$6
   }
   $3 = $16(Math_imul($2_1, 120));
   $4_1 = $1944($0_1 + 84 | 0, 0);
   if ($4_1) {
    $1602($3, $4_1, Math_imul($1944($0_1, 76), 120));
    $17($1944($0_1, 84));
   }
   $1973($0_1, 80, $2_1);
   $1973($0_1, 84, $3);
  }
  $2_1 = $0_1 + 84 | 0;
  $1602($1944($2_1, 0) + Math_imul($1944($0_1, 76), 120) | 0, $1_1, 120);
  $4_1 = $1944($0_1, 76);
  $1973($0_1, 76, $4_1 + 1 | 0);
  $5_1 = $1944($2_1, 0);
  $2_1 = $5_1 + Math_imul($4_1, 120) | 0;
  $3 = $2_1 + 116 | 0;
  if (!$1944($2_1, 116)) {
   $1973($3, 0, $1944((($1944($0_1, 52) << 2) + $1944($0_1 + 60 | 0, 0) | 0) - 4 | 0, 0))
  }
  if (!$1937($2_1, 8)) {
   $4_1 = $5_1 + Math_imul($4_1, 120) | 0;
   $5_1 = $16($1944($4_1, 4));
   $1973($2_1, 0, $5_1);
   $1968($2_1 + 8 | 0, 0, 1);
   $1602($5_1, $1944($1_1, 0), $1944($4_1, 4));
  }
  $2_1 = $1944($3, 0);
  if (($1941($2_1, 60) | 0) == 65535) {
   $1970($2_1, 60, $1941($1_1, 72))
  }
  $1968($0_1, 17, 0);
  $1_1 = $1944($0_1, 20);
  if ($1_1) {
   $17($1_1)
  }
  $1_1 = $1944($0_1, 24);
  if ($1_1) {
   $17($1_1)
  }
  $1968($0_1, 18, 0);
  $1982($0_1, 20, 0, 0);
  return $1944($3, 0);
 }
 
 function $444($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0;
  $8 = $1944($1_1, 8);
  $3 = $8 >> 31 & $8;
  $1973($1_1, 4, $3);
  $13 = $1944($1_1, 0);
  $6_1 = $3;
  while (1) {
   $11_1 = $10_1 << 8;
   $5_1 = $6_1;
   label$2 : {
    if (($8 | 0) <= ($5_1 | 0)) {
     $6_1 = $3;
     $7_1 = $5_1;
     $5_1 = 0;
     break label$2;
    }
    $6_1 = $5_1 + 1 | 0;
    $7_1 = $6_1;
    $5_1 = $1937($5_1 + $13 | 0, 0);
   }
   $9 = $6_1;
   $3 = $9;
   $6_1 = $7_1;
   $12_1 = $11_1 | $5_1 & 255;
   $10_1 = $12_1;
   $4_1 = $4_1 + 1 | 0;
   if (($4_1 | 0) != 2) {
    continue
   }
   break;
  };
  $1973($1_1, 4, $9);
  $3 = 0;
  if (($8 | 0) > ($9 | 0)) {
   $1973($1_1, 4, $9 + 1 | 0);
   $3 = $1937($1944($1_1, 0) + $9 | 0, 0);
  }
  $9 = $3;
  $2_1 = $1944($1_1, 4) + Math_imul($2_1, $3) | 0;
  $4_1 = ($2_1 | 0) < 0 ? $8 : ($2_1 | 0) > ($8 | 0) ? $8 : $2_1;
  $1973($1_1, 4, $4_1);
  $3 = 0;
  if ($9) {
   $11_1 = $1944($1_1, 0);
   $3 = $1944($1_1, 4);
   $10_1 = 0;
   $7_1 = 0;
   while (1) {
    $7_1 = $7_1 << 8;
    $2_1 = $4_1;
    label$7 : {
     if (($8 | 0) <= ($2_1 | 0)) {
      $4_1 = $3;
      $5_1 = $2_1;
      $2_1 = 0;
      break label$7;
     }
     $4_1 = $2_1 + 1 | 0;
     $5_1 = $4_1;
     $2_1 = $1937($2_1 + $11_1 | 0, 0);
    }
    $3 = $4_1;
    $4_1 = $5_1;
    $6_1 = $10_1 + 1 | 0;
    $10_1 = $6_1;
    $2_1 = $7_1 | $2_1 & 255;
    $7_1 = $2_1;
    if (($6_1 | 0) != ($9 | 0)) {
     continue
    }
    break;
   };
   $1973($1_1, 4, $3);
  } else {
   $2_1 = $3
  }
  $6_1 = $2_1;
  $3 = 0;
  if ($9) {
   $11_1 = $1944($1_1, 0);
   $3 = $1944($1_1, 4);
   $4_1 = $3;
   $10_1 = 0;
   $7_1 = 0;
   while (1) {
    $7_1 = $7_1 << 8;
    $2_1 = $4_1;
    label$11 : {
     if (($8 | 0) <= ($2_1 | 0)) {
      $4_1 = $3;
      $5_1 = $2_1;
      $2_1 = 0;
      break label$11;
     }
     $4_1 = $2_1 + 1 | 0;
     $5_1 = $4_1;
     $2_1 = $1937($2_1 + $11_1 | 0, 0);
    }
    $3 = $4_1;
    $4_1 = $5_1;
    $5_1 = $10_1 + 1 | 0;
    $10_1 = $5_1;
    $2_1 = $7_1 | $2_1 & 255;
    $7_1 = $2_1;
    if (($5_1 | 0) != ($9 | 0)) {
     continue
    }
    break;
   };
   $1973($1_1, 4, $3);
   $3 = $2_1;
  }
  $1973($0_1, 8, 0);
  $1982($0_1, 0, 0, 0);
  $2_1 = $3 - $6_1 | 0;
  $4_1 = (Math_imul($9, $12_1 + 1 | 0) + $6_1 | 0) + 2 | 0;
  if (!(($2_1 | $4_1) < 0 | ($4_1 | 0) > ($8 | 0) | ($2_1 | 0) > ($8 - $4_1 | 0))) {
   $1_1 = $1944($1_1, 0);
   $1973($0_1, 8, $2_1);
   $1973($0_1, 0, $1_1 + $4_1 | 0);
  }
 }
 
 function $445($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $5_1 = $1944($0_1, 8);
  $4_1 = $5_1 >> 31 & $5_1;
  $1973($0_1, 4, $4_1);
  label$1 : {
   if (($5_1 | 0) > 0) {
    while (1) {
     $10_1 = $4_1;
     label$4 : while (1) {
      $4_1 = 0;
      $7_1 = $1944($0_1, 4);
      $5_1 = $1944($0_1, 8);
      $8 = ($7_1 | 0) >= ($5_1 | 0);
      if ($8) {
       $9 = $4_1
      } else {
       $9 = $1937($1944($0_1, 0) + $7_1 | 0, 0)
      }
      if (($9 & 255) >>> 0 >= 28) {
       label$7 : {
        if ($8) {
         break label$7
        }
        $8 = $1944($0_1, 0);
        if (($1937($8 + $7_1 | 0, 0) | 0) != 30) {
         break label$7
        }
        $4_1 = ($7_1 | 0) < -1 ? $5_1 : ($5_1 | 0) <= ($7_1 | 0) ? $5_1 : $7_1 + 1 | 0;
        $1973($0_1, 4, $4_1);
        $7_1 = ($4_1 | 0) > ($5_1 | 0) ? $4_1 : $5_1;
        while (1) {
         if (($4_1 | 0) == ($7_1 | 0)) {
          continue label$4
         }
         $5_1 = $4_1 + 1 | 0;
         $1973($0_1, 4, $5_1);
         $9 = $1937($4_1 + $8 | 0, 0);
         if (($9 & 15) == 15) {
          continue label$4
         }
         $4_1 = $5_1;
         if (($9 & 240) != 240) {
          continue
         }
         break;
        };
        continue;
       }
       $486($0_1);
       continue;
      }
      break;
     };
     if (!$8) {
      $1973($0_1, 4, $7_1 + 1 | 0);
      $4_1 = $1937($1944($0_1, 0) + $7_1 | 0, 0);
     }
     $4_1 = $4_1 & 255;
     if (($4_1 | 0) == 12) {
      $4_1 = 0;
      $8 = $1944($0_1, 4);
      if (($5_1 | 0) > ($8 | 0)) {
       $1973($0_1, 4, $8 + 1 | 0);
       $4_1 = $1937($1944($0_1, 0) + $8 | 0, 0);
      }
      $4_1 = $4_1 & 255 | 256;
     }
     if (($4_1 | 0) == ($1_1 | 0)) {
      $1982($6_1, 4, 0, 0);
      $1973($6_1, 12, 0);
      $1_1 = $7_1 - $10_1 | 0;
      if (($1_1 | $10_1) < 0 | ($5_1 | 0) < ($10_1 | 0) | ($5_1 | 0) < ($7_1 | 0)) {
       break label$1
      }
      $0_1 = $1944($0_1, 0);
      $1973($6_1, 12, $1_1);
      $1973($6_1, 4, $0_1 + $10_1 | 0);
      break label$1;
     }
     $4_1 = $1944($0_1, 4);
     if (($5_1 | 0) > ($4_1 | 0)) {
      continue
     }
     break;
    }
   }
   $1982($6_1, 4, 0, 0);
   $1973($6_1, 12, 0);
   if (($5_1 | 0) < 0) {
    break label$1
   }
   $0_1 = $1944($0_1, 0);
   $1973($6_1, 12, 0);
   $1973($6_1, 4, $0_1);
  }
  label$13 : {
   if (($2_1 | 0) <= 0) {
    break label$13
   }
   if (($1944($6_1, 8) | 0) >= ($1944($6_1, 12) | 0)) {
    break label$13
   }
   $4_1 = 0;
   while (1) {
    $1973(($4_1 << 2) + $3 | 0, 0, $486($6_1 + 4 | 0));
    $4_1 = $4_1 + 1 | 0;
    if (($4_1 | 0) >= ($2_1 | 0)) {
     break label$13
    }
    if (($1944($6_1, 8) | 0) < ($1944($6_1, 12) | 0)) {
     continue
    }
    break;
   };
  }
  global$0 = $6_1 + 16 | 0;
 }
 
 function $446($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0;
  $5_1 = global$0 - 32 | 0;
  global$0 = $5_1;
  $1973($5_1, 28, 0);
  $1983($5_1, 16, 0, 0);
  $445($2_1, 18, 2, $5_1 + 16 | 0);
  label$1 : {
   label$2 : {
    $3 = $1944($5_1, 20);
    if ($3) {
     $2_1 = $1944($5_1, 16);
     if ($2_1) {
      break label$2
     }
    }
    $1973($0_1, 8, 0);
    $1982($0_1, 0, 0, 0);
    break label$1;
   }
   $6_1 = 0;
   label$4 : {
    if (($2_1 | $3) < 0) {
     break label$4
    }
    $4_1 = $1944($1_1, 8);
    $6_1 = 0;
    if (($4_1 | 0) < ($3 | 0)) {
     break label$4
    }
    $6_1 = 0;
    if (($2_1 | 0) > ($4_1 - $3 | 0)) {
     break label$4
    }
    $7_1 = $2_1;
    $6_1 = $1944($1_1, 0) + $3 | 0;
   }
   $2_1 = $6_1;
   $1973($5_1, 12, $7_1);
   $1973($5_1, 8, 0);
   $1973($5_1, 4, $2_1);
   $445($5_1 + 4 | 0, 19, 1, $5_1 + 28 | 0);
   $7_1 = $1944($5_1, 28);
   if (!$7_1) {
    $1973($0_1, 8, 0);
    $1982($0_1, 0, 0, 0);
    break label$1;
   }
   $2_1 = $1944($1_1, 8);
   $7_1 = $3 + $7_1 | 0;
   $1973($1_1, 4, ($7_1 | 0) < 0 ? $2_1 : ($2_1 | 0) < ($7_1 | 0) ? $2_1 : $7_1);
   $7_1 = $0_1;
   $2_1 = 0;
   $4_1 = $1944($1_1, 8);
   $6_1 = $1944($1_1, 4);
   $0_1 = $6_1;
   while (1) {
    $3 = $2_1 << 8;
    label$21 : {
     if (($0_1 | 0) >= ($4_1 | 0)) {
      $2_1 = $0_1;
      $9 = 0;
      break label$21;
     }
     $2_1 = $0_1 + 1 | 0;
     $1973($1_1, 4, $2_1);
     $9 = $1937($1944($1_1, 0) + $0_1 | 0, 0);
    }
    $0_1 = $2_1;
    $2_1 = $3 | $9 & 255;
    $8 = $8 + 1 | 0;
    if (($8 | 0) != 2) {
     continue
    }
    break;
   };
   if ($2_1) {
    $0_1 = 0;
    $3 = $1944($1_1, 4);
    if (($4_1 | 0) > ($3 | 0)) {
     $1973($1_1, 4, $3 + 1 | 0);
     $0_1 = $1937($1944($1_1, 0) + $3 | 0, 0);
    }
    $3 = $0_1;
    $0_1 = $1944($1_1, 4) + Math_imul($0_1, $2_1) | 0;
    $0_1 = ($0_1 | 0) < 0 ? $4_1 : ($0_1 | 0) > ($4_1 | 0) ? $4_1 : $0_1;
    $1973($1_1, 4, $0_1);
    if ($3) {
     $8 = 0;
     $2_1 = 0;
     while (1) {
      $9 = $2_1 << 8;
      label$9 : {
       if (($0_1 | 0) >= ($4_1 | 0)) {
        $2_1 = $0_1;
        $10_1 = 0;
        break label$9;
       }
       $2_1 = $0_1 + 1 | 0;
       $1973($1_1, 4, $2_1);
       $10_1 = $1937($1944($1_1, 0) + $0_1 | 0, 0);
      }
      $0_1 = $2_1;
      $2_1 = $9 | $10_1 & 255;
      $8 = $8 + 1 | 0;
      if (($8 | 0) != ($3 | 0)) {
       continue
      }
      break;
     };
     $0_1 = $2_1 - 1 | 0;
    } else {
     $0_1 = -1
    }
    $0_1 = $0_1 + $1944($1_1, 4) | 0;
    $1973($1_1, 4, ($0_1 | 0) < 0 ? $4_1 : ($0_1 | 0) > ($4_1 | 0) ? $4_1 : $0_1);
   }
   $0_1 = $1944($1_1, 4);
   $1973($7_1, 8, 0);
   $1982($7_1, 0, 0, 0);
   $2_1 = $0_1 - $6_1 | 0;
   if (!(($2_1 | $6_1) < 0 | ($4_1 | 0) < ($6_1 | 0) | ($0_1 | 0) > ($4_1 | 0))) {
    $0_1 = $1944($1_1, 0);
    $1973($7_1, 8, $2_1);
    $1973($7_1, 0, $0_1 + $6_1 | 0);
   }
  }
  global$0 = $5_1 + 32 | 0;
 }
 
 function $447($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       $8 = $1944($0_1, 4);
       $7_1 = $1944($0_1, 44);
       $3 = $8 + $7_1 | 0;
       $0_1 = $1940($3, 0);
       $0_1 = $0_1 << 8 | $0_1 >>> 8;
       switch ($0_1 & 65535) {
       case 2:
        break label$1;
       case 4:
        break label$3;
       case 6:
        break label$4;
       case 0:
        break label$5;
       default:
        break label$2;
       };
      }
      if ((($1937($3, 2) << 8 | $1937($3 + 3 | 0, 0)) - 6 | 0) <= ($1_1 | 0)) {
       break label$1
      }
      return $1937(($1_1 + $3 | 0) + 6 | 0, 0);
     }
     $0_1 = $1937($3, 6) << 8 | $1937($3 + 7 | 0, 0);
     if ($1_1 >>> 0 < $0_1 >>> 0) {
      return 0
     }
     if ($0_1 + ($1937($3, 8) << 8 | $1937($3 + 9 | 0, 0)) >>> 0 <= $1_1 >>> 0) {
      break label$1
     }
     $0_1 = $3 + ($1_1 - $0_1 << 1) | 0;
     return $1937($0_1 + 10 | 0, 0) << 8 | $1937($0_1 + 11 | 0, 0);
    }
    if (($1_1 | 0) > 65535) {
     break label$1
    }
    $6_1 = $1937($3, 6) << 8 | $1937($3 + 7 | 0, 0);
    $0_1 = $1937($3, 12) << 8 | $1937($3 + 13 | 0, 0) & 254;
    $2_1 = $0_1 + $3 | 0;
    $5_1 = $1937($2_1 + 14 | 0, 0) << 8;
    $5_1 = ($7_1 + (($1937($2_1 + 15 | 0, 0) | $5_1) <= ($1_1 | 0) ? $0_1 : 0) | 0) + 12 | 0;
    $0_1 = $1940($3, 10);
    $0_1 = $0_1 << 8 | $0_1 >>> 8;
    label$7 : {
     if (!($0_1 & 65535)) {
      $4_1 = $5_1;
      break label$7;
     }
     $2_1 = $1940($3, 8);
     $2_1 = $2_1 << 8 | $2_1 >>> 8;
     while (1) {
      $4_1 = $2_1 >>> 1 | 0;
      $2_1 = $4_1 & 32767;
      $4_1 = $4_1 & 32766;
      $9 = $4_1 + ($5_1 + $8 | 0) | 0;
      $10_1 = $1937($9, 0) << 8;
      $5_1 = (($1937($9, 1) | $10_1) < ($1_1 | 0) ? $4_1 : 0) + $5_1 | 0;
      $4_1 = $5_1;
      $0_1 = $0_1 - 1 | 0;
      if ($0_1 & 65535) {
       continue
      }
      break;
     };
    }
    $0_1 = ($4_1 - $7_1 | 0) + 131060 & 131070;
    $5_1 = $3 + 14 | 0;
    $4_1 = $0_1 + ($5_1 + ($6_1 & 65534) | 0) | 0;
    $4_1 = $1937($4_1 + 2 | 0, 0) << 8 | $1937($4_1 + 3 | 0, 0);
    $2_1 = 0;
    label$10 : {
     if (($4_1 | 0) > ($1_1 | 0)) {
      break label$10
     }
     $2_1 = $6_1 >>> 1 | 0;
     $3 = Math_imul($2_1, 6);
     $6_1 = $1940(($0_1 + ($3 + $5_1 | 0) | 0) + 2 | 0, 0);
     $6_1 = ($6_1 << 8 | $6_1 >>> 8) & 65535;
     if (!$6_1) {
      $0_1 = $0_1 + ($5_1 + ($2_1 << 2) | 0) | 0;
      $2_1 = ($1937($0_1 + 2 | 0, 0) << 8 | $1937($0_1 + 3 | 0, 0)) + $1_1 | 0;
      break label$10;
     }
     $0_1 = $0_1 + ($3 + ($7_1 + (($6_1 + $8 | 0) + ($1_1 - $4_1 << 1) | 0) | 0) | 0) | 0;
     $2_1 = $1937($0_1 + 16 | 0, 0) << 8 | $1937($0_1 + 17 | 0, 0);
    }
    return $2_1 & 65535;
   }
   if (($0_1 & 65534) != 12) {
    break label$1
   }
   $8 = $3 + 16 | 0;
   $6_1 = ($0_1 & 65535) == 12;
   $0_1 = 0;
   $2_1 = $1942($3, 12);
   $5_1 = $2_1 << 24 | ($2_1 & 65280) << 8 | ($2_1 >>> 8 & 65280 | $2_1 >>> 24);
   while (1) {
    if (($0_1 | 0) >= ($5_1 | 0)) {
     return 0
    }
    $3 = ($5_1 - $0_1 >> 1) + $0_1 | 0;
    $7_1 = $8 + Math_imul($3, 12) | 0;
    $2_1 = $1942($7_1, 0);
    $9 = $2_1 << 24 | ($2_1 & 65280) << 8 | ($2_1 >>> 8 & 65280 | $2_1 >>> 24);
    label$14 : {
     if ($1_1 >>> 0 < $9 >>> 0) {
      $2_1 = $0_1;
      $5_1 = $3;
      $3 = 1;
      break label$14;
     }
     $2_1 = $1942($7_1, 4);
     if ($1_1 >>> 0 > ($2_1 << 24 | ($2_1 & 65280) << 8 | ($2_1 >>> 8 & 65280 | $2_1 >>> 24)) >>> 0) {
      $2_1 = $3 + 1 | 0;
      $3 = 1;
      break label$14;
     }
     $2_1 = $0_1;
     $0_1 = $1942($7_1, 8);
     $4_1 = ($0_1 << 24 | ($0_1 & 65280) << 8 | ($0_1 >>> 8 & 65280 | $0_1 >>> 24)) + ($6_1 ? $1_1 - $9 | 0 : 0) | 0;
     $3 = 0;
    }
    $0_1 = $2_1;
    $2_1 = $4_1;
    if ($3) {
     continue
    }
    break;
   };
  }
  return $2_1;
 }
 
 function $448($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  var $8 = Math_fround(0), $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $9 = global$0 - 48 | 0;
  global$0 = $9;
  label$1 : {
   if ($1944($0_1 + 60 | 0, 0)) {
    $1983($9 + 40 | 0, 0, 0, 0);
    $10_1 = $9 + 32 | 0;
    $1983($10_1, 0, 0, 0);
    $11_1 = $9 + 24 | 0;
    $1983($11_1, 0, 0, 0);
    $1983($9 + 16 | 0, 0, 0, 0);
    $1983($9 + 8 | 0, 0, 0, 0);
    $1983($9, 0, 0, 0);
    $1973($9, 0, 1);
    $0_1 = $483($0_1, $1_1, $9);
    $1_1 = (wasm2js_i32$0 = $1944($11_1, 0), wasm2js_i32$1 = 0, wasm2js_i32$2 = $0_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
    $10_1 = (wasm2js_i32$0 = $1944($10_1, 0), wasm2js_i32$1 = 0, wasm2js_i32$2 = $0_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
    $11_1 = (wasm2js_i32$0 = $1944($9, 28), wasm2js_i32$1 = 0, wasm2js_i32$2 = $0_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
    $0_1 = (wasm2js_i32$0 = $1944($9, 36), wasm2js_i32$1 = 0, wasm2js_i32$2 = $0_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
    $12_1 = 0;
    break label$1;
   }
   $1_1 = $484($0_1, $1_1);
   if (($1_1 | 0) < 0) {
    $1_1 = 0;
    $12_1 = 1;
    break label$1;
   }
   $0_1 = $1944($0_1, 4) + $1_1 | 0;
   $1_1 = $1940($0_1, 2);
   $1_1 = ($1_1 << 8 | $1_1 >>> 8) << 16 >> 16;
   $10_1 = $1940($0_1, 4);
   $10_1 = ($10_1 << 8 | $10_1 >>> 8) << 16 >> 16;
   $11_1 = $1940($0_1, 6);
   $11_1 = ($11_1 << 8 | $11_1 >>> 8) << 16 >> 16;
   $0_1 = $1940($0_1, 8);
   $0_1 = ($0_1 << 8 | $0_1 >>> 8) << 16 >> 16;
   $12_1 = 0;
  }
  label$4 : {
   label$5 : {
    if ($12_1) {
     if ($4_1) {
      $1973($4_1, 0, 0)
     }
     if ($5_1) {
      $1973($5_1, 0, 0)
     }
     if ($6_1) {
      $1973($6_1, 0, 0)
     }
     $0_1 = 0;
     if ($7_1) {
      break label$5
     }
     break label$4;
    }
    if ($4_1) {
     label$11 : {
      label$12 : {
       $8 = Math_fround(Math_fround(Math_fround($1_1 | 0) * $2_1) + Math_fround(0.0));
       if (!($8 >= Math_fround(0.0))) {
        if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
         $1_1 = ~~$8
        } else {
         $1_1 = -2147483648
        }
        if ($8 != Math_fround($1_1 | 0)) {
         break label$12
        }
       }
       $1_1 = ~~$8;
       if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
        break label$11
       }
       $1_1 = -2147483648;
       break label$11;
      }
      $1_1 = $1_1 - 1 | 0;
     }
     $8 = Math_fround($1_1 | 0);
     label$17 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $1_1 = ~~$8;
       break label$17;
      }
      $1_1 = -2147483648;
     }
     $1973($4_1, 0, $1_1);
    }
    if ($5_1) {
     label$20 : {
      label$21 : {
       $8 = Math_fround(Math_fround(Math_fround(0 - $0_1 | 0) * $3) + Math_fround(0.0));
       if (!($8 >= Math_fround(0.0))) {
        if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
         $0_1 = ~~$8
        } else {
         $0_1 = -2147483648
        }
        if ($8 != Math_fround($0_1 | 0)) {
         break label$21
        }
       }
       $0_1 = ~~$8;
       if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
        break label$20
       }
       $0_1 = -2147483648;
       break label$20;
      }
      $0_1 = $0_1 - 1 | 0;
     }
     $8 = Math_fround($0_1 | 0);
     label$26 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $0_1 = ~~$8;
       break label$26;
      }
      $0_1 = -2147483648;
     }
     $1973($5_1, 0, $0_1);
    }
    if ($6_1) {
     $2_1 = Math_fround(Math_ceil(Math_fround(Math_fround(Math_fround($11_1 | 0) * $2_1) + Math_fround(0.0))));
     label$29 : {
      if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
       $0_1 = ~~$2_1;
       break label$29;
      }
      $0_1 = -2147483648;
     }
     $1973($6_1, 0, $0_1);
    }
    if (!$7_1) {
     break label$4
    }
    $2_1 = Math_fround(Math_ceil(Math_fround(Math_fround(Math_fround(0 - $10_1 | 0) * $3) + Math_fround(0.0))));
    label$31 : {
     if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$2_1;
      break label$31;
     }
     $0_1 = -2147483648;
    }
   }
   $1973($7_1, 0, $0_1);
  }
  global$0 = $9 + 48 | 0;
 }
 
 function $450($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = 0, $21_1 = 0, $22_1 = 0, $23_1 = 0, $24 = 0, $25_1 = 0, $26_1 = 0, $27_1 = 0, $28_1 = 0;
  if (($2_1 | 0) > 0) {
   while (1) {
    $1973(($3 << 4) + $1_1 | 0, 12, $3);
    $3 = $3 + 1 | 0;
    if (($3 | 0) != ($2_1 | 0)) {
     continue
    }
    break;
   }
  }
  if ($2_1 >>> 0 >= 2) {
   $1685($1_1, $2_1, 16, 14)
  }
  if (($2_1 | 0) > 0) {
   $23_1 = $0_1 + 24 | 0;
   $3 = 0;
   while (1) {
    $28_1 = $3;
    label$6 : {
     label$7 : {
      $19 = ($3 << 4) + $1_1 | 0;
      $21_1 = $1941($19, 4);
      if ($21_1) {
       $20_1 = $1941($19, 6);
       if ($20_1) {
        break label$7
       }
      }
      $1973($19, 8, 0);
      break label$6;
     }
     $12_1 = 0;
     $10_1 = 0;
     $8 = 0;
     $5_1 = $1944($0_1, 8);
     $4_1 = ($5_1 + $21_1 | 0) - 1 | 0;
     $13 = $4_1 - (($4_1 | 0) % ($5_1 | 0) | 0) | 0;
     $24 = $1944($0_1, 0);
     label$9 : {
      if (($13 | 0) > ($24 | 0)) {
       break label$9
      }
      $25_1 = $1944($0_1, 4);
      if (($25_1 | 0) < ($20_1 | 0)) {
       break label$9
      }
      $10_1 = 1073741824;
      $8 = 1073741824;
      $15_1 = $1944($23_1, 0);
      $17_1 = $1941($15_1, 0);
      $3 = $17_1 + $13 | 0;
      if (($3 | 0) <= ($24 | 0)) {
       $14 = $1944($0_1, 16);
       $11_1 = $17_1;
       $4_1 = 1073741824;
       $5_1 = 0;
       $6_1 = $15_1;
       $9 = $23_1;
       $7_1 = 1073741824;
       while (1) {
        $10_1 = $7_1;
        $18_1 = $9;
        $12_1 = $5_1;
        $9 = $4_1;
        $26_1 = $3;
        $16_1 = $11_1;
        $4_1 = $11_1;
        $7_1 = 0;
        $3 = 0;
        $5_1 = 0;
        $22_1 = $6_1;
        if (($13 | 0) > 0) {
         while (1) {
          $8 = $4_1;
          $11_1 = $6_1;
          $4_1 = $1941($6_1, 2);
          label$14 : {
           if (($5_1 | 0) < ($4_1 | 0)) {
            $5_1 = Math_imul($4_1 - $5_1 | 0, $3);
            $27_1 = $1941($1944($11_1, 4), 0);
            if ($8 >>> 0 < $16_1 >>> 0) {
             $6_1 = $4_1;
             $8 = $27_1 - $16_1 | 0;
             break label$14;
            }
            $6_1 = $4_1;
            $8 = $27_1 - $8 | 0;
            break label$14;
           }
           $6_1 = $5_1;
           $8 = $1941($1944($11_1, 4), 0) - $8 | 0;
           $8 = ($3 + $8 | 0) > ($13 | 0) ? $13 - $3 | 0 : $8;
           $5_1 = Math_imul($8, $6_1 - $4_1 | 0);
          }
          $11_1 = $1944($11_1, 4);
          $4_1 = $1941($11_1, 0);
          $7_1 = $5_1 + $7_1 | 0;
          $3 = $3 + $8 | 0;
          $5_1 = $6_1;
          $6_1 = $11_1;
          if (($4_1 | 0) < ($26_1 | 0)) {
           continue
          }
          break;
         }
        }
        $3 = $7_1;
        $6_1 = $5_1;
        label$17 : {
         if (!$14) {
          $4_1 = ($6_1 | 0) < ($10_1 | 0);
          $7_1 = $4_1 ? $6_1 : $10_1;
          $5_1 = $4_1 ? $18_1 : $12_1;
          $4_1 = $9;
          break label$17;
         }
         label$19 : {
          if (($6_1 + $20_1 | 0) > ($25_1 | 0)) {
           break label$19
          }
          if (($6_1 | 0) >= ($10_1 | 0)) {
           if (($6_1 | 0) != ($10_1 | 0)) {
            break label$19
           }
           $7_1 = $10_1;
           $5_1 = $12_1;
           $4_1 = $9;
           if (($3 | 0) >= ($4_1 | 0)) {
            break label$17
           }
          }
          $7_1 = $6_1;
          $5_1 = $18_1;
          $4_1 = $3;
          break label$17;
         }
         $7_1 = $10_1;
         $5_1 = $12_1;
         $4_1 = $9;
        }
        $9 = $22_1 + 4 | 0;
        $10_1 = $7_1;
        $12_1 = $5_1;
        $8 = $4_1;
        $6_1 = $1944($22_1, 4);
        $11_1 = $1941($6_1, 0);
        $3 = $11_1 + $13 | 0;
        if (($24 | 0) >= ($3 | 0)) {
         continue
        }
        break;
       };
      }
      $7_1 = $8;
      $3 = 0;
      if ($12_1) {
       $3 = $1941($1944($12_1, 0), 0)
      }
      $8 = $3;
      if (($1944($0_1, 16) | 0) != 1) {
       break label$9
      }
      $3 = $15_1;
      if (($13 | 0) > ($17_1 | 0)) {
       while (1) {
        $3 = $1944($3, 4);
        if (($1941($3, 0) | 0) < ($13 | 0)) {
         continue
        }
        break;
       }
      }
      $11_1 = $8;
      $4_1 = $12_1;
      $6_1 = $3;
      $3 = $15_1;
      $9 = $23_1;
      $5_1 = $10_1;
      while (1) {
       $18_1 = $5_1;
       $15_1 = $4_1;
       $12_1 = $11_1;
       $10_1 = $7_1;
       $22_1 = $6_1;
       $17_1 = $1941($6_1, 0);
       $16_1 = $17_1 - $13 | 0;
       $7_1 = $9;
       $5_1 = $3;
       while (1) {
        $11_1 = $7_1;
        $3 = $5_1;
        $7_1 = $3 + 4 | 0;
        $5_1 = $1944($3, 4);
        if (($1941($5_1, 0) | 0) <= ($16_1 | 0)) {
         continue
        }
        break;
       };
       $5_1 = 0;
       $7_1 = 0;
       $4_1 = 0;
       $8 = $3;
       $6_1 = $1941($3, 0);
       if ($17_1 >>> 0 > $6_1 >>> 0) {
        while (1) {
         $26_1 = $5_1;
         $14 = $6_1 & 65535;
         $6_1 = $8;
         $5_1 = $1941($6_1, 2);
         label$29 : {
          if (($4_1 | 0) < ($5_1 | 0)) {
           $4_1 = Math_imul($5_1 - $4_1 | 0, $7_1);
           $9 = $1941($1944($6_1, 4), 0);
           if (($14 | 0) < ($16_1 | 0)) {
            $8 = $5_1;
            $14 = $9 - $16_1 | 0;
            break label$29;
           }
           $8 = $5_1;
           $14 = $9 - $14 | 0;
           break label$29;
          }
          $8 = $4_1;
          $9 = $1941($1944($6_1, 4), 0) - $14 | 0;
          $9 = ($7_1 + $9 | 0) > ($13 | 0) ? $13 - $7_1 | 0 : $9;
          $14 = $9;
          $4_1 = Math_imul($9, $4_1 - $5_1 | 0);
         }
         $9 = $1944($6_1, 4);
         $6_1 = $1941($9, 0);
         $5_1 = $4_1 + $26_1 | 0;
         $7_1 = $7_1 + $14 | 0;
         $4_1 = $8;
         $8 = $9;
         if ($6_1 >>> 0 < $17_1 >>> 0) {
          continue
         }
         break;
        }
       }
       $8 = $5_1;
       label$32 : {
        label$33 : {
         $7_1 = $4_1;
         if (($4_1 + $20_1 | 0) > ($25_1 | 0) | ($4_1 | 0) > ($18_1 | 0)) {
          break label$33
         }
         if (!(($7_1 | 0) < ($18_1 | 0) | ($8 | 0) < ($10_1 | 0))) {
          if (($8 | 0) != ($10_1 | 0)) {
           break label$33
          }
          $5_1 = $18_1;
          $9 = $10_1;
          $6_1 = $12_1;
          if (($16_1 | 0) >= ($6_1 | 0)) {
           break label$32
          }
         }
         $5_1 = $7_1;
         $6_1 = $16_1;
         $9 = $8;
         $15_1 = $11_1;
         break label$32;
        }
        $5_1 = $18_1;
        $6_1 = $12_1;
        $9 = $10_1;
       }
       $4_1 = $15_1;
       $7_1 = $9;
       $9 = $11_1;
       $12_1 = $4_1;
       $10_1 = $5_1;
       $11_1 = $6_1;
       $8 = $6_1;
       $6_1 = $1944($22_1, 4);
       if ($6_1) {
        continue
       }
       break;
      };
     }
     label$35 : {
      $3 = $12_1;
      if (!$3) {
       break label$35
      }
      $4_1 = $10_1 + $20_1 | 0;
      if (($1944($0_1, 4) | 0) < ($4_1 | 0)) {
       break label$35
      }
      $9 = $1944($0_1, 28);
      if (!$9) {
       break label$35
      }
      $1970($9, 2, $4_1);
      $1970($9, 0, $8);
      $1973($0_1, 28, $1944($9, 4));
      $7_1 = $1944($3, 0);
      if (($1941($7_1, 0) | 0) < ($8 | 0)) {
       $3 = $7_1 + 4 | 0;
       $7_1 = $1944($7_1, 4);
      }
      $1973($3, 0, $9);
      $3 = $7_1;
      $7_1 = $1944($3, 4);
      label$38 : {
       if (!$7_1) {
        break label$38
       }
       $6_1 = $8 + $21_1 | 0;
       $5_1 = $3 + 4 | 0;
       $4_1 = $3;
       while (1) {
        $3 = $7_1;
        if (($1941($3, 0) | 0) > ($6_1 | 0)) {
         $3 = $4_1;
         break label$38;
        }
        $1973($5_1, 0, $1944($0_1, 28));
        $1973($0_1, 28, $4_1);
        $5_1 = $3 + 4 | 0;
        $4_1 = $3;
        $7_1 = $1944($3, 4);
        if ($7_1) {
         continue
        }
        break;
       };
      }
      $1973($9, 4, $3);
      $4_1 = $8 + $21_1 | 0;
      if (($1941($3, 0) | 0) < ($4_1 | 0)) {
       $1970($3, 0, $4_1)
      }
      $1970($19, 10, $10_1);
      $1970($19, 8, $8);
      break label$6;
     }
     $1973($19, 8, -1);
    }
    $3 = $28_1 + 1 | 0;
    if (($3 | 0) != ($2_1 | 0)) {
     continue
    }
    break;
   };
  }
  if ($2_1 >>> 0 >= 2) {
   $1685($1_1, $2_1, 16, 15)
  }
  if (($2_1 | 0) > 0) {
   $3 = 1;
   $7_1 = 0;
   while (1) {
    $0_1 = $3;
    $4_1 = ($7_1 << 4) + $1_1 | 0;
    if (($1941($4_1, 8) | 0) != 65535) {
     $3 = 0
    } else {
     $3 = ($1941($4_1, 10) | 0) == 65535
    }
    $1973($4_1, 12, $3 ^ 1);
    $3 = $3 ? 0 : $0_1;
    $7_1 = $7_1 + 1 | 0;
    if (($7_1 | 0) != ($2_1 | 0)) {
     continue
    }
    break;
   };
  }
 }
 
 function $451($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = 0, $19 = 0, $20_1 = Math_fround(0), $21_1 = Math_fround(0), $22_1 = Math_fround(0), $23_1 = 0, $24 = 0, $25_1 = Math_fround(0), $26_1 = Math_fround(0), $27_1 = Math_fround(0), $28_1 = 0, $29_1 = 0, $30 = 0, $31_1 = Math_fround(0), $32_1 = Math_fround(0), $33_1 = Math_fround(0);
  $10_1 = global$0 - 96 | 0;
  global$0 = $10_1;
  label$1 : {
   if (!$1944($0_1 + 60 | 0, 0)) {
    $3 = $1944($0_1, 4);
    $1_1 = $484($0_1, $1_1);
    $1973($2_1, 0, 0);
    if (($1_1 | 0) < 0) {
     break label$1
    }
    $7_1 = $1_1 + $3 | 0;
    $1_1 = $1940($7_1, 0);
    $1_1 = ($1_1 << 8 | $1_1 >>> 8) << 16 >> 16;
    label$3 : {
     if (($1_1 | 0) > 0) {
      $28_1 = $7_1 + 10 | 0;
      $23_1 = $1_1 << 1;
      $5_1 = $28_1 + $23_1 | 0;
      $4_1 = $1937($5_1, 1);
      $1_1 = $1937($5_1, 0);
      $3 = 0;
      $0_1 = $5_1 - 2 | 0;
      $24 = $1937($0_1, 0) << 8 | $1937($0_1, 1);
      $11_1 = $16(Math_imul($24 + $23_1 | 0, 14) + 14 | 0);
      if ($11_1) {
       $0_1 = 0;
       $3 = ($5_1 + ($4_1 | $1_1 << 8) | 0) + 2 | 0;
       while (1) {
        $1_1 = $12_1;
        $4_1 = $11_1 + Math_imul($1_1 + $23_1 | 0, 14) | 0;
        label$7 : {
         if (!($6_1 & 255)) {
          $0_1 = $1937($3, 0);
          if (!($0_1 & 8)) {
           $5_1 = $3 + 1 | 0;
           break label$7;
          }
          $5_1 = $3 + 2 | 0;
          $6_1 = $1937($3, 1);
          break label$7;
         }
         $5_1 = $3;
         $6_1 = $6_1 - 1 | 0;
        }
        $3 = $0_1;
        $1968($4_1, 12, $3);
        $0_1 = $3;
        $12_1 = $1_1 + 1 | 0;
        $3 = $5_1;
        if (($1_1 | 0) != ($24 | 0)) {
         continue
        }
        break;
       };
       $0_1 = 0;
       $4_1 = $5_1;
       $6_1 = 0;
       while (1) {
        $1_1 = $0_1;
        $3 = $11_1 + Math_imul($23_1 + $1_1 | 0, 14) | 0;
        $5_1 = $1937($3, 12);
        label$11 : {
         if ($5_1 & 2) {
          $0_1 = $1937($4_1, 0);
          $6_1 = ($5_1 & 16 ? $0_1 : 0 - $0_1 | 0) + $6_1 | 0;
          $4_1 = $4_1 + 1 | 0;
          break label$11;
         }
         if ($5_1 & 16) {
          break label$11
         }
         $6_1 = ($1937($4_1, 0) << 8 | $1937($4_1, 1)) + $6_1 | 0;
         $4_1 = $4_1 + 2 | 0;
        }
        $1970($3, 0, $6_1);
        $0_1 = $1_1 + 1 | 0;
        if (($1_1 | 0) != ($24 | 0)) {
         continue
        }
        break;
       };
       $0_1 = 0;
       $6_1 = 0;
       while (1) {
        $1_1 = $0_1;
        $3 = $11_1 + Math_imul($23_1 + $1_1 | 0, 14) | 0;
        $5_1 = $1937($3, 12);
        label$15 : {
         if ($5_1 & 4) {
          $0_1 = $1937($4_1, 0);
          $6_1 = ($5_1 & 32 ? $0_1 : 0 - $0_1 | 0) + $6_1 | 0;
          $4_1 = $4_1 + 1 | 0;
          break label$15;
         }
         if ($5_1 & 32) {
          break label$15
         }
         $6_1 = ($1937($4_1, 0) << 8 | $1937($4_1, 1)) + $6_1 | 0;
         $4_1 = $4_1 + 2 | 0;
        }
        $1970($3, 2, $6_1);
        $0_1 = $1_1 + 1 | 0;
        if (($1_1 | 0) != ($24 | 0)) {
         continue
        }
        break;
       };
       $4_1 = 0;
       $3 = 0;
       $0_1 = 0;
       $5_1 = 0;
       $7_1 = 0;
       $1_1 = 0;
       $12_1 = 0;
       $6_1 = 0;
       while (1) {
        $18_1 = $7_1;
        $7_1 = $5_1;
        $5_1 = $0_1;
        $0_1 = $4_1;
        $4_1 = $3;
        $13 = $3 + $23_1 | 0;
        $9 = $11_1 + Math_imul($13, 14) | 0;
        $29_1 = $1937($9, 12);
        $8 = $1939($9, 2);
        $9 = $1939($9, 0);
        label$19 : {
         if (($3 | 0) == ($14 | 0)) {
          if ($4_1) {
           label$23 : {
            if ($30) {
             if ($19) {
              $3 = $11_1 + Math_imul($0_1, 14) | 0;
              $1970($3, 6, $12_1);
              $1970($3, 4, $6_1);
              $1970($3, 2, $7_1 + $12_1 >>> 1 | 0);
              $1970($3, 0, $6_1 + $15_1 >>> 1 | 0);
              $1968($3, 12, 3);
              $0_1 = $0_1 + 1 | 0;
             }
             $3 = $11_1 + Math_imul($0_1, 14) | 0;
             $1970($3, 4, $15_1);
             $1970($3, 2, $18_1);
             $1970($3, 0, $1_1);
             $1968($3, 12, 3);
             $1_1 = $7_1;
             break label$23;
            }
            $14 = $11_1 + Math_imul($0_1, 14) | 0;
            $3 = $14 + 12 | 0;
            if ($19) {
             $1968($3, 0, 3);
             $1970($14, 0, $1_1);
             $1970($14, 4, $6_1);
             $1970($14, 2, $18_1);
             $1_1 = $12_1;
             break label$23;
            }
            $1968($3, 0, 2);
            $1970($14, 0, $1_1);
            $1970($14, 4, 0);
            $1970($14, 2, $18_1);
            $1_1 = 0;
           }
           $14 = $1_1;
           $1970($11_1 + Math_imul($0_1, 14) | 0, 6, $14);
           $0_1 = $0_1 + 1 | 0;
          }
          $14 = $29_1 & 1;
          label$28 : {
           if ($14) {
            $3 = $9;
            $1_1 = $8;
            break label$28;
           }
           $7_1 = $11_1 + Math_imul($13 + 1 | 0, 14) | 0;
           $1_1 = $1939($7_1, 0);
           if (!($1937($7_1, 12) & 1)) {
            $3 = $1_1 + $9 >> 1;
            $1_1 = $1939($7_1, 2) + $8 >> 1;
            $15_1 = $9;
            $7_1 = $8;
            break label$28;
           }
           $3 = $1_1 & 65535;
           $1_1 = $1941($7_1, 2);
           $15_1 = $9;
           $7_1 = $8;
           $4_1 = $4_1 + 1 | 0;
          }
          $9 = $4_1;
          $4_1 = $11_1 + Math_imul($0_1, 14) | 0;
          $1972($4_1, 4, 0);
          $18_1 = $1_1;
          $1970($4_1, 2, $1_1);
          $1_1 = $3;
          $1970($4_1, 0, $1_1);
          $1968($4_1, 12, 1);
          $19 = 0;
          $30 = !$14;
          $4_1 = ($5_1 << 1) + $28_1 | 0;
          $14 = ($1937($4_1, 0) << 8 | $1937($4_1, 1)) + 1 | 0;
          $5_1 = $5_1 + 1 | 0;
          $4_1 = $0_1 + 1 | 0;
          $13 = 1;
          break label$19;
         }
         if (!($29_1 & 1)) {
          if (!$19) {
           $19 = 1;
           $6_1 = $9;
           $12_1 = $8;
           $9 = $4_1;
           $4_1 = $0_1;
           $13 = 0;
           break label$19;
          }
          $3 = $11_1 + Math_imul($0_1, 14) | 0;
          $1970($3, 6, $12_1);
          $1970($3, 4, $6_1);
          $1970($3, 2, $8 + $12_1 >>> 1 | 0);
          $1970($3, 0, $6_1 + $9 >>> 1 | 0);
          $1968($3, 12, 3);
          $19 = 1;
          $6_1 = $9;
          $12_1 = $8;
          $9 = $4_1;
          $4_1 = $0_1 + 1 | 0;
          $13 = 0;
          break label$19;
         }
         $13 = $11_1 + Math_imul($0_1, 14) | 0;
         $3 = $13 + 12 | 0;
         label$33 : {
          if ($19) {
           $1968($3, 0, 3);
           $1970($13, 0, $9);
           $1970($13, 4, $6_1);
           $1970($13, 2, $8);
           $3 = $12_1;
           break label$33;
          }
          $1968($3, 0, 2);
          $1970($13, 0, $9);
          $1970($13, 4, 0);
          $1970($13, 2, $8);
          $3 = 0;
         }
         $1970($13, 6, $3);
         $19 = 0;
         $9 = $4_1;
         $4_1 = $0_1 + 1 | 0;
         $13 = 1;
        }
        $3 = $9 + 1 | 0;
        $0_1 = $5_1;
        $8 = $7_1;
        $5_1 = $8;
        $7_1 = $18_1;
        if (($9 | 0) < ($24 | 0)) {
         continue
        }
        break;
       };
       label$35 : {
        if ($30) {
         if (!$13) {
          $0_1 = $11_1 + Math_imul($4_1, 14) | 0;
          $1970($0_1, 6, $12_1);
          $1970($0_1, 4, $6_1);
          $1970($0_1, 2, $8 + $12_1 >>> 1 | 0);
          $1970($0_1, 0, $6_1 + $15_1 >>> 1 | 0);
          $1968($0_1, 12, 3);
          $4_1 = $4_1 + 1 | 0;
         }
         $5_1 = $4_1;
         $0_1 = $11_1 + Math_imul($5_1, 14) | 0;
         $1970($0_1, 4, $15_1);
         $1970($0_1, 2, $18_1);
         $1970($0_1, 0, $1_1);
         $1968($0_1, 12, 3);
         $3 = $8;
         break label$35;
        }
        $3 = $11_1 + Math_imul($4_1, 14) | 0;
        $0_1 = $3 + 12 | 0;
        if (!$13) {
         $1968($0_1, 0, 3);
         $1970($3, 0, $1_1);
         $1970($3, 4, $6_1);
         $1970($3, 2, $18_1);
         $5_1 = $4_1;
         $3 = $12_1;
         break label$35;
        }
        $1968($0_1, 0, 2);
        $1970($3, 0, $1_1);
        $1970($3, 4, 0);
        $1970($3, 2, $18_1);
        $5_1 = $4_1;
        $3 = 0;
       }
       $1970($11_1 + Math_imul($5_1, 14) | 0, 6, $3);
       $3 = $5_1 + 1 | 0;
      }
      $5_1 = 0;
      $4_1 = $11_1;
      if ($4_1) {
       break label$3
      }
      break label$1;
     }
     $3 = 0;
     if (($1_1 | 0) != -1) {
      break label$3
     }
     $5_1 = 1;
     $1_1 = $7_1 + 10 | 0;
     while (1) {
      label$40 : {
       $6_1 = $4_1;
       $4_1 = $3;
       $9 = $5_1;
       if (!$5_1) {
        break label$40
       }
       $1973($10_1, 48, 0);
       $5_1 = $1_1 + 4 | 0;
       $12_1 = $1937($1_1, 2) << 8;
       $7_1 = $1937($1_1, 3);
       $15_1 = $1937($1_1, 1);
       label$43 : {
        if (!($15_1 & 2)) {
         $16_1 = Math_fround(0.0);
         $27_1 = Math_fround(0.0);
         break label$43;
        }
        $8 = $1937($5_1, 0);
        if ($15_1 & 1) {
         $5_1 = $1_1 + 8 | 0;
         $3 = $1940($1_1, 6);
         $16_1 = Math_fround(($3 << 8 | $3 >>> 8) << 16 >> 16);
         $27_1 = Math_fround(($1937($1_1, 5) | $8 << 8) << 16 >> 16);
         break label$43;
        }
        $5_1 = $1_1 + 6 | 0;
        $16_1 = Math_fround($1936($1_1, 5) | 0);
        $27_1 = Math_fround($8 << 24 >> 24);
       }
       $31_1 = $16_1;
       $7_1 = $7_1 | $12_1;
       label$46 : {
        if ($15_1 & 8) {
         $1_1 = $1940($5_1, 0);
         $16_1 = Math_fround(Math_fround(($1_1 << 8 | $1_1 >>> 8) << 16 >> 16) * Math_fround(.00006103515625));
         $20_1 = $16_1;
         $21_1 = Math_fround(0.0);
         $22_1 = Math_fround(0.0);
         $5_1 = $5_1 + 2 | 0;
         break label$46;
        }
        if ($15_1 & 64) {
         $1_1 = $1940($5_1, 2);
         $20_1 = Math_fround(Math_fround(($1_1 << 8 | $1_1 >>> 8) << 16 >> 16) * Math_fround(.00006103515625));
         $21_1 = Math_fround(0.0);
         $22_1 = Math_fround(0.0);
         $1_1 = $1940($5_1, 0);
         $16_1 = Math_fround(Math_fround(($1_1 << 8 | $1_1 >>> 8) << 16 >> 16) * Math_fround(.00006103515625));
         $5_1 = $5_1 + 4 | 0;
         break label$46;
        }
        if ($15_1 << 24 >> 24 >= 0) {
         $20_1 = Math_fround(1.0);
         $21_1 = Math_fround(0.0);
         $22_1 = Math_fround(0.0);
         $16_1 = Math_fround(1.0);
         break label$46;
        }
        $1_1 = $1940($5_1, 6);
        $20_1 = Math_fround(Math_fround(($1_1 << 8 | $1_1 >>> 8) << 16 >> 16) * Math_fround(.00006103515625));
        $1_1 = $1940($5_1, 4);
        $21_1 = Math_fround(Math_fround(($1_1 << 8 | $1_1 >>> 8) << 16 >> 16) * Math_fround(.00006103515625));
        $1_1 = $1940($5_1, 2);
        $22_1 = Math_fround(Math_fround(($1_1 << 8 | $1_1 >>> 8) << 16 >> 16) * Math_fround(.00006103515625));
        $1_1 = $1940($5_1, 0);
        $16_1 = Math_fround(Math_fround(($1_1 << 8 | $1_1 >>> 8) << 16 >> 16) * Math_fround(.00006103515625));
        $5_1 = $5_1 + 8 | 0;
       }
       $12_1 = $5_1;
       label$50 : {
        label$51 : {
         $7_1 = $451($0_1, $7_1, $10_1 + 48 | 0);
         label$52 : {
          if (($7_1 | 0) <= 0) {
           $5_1 = $4_1;
           $1_1 = $6_1;
           break label$52;
          }
          $32_1 = Math_fround(Math_sqrt(Math_fround(Math_fround($21_1 * $21_1) + Math_fround($20_1 * $20_1))));
          $33_1 = Math_fround(Math_sqrt(Math_fround(Math_fround($16_1 * $16_1) + Math_fround($22_1 * $22_1))));
          $5_1 = $1944($10_1, 48);
          $1_1 = 0;
          while (1) {
           $8 = $5_1 + Math_imul($1_1, 14) | 0;
           $25_1 = Math_fround($1939($8, 0) | 0);
           $26_1 = Math_fround($1939($8, 2) | 0);
           $17_1 = Math_fround($32_1 * Math_fround($31_1 + Math_fround(Math_fround($22_1 * $25_1) + Math_fround($20_1 * $26_1))));
           label$55 : {
            if (Math_fround(Math_abs($17_1)) < Math_fround(2147483648.0)) {
             $3 = ~~$17_1;
             break label$55;
            }
            $3 = -2147483648;
           }
           $1970($8, 2, $3);
           $17_1 = Math_fround($33_1 * Math_fround($27_1 + Math_fround(Math_fround($16_1 * $25_1) + Math_fround($21_1 * $26_1))));
           label$57 : {
            if (Math_fround(Math_abs($17_1)) < Math_fround(2147483648.0)) {
             $3 = ~~$17_1;
             break label$57;
            }
            $3 = -2147483648;
           }
           $1970($8, 0, $3);
           $25_1 = Math_fround($1939($8, 4) | 0);
           $26_1 = Math_fround($1939($8, 6) | 0);
           $17_1 = Math_fround($33_1 * Math_fround($27_1 + Math_fround(Math_fround($16_1 * $25_1) + Math_fround($21_1 * $26_1))));
           label$59 : {
            if (Math_fround(Math_abs($17_1)) < Math_fround(2147483648.0)) {
             $3 = ~~$17_1;
             break label$59;
            }
            $3 = -2147483648;
           }
           $1970($8, 4, $3);
           $17_1 = Math_fround($32_1 * Math_fround($31_1 + Math_fround(Math_fround($22_1 * $25_1) + Math_fround($20_1 * $26_1))));
           label$61 : {
            if (Math_fround(Math_abs($17_1)) < Math_fround(2147483648.0)) {
             $3 = ~~$17_1;
             break label$61;
            }
            $3 = -2147483648;
           }
           $1970($8, 6, $3);
           $1_1 = $1_1 + 1 | 0;
           if (($7_1 | 0) != ($1_1 | 0)) {
            continue
           }
           break;
          };
          $5_1 = $4_1 + $7_1 | 0;
          $1_1 = $16(Math_imul($5_1, 14));
          if (!$1_1) {
           if ($6_1) {
            $17($6_1)
           }
           $1_1 = $1944($10_1, 48);
           if (!$1_1) {
            break label$51
           }
           $17($1_1);
           break label$51;
          }
          if (($4_1 | 0) > 0) {
           $1602($1_1, $6_1, Math_imul($4_1, 14))
          }
          $3 = $1944($10_1, 48);
          $1602($1_1 + Math_imul($4_1, 14) | 0, $3, Math_imul($7_1, 14));
          if ($6_1) {
           $17($6_1)
          }
          $17($3);
         }
         $4_1 = $1_1;
         $7_1 = 1;
         $3 = $5_1;
         $5_1 = $15_1 & 32;
         break label$50;
        }
        $7_1 = 0;
        $3 = $4_1;
        $4_1 = $6_1;
        $5_1 = $9;
       }
       $1_1 = $12_1;
       $6_1 = $4_1;
       if ($7_1) {
        continue
       }
      }
      break;
     };
     $4_1 = $6_1;
     $5_1 = 0;
     if ($9) {
      break label$1
     }
    }
    $1973($2_1, 0, $4_1);
    $5_1 = $3;
    break label$1;
   }
   $4_1 = $10_1 + 48 | 0;
   $1983($4_1 + 40 | 0, 0, 0, 0);
   $1983($4_1 + 32 | 0, 0, 0, 0);
   $1983($4_1 + 24 | 0, 0, 0, 0);
   $1983($4_1 + 16 | 0, 0, 0, 0);
   $1983($4_1 + 8 | 0, 0, 0, 0);
   $1983($10_1, 48, 0, 0);
   $1973($10_1, 48, 1);
   $1983($10_1 + 40 | 0, 0, 0, 0);
   $1983($10_1 + 32 | 0, 0, 0, 0);
   $1983($10_1 + 24 | 0, 0, 0, 0);
   $1983($10_1 + 16 | 0, 0, 0, 0);
   $1983($10_1 + 8 | 0, 0, 0, 0);
   $1983($10_1, 0, 0, 0);
   label$67 : {
    label$68 : {
     if (!$483($0_1, $1_1, $4_1)) {
      break label$68
     }
     $3 = $16(Math_imul($1944($10_1, 92), 14));
     $1973($2_1, 0, $3);
     $1973($10_1, 40, $3);
     if (!$483($0_1, $1_1, $10_1)) {
      break label$68
     }
     $5_1 = $1944($10_1, 44);
     break label$67;
    }
    $1973($2_1, 0, 0);
    $5_1 = 0;
   }
  }
  global$0 = $10_1 + 96 | 0;
  return $5_1;
 }
 
 function $452($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8, $9) {
  var $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0);
  label$1 : {
   while (1) {
    if (($9 | 0) > 16) {
     break label$1
    }
    $11_1 = Math_fround(Math_fround(Math_fround(Math_fround($4_1 + $4_1) + $2_1) + $6_1) * Math_fround(.25));
    $10_1 = Math_fround(Math_fround(Math_fround($2_1 + $6_1) * Math_fround(.5)) - $11_1);
    $13 = Math_fround($10_1 * $10_1);
    $10_1 = Math_fround(Math_fround(Math_fround(Math_fround($5_1 + $5_1) + $3) + $7_1) * Math_fround(.25));
    $12_1 = Math_fround(Math_fround(Math_fround($3 + $7_1) * Math_fround(.5)) - $10_1);
    if ($8 < Math_fround($13 + Math_fround($12_1 * $12_1))) {
     $9 = $9 + 1 | 0;
     $452($0_1, $1_1, $2_1, $3, Math_fround(Math_fround($2_1 + $4_1) * Math_fround(.5)), Math_fround(Math_fround($3 + $5_1) * Math_fround(.5)), $11_1, $10_1, $8, $9);
     $2_1 = $11_1;
     $3 = $10_1;
     $4_1 = Math_fround(Math_fround($4_1 + $6_1) * Math_fround(.5));
     $5_1 = Math_fround(Math_fround($5_1 + $7_1) * Math_fround(.5));
     continue;
    }
    break;
   };
   $9 = $1944($1_1, 0);
   if ($0_1) {
    $0_1 = ($9 << 3) + $0_1 | 0;
    $1986($0_1, 4, $7_1);
    $1986($0_1, 0, $6_1);
   }
   $1973($1_1, 0, $9 + 1 | 0);
  }
 }
 
 function $453($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8, $9, $10_1, $11_1) {
  var $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = Math_fround(0), $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = Math_fround(0), $19 = Math_fround(0);
  label$1 : {
   while (1) {
    if (($11_1 | 0) > 16) {
     break label$1
    }
    $12_1 = Math_fround($4_1 - $2_1);
    $13 = Math_fround($12_1 * $12_1);
    $12_1 = Math_fround($5_1 - $3);
    $13 = Math_fround(Math_sqrt(Math_fround($13 + Math_fround($12_1 * $12_1))));
    $12_1 = Math_fround($6_1 - $4_1);
    $14 = Math_fround($12_1 * $12_1);
    $12_1 = Math_fround($7_1 - $5_1);
    $13 = Math_fround($13 + Math_fround(Math_sqrt(Math_fround($14 + Math_fround($12_1 * $12_1)))));
    $12_1 = Math_fround($8 - $6_1);
    $14 = Math_fround($12_1 * $12_1);
    $12_1 = Math_fround($9 - $7_1);
    $12_1 = Math_fround($13 + Math_fround(Math_sqrt(Math_fround($14 + Math_fround($12_1 * $12_1)))));
    $13 = Math_fround($12_1 * $12_1);
    $12_1 = Math_fround($8 - $2_1);
    $14 = Math_fround($12_1 * $12_1);
    $12_1 = Math_fround($9 - $3);
    $12_1 = Math_fround(Math_sqrt(Math_fround($14 + Math_fround($12_1 * $12_1))));
    if ($10_1 < Math_fround($13 - Math_fround($12_1 * $12_1))) {
     $12_1 = Math_fround(Math_fround($2_1 + $4_1) * Math_fround(.5));
     $15_1 = Math_fround(Math_fround($4_1 + $6_1) * Math_fround(.5));
     $4_1 = Math_fround(Math_fround($12_1 + $15_1) * Math_fround(.5));
     $16_1 = Math_fround(Math_fround($3 + $5_1) * Math_fround(.5));
     $17_1 = Math_fround(Math_fround($5_1 + $7_1) * Math_fround(.5));
     $5_1 = Math_fround(Math_fround($16_1 + $17_1) * Math_fround(.5));
     $18_1 = $2_1;
     $19 = $3;
     $13 = $4_1;
     $14 = $5_1;
     $6_1 = Math_fround(Math_fround($6_1 + $8) * Math_fround(.5));
     $4_1 = Math_fround(Math_fround($15_1 + $6_1) * Math_fround(.5));
     $2_1 = Math_fround(Math_fround($13 + $4_1) * Math_fround(.5));
     $7_1 = Math_fround(Math_fround($7_1 + $9) * Math_fround(.5));
     $5_1 = Math_fround(Math_fround($17_1 + $7_1) * Math_fround(.5));
     $3 = Math_fround(Math_fround($14 + $5_1) * Math_fround(.5));
     $11_1 = $11_1 + 1 | 0;
     $453($0_1, $1_1, $18_1, $19, $12_1, $16_1, $13, $14, $2_1, $3, $10_1, $11_1);
     continue;
    }
    break;
   };
   $11_1 = $1944($1_1, 0);
   if ($0_1) {
    $0_1 = ($11_1 << 3) + $0_1 | 0;
    $1986($0_1, 4, $9);
    $1986($0_1, 0, $8);
   }
   $1973($1_1, 0, $11_1 + 1 | 0);
  }
 }
 
 function $454($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = 0, $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = 0;
  $5_1 = global$0 - 32 | 0;
  global$0 = $5_1;
  if (($1_1 | 0) >= 13) {
   while (1) {
    $14 = $1_1;
    $10_1 = $1963($0_1, 4);
    $2_1 = Math_imul($1_1 >>> 1 | 0, 20) + $0_1 | 0;
    $12_1 = $1963($2_1, 4);
    $6_1 = $0_1;
    $4_1 = $1_1 - 1 | 0;
    $13 = $1963($0_1 + Math_imul($4_1, 20) | 0, 4);
    $0_1 = $12_1 < $13;
    if (($10_1 < $12_1 | 0) != ($0_1 | 0)) {
     $7_1 = $5_1 + 8 | 0;
     $1_1 = $7_1 + 16 | 0;
     $0_1 = $6_1 + Math_imul($0_1 ^ $10_1 < $13 ? $4_1 : 0, 20) | 0;
     $3 = $0_1 + 16 | 0;
     $1973($1_1, 0, $1944($3, 0));
     $8 = $7_1 + 8 | 0;
     $9 = $0_1 + 8 | 0;
     $1983($8, 0, $1959($9, 0), i64toi32_i32$HIGH_BITS);
     $1983($5_1, 8, $1959($0_1, 0), i64toi32_i32$HIGH_BITS);
     $11_1 = $3;
     $3 = $2_1 + 16 | 0;
     $1973($11_1, 0, $1944($3, 0));
     $7_1 = $2_1 + 8 | 0;
     $1982($9, 0, $1959($7_1, 0), i64toi32_i32$HIGH_BITS);
     $1982($0_1, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
     $1973($3, 0, $1944($1_1, 0));
     $1982($7_1, 0, $1960($8, 0), i64toi32_i32$HIGH_BITS);
     $1982($2_1, 0, $1960($5_1, 8), i64toi32_i32$HIGH_BITS);
    }
    $1_1 = $5_1 + 8 | 0;
    $9 = $1_1 + 16 | 0;
    $0_1 = $6_1 + 16 | 0;
    $1973($9, 0, $1944($0_1, 0));
    $7_1 = $1_1 + 8 | 0;
    $1_1 = $6_1 + 8 | 0;
    $1983($7_1, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
    $1983($5_1, 8, $1959($6_1, 0), i64toi32_i32$HIGH_BITS);
    $8 = $0_1;
    $0_1 = $2_1 + 16 | 0;
    $1973($8, 0, $1944($0_1, 0));
    $3 = $2_1 + 8 | 0;
    $1982($1_1, 0, $1959($3, 0), i64toi32_i32$HIGH_BITS);
    $1982($6_1, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
    $1973($0_1, 0, $1944($9, 0));
    $1982($3, 0, $1960($7_1, 0), i64toi32_i32$HIGH_BITS);
    $1982($2_1, 0, $1960($5_1, 8), i64toi32_i32$HIGH_BITS);
    $1_1 = 1;
    $0_1 = $4_1;
    while (1) {
     $4_1 = $0_1;
     $10_1 = $1963($6_1, 4);
     $0_1 = $1_1;
     while (1) {
      $1_1 = $0_1;
      $0_1 = $0_1 + 1 | 0;
      $2_1 = $6_1 + Math_imul($1_1, 20) | 0;
      if ($1963($2_1, 4) < $10_1) {
       continue
      }
      break;
     };
     while (1) {
      $0_1 = $4_1;
      $4_1 = $0_1 - 1 | 0;
      $3 = $6_1 + Math_imul($0_1, 20) | 0;
      if ($1963($3, 4) > $10_1) {
       continue
      }
      break;
     };
     if (($0_1 | 0) > ($1_1 | 0)) {
      $4_1 = $2_1 + 16 | 0;
      $1973($9, 0, $1944($4_1, 0));
      $8 = $2_1 + 8 | 0;
      $1983($7_1, 0, $1959($8, 0), i64toi32_i32$HIGH_BITS);
      $1983($5_1, 8, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
      $11_1 = $4_1;
      $4_1 = $3 + 16 | 0;
      $1973($11_1, 0, $1944($4_1, 0));
      $11_1 = $8;
      $8 = $3 + 8 | 0;
      $1982($11_1, 0, $1959($8, 0), i64toi32_i32$HIGH_BITS);
      $1982($2_1, 0, $1959($3, 0), i64toi32_i32$HIGH_BITS);
      $1973($4_1, 0, $1944($9, 0));
      $1982($8, 0, $1960($7_1, 0), i64toi32_i32$HIGH_BITS);
      $1982($3, 0, $1960($5_1, 8), i64toi32_i32$HIGH_BITS);
      $1_1 = $1_1 + 1 | 0;
      $0_1 = $0_1 - 1 | 0;
      continue;
     }
     break;
    };
    $1_1 = $14 - $1_1 | 0;
    label$8 : {
     if (($1_1 | 0) > ($0_1 | 0)) {
      $454($6_1, $0_1);
      $0_1 = $2_1;
      break label$8;
     }
     $454($2_1, $1_1);
     $1_1 = $0_1;
     $0_1 = $6_1;
    }
    if (($1_1 | 0) > 12) {
     continue
    }
    break;
   }
  }
  global$0 = $5_1 + 32 | 0;
 }
 
 function $456($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8, $9, $10_1, $11_1) {
  var $12_1 = 0, $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = 0, $16_1 = 0, $17_1 = 0;
  label$1 : {
   if (!$1_1) {
    $14 = $11_1;
    $13 = $5_1;
    break label$1;
   }
   $13 = $1963($1_1, 52);
   $14 = $1963($1_1, 56);
   $13 = $11_1 < $13 ? $13 : $11_1 > $14 ? $14 : $11_1;
   label$3 : {
    if ($11_1 == $13) {
     $11_1 = $5_1;
     break label$3;
    }
    $11_1 = Math_fround(Math_fround($13 - $11_1) * Math_fround(.5));
    label$5 : {
     if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
      $12_1 = ~~$11_1;
      break label$5;
     }
     $12_1 = -2147483648;
    }
    $14 = $1937($1_1, 28) ? Math_fround($12_1 | 0) : $11_1;
    $11_1 = Math_fround($14 + $5_1);
    $3 = Math_fround($14 + $3);
   }
   $5_1 = $3;
   $14 = $1963($1_1, 32);
   $3 = Math_fround($13 + Math_fround(.5));
   label$7 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $12_1 = ~~$3;
     break label$7;
    }
    $12_1 = -2147483648;
   }
   $14 = Math_fround($14 + ($1937($1_1, 28) ? Math_fround($12_1 | 0) : $13));
   $13 = $11_1;
   $3 = $5_1;
  }
  $11_1 = $3;
  $17_1 = $1944($0_1, 32);
  $12_1 = $17_1 + 1 | 0;
  $1_1 = $1944($0_1 + 36 | 0, 0);
  label$9 : {
   if (($1_1 | 0) > ($17_1 | 0)) {
    break label$9
   }
   $16_1 = $1_1;
   if ($1_1) {
    $15_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0
   } else {
    $15_1 = 8
   }
   $1_1 = ($12_1 | 0) < ($15_1 | 0) ? $15_1 : $12_1;
   if (($16_1 | 0) >= ($1_1 | 0)) {
    break label$9
   }
   $15_1 = $16(Math_imul($1_1, 40));
   $16_1 = $1944($0_1 + 40 | 0, 0);
   if ($16_1) {
    $1602($15_1, $16_1, Math_imul($1944($0_1, 32), 40));
    $17($1944($0_1, 40));
   }
   $1973($0_1, 36, $1_1);
   $1973($0_1, 40, $15_1);
  }
  $1973($0_1, 32, $12_1);
  $1_1 = $1944($0_1 + 40 | 0, 0) + Math_imul($17_1, 40) | 0;
  $1986($1_1, 36, $10_1);
  $1986($1_1, 32, $9);
  $1986($1_1, 28, $8);
  $1986($1_1, 24, $7_1);
  $1986($1_1, 20, $6_1);
  $1986($1_1, 16, $13);
  $1986($1_1, 12, $4_1);
  $1986($1_1, 8, $11_1);
  $1986($1_1, 4, $14);
  $1973($1_1, 0, $2_1 << 2 | ($4_1 != $6_1 ? ($11_1 != $13) << 1 : 0));
  $1_1 = $1944($0_1, 48);
  $2_1 = $1944($1_1, 12);
  $1968($0_1, 64, 1);
  $3 = Math_fround(Math_fround($2_1 | 0) + Math_fround(.9900000095367432));
  $4_1 = Math_fround(Math_fround(Math_fround($9 - $7_1) * Math_fround($1944($1_1, 28) | 0)) + $3);
  label$13 : {
   if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
    $12_1 = ~~$4_1;
    break label$13;
   }
   $12_1 = -2147483648;
  }
  $3 = Math_fround(Math_fround(Math_fround($10_1 - $8) * Math_fround($1944($1_1, 32) | 0)) + $3);
  label$15 : {
   if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
    $1_1 = ~~$3;
    break label$15;
   }
   $1_1 = -2147483648;
  }
  $1973($0_1, 80, Math_imul($1_1, $12_1) + $1944($0_1, 80) | 0);
 }
 
 function $458($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1982($0_1, 12, 0, 0);
  $1_1 = $1944($0_1 + 40 | 0, 0);
  if ($1_1) {
   $1982($0_1, 32, 0, 0);
   $17($1_1);
   $1973($0_1, 40, 0);
  }
  $1_1 = $1944($0_1, 8);
  if ($1_1) {
   $1982($0_1, 0, 0, 0);
   $17($1_1);
   $1973($0_1, 8, 0);
  }
  $1_1 = $1944($0_1 + 28 | 0, 0);
  if ($1_1) {
   $1982($0_1, 20, 0, 0);
   $17($1_1);
   $1973($0_1, 28, 0);
  }
  $1968($0_1, 64, 1);
  $1982($0_1, 44, 0, 0);
  $1973($0_1, 80, 0);
  $1982($0_1, 72, 0, 0);
 }
 
 function $459($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  $3 = $1941($0_1, 6);
  $4_1 = $1941($1_1, 6);
  $2_1 = -1;
  label$1 : {
   if ($3 >>> 0 > $4_1 >>> 0) {
    break label$1
   }
   $2_1 = 1;
   if ($3 >>> 0 < $4_1 >>> 0) {
    break label$1
   }
   $0_1 = $1941($0_1, 4);
   $1_1 = $1941($1_1, 4);
   $2_1 = $0_1 >>> 0 > $1_1 >>> 0 ? -1 : $0_1 >>> 0 < $1_1 >>> 0;
  }
  return $2_1 | 0;
 }
 
 function $460($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $0_1 = $1944($0_1, 12);
  $1_1 = $1944($1_1, 12);
  return (($0_1 | 0) < ($1_1 | 0) ? -1 : ($0_1 | 0) > ($1_1 | 0)) | 0;
 }
 
 function $461($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = 0;
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $3 = $1944($0_1, 32);
  if ($3) {
   $5_1 = $1944($0_1 + 40 | 0, 0);
   while (1) {
    $8 = $1944($5_1 + Math_imul($1_1, 40) | 0, 0) >>> 2 | 0;
    $2_1 = ($2_1 | 0) > ($8 | 0) ? $2_1 : $8;
    $8 = $2_1;
    $1_1 = $1_1 + 1 | 0;
    if (($3 | 0) != ($1_1 | 0)) {
     continue
    }
    break;
   };
  }
  $1_1 = $1944($0_1, 8);
  if ($1_1) {
   $1982($0_1, 0, 0, 0);
   $17($1_1);
   $1973($0_1, 8, 0);
  }
  $1_1 = $1944($0_1 + 28 | 0, 0);
  if ($1_1) {
   $1982($0_1, 20, 0, 0);
   $17($1_1);
   $1973($0_1, 28, 0);
  }
  $1970($0_1, 84, 0);
  $1968($0_1, 64, 0);
  $1_1 = $8 + 1 | 0;
  if (($1944($0_1, 20) | 0) < ($1_1 | 0)) {
   $2_1 = $1944($0_1, 4);
   label$2 : {
    if (($2_1 | 0) >= ($1_1 | 0)) {
     break label$2
    }
    $3 = $2_1;
    $2_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
    $2_1 = ($1_1 | 0) < ($2_1 | 0) ? $2_1 : $1_1;
    if (($3 | 0) >= ($2_1 | 0)) {
     break label$2
    }
    $3 = $16($2_1 << 2);
    $5_1 = $1944($0_1, 8);
    if ($5_1) {
     $1602($3, $5_1, $1944($0_1, 0) << 2);
     $17($1944($0_1, 8));
    }
    $1973($0_1, 4, $2_1);
    $1973($0_1, 8, $3);
   }
   $2_1 = $1944($0_1, 0);
   if (($1_1 | 0) > ($2_1 | 0)) {
    while (1) {
     $1973($1944($0_1, 8) + ($2_1 << 2) | 0, 0, -1082130432);
     $2_1 = $2_1 + 1 | 0;
     if (($2_1 | 0) != ($1_1 | 0)) {
      continue
     }
     break;
    }
   }
   $1973($0_1, 0, $1_1);
   $2_1 = $1944($0_1 + 24 | 0, 0);
   label$8 : {
    if (($2_1 | 0) >= ($1_1 | 0)) {
     break label$8
    }
    $3 = $2_1;
    $2_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
    $2_1 = ($1_1 | 0) < ($2_1 | 0) ? $2_1 : $1_1;
    if (($3 | 0) >= ($2_1 | 0)) {
     break label$8
    }
    $3 = $16($2_1 << 1);
    $5_1 = $1944($0_1 + 28 | 0, 0);
    if ($5_1) {
     $1602($3, $5_1, $1944($0_1, 20) << 1);
     $17($1944($0_1, 28));
    }
    $1973($0_1, 24, $2_1);
    $1973($0_1, 28, $3);
   }
   $2_1 = $1944($0_1, 20);
   if (($1_1 | 0) > ($2_1 | 0)) {
    while (1) {
     $1970($1944($0_1, 28) + ($2_1 << 1) | 0, 0, 65535);
     $2_1 = $2_1 + 1 | 0;
     if (($2_1 | 0) != ($1_1 | 0)) {
      continue
     }
     break;
    }
   }
   $1973($0_1, 20, $1_1);
  }
  $2_1 = $1944($0_1, 32);
  if (($2_1 | 0) > 0) {
   $1_1 = $1944($0_1, 32);
   $5_1 = ($1_1 | 0) <= 1 ? 1 : $1_1;
   $6_1 = $1944($0_1 + 40 | 0, 0);
   $4_1 = $1944($0_1, 28);
   $11_1 = $1944($0_1, 8);
   $2_1 = 0;
   while (1) {
    $9 = $6_1 + Math_imul($2_1, 40) | 0;
    $3 = $1944($9, 0);
    $1986(($3 & -4) + $11_1 | 0, 0, $1963($9, 4));
    $1970($4_1 + ($3 >>> 1 & 2147483646) | 0, 0, $2_1);
    $9 = (($3 >>> 17 | 0) + $0_1 | 0) + 84 | 0;
    $1968($9, 0, $1937($9, 0) | 1 << ($3 >>> 14 & 7));
    $2_1 = $2_1 + 1 | 0;
    if (($5_1 | 0) != ($2_1 | 0)) {
     continue
    }
    break;
   };
   $2_1 = $1_1;
  }
  label$81 : {
   label$9 : {
    if ($1944($0_1, 20) >>> 0 <= 32) {
     if ($1944($0_1, 44)) {
      break label$9
     }
     break label$81;
    }
    $3 = $1944($0_1, 44);
    $5_1 = $1944($0_1 + 40 | 0, 0);
    $1_1 = $1941($1944($0_1 + 28 | 0, 0), 64);
    if (!(($1_1 | 0) == 65535 ? $3 : $5_1 + Math_imul($1_1, 40) | 0)) {
     break label$81
    }
   }
   if (($1944(($1944($0_1 + 40 | 0, 0) + Math_imul($2_1, 40) | 0) - 40 | 0, 0) & -4) != 36) {
    $3 = $2_1 + 1 | 0;
    $1_1 = $1944($0_1 + 36 | 0, 0);
    label$12 : {
     if (($1_1 | 0) > ($2_1 | 0)) {
      break label$12
     }
     $2_1 = $1_1 ? $1_1 + (($1_1 | 0) / 2 | 0) | 0 : 8;
     $2_1 = ($2_1 | 0) > ($3 | 0) ? $2_1 : $3;
     if (($1_1 | 0) >= ($2_1 | 0)) {
      break label$12
     }
     $1_1 = $16(Math_imul($2_1, 40));
     $5_1 = $1944($0_1, 40);
     if ($5_1) {
      $1602($1_1, $5_1, Math_imul($1944($0_1, 32), 40));
      $17($1944($0_1, 40));
     }
     $1973($0_1, 36, $2_1);
     $1973($0_1, 40, $1_1);
    }
    $1973($0_1, 32, $3);
   }
   $3 = $1944($0_1, 40);
   $5_1 = $1944($0_1, 32) - 1 | 0;
   $1_1 = $3 + Math_imul($5_1, 40) | 0;
   label$16 : {
    if ($1944($0_1, 20) >>> 0 <= 32) {
     $2_1 = $1944($0_1, 44);
     break label$16;
    }
    $6_1 = $1944($0_1, 44);
    $4_1 = $1944($0_1 + 40 | 0, 0);
    $2_1 = $1941($1944($0_1 + 28 | 0, 0), 64);
    $2_1 = ($2_1 | 0) == 65535 ? $6_1 : $4_1 + Math_imul($2_1, 40) | 0;
   }
   $6_1 = $1959($2_1, 0);
   $1982($1_1, 0, $6_1, i64toi32_i32$HIGH_BITS);
   $1982($1_1 + 32 | 0, 0, $1959($2_1 + 32 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1982($1_1 + 24 | 0, 0, $1959($2_1 + 24 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1982($1_1 + 16 | 0, 0, $1959($2_1 + 16 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1982($1_1 + 8 | 0, 0, $1959($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1973($1_1, 0, $6_1 & 3 | 36);
   $2_1 = $3 + Math_imul($5_1, 40) | 0;
   $10_1 = Math_fround($1963($2_1, 4) * Math_fround(4.0));
   $1986($2_1, 4, $10_1);
   $1986($1944($0_1, 8), 36, $10_1);
   $1970($1944($0_1, 28) + ($1944($1_1, 0) >>> 1 & 2147483646) | 0, 0, $1941($0_1, 32) - 1 | 0);
  }
  label$18 : {
   if ($1944($0_1, 20) >>> 0 <= 32) {
    $1_1 = $1944($0_1, 44);
    break label$18;
   }
   $2_1 = $1944($0_1, 44);
   $3 = $1944($0_1 + 40 | 0, 0);
   $1_1 = $1941($1944($0_1 + 28 | 0, 0), 64);
   $1_1 = ($1_1 | 0) == 65535 ? $2_1 : $3 + Math_imul($1_1, 40) | 0;
  }
  if ($1_1) {
   $1973($1_1, 0, $1944($1_1, 0) & -3)
  }
  label$21 : {
   if ($1944($0_1, 20) >>> 0 <= 9) {
    $1_1 = $1944($0_1, 44);
    break label$21;
   }
   $2_1 = $1944($0_1, 44);
   $3 = $1944($0_1 + 40 | 0, 0);
   $1_1 = $1941($1944($0_1 + 28 | 0, 0), 18);
   $1_1 = ($1_1 | 0) == 65535 ? $2_1 : $3 + Math_imul($1_1, 40) | 0;
  }
  if ($1_1) {
   $1973($1_1, 0, $1944($1_1, 0) & -3)
  }
  $1973($7_1, 12, 8724518);
  $1973($7_1, 8, -15859666);
  if (($1941($0_1, 60) | 0) == 65535) {
   $3 = $1944($0_1 + 40 | 0, 0);
   $5_1 = $1944($0_1 + 28 | 0, 0);
   $6_1 = $1944($0_1, 20);
   $1_1 = 0;
   label$25 : {
    while (1) {
     $2_1 = $1_1;
     $1_1 = $1941(($7_1 + 12 | 0) + ($1_1 << 1) | 0, 0);
     $4_1 = 0;
     label$27 : {
      if ($6_1 >>> 0 <= $1_1 >>> 0) {
       break label$27
      }
      $4_1 = $1941($5_1 + ($1_1 << 1) | 0, 0);
      $4_1 = ($4_1 | 0) != 65535 ? $3 + Math_imul($4_1, 40) | 0 : 0;
     }
     if ($4_1) {
      break label$25
     }
     $1_1 = $2_1 + 1 | 0;
     if (($1_1 | 0) != 2) {
      continue
     }
     break;
    };
    $1_1 = 65535;
   }
   $1970($0_1, 60, $1_1);
  }
  if (($1941($0_1, 62) | 0) == 65535) {
   $3 = $1944($0_1 + 40 | 0, 0);
   $5_1 = $1944($0_1 + 28 | 0, 0);
   $6_1 = $1944($0_1, 20);
   $1_1 = 0;
   label$29 : {
    while (1) {
     $2_1 = $1_1;
     $1_1 = $1941(($7_1 + 8 | 0) + ($1_1 << 1) | 0, 0);
     $4_1 = 0;
     label$31 : {
      if ($6_1 >>> 0 <= $1_1 >>> 0) {
       break label$31
      }
      $4_1 = $1941($5_1 + ($1_1 << 1) | 0, 0);
      $4_1 = ($4_1 | 0) != 65535 ? $3 + Math_imul($4_1, 40) | 0 : 0;
     }
     if ($4_1) {
      break label$29
     }
     $1_1 = $2_1 + 1 | 0;
     if (($1_1 | 0) != 2) {
      continue
     }
     break;
    };
    $1_1 = 65535;
   }
   $1970($0_1, 62, $1_1);
  }
  $2_1 = 0;
  $3 = $1944($0_1, 20);
  $1_1 = $1941($0_1, 58);
  if ($3 >>> 0 > $1_1 >>> 0) {
   $2_1 = $1944($0_1 + 40 | 0, 0);
   $1_1 = $1941($1944($0_1 + 28 | 0, 0) + ($1_1 << 1) | 0, 0);
   $2_1 = ($1_1 | 0) != 65535 ? $2_1 + Math_imul($1_1, 40) | 0 : 0;
  }
  $1973($0_1, 44, $2_1);
  label$33 : {
   if ($2_1) {
    break label$33
   }
   $5_1 = $1944($0_1 + 40 | 0, 0);
   $6_1 = $1944($0_1 + 28 | 0, 0);
   $1_1 = 0;
   label$34 : {
    while (1) {
     $2_1 = $1_1;
     $1_1 = $1941(($1_1 << 1) + 32850 | 0, 0);
     $4_1 = 0;
     label$36 : {
      if ($3 >>> 0 <= $1_1 >>> 0) {
       break label$36
      }
      $4_1 = $1941($6_1 + ($1_1 << 1) | 0, 0);
      $4_1 = ($4_1 | 0) != 65535 ? $5_1 + Math_imul($4_1, 40) | 0 : 0;
     }
     if ($4_1) {
      break label$34
     }
     $1_1 = $2_1 + 1 | 0;
     if (($1_1 | 0) != 3) {
      continue
     }
     break;
    };
    $1_1 = 65535;
   }
   $2_1 = $1_1;
   $1970($0_1, 58, $1_1);
   $1_1 = 0;
   if ($2_1 >>> 0 < $3 >>> 0) {
    $3 = $1944($0_1, 40);
    $1_1 = $1941($1944($0_1, 28) + ($2_1 << 1) | 0, 0);
    $1_1 = ($1_1 | 0) != 65535 ? $3 + Math_imul($1_1, 40) | 0 : 0;
   }
   $1973($0_1, 44, $1_1);
   if ($1_1) {
    break label$33
   }
   $1_1 = (Math_imul($1944($0_1, 32), 40) + $1944($0_1 + 40 | 0, 0) | 0) - 40 | 0;
   $1973($0_1, 44, $1_1);
   $1970($0_1, 58, $1944($1_1, 0) >>> 2 | 0);
  }
  $1986($0_1, 12, $1963($1944($0_1, 44), 4));
  $3 = $1944($0_1, 8);
  $1_1 = 0;
  while (1) {
   $2_1 = $1_1;
   $1_1 = $3 + ($1_1 << 2) | 0;
   if ($1963($1_1, 0) < Math_fround(0.0)) {
    $1986($1_1, 0, $1963($0_1, 12))
   }
   $1_1 = $2_1 + 1 | 0;
   if (($2_1 | 0) != ($8 | 0)) {
    continue
   }
   break;
  };
  global$0 = $7_1 + 16 | 0;
 }
 
 function $470($0_1) {
  $1982($0_1, 0, 0, 0);
  $1968($0_1, 64, 0);
  $1970($0_1, 62, 65535);
  $1972($0_1, 58, -1);
  $1982($0_1, 44, 0, 0);
  $1982($0_1, 72, 0, 0);
  $1973($0_1, 68, 1065353216);
  $1973($0_1 + 40 | 0, 0, 0);
  $1982($0_1 + 32 | 0, 0, 0, 0);
  $1982($0_1 + 24 | 0, 0, 0, 0);
  $1982($0_1 + 16 | 0, 0, 0, 0);
  $1982($0_1 + 8 | 0, 0, 0, 0);
  $1981($0_1 + 50 | 0, 0);
  $1981($0_1 + 78 | 0, 0);
 }
 
 function $471($0_1) {
  var $1_1 = 0;
  $1982($0_1, 12, 0, 0);
  $1_1 = $1944($0_1 + 40 | 0, 0);
  if ($1_1) {
   $1982($0_1, 32, 0, 0);
   $17($1_1);
   $1973($0_1, 40, 0);
  }
  $1_1 = $1944($0_1, 8);
  if ($1_1) {
   $1982($0_1, 0, 0, 0);
   $17($1_1);
   $1973($0_1, 8, 0);
  }
  $1_1 = $1944($0_1 + 28 | 0, 0);
  if ($1_1) {
   $1982($0_1, 20, 0, 0);
   $17($1_1);
   $1973($0_1, 28, 0);
  }
  $1968($0_1, 64, 1);
  $1982($0_1, 44, 0, 0);
  $1973($0_1, 80, 0);
  $1982($0_1, 72, 0, 0);
  $1_1 = $1944($0_1 + 40 | 0, 0);
  if ($1_1) {
   $17($1_1)
  }
  $1_1 = $1944($0_1 + 28 | 0, 0);
  if ($1_1) {
   $17($1_1)
  }
  $1_1 = $1944($0_1, 8);
  if ($1_1) {
   $17($1_1)
  }
  return $0_1;
 }
 
 function $472($0_1, $1_1) {
  var $2_1 = 0, $3 = 0;
  if ($1944($0_1, 20) >>> 0 <= $1_1 >>> 0) {
   return $1944($0_1, 44)
  }
  $2_1 = $1944($0_1, 44);
  $3 = $1944($0_1 + 40 | 0, 0);
  $0_1 = $1941($1944($0_1 + 28 | 0, 0) + ($1_1 << 1) | 0, 0);
  return ($0_1 | 0) == 65535 ? $2_1 : $3 + Math_imul($0_1, 40) | 0;
 }
 
 function $474($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  var $8 = 0, $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = 0, $13 = Math_fround(0), $14 = 0, $15_1 = 0, $16_1 = Math_fround(0), $17_1 = 0, $18_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $12_1 = global$0 - 16 | 0;
  global$0 = $12_1;
  $8 = $6_1;
  if (!$6_1) {
   $8 = $1697($5_1) + $5_1 | 0
  }
  $9 = $1963($1_1, 16);
  $1982($0_1, 0, 0, 0);
  $14 = $8;
  label$2 : {
   if ($5_1 >>> 0 >= $8 >>> 0) {
    $8 = $5_1;
    $9 = Math_fround(0.0);
    break label$2;
   }
   $16_1 = Math_fround($2_1 / $9);
   $17_1 = $1_1 + 12 | 0;
   $6_1 = 0;
   $8 = $5_1;
   $13 = $1963($0_1, 0);
   $11_1 = $1963($0_1, 4);
   while (1) {
    $5_1 = $8;
    label$5 : {
     label$6 : {
      if (!($4_1 > Math_fround(0.0))) {
       break label$6
      }
      $8 = $6_1;
      if ($6_1) {
       $6_1 = $8
      } else {
       $6_1 = $415($1_1, $16_1, $5_1, $14, Math_fround($4_1 - $10_1));
       $6_1 = (($6_1 | 0) == ($5_1 | 0)) + $6_1 | 0;
      }
      if ($5_1 >>> 0 < $6_1 >>> 0) {
       break label$6
      }
      $9 = $13;
      if ($10_1 > $9) {
       $1986($0_1, 0, $10_1);
       $9 = $10_1;
      }
      $13 = $9;
      $11_1 = Math_fround($11_1 + $2_1);
      $1986($0_1, 4, $11_1);
      $6_1 = $5_1;
      if (!($5_1 >>> 0 >= $14 >>> 0)) {
       while (1) {
        label$12 : {
         $5_1 = $1937($6_1, 0);
         $8 = ($5_1 | 0) == 32;
         $6_1 = $6_1 + ($8 | ($5_1 - 9 & 255) >>> 0 < 2) | 0;
         if (!$8 & ($5_1 | 0) != 9) {
          break label$12
         }
         if ($6_1 >>> 0 < $14 >>> 0) {
          continue
         }
        }
        break;
       };
       $5_1 = $6_1;
      }
      $8 = $5_1;
      $5_1 = 0;
      $10_1 = Math_fround(0.0);
      break label$5;
     }
     $18_1 = $6_1;
     $6_1 = $1936($5_1, 0);
     $1973($12_1, 12, $6_1);
     label$15 : {
      label$16 : {
       label$17 : {
        if (($6_1 | 0) >= 0) {
         $6_1 = $5_1 + 1 | 0;
         break label$17;
        }
        $6_1 = $10($12_1 + 12 | 0, $5_1, $14) + $5_1 | 0;
        if (!$1944($12_1, 12)) {
         break label$16
        }
       }
       $8 = $6_1;
       label$19 : {
        $15_1 = $1944($12_1, 12);
        if ($15_1 >>> 0 > 31) {
         break label$19
        }
        $9 = $11_1;
        $6_1 = 2;
        label$20 : {
         switch ($15_1 - 10 | 0) {
         case 3:
          break label$15;
         case 0:
          break label$20;
         default:
          break label$19;
         };
        }
        $9 = Math_fround($11_1 + $2_1);
        $1986($0_1, 4, $9);
        $13 = $10_1 <= $13 ? $13 : $10_1;
        $1986($0_1, 0, $13);
        $10_1 = Math_fround(0.0);
        break label$15;
       }
       $9 = $11_1;
       $6_1 = $5_1;
       $11_1 = Math_fround($10_1 + Math_fround($16_1 * $1963((wasm2js_i32$0 = $1944($1_1, 8) + ($15_1 << 2) | 0, wasm2js_i32$1 = $17_1, wasm2js_i32$2 = ($1944($1_1, 0) | 0) > ($15_1 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0)));
       $5_1 = $11_1 >= $3;
       $8 = $5_1 ? $6_1 : $8;
       $6_1 = $5_1 ? 3 : 0;
       $10_1 = $5_1 ? $10_1 : $11_1;
       break label$15;
      }
      $9 = $11_1;
      $8 = $6_1;
      $6_1 = 3;
     }
     $11_1 = $9;
     $5_1 = $18_1;
     $9 = $10_1;
     if (($6_1 | 0) == 3) {
      break label$2
     }
    }
    $6_1 = $5_1;
    $9 = $10_1;
    if ($8 >>> 0 < $14 >>> 0) {
     continue
    }
    break;
   };
  }
  if ($1963($0_1, 0) < $9) {
   $1986($0_1, 0, $9)
  }
  $3 = $1963($0_1, 4);
  if (!(!($9 > Math_fround(0.0)) & $3 != Math_fround(0.0))) {
   $1986($0_1, 4, Math_fround($3 + $2_1))
  }
  if ($7_1) {
   $1973($7_1, 0, $8)
  }
  global$0 = $12_1 + 16 | 0;
 }
 
 function $475($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = 0, $14 = Math_fround(0), $15_1 = Math_fround(0), $16_1 = Math_fround(0);
  label$3 : {
   label$1 : {
    if ($1944($0_1, 20) >>> 0 <= $5_1 >>> 0) {
     $5_1 = $1944($0_1, 44);
     break label$1;
    }
    $6_1 = $1944($0_1, 44);
    $7_1 = $1944($0_1 + 40 | 0, 0);
    $5_1 = $1941($1944($0_1 + 28 | 0, 0) + ($5_1 << 1) | 0, 0);
    $5_1 = ($5_1 | 0) == 65535 ? $6_1 : $7_1 + Math_imul($5_1, 40) | 0;
   }
   if (!$5_1) {
    break label$3
   }
   $7_1 = $1944($5_1, 0);
   if (!($7_1 & 2)) {
    break label$3
   }
   $8 = Math_fround(1.0);
   if ($2_1 >= Math_fround(0.0)) {
    $8 = Math_fround($2_1 / $1963($0_1, 16))
   }
   $9 = $7_1 & 1 ? $4_1 | 16777215 : $4_1;
   $2_1 = $1963($3, 0);
   label$5 : {
    if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
     $0_1 = ~~$2_1;
     break label$5;
    }
    $0_1 = -2147483648;
   }
   $11_1 = Math_fround($0_1 | 0);
   $1986($3, 0, $11_1);
   $2_1 = $1963($3, 4);
   label$7 : {
    if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
     $0_1 = ~~$2_1;
     break label$7;
    }
    $0_1 = -2147483648;
   }
   $12_1 = Math_fround($0_1 | 0);
   $1986($3, 4, $12_1);
   $383($1_1, 6, 4);
   $13 = $1944($5_1, 36);
   $15_1 = $1963($5_1, 20);
   $7_1 = $1944($5_1, 32);
   $16_1 = $1963($5_1, 16);
   $4_1 = $1944($5_1, 28);
   $3 = $1944($5_1, 24);
   $10_1 = $1963($5_1, 8);
   $2_1 = $1963($5_1, 12);
   $6_1 = $1944($1_1, 56);
   $5_1 = $1941($1_1, 40);
   $1970($6_1, 6, $5_1);
   $1970($6_1, 0, $5_1);
   $1970($6_1, 10, $5_1 + 3 | 0);
   $0_1 = $5_1 + 2 | 0;
   $1970($6_1, 8, $0_1);
   $1970($6_1, 4, $0_1);
   $1970($6_1, 2, $5_1 + 1 | 0);
   $0_1 = $1944($1_1, 52);
   $14 = Math_fround(Math_fround($2_1 * $8) + $12_1);
   $1986($0_1, 4, $14);
   $10_1 = Math_fround(Math_fround($10_1 * $8) + $11_1);
   $1986($0_1, 0, $10_1);
   $0_1 = $1944($1_1, 52);
   $1973($0_1, 8, $3);
   $1973($0_1 + 12 | 0, 0, $4_1);
   $0_1 = $1944($1_1, 52);
   $2_1 = Math_fround(Math_fround($16_1 * $8) + $11_1);
   $1986($0_1, 20, $2_1);
   $1973($0_1, 16, $9);
   $1986($0_1 + 24 | 0, 0, $14);
   $0_1 = $1944($1_1, 52);
   $1973($0_1 + 32 | 0, 0, $4_1);
   $1973($0_1 + 28 | 0, 0, $7_1);
   $0_1 = $1944($1_1, 52);
   $1986($0_1, 40, $2_1);
   $2_1 = Math_fround(Math_fround($15_1 * $8) + $12_1);
   $1986($0_1 + 44 | 0, 0, $2_1);
   $1973($0_1 + 36 | 0, 0, $9);
   $0_1 = $1944($1_1, 52);
   $1973($0_1 + 52 | 0, 0, $13);
   $1973($0_1 + 48 | 0, 0, $7_1);
   $0_1 = $1944($1_1, 52);
   $1986($0_1, 60, $10_1);
   $1986($0_1 - -64 | 0, 0, $2_1);
   $1973($0_1 + 56 | 0, 0, $9);
   $0_1 = $1944($1_1, 52);
   $1973($0_1 + 72 | 0, 0, $13);
   $1973($0_1 + 68 | 0, 0, $3);
   $0_1 = $1944($1_1, 52);
   $1973($0_1 + 76 | 0, 0, $9);
   $1973($1_1, 52, $0_1 + 80 | 0);
   $1973($1_1, 40, $1944($1_1, 40) + 4 | 0);
   $1973($1_1, 56, $1944($1_1, 56) + 12 | 0);
  }
 }
 
 function $476($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = Math_fround(0), $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = Math_fround(0);
  $6_1 = global$0 - 32 | 0;
  global$0 = $6_1;
  $15_1 = $1963($1_1, 4);
  $7_1 = $1963($1_1, 0);
  $10_1 = $1963($1944($0_1, 44), 12);
  $5_1 = Math_fround(Math_fround($10_1 * Math_fround(.4000000059604645)) * $4_1);
  label$1 : {
   label$2 : {
    switch ($3 | 0) {
    case 2:
     $5_1 = Math_fround(-$5_1);
    case 3:
     $11_1 = Math_fround($5_1 * Math_fround(.8659999966621399));
     $8 = Math_fround($5_1 * Math_fround(-.75));
     $12_1 = $8;
     $9 = Math_fround($5_1 * Math_fround(-.8659999966621399));
     $13 = Math_fround($5_1 * Math_fround(0.0));
     $14 = Math_fround($5_1 * Math_fround(.75));
     break label$1;
    case 0:
     $5_1 = Math_fround(-$5_1);
     break;
    case 1:
     break label$2;
    default:
     break label$1;
    };
   }
   $9 = Math_fround($5_1 * Math_fround(-.75));
   $11_1 = $9;
   $12_1 = Math_fround($5_1 * Math_fround(-.8659999966621399));
   $8 = Math_fround($5_1 * Math_fround(.8659999966621399));
   $13 = Math_fround($5_1 * Math_fround(.75));
   $14 = Math_fround($5_1 * Math_fround(0.0));
  }
  $5_1 = $7_1;
  $7_1 = Math_fround($10_1 * Math_fround(.5));
  $5_1 = Math_fround($5_1 + $7_1);
  $1986($6_1, 24, Math_fround($5_1 + $13));
  $4_1 = Math_fround($15_1 + Math_fround($7_1 * $4_1));
  $1986($6_1, 28, Math_fround($4_1 + $14));
  $1986($6_1, 20, Math_fround($4_1 + $8));
  $1986($6_1, 16, Math_fround($5_1 + $9));
  $1986($6_1, 12, Math_fround($4_1 + $12_1));
  $1986($6_1, 8, Math_fround($5_1 + $11_1));
  $406($0_1, $6_1 + 24 | 0, $6_1 + 16 | 0, $6_1 + 8 | 0, $2_1);
  global$0 = $6_1 + 32 | 0;
 }
 
 function $477($0_1, $1_1, $2_1) {
  var $3 = Math_fround(0);
  label$1 : {
   if ($2_1 >>> 0 < 16777216) {
    break label$1
   }
   $3 = Math_fround($1963($1944($0_1, 44), 12) * Math_fround(.20000000298023224));
   if ($3 <= Math_fround(0.0)) {
    break label$1
   }
   $393($0_1, $1_1, $3, Math_fround(0.0), Math_fround(5.4977874755859375), 7);
   $389($0_1, $1944($0_1 + 92 | 0, 0), $1944($0_1, 84), $2_1);
   $1973($0_1, 84, 0);
  }
 }
 
 function $478($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = Math_fround(0);
  $7_1 = Math_fround($3 / Math_fround(5.0));
  $7_1 = $7_1 >= Math_fround(1.0) ? $7_1 : Math_fround(1.0);
  $8 = Math_fround($7_1 * Math_fround(.25));
  $9 = Math_fround($8 + $1963($1_1, 0));
  $1986($1_1, 0, $9);
  $6_1 = Math_fround($8 + $1963($1_1, 4));
  $1986($1_1, 4, $6_1);
  $10_1 = Math_fround($3 - Math_fround($7_1 * Math_fround(.5)));
  $3 = Math_fround($10_1 / Math_fround(3.0));
  $8 = Math_fround($3 + $9);
  $11_1 = Math_fround($8 - $3);
  $9 = Math_fround(Math_fround($10_1 + $6_1) - Math_fround($3 * Math_fround(.5)));
  $6_1 = Math_fround($9 - $3);
  $1_1 = $1944($0_1, 84);
  $4_1 = $1944($0_1 + 88 | 0, 0);
  label$1 : {
   if (($1_1 | 0) != ($4_1 | 0)) {
    break label$1
   }
   $5_1 = $1_1 + 1 | 0;
   if ($4_1) {
    $1_1 = $4_1 + (($4_1 | 0) / 2 | 0) | 0
   } else {
    $1_1 = 8
   }
   $1_1 = ($1_1 | 0) > ($5_1 | 0) ? $1_1 : $5_1;
   if (($1_1 | 0) <= ($4_1 | 0)) {
    break label$1
   }
   $4_1 = $16($1_1 << 3);
   $5_1 = $1944($0_1 + 92 | 0, 0);
   if ($5_1) {
    $1602($4_1, $5_1, $1944($0_1, 84) << 3);
    $17($1944($0_1, 92));
   }
   $1973($0_1, 88, $1_1);
   $1973($0_1, 92, $4_1);
  }
  $1_1 = $1944($0_1 + 92 | 0, 0) + ($1944($0_1, 84) << 3) | 0;
  $1986($1_1, 4, $6_1);
  $1986($1_1, 0, $11_1);
  $1_1 = $1944($0_1, 84);
  $4_1 = $1_1 + 1 | 0;
  $1973($0_1, 84, $4_1);
  $5_1 = $4_1;
  $4_1 = $1944($0_1, 88);
  label$5 : {
   if (($5_1 | 0) != ($4_1 | 0)) {
    break label$5
   }
   $5_1 = $1_1 + 2 | 0;
   if ($4_1) {
    $1_1 = $4_1 + (($4_1 | 0) / 2 | 0) | 0
   } else {
    $1_1 = 8
   }
   $1_1 = ($1_1 | 0) > ($5_1 | 0) ? $1_1 : $5_1;
   if (($1_1 | 0) <= ($4_1 | 0)) {
    break label$5
   }
   $4_1 = $16($1_1 << 3);
   $5_1 = $1944($0_1, 92);
   if ($5_1) {
    $1602($4_1, $5_1, $1944($0_1, 84) << 3);
    $17($1944($0_1, 92));
   }
   $1973($0_1, 88, $1_1);
   $1973($0_1, 92, $4_1);
  }
  $6_1 = Math_fround(-$3);
  $1_1 = $1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0;
  $1986($1_1, 4, $9);
  $1986($1_1, 0, $8);
  $1_1 = $1944($0_1, 84);
  $4_1 = $1_1 + 1 | 0;
  $1973($0_1, 84, $4_1);
  $5_1 = $4_1;
  $4_1 = $1944($0_1, 88);
  label$9 : {
   if (($5_1 | 0) != ($4_1 | 0)) {
    break label$9
   }
   $5_1 = $1_1 + 2 | 0;
   if ($4_1) {
    $1_1 = $4_1 + (($4_1 | 0) / 2 | 0) | 0
   } else {
    $1_1 = 8
   }
   $1_1 = ($1_1 | 0) > ($5_1 | 0) ? $1_1 : $5_1;
   if (($1_1 | 0) <= ($4_1 | 0)) {
    break label$9
   }
   $4_1 = $16($1_1 << 3);
   $5_1 = $1944($0_1, 92);
   if ($5_1) {
    $1602($4_1, $5_1, $1944($0_1, 84) << 3);
    $17($1944($0_1, 92));
   }
   $1973($0_1, 88, $1_1);
   $1973($0_1, 92, $4_1);
  }
  $1_1 = $1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0;
  $1986($1_1, 4, Math_fround(Math_fround($6_1 + $6_1) + $9));
  $1986($1_1, 0, Math_fround(Math_fround($3 + $3) + $8));
  $1_1 = $1944($0_1, 84) + 1 | 0;
  $1973($0_1, 84, $1_1);
  $388($0_1, $1944($0_1, 92), $1_1, $2_1, 0, $7_1);
  $1973($0_1, 84, 0);
 }
 
 function $480($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0);
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  label$1 : {
   label$2 : {
    switch ($3 | 0) {
    case 0:
     $6_1 = $1963($2_1, 0);
     $8 = $1963($1_1, 0);
     $7_1 = $1963($1_1, 4);
     $9 = $1963($2_1, 4);
     $1986($5_1, 12, Math_fround($7_1 - $9));
     $6_1 = Math_fround($8 + $6_1);
     $1986($5_1, 8, $6_1);
     $1986($5_1, 4, Math_fround($7_1 + $9));
     $1986($5_1, 0, $6_1);
     $406($0_1, $5_1 + 8 | 0, $5_1, $1_1, $4_1);
     break label$1;
    case 1:
     $6_1 = $1963($2_1, 0);
     $8 = $1963($1_1, 0);
     $7_1 = $1963($1_1, 4);
     $9 = $1963($2_1, 4);
     $1986($5_1, 12, Math_fround($7_1 + $9));
     $6_1 = Math_fround($8 - $6_1);
     $1986($5_1, 8, $6_1);
     $1986($5_1, 4, Math_fround($7_1 - $9));
     $1986($5_1, 0, $6_1);
     $406($0_1, $5_1 + 8 | 0, $5_1, $1_1, $4_1);
     break label$1;
    case 2:
     $6_1 = $1963($2_1, 0);
     $8 = $1963($1_1, 0);
     $7_1 = Math_fround($1963($1_1, 4) + $1963($2_1, 4));
     $1986($5_1, 12, $7_1);
     $1986($5_1, 8, Math_fround($8 + $6_1));
     $1986($5_1, 4, $7_1);
     $1986($5_1, 0, Math_fround($8 - $6_1));
     $406($0_1, $5_1 + 8 | 0, $5_1, $1_1, $4_1);
     break label$1;
    case 3:
     break label$2;
    default:
     break label$1;
    };
   }
   $6_1 = $1963($2_1, 0);
   $8 = $1963($1_1, 0);
   $7_1 = Math_fround($1963($1_1, 4) - $1963($2_1, 4));
   $1986($5_1, 12, $7_1);
   $1986($5_1, 8, Math_fround($8 - $6_1));
   $1986($5_1, 4, $7_1);
   $1986($5_1, 0, Math_fround($8 + $6_1));
   $406($0_1, $5_1 + 8 | 0, $5_1, $1_1, $4_1);
  }
  global$0 = $5_1 + 16 | 0;
 }
 
 function $482($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  var $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = 0, $15_1 = Math_fround(0), $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = Math_fround(0), $19 = Math_fround(0), $20_1 = 0, $21_1 = Math_fround(0);
  $9 = global$0 - 16 | 0;
  global$0 = $9;
  $14 = $7_1 & 496 ? $7_1 : 240;
  label$1 : {
   if ($3 >>> 0 <= 4278190079) {
    $20_1 = $54($29(-3355444, $3));
    $7_1 = $54($29(-8355712, $3));
    $401($0_1, $1_1, $2_1, $20_1, $6_1, $14);
    $15_1 = $1963($1_1, 4);
    $8 = Math_fround($15_1 + $1963($5_1, 4));
    $12_1 = $1963($2_1, 4);
    if (!($8 < $12_1)) {
     break label$1
    }
    $13 = $1963($1_1, 0);
    $21_1 = Math_fround($13 + $1963($5_1, 0));
    $10_1 = $1963($2_1, 0);
    $3 = 0;
    while (1) {
     $1_1 = $3;
     $17_1 = Math_fround($8 + $4_1);
     $2_1 = $17_1 < $12_1;
     $18_1 = $2_1 ? $17_1 : $12_1;
     $19 = $8 < $15_1 ? $15_1 : $8 > $12_1 ? $12_1 : $8;
     label$4 : {
      if ($18_1 <= $19) {
       break label$4
      }
      $8 = Math_fround(Math_fround(Math_fround($1_1 & 1) * $4_1) + $21_1);
      if (!($10_1 > $8)) {
       break label$4
      }
      while (1) {
       $16_1 = $8 < $13 ? $13 : $8 > $10_1 ? $10_1 : $8;
       $11_1 = Math_fround($8 + $4_1);
       $11_1 = $10_1 > $11_1 ? $11_1 : $10_1;
       if (!($16_1 >= $11_1)) {
        $3 = 256;
        label$7 : {
         if (!($15_1 >= $19)) {
          break label$7
         }
         $3 = $13 >= $16_1 ? 272 : 256;
         if (!($10_1 <= $11_1)) {
          break label$7
         }
         $3 = $3 | 32;
        }
        label$9 : {
         if (!($12_1 <= $18_1)) {
          break label$9
         }
         $3 = $13 >= $16_1 ? $3 | 64 : $3;
         if (!($10_1 <= $11_1)) {
          break label$9
         }
         $3 = $3 | 128;
        }
        $1986($9, 12, $19);
        $1986($9, 8, $16_1);
        $1986($9, 4, $18_1);
        $1986($9, 0, $11_1);
        $401($0_1, $9 + 8 | 0, $9, $7_1, $6_1, ($14 | 0) == 256 ? 256 : ($3 | 0) == 256 ? 256 : $3 & $14);
       }
       $8 = Math_fround(Math_fround($4_1 + $4_1) + $8);
       if ($10_1 > $8) {
        continue
       }
       break;
      };
     }
     $3 = $1_1 + 1 | 0;
     $8 = $17_1;
     if ($2_1) {
      continue
     }
     break;
    };
    break label$1;
   }
   $401($0_1, $1_1, $2_1, $3, $6_1, $14);
  }
  global$0 = $9 + 16 | 0;
 }
 
 function $483($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = Math_fround(0), $18_1 = Math_fround(0), $19 = Math_fround(0), $20_1 = Math_fround(0), $21_1 = 0, $22_1 = Math_fround(0), $23_1 = 0, $24 = 0, $25_1 = 0, $26_1 = 0, $27_1 = 0, $28_1 = 0, $29_1 = Math_fround(0), $30 = 0, $31_1 = 0, $32_1 = 0, $33_1 = 0, $34_1 = 0, $35_1 = 0, $36_1 = 0, $37 = Math_fround(0), $38_1 = Math_fround(0), $39_1 = Math_fround(0), $40_1 = 0, $41_1 = 0, wasm2js_f32$0 = Math_fround(0), wasm2js_f32$1 = Math_fround(0), wasm2js_i32$0 = 0;
  $6_1 = global$0 - 464 | 0;
  global$0 = $6_1;
  $1973($6_1 + 104 | 0, 0, $1944($0_1 + 96 | 0, 0));
  $1983($6_1, 96, $1959($0_1, 88), i64toi32_i32$HIGH_BITS);
  $3 = $6_1 - -64 | 0;
  $1973($3 + 8 | 0, 0, $1944($0_1 + 72 | 0, 0));
  $1983($6_1, 64, $1959($0_1, 64), i64toi32_i32$HIGH_BITS);
  $444($6_1 + 80 | 0, $3, $1_1);
  $4_1 = $1944($6_1, 84);
  $5_1 = $1944($6_1, 88);
  label$1 : {
   if (($4_1 | 0) >= ($5_1 | 0)) {
    break label$1
   }
   $40_1 = $0_1 + 76 | 0;
   $32_1 = $0_1 + 100 | 0;
   $33_1 = $0_1 + 52 | 0;
   $8 = 1;
   $3 = 0;
   while (1) {
    $14 = $3;
    $26_1 = $12_1;
    $34_1 = $8;
    $15_1 = $5_1;
    $3 = $4_1;
    $1973($6_1, 84, $3 + 1 | 0);
    $13 = $7_1;
    $4_1 = $7_1;
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           label$10 : {
            label$11 : {
             label$12 : {
              label$13 : {
               label$14 : {
                label$15 : {
                 label$16 : {
                  label$17 : {
                   label$18 : {
                    label$19 : {
                     label$20 : {
                      label$21 : {
                       label$22 : {
                        label$23 : {
                         label$24 : {
                          label$25 : {
                           label$26 : {
                            label$27 : {
                             label$28 : {
                              label$29 : {
                               label$30 : {
                                label$31 : {
                                 label$32 : {
                                  label$33 : {
                                   $24 = $1937($1944($6_1, 80) + $3 | 0, 0);
                                   switch ($24 - 1 | 0) {
                                   case 27:
                                    break label$12;
                                   case 254:
                                    break label$13;
                                   case 11:
                                    break label$15;
                                   case 13:
                                    break label$16;
                                   case 10:
                                    break label$17;
                                   case 28:
                                    break label$18;
                                   case 9:
                                    break label$19;
                                   case 25:
                                   case 26:
                                    break label$20;
                                   case 24:
                                    break label$21;
                                   case 23:
                                    break label$22;
                                   case 7:
                                    break label$23;
                                   case 29:
                                    break label$24;
                                   case 30:
                                    break label$25;
                                   case 5:
                                    break label$26;
                                   case 6:
                                    break label$27;
                                   case 4:
                                    break label$28;
                                   case 21:
                                    break label$29;
                                   case 3:
                                    break label$30;
                                   case 20:
                                    break label$31;
                                   case 0:
                                   case 2:
                                   case 17:
                                   case 22:
                                    break label$32;
                                   case 18:
                                   case 19:
                                    break label$33;
                                   default:
                                    break label$14;
                                   };
                                  }
                                  $3 = $1944($6_1, 84);
                                  if ($34_1) {
                                   $9 = (($9 | 0) / 2 | 0) + $26_1 | 0
                                  } else {
                                   $9 = $26_1
                                  }
                                  $3 = $3 + (($9 + 7 | 0) / 8 | 0) | 0;
                                  $1973($6_1, 84, ($3 | 0) < 0 ? $15_1 : ($3 | 0) > ($15_1 | 0) ? $15_1 : $3);
                                  $3 = $14;
                                  $4_1 = 0;
                                  $12_1 = $9;
                                  $8 = 0;
                                  break label$3;
                                 }
                                 $3 = $14;
                                 $4_1 = 0;
                                 $12_1 = (($9 | 0) / 2 | 0) + $26_1 | 0;
                                 break label$4;
                                }
                                if (($9 | 0) < 2) {
                                 $8 = 0;
                                 break label$1;
                                }
                                $3 = ($6_1 + 240 | 0) + ($9 << 2) | 0;
                                $487($2_1, $1963($3 - 8 | 0, 0), $1963($3 - 4 | 0, 0));
                                $3 = $14;
                                $4_1 = 0;
                                $8 = 0;
                                break label$3;
                               }
                               if (($9 | 0) <= 0) {
                                $8 = 0;
                                break label$1;
                               }
                               $487($2_1, Math_fround(0.0), $1963(($6_1 + ($9 << 2) | 0) + 236 | 0, 0));
                               $3 = $14;
                               $4_1 = 0;
                               $8 = 0;
                               break label$3;
                              }
                              if (($9 | 0) <= 0) {
                               $8 = 0;
                               break label$1;
                              }
                              $487($2_1, $1963(($6_1 + ($9 << 2) | 0) + 236 | 0, 0), Math_fround(0.0));
                              $3 = $14;
                              $4_1 = 0;
                              $8 = 0;
                              break label$3;
                             }
                             $5_1 = 1;
                             $4_1 = 0;
                             $8 = 0;
                             if (($9 | 0) < 2) {
                              break label$1
                             }
                             while (1) {
                              $3 = $6_1 + 240 | 0;
                              $10_1 = $1963($3 + ($5_1 << 2) | 0, 0);
                              $5_1 = $3;
                              $3 = $4_1;
                              $11_1 = Math_fround($1963($5_1 + ($3 << 2) | 0, 0) + $1963($2_1, 16));
                              $1986($2_1, 16, $11_1);
                              $10_1 = Math_fround($10_1 + $1963($2_1, 20));
                              $1986($2_1, 20, $10_1);
                              if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
                               $5_1 = ~~$10_1
                              } else {
                               $5_1 = -2147483648
                              }
                              if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
                               $4_1 = ~~$11_1
                              } else {
                               $4_1 = -2147483648
                              }
                              label$44 : {
                               if ($1944($2_1, 0)) {
                                label$46 : {
                                 if (($1944($2_1, 28) | 0) >= ($4_1 | 0)) {
                                  if ($1944($2_1, 4)) {
                                   break label$46
                                  }
                                 }
                                 $1973($2_1, 28, $4_1);
                                }
                                label$48 : {
                                 if (($1944($2_1, 36) | 0) >= ($5_1 | 0)) {
                                  if ($1944($2_1, 4)) {
                                   break label$48
                                  }
                                 }
                                 $1973($2_1, 36, $5_1);
                                }
                                label$50 : {
                                 if (($1944($2_1, 24) | 0) <= ($4_1 | 0)) {
                                  if ($1944($2_1, 4)) {
                                   break label$50
                                  }
                                 }
                                 $1973($2_1, 24, $4_1);
                                }
                                label$52 : {
                                 if (($1944($2_1, 32) | 0) <= ($5_1 | 0)) {
                                  if ($1944($2_1, 4)) {
                                   break label$52
                                  }
                                 }
                                 $1973($2_1, 32, $5_1);
                                }
                                $1973($2_1, 4, 1);
                                break label$44;
                               }
                               $7_1 = $1944($2_1, 40) + Math_imul($1944($2_1, 44), 14) | 0;
                               $1981($7_1, 4);
                               $1970($7_1, 2, $5_1);
                               $1970($7_1, 0, $4_1);
                               $1968($7_1, 12, 2);
                              }
                              $1973($2_1, 44, $1944($2_1, 44) + 1 | 0);
                              $4_1 = $3 + 2 | 0;
                              $5_1 = $4_1 | 1;
                              if (($5_1 | 0) < ($9 | 0)) {
                               continue
                              }
                              break;
                             };
                             $3 = $14;
                             $7_1 = $13;
                             $4_1 = 0;
                             break label$5;
                            }
                            $30 = $9;
                            $27_1 = 0;
                            $8 = 0;
                            if (($9 | 0) > 0) {
                             break label$10
                            }
                            break label$1;
                           }
                           $31_1 = $9;
                           $28_1 = 0;
                           $8 = 0;
                           if (($9 | 0) <= 0) {
                            break label$1
                           }
                           $9 = 0;
                           break label$7;
                          }
                          $35_1 = 0;
                          $8 = 0;
                          if (($9 | 0) >= 4) {
                           break label$9
                          }
                          break label$1;
                         }
                         $36_1 = 0;
                         $8 = 0;
                         if (($9 | 0) < 4) {
                          break label$1
                         }
                         $5_1 = 0;
                         break label$8;
                        }
                        $8 = 5;
                        $5_1 = 0;
                        if (($9 | 0) < 6) {
                         $8 = 0;
                         break label$1;
                        }
                        while (1) {
                         $7_1 = $6_1 + 240 | 0;
                         $4_1 = $5_1 << 2;
                         $3 = $7_1 + $4_1 | 0;
                         $488($2_1, $1963($3, 0), $1963(($4_1 | 4) + $7_1 | 0, 0), $1963($3 + 8 | 0, 0), $1963($3 + 12 | 0, 0), $1963($3 + 16 | 0, 0), $1963(($8 << 2) + $7_1 | 0, 0));
                         $3 = $5_1 + 11 | 0;
                         $8 = $3;
                         $5_1 = $5_1 + 6 | 0;
                         if (($3 | 0) < ($9 | 0)) {
                          continue
                         }
                         break;
                        };
                        $3 = $14;
                        $7_1 = $13;
                        $4_1 = 0;
                        break label$5;
                       }
                       if (($9 | 0) < 8) {
                        $8 = 0;
                        break label$1;
                       }
                       $4_1 = $9 - 2 | 0;
                       $8 = 5;
                       $5_1 = 0;
                       while (1) {
                        $12_1 = $6_1 + 240 | 0;
                        $7_1 = $5_1 << 2;
                        $3 = $12_1 + $7_1 | 0;
                        $488($2_1, $1963($3, 0), $1963(($7_1 | 4) + $12_1 | 0, 0), $1963($3 + 8 | 0, 0), $1963($3 + 12 | 0, 0), $1963($3 + 16 | 0, 0), $1963(($8 << 2) + $12_1 | 0, 0));
                        $7_1 = $5_1 + 11 | 0;
                        $8 = $7_1;
                        $3 = $5_1 + 6 | 0;
                        $5_1 = $3;
                        if (($4_1 | 0) > ($7_1 | 0)) {
                         continue
                        }
                        break;
                       };
                       $4_1 = $3 | 1;
                       if (($9 | 0) <= ($4_1 | 0)) {
                        $8 = 0;
                        break label$1;
                       }
                       $7_1 = $6_1 + 240 | 0;
                       $10_1 = $1963($7_1 + ($4_1 << 2) | 0, 0);
                       $11_1 = Math_fround($1963(($3 << 2) + $7_1 | 0, 0) + $1963($2_1, 16));
                       $1986($2_1, 16, $11_1);
                       $10_1 = Math_fround($10_1 + $1963($2_1, 20));
                       $1986($2_1, 20, $10_1);
                       if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
                        $9 = ~~$10_1
                       } else {
                        $9 = -2147483648
                       }
                       if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
                        $5_1 = ~~$11_1
                       } else {
                        $5_1 = -2147483648
                       }
                       label$63 : {
                        if ($1944($2_1, 0)) {
                         label$65 : {
                          if (($1944($2_1, 28) | 0) >= ($5_1 | 0)) {
                           if ($1944($2_1, 4)) {
                            break label$65
                           }
                          }
                          $1973($2_1, 28, $5_1);
                         }
                         label$67 : {
                          if (($1944($2_1, 36) | 0) >= ($9 | 0)) {
                           if ($1944($2_1, 4)) {
                            break label$67
                           }
                          }
                          $1973($2_1, 36, $9);
                         }
                         label$69 : {
                          if (($1944($2_1, 24) | 0) <= ($5_1 | 0)) {
                           if ($1944($2_1, 4)) {
                            break label$69
                           }
                          }
                          $1973($2_1, 24, $5_1);
                         }
                         label$71 : {
                          if (($1944($2_1, 32) | 0) <= ($9 | 0)) {
                           if ($1944($2_1, 4)) {
                            break label$71
                           }
                          }
                          $1973($2_1, 32, $9);
                         }
                         $1973($2_1, 4, 1);
                         break label$63;
                        }
                        $3 = $1944($2_1, 40) + Math_imul($1944($2_1, 44), 14) | 0;
                        $1981($3, 4);
                        $1970($3, 2, $9);
                        $1970($3, 0, $5_1);
                        $1968($3, 12, 2);
                       }
                       $1973($2_1, 44, $1944($2_1, 44) + 1 | 0);
                       $3 = $14;
                       $7_1 = $13;
                       $4_1 = 0;
                       break label$5;
                      }
                      if (($9 | 0) < 8) {
                       $8 = 0;
                       break label$1;
                      }
                      $12_1 = $9 - 6 | 0;
                      $5_1 = 1;
                      $4_1 = 0;
                      while (1) {
                       $3 = $6_1 + 240 | 0;
                       $10_1 = $1963($3 + ($5_1 << 2) | 0, 0);
                       $5_1 = $3;
                       $3 = $4_1;
                       $8 = $3 << 2;
                       $11_1 = Math_fround($1963($5_1 + $8 | 0, 0) + $1963($2_1, 16));
                       $1986($2_1, 16, $11_1);
                       $10_1 = Math_fround($10_1 + $1963($2_1, 20));
                       $1986($2_1, 20, $10_1);
                       if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
                        $5_1 = ~~$10_1
                       } else {
                        $5_1 = -2147483648
                       }
                       if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
                        $4_1 = ~~$11_1
                       } else {
                        $4_1 = -2147483648
                       }
                       label$79 : {
                        if ($1944($2_1, 0)) {
                         label$81 : {
                          if (($1944($2_1, 28) | 0) >= ($4_1 | 0)) {
                           if ($1944($2_1, 4)) {
                            break label$81
                           }
                          }
                          $1973($2_1, 28, $4_1);
                         }
                         label$83 : {
                          if (($1944($2_1, 36) | 0) >= ($5_1 | 0)) {
                           if ($1944($2_1, 4)) {
                            break label$83
                           }
                          }
                          $1973($2_1, 36, $5_1);
                         }
                         label$85 : {
                          if (($1944($2_1, 24) | 0) <= ($4_1 | 0)) {
                           if ($1944($2_1, 4)) {
                            break label$85
                           }
                          }
                          $1973($2_1, 24, $4_1);
                         }
                         label$87 : {
                          if (($1944($2_1, 32) | 0) <= ($5_1 | 0)) {
                           if ($1944($2_1, 4)) {
                            break label$87
                           }
                          }
                          $1973($2_1, 32, $5_1);
                         }
                         $1973($2_1, 4, 1);
                         break label$79;
                        }
                        $7_1 = $1944($2_1, 40) + Math_imul($1944($2_1, 44), 14) | 0;
                        $1981($7_1, 4);
                        $1970($7_1, 2, $5_1);
                        $1970($7_1, 0, $4_1);
                        $1968($7_1, 12, 2);
                       }
                       $1973($2_1, 44, $1944($2_1, 44) + 1 | 0);
                       $4_1 = $3 + 2 | 0;
                       $7_1 = $4_1 | 1;
                       $5_1 = $7_1;
                       if (($12_1 | 0) > ($5_1 | 0)) {
                        continue
                       }
                       break;
                      };
                      $5_1 = $3 + 7 | 0;
                      if (($9 | 0) <= ($5_1 | 0)) {
                       $8 = 0;
                       break label$1;
                      }
                      $12_1 = $6_1 + 240 | 0;
                      $3 = $8 + $12_1 | 0;
                      $488($2_1, $1963($12_1 + ($4_1 << 2) | 0, 0), $1963(($7_1 << 2) + $12_1 | 0, 0), $1963($3 + 16 | 0, 0), $1963($3 + 20 | 0, 0), $1963($3 + 24 | 0, 0), $1963(($5_1 << 2) + $12_1 | 0, 0));
                      $3 = $14;
                      $7_1 = $13;
                      $4_1 = 0;
                      break label$5;
                     }
                     if (($9 | 0) < 4) {
                      $8 = 0;
                      break label$1;
                     }
                     $5_1 = $9 & 1;
                     $4_1 = $5_1 + 3 | 0;
                     if (($4_1 | 0) >= ($9 | 0)) {
                      break label$6
                     }
                     $11_1 = (wasm2js_f32$0 = $1963($6_1, 240), wasm2js_f32$1 = Math_fround(0.0), wasm2js_i32$0 = $5_1, wasm2js_i32$0 ? wasm2js_f32$0 : wasm2js_f32$1);
                     while (1) {
                      $3 = $6_1 + 240 | 0;
                      $10_1 = $1963($3 + ($4_1 << 2) | 0, 0);
                      $3 = ($5_1 << 2) + $3 | 0;
                      $18_1 = $1963($3, 0);
                      $17_1 = $1963($3 + 8 | 0, 0);
                      $19 = $1963($3 + 4 | 0, 0);
                      label$92 : {
                       if (($24 | 0) == 27) {
                        $488($2_1, $18_1, $11_1, $19, $17_1, $10_1, Math_fround(0.0));
                        break label$92;
                       }
                       $488($2_1, $11_1, $18_1, $19, $17_1, Math_fround(0.0), $10_1);
                      }
                      $4_1 = $5_1 + 7 | 0;
                      $11_1 = Math_fround(0.0);
                      $5_1 = $5_1 + 4 | 0;
                      if (($4_1 | 0) < ($9 | 0)) {
                       continue
                      }
                      break;
                     };
                     break label$6;
                    }
                    label$94 : {
                     if ($13) {
                      break label$94
                     }
                     $16_1 = $1944($0_1, 120);
                     if (!$16_1) {
                      break label$94
                     }
                     $3 = $16_1 & $16_1 >> 31;
                     $21_1 = $1944($0_1, 112);
                     label$95 : {
                      if (($16_1 | 0) <= 0) {
                       $8 = 0;
                       break label$95;
                      }
                      $8 = $1937($3 + $21_1 | 0, 0);
                      $3 = $3 + 1 | 0;
                     }
                     $4_1 = $3;
                     $3 = $4_1;
                     $13 = $3;
                     $12_1 = 0;
                     $15_1 = 0;
                     $5_1 = -1;
                     label$97 : {
                      label$98 : {
                       switch ($8 & 255) {
                       case 0:
                        $5_1 = 0;
                        $3 = $1_1 + $4_1 | 0;
                        $3 = ($3 | 0) < 0 ? $16_1 : ($3 | 0) > ($16_1 | 0) ? $16_1 : $3;
                        if (($3 | 0) >= ($16_1 | 0)) {
                         break label$97
                        }
                        $5_1 = $1937($3 + $21_1 | 0, 0);
                        break label$97;
                       case 3:
                        break label$98;
                       default:
                        break label$97;
                       };
                      }
                      while (1) {
                       $7_1 = $3;
                       $4_1 = $15_1 << 8;
                       $3 = $13;
                       label$101 : {
                        if (($16_1 | 0) <= ($3 | 0)) {
                         $15_1 = 0;
                         break label$101;
                        }
                        $15_1 = $1937($3 + $21_1 | 0, 0);
                        $7_1 = $3 + 1 | 0;
                        $3 = $7_1;
                       }
                       $13 = $3;
                       $23_1 = $4_1 | $15_1 & 255;
                       $15_1 = $23_1;
                       $5_1 = $7_1;
                       $3 = $5_1;
                       $4_1 = $3;
                       $8 = 0;
                       $7_1 = 0;
                       $12_1 = $12_1 + 1 | 0;
                       if (($12_1 | 0) != 2) {
                        continue
                       }
                       break;
                      };
                      while (1) {
                       $7_1 = $7_1 << 8;
                       label$104 : {
                        if (($5_1 | 0) >= ($16_1 | 0)) {
                         $13 = 0;
                         $3 = $5_1;
                         break label$104;
                        }
                        $13 = $1937($5_1 + $21_1 | 0, 0);
                        $4_1 = $5_1 + 1 | 0;
                        $3 = $4_1;
                       }
                       $12_1 = $4_1;
                       $5_1 = $3;
                       $3 = $7_1 | $13 & 255;
                       $7_1 = $3;
                       $8 = $8 + 1 | 0;
                       if (($8 | 0) != 2) {
                        continue
                       }
                       break;
                      };
                      $5_1 = 0;
                      $4_1 = $3;
                      $8 = $12_1;
                      if (($23_1 | 0) <= 0) {
                       $5_1 = -1;
                       break label$97;
                      }
                      label$107 : {
                       while (1) {
                        $12_1 = $4_1;
                        $15_1 = $5_1;
                        label$109 : {
                         if (($8 | 0) >= ($16_1 | 0)) {
                          $5_1 = 0;
                          $4_1 = $8;
                          break label$109;
                         }
                         $5_1 = $1937($8 + $21_1 | 0, 0);
                         $4_1 = $8 + 1 | 0;
                        }
                        $25_1 = $5_1;
                        $5_1 = $4_1;
                        $8 = 0;
                        $7_1 = 0;
                        while (1) {
                         $41_1 = $7_1 << 8;
                         $7_1 = $4_1;
                         label$112 : {
                          if (($16_1 | 0) <= ($4_1 | 0)) {
                           $4_1 = $5_1;
                           $13 = 0;
                           $3 = $7_1;
                           break label$112;
                          }
                          $13 = $1937($7_1 + $21_1 | 0, 0);
                          $4_1 = $7_1 + 1 | 0;
                          $3 = $4_1;
                         }
                         $5_1 = $4_1;
                         $4_1 = $3;
                         $3 = $41_1 | $13 & 255;
                         $7_1 = $3;
                         $8 = $8 + 1 | 0;
                         if (($8 | 0) != 2) {
                          continue
                         }
                         break;
                        };
                        if (($1_1 | 0) < ($3 | 0) & ($1_1 | 0) >= ($12_1 | 0)) {
                         break label$107
                        }
                        $4_1 = $3;
                        $8 = $5_1;
                        $5_1 = $15_1 + 1 | 0;
                        if (($23_1 | 0) != ($5_1 | 0)) {
                         continue
                        }
                        break;
                       };
                       $5_1 = -1;
                       break label$97;
                      }
                      $5_1 = $25_1 & 255;
                     }
                     $3 = $6_1 + 456 | 0;
                     $1973($3, 0, $1944($33_1 + 8 | 0, 0));
                     $1983($6_1, 448, $1959($33_1, 0), i64toi32_i32$HIGH_BITS);
                     $7_1 = $6_1 + 48 | 0;
                     $1973($7_1 + 8 | 0, 0, $1944($32_1 + 8 | 0, 0));
                     $1983($6_1, 48, $1959($32_1, 0), i64toi32_i32$HIGH_BITS);
                     $13 = $6_1 + 436 | 0;
                     $444($13, $7_1, $5_1);
                     $7_1 = $6_1 + 32 | 0;
                     $1973($7_1 + 8 | 0, 0, $1944($3, 0));
                     $3 = $6_1 + 16 | 0;
                     $1973($3 + 8 | 0, 0, $1944($13 + 8 | 0, 0));
                     $1983($6_1, 32, $1960($6_1, 448), i64toi32_i32$HIGH_BITS);
                     $1983($6_1, 16, $1959($6_1, 436), i64toi32_i32$HIGH_BITS);
                     $446($6_1 + 96 | 0, $7_1, $3);
                    }
                    $4_1 = 1;
                   }
                   $13 = $4_1;
                   if (($9 | 0) <= 0) {
                    $8 = 0;
                    break label$1;
                   }
                   $8 = 0;
                   if (($14 | 0) > 9) {
                    break label$1
                   }
                   $15_1 = $9 - 1 | 0;
                   $11_1 = $1963(($6_1 + 240 | 0) + ($15_1 << 2) | 0, 0);
                   $3 = ($6_1 + 112 | 0) + Math_imul($14, 12) | 0;
                   $21_1 = $6_1 + 88 | 0;
                   $1973($3 + 8 | 0, 0, $1944($21_1, 0));
                   $1982($3, 0, $1960($6_1, 80), i64toi32_i32$HIGH_BITS);
                   $23_1 = $6_1 + 456 | 0;
                   $3 = ($24 | 0) == 10 ? $6_1 + 96 | 0 : $40_1;
                   $16_1 = $1944($3 + 8 | 0, 0);
                   $1973($23_1, 0, $16_1);
                   $3 = $1959($3, 0);
                   $1983($6_1, 448, $3, i64toi32_i32$HIGH_BITS);
                   $5_1 = $16_1 & $16_1 >> 31;
                   $1973($6_1, 452, $5_1);
                   $25_1 = $3;
                   $9 = $5_1;
                   $4_1 = 0;
                   while (1) {
                    $8 = $8 << 8;
                    $3 = $5_1;
                    label$117 : {
                     if (($3 | 0) >= ($16_1 | 0)) {
                      $5_1 = $9;
                      $12_1 = $3;
                      $7_1 = 0;
                      break label$117;
                     }
                     $5_1 = $3 + 1 | 0;
                     $12_1 = $5_1;
                     $7_1 = $1937($3 + $25_1 | 0, 0);
                    }
                    $3 = $5_1;
                    $9 = $3;
                    $5_1 = $12_1;
                    $7_1 = $8 | $7_1 & 255;
                    $8 = $7_1;
                    $4_1 = $4_1 + 1 | 0;
                    if (($4_1 | 0) != 2) {
                     continue
                    }
                    break;
                   };
                   $1973($6_1, 452, $3);
                   $3 = ($7_1 | 0) > 33899 ? 32768 : ($7_1 | 0) > 1239 ? 1131 : 107;
                   if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
                    $4_1 = ~~$11_1
                   } else {
                    $4_1 = -2147483648
                   }
                   $3 = $4_1 + $3 | 0;
                   label$121 : {
                    if (!(($3 | 0) >= 0 & ($3 | 0) < ($7_1 | 0))) {
                     $1973($6_1, 444, 0);
                     $1982($6_1, 436, 0, 0);
                     break label$121;
                    }
                    $1973($6_1 + 8 | 0, 0, $1944($23_1, 0));
                    $1983($6_1, 0, $1960($6_1, 448), i64toi32_i32$HIGH_BITS);
                    $444($6_1 + 436 | 0, $6_1, $3);
                   }
                   $3 = $1944($6_1 + 444 | 0, 0);
                   $1973($21_1, 0, $3);
                   $1983($6_1, 80, $1959($6_1, 436), i64toi32_i32$HIGH_BITS);
                   if (!$3) {
                    $8 = 0;
                    break label$1;
                   }
                   $1973($6_1, 84, 0);
                   $3 = $14 + 1 | 0;
                   $7_1 = $13;
                   $4_1 = $15_1;
                   break label$5;
                  }
                  if (($14 | 0) <= 0) {
                   $8 = 0;
                   break label$1;
                  }
                  $3 = $14 - 1 | 0;
                  $4_1 = ($6_1 + 112 | 0) + Math_imul($3, 12) | 0;
                  $1973($6_1 + 88 | 0, 0, $1944($4_1 + 8 | 0, 0));
                  $1983($6_1, 80, $1959($4_1, 0), i64toi32_i32$HIGH_BITS);
                  $4_1 = $9;
                  break label$5;
                 }
                 $489($2_1);
                 $8 = 1;
                 break label$1;
                }
                $5_1 = 0;
                $8 = 0;
                label$127 : {
                 label$128 : {
                  label$129 : {
                   label$130 : {
                    $3 = $1944($6_1, 84);
                    if (($15_1 | 0) > ($3 | 0)) {
                     $1973($6_1, 84, $3 + 1 | 0);
                     $5_1 = $1937($1944($6_1, 80) + $3 | 0, 0);
                    }
                    switch (($5_1 & 255) - 34 | 0) {
                    case 3:
                     break label$127;
                    case 2:
                     break label$128;
                    case 1:
                     break label$129;
                    case 0:
                     break label$130;
                    default:
                     break label$1;
                    };
                   }
                   if (($9 | 0) < 7) {
                    break label$1
                   }
                   $11_1 = $1963($6_1, 264);
                   $10_1 = $1963($6_1, 260);
                   $18_1 = $1963($6_1, 256);
                   $19 = $1963($6_1, 240);
                   $20_1 = $1963($6_1, 244);
                   $17_1 = $1963($6_1, 248);
                   $488($2_1, $19, Math_fround(0.0), $20_1, $17_1, $1963($6_1, 252), Math_fround(0.0));
                   $488($2_1, $18_1, Math_fround(0.0), $10_1, Math_fround(-$17_1), $11_1, Math_fround(0.0));
                   $3 = $14;
                   $4_1 = 0;
                   break label$5;
                  }
                  if (($9 | 0) < 13) {
                   break label$1
                  }
                  $11_1 = $1963($6_1, 284);
                  $10_1 = $1963($6_1, 280);
                  $18_1 = $1963($6_1, 276);
                  $17_1 = $1963($6_1, 272);
                  $19 = $1963($6_1, 268);
                  $20_1 = $1963($6_1, 264);
                  $488($2_1, $1963($6_1, 240), $1963($6_1, 244), $1963($6_1, 248), $1963($6_1, 252), $1963($6_1, 256), $1963($6_1, 260));
                  $488($2_1, $20_1, $19, $17_1, $18_1, $10_1, $11_1);
                  $3 = $14;
                  $4_1 = 0;
                  break label$5;
                 }
                 if (($9 | 0) < 9) {
                  break label$1
                 }
                 $10_1 = $1963($6_1, 272);
                 $18_1 = $1963($6_1, 264);
                 $17_1 = $1963($6_1, 260);
                 $11_1 = $1963($6_1, 268);
                 $22_1 = $1963($6_1, 240);
                 $19 = $1963($6_1, 244);
                 $29_1 = $1963($6_1, 248);
                 $20_1 = $1963($6_1, 252);
                 $488($2_1, $22_1, $19, $29_1, $20_1, $1963($6_1, 256), Math_fround(0.0));
                 $488($2_1, $17_1, Math_fround(0.0), $18_1, $11_1, $10_1, Math_fround(-Math_fround($11_1 + Math_fround($19 + $20_1))));
                 $3 = $14;
                 $4_1 = 0;
                 break label$5;
                }
                if (($9 | 0) < 11) {
                 break label$1
                }
                $11_1 = $1963($6_1, 280);
                $10_1 = $1963($6_1, 272);
                $18_1 = $1963($6_1, 264);
                $17_1 = $1963($6_1, 276);
                $19 = $1963($6_1, 268);
                $20_1 = $1963($6_1, 240);
                $22_1 = $1963($6_1, 244);
                $29_1 = $1963($6_1, 248);
                $37 = $1963($6_1, 252);
                $38_1 = $1963($6_1, 256);
                $39_1 = $1963($6_1, 260);
                $488($2_1, $20_1, $22_1, $29_1, $37, $38_1, $39_1);
                $20_1 = Math_fround($10_1 + Math_fround($18_1 + Math_fround($38_1 + Math_fround($20_1 + $29_1))));
                $22_1 = Math_fround($17_1 + Math_fround($19 + Math_fround($39_1 + Math_fround($22_1 + $37))));
                $3 = Math_fround(Math_abs($20_1)) > Math_fround(Math_abs($22_1));
                $488($2_1, $18_1, $19, $10_1, $17_1, $3 ? $11_1 : Math_fround(-$20_1), $3 ? Math_fround(-$22_1) : $11_1);
                $3 = $14;
                $4_1 = 0;
                break label$5;
               }
               if ($24 >>> 0 < 32) {
                $8 = 0;
                break label$1;
               }
               if (($24 | 0) != 255) {
                break label$12
               }
              }
              $25_1 = $1944($6_1, 80);
              $5_1 = $1944($6_1, 84);
              $4_1 = $5_1;
              $8 = 0;
              $12_1 = 0;
              while (1) {
               $12_1 = $12_1 << 8;
               $3 = $4_1;
               label$133 : {
                if (($15_1 | 0) <= ($3 | 0)) {
                 $4_1 = $5_1;
                 $7_1 = $3;
                 $3 = 0;
                 break label$133;
                }
                $4_1 = $3 + 1 | 0;
                $7_1 = $4_1;
                $3 = $1937($3 + $25_1 | 0, 0);
               }
               $5_1 = $4_1;
               $4_1 = $7_1;
               $3 = $12_1 | $3 & 255;
               $12_1 = $3;
               $8 = $8 + 1 | 0;
               if (($8 | 0) != 4) {
                continue
               }
               break;
              };
              $1973($6_1, 84, $5_1);
              $11_1 = Math_fround(Math_fround($3 | 0) * Math_fround(.0000152587890625));
              break label$11;
             }
             $3 = $1944($6_1, 84);
             $4_1 = $3 - 1 | 0;
             $1973($6_1, 84, ($3 | 0) <= 0 ? $15_1 : ($4_1 | 0) > ($15_1 | 0) ? $15_1 : $4_1);
             $11_1 = Math_fround($486($6_1 + 80 | 0) << 16 >> 16);
            }
            if (($9 | 0) > 47) {
             $8 = 0;
             break label$1;
            }
            $1986(($6_1 + 240 | 0) + ($9 << 2) | 0, 0, $11_1);
            $3 = $14;
            $7_1 = $13;
            $4_1 = $9 + 1 | 0;
            break label$5;
           }
           $9 = 1;
           break label$7;
          }
          $5_1 = 1;
         }
         while (1) {
          if (!$5_1) {
           $3 = $36_1;
           $4_1 = $3 + 3 | 0;
           if (($9 | 0) <= ($4_1 | 0)) {
            $3 = $14;
            $7_1 = $13;
            $4_1 = 0;
            break label$5;
           }
           $7_1 = $6_1 + 240 | 0;
           $10_1 = $1963($7_1 + ($4_1 << 2) | 0, 0);
           $4_1 = $7_1;
           $7_1 = $3 << 2;
           $4_1 = $4_1 + $7_1 | 0;
           $18_1 = $1963($4_1, 0);
           $17_1 = $1963($4_1 + 8 | 0, 0);
           $11_1 = Math_fround(0.0);
           $19 = $1963($4_1 + 4 | 0, 0);
           if (($9 - $3 | 0) == 5) {
            $11_1 = $1963(($7_1 + $6_1 | 0) + 256 | 0, 0)
           }
           $488($2_1, Math_fround(0.0), $18_1, $19, $17_1, $10_1, $11_1);
           $35_1 = $3 + 4 | 0;
           $5_1 = 1;
           continue;
          }
          $3 = $35_1;
          $7_1 = $3 + 3 | 0;
          if (($9 | 0) <= ($7_1 | 0)) {
           $3 = $14;
           $7_1 = $13;
           $4_1 = 0;
           break label$5;
          } else {
           $5_1 = $3 << 2;
           $4_1 = $5_1 + ($6_1 + 240 | 0) | 0;
           $10_1 = $1963($4_1, 0);
           $18_1 = $1963($4_1 + 8 | 0, 0);
           $11_1 = Math_fround(0.0);
           $17_1 = $1963($4_1 + 4 | 0, 0);
           if (($9 - $3 | 0) == 5) {
            $11_1 = $1963(($5_1 + $6_1 | 0) + 256 | 0, 0)
           }
           $488($2_1, $10_1, Math_fround(0.0), $17_1, $18_1, $11_1, $1963(($6_1 + 240 | 0) + ($7_1 << 2) | 0, 0));
           $36_1 = $3 + 4 | 0;
           $5_1 = 0;
           continue;
          }
         };
        }
        while (1) {
         if (!$9) {
          if (($28_1 | 0) >= ($31_1 | 0)) {
           $3 = $14;
           $7_1 = $13;
           $4_1 = 0;
           break label$5;
          }
          $10_1 = $1963(($6_1 + 240 | 0) + ($28_1 << 2) | 0, 0);
          $11_1 = Math_fround($1963($2_1, 20) + Math_fround(0.0));
          $1986($2_1, 20, $11_1);
          $10_1 = Math_fround($10_1 + $1963($2_1, 16));
          $1986($2_1, 16, $10_1);
          if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
           $5_1 = ~~$11_1
          } else {
           $5_1 = -2147483648
          }
          if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
           $4_1 = ~~$10_1
          } else {
           $4_1 = -2147483648
          }
          label$151 : {
           if ($1944($2_1, 0)) {
            label$153 : {
             if (($1944($2_1, 28) | 0) >= ($4_1 | 0)) {
              if ($1944($2_1, 4)) {
               break label$153
              }
             }
             $1973($2_1, 28, $4_1);
            }
            label$155 : {
             if (($1944($2_1, 36) | 0) >= ($5_1 | 0)) {
              if ($1944($2_1, 4)) {
               break label$155
              }
             }
             $1973($2_1, 36, $5_1);
            }
            label$157 : {
             if (($1944($2_1, 24) | 0) <= ($4_1 | 0)) {
              if ($1944($2_1, 4)) {
               break label$157
              }
             }
             $1973($2_1, 24, $4_1);
            }
            label$159 : {
             if (($1944($2_1, 32) | 0) <= ($5_1 | 0)) {
              if ($1944($2_1, 4)) {
               break label$159
              }
             }
             $1973($2_1, 32, $5_1);
            }
            $1973($2_1, 4, 1);
            break label$151;
           }
           $3 = $1944($2_1, 40) + Math_imul($1944($2_1, 44), 14) | 0;
           $1981($3, 4);
           $1970($3, 2, $5_1);
           $1970($3, 0, $4_1);
           $1968($3, 12, 2);
          }
          $1973($2_1, 44, $1944($2_1, 44) + 1 | 0);
          $30 = $31_1;
          $27_1 = $28_1 + 1 | 0;
          $9 = 1;
          continue;
         }
         if (($27_1 | 0) >= ($30 | 0)) {
          $3 = $14;
          $7_1 = $13;
          $4_1 = 0;
          break label$5;
         } else {
          $10_1 = $1963(($6_1 + 240 | 0) + ($27_1 << 2) | 0, 0);
          $11_1 = Math_fround($1963($2_1, 16) + Math_fround(0.0));
          $1986($2_1, 16, $11_1);
          $10_1 = Math_fround($10_1 + $1963($2_1, 20));
          $1986($2_1, 20, $10_1);
          if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
           $5_1 = ~~$11_1
          } else {
           $5_1 = -2147483648
          }
          if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
           $4_1 = ~~$10_1
          } else {
           $4_1 = -2147483648
          }
          label$166 : {
           if ($1944($2_1, 0)) {
            label$168 : {
             if (($1944($2_1, 28) | 0) >= ($5_1 | 0)) {
              if ($1944($2_1, 4)) {
               break label$168
              }
             }
             $1973($2_1, 28, $5_1);
            }
            label$170 : {
             if (($1944($2_1, 36) | 0) >= ($4_1 | 0)) {
              if ($1944($2_1, 4)) {
               break label$170
              }
             }
             $1973($2_1, 36, $4_1);
            }
            label$172 : {
             if (($1944($2_1, 24) | 0) <= ($5_1 | 0)) {
              if ($1944($2_1, 4)) {
               break label$172
              }
             }
             $1973($2_1, 24, $5_1);
            }
            label$174 : {
             if (($1944($2_1, 32) | 0) <= ($4_1 | 0)) {
              if ($1944($2_1, 4)) {
               break label$174
              }
             }
             $1973($2_1, 32, $4_1);
            }
            $1973($2_1, 4, 1);
            break label$166;
           }
           $3 = $1944($2_1, 40) + Math_imul($1944($2_1, 44), 14) | 0;
           $1981($3, 4);
           $1970($3, 2, $4_1);
           $1970($3, 0, $5_1);
           $1968($3, 12, 2);
          }
          $1973($2_1, 44, $1944($2_1, 44) + 1 | 0);
          $31_1 = $30;
          $28_1 = $27_1 + 1 | 0;
          $9 = 0;
          continue;
         }
        };
       }
       $3 = $14;
       $7_1 = $13;
       $4_1 = 0;
      }
      $12_1 = $26_1;
     }
     $8 = $34_1;
    }
    $9 = $4_1;
    $5_1 = $1944($6_1, 88);
    $4_1 = $1944($6_1, 84);
    if (($5_1 | 0) > ($4_1 | 0)) {
     continue
    }
    break;
   };
   $8 = 0;
  }
  global$0 = $6_1 + 464 | 0;
  return $8;
 }
 
 function $484($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  if (($1944($0_1, 12) | 0) <= ($1_1 | 0)) {
   return -1
  }
  $2_1 = -1;
  $3 = $1944($0_1, 48);
  if (($3 | 0) <= 1) {
   $2_1 = $1944($0_1, 4) + $1944($0_1, 16) | 0;
   $4_1 = $1944($0_1, 24);
   label$3 : {
    if (!$3) {
     $0_1 = $2_1 + ($1_1 << 1) | 0;
     $1_1 = $1937($0_1 + 3 | 0, 0) << 1 | $1937($0_1, 2) << 9;
     $0_1 = $1937($0_1, 1) << 1 | $1937($0_1, 0) << 9;
     break label$3;
    }
    $2_1 = $2_1 + ($1_1 << 2) | 0;
    $0_1 = $1942($2_1, 4);
    $1_1 = $0_1 << 24 | ($0_1 & 65280) << 8 | ($0_1 >>> 8 & 65280 | $0_1 >>> 24);
    $0_1 = $1942($2_1, 0);
    $0_1 = $0_1 << 24 | ($0_1 & 65280) << 8 | ($0_1 >>> 8 & 65280 | $0_1 >>> 24);
   }
   $2_1 = ($0_1 | 0) == ($1_1 | 0) ? -1 : $4_1 + $0_1 | 0;
  }
  return $2_1;
 }
 
 function $486($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = $1944($0_1, 4);
  $4_1 = $1944($0_1, 8);
  $1_1 = 0;
  label$1 : {
   if (($2_1 | 0) >= ($4_1 | 0)) {
    break label$1
   }
   $1973($0_1, 4, $2_1 + 1 | 0);
   $1_1 = $1937($1944($0_1, 0) + $2_1 | 0, 0);
  }
  $3 = $1_1 & 255;
  $2_1 = $1_1;
  if (($1_1 - 32 & 255) >>> 0 <= 214) {
   return $3 - 139 | 0
  }
  if (($2_1 + 9 & 255) >>> 0 <= 3) {
   $3 = $3 << 8;
   $1_1 = 0;
   $2_1 = $1944($0_1, 4);
   if (($4_1 | 0) > ($2_1 | 0)) {
    $1973($0_1, 4, $2_1 + 1 | 0);
    $1_1 = $1937($1944($0_1, 0) + $2_1 | 0, 0);
   }
   return ($1_1 + $3 | 0) - 63124 | 0;
  }
  if (($2_1 + 5 & 255) >>> 0 <= 3) {
   $2_1 = 0;
   $1_1 = $1944($0_1, 4);
   if (($4_1 | 0) > ($1_1 | 0)) {
    $1973($0_1, 4, $1_1 + 1 | 0);
    $2_1 = $1937($1944($0_1, 0) + $1_1 | 0, 0);
   }
   return 64148 - ($2_1 | $3 << 8) | 0;
  }
  $1_1 = 0;
  label$7 : {
   label$8 : {
    switch (($2_1 & 255) - 28 | 0) {
    case 0:
     $2_1 = $1944($0_1, 4);
     $3 = 0;
     while (1) {
      $1_1 = $1_1 << 8;
      $5_1 = $1_1;
      $1_1 = $2_1;
      label$11 : {
       if (($4_1 | 0) <= ($1_1 | 0)) {
        $1_1 = 0;
        break label$11;
       }
       $2_1 = $1_1 + 1 | 0;
       $1973($0_1, 4, $2_1);
       $1_1 = $1937($1944($0_1, 0) + $1_1 | 0, 0);
      }
      $1_1 = $5_1 | $1_1 & 255;
      $3 = $3 + 1 | 0;
      if (($3 | 0) != 2) {
       continue
      }
      break;
     };
     break label$7;
    case 1:
     break label$8;
    default:
     break label$7;
    };
   }
   $2_1 = $1944($0_1, 4);
   $3 = 0;
   while (1) {
    $1_1 = $1_1 << 8;
    $5_1 = $1_1;
    $1_1 = $2_1;
    label$14 : {
     if (($4_1 | 0) <= ($1_1 | 0)) {
      $1_1 = 0;
      break label$14;
     }
     $2_1 = $1_1 + 1 | 0;
     $1973($0_1, 4, $2_1);
     $1_1 = $1937($1944($0_1, 0) + $1_1 | 0, 0);
    }
    $1_1 = $5_1 | $1_1 & 255;
    $3 = $3 + 1 | 0;
    if (($3 | 0) != 4) {
     continue
    }
    break;
   };
  }
  return $1_1;
 }
 
 function $487($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0;
  $489($0_1);
  $1_1 = Math_fround($1963($0_1, 16) + $1_1);
  $1986($0_1, 8, $1_1);
  $1986($0_1, 16, $1_1);
  $2_1 = Math_fround($1963($0_1, 20) + $2_1);
  $1986($0_1, 20, $2_1);
  $1986($0_1, 12, $2_1);
  if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
   $3 = ~~$2_1
  } else {
   $3 = -2147483648
  }
  if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
   $4_1 = ~~$1_1
  } else {
   $4_1 = -2147483648
  }
  label$5 : {
   if ($1944($0_1, 0)) {
    label$7 : {
     if (($1944($0_1, 28) | 0) >= ($4_1 | 0)) {
      if ($1944($0_1, 4)) {
       break label$7
      }
     }
     $1973($0_1, 28, $4_1);
    }
    label$9 : {
     if (($1944($0_1, 36) | 0) >= ($3 | 0)) {
      if ($1944($0_1, 4)) {
       break label$9
      }
     }
     $1973($0_1, 36, $3);
    }
    label$11 : {
     if (($1944($0_1, 24) | 0) <= ($4_1 | 0)) {
      if ($1944($0_1, 4)) {
       break label$11
      }
     }
     $1973($0_1, 24, $4_1);
    }
    label$13 : {
     if (($1944($0_1, 32) | 0) <= ($3 | 0)) {
      if ($1944($0_1, 4)) {
       break label$13
      }
     }
     $1973($0_1, 32, $3);
    }
    $1973($0_1, 4, 1);
    break label$5;
   }
   $5_1 = $1944($0_1, 40) + Math_imul($1944($0_1, 44), 14) | 0;
   $1981($5_1, 4);
   $1970($5_1, 2, $3);
   $1970($5_1, 0, $4_1);
   $1968($5_1, 12, 1);
  }
  $1973($0_1, 44, $1944($0_1, 44) + 1 | 0);
 }
 
 function $488($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0;
  $2_1 = Math_fround($1963($0_1, 20) + $2_1);
  $4_1 = Math_fround($2_1 + $4_1);
  $6_1 = Math_fround($4_1 + $6_1);
  $1986($0_1, 20, $6_1);
  $1_1 = Math_fround($1963($0_1, 16) + $1_1);
  $3 = Math_fround($1_1 + $3);
  $5_1 = Math_fround($3 + $5_1);
  $1986($0_1, 16, $5_1);
  if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
   $8 = ~~$2_1
  } else {
   $8 = -2147483648
  }
  if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
   $9 = ~~$1_1
  } else {
   $9 = -2147483648
  }
  if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
   $10_1 = ~~$4_1
  } else {
   $10_1 = -2147483648
  }
  if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
   $11_1 = ~~$3
  } else {
   $11_1 = -2147483648
  }
  if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
   $12_1 = ~~$6_1
  } else {
   $12_1 = -2147483648
  }
  if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
   $13 = ~~$5_1
  } else {
   $13 = -2147483648
  }
  label$13 : {
   if ($1944($0_1, 0)) {
    label$15 : {
     if (($1944($0_1, 28) | 0) >= ($13 | 0)) {
      if ($1944($0_1, 4)) {
       break label$15
      }
     }
     $1973($0_1, 28, $13);
    }
    label$17 : {
     if (($1944($0_1, 36) | 0) >= ($12_1 | 0)) {
      if ($1944($0_1, 4)) {
       break label$17
      }
     }
     $1973($0_1, 36, $12_1);
    }
    label$19 : {
     if (($1944($0_1, 24) | 0) <= ($13 | 0)) {
      if ($1944($0_1, 4)) {
       break label$19
      }
     }
     $1973($0_1, 24, $13);
    }
    label$21 : {
     if (($1944($0_1, 32) | 0) <= ($12_1 | 0)) {
      if ($1944($0_1, 4)) {
       break label$21
      }
     }
     $1973($0_1, 32, $12_1);
    }
    $1973($0_1, 4, 1);
    if (($1944($0_1, 28) | 0) < ($9 | 0)) {
     $1973($0_1, 28, $9)
    }
    if (($1944($0_1, 36) | 0) < ($8 | 0)) {
     $1973($0_1, 36, $8)
    }
    if (($1944($0_1, 24) | 0) > ($9 | 0)) {
     $1973($0_1, 24, $9)
    }
    if (($1944($0_1, 32) | 0) > ($8 | 0)) {
     $1973($0_1, 32, $8)
    }
    $1973($0_1, 4, 1);
    if (($1944($0_1, 28) | 0) < ($11_1 | 0)) {
     $1973($0_1, 28, $11_1)
    }
    if (($1944($0_1, 36) | 0) < ($10_1 | 0)) {
     $1973($0_1, 36, $10_1)
    }
    if (($1944($0_1, 24) | 0) > ($11_1 | 0)) {
     $1973($0_1, 24, $11_1)
    }
    if (($1944($0_1, 32) | 0) > ($10_1 | 0)) {
     $1973($0_1, 32, $10_1)
    }
    $1973($0_1, 4, 1);
    break label$13;
   }
   $7_1 = $1944($0_1, 40) + Math_imul($1944($0_1, 44), 14) | 0;
   $1970($7_1, 10, $10_1);
   $1970($7_1, 8, $11_1);
   $1970($7_1, 6, $8);
   $1970($7_1, 4, $9);
   $1970($7_1, 2, $12_1);
   $1970($7_1, 0, $13);
   $1968($7_1, 12, 4);
  }
  $1973($0_1, 44, $1944($0_1, 44) + 1 | 0);
 }
 
 function $489($0_1) {
  var $1_1 = Math_fround(0), $2_1 = 0, $3 = 0, $4_1 = 0;
  label$1 : {
   $1_1 = $1963($0_1, 8);
   if ($1963($0_1, 16) == $1_1) {
    if ($1963($0_1, 12) == $1963($0_1, 20)) {
     break label$1
    }
   }
   if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
    $2_1 = ~~$1_1
   } else {
    $2_1 = -2147483648
   }
   $1_1 = $1963($0_1, 12);
   label$5 : {
    if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
     $3 = ~~$1_1;
     break label$5;
    }
    $3 = -2147483648;
   }
   label$7 : {
    if ($1944($0_1, 0)) {
     label$9 : {
      if (($1944($0_1, 28) | 0) >= ($2_1 | 0)) {
       if ($1944($0_1, 4)) {
        break label$9
       }
      }
      $1973($0_1, 28, $2_1);
     }
     label$11 : {
      if (($1944($0_1, 36) | 0) >= ($3 | 0)) {
       if ($1944($0_1, 4)) {
        break label$11
       }
      }
      $1973($0_1, 36, $3);
     }
     label$13 : {
      if (($1944($0_1, 24) | 0) <= ($2_1 | 0)) {
       if ($1944($0_1, 4)) {
        break label$13
       }
      }
      $1973($0_1, 24, $2_1);
     }
     label$15 : {
      if (($1944($0_1, 32) | 0) <= ($3 | 0)) {
       if ($1944($0_1, 4)) {
        break label$15
       }
      }
      $1973($0_1, 32, $3);
     }
     $1973($0_1, 4, 1);
     break label$7;
    }
    $4_1 = $1944($0_1, 40) + Math_imul($1944($0_1, 44), 14) | 0;
    $1981($4_1, 4);
    $1970($4_1, 2, $3);
    $1970($4_1, 0, $2_1);
    $1968($4_1, 12, 2);
   }
   $1973($0_1, 44, $1944($0_1, 44) + 1 | 0);
  }
 }
 
 function $490($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = 0, $21_1 = Math_fround(0), $22_1 = 0, $23_1 = Math_fround(0), $24 = Math_fround(0), $25_1 = Math_fround(0);
  $16_1 = $270($0_1);
  $7_1 = global$0 - 160 | 0;
  global$0 = $7_1;
  $9 = $1944(0, 73568);
  $17_1 = $1944($9, 7080);
  $1968($17_1, 140, 1);
  if (!$1937($17_1, 143)) {
   $10_1 = $0_1;
   $208($7_1 + 152 | 0);
   $1983($7_1, 136, $1959($3, 0), i64toi32_i32$HIGH_BITS);
   $8 = $1963($7_1, 152);
   $8 = $8 >= Math_fround(1.0) ? $8 : Math_fround(1.0);
   $12_1 = $2_1 & 50331648;
   label$2 : {
    label$3 : {
     if ($12_1) {
      $1983($7_1, 8, $1960($7_1, 136), i64toi32_i32$HIGH_BITS);
      $21_1 = $8;
      $8 = $1963($7_1, 156);
      $293($7_1 + 144 | 0, $7_1 + 8 | 0, $21_1, $8 >= Math_fround(1.0) ? $8 : Math_fround(1.0));
      $8 = $1963($17_1, 208);
      $5_1 = $1959($17_1, 208);
      $0_1 = i64toi32_i32$HIGH_BITS;
      $1986($7_1 + 132 | 0, 0, Math_fround($1963($17_1 + 212 | 0, 0) + $1963($7_1, 148)));
      $1983($7_1, 120, $5_1, $0_1);
      $1986($7_1, 128, Math_fround($8 + $1963($7_1, 144)));
      if (!$95($7_1 + 120 | 0, 0)) {
       break label$3
      }
      $277($7_1 + 120 | 0, Math_fround(-1.0));
      $15_1 = 0;
      break label$2;
     }
     $1983($7_1, 0, $1960($7_1, 136), i64toi32_i32$HIGH_BITS);
     $293($7_1 + 144 | 0, $7_1, $8, Math_fround(0.0));
     $8 = $1963($17_1, 208);
     $5_1 = $1959($17_1, 208);
     $0_1 = i64toi32_i32$HIGH_BITS;
     $1986($7_1 + 132 | 0, 0, Math_fround($1963($17_1 + 212 | 0, 0) + $1963($7_1, 148)));
     $1983($7_1, 120, $5_1, $0_1);
     $1986($7_1, 128, Math_fround($8 + $1963($7_1, 144)));
    }
    $5_1 = $35($9 + 8068 | 0, $16_1);
    $0_1 = $1944($5_1, 0);
    label$5 : {
     if (($0_1 | 0) != -1) {
      $5_1 = $1944($9 + 8064 | 0, 0) + Math_imul($0_1, 456) | 0;
      break label$5;
     }
     $1973($5_1, 0, $1944($9 + 8080 | 0, 0));
     $13 = $9 + 8056 | 0;
     $19 = $1944($13, 24);
     $0_1 = $1944($13, 0);
     label$1 : {
      if (($19 | 0) == ($0_1 | 0)) {
       $14 = $0_1 + 1 | 0;
       $6_1 = $0_1;
       $0_1 = $1944($13, 4);
       label$30 : {
        if (($6_1 | 0) < ($0_1 | 0)) {
         break label$30
        }
        $5_1 = $0_1;
        $0_1 = $0_1 ? $0_1 + (($0_1 | 0) / 2 | 0) | 0 : 8;
        $6_1 = ($0_1 | 0) > ($14 | 0) ? $0_1 : $14;
        if (($5_1 | 0) >= ($6_1 | 0)) {
         break label$30
        }
        $5_1 = $16(Math_imul($6_1, 456));
        $0_1 = $1944($13, 8);
        if ($0_1) {
         $1602($5_1, $0_1, Math_imul($1944($13, 0), 456));
         $17($1944($13, 8));
        }
        $1973($13, 4, $6_1);
        $1973($13, 8, $5_1);
       }
       $1973($13, 0, $14);
       $0_1 = $1944($13, 24) + 1 | 0;
       break label$1;
      }
      $0_1 = $1944($1944($13, 8) + Math_imul($19, 456) | 0, 0);
     }
     $1973($13, 24, $0_1);
     $0_1 = Math_imul($19, 456);
     $1973($1604($1944($13, 8) + $0_1 | 0, 0, 456), 80, -1);
     $1973($13, 28, $1944($13, 28) + 1 | 0);
     $5_1 = $1944($13, 8) + $0_1 | 0;
    }
    if (($1944($5_1, 80) | 0) == ($1944($9, 6984) | 0)) {
     $15_1 = $1939($5_1, 96) + 1 | 0
    }
    $13 = $1944($5_1, 4);
    $20_1 = $1944($9, 8040);
    $14 = $20_1 + 1 | 0;
    $1973($9, 8040, $14);
    $11_1 = ($5_1 - $1944($9 + 8064 | 0, 0) | 0) / 456 | 0;
    label$8 : {
     if (($1944($9, 8044) | 0) > ($20_1 | 0)) {
      break label$8
     }
     $1604($7_1 + 16 | 0, 0, 104);
     $1973($7_1, 20, -1082130432);
     $6_1 = $1944($9 + 8048 | 0, 0);
     label$9 : {
      if (($6_1 | 0) > ($20_1 | 0)) {
       break label$9
      }
      $0_1 = $6_1 ? $6_1 + (($6_1 | 0) / 2 | 0) | 0 : 8;
      $19 = ($0_1 | 0) > ($14 | 0) ? $0_1 : $14;
      if (($6_1 | 0) >= ($19 | 0)) {
       break label$9
      }
      $6_1 = $16(Math_imul($19, 104));
      $0_1 = $1944($9 + 8052 | 0, 0);
      if ($0_1) {
       $1602($6_1, $0_1, Math_imul($1944($9, 8044), 104));
       $17($1944($9, 8052));
      }
      $1973($9, 8048, $19);
      $1973($9, 8052, $6_1);
     }
     $0_1 = $1944($9, 8044);
     if (($20_1 | 0) >= ($0_1 | 0)) {
      while (1) {
       $6_1 = $0_1;
       $1602($1944($9, 8052) + Math_imul($0_1, 104) | 0, $7_1 + 16 | 0, 104);
       $0_1 = $0_1 + 1 | 0;
       if (($6_1 | 0) != ($20_1 | 0)) {
        continue
       }
       break;
      }
     }
     $1973($9, 8044, $14);
     $374($7_1 + 32 | 0);
     $0_1 = $1944($7_1 + 48 | 0, 0);
     if (!$0_1) {
      break label$8
     }
     $17($0_1);
    }
    $20_1 = $1944($9 + 8052 | 0, 0);
    $14 = $1944($9, 8040) - 1 | 0;
    $22_1 = $20_1 + Math_imul($14, 104) | 0;
    $1973($5_1, 12, $22_1);
    $1973($22_1, 0, $11_1);
    $1973($5_1, 376, $22_1 + 16 | 0);
    $1982($22_1, 16, 0, 1);
    $0_1 = $2_1 & 57344;
    $1968($5_1, 453, !$0_1);
    if (!$0_1) {
     if ($2_1 & 16777216) {
      $0_1 = 8192
     } else {
      $0_1 = $1937($17_1, 8) & 64 ? 8192 : 32768
     }
     $2_1 = $0_1 | $2_1;
    }
    $19 = $15_1 + $16_1 | 0;
    $6_1 = $1944($1944($17_1, 736), 8);
    $1970($5_1, 96, $15_1);
    $1973($5_1, 0, $16_1);
    $2_1 = ($2_1 & 57344) == 16384 ? $2_1 | 262144 : $2_1;
    $0_1 = $2_1 << 9 & 512 | $2_1;
    $0_1 = $2_1 & 50331648 ? $0_1 & -196609 : $0_1;
    $2_1 = $0_1 & 4096 ? $0_1 & -2049 : $0_1;
    $0_1 = $2_1 | 16;
    $16_1 = $6_1 & 256 ? $0_1 : $2_1 & 15 ? $2_1 : $0_1;
    $1973($5_1, 4, $16_1);
    $0_1 = $1944($9, 6984);
    $1973($5_1, 360, $17_1);
    $1973($5_1, 80, $0_1);
    $1973($5_1, 356, $17_1);
    $1968($5_1, 441, 0);
    $1973($5_1, 84, $1_1);
    $1986($5_1, 188, $4_1);
    $1982($22_1, 8, $1959($3, 0), i64toi32_i32$HIGH_BITS);
    label$18 : {
     if ($12_1) {
      $3 = $16_1 & 16777216;
      $4_1 = $4_1 > Math_fround(0.0) ? ($3 >>> 24 | 0 ? $4_1 : Math_fround(3402823466385288598117041.0e14)) : Math_fround(3402823466385288598117041.0e14);
      $2_1 = $4_1 != Math_fround(3402823466385288598117041.0e14);
      $0_1 = $16_1 & 50331648;
      if (!(!$2_1 & ($0_1 | 0) != 16777216)) {
       $1986($7_1, 20, ($0_1 | 0) == 16777216 ? Math_fround(1.1754943508222875e-38) : Math_fround(0.0));
       $1986($7_1, 16, $2_1 ? $4_1 : Math_fround(0.0));
       $252($7_1 + 16 | 0);
      }
      if (!($13 & 50331648)) {
       $1982($7_1, 16, 0, 0);
       $0_1 = $1944(0, 73568);
       $1973($0_1, 7300, $1944($0_1, 7300) | 128);
       $1982($0_1 + 7348 | 0, 0, $1959($7_1 + 16 | 0, 0), i64toi32_i32$HIGH_BITS);
      }
      $1986($7_1, 16, Math_fround($1963($7_1, 128) - $1963($7_1, 120)));
      $1986($7_1, 20, Math_fround($1963($7_1 + 132 | 0, 0) - $1963($7_1, 124)));
      $207($10_1, $19, $7_1 + 16 | 0, 0, $3 >>> 13 | 0);
      $0_1 = $1944($9, 7080);
      $1973($5_1, 360, $0_1);
      $1982($5_1, 244, $1959($0_1, 464), i64toi32_i32$HIGH_BITS);
      $1982($5_1 + 252 | 0, 0, $1959($0_1 + 472 | 0, 0), i64toi32_i32$HIGH_BITS);
      $23_1 = $1963($0_1 + 24 | 0, 0);
      $8 = $1963($0_1, 20);
      $21_1 = $1963($0_1, 12);
      $4_1 = $1963($0_1 + 16 | 0, 0);
      $1986($5_1 + 216 | 0, 0, $4_1);
      $1986($5_1, 212, $21_1);
      $1986($5_1 + 224 | 0, 0, Math_fround($4_1 + $23_1));
      $1986($5_1 + 220 | 0, 0, Math_fround($21_1 + $8));
      $1982($5_1, 228, $1959($0_1, 432), i64toi32_i32$HIGH_BITS);
      $1982($5_1 + 236 | 0, 0, $1959($0_1 + 440 | 0, 0), i64toi32_i32$HIGH_BITS);
      break label$18;
     }
     $1982($5_1, 228, $1960($7_1, 120), i64toi32_i32$HIGH_BITS);
     $0_1 = $7_1 + 128 | 0;
     $1982($5_1 + 236 | 0, 0, $1960($0_1, 0), i64toi32_i32$HIGH_BITS);
     $1982($5_1, 212, $1960($7_1, 120), i64toi32_i32$HIGH_BITS);
     $1982($5_1 + 220 | 0, 0, $1960($0_1, 0), i64toi32_i32$HIGH_BITS);
     $1982($5_1, 244, $1960($7_1, 120), i64toi32_i32$HIGH_BITS);
     $1982($5_1 + 252 | 0, 0, $1960($0_1, 0), i64toi32_i32$HIGH_BITS);
    }
    $267($19);
    $18_1 = $1944($5_1, 360);
    $1986($5_1, 152, $1963($18_1 + 272 | 0, 0));
    $1982($5_1, 324, $1959($18_1, 496), i64toi32_i32$HIGH_BITS);
    $1982($5_1 + 332 | 0, 0, $1959($18_1 + 504 | 0, 0), i64toi32_i32$HIGH_BITS);
    $1968($5_1, 455, $1937($18_1, 143));
    $3 = $20_1 + Math_imul($14, 104) | 0;
    $1982($3 + 44 | 0, 0, $1959($18_1 + 472 | 0, 0), i64toi32_i32$HIGH_BITS);
    $1982($3, 36, $1959($18_1, 464), i64toi32_i32$HIGH_BITS);
    $1982($3, 52, $1959($18_1, 480), i64toi32_i32$HIGH_BITS);
    $1982($3 + 60 | 0, 0, $1959($18_1 + 488 | 0, 0), i64toi32_i32$HIGH_BITS);
    $1973($3, 92, $1944($17_1 + 276 | 0, 0));
    $2_1 = $18_1 + 256 | 0;
    $1982($3, 68, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
    $0_1 = $18_1 + 248 | 0;
    $1982($3, 76, $1959($0_1, 0), i64toi32_i32$HIGH_BITS);
    $1982($3, 84, $1959($18_1 + 232 | 0, 0), i64toi32_i32$HIGH_BITS);
    $1986($3, 96, $1963($17_1 + 384 | 0, 0));
    $1973($3, 100, $1944($17_1 + 392 | 0, 0));
    $1982($2_1, 0, 0, 0);
    $1982($0_1, 0, 0, 0);
    $4_1 = Math_fround(0.0);
    $0_1 = $16_1 & 8389120;
    if (!$0_1) {
     $4_1 = $1963($9 + 5508 | 0, 0)
    }
    $8 = Math_fround(0.0);
    if (($0_1 | 0) == 512) {
     $8 = $1963($9 + 5508 | 0, 0)
    }
    $1986($5_1, 176, $4_1);
    $1986($5_1, 164, $8);
    $1986($5_1, 172, Math_fround(($16_1 & 512 ? Math_fround(1.0) : Math_fround(0.0)) + $4_1));
    $1986($5_1, 168, $1963($9 + 5512 | 0, 0));
    $4_1 = Math_fround(0.0);
    if (!($16_1 & 4194304) & ($16_1 & 2098176) != 0) {
     $4_1 = $1963($9 + 5508 | 0, 0)
    }
    $1973($5_1, 124, 0);
    $1983($5_1, 88, -1, -1);
    $1973($5_1, 120, $1941($5_1, 120));
    $1986($5_1, 160, Math_fround(Math_fround(($16_1 & 1024 ? Math_fround(1.0) : Math_fround(0.0)) + $4_1) - $8));
    $3 = ($17_1 | 0) == ($18_1 | 0);
    $0_1 = $3 ? $5_1 + 244 | 0 : $18_1 + 496 | 0;
    $1982($5_1, 260, $1959($0_1, 0), i64toi32_i32$HIGH_BITS);
    $12_1 = $5_1 + 268 | 0;
    $1982($12_1, 0, $1959($0_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
    $8 = $1963($5_1, 260);
    $4_1 = $1963($5_1, 244);
    $24 = $4_1 <= $8 ? $8 : $4_1;
    $1986($5_1, 260, $24);
    $8 = $1963($12_1, 0);
    $4_1 = $1963($5_1 + 252 | 0, 0);
    $25_1 = $4_1 > $8 ? $8 : $4_1;
    $1986($12_1, 0, $25_1);
    $6_1 = $5_1 + 264 | 0;
    $8 = $1963($6_1, 0);
    $4_1 = $1963($5_1 + 248 | 0, 0);
    $21_1 = $4_1 <= $8 ? $8 : $4_1;
    $1986($6_1, 0, $21_1);
    $10_1 = $5_1 + 272 | 0;
    $8 = $1963($10_1, 0);
    $4_1 = $1963($5_1 + 256 | 0, 0);
    $23_1 = $4_1 > $8 ? $8 : $4_1;
    $1986($10_1, 0, $23_1);
    $8 = $1963($5_1, 324);
    $2_1 = $1959($5_1 + 332 | 0, 0);
    $0_1 = i64toi32_i32$HIGH_BITS;
    $4_1 = (wasm2js_scratch_store_i32(2, $2_1), wasm2js_scratch_load_f32());
    $1986($5_1, 260, $8 > $24 ? $8 : $4_1 < $24 ? $4_1 : $24);
    $1986($12_1, 0, $8 > $25_1 ? $8 : $4_1 < $25_1 ? $4_1 : $25_1);
    $8 = $1963($5_1 + 328 | 0, 0);
    $4_1 = (wasm2js_scratch_store_i32(2, $0_1), wasm2js_scratch_load_f32());
    $1986($10_1, 0, $8 > $23_1 ? $8 : $4_1 < $23_1 ? $4_1 : $23_1);
    $1986($6_1, 0, $8 > $21_1 ? $8 : $4_1 < $21_1 ? $4_1 : $21_1);
    label$26 : {
     if ($16_1 & 131072) {
      $8 = $1963($10_1, 0);
      $4_1 = $1963($18_1 + 476 | 0, 0);
      $4_1 = $4_1 > $8 ? $8 : $4_1;
      break label$26;
     }
     $4_1 = $1963($18_1 + 508 | 0, 0);
    }
    $1968($5_1, 452, 1);
    $1971($5_1, 433, 0);
    $1973($5_1, 112, 0);
    $1968($5_1, 419, 0);
    $1986($5_1 + 272 | 0, 0, $4_1);
    $4_1 = $1963($5_1 + 248 | 0, 0);
    $1986($5_1, 104, $4_1);
    $1986($5_1, 100, $4_1);
    $1973($5_1, 136, $51(43, Math_fround(1.0)));
    $1973($5_1, 140, $51(44, Math_fround(1.0)));
    $1973($9, 8036, $5_1);
    $1973($17_1 + 372 | 0, 0, $11_1);
    if (!$3) {
     $1973($18_1 + 372 | 0, 0, $11_1)
    }
    if (!(!($13 & 2) | $16_1 & 2)) {
     $1968($5_1, 451, 1)
    }
    if (($1944($9, 8088) | 0) <= ($11_1 | 0)) {
     $6_1 = $11_1 + 1 | 0;
     $2_1 = $1944($9 + 8092 | 0, 0);
     label$31 : {
      if (($2_1 | 0) > ($11_1 | 0)) {
       break label$31
      }
      $0_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
      $3 = ($0_1 | 0) > ($6_1 | 0) ? $0_1 : $6_1;
      if (($2_1 | 0) >= ($3 | 0)) {
       break label$31
      }
      $2_1 = $16($3 << 2);
      $0_1 = $1944($9 + 8096 | 0, 0);
      if ($0_1) {
       $1602($2_1, $0_1, $1944($9, 8088) << 2);
       $17($1944($9, 8096));
      }
      $1973($9, 8092, $3);
      $1973($9, 8096, $2_1);
     }
     $0_1 = $1944($9, 8088);
     if (($11_1 | 0) >= ($0_1 | 0)) {
      while (1) {
       $2_1 = $0_1;
       $1973($1944($9, 8096) + ($0_1 << 2) | 0, 0, -1082130432);
       $0_1 = $0_1 + 1 | 0;
       if (($2_1 | 0) != ($11_1 | 0)) {
        continue
       }
       break;
      }
     }
     $1973($9, 8088, $6_1);
    }
    $0_1 = $1944($9 + 8096 | 0, 0) + ($11_1 << 2) | 0;
    $4_1 = Math_fround($1967($9, 6976));
    $1986($0_1, 0, $4_1);
    $1986($20_1 + Math_imul($14, 104) | 0, 4, $4_1);
    $1968($5_1, 454, 0);
    $0_1 = $1944($5_1 + 20 | 0, 0);
    $2_1 = $1944($5_1, 16);
    $22_1 = ($0_1 - $2_1 | 0) / 104 | 0;
    label$37 : {
     if (($0_1 | 0) == ($2_1 | 0)) {
      $0_1 = 0;
      $3 = 0;
      break label$37;
     }
     $0_1 = 0;
     $3 = 0;
     if (($1_1 | 0) == ($22_1 | 0)) {
      break label$37
     }
     $0_1 = $1944($5_1, 8);
     $1973($5_1, 8, 0);
     $3 = $2_1;
    }
    $16_1 = $3;
    if (!$1944($5_1, 8)) {
     $10_1 = Math_imul($1_1, 105) + 3 & -4;
     $6_1 = $1_1 << 3;
     $3 = $10_1 + $6_1 | 0;
     $2_1 = $16($3);
     $1973($5_1, 8, $2_1);
     $1604($2_1, 0, $3);
     $1968($5_1, 447, 1);
     $1968($5_1, 443, 1);
     $3 = $1944($5_1, 8);
     $1973($5_1, 16, $3);
     $2_1 = $3 + $10_1 | 0;
     $1973($5_1, 32, $2_1);
     $3 = $3 + Math_imul($1_1, 104) | 0;
     $1973($5_1, 24, $3);
     $1973($5_1 + 20 | 0, 0, $3);
     $1973($5_1 + 36 | 0, 0, $2_1 + $6_1 | 0);
     $1973($5_1 + 28 | 0, 0, $1_1 + $3 | 0);
    }
    if ($1937($5_1, 450)) {
     $1968($5_1, 450, 0);
     $1968($5_1, 443, 1);
     $1969($5_1, 447, 256);
     $1973($5_1, 72, 0);
    }
    label$41 : {
     if (!$1937($5_1, 443)) {
      break label$41
     }
     $1968($5_1, 444, 1);
     $1973($5_1, 76, -1);
     $1968($5_1, 432, 255);
     $1970($5_1, 98, 65535);
     $1968($5_1, 426, 255);
     $1973($5_1, 420, -1);
     $1968($5_1 + 424 | 0, 0, -1);
     if (($1_1 | 0) <= 0) {
      break label$41
     }
     $20_1 = $7_1 + 71 | 0;
     $13 = $7_1 - -64 | 0;
     $14 = $7_1 + 56 | 0;
     $19 = $7_1 + 48 | 0;
     $12_1 = $7_1 + 40 | 0;
     $10_1 = $7_1 + 32 | 0;
     $6_1 = $7_1 + 68 | 0;
     $3 = $6_1 + 3 | 0;
     $15_1 = 0;
     while (1) {
      $2_1 = Math_imul($15_1, 104);
      $11_1 = $1944($5_1, 16) + $2_1 | 0;
      label$43 : {
       if (!(!$16_1 | ($15_1 | 0) >= ($22_1 | 0))) {
        $1602($11_1, $2_1 + $16_1 | 0, 103);
        break label$43;
       }
       $4_1 = $1963($11_1, 20);
       $1971($20_1, 0, 0);
       $1983($13, 0, 0, 0);
       $1983($14, 0, 0, 0);
       $1983($19, 0, 0, 0);
       $1983($12_1, 0, 0, 0);
       $1983($10_1, 0, 0, 0);
       $2_1 = $7_1 + 24 | 0;
       $1983($2_1, 0, 0, 0);
       $1983($7_1, 16, 0, 0);
       $1971($3, 0, -1);
       $1973($6_1, 0, -1);
       $1982($11_1 + 8 | 0, 0, 0, 0);
       $1982($11_1, 0, 0, 0);
       $1973($11_1, 24, -1082130432);
       $1982($11_1, 16, -1082130432, 0);
       $1982($11_1, 28, $1960($7_1, 16), i64toi32_i32$HIGH_BITS);
       $1982($11_1 + 36 | 0, 0, $1960($2_1, 0), i64toi32_i32$HIGH_BITS);
       $1982($11_1 + 44 | 0, 0, $1960($10_1, 0), i64toi32_i32$HIGH_BITS);
       $1982($11_1 + 52 | 0, 0, $1960($12_1, 0), i64toi32_i32$HIGH_BITS);
       $1982($11_1 + 60 | 0, 0, $1960($19, 0), i64toi32_i32$HIGH_BITS);
       $1982($11_1 + 68 | 0, 0, $1960($14, 0), i64toi32_i32$HIGH_BITS);
       $1982($11_1 + 76 | 0, 0, $1960($13, 0), i64toi32_i32$HIGH_BITS);
       $1971($11_1 + 83 | 0, 0, $1942($20_1, 0));
       $1981($11_1, 90);
       $1968($11_1, 89, 255);
       $1969($11_1, 87, 65535);
       $1980($11_1 + 95 | 0, 0, 0);
       $1968($11_1, 97, 1);
       $1986($11_1, 20, $4_1);
       $1968($11_1, 92, 1);
       $1970($11_1, 90, 257);
      }
      $1968($1944($5_1, 24) + $15_1 | 0, 0, $15_1);
      $1968($11_1, 82, $15_1);
      $15_1 = $15_1 + 1 | 0;
      if (($15_1 | 0) != ($1_1 | 0)) {
       continue
      }
      break;
     };
    }
    if ($0_1) {
     $17($0_1)
    }
    if ($1937($5_1, 447)) {
     $12_1 = $1944(0, 73568);
     $1968($5_1, 447, 0);
     label$10 : {
      if ($1937($5_1, 4) & 16) {
       break label$10
      }
      $0_1 = $1944($5_1, 76);
      label$21 : {
       if (($0_1 | 0) == -1) {
        $2_1 = $1944($12_1 + 12176 | 0, 0);
        $6_1 = $2_1 + 4 | 0;
        $0_1 = $2_1 ? $6_1 : 0;
        label$4 : {
         if (!$2_1) {
          break label$4
         }
         $3 = $1944($5_1, 0);
         while (1) {
          if (($1944($0_1, 0) | 0) == ($3 | 0)) {
           break label$4
          }
          $10_1 = $1944($0_1 - 4 | 0, 0) + $0_1 | 0;
          $2_1 = $1944($12_1, 12168) + $6_1 | 0;
          $0_1 = ($2_1 | 0) != ($10_1 | 0) ? $10_1 : 0;
          if (($2_1 | 0) != ($10_1 | 0)) {
           continue
          }
          break;
         };
        }
        $2_1 = $0_1;
        if (!$0_1) {
         break label$10
        }
        if (($1944($5_1, 84) | 0) != ($1936($2_1, 12) | 0)) {
         $1968($5_1, 448, 1)
        }
        $1973($5_1, 76, $2_1 - $1944($12_1 + 12176 | 0, 0) | 0);
        break label$21;
       }
       $3 = $1944($5_1, 84);
       $2_1 = $1944($12_1 + 12176 | 0, 0) + $0_1 | 0;
       if (($3 | 0) <= ($1936($2_1, 13) | 0)) {
        break label$21
       }
       $1973($2_1, 0, 0);
       $2_1 = 0;
      }
      $3 = $2_1;
      $1973($5_1, 72, $1944($2_1, 4));
      $1986($5_1, 208, $1963($2_1, 8));
      $10_1 = $1936($2_1, 12);
      label$102 : {
       if (($10_1 | 0) <= 0) {
        $13 = 0;
        $14 = 0;
        break label$102;
       }
       $2_1 = $3 + 16 | 0;
       $0_1 = 0;
       $13 = 0;
       $14 = 0;
       while (1) {
        $6_1 = $1936($2_1, 8);
        label$13 : {
         if (($6_1 | 0) < 0) {
          break label$13
         }
         if (($1944($5_1, 84) | 0) <= ($6_1 | 0)) {
          break label$13
         }
         $19 = $1944($5_1, 16);
         $12_1 = $1944($3, 4);
         if ($12_1 & 1) {
          $10_1 = $19 + Math_imul($6_1, 104) | 0;
          $1986($10_1 + ($1937($2_1, 11) & 8 ? 24 : 16) | 0, 0, $1963($2_1, 0));
          $1968($10_1, 99, 0);
         }
         $10_1 = $6_1;
         if ($12_1 & 2) {
          $10_1 = $1937($2_1, 9)
         }
         $12_1 = $19 + Math_imul($6_1, 104) | 0;
         $1968($12_1, 82, $10_1);
         $6_1 = $1937($2_1, 11) >>> 2 & 1;
         $1968($12_1, 91, $6_1);
         $1968($12_1, 92, $6_1);
         $1968($12_1, 86, $1937($2_1, 10));
         $1968($12_1, 101, $1937($12_1, 101) & 252 | $1937($2_1, 11) & 3);
         $6_1 = $10_1 << 24 >> 24;
         $10_1 = $6_1 & 31;
         if (($6_1 & 63) >>> 0 >= 32) {
          $10_1 = 1 << $10_1;
          $6_1 = 0;
         } else {
          $6_1 = 1 << $10_1;
          $10_1 = $6_1 - 1 & 1 >>> 32 - $10_1;
         }
         $13 = $6_1 | $13;
         $14 = $10_1 | $14;
        }
        $2_1 = $2_1 + 12 | 0;
        $0_1 = $0_1 + 1 | 0;
        $10_1 = $1936($3, 12);
        if (($0_1 | 0) < ($10_1 | 0)) {
         continue
        }
        break;
       };
      }
      $0_1 = $10_1 & 31;
      if (($10_1 & 63) >>> 0 >= 32) {
       $0_1 = -1 << $0_1;
       $3 = 0;
      } else {
       $2_1 = -1 << $0_1;
       $0_1 = $2_1 | (1 << $0_1) - 1 & -1 >>> 32 - $0_1;
       $3 = $2_1;
      }
      $2_1 = ($10_1 | 0) == 64;
      label$183 : {
       if (($13 | 0) == (($2_1 ? -1 : $3 ^ -1) | 0) & (($2_1 ? -1 : $0_1 ^ -1) | 0) == ($14 | 0)) {
        break label$183
       }
       $3 = $1944($5_1, 84);
       if (($3 | 0) <= 0) {
        break label$183
       }
       $0_1 = $1944($5_1, 16);
       $2_1 = 0;
       while (1) {
        $1968($0_1 + Math_imul($2_1, 104) | 0, 82, $2_1);
        $2_1 = $2_1 + 1 | 0;
        if (($3 | 0) != ($2_1 | 0)) {
         continue
        }
        break;
       };
      }
      if (($1944($5_1, 84) | 0) <= 0) {
       break label$10
      }
      $2_1 = 0;
      while (1) {
       $1968($1944($5_1, 24) + $1936($1944($5_1, 16) + Math_imul($2_1, 104) | 0, 82) | 0, 0, $2_1);
       $2_1 = $2_1 + 1 | 0;
       if (($1944($5_1, 84) | 0) > ($2_1 | 0)) {
        continue
       }
       break;
      };
     }
    }
    $8 = $1963($9, 6468);
    $4_1 = $1963($5_1, 208);
    if (!($4_1 == Math_fround(0.0) | $4_1 == $8 | ($1_1 | 0) <= 0)) {
     $4_1 = Math_fround($8 / $4_1);
     $2_1 = $1944($5_1, 16);
     $15_1 = 0;
     while (1) {
      $0_1 = $2_1 + Math_imul($15_1, 104) | 0;
      $1986($0_1, 16, Math_fround($4_1 * $1963($0_1, 16)));
      $15_1 = $15_1 + 1 | 0;
      if (($15_1 | 0) != ($1_1 | 0)) {
       continue
      }
      break;
     };
    }
    $1986($5_1, 208, $8);
    $1968($18_1, 143, 1);
    if (($1944($5_1, 364) | 0) > 0) {
     $1_1 = $1944($5_1 + 368 | 0, 0);
     label$50 : {
      if (($1_1 | 0) >= 0) {
       break label$50
      }
      $0_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0;
      $2_1 = ($0_1 | 0) > 0 ? $0_1 : 0;
      if (($1_1 | 0) >= ($2_1 | 0)) {
       break label$50
      }
      $1_1 = $16($2_1);
      $0_1 = $1944($5_1 + 372 | 0, 0);
      if ($0_1) {
       $1602($1_1, $0_1, $1944($5_1, 364));
       $17($1944($5_1, 372));
      }
      $1973($5_1, 368, $2_1);
      $1973($5_1, 372, $1_1);
     }
     $1973($5_1, 364, 0);
    }
    label$11 : {
     if ($1941($5_1, 96)) {
      break label$11
     }
     $0_1 = $1936($5_1, 423);
     label$22 : {
      if (($0_1 | 0) == -1) {
       break label$22
      }
      $4_1 = $1963($5_1, 200);
      if ($4_1 == Math_fround(3402823466385288598117041.0e14)) {
       break label$22
      }
      $495($0_1, $4_1);
     }
     $1973($5_1, 200, 2139095039);
     $1968($5_1, 424, $1937($5_1, 423));
     $1968($5_1, 423, 255);
     $0_1 = $1936($5_1, 422);
     if (($0_1 | 0) == -1) {
      break label$11
     }
     $495($0_1, $1963($1944($5_1, 16) + Math_imul($0_1, 104) | 0, 20));
     $1968($5_1, 422, 255);
    }
    label$33 : {
     if ($1941($5_1, 96)) {
      break label$33
     }
     label$44 : {
      if (($1937($5_1, 425) | 0) != 255) {
       break label$44
      }
      if (($1937($5_1, 426) | 0) == 255) {
       break label$44
      }
      $1968($5_1, 426, 255);
     }
     $1968($5_1, 425, 255);
     $0_1 = $1936($5_1, 426);
     if (($0_1 | 0) == -1) {
      break label$33
     }
     $12_1 = $1937($5_1, 427);
     if (!$12_1) {
      break label$33
     }
     $10_1 = $1944($5_1, 16);
     $0_1 = $10_1 + Math_imul($0_1, 104) | 0;
     $6_1 = $1937($0_1, 82);
     $1_1 = $0_1;
     $0_1 = $1937(Math_imul($1936($0_1 + (($12_1 | 0) == 255 ? 84 : 85) | 0, 0), 104) + $10_1 | 0, 82);
     $1968($1_1, 82, $0_1);
     if (($0_1 | 0) != ($6_1 | 0)) {
      $3 = $12_1 << 24 >> 24;
      $2_1 = $0_1 << 24 >> 24;
      $1_1 = $1944($5_1, 24);
      $6_1 = $6_1 << 24 >> 24;
      while (1) {
       $6_1 = $3 + $6_1 | 0;
       $0_1 = Math_imul($1936($6_1 + $1_1 | 0, 0), 104) + $10_1 | 0;
       $1968($0_1, 82, $1937($0_1, 82) - $12_1 | 0);
       if (($2_1 | 0) != ($6_1 | 0)) {
        continue
       }
       break;
      };
     }
     if (($1944($5_1, 84) | 0) > 0) {
      $6_1 = 0;
      while (1) {
       $1968($1944($5_1, 24) + $1936($1944($5_1, 16) + Math_imul($6_1, 104) | 0, 82) | 0, 0, $6_1);
       $6_1 = $6_1 + 1 | 0;
       if (($1944($5_1, 84) | 0) > ($6_1 | 0)) {
        continue
       }
       break;
      };
     }
     $1968($5_1, 448, 1);
     $1968($5_1, 427, 0);
    }
    if ($1937($5_1, 451)) {
     if (($1944($5_1, 84) | 0) > 0) {
      $6_1 = 0;
      while (1) {
       $1968($1944($5_1, 16) + Math_imul($6_1, 104) | 0, 82, $6_1);
       $1968($1944($5_1, 24) + $6_1 | 0, 0, $6_1);
       $6_1 = $6_1 + 1 | 0;
       if (($1944($5_1, 84) | 0) > ($6_1 | 0)) {
        continue
       }
       break;
      };
     }
     $1968($5_1, 448, 1);
     $1968($5_1, 451, 0);
    }
    $15_1 = 1;
   }
  }
  global$0 = $7_1 + 160 | 0;
  return $15_1;
 }
 
 function $495($0_1, $1_1) {
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = 0;
  $4_1 = $1944($1944(0, 73568), 8036);
  $6_1 = $1944($4_1, 16);
  $5_1 = $6_1 + Math_imul($0_1, 104) | 0;
  $9 = $1963($4_1, 164);
  $11_1 = Math_fround($9 + $9);
  $7_1 = $1963($4_1, 156);
  $8 = Math_fround(Math_fround($11_1 + $7_1) + $1963($4_1, 172));
  $3 = $1963($4_1, 176);
  $12_1 = Math_fround($8 + $3);
  $2_1 = $1944($4_1, 4);
  label$1 : {
   if ($2_1 & 16777216) {
    $2_1 = $1936($4_1, 435);
    $10_1 = $1936($5_1, 82);
    $8 = Math_fround(3402823466385288598117041.0e14);
    if (($2_1 | 0) <= ($10_1 | 0)) {
     break label$1
    }
    $8 = Math_fround(Math_fround(Math_fround(Math_fround(Math_fround($1963($4_1 + 268 | 0, 0) - Math_fround(Math_fround($2_1 - $10_1 | 0) * $12_1)) - $1963(Math_imul($0_1, 104) + $6_1 | 0, 8)) - $1963($4_1, 160)) - $9) - $3);
    break label$1;
   }
   $8 = Math_fround(3402823466385288598117041.0e14);
   if ($2_1 & 262144) {
    break label$1
   }
   $2_1 = Math_imul($0_1, 104) + $6_1 | 0;
   $8 = Math_fround(Math_fround(Math_fround(Math_fround(Math_fround($1963($4_1 + 252 | 0, 0) - Math_fround(Math_fround(($1936($2_1, 83) ^ -1) + $1936($4_1, 417) | 0) * $12_1)) - $1963($2_1, 8)) - $3) - $11_1) - $1963($4_1, 160));
  }
  $3 = $8;
  $2_1 = Math_imul($0_1, 104) + $6_1 | 0;
  $3 = $3 <= $7_1 ? $7_1 : $3;
  $1_1 = $1_1 < $7_1 ? $7_1 : $1_1 > $3 ? $3 : $1_1;
  label$3 : {
   if ($1963($2_1, 4) == $1_1) {
    break label$3
   }
   $3 = $1963($2_1, 16);
   if ($3 == $1_1) {
    break label$3
   }
   $10_1 = $2_1 + 16 | 0;
   $2_1 = $1936(Math_imul($0_1, 104) + $6_1 | 0, 85);
   $2_1 = ($2_1 | 0) != -1 ? Math_imul($2_1, 104) + $6_1 | 0 : 0;
   label$4 : {
    label$5 : {
     $5_1 = $1944($5_1, 0);
     if (!($5_1 & 16)) {
      break label$5
     }
     label$6 : {
      if (!$2_1) {
       break label$6
      }
      $13 = $1936($4_1, 430);
      if (($13 | 0) == -1) {
       break label$6
      }
      if (($1936(Math_imul($13, 104) + $6_1 | 0, 82) | 0) < ($1936(Math_imul($0_1, 104) + $6_1 | 0, 82) | 0)) {
       break label$5
      }
     }
     $1986($10_1, 0, $1_1);
     break label$4;
    }
    label$7 : {
     if ($2_1) {
      break label$7
     }
     $0_1 = $1936(Math_imul($0_1, 104) + $6_1 | 0, 84);
     if (($0_1 | 0) == -1) {
      $2_1 = 0;
      break label$7;
     }
     $2_1 = Math_imul($0_1, 104) + $6_1 | 0;
    }
    if (!$2_1) {
     break label$3
    }
    $9 = $1963($2_1, 16);
    $1_1 = Math_fround($9 - Math_fround($1_1 - $3));
    $1_1 = $1_1 >= $7_1 ? $1_1 : $7_1;
    $1986($10_1, 0, Math_fround(Math_fround($3 + $9) - $1_1));
    $1986($2_1, 16, $1_1);
    if (!(($1944($2_1, 0) | $5_1) & 8)) {
     break label$4
    }
    $2_1 = $1944($4_1, 84);
    label$9 : {
     if (($2_1 | 0) <= 0) {
      $3 = Math_fround(0.0);
      $7_1 = Math_fround(0.0);
      break label$9;
     }
     $7_1 = Math_fround(0.0);
     $1_1 = Math_fround(0.0);
     $0_1 = 0;
     while (1) {
      $5_1 = Math_imul($0_1, 104) + $6_1 | 0;
      label$12 : {
       if (!$1937($5_1, 90)) {
        break label$12
       }
       if (!($1937($5_1, 0) & 8)) {
        break label$12
       }
       $1_1 = Math_fround($1_1 + $1963($5_1, 16));
       $7_1 = Math_fround($7_1 + $1963($5_1, 24));
      }
      $3 = $1_1;
      $0_1 = $0_1 + 1 | 0;
      if (($2_1 | 0) != ($0_1 | 0)) {
       continue
      }
      break;
     };
    }
    if (($2_1 | 0) <= 0) {
     break label$4
    }
    $0_1 = 0;
    while (1) {
     $5_1 = Math_imul($0_1, 104) + $6_1 | 0;
     label$15 : {
      if (!$1937($5_1, 90)) {
       break label$15
      }
      if (!($1937($5_1, 0) & 8)) {
       break label$15
      }
      $1986($5_1, 24, Math_fround($7_1 * Math_fround($1963($5_1, 16) / $3)));
     }
     $0_1 = $0_1 + 1 | 0;
     if (($2_1 | 0) != ($0_1 | 0)) {
      continue
     }
     break;
    };
   }
   $1968($4_1, 448, 1);
  }
 }
 
 function $496($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = Math_fround(0), $5_1 = 0, $6_1 = Math_fround(0), $7_1 = 0, $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = 0, $21_1 = Math_fround(0), $22_1 = 0, $23_1 = Math_fround(0), $24 = Math_fround(0), $25_1 = Math_fround(0), $26_1 = Math_fround(0), $27_1 = Math_fround(0), $28_1 = Math_fround(0), $29_1 = Math_fround(0), $30 = Math_fround(0), $31_1 = 0, $32_1 = Math_fround(0), $33_1 = Math_fround(0);
  $18_1 = global$0 - 48 | 0;
  global$0 = $18_1;
  $31_1 = $1944(0, 73568);
  $1968($0_1, 449, 1);
  $1968($0_1, 417, 0);
  $1983($0_1, 40, 0, 0);
  $1983($0_1 + 48 | 0, 0, 0, 0);
  $1968($0_1, 428, 255);
  $6_1 = $1963($31_1 + 5476 | 0, 0);
  $1986($0_1, 156, $6_1 <= Math_fround(1.0) ? Math_fround(1.0) : $6_1);
  $14 = $1944($0_1, 4);
  $5_1 = $1944($0_1, 84);
  label$1 : {
   if (($5_1 | 0) <= 0) {
    $10_1 = -1;
    break label$1;
   }
   $10_1 = -1;
   $6_1 = Math_fround(0.0);
   while (1) {
    $7_1 = $2_1;
    $5_1 = $1_1;
    $1_1 = $1936($1944($0_1, 24) + $11_1 | 0, 0);
    if (($11_1 | 0) != ($1_1 | 0)) {
     $1968($0_1, 449, 0)
    }
    $3 = $1944($0_1, 16) + Math_imul($1_1, 104) | 0;
    if (($1936($0_1, 419) | 0) <= ($1_1 | 0)) {
     $497($0_1, $3, 0);
     $1973($3, 48, 0);
     $1970($3, 80, 65535);
     $1973($3, 28, -1082130432);
    }
    $17_1 = $1944($0_1, 4);
    label$6 : {
     if ($17_1 & 4) {
      if (!($1937($3, 0) & 128)) {
       break label$6
      }
     }
     $1968($3, 92, 1);
    }
    $15_1 = $3 + 91 | 0;
    $16_1 = $1937($3, 91);
    $2_1 = $1937($3, 92);
    if (($16_1 | 0) != ($2_1 | 0)) {
     $1968($15_1, 0, $2_1);
     $1968($0_1, 448, 1);
    }
    $2_1 = ($1937($15_1, 0) | 0) != 0;
    $16_1 = $1944($3, 0);
    $15_1 = $2_1 & !($16_1 & 1);
    $1968($3, 90, $15_1);
    $2_1 = $1936($3, 86);
    if (!($15_1 | ($2_1 | 0) == -1)) {
     $1968($0_1, 444, 1)
    }
    if (!($17_1 & 67108864 | ($2_1 | 0) <= 0)) {
     $1968($0_1, 444, 1)
    }
    $19 = $16_1 & 16;
    if ($1963($3 + ($19 ? 16 : 24) | 0, 0) < Math_fround(0.0)) {
     $1969($3, 99, 1799)
    }
    label$12 : {
     if (!$15_1) {
      $1968($3, 83, 255);
      $1_1 = $12_1;
      $2_1 = $13;
      break label$12;
     }
     $1968($3, 85, 255);
     $1968($3, 84, $10_1);
     label$14 : {
      if (($10_1 | 0) != -1) {
       $1968($1944($0_1, 16) + Math_imul($10_1, 104) | 0, 85, $1_1);
       break label$14;
      }
      $1968($0_1, 428, $1_1);
     }
     $2_1 = $1937($0_1, 417);
     $1968($0_1, 417, $2_1 + 1 | 0);
     $1968($3, 83, $2_1);
     $15_1 = $1960($0_1, 48);
     $10_1 = i64toi32_i32$HIGH_BITS;
     $22_1 = $1_1 & 31;
     if (($1_1 & 63) >>> 0 >= 32) {
      $20_1 = 1 << $22_1;
      $2_1 = 0;
     } else {
      $2_1 = 1 << $22_1;
      $20_1 = $2_1 - 1 & 1 >>> 32 - $22_1;
     }
     $1983($0_1, 48, $2_1 | $15_1, $10_1 | $20_1);
     $2_1 = $1945($3, 82);
     $10_1 = $2_1 & 31;
     if (($2_1 & 63) >>> 0 >= 32) {
      $20_1 = 1 << $10_1;
      $2_1 = 0;
     } else {
      $2_1 = 1 << $10_1;
      $20_1 = $2_1 - 1 & 1 >>> 32 - $10_1;
     }
     $1983($0_1, 40, $2_1 | $1960($0_1, 40), i64toi32_i32$HIGH_BITS | $20_1);
     if (!$1937($3, 97)) {
      $9 = $1963($3, 64);
      $4_1 = $1963($3, 68);
      $4_1 = $4_1 <= $9 ? $9 : $4_1;
      $9 = $1963($3, 52);
      $4_1 = Math_fround($4_1 - $9);
      if (!($16_1 & 8192)) {
       $9 = Math_fround($1963($3, 76) - $9);
       $4_1 = $4_1 >= $9 ? $4_1 : $9;
      }
      label$19 : {
       if (!$19) {
        break label$19
       }
       $9 = $1963($3, 28);
       if (!($9 > Math_fround(0.0))) {
        break label$19
       }
       $4_1 = $17_1 & 1 ? ($16_1 & 32 ? $9 : $4_1) : $9;
      }
      $9 = $1963($0_1, 156);
      $1986($3, 20, $4_1 >= $9 ? $4_1 : $9);
     }
     $10_1 = $16_1 & 32;
     $2_1 = !$10_1;
     label$22 : {
      if (!$19) {
       break label$22
      }
      $4_1 = $1963($3, 28);
      if (!($4_1 > Math_fround(0.0)) | !$10_1) {
       break label$22
      }
      $1986($3, 20, $4_1);
     }
     $10_1 = $1_1;
     $1_1 = $2_1 | $12_1;
     $2_1 = $13 | ($1937($3, 99) | 0) != 0;
     $4_1 = $1963($3, 20);
     if ($16_1 & 8) {
      $8 = Math_fround($8 + $4_1);
      $7_1 = $7_1 + 1 | 0;
      break label$12;
     }
     $6_1 = $4_1 <= $6_1 ? $6_1 : $4_1;
     $5_1 = $5_1 + 1 | 0;
    }
    $4_1 = $6_1;
    $9 = $8;
    $12_1 = $1_1;
    $13 = $2_1;
    $2_1 = $7_1;
    $1_1 = $5_1;
    $17_1 = $1_1;
    $11_1 = $11_1 + 1 | 0;
    $5_1 = $1944($0_1, 84);
    if (($11_1 | 0) < ($5_1 | 0)) {
     continue
    }
    break;
   };
  }
  $1_1 = $5_1;
  $27_1 = $9;
  $21_1 = $4_1;
  $16_1 = $1944($0_1, 4);
  label$24 : {
   if (!($16_1 & 8)) {
    break label$24
   }
   if ($1937($0_1, 416) | $16_1 & 134217728) {
    break label$24
   }
   $1968($0_1, 444, 1);
  }
  $1968($0_1, 429, $10_1);
  label$25 : {
   if (!($13 & 1)) {
    break label$25
   }
   $7_1 = $1944($0_1, 356);
   $5_1 = $1944($0_1, 360);
   if (($7_1 | 0) != ($5_1 | 0)) {
    $1968($5_1, 143, 0)
   }
   if (!($13 & 1)) {
    break label$25
   }
   $1968($0_1, 448, 1);
  }
  $1970($0_1, 430, 65535);
  label$27 : {
   if (($1_1 | 0) <= 0) {
    $4_1 = Math_fround(0.0);
    $9 = Math_fround(0.0);
    break label$27;
   }
   $28_1 = Math_fround($2_1 | 0);
   $19 = $1960($0_1, 48);
   $15_1 = i64toi32_i32$HIGH_BITS;
   $2_1 = $14 & 57344;
   $11_1 = ($2_1 | 0) != 24576;
   $13 = ($2_1 | 0) != 16384;
   $5_1 = 0;
   $10_1 = 0;
   $6_1 = Math_fround(0.0);
   $8 = Math_fround(0.0);
   while (1) {
    $7_1 = $5_1 & 31;
    if (($5_1 & 63) >>> 0 >= 32) {
     $20_1 = 1 << $7_1;
     $2_1 = 0;
    } else {
     $2_1 = 1 << $7_1;
     $20_1 = $2_1 - 1 & 1 >>> 32 - $7_1;
    }
    $7_1 = $2_1;
    if ($7_1 & $19 | $15_1 & $20_1) {
     $14 = $1944($0_1, 16);
     $3 = $14 + Math_imul($5_1, 104) | 0;
     $2_1 = $1944($3, 0);
     $22_1 = $2_1 & 32;
     label$32 : {
      if ($2_1 & 16) {
       $4_1 = $1963($3, 20);
       if (!$13) {
        $4_1 = $1937($3, 99) ? $21_1 : $22_1 ? $21_1 : $4_1
       }
       $2_1 = $1937($3, 99);
       label$36 : {
        if (!$2_1) {
         if (!$22_1) {
          break label$36
         }
         if (!($1960($0_1, 64) & $7_1 | $20_1 & i64toi32_i32$HIGH_BITS)) {
          break label$36
         }
        }
        $1986($3, 16, $4_1);
       }
       label$38 : {
        if ($2_1 >>> 0 < 2) {
         break label$38
        }
        if (!$1937($0_1, 443)) {
         break label$38
        }
        if ($1937($3, 97) & 255) {
         break label$38
        }
        $9 = $1963($3, 16);
        $4_1 = Math_fround($1963($0_1, 156) * Math_fround(4.0));
        $1986($3, 16, $4_1 <= $9 ? $9 : $4_1);
       }
       $6_1 = Math_fround($6_1 + $1963($3, 16));
       break label$32;
      }
      $7_1 = $3 + 24 | 0;
      label$39 : {
       label$40 : {
        if ($1937($3, 99)) {
         break label$40
        }
        if ($1963($3, 24) < Math_fround(0.0)) {
         break label$40
        }
        if (!$22_1) {
         break label$39
        }
       }
       $4_1 = $1963($3, 28);
       $2_1 = $4_1 > Math_fround(0.0);
       $4_1 = $2_1 ? $4_1 : Math_fround(1.0);
       if (!($2_1 | $11_1)) {
        $4_1 = Math_fround(Math_fround($1963($3, 20) / $27_1) * $28_1)
       }
       $1986($7_1, 0, $4_1);
      }
      $4_1 = $1963($7_1, 0);
      $2_1 = $1936($0_1, 430);
      label$43 : {
       if (($2_1 | 0) != -1) {
        if (($1936($14 + Math_imul($2_1, 104) | 0, 82) | 0) <= ($1936($3, 82) | 0)) {
         break label$43
        }
       }
       $1968($0_1, 430, $5_1);
      }
      $8 = Math_fround($8 + $4_1);
      $2_1 = $1936($0_1, 431);
      label$45 : {
       if (($2_1 | 0) != -1) {
        if (($1936($14 + Math_imul($2_1, 104) | 0, 82) | 0) >= ($1936($3, 82) | 0)) {
         break label$45
        }
       }
       $1968($0_1, 431, $5_1);
      }
     }
     $1968($3, 97, 0);
     $4_1 = $1963($0_1, 164);
     $6_1 = Math_fround(Math_fround($4_1 + $4_1) + $6_1);
    }
    $4_1 = $8;
    $9 = $6_1;
    $5_1 = $5_1 + 1 | 0;
    $10_1 = $5_1 ? $10_1 : $10_1 + 1 | 0;
    if ($10_1 | ($1_1 | 0) != ($5_1 | 0)) {
     continue
    }
    break;
   };
  }
  $21_1 = $4_1;
  $1968($0_1, 418, $17_1);
  $6_1 = $1963($0_1, 160);
  $4_1 = Math_fround($1963($0_1, 172) + $1963($0_1, 176));
  $5_1 = $1936($0_1, 417);
  $4_1 = Math_fround(Math_fround($6_1 + $6_1) + Math_fround($4_1 * Math_fround($5_1 - 1 | 0)));
  $6_1 = $1963($0_1 + 252 | 0, 0);
  $2_1 = $0_1 + 248 | 0;
  $27_1 = $1963($0_1, 244);
  label$47 : {
   label$48 : {
    if (!($16_1 & 16777216)) {
     break label$48
    }
    if ($1963($0_1, 188) != Math_fround(0.0)) {
     break label$48
    }
    $8 = Math_fround($1963($0_1 + 268 | 0, 0) - $1963($0_1, 260));
    break label$47;
   }
   $8 = Math_fround($6_1 - $27_1);
  }
  $26_1 = $1963($2_1, 0);
  $6_1 = $1963($0_1, 164);
  $1986($0_1, 192, Math_fround(Math_fround(Math_fround($6_1 + $6_1) * Math_fround($5_1 | 0)) + $4_1));
  $4_1 = Math_fround(Math_fround($8 - $4_1) - $9);
  label$49 : {
   if (($1_1 | 0) <= 0) {
    $8 = $4_1;
    break label$49;
   }
   $7_1 = $1960($0_1, 48);
   $13 = i64toi32_i32$HIGH_BITS;
   $5_1 = 0;
   $10_1 = 0;
   $6_1 = $4_1;
   while (1) {
    $2_1 = $5_1 & 31;
    if ((($5_1 & 63) >>> 0 >= 32 ? $13 >>> $2_1 | 0 : ((1 << $2_1) - 1 & $13) << 32 - $2_1 | $7_1 >>> $2_1) & 1) {
     $11_1 = $1944($0_1, 16) + Math_imul($5_1, 104) | 0;
     $2_1 = $1944($11_1, 0);
     if ($2_1 & 8) {
      $9 = Math_fround($4_1 * Math_fround($1963($11_1, 24) / $21_1));
      $8 = $1963($0_1, 156);
      $8 = Math_fround(($8 <= $9 ? $9 : $8) + Math_fround(.009999999776482582));
      label$56 : {
       if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
        $3 = ~~$8;
        break label$56;
       }
       $3 = -2147483648;
      }
      $8 = Math_fround($3 | 0);
      $1986($11_1, 16, $8);
      $6_1 = Math_fround($6_1 - $8);
     }
     label$58 : {
      if (($1937($11_1, 85) | 0) != 255) {
       break label$58
      }
      if (($1937($0_1, 430) | 0) == 255) {
       break label$58
      }
      $1973($11_1, 0, $2_1 | 1073741824);
     }
     $9 = $1963($11_1, 16);
     $8 = $1963($0_1, 156);
     $8 = $8 <= $9 ? $9 : $8;
     label$59 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $2_1 = ~~$8;
       break label$59;
      }
      $2_1 = -2147483648;
     }
     $8 = Math_fround($2_1 | 0);
     $1986($11_1, 4, $8);
     $1986($0_1, 192, Math_fround($1963($0_1, 192) + $8));
    }
    $8 = $6_1;
    $5_1 = $5_1 + 1 | 0;
    $10_1 = $5_1 ? $10_1 : $10_1 + 1 | 0;
    if ($10_1 | ($1_1 | 0) != ($5_1 | 0)) {
     continue
    }
    break;
   };
  }
  $6_1 = $8;
  label$61 : {
   if (!($6_1 >= Math_fround(1.0)) | $16_1 & 524288 | (!($21_1 > Math_fround(0.0)) | !($6_1 >= Math_fround(1.0))) | ($1_1 | 0) <= 0) {
    break label$61
   }
   $13 = $1960($0_1, 40);
   $11_1 = i64toi32_i32$HIGH_BITS;
   $2_1 = $1_1;
   $10_1 = 0;
   while (1) {
    $1_1 = $1_1 - 1 | 0;
    $5_1 = $1_1 & 31;
    label$63 : {
     if (!((($1_1 & 63) >>> 0 >= 32 ? $11_1 >>> $5_1 | 0 : ((1 << $5_1) - 1 & $11_1) << 32 - $5_1 | $13 >>> $5_1) & 1)) {
      break label$63
     }
     $5_1 = $1944($0_1, 16) + Math_imul($1936($1944($0_1, 24) + $1_1 | 0, 0), 104) | 0;
     if (!($1937($5_1, 0) & 8)) {
      break label$63
     }
     $1986($5_1, 16, Math_fround($1963($5_1, 16) + Math_fround(1.0)));
     $1986($5_1, 4, Math_fround($1963($5_1, 4) + Math_fround(1.0)));
     $6_1 = Math_fround($6_1 + Math_fround(-1.0));
    }
    if (!($21_1 > Math_fround(0.0)) | !($6_1 >= Math_fround(1.0))) {
     break label$61
    }
    $7_1 = $10_1;
    $5_1 = $7_1 - 1 | 0;
    $10_1 = $5_1 + 1 | 0;
    $3 = $5_1;
    $5_1 = $2_1;
    $2_1 = $2_1 - 1 | 0;
    $10_1 = ($2_1 | 0) != -1 ? $10_1 : $3;
    if ($5_1 >>> 0 > 1 & ($7_1 | 0) >= 0 | ($7_1 | 0) > 0) {
     continue
    }
    break;
   };
  }
  $1970($0_1, 420, 65535);
  $21_1 = $1963($0_1 + 220 | 0, 0);
  $9 = $1963($0_1, 212);
  $4_1 = $1963($0_1 + 224 | 0, 0);
  $8 = $1963($0_1 + 216 | 0, 0);
  $6_1 = Math_fround($8 + $1963($0_1, 180));
  $1986($18_1 + 44 | 0, 0, $4_1 >= $6_1 ? $4_1 : $6_1);
  $1986($18_1, 40, $21_1);
  $1986($18_1, 36, $8);
  $1986($18_1, 32, $9);
  $22_1 = $91($18_1 + 32 | 0, 0);
  $6_1 = $27_1;
  $2_1 = $1936($0_1, 436);
  if (($2_1 | 0) > 0) {
   $6_1 = $1963($0_1, 212)
  }
  $1983($0_1, 56, 0, 0);
  $1983($0_1 - -64 | 0, 0, 0, 0);
  $1_1 = $1944($0_1, 84);
  $13 = $1_1;
  if (($1_1 | 0) > 0) {
   $19 = $0_1 + 40 | 0;
   $14 = $0_1 + 56 | 0;
   $23_1 = $1963($0_1 + 264 | 0, 0);
   $24 = (wasm2js_scratch_store_i32(2, $1944($0_1 + 272 | 0, 0)), wasm2js_scratch_load_f32());
   $25_1 = (wasm2js_scratch_store_i32(2, $1944($0_1 + 268 | 0, 0)), wasm2js_scratch_load_f32());
   $5_1 = 0;
   $10_1 = 0;
   $6_1 = Math_fround(Math_fround($6_1 + $1963($0_1, 160)) - $1963($0_1, 172));
   $1_1 = ($2_1 | 0) > 0;
   $2_1 = 0;
   $8 = $1963($0_1, 260);
   while (1) {
    $11_1 = $1_1;
    $1_1 = $1944($0_1, 16);
    $16_1 = $1936($1944($0_1, 24) + $5_1 | 0, 0);
    $3 = $1_1 + Math_imul($16_1, 104) | 0;
    if (($1936($0_1, 434) | 0) <= 0) {
     $1_1 = ($1936($0_1, 436) | 0) > ($16_1 | 0)
    } else {
     $1_1 = 1
    }
    $1968($3, 98, $1_1);
    label$70 : {
     if (!($11_1 & 1)) {
      break label$70
     }
     if (($1936($0_1, 436) | 0) != ($2_1 | 0)) {
      break label$70
     }
     $11_1 = 0;
     $6_1 = Math_fround($6_1 + Math_fround($27_1 - $1963($0_1, 212)));
    }
    $1973($3, 0, $1944($3, 0) & -251658241);
    $7_1 = $1960($19, 0);
    $1_1 = i64toi32_i32$HIGH_BITS;
    $13 = $5_1 & 31;
    label$72 : {
     if (!((($5_1 & 63) >>> 0 >= 32 ? $1_1 >>> $13 | 0 : ((1 << $13) - 1 & $1_1) << 32 - $13 | $7_1 >>> $13) & 1)) {
      $1986($3, 52, $6_1);
      $1986($3, 12, $6_1);
      $1986($3, 8, $6_1);
      $1973($3, 4, 0);
      $1971($3, 93, 16777216);
      $1973($3, 60, 1065353216);
      $4_1 = $6_1 < $8 ? $8 : $6_1 > $25_1 ? $25_1 : $6_1;
      $1986($3, 32, $4_1);
      $1986($3 + 36 | 0, 0, $23_1 > $26_1 ? $23_1 : $24 < $26_1 ? $24 : $26_1);
      $1986($3 + 44 | 0, 0, $23_1 > Math_fround(3402823466385288598117041.0e14) ? $23_1 : $24 < Math_fround(3402823466385288598117041.0e14) ? $24 : Math_fround(3402823466385288598117041.0e14));
      $1986($3 + 40 | 0, 0, $4_1);
      break label$72;
     }
     label$74 : {
      if (!$22_1) {
       break label$74
      }
      $4_1 = $1963($31_1, 228);
      if (!($1963($3, 32) <= $4_1)) {
       break label$74
      }
      if (!($1963($3 + 40 | 0, 0) > $4_1)) {
       break label$74
      }
      $1968($0_1, 420, $16_1);
     }
     $1986($3, 8, $6_1);
     $29_1 = $1963($0_1, 164);
     $32_1 = Math_fround($29_1 + $29_1);
     $33_1 = $1963($0_1, 156);
     $28_1 = $1963($0_1, 172);
     $30 = $1963($0_1, 176);
     $4_1 = Math_fround(Math_fround(Math_fround($32_1 + $33_1) + $28_1) + $30);
     $1_1 = $1944($0_1, 4);
     label$75 : {
      if ($1_1 & 16777216) {
       $7_1 = $1936($0_1, 435);
       $1_1 = $1936($3, 82);
       $9 = Math_fround(3402823466385288598117041.0e14);
       if (($7_1 | 0) <= ($1_1 | 0)) {
        break label$75
       }
       $9 = Math_fround(Math_fround(Math_fround(Math_fround(Math_fround($1963($0_1, 268) - Math_fround(Math_fround($7_1 - $1_1 | 0) * $4_1)) - $1963($3, 8)) - $1963($0_1, 160)) - $29_1) - $30);
       break label$75;
      }
      $9 = Math_fround(3402823466385288598117041.0e14);
      if ($1_1 & 262144) {
       break label$75
      }
      $9 = Math_fround(Math_fround(Math_fround(Math_fround(Math_fround($1963($0_1, 252) - Math_fround(Math_fround(($1936($3, 83) ^ -1) + $1936($0_1, 417) | 0) * $4_1)) - $1963($3, 8)) - $30) - $32_1) - $1963($0_1, 160));
     }
     $1986($3, 52, Math_fround(Math_fround($6_1 + $29_1) + $28_1));
     $1968($3, 94, 1);
     $21_1 = $6_1 < $8 ? $8 : $6_1 > $25_1 ? $25_1 : $6_1;
     $1986($3, 32, $21_1);
     $1986($3 + 36 | 0, 0, $23_1 > $26_1 ? $23_1 : $24 < $26_1 ? $24 : $26_1);
     $1986($3 + 44 | 0, 0, $23_1 > Math_fround(3402823466385288598117041.0e14) ? $23_1 : $24 < Math_fround(3402823466385288598117041.0e14) ? $24 : Math_fround(3402823466385288598117041.0e14));
     $4_1 = $1963($3, 4);
     $9 = $4_1 < $9 ? $4_1 : $9;
     $4_1 = $1963($3, 16);
     $4_1 = $4_1 < $33_1 ? $4_1 : $33_1;
     $9 = $4_1 <= $9 ? $9 : $4_1;
     $1986($3, 4, $9);
     $4_1 = Math_fround($9 * Math_fround(.6499999761581421));
     label$77 : {
      if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
       $1_1 = ~~$4_1;
       break label$77;
      }
      $1_1 = -2147483648;
     }
     $1986($3, 60, Math_fround($1_1 | 0));
     $4_1 = Math_fround($32_1 + Math_fround($30 + Math_fround($28_1 + Math_fround($6_1 + $9))));
     $1986($3, 12, $4_1);
     $1986($3, 56, Math_fround(Math_fround($4_1 - $29_1) - $30));
     $4_1 = $4_1 < $8 ? $8 : $4_1 > $25_1 ? $25_1 : $4_1;
     $1986($3 + 40 | 0, 0, $4_1);
     $17_1 = $4_1 > $21_1;
     $1968($3, 93, $17_1);
     label$79 : {
      label$80 : {
       label$81 : {
        if ($17_1) {
         $15_1 = $1960($14, 0);
         $13 = i64toi32_i32$HIGH_BITS;
         $7_1 = $16_1 & 31;
         if (($16_1 & 63) >>> 0 >= 32) {
          $7_1 = 1 << $7_1;
          $1_1 = 0;
         } else {
          $1_1 = 1 << $7_1;
          $7_1 = $1_1 - 1 & 1 >>> 32 - $7_1;
         }
         $1983($14, 0, $1_1 | $15_1, $7_1 | $13);
         break label$81;
        }
        if ($1937($3, 99)) {
         break label$81
        }
        $1_1 = $1937($3, 100);
        $1968($3, 95, ($1_1 | 0) != 0);
        if (!$1_1) {
         break label$79
        }
        break label$80;
       }
       $1968($3, 95, 1);
      }
      $13 = $1960($0_1, 64);
      $7_1 = i64toi32_i32$HIGH_BITS;
      $15_1 = $16_1 & 31;
      if (($16_1 & 63) >>> 0 >= 32) {
       $20_1 = 1 << $15_1;
       $1_1 = 0;
      } else {
       $1_1 = 1 << $15_1;
       $20_1 = $1_1 - 1 & 1 >>> 32 - $15_1;
      }
      $1983($0_1, 64, $1_1 | $13, $7_1 | $20_1);
     }
     if ($1937($3, 90)) {
      $1_1 = $1937($0_1, 455)
     } else {
      $1_1 = 1
     }
     $1968($3, 96, $1_1);
     $1_1 = $1944($3, 0) | ($17_1 ? 50331648 : 16777216);
     $1973($3, 0, $1_1);
     if (($1937($3, 86) | 0) != 255) {
      $1973($3, 0, $1_1 | 67108864)
     }
     if (($1937($0_1, 420) | 0) == ($16_1 & 255)) {
      $1973($3, 0, $1944($3, 0) | 134217728)
     }
     $4_1 = $1963($3 + 52 | 0, 0);
     $1986($3, 76, $4_1);
     $1986($3, 64, $4_1);
     $1986($3, 68, $4_1);
     $1986($3, 72, $4_1);
     if (!$1937($0_1, 455)) {
      $1968($3, 99, $1937($3, 99) >>> 1 | 0);
      $1968($3, 100, $1937($3, 100) >>> 1 | 0);
     }
     if (($1936($0_1, 436) | 0) > ($2_1 | 0)) {
      $4_1 = Math_fround($1963($3 + 12 | 0, 0) + Math_fround(1.0));
      $8 = $4_1 < $8 ? $8 : $4_1 > $25_1 ? $25_1 : $4_1;
     }
     $2_1 = $2_1 + 1 | 0;
     $4_1 = $6_1;
     $6_1 = $1963($0_1, 164);
     $6_1 = Math_fround($4_1 + Math_fround(Math_fround($6_1 + $6_1) + Math_fround(Math_fround($1963($3 + 4 | 0, 0) + $1963($0_1, 172)) + $1963($0_1, 176))));
    }
    $7_1 = $1944($0_1, 84);
    $13 = $7_1;
    $5_1 = $5_1 + 1 | 0;
    $10_1 = $5_1 ? $10_1 : $10_1 + 1 | 0;
    $1_1 = $11_1;
    $11_1 = $5_1 >>> 0 < $7_1 >>> 0;
    $7_1 = $7_1 >> 31;
    if ($11_1 & ($7_1 | 0) >= ($10_1 | 0) | ($7_1 | 0) > ($10_1 | 0)) {
     continue
    }
    break;
   };
  }
  $8 = $1963($0_1, 244);
  $6_1 = $1963(($1944($0_1, 16) + Math_imul($1936($0_1, 429), 104) | 0) + 40 | 0, 0);
  $8 = $6_1 <= $8 ? $8 : $6_1;
  label$90 : {
   if (!$22_1) {
    break label$90
   }
   if (($1937($0_1, 420) | 0) != 255) {
    break label$90
   }
   if (!($1963($31_1 + 228 | 0, 0) >= $8)) {
    break label$90
   }
   $1968($0_1, 420, $13);
  }
  label$91 : {
   if ($12_1 & 1) {
    break label$91
   }
   $1_1 = $1944($0_1, 4);
   if (!($1_1 & 1)) {
    break label$91
   }
   $1973($0_1, 4, $1_1 & -2);
  }
  if (($1937($0_1, 431) | 0) != 255) {
   $1973($0_1, 4, $1944($0_1, 4) & -65537)
  }
  if ($1937($0_1 + 6 | 0, 0) & 1) {
   $1986($0_1, 220, $8);
   $1986($0_1 + 252 | 0, 0, $8);
   $1_1 = $0_1 + 268 | 0;
   $6_1 = $1963($1_1, 0);
   $1986($1_1, 0, $6_1 < $8 ? $6_1 : $8);
  }
  $2_1 = $1944($0_1, 360);
  $1_1 = $0_1 + 244 | 0;
  $1982($2_1, 480, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($2_1 + 488 | 0, 0, $1959($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
  $1986($0_1, 144, $1963($0_1, 260));
  $1986($0_1, 148, $1963($0_1 + 268 | 0, 0));
  $12_1 = ($1936($0_1, 434) | 0) > 0 ? 2 : 1;
  $11_1 = 1;
  if (!($1937($0_1 + 6 | 0, 0) & 16)) {
   $11_1 = $1936($0_1, 417)
  }
  $13 = 1;
  if (($1944($0_1, 84) | 0) <= ($1936($0_1, 417) | 0)) {
   $2_1 = $1960($0_1, 56);
   $1_1 = i64toi32_i32$HIGH_BITS;
   $13 = ($1960($0_1, 48) | 0) != ($2_1 | 0) | (i64toi32_i32$HIGH_BITS | 0) != ($1_1 | 0);
  }
  $1_1 = $13 + (($12_1 + 1 | 0) + Math_imul($11_1, $12_1) | 0) | 0;
  $420($1944($0_1, 376), $1944($1944($0_1, 360), 580), $1_1);
  $1968($0_1, 439, 1);
  $7_1 = $13 ? $1_1 - 1 | 0 : -1;
  $1968($0_1, 438, $7_1);
  $1_1 = $1936($0_1, 434);
  $1968($0_1, 440, ($1_1 | 0) <= 0 ? 1 : $11_1 + 2 | 0);
  $5_1 = $1944($0_1, 84);
  if (($5_1 | 0) > 0) {
   $12_1 = ($1_1 | 0) > 0 ? $11_1 + 1 | 0 : 0;
   $2_1 = $1944($0_1, 16);
   $11_1 = 2;
   $13 = 0;
   while (1) {
    label$5 : {
     label$60 : {
      $1_1 = Math_imul($13, 104) + $2_1 | 0;
      if (!$1937($1_1, 93)) {
       break label$60
      }
      if (!($1937($1_1, 94) & 255)) {
       break label$60
      }
      $1968($1_1, 89, $11_1 + $12_1 | 0);
      $1968($1_1, 88, $11_1);
      $11_1 = (($1944($0_1, 4) ^ -1) >>> 20 & 1) + $11_1 | 0;
      break label$5;
     }
     $1968($1_1, 88, $7_1);
     $1968($1_1, 89, $7_1);
    }
    $1968($1_1, 87, $1937($1_1, 88));
    $1_1 = $13 + 1 | 0;
    $13 = $1_1;
    if (($1_1 | 0) != ($5_1 | 0)) {
     continue
    }
    break;
   };
  }
  $1982($0_1, 276, $1959($0_1, 260), i64toi32_i32$HIGH_BITS);
  $1982($0_1 + 284 | 0, 0, $1959($0_1 + 268 | 0, 0), i64toi32_i32$HIGH_BITS);
  $1_1 = $1944($0_1, 356);
  $5_1 = $1959($1_1 + 504 | 0, 0);
  $12_1 = i64toi32_i32$HIGH_BITS;
  $2_1 = $1959($1_1, 496);
  $1_1 = i64toi32_i32$HIGH_BITS;
  $1982($0_1, 308, $1959($0_1, 324), i64toi32_i32$HIGH_BITS);
  $1982($0_1 + 316 | 0, 0, $1959($0_1 + 332 | 0, 0), i64toi32_i32$HIGH_BITS);
  $1982($0_1, 292, $2_1, $1_1);
  $1982($0_1 + 300 | 0, 0, $5_1, $12_1);
  if ($1937($0_1, 4) & 1) {
   $17_1 = 0;
   $19 = 0;
   $14 = global$0 - 32 | 0;
   global$0 = $14;
   $10_1 = $1944($0_1, 84);
   if (($10_1 | 0) > 0) {
    $8 = $1963($0_1 + 224 | 0, 0);
    $9 = $1963($0_1 + 216 | 0, 0);
    $6_1 = Math_fround($9 + $1963($0_1, 180));
    $8 = $6_1 <= $8 ? $8 : $6_1;
    $6_1 = Math_fround($9 + $1963($0_1, 184));
    $13 = $1944(0, 73568);
    $7_1 = $0_1 + 5 | 0;
    while (1) {
     $2_1 = $1960($0_1, 40);
     $1_1 = i64toi32_i32$HIGH_BITS;
     $12_1 = $17_1 & 31;
     label$31 : {
      if (!((($17_1 & 63) >>> 0 >= 32 ? $1_1 >>> $12_1 | 0 : ((1 << $12_1) - 1 & $1_1) << 32 - $12_1 | $2_1 >>> $12_1) & 1)) {
       break label$31
      }
      $1_1 = $1944($0_1, 16);
      $15_1 = $1936($1944($0_1, 24) + $17_1 | 0, 0);
      $5_1 = Math_imul($15_1, 104);
      $11_1 = $1_1 + $5_1 | 0;
      if ($1944($11_1, 0) & 1073741856) {
       break label$31
      }
      $12_1 = $1937($7_1, 0) & 8;
      if ($12_1) {
       if (!$1937($0_1, 445)) {
        break label$31
       }
      }
      if (!$1937($11_1, 93)) {
       if (($1937($0_1, 424) | 0) != ($15_1 & 255)) {
        break label$31
       }
      }
      $2_1 = $1944($0_1, 0);
      $1_1 = $1939($0_1, 96);
      $4_1 = $1963($11_1, 12);
      $1986($14, 28, $12_1 ? $6_1 : $8);
      $1986($14, 20, $9);
      $1986($14, 24, Math_fround($4_1 + Math_fround(4.0)));
      $1986($14, 16, Math_fround($4_1 + Math_fround(-4.0)));
      $1_1 = (($2_1 + $15_1 | 0) + Math_imul($1_1, $10_1) | 0) + 1 | 0;
      $79($1_1);
      $1968($14, 15, 0);
      $1968($14, 14, 0);
      label$64 : {
       if (!$569($14 + 16 | 0, $1_1, $14 + 15 | 0, $14 + 14 | 0, 268560)) {
        break label$64
       }
       if (!$178(0)) {
        break label$64
       }
       $1_1 = $1944($0_1, 16) + $5_1 | 0;
       if ($1937($1_1, 90)) {
        $1968($1_1, 100, 1);
        $1968($0_1, 422, $15_1);
       }
       $86();
       $1968($14, 14, 0);
       $1968($14, 15, 0);
      }
      $2_1 = $1937($14, 14);
      if ($2_1) {
       if (($1937($0_1, 424) | 0) == 255) {
        $1_1 = $1936($0_1, 429);
        if (($1_1 | 0) == -1) {
         $4_1 = Math_fround(-3402823466385288598117041.0e14)
        } else {
         $4_1 = $1963($1944($0_1, 16) + Math_imul($1_1, 104) | 0, 12)
        }
        $1986($0_1, 204, $4_1);
       }
       $1968($0_1, 423, $15_1);
       $1970($0_1, 98, $1941($0_1, 96));
      }
      label$125 : {
       if ($1937($14, 15)) {
        if ($2_1) {
         break label$125
        }
        if ($1963($13, 7128) > Math_fround(.05999999865889549)) {
         break label$125
        }
        break label$31;
       }
       if (!$2_1) {
        break label$31
       }
      }
      $1968($0_1, 421, $15_1);
      $188(4);
     }
     $17_1 = $17_1 + 1 | 0;
     $19 = $17_1 ? $19 : $19 + 1 | 0;
     $10_1 = $1944($0_1, 84);
     $1_1 = $10_1 >> 31;
     if ($10_1 >>> 0 > $17_1 >>> 0 & ($1_1 | 0) >= ($19 | 0) | ($1_1 | 0) > ($19 | 0)) {
      continue
     }
     break;
    };
   }
   global$0 = $14 + 32 | 0;
  }
  $1968($0_1, 445, 0);
  $1968($0_1, 441, 1);
  $1973($0_1, 184, 0);
  label$95 : {
   if (!$1937($0_1, 446)) {
    break label$95
   }
   if (($1941($0_1, 96) | 0) != ($1941($0_1, 98) | 0)) {
    break label$95
   }
   if ($320($23(1873, $1944($0_1, 0)), 321)) {
    label$10 : {
     if ($1937($1944($1944(0, 73568), 7080), 143)) {
      break label$10
     }
     $1_1 = -1;
     $2_1 = $1936($0_1, 432);
     if (($2_1 | 0) >= 0) {
      $1_1 = ($1944($0_1, 84) | 0) <= ($2_1 | 0) ? -1 : $2_1
     }
     if (($1_1 | 0) == -1) {
      $2_1 = 0
     } else {
      $2_1 = $1944($0_1, 16) + Math_imul($1_1, 104) | 0
     }
     $5_1 = $1944($0_1, 4) & 1;
     label$54 : {
      if (!$5_1) {
       break label$54
      }
      label$65 : {
       if (!$2_1) {
        break label$65
       }
       if ($1937($2_1, 0) & 32) {
        $2_1 = 0
       } else {
        $2_1 = ($1937($2_1, 90) | 0) != 0
       }
       if (!$742(11008, 0, 0, $2_1)) {
        break label$65
       }
       $2_1 = $1944($0_1, 16) + Math_imul($1_1, 104) | 0;
       if (!$1937($2_1, 90)) {
        break label$65
       }
       $1968($2_1, 100, 1);
       $1968($0_1, 422, $1_1);
      }
      label$8 : {
       if (($1937($0_1, 418) | 0) == ($1937($0_1, 417) | 0)) {
        $1_1 = 8223;
        if (($1944($0_1, 4) & 57344) != 16384) {
         break label$8
        }
       }
       $1_1 = 8185;
      }
      if (!$742($1_1, 0, 0, 1)) {
       break label$54
      }
      $12_1 = $1944($0_1, 84);
      if (($12_1 | 0) <= 0) {
       break label$54
      }
      $2_1 = $1944($0_1, 16);
      $1_1 = 0;
      while (1) {
       $7_1 = $2_1 + Math_imul($1_1, 104) | 0;
       label$11 : {
        if (!$1937($7_1, 90)) {
         if (!($1937($7_1, 0) & 8)) {
          break label$11
         }
        }
        $1969($7_1, 99, 258);
       }
       $1_1 = $1_1 + 1 | 0;
       if (($12_1 | 0) != ($1_1 | 0)) {
        continue
       }
       break;
      };
     }
     $1_1 = $5_1;
     label$13 : {
      if (!($1937($0_1, 4) & 2)) {
       break label$13
      }
      $1_1 = 1;
      if (!$742(6359, 0, 0, !$1937($0_1, 449))) {
       break label$13
      }
      $1968($0_1, 451, 1);
      $1_1 = 1;
     }
     if (!($1937($0_1, 4) & 4)) {
      break label$10
     }
     if ($1_1) {
      $594()
     }
     $224(32, 1);
     if (($1944($0_1, 84) | 0) > 0) {
      $1_1 = 0;
      while (1) {
       $2_1 = $1_1;
       $7_1 = $1944($0_1, 16) + Math_imul($1_1, 104) | 0;
       $12_1 = $1944($7_1, 0);
       label$17 : {
        if ($12_1 & 1) {
         break label$17
        }
        label$18 : {
         if (!$1937($0_1, 441)) {
          $5_1 = 19354;
          if (($1936($0_1, 419) | 0) <= ($2_1 | 0)) {
           break label$18
          }
         }
         $1_1 = $1939($7_1, 80);
         $5_1 = 19354;
         if (($1_1 | 0) == -1) {
          break label$18
         }
         $5_1 = $1944($0_1, 372) + $1_1 | 0;
        }
        $1_1 = $5_1;
        label$21 : {
         if ($1_1) {
          if ($1937($1_1, 0)) {
           break label$21
          }
         }
         $1_1 = 16029;
        }
        $12_1 = $12_1 & 128;
        $5_1 = $1937($7_1, 91);
        if ($5_1) {
         $12_1 = !$12_1 & ($1936($0_1, 417) | 0) > 1
        } else {
         $12_1 = !$12_1
        }
        if (!$742($1_1, 0, ($5_1 | 0) != 0, $12_1)) {
         break label$17
        }
        $1968($7_1, 92, $1937($7_1 + 91 | 0, 0) ^ 1);
       }
       $1_1 = $2_1 + 1 | 0;
       if (($1944($0_1, 84) | 0) > ($1_1 | 0)) {
        continue
       }
       break;
      };
     }
     $225();
    }
    $321();
    break label$95;
   }
   $1968($0_1, 446, 0);
  }
  label$97 : {
   if (!$1937($0_1, 444)) {
    break label$97
   }
   if (!($1937($0_1, 4) & 8)) {
    break label$97
   }
   $501($0_1);
  }
  $1_1 = $1944($0_1, 360);
  label$98 : {
   if ($1937($0_1 + 6 | 0, 0) & 16) {
    $422($1944($0_1, 376), $1944($1_1, 580), 2);
    break label$98;
   }
   $5_1 = $1944($1_1, 580);
   $12_1 = $1959($1_1, 496);
   $2_1 = i64toi32_i32$HIGH_BITS;
   $1983($18_1, 24, $12_1, $2_1);
   $1_1 = $1959($1_1 + 504 | 0, 0);
   $0_1 = i64toi32_i32$HIGH_BITS;
   $1983($18_1, 16, $1_1, $0_1);
   $1983($18_1, 8, $12_1, $2_1);
   $1983($18_1, 0, $1_1, $0_1);
   $378($5_1, $18_1 + 8 | 0, $18_1, 0);
  }
  global$0 = $18_1 + 48 | 0;
 }
 
 function $497($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0;
  label$1 : {
   if ($2_1 & 24) {
    break label$1
   }
   $3 = $1944($0_1, 4) & 57344;
   if (!(($3 | 0) != 16384 & ($3 | 0) != 8192)) {
    $2_1 = $2_1 | 16;
    break label$1;
   }
   $2_1 = $2_1 | 8;
  }
  $3 = ($1944($0_1, 4) ^ -1) << 5 & 32 | $2_1;
  $2_1 = ($2_1 & 3072) == 3072 ? $3 | 512 : $3;
  if (!($2_1 & 196608)) {
   $2_1 = (($1944($0_1, 16) | 0) == ($1_1 | 0) ? 65536 : 131072) | $2_1
  }
  $1968($1_1, 102, 0);
  $8 = $1937($1_1, 101) & 3;
  $1968($1_1, 101, $8);
  $1973($1_1, 0, $1944($1_1, 0) & 251658240 | $2_1);
  $9 = $1944($0_1, 4);
  label$7 : {
   if (!($9 & 8)) {
    break label$7
   }
   $3 = $2_1 & 17408;
   $7_1 = ($3 | 0) == 16384;
   $10_1 = $2_1 & 34816;
   $5_1 = ($10_1 | 0) == 32768;
   $6_1 = $5_1 ? ($7_1 ? 2 : 1) : $7_1;
   $2_1 = $7_1 << 1;
   $4_1 = $5_1 ? $2_1 | 4 : $2_1;
   $2_1 = $7_1 | ($5_1 ? ($7_1 ? 8 : 2) : 0);
   label$8 : {
    if ($3) {
     $5_1 = $4_1;
     $4_1 = $6_1;
     break label$8;
    }
    $5_1 = $4_1 | 2;
    $2_1 = 1 << ($6_1 << 1) | $2_1;
    $4_1 = $6_1 + 1 | 0;
   }
   if (!$10_1) {
    $5_1 = $5_1 | 4;
    $2_1 = $2_1 | 2 << ($4_1 << 1);
    $4_1 = $4_1 + 1 | 0;
   }
   $3 = $4_1;
   $1968($1_1, 102, $2_1);
   $4_1 = !$3 | ($9 & 134217728) >>> 27;
   $6_1 = $4_1 | $5_1;
   $3 = $3 + $4_1 << 2 & 12 | $6_1 << 4;
   $1968($1_1, 101, $3 | $8);
   if ($6_1 >>> $8 & 1 | ($1937($1_1, 86) | 0) == 255) {
    break label$7
   }
   $1968($1_1, 101, $3 | $2_1 & 3);
   $1968($0_1, 444, 1);
  }
 }
 
 function $501($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0;
  $11_1 = $1937($0_1, 444);
  if ($11_1) {
   $4_1 = 1;
   $9 = $1944($0_1, 84);
   if (($9 | 0) > 0) {
    $10_1 = $1944($0_1, 16);
    $4_1 = 0;
    while (1) {
     $3 = $10_1 + Math_imul($2_1, 104) | 0;
     $6_1 = $3 + 86 | 0;
     label$3 : {
      if (($1937($3, 86) | 0) == 255) {
       break label$3
      }
      if ($1937($3, 90) & 255) {
       break label$3
      }
      $1968($6_1, 0, 255);
     }
     $6_1 = $1945($6_1, 0);
     $8 = ($6_1 & i64toi32_i32$HIGH_BITS) != -1;
     $1_1 = $8 + $1_1 | 0;
     $3 = $6_1 & 31;
     if (($6_1 & 63) >>> 0 >= 32) {
      $3 = 1 << $3;
      $6_1 = 0;
     } else {
      $6_1 = 1 << $3;
      $3 = $6_1 - 1 & 1 >>> 32 - $3;
     }
     $6_1 = $8 ? $6_1 : 0;
     $5_1 = $5_1 | ($8 ? $3 : 0);
     $4_1 = $4_1 | $6_1;
     $2_1 = $2_1 + 1 | 0;
     if (($9 | 0) != ($2_1 | 0)) {
      continue
     }
     break;
    };
    $4_1 = $4_1 + 1 | 0;
    $5_1 = $4_1 ? $5_1 : $5_1 + 1 | 0;
   }
   $2_1 = $1_1 & 31;
   if (($1_1 & 63) >>> 0 >= 32) {
    $2_1 = 1 << $2_1;
    $3 = 0;
   } else {
    $3 = 1 << $2_1;
    $2_1 = $3 - 1 & 1 >>> 32 - $2_1;
   }
   $6_1 = $3;
   $3 = $2_1;
   $2_1 = 0;
   if ($1_1 >>> 0 > 1) {
    $2_1 = !($1937($0_1 + 7 | 0, 0) & 4)
   }
   if (!((($4_1 | 0) != ($6_1 | 0) | ($3 | 0) != ($5_1 | 0) | $2_1) != 1 | ($1_1 | 0) <= 0)) {
    $8 = $2_1;
    $12_1 = ($9 | 0) > 0;
    $15_1 = $2_1 & $12_1;
    $13 = $1944($0_1, 16);
    $2_1 = $1_1;
    $3 = 0;
    $4_1 = 0;
    $5_1 = 0;
    while (1) {
     $10_1 = $4_1;
     $6_1 = $5_1;
     $1_1 = -1;
     $4_1 = 0;
     $5_1 = 0;
     if ($12_1) {
      while (1) {
       $7_1 = $4_1 & 31;
       label$11 : {
        if ((($4_1 & 63) >>> 0 >= 32 ? $6_1 >>> $7_1 | 0 : ((1 << $7_1) - 1 & $6_1) << 32 - $7_1 | $10_1 >>> $7_1) & 1) {
         break label$11
        }
        $7_1 = $1944($0_1, 16);
        $14 = $1936($7_1 + Math_imul($4_1, 104) | 0, 86);
        if (($14 | 0) == -1) {
         break label$11
        }
        if (($1_1 | 0) != -1) {
         if (($1936($7_1 + Math_imul($1_1, 104) | 0, 86) | 0) <= ($14 | 0)) {
          break label$11
         }
        }
        $1_1 = $4_1;
       }
       $4_1 = $4_1 + 1 | 0;
       $5_1 = $4_1 ? $5_1 : $5_1 + 1 | 0;
       if ($5_1 | ($4_1 | 0) != ($9 | 0)) {
        continue
       }
       break;
      }
     }
     $4_1 = $1_1;
     $1968($13 + Math_imul($1_1, 104) | 0, 86, $3);
     $5_1 = $1_1 & 31;
     if (($1_1 & 63) >>> 0 >= 32) {
      $5_1 = 1 << $5_1;
      $1_1 = 0;
     } else {
      $1_1 = 1 << $5_1;
      $5_1 = $1_1 - 1 & 1 >>> 32 - $5_1;
     }
     $7_1 = $1_1;
     $1_1 = 0;
     label$15 : {
      if (!$15_1) {
       $2_1 = $8 ? 1 : $2_1;
       break label$15;
      }
      while (1) {
       if (($1_1 | 0) != ($4_1 | 0)) {
        $1968($13 + Math_imul($1_1, 104) | 0, 86, 255)
       }
       $2_1 = 1;
       $1_1 = $1_1 + 1 | 0;
       if (($9 | 0) != ($1_1 | 0)) {
        continue
       }
       break;
      };
     }
     $4_1 = $7_1 | $10_1;
     $5_1 = $5_1 | $6_1;
     $1_1 = $2_1;
     $3 = $3 + 1 | 0;
     if ((($1_1 | 0) <= ($3 | 0) | $8) != 1) {
      continue
     }
     break;
    };
   }
   label$19 : {
    if ($1_1) {
     break label$19
    }
    if ($1937($0_1 + 7 | 0, 0) & 8) {
     $1_1 = 0;
     break label$19;
    }
    $1_1 = 0;
    if (($1944($0_1, 84) | 0) <= 0) {
     break label$19
    }
    $2_1 = 0;
    $3 = 0;
    while (1) {
     $4_1 = $3;
     $1_1 = $1944($0_1, 16) + Math_imul($3, 104) | 0;
     label$22 : {
      if (!$1937($1_1, 90)) {
       $3 = $2_1;
       $2_1 = 1;
       break label$22;
      }
      $3 = $2_1;
      $2_1 = 1;
      if ($1937($1_1 + 1 | 0, 0) & 2) {
       break label$22
      }
      $1968($1_1, 86, 0);
      $1968($1_1, 101, $1937($1_1, 101) & 252 | $1937($1_1, 102) & 3);
      $3 = 1;
      $2_1 = 0;
     }
     $1_1 = $3;
     if ($2_1) {
      $2_1 = $1_1;
      $3 = $4_1 + 1 | 0;
      if (($1944($0_1, 84) | 0) <= ($3 | 0)) {
       break label$19
      }
      continue;
     }
     break;
    };
   }
   $1968($0_1, 416, $1_1);
   $2_1 = $1944($0_1 + 396 | 0, 0);
   $1_1 = $1936($0_1, 416);
   $1_1 = ($1_1 | 0) >= 2 ? $1_1 : 0;
   label$20 : {
    if (($2_1 | 0) >= ($1_1 | 0)) {
     break label$20
    }
    $3 = $2_1;
    $2_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
    $2_1 = ($1_1 | 0) < ($2_1 | 0) ? $2_1 : $1_1;
    if (($3 | 0) >= ($2_1 | 0)) {
     break label$20
    }
    $3 = $16(Math_imul($2_1, 12));
    $4_1 = $1944($0_1 + 400 | 0, 0);
    if ($4_1) {
     $1602($3, $4_1, Math_imul($1944($0_1, 392), 12));
     $17($1944($0_1, 400));
    }
    $1973($0_1, 396, $2_1);
    $1973($0_1, 400, $3);
   }
   $1968($0_1, 444, 0);
   $1973($0_1, 392, $1_1);
   $1968($0_1 + 412 | 0, 0, 1);
  }
  $2_1 = 0;
  label$6 : {
   label$7 : {
    switch ($1937($0_1, 416) | 0) {
    case 1:
     $2_1 = $0_1 + 380 | 0;
     break label$6;
    case 0:
     break label$6;
    default:
     break label$7;
    };
   }
   $2_1 = $1944($0_1 + 400 | 0, 0);
  }
  $1_1 = $2_1;
  label$9 : {
   if (!$11_1 | !$1_1) {
    break label$9
   }
   if (($1944($0_1, 84) | 0) <= 0) {
    break label$9
   }
   $2_1 = 0;
   while (1) {
    $4_1 = $1944($0_1, 16) + Math_imul($2_1, 104) | 0;
    $3 = $1937($4_1, 86);
    if (($3 | 0) != 255) {
     $5_1 = $1944($4_1, 48);
     $6_1 = $3 << 24 >> 24;
     $3 = Math_imul($6_1, 12) + $1_1 | 0;
     $1970($3, 6, $6_1);
     $1970($3, 4, $2_1 << 24 >> 24);
     $1973($3, 0, $5_1);
     $1968($3, 8, $1937($4_1, 101) & 3);
    }
    $2_1 = $2_1 + 1 | 0;
    if (($1944($0_1, 84) | 0) > ($2_1 | 0)) {
     continue
    }
    break;
   };
  }
  $1973($0_1, 404, $1_1);
  $1973($0_1 + 408 | 0, 0, $1936($0_1, 416));
 }
 
 function $503() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = 0, $13 = Math_fround(0), $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = Math_fround(0), $20_1 = 0, $21_1 = 0, $22_1 = 0, $23_1 = 0, $24 = Math_fround(0), $25_1 = Math_fround(0), $26_1 = 0, $27_1 = 0, $28_1 = Math_fround(0), $29_1 = 0, $30 = Math_fround(0), $31_1 = 0, $32_1 = 0, $33_1 = Math_fround(0), $34_1 = 0, $35_1 = 0, $36_1 = 0, $37 = 0, $38_1 = 0, $39_1 = Math_fround(0), $40_1 = 0, $41_1 = 0, $42_1 = 0, $43_1 = 0, $44_1 = 0, $45_1 = 0, $46_1 = 0, $47_1 = 0, $48_1 = Math_fround(0);
  $26_1 = global$0 - 16 | 0;
  global$0 = $26_1;
  $21_1 = $1944(0, 73568);
  $1_1 = $1944($21_1, 8036);
  if (!$1937($1_1, 441)) {
   $496($1_1)
  }
  $17_1 = $1944($1_1, 12);
  $18_1 = $1944($1_1, 356);
  $10_1 = $1944($1_1, 360);
  $2_1 = $1944($1_1, 4);
  if ($1937($1_1, 442)) {
   $504($1_1)
  }
  label$3 : {
   if (!($2_1 & 32)) {
    break label$3
   }
   if (($1937($1_1, 420) | 0) == 255) {
    break label$3
   }
   if ($197()) {
    break label$3
   }
   if (!$177(1)) {
    break label$3
   }
   $4_1 = $1944($1944(0, 73568), 8036);
   $0_1 = $1936($1_1, 420);
   if (($0_1 | 0) == -1) {
    $0_1 = $1944($4_1, 92)
   }
   if (!($1937($4_1, 4) & 7)) {
    break label$3
   }
   $1968($4_1, 446, 1);
   $1970($4_1, 98, $1941($4_1, 96));
   $1968($4_1, 432, ($1944($4_1, 84) | 0) == ($0_1 | 0) ? -1 : $0_1);
   $318($23(1873, $1944($4_1, 0)), 0);
  }
  $1982($10_1 + 256 | 0, 0, $1959($17_1, 68), i64toi32_i32$HIGH_BITS);
  $1982($10_1 + 248 | 0, 0, $1959($17_1, 76), i64toi32_i32$HIGH_BITS);
  $1982($10_1 + 232 | 0, 0, $1959($17_1, 84), i64toi32_i32$HIGH_BITS);
  $25_1 = $1963($1_1, 104);
  $31_1 = ($10_1 | 0) == ($18_1 | 0);
  label$5 : {
   if (!$31_1) {
    $1986($10_1 + 236 | 0, 0, $25_1);
    break label$5;
   }
   if ($2_1 & 131072) {
    break label$5
   }
   $0_1 = $1_1 + 224 | 0;
   $3 = $1963($0_1, 0);
   $3 = $3 >= $25_1 ? $3 : $25_1;
   $1986($1_1 + 240 | 0, 0, $3);
   $1986($0_1, 0, $3);
  }
  $3 = $1963($1_1 + 224 | 0, 0);
  $1986($1_1, 180, Math_fround($3 - $1963($1_1 + 216 | 0, 0)));
  $0_1 = $1_1 + 256 | 0;
  $6_1 = $1963($0_1, 0);
  $1986($0_1, 0, $3 <= $6_1 ? $6_1 : $3);
  $0_1 = $1944($1_1, 4);
  if ($0_1 & 16777216) {
   $4_1 = $1944($1_1, 360);
   $3 = $1963($4_1 + 232 | 0, 0);
   $5_1 = $1936($1_1, 429);
   if (($5_1 | 0) != -1) {
    $6_1 = Math_fround(Math_fround(Math_fround($1963($1944($1_1, 16) + Math_imul($5_1, 104) | 0, 56) + $1963($1_1, 164)) + $1963($1_1, 160)) - ($0_1 & 1024 ? Math_fround(1.0) : Math_fround(0.0)));
    $3 = $3 >= $6_1 ? $3 : $6_1;
   }
   if (($1937($1_1, 423) | 0) != 255) {
    $6_1 = $1963($1_1, 204);
    $3 = $3 >= $6_1 ? $3 : $6_1;
   }
   $1986($4_1, 232, $3);
  }
  if (!($2_1 & 1048576)) {
   $380($1944($10_1, 580))
  }
  $0_1 = $1944($10_1, 580);
  $0_1 = (($1944($0_1, 60) << 4) + $1944($0_1 + 68 | 0, 0) | 0) - 16 | 0;
  $4_1 = $1959($0_1, 0);
  $5_1 = i64toi32_i32$HIGH_BITS;
  $1982($10_1 + 504 | 0, 0, $1959($0_1, 8), i64toi32_i32$HIGH_BITS);
  $1982($10_1, 496, $4_1, $5_1);
  if ($2_1 & 1920) {
   $0_1 = global$0 + -64 | 0;
   global$0 = $0_1;
   $3 = $1963($1_1 + 216 | 0, 0);
   $4_1 = $1944($1_1, 356);
   label$1 : {
    if (!($3 < $1963($4_1 + 508 | 0, 0))) {
     break label$1
    }
    if (!($1963($1_1 + 224 | 0, 0) > $1963($4_1 + 500 | 0, 0))) {
     break label$1
    }
    $12_1 = $1_1 + 212 | 0;
    if (!($1963($12_1, 0) < $1963($4_1, 504))) {
     break label$1
    }
    if (!($1963($1_1, 220) > $1963($4_1, 496))) {
     break label$1
    }
    $5_1 = $1944($1_1, 376);
    $4_1 = $1944($1944($1_1, 360), 580);
    $422($5_1, $4_1, 0);
    $2_1 = $1959($1_1, 292);
    $5_1 = i64toi32_i32$HIGH_BITS;
    $1983($0_1, 56, $2_1, $5_1);
    $8 = $1959($1_1 + 300 | 0, 0);
    $7_1 = i64toi32_i32$HIGH_BITS;
    $1983($0_1, 48, $8, $7_1);
    $1983($0_1, 16, $2_1, $5_1);
    $1983($0_1, 8, $8, $7_1);
    $378($4_1, $0_1 + 16 | 0, $0_1 + 8 | 0, 0);
    $6_1 = $1963($1_1 + 240 | 0, 0);
    $13 = $1963($1_1 + 232 | 0, 0);
    $3 = $13;
    if ($1937($1_1, 445)) {
     if (($1936($1_1, 434) | 0) <= 0) {
      $3 = $1963($1_1 + 248 | 0, 0)
     }
     $3 = Math_fround($3 + $1963($1_1, 184));
     $3 = $3 > $6_1 ? $6_1 : $3;
    }
    label$4 : {
     if (!($1937($1_1 + 5 | 0, 0) & 2)) {
      break label$4
     }
     if (($1944($1_1, 84) | 0) <= 0) {
      break label$4
     }
     $16_1 = $1_1 + 5 | 0;
     $5_1 = 0;
     $8 = 0;
     while (1) {
      $7_1 = $1960($1_1, 40);
      $9 = i64toi32_i32$HIGH_BITS;
      $2_1 = $5_1 & 31;
      label$6 : {
       if (!((($5_1 & 63) >>> 0 >= 32 ? $9 >>> $2_1 | 0 : ((1 << $2_1) - 1 & $9) << 32 - $2_1 | $7_1 >>> $2_1) & 1)) {
        break label$6
       }
       $2_1 = $1944($1_1, 16);
       $9 = $1937($1944($1_1, 24) + $5_1 | 0, 0);
       $7_1 = $2_1 + Math_imul($9 << 24 >> 24, 104) | 0;
       $2_1 = 0;
       if (($1937($1_1, 423) | 0) == ($9 | 0)) {
        $2_1 = ($1941($1_1, 98) | 0) == ($1941($1_1, 96) | 0)
       }
       $14 = $1937($1_1, 421);
       $22_1 = $1945($1_1, 436);
       $11_1 = $1963($7_1, 12);
       if (!$2_1 & $1963($1_1, 268) < $11_1) {
        break label$6
       }
       label$9 : {
        if (($1937($7_1, 85) | 0) != 255) {
         break label$9
        }
        if (!($1944($7_1, 0) & 1073741856)) {
         break label$9
        }
        if (($1944($1_1, 4) & 122880) != 16384) {
         break label$6
        }
       }
       if ($1963($7_1, 32) >= $11_1) {
        break label$6
       }
       label$10 : {
        label$11 : {
         $14 = $14 & 255;
         if (!(($14 | 0) == ($9 | 0) | $2_1)) {
          $23_1 = $5_1 + 1 | 0;
          if (($23_1 ? $8 : $8 + 1 | 0) | ($22_1 | 0) != ($23_1 | 0)) {
           break label$11
          }
         }
         if ($2_1) {
          $2_1 = $51(29, Math_fround(1.0));
          $11_1 = $6_1;
          break label$10;
         }
         if (($9 | 0) == ($14 | 0)) {
          $2_1 = $51(28, Math_fround(1.0));
          $11_1 = $6_1;
          break label$10;
         }
         $2_1 = $1944($1_1, 136);
         $11_1 = $6_1;
         break label$10;
        }
        $9 = $1937($16_1, 0) & 24;
        $2_1 = $1944(($9 ? 136 : 140) + $1_1 | 0, 0);
        $11_1 = $9 ? $3 : $6_1;
       }
       if (!($11_1 > $13)) {
        break label$6
       }
       $7_1 = $7_1 + 12 | 0;
       $19 = $1963($7_1, 0);
       $1986($0_1, 28, $13);
       $1986($0_1, 24, $19);
       $19 = $1963($7_1, 0);
       $1986($0_1, 44, $11_1);
       $1986($0_1, 40, $19);
       $399($4_1, $0_1 + 24 | 0, $0_1 + 40 | 0, $2_1, Math_fround(1.0));
      }
      $5_1 = $5_1 + 1 | 0;
      $8 = $5_1 ? $8 : $8 + 1 | 0;
      $7_1 = $1953($1_1, 84) >>> 0 > $5_1 >>> 0;
      $2_1 = i64toi32_i32$HIGH_BITS;
      if ($7_1 & ($2_1 | 0) >= ($8 | 0) | ($2_1 | 0) > ($8 | 0)) {
       continue
      }
      break;
     };
    }
    $5_1 = $1944($1_1, 4);
    $8 = $5_1 & 1280;
    label$15 : {
     if (!$8) {
      break label$15
     }
     $7_1 = $0_1 + 32 | 0;
     $1983($7_1, 0, $1959($12_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1983($0_1, 24, $1959($12_1, 0), i64toi32_i32$HIGH_BITS);
     $2_1 = $1944($1_1, 136);
     if (($8 | 0) == 1280) {
      $400($4_1, $0_1 + 24 | 0, $7_1, $2_1, Math_fround(0.0), 0, Math_fround(1.0));
      break label$15;
     }
     if ($5_1 & 1024) {
      $1986($0_1, 40, $1963($0_1, 24));
      $1986($0_1, 44, $1963($0_1 + 36 | 0, 0));
      $5_1 = $0_1 + 40 | 0;
      $399($4_1, $0_1 + 24 | 0, $5_1, $2_1, Math_fround(1.0));
      $1982($0_1, 40, __wasm_rotl_i64($1959($0_1, 28), i64toi32_i32$HIGH_BITS), i64toi32_i32$HIGH_BITS);
      $399($4_1, $5_1, $0_1 + 32 | 0, $2_1, Math_fround(1.0));
      break label$15;
     }
     if (!($5_1 & 256)) {
      break label$15
     }
     $1982($0_1, 40, __wasm_rotl_i64($1959($0_1, 28), i64toi32_i32$HIGH_BITS), i64toi32_i32$HIGH_BITS);
     $5_1 = $0_1 + 40 | 0;
     $399($4_1, $0_1 + 24 | 0, $5_1, $2_1, Math_fround(1.0));
     $1986($0_1, 44, $1963($0_1 + 36 | 0, 0));
     $1986($0_1, 40, $1963($0_1, 24));
     $399($4_1, $5_1, $0_1 + 32 | 0, $2_1, Math_fround(1.0));
    }
    label$18 : {
     if (!($1937($1_1, 4) & 128)) {
      break label$18
     }
     $3 = $1963($1_1, 104);
     if (!($1963($1_1 + 224 | 0, 0) > $3)) {
      break label$18
     }
     if (!($1963($1_1 + 280 | 0, 0) <= $3)) {
      break label$18
     }
     if (!($1963($1_1 + 288 | 0, 0) > $3)) {
      break label$18
     }
     $6_1 = $1963($1_1, 144);
     $1986($0_1, 28, $3);
     $1986($0_1, 24, $6_1);
     $6_1 = $1963($1_1, 148);
     $1986($0_1, 44, $3);
     $1986($0_1, 40, $6_1);
     $399($4_1, $0_1 + 24 | 0, $0_1 + 40 | 0, $1944($1_1, 140), Math_fround(1.0));
    }
    $380($4_1);
   }
   global$0 = $0_1 - -64 | 0;
  }
  $34_1 = $1944($1_1, 376);
  $422($34_1, $1944($10_1, 580), 0);
  if (!($1937($1_1 + 6 | 0, 0) & 16)) {
   $2_1 = 0;
   $8 = 0;
   $4_1 = 0;
   $16_1 = global$0 - 192 | 0;
   global$0 = $16_1;
   $22_1 = $1936($1_1, 434);
   $12_1 = $1944($1_1, 376);
   $14 = $1944(0, 73568);
   $23_1 = $1936($1_1, 436);
   $1604($16_1 + 32 | 0, 0, 160);
   $35_1 = $1944($1_1, 84);
   if (($35_1 | 0) > 0) {
    $15_1 = $23_1 >> 31;
    $40_1 = ($23_1 | 0) <= 0;
    $41_1 = $1960($1_1, 56);
    $29_1 = i64toi32_i32$HIGH_BITS;
    $0_1 = 0;
    while (1) {
     $5_1 = $2_1;
     $4_1 = $8 & 31;
     if ((($8 & 63) >>> 0 >= 32 ? $29_1 >>> $4_1 | 0 : ((1 << $4_1) - 1 & $29_1) << 32 - $4_1 | $41_1 >>> $4_1) & 1) {
      $42_1 = ($5_1 | 0) >= ($15_1 | 0) & $8 >>> 0 >= $23_1 >>> 0 | ($5_1 | 0) > ($15_1 | 0) | $40_1;
      $7_1 = $1944($1_1, 16) + Math_imul($8, 104) | 0;
      $43_1 = $7_1 + 40 | 0;
      $44_1 = $7_1 - -64 | 0;
      $45_1 = $7_1 + 89 | 0;
      $46_1 = $7_1 + 88 | 0;
      $47_1 = $1944($12_1, 16);
      $27_1 = $7_1 + 72 | 0;
      $20_1 = $7_1 + 68 | 0;
      $2_1 = 0;
      while (1) {
       $4_1 = $2_1;
       $32_1 = $1937($2_1 ? $45_1 : $46_1, 0);
       $9 = $47_1 + Math_imul($32_1, 24) | 0;
       $2_1 = $1944($9, 0);
       label$62 : {
        if (($2_1 | 0) <= 0) {
         break label$62
        }
        $2_1 = $2_1 - 1 | 0;
        if ($1944($1944($9, 8) + Math_imul($2_1, 40) | 0, 28)) {
         break label$62
        }
        $1973($9, 0, $2_1);
       }
       label$7 : {
        if (($1944($9, 0) | 0) != 1) {
         break label$7
        }
        label$93 : {
         if ($1937($7_1 + 1 | 0, 0) & 1) {
          break label$93
         }
         label$104 : {
          if (($22_1 | 0) <= 0) {
           $3 = $1963($20_1, 0);
           $6_1 = $1963($27_1, 0);
           $3 = $3 >= $6_1 ? $3 : $6_1;
           break label$104;
          }
          if (!$4_1) {
           $3 = $1963($44_1, 0);
           $6_1 = $1963($27_1, 0);
           $3 = $3 >= $6_1 ? $3 : $6_1;
           break label$104;
          }
          $3 = $1963($20_1, 0);
         }
         if (!($3 > $1963($43_1, 0))) {
          break label$93
         }
         break label$7;
        }
        $36_1 = (($22_1 | 0) <= 0 ? 2 : (($4_1 | 0) != 0) << 1) | $42_1;
        $2_1 = ($16_1 + 32 | 0) + Math_imul($36_1, 40) | 0;
        $37 = $2_1 + 16 | 0;
        if (!$1944($2_1, 16)) {
         $1983($2_1, 8, -8388609, -8388609);
         $1983($2_1, 0, 2139095039, 2139095039);
        }
        $38_1 = ($2_1 + ($32_1 >>> 3 & 28) | 0) + 20 | 0;
        $1973($38_1, 0, $1944($38_1, 0) | 1 << $32_1);
        $1973($37, 0, $1944($37, 0) + 1 | 0);
        $9 = $1944($9, 8);
        $3 = $1963($9, 4);
        $11_1 = $1963($2_1, 0);
        $6_1 = $1963($9, 0);
        if ($11_1 > $6_1) {
         $1986($2_1, 0, $6_1)
        }
        $6_1 = $1963($9, 8);
        if ($1963($2_1, 4) > $3) {
         $1986($2_1, 4, $3)
        }
        $3 = $1963($9, 12);
        if ($1963($2_1, 8) < $6_1) {
         $1986($2_1, 8, $6_1)
        }
        if ($1963($2_1 + 12 | 0, 0) < $3) {
         $1986($2_1, 12, $3)
        }
        $0_1 = $0_1 | 1 << $36_1;
       }
       if (($22_1 | 0) > 0) {
        $2_1 = $4_1 + 1 | 0;
        if (!$4_1) {
         continue
        }
       }
       break;
      };
      $1968($7_1, 87, 255);
     }
     $4_1 = $0_1;
     $8 = $8 + 1 | 0;
     $2_1 = $8 ? $5_1 : $5_1 + 1 | 0;
     if ($2_1 | ($8 | 0) != ($35_1 | 0)) {
      continue
     }
     break;
    };
   }
   if ($4_1) {
    $0_1 = $1944($14 + 8104 | 0, 0);
    $4_1 = $1944($12_1, 4) - 2 | 0;
    label$20 : {
     if (($0_1 | 0) >= ($4_1 | 0)) {
      break label$20
     }
     $5_1 = $0_1;
     $0_1 = $0_1 ? $0_1 + (($0_1 | 0) / 2 | 0) | 0 : 8;
     $0_1 = ($0_1 | 0) > ($4_1 | 0) ? $0_1 : $4_1;
     if (($5_1 | 0) >= ($0_1 | 0)) {
      break label$20
     }
     $2_1 = $16(Math_imul($0_1, 24));
     $5_1 = $1944($14 + 8108 | 0, 0);
     if ($5_1) {
      $1602($2_1, $5_1, Math_imul($1944($14, 8100), 24));
      $17($1944($14, 8108));
     }
     $1973($14, 8104, $0_1);
     $1973($14, 8108, $2_1);
    }
    $1973($14, 8100, $4_1);
    $2_1 = $1944($14 + 8108 | 0, 0);
    $0_1 = $16_1 + 8 | 0;
    $1973($0_1 + 16 | 0, 0, 0);
    $1983($0_1 + 8 | 0, 0, 0, 0);
    $1983($16_1, 8, 0, 0);
    $4_1 = $1944($12_1, 4);
    if (($4_1 | 0) >= 3) {
     $5_1 = $4_1 - 1 | 0;
     $8 = ($5_1 & 31) + 1 | 0;
     $0_1 = 2;
     while (1) {
      $7_1 = ($16_1 + 8 | 0) + ($0_1 >> 5 << 2) | 0;
      $9 = $7_1;
      $15_1 = $1944($7_1, 0);
      $7_1 = ($5_1 | 0) > ($0_1 | 31) ? 32 : $8;
      $1973($9, 0, $15_1 | ((($7_1 & 63) >>> 0 < 32 ? -1 << $7_1 : 0) ^ -1) & -1 << $0_1);
      $0_1 = ($0_1 & -32) + 32 | 0;
      if (($4_1 | 0) > ($0_1 | 0)) {
       continue
      }
      break;
     };
    }
    $0_1 = $1937($1_1, 440);
    $5_1 = ($16_1 + 8 | 0) + ($0_1 >>> 3 & 28) | 0;
    $8 = $1944($5_1, 0);
    $1973($5_1, 0, __wasm_rotl_i32($0_1) & $8);
    $6_1 = $1963($1_1 + 336 | 0, 0);
    $13 = $1963($1_1 + 332 | 0, 0);
    $11_1 = $1963($1_1 + 328 | 0, 0);
    $19 = $1963($1_1, 324);
    $29_1 = $1_1 + 6 | 0;
    $0_1 = 0;
    $27_1 = ($22_1 | 0) > 0;
    $5_1 = $4_1 + ($27_1 ? -3 : -2) | 0;
    while (1) {
     $4_1 = $5_1;
     $7_1 = $0_1;
     $8 = $2_1;
     $0_1 = ($16_1 + 32 | 0) + Math_imul($0_1, 40) | 0;
     $2_1 = $1944($0_1, 16);
     label$27 : {
      if (!$2_1) {
       break label$27
      }
      $24 = $1963($0_1, 4);
      $30 = $11_1 > $24 ? $24 : $11_1;
      $28_1 = $1963($0_1, 0);
      $39_1 = $19 > $28_1 ? $28_1 : $19;
      $33_1 = $1963($0_1, 8);
      $48_1 = $13 <= $33_1 ? $33_1 : $13;
      $3 = $1963($0_1, 12);
      label$29 : {
       if ($7_1 >>> 0 < 2) {
        break label$29
       }
       if ($1937($29_1, 0) & 2) {
        break label$29
       }
       $3 = $3 >= $6_1 ? $3 : $6_1;
      }
      $9 = $0_1 + 20 | 0;
      $0_1 = 0;
      while (1) {
       $5_1 = $0_1 << 2;
       $15_1 = $5_1 + ($16_1 + 8 | 0) | 0;
       $20_1 = $1944($15_1, 0);
       $1973($15_1, 0, ($1944($5_1 + $9 | 0, 0) ^ -1) & $20_1);
       $0_1 = $0_1 + 1 | 0;
       if (($0_1 | 0) != 5) {
        continue
       }
       break;
      };
      $5_1 = $4_1 - $2_1 | 0;
      if (($1944($12_1, 4) | 0) <= 0) {
       $4_1 = $5_1;
       break label$27;
      }
      $24 = $7_1 >>> 0 > 1 ? ($27_1 ? $24 : $30) : $30;
      $0_1 = $7_1 & 1;
      $30 = $0_1 ? (($23_1 | 0) > 0 ? $28_1 : $39_1) : $39_1;
      $28_1 = $0_1 ? $48_1 : $33_1;
      $4_1 = 0;
      while (1) {
       $0_1 = $2_1;
       $2_1 = $9 + ($4_1 >>> 3 & 536870908) | 0;
       $15_1 = $1944($2_1, 0);
       $20_1 = 1 << $4_1;
       if ($15_1 & $20_1) {
        $1973($2_1, 0, $15_1 & ($20_1 ^ -1));
        $15_1 = $1944($12_1, 16) + Math_imul($4_1, 24) | 0;
        $20_1 = $15_1 + 8 | 0;
        $2_1 = $1944($20_1, 0);
        $1986($2_1, 12, $3);
        $1986($2_1, 8, $28_1);
        $1986($2_1, 4, $24);
        $1986($2_1, 0, $30);
        $1982($8 + 16 | 0, 0, $1959($15_1 + 16 | 0, 0), i64toi32_i32$HIGH_BITS);
        $1982($8 + 8 | 0, 0, $1959($20_1, 0), i64toi32_i32$HIGH_BITS);
        $1982($8, 0, $1959($15_1, 0), i64toi32_i32$HIGH_BITS);
        $8 = $8 + 24 | 0;
        $0_1 = $0_1 - 1 | 0;
       }
       $4_1 = $4_1 + 1 | 0;
       if (($1944($12_1, 4) | 0) > ($4_1 | 0)) {
        $2_1 = $0_1;
        if ($0_1) {
         continue
        }
       }
       break;
      };
      $4_1 = $5_1;
     }
     $0_1 = $8;
     label$38 : {
      if (($7_1 | 0) != 1) {
       break label$38
      }
      if (($22_1 | 0) <= 0) {
       break label$38
      }
      $2_1 = $1944($12_1, 16) + Math_imul($1937($1_1, 440), 24) | 0;
      $1982($0_1, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
      $1982($0_1 + 16 | 0, 0, $1959($2_1 + 16 | 0, 0), i64toi32_i32$HIGH_BITS);
      $1982($0_1 + 8 | 0, 0, $1959($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
      $0_1 = $0_1 + 24 | 0;
     }
     $2_1 = $0_1;
     $9 = $2_1;
     $5_1 = $4_1;
     $0_1 = $7_1 + 1 | 0;
     if (($0_1 | 0) != 4) {
      continue
     }
     break;
    };
    $8 = $1944($12_1, 4);
    label$41 : {
     if (!$4_1 | ($8 | 0) <= 0) {
      break label$41
     }
     $2_1 = 0;
     $5_1 = $9;
     while (1) {
      $0_1 = $5_1;
      if ($1944(($16_1 + 8 | 0) + ($2_1 >>> 3 & 536870908) | 0, 0) >>> $2_1 & 1) {
       $5_1 = $1944($12_1, 16) + Math_imul($2_1, 24) | 0;
       $1982($0_1, 0, $1959($5_1, 0), i64toi32_i32$HIGH_BITS);
       $1982($0_1 + 16 | 0, 0, $1959($5_1 + 16 | 0, 0), i64toi32_i32$HIGH_BITS);
       $1982($0_1 + 8 | 0, 0, $1959($5_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
       $0_1 = $0_1 + 24 | 0;
       $4_1 = $4_1 - 1 | 0;
      }
      $5_1 = $0_1;
      $2_1 = $2_1 + 1 | 0;
      $8 = $1944($12_1, 4);
      if (($2_1 | 0) >= ($8 | 0)) {
       break label$41
      }
      if ($4_1) {
       continue
      }
      break;
     };
    }
    $1602($1944($12_1 + 16 | 0, 0) + 48 | 0, $1944($14, 8108), Math_imul($8, 24) - 48 | 0);
   }
   global$0 = $16_1 + 192 | 0;
  }
  $421($34_1, $1944($10_1, 580));
  $3 = $1963($1_1, 164);
  $13 = Math_fround($3 + $3);
  $0_1 = $1936($1_1, 417);
  $3 = $1963($1_1, 160);
  $1986($1_1, 196, Math_fround(Math_fround($13 * Math_fround($0_1 | 0)) + Math_fround(Math_fround($3 + $3) + Math_fround(Math_fround($1963($1_1, 172) + $1963($1_1, 176)) * Math_fround($0_1 - 1 | 0)))));
  $5_1 = $1_1 + 196 | 0;
  $9 = $1944($1_1, 84);
  if (($9 | 0) > 0) {
   $12_1 = $1960($1_1, 48);
   $7_1 = i64toi32_i32$HIGH_BITS;
   $4_1 = 0;
   $0_1 = 0;
   while (1) {
    $2_1 = $4_1 & 31;
    if ((($4_1 & 63) >>> 0 >= 32 ? $7_1 >>> $2_1 | 0 : ((1 << $2_1) - 1 & $7_1) << 32 - $2_1 | $12_1 >>> $2_1) & 1) {
     $2_1 = $1944($1_1, 16) + Math_imul($4_1, 104) | 0;
     $8 = $1944($2_1, 0);
     label$181 : {
      if (($8 & 48) == 16) {
       $3 = $1963($5_1, 0);
       $2_1 = $2_1 + 16 | 0;
       break label$181;
      }
      $3 = $1963($2_1, 64);
      $6_1 = $1963($2_1, 68);
      $3 = $3 >= $6_1 ? $3 : $6_1;
      $6_1 = $1963($2_1, 52);
      $3 = Math_fround($3 - $6_1);
      if (!($8 & 8192)) {
       $6_1 = Math_fround($1963($2_1, 76) - $6_1);
       $3 = $3 >= $6_1 ? $3 : $6_1;
      }
      label$22 : {
       if (!($8 & 16)) {
        break label$22
       }
       $6_1 = $1963($2_1, 28);
       if (!($6_1 > Math_fround(0.0))) {
        break label$22
       }
       $3 = $1937($1_1, 4) & 1 ? ($8 & 32 ? $6_1 : $3) : $6_1;
      }
      $6_1 = $1963($1_1, 156);
      $3 = $3 >= $6_1 ? $3 : $6_1;
      $2_1 = $5_1;
     }
     $1986($5_1, 0, Math_fround($1963($2_1, 0) + $3));
    }
    $4_1 = $4_1 + 1 | 0;
    $0_1 = $4_1 ? $0_1 : $0_1 + 1 | 0;
    if ($0_1 | ($4_1 | 0) != ($9 | 0)) {
     continue
    }
    break;
   };
  }
  label$255 : {
   label$266 : {
    if ($31_1) {
     break label$266
    }
    if ($1944($1_1, 4) & 16777216) {
     break label$266
    }
    $1973($10_1, 88, 0);
    break label$255;
   }
   $0_1 = $1936($1_1, 424);
   if (($0_1 | 0) == -1) {
    break label$255
   }
   if (($1937($1_1, 423) | 0) != 255) {
    break label$255
   }
   if (!$1937($10_1, 136)) {
    break label$255
   }
   if (($1941($1_1, 98) | 0) != ($1941($1_1, 96) | 0)) {
    break label$255
   }
   $6_1 = Math_fround($13 + $1963($1_1, 156));
   $3 = $1963($1944($1_1, 16) + Math_imul($0_1, 104) | 0, 12);
   if ($1963($1_1, 260) > $3) {
    $302($10_1, Math_fround(Math_fround($3 - $1963($10_1, 12)) - $6_1));
    break label$255;
   }
   if (!($1963($1_1 + 268 | 0, 0) < $3)) {
    break label$255
   }
   $302($10_1, Math_fround($6_1 + Math_fround($3 - $1963($10_1, 12))));
  }
  $0_1 = $1936($1_1, 423);
  label$28 : {
   if (($0_1 | 0) == -1) {
    break label$28
   }
   if (($1941($1_1, 96) | 0) != ($1941($1_1, 98) | 0)) {
    break label$28
   }
   $6_1 = Math_fround(Math_fround(Math_fround(Math_fround($1963($21_1 + 228 | 0, 0) - $1963($21_1, 7176)) + Math_fround(4.0)) - $1963($1944($1_1, 16) + Math_imul($0_1, 104) | 0, 8)) - $1963($1_1, 172));
   $3 = $1963($1_1, 164);
   $3 = Math_fround($6_1 - Math_fround($3 + $3));
   label$297 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $0_1 = ~~$3;
     break label$297;
    }
    $0_1 = -2147483648;
   }
   $1986($1_1, 200, Math_fround($0_1 | 0));
  }
  $0_1 = $1_1 + 212 | 0;
  $269();
  $6_1 = $1963($18_1 + 236 | 0, 0);
  $13 = $1963($18_1 + 232 | 0, 0);
  $1982($10_1 + 472 | 0, 0, $1959($17_1 + 44 | 0, 0), i64toi32_i32$HIGH_BITS);
  $1982($10_1, 464, $1959($17_1, 36), i64toi32_i32$HIGH_BITS);
  $1982($10_1 + 488 | 0, 0, $1959($17_1 + 60 | 0, 0), i64toi32_i32$HIGH_BITS);
  $1982($10_1, 480, $1959($17_1, 52), i64toi32_i32$HIGH_BITS);
  $1968($10_1, 143, $1937($1_1, 455));
  $1982($18_1, 208, $1959($1_1, 212), i64toi32_i32$HIGH_BITS);
  $1986($18_1 + 384 | 0, 0, $1963($17_1, 96));
  $1973($18_1 + 392 | 0, 0, $1944($17_1, 100));
  $1973($18_1 + 276 | 0, 0, $1944($17_1, 92));
  label$31 : {
   if (!$31_1) {
    $211();
    break label$31;
   }
   $3 = $1963($1_1 + 220 | 0, 0);
   $11_1 = $1963($1_1, 212);
   $1986($26_1, 12, Math_fround($1963($1_1, 224) - $1963($1_1, 216)));
   $1986($26_1, 8, Math_fround($3 - $11_1));
   $212($26_1 + 8 | 0, Math_fround(-1.0));
   $213($0_1, 0, 0, 0);
  }
  $4_1 = $1944($1_1, 4);
  label$33 : {
   if ($4_1 & 65536) {
    $3 = Math_fround($1963($0_1, 0) + $1963($5_1, 0));
    break label$33;
   }
   $19 = $1963($17_1, 8);
   if ($19 <= Math_fround(0.0)) {
    $3 = Math_fround(0.0);
    if ($4_1 & 16777216) {
     $3 = $1963($10_1, 128)
    }
    $0_1 = $18_1 + 240 | 0;
    $11_1 = $1963($0_1, 0);
    $24 = $3;
    $3 = Math_fround($1963($1_1, 212) + $1963($1_1, 196));
    $19 = Math_fround(Math_fround($24 + $3) - $19);
    $1986($0_1, 0, $11_1 >= $19 ? $11_1 : $19);
    $11_1 = $1963($1_1, 220);
    $3 = $3 > $11_1 ? $11_1 : $3;
    break label$33;
   }
   $3 = $1963($1_1, 220);
  }
  $1986($18_1, 232, $3 <= $13 ? $13 : $3);
  $11_1 = $1963($17_1 + 12 | 0, 0);
  label$37 : {
   if ($11_1 <= Math_fround(0.0)) {
    $3 = Math_fround(0.0);
    if ($4_1 & 33554432) {
     $3 = $1963($10_1 + 132 | 0, 0)
    }
    $0_1 = $18_1 + 244 | 0;
    $13 = $1963($0_1, 0);
    $3 = Math_fround(Math_fround($25_1 + $3) - $11_1);
    $1986($0_1, 0, $3 <= $13 ? $13 : $3);
    $3 = $1963($1_1, 224);
    $3 = $3 < $25_1 ? $3 : $25_1;
    break label$37;
   }
   $3 = $1963($1_1, 224);
  }
  $1986($18_1, 236, $3 <= $6_1 ? $6_1 : $3);
  if ($1937($1_1, 448)) {
   $0_1 = 0;
   $5_1 = 0;
   $1968($1_1, 448, 0);
   if (!($1937($1_1, 4) & 16)) {
    $4_1 = $1944(0, 73568);
    $2_1 = $1944($1_1, 76);
    label$21 : {
     if (($2_1 | 0) == -1) {
      break label$21
     }
     $8 = $1944($1_1, 84);
     $0_1 = $1944($4_1 + 12176 | 0, 0) + $2_1 | 0;
     if (($8 | 0) <= ($1936($0_1, 13) | 0)) {
      break label$21
     }
     $1973($0_1, 0, 0);
     $0_1 = 0;
    }
    if (!$0_1) {
     $0_1 = $508($1944($1_1, 0), $1944($1_1, 84));
     $1973($1_1, 76, $0_1 - $1944($4_1 + 12176 | 0, 0) | 0);
    }
    $4_1 = $0_1;
    $1968($0_1, 12, $1944($1_1, 84));
    $0_1 = $1944($1_1, 16);
    $1973($4_1, 4, 0);
    label$52 : {
     if (($1944($1_1, 84) | 0) > 0) {
      $8 = 0;
      $2_1 = $4_1 + 16 | 0;
      while (1) {
       $3 = $1963(($1944($0_1, 0) & 8 ? 24 : 16) + $0_1 | 0, 0);
       $1968($2_1, 8, $5_1);
       $1986($2_1, 0, $3);
       $1968($2_1, 9, $1937($0_1, 82));
       $1968($2_1, 10, $1937($0_1, 86));
       $7_1 = $1937($2_1, 11) & -4 | $1937($0_1, 101) & 3;
       $1968($2_1, 11, $7_1);
       $7_1 = $7_1 & -5 | $1937($0_1, 91) << 2;
       $1968($2_1, 11, $7_1);
       $1968($2_1, 11, $1937($0_1, 0) & 8 | $7_1 & 247);
       $7_1 = $1944($0_1, 0);
       if ($1963($0_1, 28) != $3) {
        $1973($4_1, 4, $1944($4_1, 4) | 1)
       }
       if (($1936($0_1, 82) | 0) != ($5_1 | 0)) {
        $1973($4_1, 4, $1944($4_1, 4) | 2)
       }
       if (($1937($0_1, 86) | 0) != 255) {
        $1973($4_1, 4, $1944($4_1, 4) | 8)
       }
       if (($1937($0_1, 91) | 0) != (($7_1 ^ -1) >>> 1 & 1)) {
        $1973($4_1, 4, $1944($4_1, 4) | 4)
       }
       $8 = !($7_1 & 8) | $8;
       $2_1 = $2_1 + 12 | 0;
       $0_1 = $0_1 + 104 | 0;
       $5_1 = $5_1 + 1 | 0;
       if (($1944($1_1, 84) | 0) > ($5_1 | 0)) {
        continue
       }
       break;
      };
      $1973($4_1, 4, $1944($4_1, 4) & $1944($1_1, 4));
      $3 = Math_fround(0.0);
      if (!($8 & 1)) {
       break label$52
      }
      $3 = $1963($1_1, 208);
      break label$52;
     }
     $1973($4_1, 4, $1944($4_1, 4) & $1944($1_1, 4));
     $3 = Math_fround(0.0);
    }
    $1986($4_1, 8, $3);
    $346();
   }
  }
  $1968($1_1, 443, 0);
  $0_1 = $1944($21_1, 8040);
  $1973($21_1, 8040, $0_1 - 1 | 0);
  $4_1 = 0;
  if (($0_1 | 0) >= 2) {
   $4_1 = ($1944($21_1 + 8052 | 0, 0) + Math_imul($0_1, 104) | 0) - 208 | 0
  }
  $0_1 = 0;
  if ($4_1) {
   $0_1 = $1944($21_1 + 8064 | 0, 0) + Math_imul($1944($4_1, 0), 456) | 0
  }
  $1973($21_1, 8036, $0_1);
  $5_1 = $18_1 + 372 | 0;
  if ($0_1) {
   $1973($0_1, 12, $4_1);
   $1973($0_1, 376, $4_1 + 16 | 0);
   $0_1 = ($0_1 - $1944($21_1 + 8064 | 0, 0) | 0) / 456 | 0;
  } else {
   $0_1 = -1
  }
  $1973($5_1, 0, $0_1);
  global$0 = $26_1 + 16 | 0;
 }
 
 function $504($0_1) {
  var $1_1 = 0, $2_1 = Math_fround(0), $3 = 0, $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = 0, $12_1 = 0, $13 = 0, $14 = Math_fround(0), $15_1 = 0, $16_1 = Math_fround(0), $17_1 = 0, $18_1 = 0, $19 = Math_fround(0), $20_1 = 0, $21_1 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $7_1 = $1944(0, 73568);
  $9 = $1944($7_1, 7080);
  $6_1 = $1944($0_1, 92);
  if (($6_1 | 0) != -1) {
   $1_1 = $1944($0_1, 360);
   $11_1 = $1944($0_1, 16);
   if ($1937($0_1, 120) & 1) {
    $13 = ($11_1 + Math_imul($6_1, 104) | 0) + 72 | 0
   } else {
    $13 = ($11_1 + Math_imul($6_1, 104) | 0) + ($1937($0_1, 452) ? 68 : 64) | 0
   }
   $2_1 = $1963($13, 0);
   $4_1 = $1963($1_1 + 232 | 0, 0);
   $1986($13, 0, $2_1 >= $4_1 ? $2_1 : $4_1);
   $2_1 = $1963($0_1, 104);
   $4_1 = Math_fround($1963($1_1 + 236 | 0, 0) + $1963($0_1, 168));
   $1986($0_1, 104, $2_1 >= $4_1 ? $2_1 : $4_1);
   $1986($11_1 + Math_imul($6_1, 104) | 0, 60, $1963($1_1 + 384 | 0, 0));
   $2_1 = $1963($0_1, 112);
   $4_1 = $1963($1_1 + 268 | 0, 0);
   $1986($0_1, 112, $2_1 >= $4_1 ? $2_1 : $4_1);
  }
  if ($1937($7_1, 12196)) {
   $64(0, 1059, 0)
  }
  $4_1 = $1963($0_1, 104);
  $1986($9 + 212 | 0, 0, $4_1);
  $10_1 = $1963($0_1, 100);
  $1_1 = $1944($0_1, 88);
  if (!$1_1) {
   $1986($0_1, 184, Math_fround($4_1 - $10_1))
  }
  $11_1 = $1_1 + 1 | 0;
  $20_1 = $1936($0_1, 433);
  $13 = $1936($0_1, 434);
  label$6 : {
   if (!($1963($0_1 + 264 | 0, 0) <= $4_1)) {
    break label$6
   }
   if (!($1963($0_1 + 272 | 0, 0) >= $10_1)) {
    break label$6
   }
   $1_1 = $1944($0_1, 128);
   label$7 : {
    if (($1_1 | 0) != 16777216) {
     break label$7
    }
    $1_1 = 0;
    if (!($1937($0_1, 4) & 64)) {
     break label$7
    }
    $1_1 = $51($1944($0_1, 124) & 1 ? 46 : 45, Math_fround(1.0));
   }
   $6_1 = $1944($0_1 + 132 | 0, 0);
   $7_1 = ($6_1 | 0) != 16777216 ? $6_1 : 0;
   label$8 : {
    label$9 : {
     if (($1944($0_1, 88) | 0) > 0) {
      break label$9
     }
     if (($1944($0_1, 360) | 0) == ($1944($0_1, 356) | 0)) {
      break label$9
     }
     $6_1 = 0;
     break label$8;
    }
    $6_1 = 0;
    if (!($1937($0_1, 4) & 128)) {
     break label$8
    }
    $6_1 = $1944(($1937($0_1 + 122 | 0, 0) & 1 ? 136 : 140) + $0_1 | 0, 0);
   }
   $15_1 = $1936($0_1, 437);
   $17_1 = $1_1 | $7_1;
   if (!(!($17_1 | $6_1 | ($11_1 | 0) == ($13 | 0)) & ($15_1 | 0) < 0)) {
    if (!($1937($0_1 + 6 | 0, 0) & 16)) {
     $18_1 = $1959($0_1, 292);
     $21_1 = i64toi32_i32$HIGH_BITS;
     $12_1 = $1944($9, 580);
     $1982($12_1 + 104 | 0, 0, $1959($0_1 + 300 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1982($12_1, 96, $18_1, $21_1);
    }
    $422($1944($0_1, 376), $1944($9, 580), 0);
   }
   label$13 : {
    if (!$17_1) {
     break label$13
    }
    $2_1 = $1963($0_1 + 252 | 0, 0);
    $5_1 = $1963($0_1, 244);
    $12_1 = $3 + 28 | 0;
    $1986($12_1, 0, $4_1);
    $1986($3, 24, $2_1);
    $1986($3, 16, $5_1);
    $1986($3, 20, $10_1);
    $8 = $1963($0_1, 276);
    $14 = $1963($0_1 + 280 | 0, 0);
    $14 = $10_1 >= $14 ? $10_1 : $14;
    $1986($3, 20, $14);
    $1986($3, 16, $5_1 >= $8 ? $5_1 : $8);
    $5_1 = $1963($0_1 + 284 | 0, 0);
    $8 = $1963($0_1 + 288 | 0, 0);
    $8 = $4_1 < $8 ? $4_1 : $8;
    $1986($12_1, 0, $8);
    $1986($3, 24, $2_1 < $5_1 ? $2_1 : $5_1);
    $12_1 = $3 + 24 | 0;
    if (!(!$1_1 | !($8 > $14))) {
     $401($1944($9, 580), $3 + 16 | 0, $12_1, $1_1, Math_fround(0.0), 0)
    }
    if (!$7_1) {
     break label$13
    }
    if (!($1963($3, 20) < $1963($3, 28))) {
     break label$13
    }
    $401($1944($9, 580), $3 + 16 | 0, $12_1, $7_1, Math_fround(0.0), 0);
   }
   label$15 : {
    if (($15_1 | 0) < 0) {
     break label$15
    }
    $1_1 = $1936($0_1, 437);
    if (($1_1 | 0) < 0) {
     break label$15
    }
    $7_1 = $1_1 << 3;
    $1_1 = $1944($0_1, 32);
    $12_1 = $7_1 + $1_1 | 0;
    $17_1 = $3 + 24 | 0;
    while (1) {
     $15_1 = $1944($0_1, 16);
     $7_1 = $15_1 + Math_imul($1936($1_1, 4), 104) | 0;
     $5_1 = $1963($7_1, 8);
     if (($1937($7_1, 84) | 0) == 255) {
      $5_1 = Math_fround($5_1 - $1963($0_1, 172))
     }
     $18_1 = $1936($1_1, 4);
     $2_1 = $1963($7_1, 12);
     if (($1937($7_1, 85) | 0) == 255) {
      $2_1 = Math_fround($2_1 + $1963($0_1, 176))
     }
     $8 = $1963($0_1, 100);
     $14 = $1963($0_1, 104);
     $1986($3, 28, $14);
     $1986($3, 20, $8);
     $1986($3, 24, $2_1);
     $1986($3, 16, $5_1);
     $16_1 = $1963($0_1, 276);
     $19 = $1963($0_1, 280);
     $1986($3, 20, $8 >= $19 ? $8 : $19);
     $5_1 = $5_1 >= $16_1 ? $5_1 : $16_1;
     $1986($3, 16, $5_1);
     $8 = $1963($0_1, 284);
     $16_1 = $1963($0_1, 288);
     $1986($3, 28, $14 < $16_1 ? $14 : $16_1);
     $2_1 = $2_1 < $8 ? $2_1 : $8;
     $1986($3, 24, $2_1);
     $7_1 = $15_1 + Math_imul($18_1, 104) | 0;
     $8 = $1963($7_1, 32);
     $1986($3, 16, $5_1 >= $8 ? $5_1 : $8);
     $5_1 = $1963($7_1, 12);
     $1986($3, 24, $2_1 < $5_1 ? $2_1 : $5_1);
     $401($1944($9, 580), $3 + 16 | 0, $17_1, $1944($1_1, 0), Math_fround(0.0), 0);
     $1_1 = $1_1 + 8 | 0;
     if ($12_1 >>> 0 >= $1_1 >>> 0) {
      continue
     }
     break;
    };
   }
   label$21 : {
    if (!$6_1) {
     break label$21
    }
    if (!($1963($0_1 + 280 | 0, 0) <= $10_1)) {
     break label$21
    }
    if (!($1963($0_1 + 288 | 0, 0) > $10_1)) {
     break label$21
    }
    $1_1 = $1944($9, 580);
    $2_1 = $1963($0_1, 144);
    $1986($3, 20, $10_1);
    $1986($3, 16, $2_1);
    $2_1 = $1963($0_1, 148);
    $1986($3, 12, $10_1);
    $1986($3, 8, $2_1);
    $399($1_1, $3 + 16 | 0, $3 + 8 | 0, $6_1, Math_fround(1.0));
   }
   if (($11_1 | 0) != ($13 | 0)) {
    break label$6
   }
   if (!($1963($0_1 + 280 | 0, 0) <= $4_1)) {
    break label$6
   }
   if (!($1963($0_1 + 288 | 0, 0) > $4_1)) {
    break label$6
   }
   $1_1 = $1944($9, 580);
   $2_1 = $1963($0_1, 144);
   $1986($3, 20, $4_1);
   $1986($3, 16, $2_1);
   $2_1 = $1963($0_1, 148);
   $1986($3, 12, $4_1);
   $1986($3, 8, $2_1);
   $399($1_1, $3 + 16 | 0, $3 + 8 | 0, $1944($0_1, 136), Math_fround(1.0));
  }
  label$22 : {
   if (($11_1 | 0) != ($20_1 | 0)) {
    break label$22
   }
   $6_1 = $1944($0_1, 84);
   if (($6_1 | 0) <= 0) {
    break label$22
   }
   $7_1 = $1936($0_1, 436);
   $15_1 = $1944($0_1, 16);
   $1_1 = 0;
   while (1) {
    $1968($15_1 + Math_imul($1_1, 104) | 0, 98, ($1_1 | 0) < ($7_1 | 0));
    $1_1 = $1_1 + 1 | 0;
    if (($6_1 | 0) != ($1_1 | 0)) {
     continue
    }
    break;
   };
  }
  if (($11_1 | 0) == ($13 | 0)) {
   $1968($0_1, 452, 1);
   $4_1 = $1963($9 + 452 | 0, 0);
   $2_1 = $1963($9 + 460 | 0, 0);
   $1986($0_1 + 320 | 0, 0, $2_1);
   $1986($0_1 + 288 | 0, 0, $2_1);
   $1968($0_1, 439, $1937($0_1, 440));
   $10_1 = $1963($0_1, 104);
   $5_1 = Math_fround($10_1 + Math_fround(1.0));
   $4_1 = $4_1 <= $5_1 ? $5_1 : $4_1;
   $2_1 = $2_1 > $4_1 ? $4_1 : $2_1;
   $1986($0_1 + 312 | 0, 0, $2_1);
   $1986($0_1 + 280 | 0, 0, $2_1);
   $5_1 = $1963($0_1, 100);
   $4_1 = Math_fround(Math_fround($10_1 + $1963($0_1 + 248 | 0, 0)) - $1963($0_1 + 216 | 0, 0));
   $1986($9, 212, $4_1);
   $1986($0_1, 100, Math_fround($4_1 - Math_fround($10_1 - $5_1)));
   $1986($0_1, 104, $4_1);
   $11_1 = $1944($0_1, 84);
   if (($11_1 | 0) > 0) {
    $13 = $1944($0_1, 16);
    $1_1 = 0;
    while (1) {
     $6_1 = $13 + Math_imul($1_1, 104) | 0;
     $1968($6_1, 87, $1937($6_1, 89));
     $1986($6_1 + 36 | 0, 0, $2_1);
     $1_1 = $1_1 + 1 | 0;
     if (($11_1 | 0) != ($1_1 | 0)) {
      continue
     }
     break;
    };
   }
   $1_1 = $1944($0_1, 16);
   $2_1 = $1963($1_1 + 44 | 0, 0);
   $6_1 = $1_1 + 40 | 0;
   $4_1 = $1963($6_1, 0);
   $10_1 = $1963($1_1 + 36 | 0, 0);
   $5_1 = $1963($1_1, 32);
   $1982($9 + 504 | 0, 0, $1959($6_1, 0), i64toi32_i32$HIGH_BITS);
   $1982($9, 496, $1959($1_1, 32), i64toi32_i32$HIGH_BITS);
   $1_1 = $1944($9, 580);
   $1986($1_1 + 100 | 0, 0, $10_1);
   $1986($1_1 + 104 | 0, 0, $4_1);
   $1986($1_1 + 108 | 0, 0, $2_1);
   $1986($1_1, 96, $5_1);
   $1_1 = $1944($9, 580);
   $1_1 = (($1944($1_1, 60) << 4) + $1944($1_1 + 68 | 0, 0) | 0) - 16 | 0;
   $1986($1_1, 12, $2_1);
   $1986($1_1, 8, $4_1);
   $1986($1_1, 4, $10_1);
   $1986($1_1, 0, $5_1);
   $422($1944($0_1, 376), $1944($9, 580), $1937($1944($0_1, 16), 87));
  }
  if (!($1937($0_1, 120) & 1)) {
   $1973($0_1, 124, $1944($0_1, 124) + 1 | 0)
  }
  $1968($0_1, 442, 0);
  global$0 = $3 + 32 | 0;
 }
 
 function $508($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $2_1 = $1944(0, 73568);
  $3 = $1944($2_1 + 12172 | 0, 0);
  $7_1 = Math_imul($1_1, 12) + 23 & -4;
  $8 = $1944($2_1, 12168);
  $4_1 = $7_1 + $8 | 0;
  label$1 : {
   if (($3 | 0) >= ($4_1 | 0)) {
    break label$1
   }
   $6_1 = $3;
   if ($3) {
    $5_1 = $3 + (($3 | 0) / 2 | 0) | 0
   } else {
    $5_1 = 8
   }
   $3 = ($4_1 | 0) < ($5_1 | 0) ? $5_1 : $4_1;
   if (($6_1 | 0) >= ($3 | 0)) {
    break label$1
   }
   $5_1 = $16($3);
   $6_1 = $1944($2_1 + 12176 | 0, 0);
   if ($6_1) {
    $1602($5_1, $6_1, $1944($2_1, 12168));
    $17($1944($2_1, 12176));
   }
   $1973($2_1, 12172, $3);
   $1973($2_1, 12176, $5_1);
  }
  $1973($2_1, 12168, $4_1);
  $2_1 = $1944($2_1 + 12176 | 0, 0) + $8 | 0;
  $1982($2_1, 4, 0, 0);
  $1973($2_1, 0, $7_1);
  $1982($2_1 + 12 | 0, 0, 0, 0);
  $3 = $2_1 + 4 | 0;
  if (($1_1 | 0) > 0) {
   $4_1 = 0;
   $2_1 = $3 + 16 | 0;
   while (1) {
    $1968($2_1, 10, 255);
    $1982($2_1, 0, 0, 0);
    $1970($2_1, 8, 65535);
    $1968($2_1, 11, $1937($2_1, 11) & 240 | 4);
    $2_1 = $2_1 + 12 | 0;
    $4_1 = $4_1 + 1 | 0;
    if (($4_1 | 0) != ($1_1 | 0)) {
     continue
    }
    break;
   };
  }
  $1968($3, 14, 1);
  $1968($3, 13, $1_1);
  $1968($3, 12, $1_1);
  $1973($3, 0, $0_1);
  return $3;
 }
 
 function $509($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  label$1 : {
   $4_1 = $1944($1944(0, 73568), 8036);
   $6_1 = $1944($4_1, 84);
   $5_1 = $1936($4_1, 419);
   if (($6_1 | 0) <= ($5_1 | 0)) {
    break label$1
   }
   $1968($4_1, 419, $5_1 + 1 | 0);
   $6_1 = $1944($4_1, 16);
   $7_1 = $6_1 + Math_imul($5_1, 104) | 0;
   label$2 : {
    if ($1_1 & 24 | !($2_1 > Math_fround(0.0))) {
     break label$2
    }
    $8 = $1944($4_1, 4) & 57344;
    if (!(($8 | 0) == 16384 | ($8 | 0) == 8192)) {
     break label$2
    }
    $1_1 = $1_1 | 16;
   }
   $497($4_1, $7_1, $1_1);
   $1973($7_1, 48, $3);
   $1_1 = $1944($7_1, 0);
   $1986($7_1, 28, $2_1);
   label$6 : {
    if (!$1937($4_1, 443)) {
     break label$6
    }
    $3 = Math_imul($5_1, 104) + $6_1 | 0;
    label$7 : {
     if (!($1963($3, 16) < Math_fround(0.0))) {
      break label$7
     }
     if (!($1963($3, 24) < Math_fround(0.0))) {
      break label$7
     }
     if (!(!($2_1 > Math_fround(0.0)) | !($1_1 & 16))) {
      $1986($3 + 16 | 0, 0, $2_1)
     }
     if ($1_1 & 8) {
      $1986($3 + 24 | 0, 0, $2_1 > Math_fround(0.0) ? $2_1 : Math_fround(-1.0))
     }
     if (!($2_1 > Math_fround(0.0))) {
      break label$7
     }
     $1968(Math_imul($5_1, 104) + $6_1 | 0, 99, 0);
    }
    label$10 : {
     if (!($1_1 & 2)) {
      break label$10
     }
     if ($1937($4_1, 72) & 4) {
      break label$10
     }
     $1969(Math_imul($5_1, 104) + $6_1 | 0, 91, 0);
    }
    if (!($1_1 & 4)) {
     break label$6
    }
    if ($1937($4_1, 72) & 8) {
     break label$6
    }
    $3 = Math_imul($5_1, 104) + $6_1 | 0;
    $1968($3, 86, 0);
    $1968($3, 101, $1937($3, 101) & 252 | ($1_1 & 32768 ? 2 : 1));
   }
   $1_1 = Math_imul($5_1, 104) + $6_1 | 0;
   $1970($1_1, 80, 65535);
   if (!$0_1) {
    break label$1
   }
   if (!$1937($0_1, 0)) {
    break label$1
   }
   $5_1 = $1_1 + 80 | 0;
   $1_1 = $1944($4_1, 364);
   $3 = $1_1 - 1 | 0;
   $1970($5_1, 0, $1_1 >>> 0 >= $3 >>> 0 ? $3 : 0);
   $39($4_1 + 364 | 0, $0_1, ($1697($0_1) + $0_1 | 0) + 1 | 0);
  }
 }
 
 function $515($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0;
  $3 = ($1_1 | 0) != 16777216 ? $1_1 : 0;
  $1_1 = $1944($1944(0, 73568), 8036);
  label$1 : {
   label$2 : {
    switch ($0_1 - 1 | 0) {
    case 2:
     if ($1963($1_1, 100) > $1963($1_1 + 272 | 0, 0)) {
      break label$1
     }
     $0_1 = $2_1;
     if (($2_1 | 0) == -1) {
      $0_1 = $1944($1_1, 92)
     }
     $5_1 = $1960($1_1, 56);
     $4_1 = i64toi32_i32$HIGH_BITS;
     $2_1 = $0_1 & 31;
     if (!((($0_1 & 63) >>> 0 >= 32 ? $4_1 >>> $2_1 | 0 : ((1 << $2_1) - 1 & $4_1) << 32 - $2_1 | $5_1 >>> $2_1) & 1)) {
      break label$1
     }
     $2_1 = $1936($1_1, 437);
     label$5 : {
      if (($2_1 | 0) >= 0) {
       if (($1936($1944($1_1, 32) + ($2_1 << 3) | 0, 4) | 0) == ($0_1 | 0)) {
        break label$5
       }
      }
      $1968($1_1, 437, $2_1 + 1 | 0);
     }
     $1_1 = $1944($1_1, 32) + ($1936($1_1, 437) << 3) | 0;
     $1968($1_1, 4, $0_1);
     $1973($1_1, 0, $3);
     return;
    case 0:
    case 1:
     break label$2;
    default:
     break label$1;
    };
   }
   if ($1963($1_1, 100) > $1963($1_1 + 272 | 0, 0)) {
    break label$1
   }
   $1973(($1_1 + ((($0_1 | 0) == 2) << 2) | 0) + 128 | 0, 0, $3);
  }
 }
 
 function $517($0_1, $1_1) {
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = 0;
  $2_1 = $1944($1944(0, 73568), 8036);
  if (!$1937($2_1, 441)) {
   $496($2_1)
  }
  if ($1937($2_1, 442)) {
   $504($2_1)
  }
  $1986($2_1, 108, $1_1);
  $1973($2_1, 92, -1);
  $1968($2_1, 442, 1);
  $1968($2_1, 437, 255);
  $1983($2_1, 128, 16777216, 16777216);
  $4_1 = $1944($2_1, 88) + 1 | 0;
  $1973($2_1, 88, $4_1);
  $1973($2_1, 120, $0_1 & 65535 | $1944($2_1, 120) << 16);
  $3 = $1963($2_1, 104);
  $0_1 = $1944($2_1, 360);
  label$3 : {
   if ($4_1) {
    break label$3
   }
   if (($1936($2_1, 434) | 0) <= 0) {
    break label$3
   }
   $3 = $1963($2_1 + 216 | 0, 0);
   $1986($0_1 + 212 | 0, 0, $3);
  }
  $1973($2_1, 112, 0);
  $1986($2_1, 100, $3);
  $1986($2_1, 104, $3);
  $1986($2_1, 116, Math_fround($1963($0_1 + 272 | 0, 0) - $1963($2_1, 152)));
  $1986($0_1 + 236 | 0, 0, $3);
  $1973($0_1 + 268 | 0, 0, 0);
  label$5 : {
   if (!($1937($2_1, 120) & 1)) {
    break label$5
   }
   $0_1 = $51(42, Math_fround(1.0));
   $4_1 = $1944($1944(0, 73568), 8036);
   if (!($1963($4_1, 100) > $1963($4_1 + 272 | 0, 0))) {
    $1973($4_1, 128, ($0_1 | 0) != 16777216 ? $0_1 : 0)
   }
   if ($1944($2_1, 88)) {
    break label$5
   }
   $1968($2_1, 445, 1);
  }
  $3 = $1963($2_1, 168);
  $3 = Math_fround(Math_fround($3 + $3) + $1963($2_1, 104));
  $1_1 = Math_fround($1963($2_1, 100) + $1_1);
  $1986($2_1, 104, $1_1 <= $3 ? $3 : $1_1);
  $1968($1944($2_1, 360), 143, 1);
 }
 
 function $519($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $1_1 = $1944($1944(0, 73568), 8036);
  if ($1_1) {
   $2_1 = $1944($1_1, 92);
   if (($0_1 | 0) != ($2_1 | 0)) {
    if (($2_1 | 0) != -1) {
     $5_1 = $1944($1_1, 360);
     $6_1 = $1944($1_1, 16);
     if ($1937($1_1, 120) & 1) {
      $7_1 = (Math_imul($2_1, 104) + $6_1 | 0) + 72 | 0
     } else {
      $7_1 = (Math_imul($2_1, 104) + $6_1 | 0) + ($1937($1_1, 452) ? 68 : 64) | 0
     }
     $3 = $1963($7_1, 0);
     $4_1 = $1963($5_1 + 232 | 0, 0);
     $1986($7_1, 0, $3 >= $4_1 ? $3 : $4_1);
     $3 = $1963($1_1, 104);
     $4_1 = Math_fround($1963($5_1 + 236 | 0, 0) + $1963($1_1, 168));
     $1986($1_1, 104, $3 >= $4_1 ? $3 : $4_1);
     $1986(Math_imul($2_1, 104) + $6_1 | 0, 60, $1963($5_1 + 384 | 0, 0));
     $3 = $1963($1_1, 112);
     $4_1 = $1963($5_1 + 268 | 0, 0);
     $1986($1_1, 112, $3 >= $4_1 ? $3 : $4_1);
    }
    $520($1_1, $0_1);
   }
   $5_1 = $1960($1_1, 64);
   $2_1 = i64toi32_i32$HIGH_BITS;
   $1_1 = $0_1 & 31;
   $2_1 = (($0_1 & 63) >>> 0 >= 32 ? $2_1 >>> $1_1 | 0 : ((1 << $1_1) - 1 & $2_1) << 32 - $1_1 | $5_1 >>> $1_1) & 1;
  }
  return $2_1;
 }
 
 function $520($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = 0, $9 = 0;
  $1973($0_1, 92, $1_1);
  $3 = $1944($0_1, 360);
  $8 = $1944($0_1, 16);
  $2_1 = $8 + Math_imul($1_1, 104) | 0;
  $6_1 = $1963($2_1, 52);
  $4_1 = $6_1;
  if ($1937($2_1 + 2 | 0, 0) & 1) {
   $4_1 = Math_fround($6_1 + $1963($0_1, 116))
  }
  $1986($3, 208, $4_1);
  $5_1 = $1963($0_1, 168);
  $7_1 = $1963($0_1, 100);
  $1986($3 + 232 | 0, 0, $4_1);
  $5_1 = Math_fround($7_1 + $5_1);
  $1986($3 + 212 | 0, 0, $5_1);
  $1986($3 + 276 | 0, 0, Math_fround(Math_fround($4_1 - $1963($3, 12)) - $1963($3 + 272 | 0, 0)));
  $1986($3 + 264 | 0, 0, $1963($0_1, 112));
  $1973($3 + 292 | 0, 0, $1936($2_1, 98));
  $1986($3 + 468 | 0, 0, $5_1);
  $1986($3, 464, $6_1);
  $1986($3 + 472 | 0, 0, $1963($2_1, 56));
  $1986($3 + 384 | 0, 0, $1963($2_1, 60));
  if (!$1937($2_1, 90)) {
   $4_1 = $1963($0_1, 104);
   $1986($3, 212, $4_1 <= $5_1 ? $5_1 : $4_1);
  }
  $9 = Math_imul($1_1, 104) + $8 | 0;
  $2_1 = $1937($9, 96);
  $1968($3, 143, $2_1);
  if ($2_1) {
   $2_1 = $1944(0, 73568);
   $1973($2_1, 7240, 0);
   $1973($2_1 + 7248 | 0, 0, 0);
  }
  label$4 : {
   if ($1937($0_1 + 6 | 0, 0) & 16) {
    $422($1944($0_1, 376), $1944($3, 580), 2);
    break label$4;
   }
   $1_1 = Math_imul($1_1, 104) + $8 | 0;
   $4_1 = $1963($1_1, 32);
   $5_1 = $1963($1_1 + 44 | 0, 0);
   $2_1 = $1_1 + 40 | 0;
   $6_1 = $1963($2_1, 0);
   $7_1 = $1963($1_1 + 36 | 0, 0);
   $1982($3 + 504 | 0, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
   $1982($3, 496, $1959($1_1, 32), i64toi32_i32$HIGH_BITS);
   $2_1 = $1944($3, 580);
   $1986($2_1 + 100 | 0, 0, $7_1);
   $1986($2_1 + 104 | 0, 0, $6_1);
   $1986($2_1 + 108 | 0, 0, $5_1);
   $1986($2_1, 96, $4_1);
   $2_1 = $1944($3, 580);
   $2_1 = (($1944($2_1, 60) << 4) + $1944($2_1 + 68 | 0, 0) | 0) - 16 | 0;
   $1986($2_1, 12, $5_1);
   $1986($2_1, 8, $6_1);
   $1986($2_1, 4, $7_1);
   $1986($2_1, 0, $4_1);
   $422($1944($0_1, 376), $1944($3, 580), $1937($1_1, 87));
  }
  $0_1 = $1944(0, 73568);
  label$6 : {
   if (!$1937($0_1, 12196)) {
    break label$6
   }
   if ($1937($9 + 96 | 0, 0) & 255) {
    break label$6
   }
   $64($3 + 208 | 0, 1059, 0);
   $1973($0_1, 12228, 2139095039);
  }
 }
 
 function $521() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $0_1 = $1944($1944(0, 73568), 8036);
  if ($0_1) {
   label$2 : {
    label$3 : {
     if (!$1937($0_1, 442)) {
      break label$3
     }
     $2_1 = $1944($0_1, 92);
     $1_1 = $2_1 + 1 | 0;
     if (($1_1 | 0) >= ($1944($0_1, 84) | 0)) {
      break label$3
     }
     if (($2_1 | 0) == -1) {
      break label$2
     }
     $5_1 = $1944($0_1, 360);
     $6_1 = $1944($0_1, 16);
     if ($1937($0_1, 120) & 1) {
      $7_1 = (Math_imul($2_1, 104) + $6_1 | 0) + 72 | 0
     } else {
      $7_1 = (Math_imul($2_1, 104) + $6_1 | 0) + ($1937($0_1, 452) ? 68 : 64) | 0
     }
     $3 = $1963($7_1, 0);
     $4_1 = $1963($5_1 + 232 | 0, 0);
     $1986($7_1, 0, $3 >= $4_1 ? $3 : $4_1);
     $3 = $1963($0_1, 104);
     $4_1 = Math_fround($1963($5_1 + 236 | 0, 0) + $1963($0_1, 168));
     $1986($0_1, 104, $3 >= $4_1 ? $3 : $4_1);
     $1986(Math_imul($2_1, 104) + $6_1 | 0, 60, $1963($5_1 + 384 | 0, 0));
     $3 = $1963($0_1, 112);
     $4_1 = $1963($5_1 + 268 | 0, 0);
     $1986($0_1, 112, $3 >= $4_1 ? $3 : $4_1);
     break label$2;
    }
    $517(0, Math_fround(0.0));
    $1_1 = 0;
   }
   $520($0_1, $1_1);
   $5_1 = $1960($0_1, 64);
   $2_1 = i64toi32_i32$HIGH_BITS;
   $0_1 = $1956($0_1, 92);
   $1_1 = $0_1 & 31;
   $1_1 = (($0_1 & 63) >>> 0 >= 32 ? $2_1 >>> $1_1 | 0 : ((1 << $1_1) - 1 & $2_1) << 32 - $1_1 | $5_1 >>> $1_1) & 1;
  }
  return $1_1;
 }
 
 function $528() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = Math_fround(0), $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = 0, $12_1 = 0;
  $8 = global$0 - 16 | 0;
  global$0 = $8;
  $9 = $1944($1944(0, 73568), 8036);
  if (!$1937($9, 441)) {
   $496($9)
  }
  $278($8 + 8 | 0);
  $10_1 = $1963($8, 12);
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $7_1 = $259();
  $3 = $1944($1944(0, 73568), 8036);
  if ($3) {
   $2_1 = $1944($3, 84)
  }
  if (($2_1 | 0) > 0) {
   $3 = $2_1;
   $2_1 = 0;
   while (1) {
    $1_1 = $1944($1944(0, 73568), 8036);
    $4_1 = 0;
    label$5 : {
     if (!$1_1) {
      break label$5
     }
     if (($1944($1_1, 84) | 0) == ($2_1 | 0)) {
      $4_1 = (($1936($1_1, 420) | 0) == ($2_1 | 0)) << 27;
      break label$5;
     }
     $4_1 = $1944($1944($1_1, 16) + Math_imul($2_1, 104) | 0, 0);
    }
    if (($4_1 & 16781312) == 16777216) {
     $12_1 = $6_1 + 8 | 0;
     $4_1 = 0;
     label$9 : {
      if (!$1_1) {
       break label$9
      }
      if (!$1937($1_1, 441)) {
       $4_1 = 19354;
       if (($1936($1_1, 419) | 0) <= ($2_1 | 0)) {
        break label$9
       }
      }
      $11_1 = $1939($1944($1_1, 16) + Math_imul($2_1, 104) | 0, 80);
      $4_1 = 19354;
      if (($11_1 | 0) == -1) {
       break label$9
      }
      $4_1 = $1944($1_1 + 372 | 0, 0) + $11_1 | 0;
     }
     $68($12_1, $4_1, 0, 0, Math_fround(-1.0));
     $5_1 = $1963($6_1, 12);
     $7_1 = $7_1 >= $5_1 ? $7_1 : $5_1;
    }
    $2_1 = $2_1 + 1 | 0;
    if (($2_1 | 0) != ($3 | 0)) {
     continue
    }
    break;
   };
  }
  $5_1 = $1963($50() + 96 | 0, 0);
  global$0 = $6_1 + 16 | 0;
  $7_1 = Math_fround(Math_fround($5_1 + $5_1) + $7_1);
  $517(1, $7_1);
  label$20 : {
   if ($1937($9, 455)) {
    break label$20
   }
   $2_1 = $1944($1944(0, 73568), 8036);
   if ($2_1) {
    $0_1 = $1944($2_1, 84)
   }
   $2_1 = $0_1;
   if (($0_1 | 0) > 0) {
    $0_1 = 0;
    while (1) {
     if ($519($0_1)) {
      $3 = $1944($1944(0, 73568), 8036);
      $1_1 = 0;
      label$7 : {
       if (!$3) {
        break label$7
       }
       if (($1944($3, 84) | 0) == ($0_1 | 0)) {
        $1_1 = (($1936($3, 420) | 0) == ($0_1 | 0)) << 27;
        break label$7;
       }
       $1_1 = $1944($1944($3, 16) + Math_imul($0_1, 104) | 0, 0);
      }
      $6_1 = $1_1 & 4096;
      $1_1 = $6_1 >>> 12 | 0 ? 19354 : 0;
      label$92 : {
       if ($6_1 | !$3) {
        break label$92
       }
       if (!$1937($3, 441)) {
        $1_1 = 19354;
        if (($1936($3, 419) | 0) <= ($0_1 | 0)) {
         break label$92
        }
       }
       $1_1 = $1939($1944($3, 16) + Math_imul($0_1, 104) | 0, 80);
       if (($1_1 | 0) == -1) {
        $1_1 = 19354;
        break label$92;
       }
       $1_1 = $1944($3 + 372 | 0, 0) + $1_1 | 0;
      }
      $266(Math_imul($1944($9, 84), $1939($9, 96)) + $0_1 | 0);
      $529($1_1);
      $269();
     }
     $0_1 = $0_1 + 1 | 0;
     if (($2_1 | 0) != ($0_1 | 0)) {
      continue
     }
     break;
    };
   }
   $182($8 + 8 | 0);
   if (!$177(1)) {
    break label$20
   }
   $0_1 = $1944($1944(0, 73568), 8036);
   if ($0_1) {
    $3 = $1936($0_1, 420)
   } else {
    $3 = -1
   }
   if (($3 | 0) != ($2_1 | 0)) {
    break label$20
   }
   $5_1 = $1963($8, 12);
   if (!($5_1 >= $10_1) | !(Math_fround($10_1 + $7_1) > $5_1)) {
    break label$20
   }
   if (!($1937($0_1, 4) & 7)) {
    break label$20
   }
   $1968($0_1, 446, 1);
   $1970($0_1, 98, $1941($0_1, 96));
   $2_1 = $1944($0_1, 92);
   $1968($0_1, 432, ($1944($0_1, 84) | 0) == ($2_1 | 0) ? -1 : $2_1);
   $318($23(1873, $1944($0_1, 0)), 0);
  }
  global$0 = $8 + 16 | 0;
 }
 
 function $529($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = 0, $14 = Math_fround(0), $15_1 = Math_fround(0), $16_1 = Math_fround(0), $17_1 = 0, $18_1 = 0, $19 = Math_fround(0), $20_1 = Math_fround(0), $21_1 = 0, $22_1 = Math_fround(0), $23_1 = 0, $24 = 0, $25_1 = Math_fround(0), $26_1 = Math_fround(0), $27_1 = 0;
  $2_1 = global$0 - 112 | 0;
  global$0 = $2_1;
  $8 = $1944(0, 73568);
  $17_1 = $1944($8, 7080);
  label$1 : {
   if ($1937($17_1, 143)) {
    break label$1
   }
   $1_1 = $1944($8, 8036);
   $7_1 = $1944($1_1, 16);
   $9 = $1944($1_1, 92);
   $18_1 = $0_1 ? $0_1 : 19354;
   $23_1 = $62($18_1);
   $68($2_1 + 104 | 0, $18_1, $23_1, 1, Math_fround(-1.0));
   $1983($2_1, 96, $1959($17_1, 208), i64toi32_i32$HIGH_BITS);
   $4_1 = Math_imul($9, 104);
   $0_1 = $1944($1_1, 16) + $4_1 | 0;
   $10_1 = $1963($0_1, 8);
   if (($1937($0_1, 84) | 0) == 255) {
    $11_1 = Math_fround($10_1 - $1963($1_1, 172))
   } else {
    $11_1 = $10_1
   }
   $14 = $11_1;
   $10_1 = $1963($0_1, 12);
   if (($1937($0_1, 85) | 0) == 255) {
    $10_1 = Math_fround($10_1 + $1963($1_1, 176))
   }
   $4_1 = $4_1 + $7_1 | 0;
   $15_1 = $1963($1_1, 104);
   $20_1 = $1963($1_1, 100);
   $11_1 = $1963($1_1, 108);
   $12_1 = $1963($1_1, 168);
   $19 = $1963($2_1, 108);
   $1973($2_1, 92, 0);
   $16_1 = Math_fround($11_1 - Math_fround($12_1 + $12_1));
   $0_1 = $16_1 <= $19;
   label$6 : {
    label$7 : {
     if (!($1937($1_1, 4) & 8)) {
      break label$7
     }
     if ($1937($4_1 + 1 | 0, 0) & 2) {
      break label$7
     }
     $12_1 = Math_fround(Math_fround($1963($8, 6468) * Math_fround(.6499999761581421)) + $1963($8 + 5476 | 0, 0));
     label$8 : {
      if (Math_fround(Math_abs($12_1)) < Math_fround(2147483648.0)) {
       $5_1 = ~~$12_1;
       break label$8;
      }
      $5_1 = -2147483648;
     }
     $12_1 = Math_fround($5_1 | 0);
     $3 = $1936($7_1 + Math_imul($9, 104) | 0, 86);
     if (($3 | 0) <= 0) {
      $11_1 = Math_fround(0.0)
     } else {
      $1973($2_1, 32, $3 + 1 | 0);
      $3 = $2_1 + 92 | 0;
      $21($3, 4, 13404, $2_1 + 32 | 0);
      $11_1 = $1963($8 + 5500 | 0, 0);
      $68($2_1 + 76 | 0, $3, 0, 0, Math_fround(-1.0));
      $11_1 = Math_fround($11_1 + $1963($2_1, 76));
     }
     break label$6;
    }
    $12_1 = Math_fround(0.0);
    $11_1 = Math_fround(0.0);
   }
   $19 = $0_1 ? $19 : $16_1;
   $22_1 = $1963($2_1, 104);
   $26_1 = $1963($2_1, 96);
   $0_1 = $7_1 + Math_imul($9, 104) | 0;
   $16_1 = $1963($0_1, 72);
   $25_1 = $1963($0_1, 56);
   $1986($0_1, 72, $16_1 >= $25_1 ? $16_1 : $25_1);
   $16_1 = $1963($0_1, 76);
   $22_1 = Math_fround($12_1 + Math_fround($11_1 + Math_fround($26_1 + $22_1)));
   $1986($0_1, 76, $16_1 >= $22_1 ? $16_1 : $22_1);
   $0_1 = 0;
   label$12 : {
    if (!$1937($1_1, 446)) {
     break label$12
    }
    $0_1 = 0;
    if (($1936($1_1, 432) | 0) != ($9 | 0)) {
     break label$12
    }
    $0_1 = ($1941($1_1, 98) | 0) == ($1941($1_1, 96) | 0);
   }
   $5_1 = $76($17_1, $18_1);
   $16_1 = $1963($8 + 5512 | 0, 0);
   $1986($2_1, 80, $20_1);
   $20_1 = Math_fround(Math_fround($16_1 + $16_1) + Math_fround($20_1 + $19));
   $1986($2_1 + 88 | 0, 0, $15_1 >= $20_1 ? $15_1 : $20_1);
   $1986($2_1, 84, $10_1);
   $1986($2_1, 76, $14);
   $1986($2_1, 72, $19);
   $1973($2_1, 68, 0);
   $212($2_1 + 68 | 0, Math_fround(-1.0));
   if (!$213($2_1 + 76 | 0, $5_1, 0, 0)) {
    break label$1
   }
   $27_1 = $569($2_1 + 76 | 0, $5_1, $2_1 + 67 | 0, $2_1 + 66 | 0, 4096);
   if (($1944($8, 7136) | 0) != ($5_1 | 0)) {
    $202()
   }
   $3 = $1937($2_1, 66);
   $6_1 = $1937($2_1, 67);
   label$15 : {
    if (($0_1 | (($3 | $6_1) & 255) != 0) == 1) {
     $13 = $51($3 & 255 ? 26 : $6_1 & 255 ? 25 : 24, Math_fround(1.0));
     $3 = $1944($1944(0, 73568), 8036);
     if ($1963($3, 100) > $1963($3 + 272 | 0, 0)) {
      break label$15
     }
     $0_1 = $1944($1_1, 92);
     if (($0_1 | 0) == -1) {
      $0_1 = $1944($3, 92)
     }
     $24 = $1960($3, 56);
     $21_1 = i64toi32_i32$HIGH_BITS;
     $6_1 = $0_1 & 31;
     if (!((($0_1 & 63) >>> 0 >= 32 ? $21_1 >>> $6_1 | 0 : ((1 << $6_1) - 1 & $21_1) << 32 - $6_1 | $24 >>> $6_1) & 1)) {
      break label$15
     }
     $13 = ($13 | 0) != 16777216 ? $13 : 0;
     $6_1 = $1936($3, 437);
     label$18 : {
      if (($6_1 | 0) >= 0) {
       if (($1936($1944($3, 32) + ($6_1 << 3) | 0, 4) | 0) == ($0_1 | 0)) {
        break label$18
       }
      }
      $1968($3, 437, $6_1 + 1 | 0);
     }
     $3 = $1944($3, 32) + ($1936($3, 437) << 3) | 0;
     $1968($3, 4, $0_1);
     $1973($3, 0, $13);
     break label$15;
    }
    if ($1937($1_1, 120) & 1) {
     break label$15
    }
    $13 = $51(42, Math_fround(1.0));
    $3 = $1944($1944(0, 73568), 8036);
    if ($1963($3, 100) > $1963($3 + 272 | 0, 0)) {
     break label$15
    }
    $0_1 = $1944($1_1, 92);
    if (($0_1 | 0) == -1) {
     $0_1 = $1944($3, 92)
    }
    $24 = $1960($3, 56);
    $21_1 = i64toi32_i32$HIGH_BITS;
    $6_1 = $0_1 & 31;
    if (!((($0_1 & 63) >>> 0 >= 32 ? $21_1 >>> $6_1 | 0 : ((1 << $6_1) - 1 & $21_1) << 32 - $6_1 | $24 >>> $6_1) & 1)) {
     break label$15
    }
    $13 = ($13 | 0) != 16777216 ? $13 : 0;
    $6_1 = $1936($3, 437);
    label$21 : {
     if (($6_1 | 0) >= 0) {
      if (($1936($1944($3, 32) + ($6_1 << 3) | 0, 4) | 0) == ($0_1 | 0)) {
       break label$21
      }
     }
     $1968($3, 437, $6_1 + 1 | 0);
    }
    $3 = $1944($3, 32) + ($1936($3, 437) << 3) | 0;
    $1968($3, 4, $0_1);
    $1973($3, 0, $13);
   }
   $73($2_1 + 76 | 0, $5_1, 10);
   label$23 : {
    if ($1937($2_1, 66)) {
     $1968($1_1, 425, $9);
     $0_1 = $17_1 + 212 | 0;
     $15_1 = $1963($0_1, 0);
     $1986($0_1, 0, Math_fround($15_1 + Math_fround($1963($8 + 5496 | 0, 0) * Math_fround(-.5))));
     if (!($1937($1_1, 4) & 2)) {
      break label$23
     }
     if (!$181(0, Math_fround(-1.0))) {
      break label$23
     }
     if ($1937($8, 7876)) {
      break label$23
     }
     $1968($1_1, 426, $9);
     $1970($1_1, 98, $1941($1_1, 96));
     $15_1 = $1963($8 + 880 | 0, 0);
     label$25 : {
      if (!($15_1 < Math_fround(0.0))) {
       break label$25
      }
      if (!($1963($8 + 228 | 0, 0) < $14)) {
       break label$25
      }
      $0_1 = $1936($7_1 + Math_imul($9, 104) | 0, 84);
      if (($0_1 | 0) == -1) {
       $0_1 = 0
      } else {
       $0_1 = $1944($1_1, 16) + Math_imul($0_1, 104) | 0
      }
      if (!$0_1) {
       break label$25
      }
      if (($1944($0_1, 0) | $1944($4_1, 0)) & 64) {
       break label$25
      }
      $5_1 = $1936($7_1 + Math_imul($9, 104) | 0, 83);
      $3 = $1936($1_1, 435);
      if ((($5_1 | 0) >= ($3 | 0) | 0) == (($1936($0_1, 83) | 0) < ($3 | 0) | 0)) {
       break label$25
      }
      $1968($1_1, 427, 255);
     }
     if (!($15_1 > Math_fround(0.0))) {
      break label$23
     }
     if (!($1963($8 + 228 | 0, 0) > $10_1)) {
      break label$23
     }
     $0_1 = $1936($7_1 + Math_imul($9, 104) | 0, 85);
     if (($0_1 | 0) == -1) {
      $0_1 = 0
     } else {
      $0_1 = $1944($1_1, 16) + Math_imul($0_1, 104) | 0
     }
     if (!$0_1) {
      break label$23
     }
     if (($1944($0_1, 0) | $1944($4_1, 0)) & 64) {
      break label$23
     }
     $5_1 = $1936($7_1 + Math_imul($9, 104) | 0, 83);
     $3 = $1936($1_1, 435);
     if ((($5_1 | 0) >= ($3 | 0) | 0) == (($1936($0_1, 83) | 0) < ($3 | 0) | 0)) {
      break label$23
     }
     $1968($1_1, 427, 1);
     break label$23;
    }
    $0_1 = $17_1 + 212 | 0;
    $15_1 = $1963($0_1, 0);
    $1986($0_1, 0, Math_fround($15_1 + Math_fround($1963($8 + 5496 | 0, 0) * Math_fround(-.5))));
   }
   $10_1 = Math_fround(Math_fround($10_1 - $12_1) - $11_1);
   label$30 : {
    if (!($1937($1_1, 4) & 8)) {
     break label$30
    }
    if ($1937($4_1 + 1 | 0, 0) & 2) {
     break label$30
    }
    $0_1 = $1936($7_1 + Math_imul($9, 104) | 0, 86);
    if (($0_1 | 0) != -1) {
     $14 = $10_1 <= $14 ? $14 : $10_1;
     $12_1 = $1963($2_1, 100);
     if (($0_1 | 0) > 0) {
      $55(0, $51(0, Math_fround(.699999988079071)));
      $15_1 = $1963($8 + 5500 | 0, 0);
      $1986($2_1, 60, $12_1);
      $1986($2_1, 56, Math_fround($14 + $15_1));
      $1983($2_1, 24, $1959($2_1, 56), i64toi32_i32$HIGH_BITS);
      $63($2_1 + 24 | 0, $2_1 + 92 | 0, 0, 1);
      $57(1);
      $14 = Math_fround($11_1 + $14);
     }
     $0_1 = $1944($17_1, 580);
     $1986($2_1, 52, $12_1);
     $1986($2_1, 48, $14);
     $3 = $51(0, Math_fround(1.0));
     $7_1 = $1937($7_1 + Math_imul($9, 104) | 0, 101);
     $1983($2_1, 16, $1959($2_1, 48), i64toi32_i32$HIGH_BITS);
     $476($0_1, $2_1 + 16 | 0, $3, ($7_1 & 3) == 1 ? 2 : 3, Math_fround(.6499999761581421));
    }
    if (!$27_1) {
     break label$30
    }
    if (($1936($1_1, 426) | 0) == ($9 | 0)) {
     break label$30
    }
    __inlined_func$525 : {
     if (($1937($4_1, 86) | 0) != 255) {
      $1_1 = $1937($4_1, 101);
      $7_1 = $1_1 & 3;
      $4_1 = $1937($4_1, 102);
      $0_1 = 0;
      while (1) {
       $5_1 = $4_1 >>> (($0_1 + 1 >>> 0) % (($1_1 >>> 2 & 3) >>> 0) << 1) & 3;
       if (($7_1 | 0) == ($4_1 >>> ($0_1 << 1) & 3)) {
        break __inlined_func$525
       }
       $0_1 = $0_1 + 1 | 0;
       if (($0_1 | 0) != 3) {
        continue
       }
       break;
      };
      $5_1 = 0;
      break __inlined_func$525;
     }
     $5_1 = $1937($4_1, 102) & 3;
    }
    $4_1 = 0;
    $1_1 = $1937($8 + 253 | 0, 0);
    $0_1 = $1944($1944(0, 73568), 8036);
    $3 = $1_1 & $1937($0_1 + 7 | 0, 0) >>> 2;
    $1_1 = 0;
    label$10 : {
     if (($3 | 0) != 1) {
      break label$10
     }
     $7_1 = $1944($0_1, 84);
     $1_1 = 1;
     if (($7_1 | 0) <= 0) {
      break label$10
     }
     $6_1 = $1944($0_1, 16);
     $1_1 = 0;
     while (1) {
      $4_1 = $4_1 << 24 >> 24;
      $13 = $1936(Math_imul($1_1, 104) + $6_1 | 0, 86);
      $4_1 = ($4_1 | 0) > ($13 | 0) ? $4_1 : $13;
      $1_1 = $1_1 + 1 | 0;
      if (($7_1 | 0) != ($1_1 | 0)) {
       continue
      }
      break;
     };
     $1_1 = $4_1 + 1 | 0;
    }
    $7_1 = $1944($0_1, 16) + Math_imul($9, 104) | 0;
    $5_1 = $5_1 & 3;
    $1968($7_1, 101, $5_1 | $1937($7_1, 101) & 252);
    $4_1 = $7_1 + 86 | 0;
    label$3 : {
     label$4 : {
      if (!$5_1) {
       $1_1 = 255;
       break label$4;
      }
      if (($1937($4_1, 0) | 0) != 255 & $3) {
       break label$3
      }
     }
     $1968($4_1, 0, $1_1);
    }
    if (($1944($0_1, 84) | 0) > 0) {
     $4_1 = 0;
     while (1) {
      $1_1 = $1944($0_1, 16) + Math_imul($4_1, 104) | 0;
      if (!(($1_1 | 0) == ($7_1 | 0) | $3)) {
       $1968($1_1, 86, 255)
      }
      label$9 : {
       if (($1937($1_1, 86) | 0) == 255) {
        break label$9
       }
       $5_1 = $1937($1_1, 101);
       if ($5_1 >>> 4 >>> ($5_1 & 3) & 1) {
        break label$9
       }
       $1968($1_1 + 101 | 0, 0, $1937($1_1, 102) & 3 | $5_1 & 252);
       $1968($0_1, 444, 1);
      }
      $4_1 = $4_1 + 1 | 0;
      if (($1944($0_1, 84) | 0) > ($4_1 | 0)) {
       continue
      }
      break;
     };
    }
    $1968($0_1, 444, 1);
    $1968($0_1, 448, 1);
   }
   $0_1 = $1944($17_1, 580);
   $14 = $1963($8 + 5480 | 0, 0);
   $1986($2_1, 68, $10_1);
   $1986($2_1, 72, Math_fround($14 + Math_fround($19 + $1963($2_1, 100))));
   $70($0_1, $2_1 + 96 | 0, $2_1 + 68 | 0, $10_1, $10_1, $18_1, $23_1, $2_1 + 104 | 0);
   label$34 : {
    if (!($1963($2_1, 104) > Math_fround($10_1 - $1963($2_1, 96)))) {
     break label$34
    }
    if (!($1937($2_1, 67) & 255)) {
     break label$34
    }
    if (!($1963($8, 7132) > $1963($8, 12080))) {
     break label$34
    }
    $1973($2_1, 4, $18_1);
    $1973($2_1, 0, $23_1 - $18_1 | 0);
    $162(5445, $2_1);
   }
   if (!$177(1)) {
    break label$1
   }
   if (!$89(0)) {
    break label$1
   }
   $0_1 = $1944($1944(0, 73568), 8036);
   if (($9 | 0) == -1) {
    $9 = $1944($0_1, 92)
   }
   if (!($1937($0_1, 4) & 7)) {
    break label$1
   }
   $1968($0_1, 446, 1);
   $1970($0_1, 98, $1941($0_1, 96));
   $1968($0_1, 432, ($1944($0_1, 84) | 0) == ($9 | 0) ? -1 : $9);
   $318($23(1873, $1944($0_1, 0)), 0);
  }
  global$0 = $2_1 + 112 | 0;
 }
 
 function $531($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = 0, $12_1 = 0, $13 = 0;
  $5_1 = global$0 - 144 | 0;
  global$0 = $5_1;
  $3 = $1944($0_1 + 12176 | 0, 0);
  if ($3) {
   $4_1 = $3 + 4 | 0;
   while (1) {
    $6_1 = $4_1;
    label$3 : {
     if (!$1944($4_1, 0)) {
      break label$3
     }
     $8 = $1944($6_1, 4);
     if (!($8 & 15)) {
      break label$3
     }
     $9 = $1944($2_1, 4);
     $4_1 = $1944($2_1, 0);
     $3 = $4_1 - 1 | 0;
     $7_1 = (($4_1 >>> 0 >= $3 >>> 0 ? $3 : 0) + Math_imul($1936($6_1, 12), 50) | 0) + 30 | 0;
     if (($9 | 0) < ($7_1 | 0)) {
      $4_1 = $16($7_1);
      $3 = $1944($2_1, 8);
      if ($3) {
       $1602($4_1, $3, $1944($2_1, 0));
       $17($1944($2_1, 8));
      }
      $1973($2_1, 4, $7_1);
      $1973($2_1, 8, $4_1);
     }
     $4_1 = $1944($1_1, 0);
     $3 = $1944($6_1, 0);
     $1973($5_1, 136, $1936($6_1, 12));
     $1973($5_1, 132, $3);
     $1973($5_1, 128, $4_1);
     $40($2_1, 19250, $5_1 + 128 | 0);
     $10_1 = $1963($6_1, 8);
     if ($10_1 != Math_fround(0.0)) {
      $1990($5_1, 112, +$10_1);
      $40($2_1, 19190, $5_1 + 112 | 0);
     }
     if (($1936($6_1, 12) | 0) > 0) {
      $11_1 = $8 & 8;
      $12_1 = $8 & 2;
      $13 = $8 & 4;
      $8 = $8 & 1;
      $9 = 0;
      $4_1 = $6_1 + 16 | 0;
      while (1) {
       $7_1 = $1944($4_1, 4) | $8 | $13 | $12_1;
       $3 = ($7_1 | 0) != 0;
       if (!(!!$7_1 | !$11_1)) {
        $3 = ($1937($4_1, 10) | 0) != 255
       }
       if ($3) {
        $1973($5_1, 96, $9);
        $40($2_1, 12896, $5_1 + 96 | 0);
        $3 = $1944($4_1, 4);
        if ($3) {
         $1973($5_1, 80, $3);
         $40($2_1, 14562, $5_1 + 80 | 0);
        }
        label$13 : {
         if (!$8) {
          break label$13
         }
         if ($1937($4_1, 11) & 8) {
          $1990($5_1, 64, +$1963($4_1, 0));
          $40($2_1, 9631, $5_1 - -64 | 0);
         }
         if ($1937($4_1, 11) & 8) {
          break label$13
         }
         $10_1 = $1963($4_1, 0);
         label$15 : {
          if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
           $3 = ~~$10_1;
           break label$15;
          }
          $3 = -2147483648;
         }
         $1973($5_1, 48, $3);
         $40($2_1, 12918, $5_1 + 48 | 0);
        }
        if ($13) {
         $1973($5_1, 32, $1937($4_1, 11) >>> 2 & 1);
         $40($2_1, 12928, $5_1 + 32 | 0);
        }
        if ($12_1) {
         $1973($5_1, 16, $1936($4_1, 9));
         $40($2_1, 12908, $5_1 + 16 | 0);
        }
        label$19 : {
         if (!$11_1) {
          break label$19
         }
         $7_1 = $1936($4_1, 10);
         if (($7_1 | 0) == -1) {
          break label$19
         }
         $3 = $1937($4_1, 11);
         $1973($5_1, 0, $7_1);
         $1973($5_1, 4, ($3 & 3) == 1 ? 118 : 94);
         $40($2_1, 13519, $5_1);
        }
        $39($2_1, 19353, 0);
       }
       $3 = $9 + 1 | 0;
       $9 = $3;
       $4_1 = $4_1 + 12 | 0;
       if (($1936($6_1, 12) | 0) > ($3 | 0)) {
        continue
       }
       break;
      };
     }
     $39($2_1, 19353, 0);
    }
    $3 = $1944($6_1 - 4 | 0, 0) + $6_1 | 0;
    $4_1 = $3;
    $3 = ($3 | 0) == (($1944($0_1, 12176) + $1944($0_1, 12168) | 0) + 4 | 0);
    $4_1 = $3 ? 0 : $4_1;
    if (!$3) {
     continue
    }
    break;
   };
  }
  global$0 = $5_1 + 144 | 0;
 }
 
 function $532($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $3 = $1944($0_1 + 8068 | 0, 0);
  if ($3) {
   $5_1 = $1944($0_1 + 8076 | 0, 0);
   $1_1 = 0;
   while (1) {
    $2_1 = $1944(($1_1 << 3) + $5_1 | 0, 4);
    label$3 : {
     if (($2_1 | 0) == -1) {
      break label$3
     }
     $4_1 = $1944($0_1, 8064);
     if (!$4_1) {
      break label$3
     }
     $2_1 = Math_imul($2_1, 456) + $4_1 | 0;
     $1973($2_1, 76, -1);
     $1968($2_1, 447, 1);
    }
    $1_1 = $1_1 + 1 | 0;
    if (($1_1 | 0) != ($3 | 0)) {
     continue
    }
    break;
   };
  }
 }
 
 function $533($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $0_1 = global$0 - 144 | 0;
  global$0 = $0_1;
  $1973($0_1, 140, 0);
  $1973($0_1, 136, 0);
  $1973($0_1, 132, 0);
  $1973($0_1, 128, 0);
  $1973($0_1, 112, $0_1 + 140 | 0);
  label$1 : {
   if (($1690($3, 10018, $0_1 + 112 | 0) | 0) == 1) {
    $1986($2_1, 8, $1963($0_1, 140));
    break label$1;
   }
   $1973($0_1, 100, $0_1 + 132 | 0);
   $1973($0_1, 96, $0_1 + 136 | 0);
   if (($1690($3, 7971, $0_1 + 96 | 0) | 0) != 1) {
    break label$1
   }
   $1_1 = $1944($0_1, 136);
   if (($1_1 | 0) < 0) {
    break label$1
   }
   if (($1936($2_1, 12) | 0) <= ($1_1 | 0)) {
    break label$1
   }
   $1_1 = $20($1944($0_1, 132) + $3 | 0);
   $1968($0_1, 127, 0);
   $5_1 = $2_1 + 16 | 0;
   $3 = $1944($0_1, 136);
   $4_1 = $5_1 + Math_imul($3, 12) | 0;
   $1968($4_1, 8, $3);
   $1973($0_1, 84, $0_1 + 132 | 0);
   $1973($0_1, 80, $0_1 + 128 | 0);
   if (($1690($1_1, 7995, $0_1 + 80 | 0) | 0) == 1) {
    $1_1 = $20($1944($0_1, 132) + $1_1 | 0);
    $1973($4_1, 4, $1944($0_1, 128));
   }
   $1973($0_1, 68, $0_1 + 132 | 0);
   $1973($0_1, 64, $0_1 + 128 | 0);
   if (($1690($1_1, 7947, $0_1 - -64 | 0) | 0) == 1) {
    $1_1 = $20($1944($0_1, 132) + $1_1 | 0);
    $1986($4_1, 0, Math_fround($1944($0_1, 128) | 0));
    $6_1 = $5_1 + Math_imul($3, 12) | 0;
    $1968($6_1, 11, $1937($6_1, 11) & 247);
    $1973($2_1, 4, $1944($2_1, 4) | 1);
   }
   $1973($0_1, 52, $0_1 + 132 | 0);
   $1973($0_1, 48, $0_1 + 140 | 0);
   if (($1690($1_1, 7924, $0_1 + 48 | 0) | 0) == 1) {
    $1_1 = $20($1944($0_1, 132) + $1_1 | 0);
    $1986($4_1, 0, $1963($0_1, 140));
    $4_1 = $5_1 + Math_imul($3, 12) | 0;
    $1968($4_1, 11, $1937($4_1, 11) | 8);
    $1973($2_1, 4, $1944($2_1, 4) | 1);
   }
   $1973($0_1, 36, $0_1 + 132 | 0);
   $1973($0_1, 32, $0_1 + 128 | 0);
   if (($1690($1_1, 7958, $0_1 + 32 | 0) | 0) == 1) {
    $1_1 = $20($1944($0_1, 132) + $1_1 | 0);
    $4_1 = $5_1 + Math_imul($3, 12) | 0;
    $1968($4_1, 11, $1937($0_1, 128) << 2 & 4 | $1937($4_1, 11) & 251);
    $1973($2_1, 4, $1944($2_1, 4) | 4);
   }
   $1973($0_1, 20, $0_1 + 132 | 0);
   $1973($0_1, 16, $0_1 + 128 | 0);
   if (($1690($1_1, 7936, $0_1 + 16 | 0) | 0) == 1) {
    $1_1 = $20($1944($0_1, 132) + $1_1 | 0);
    $1968($5_1 + Math_imul($3, 12) | 0, 9, $1944($0_1, 128));
    $1973($2_1, 4, $1944($2_1, 4) | 2);
   }
   $1973($0_1, 8, $0_1 + 132 | 0);
   $1973($0_1, 4, $0_1 + 127 | 0);
   $1973($0_1, 0, $0_1 + 128 | 0);
   if (($1690($1_1, 7983, $0_1) | 0) != 2) {
    break label$1
   }
   $20($1944($0_1, 132) + $1_1 | 0);
   $1_1 = $5_1 + Math_imul($3, 12) | 0;
   $1968($1_1, 10, $1944($0_1, 128));
   $1968($1_1, 11, $1937($1_1, 11) & 252 | (($1937($0_1, 127) | 0) == 94 ? 2 : 1));
   $1973($2_1, 4, $1944($2_1, 4) | 8);
  }
  global$0 = $0_1 + 144 | 0;
 }
 
 function $534($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 12, 0);
  $1973($3, 8, 0);
  $1973($3, 0, $3 + 12 | 0);
  $1973($3, 4, $3 + 8 | 0);
  $0_1 = 0;
  label$1 : {
   if (($1690($2_1, 12990, $3) | 0) < 2) {
    break label$1
   }
   $1_1 = $1944(0, 73568);
   $0_1 = $1944($1_1 + 12176 | 0, 0);
   $4_1 = $0_1 + 4 | 0;
   $2_1 = $0_1 ? $4_1 : 0;
   $6_1 = $1944($3, 12);
   label$2 : {
    if (!$0_1) {
     break label$2
    }
    while (1) {
     if (($1944($2_1, 0) | 0) == ($6_1 | 0)) {
      break label$2
     }
     $0_1 = $1944($2_1 - 4 | 0, 0) + $2_1 | 0;
     $5_1 = $1944($1_1, 12168) + $4_1 | 0;
     $2_1 = ($5_1 | 0) != ($0_1 | 0) ? $0_1 : 0;
     if (($0_1 | 0) != ($5_1 | 0)) {
      continue
     }
     break;
    };
   }
   $0_1 = $2_1;
   if ($0_1) {
    $5_1 = $1944($3, 8);
    $4_1 = $1936($0_1, 13);
    if (($5_1 | 0) <= ($4_1 | 0)) {
     $1982($0_1, 0, 0, 0);
     $1982($0_1 + 8 | 0, 0, 0, 0);
     if (($4_1 | 0) > 0) {
      $2_1 = 0;
      $1_1 = $0_1 + 16 | 0;
      while (1) {
       $1968($1_1, 10, 255);
       $1982($1_1, 0, 0, 0);
       $1970($1_1, 8, 65535);
       $1968($1_1, 11, $1937($1_1, 11) & 240 | 4);
       $1_1 = $1_1 + 12 | 0;
       $2_1 = $2_1 + 1 | 0;
       if (($4_1 | 0) != ($2_1 | 0)) {
        continue
       }
       break;
      };
     }
     $1968($0_1, 14, 1);
     $1968($0_1, 13, $4_1);
     $1968($0_1, 12, $5_1);
     $1973($0_1, 0, $6_1);
     break label$1;
    }
    $1973($0_1, 0, 0);
   }
   $0_1 = $508($1944($3, 12), $1944($3, 8));
  }
  $1_1 = $0_1;
  global$0 = $3 + 16 | 0;
  return $1_1 | 0;
 }
 
 function $535($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = $1944($0_1 + 8068 | 0, 0);
  if ($2_1) {
   $5_1 = $1944($0_1 + 8076 | 0, 0);
   $1_1 = 0;
   while (1) {
    $3 = $1944(($1_1 << 3) + $5_1 | 0, 4);
    label$3 : {
     if (($3 | 0) == -1) {
      break label$3
     }
     $4_1 = $1944($0_1, 8064);
     if (!$4_1) {
      break label$3
     }
     $1973(Math_imul($3, 456) + $4_1 | 0, 76, -1);
    }
    $1_1 = $1_1 + 1 | 0;
    if (($1_1 | 0) != ($2_1 | 0)) {
     continue
    }
    break;
   };
  }
  $1_1 = $1944($0_1 + 12176 | 0, 0);
  if ($1_1) {
   $1982($0_1, 12168, 0, 0);
   $17($1_1);
   $1973($0_1, 12176, 0);
  }
 }
 
 function $540($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = Math_fround(0);
  $1_1 = global$0 - 96 | 0;
  global$0 = $1_1;
  $2_1 = $1944($0_1, 0);
  $1973($1_1, 84, $1936($0_1, 12));
  $1973($1_1, 80, $2_1);
  if ($708($2_1, 17794, $1_1 + 80 | 0)) {
   $1973($1_1, 64, $1944($0_1, 4));
   $567(14455, $1_1 - -64 | 0);
   $2_1 = $1936($0_1, 12);
   $1973($1_1, 52, $1936($0_1, 13));
   $1973($1_1, 48, $2_1);
   $567(18544, $1_1 + 48 | 0);
   if (($1936($0_1, 12) | 0) > 0) {
    $7_1 = $0_1 + 16 | 0;
    $8 = $1_1 + 32 | 0;
    $9 = $1_1 + 24 | 0;
    $10_1 = $1_1 + 20 | 0;
    $2_1 = 0;
    while (1) {
     $4_1 = 0;
     $3 = Math_imul($2_1, 12) + $7_1 | 0;
     $5_1 = $1936($3, 10);
     if (($5_1 | 0) != -1) {
      $4_1 = $1937($3, 11) & 3
     }
     $11_1 = $1936($3, 9);
     $6_1 = $1937($3, 11);
     $12_1 = $1963($3, 0);
     $1973($8, 0, $1944($3, 4));
     $1990($9, 0, +$12_1);
     $1973($10_1, 0, $6_1 & 8 ? 3308 : 19097);
     $1973($1_1 + 16 | 0, 0, $6_1 >>> 2 & 1);
     $1973($1_1, 12, ($4_1 | 0) == 1 ? 13407 : ($4_1 | 0) == 2 ? 5288 : 17686);
     $1973($1_1, 8, $5_1);
     $1973($1_1, 4, $11_1);
     $1973($1_1, 0, $2_1);
     $567(14365, $1_1);
     $2_1 = $2_1 + 1 | 0;
     if (($1936($0_1, 12) | 0) > ($2_1 | 0)) {
      continue
     }
     break;
    };
   }
   $716();
  }
  global$0 = $1_1 + 96 | 0;
 }
 
 function $541() {
  var $0_1 = 0, $1_1 = 0;
  $0_1 = $1944($1944($1944(0, 73568), 7080) + 368 | 0, 0);
  if ($0_1) {
   $1_1 = $1944($0_1, 12)
  }
  return $1_1 | 0;
 }
 
 function $542() {
  var $0_1 = 0;
  $0_1 = $1944($1944($1944(0, 73568), 7080) + 368 | 0, 0);
  if (!$0_1) {
   return 1
  }
  return $1944($0_1, 16) | 0;
 }
 
 function $544($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = Math_fround(0), $3 = Math_fround(0);
  $1_1 = $1944($1944($1944(0, 73568), 7080) + 368 | 0, 0);
  if (!$1_1) {
   return Math_fround(Math_fround(0.0))
  }
  if (($0_1 | 0) < 0) {
   $0_1 = $1944($1_1, 12)
  }
  $3 = $1963($1_1, 24);
  $2_1 = $1963($1_1, 20);
  return Math_fround(Math_fround(Math_fround(Math_fround($3 - $2_1) * $1963($1944($1_1 + 100 | 0, 0) + Math_imul($0_1, 28) | 0, 0)) + $2_1));
 }
 
 function $545($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = Math_fround(0);
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = $1944($1944($1944(0, 73568), 7080) + 368 | 0, 0);
  label$1 : {
   if (!$1_1) {
    $208($2_1 + 8 | 0);
    $3 = $1963($2_1, 8);
    break label$1;
   }
   if (($0_1 | 0) < 0) {
    $0_1 = $1944($1_1, 12)
   }
   $0_1 = $1944($1_1 + 100 | 0, 0) + Math_imul($0_1, 28) | 0;
   $3 = Math_fround(Math_fround($1963($0_1 + 28 | 0, 0) - $1963($0_1, 0)) * Math_fround($1963($1_1, 24) - $1963($1_1, 20)));
  }
  global$0 = $2_1 + 16 | 0;
  return Math_fround($3);
 }
 
 function $546($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = Math_fround($1_1);
  var $2_1 = 0, $3 = 0, $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  while (1) {
   $4_1 = $1_1;
   $7_1 = $1944(0, 73568);
   $2_1 = $1944($1944($7_1, 7080) + 368 | 0, 0);
   if (($0_1 | 0) < 0) {
    $0_1 = $1944($2_1, 12)
   }
   $8 = 0;
   $1_1 = Math_fround(0.0);
   $9 = $1944($2_1, 4);
   if (!($9 & 4)) {
    $8 = ($1944($2_1, 16) - 1 | 0) > ($0_1 | 0)
   }
   if ($8) {
    $6_1 = $1937($2_1, 9);
    $3 = $0_1;
    if (($0_1 | 0) < 0) {
     $3 = $1944($2_1, 12)
    }
    $3 = $1944($2_1 + 100 | 0, 0) + Math_imul($3, 28) | 0;
    $6_1 = $6_1 & 255;
    $1_1 = Math_fround(Math_fround($1963($6_1 ? $3 + 32 | 0 : $3 + 28 | 0, 0) - $1963($6_1 ? $3 + 4 | 0 : $3, 0)) * Math_fround($1963($2_1, 24) - $1963($2_1, 20)));
   }
   if (!($9 & 8)) {
    $5_1 = Math_fround($1963($2_1, 24) - Math_fround($1963($7_1 + 5528 | 0, 0) * Math_fround($1944($2_1, 16) - $0_1 | 0)));
    $4_1 = $4_1 < $5_1 ? $4_1 : $5_1;
   }
   $3 = $1944($2_1 + 100 | 0, 0) + Math_imul($0_1, 28) | 0;
   $5_1 = $1963($2_1, 20);
   $1986($3, 0, Math_fround(Math_fround($4_1 - $5_1) / Math_fround($1963($2_1, 24) - $5_1)));
   if ($8) {
    $0_1 = $0_1 + 1 | 0;
    $5_1 = $4_1;
    $4_1 = $1963($7_1 + 5528 | 0, 0);
    $1_1 = Math_fround($5_1 + ($1_1 <= $4_1 ? $4_1 : $1_1));
    continue;
   }
   break;
  };
 }
 
 function $547($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = Math_fround($1_1);
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = Math_fround(0);
  $2_1 = $1944($1944(0, 73568), 7080);
  if (($0_1 | 0) < 0) {
   $0_1 = $1944($1944($2_1 + 368 | 0, 0), 12)
  }
  $4_1 = $0_1 + 1 | 0;
  $2_1 = $1944($2_1 + 368 | 0, 0);
  if ($2_1) {
   if (($0_1 | 0) < 0) {
    $0_1 = $1944($2_1, 12)
   }
   $5_1 = $1963($2_1, 24);
   $3 = $1963($2_1, 20);
   $3 = Math_fround(Math_fround(Math_fround($5_1 - $3) * $1963($1944($2_1 + 100 | 0, 0) + Math_imul($0_1, 28) | 0, 0)) + $3);
  } else {
   $3 = Math_fround(0.0)
  }
  $546($4_1, Math_fround($3 + $1_1));
 }
 
 function $548() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0);
  $2_1 = $1944($1944(0, 73568), 7080);
  $1_1 = $1944($2_1 + 368 | 0, 0);
  if (($1944($1_1, 16) | 0) != 1) {
   $1982($1_1, 60, $1959($2_1, 496), i64toi32_i32$HIGH_BITS);
   $0_1 = $2_1 + 504 | 0;
   $1982($1_1 + 68 | 0, 0, $1959($0_1, 0), i64toi32_i32$HIGH_BITS);
   $3 = $1963($1_1 + 56 | 0, 0);
   $4_1 = $1_1 + 52 | 0;
   $5_1 = $1963($4_1, 0);
   $6_1 = $1963($1_1 + 48 | 0, 0);
   $7_1 = $1963($1_1, 44);
   $1982($0_1, 0, $1959($4_1, 0), i64toi32_i32$HIGH_BITS);
   $1982($2_1, 496, $1959($1_1, 44), i64toi32_i32$HIGH_BITS);
   $0_1 = $1944($2_1, 580);
   $1986($0_1, 96, $7_1);
   $1986($0_1 + 100 | 0, 0, $6_1);
   $1986($0_1 + 104 | 0, 0, $5_1);
   $1986($0_1 + 108 | 0, 0, $3);
   $0_1 = $1944($2_1, 580);
   $0_1 = (($1944($0_1, 60) << 4) + $1944($0_1 + 68 | 0, 0) | 0) - 16 | 0;
   $1986($0_1, 12, $3);
   $1986($0_1, 8, $5_1);
   $1986($0_1, 4, $6_1);
   $1986($0_1, 0, $7_1);
   $422($1_1 + 104 | 0, $1944($2_1, 580), 0);
  }
 }
 
 function $549() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = Math_fround(0);
  $2_1 = $1944($1944(0, 73568), 7080);
  $1_1 = $1944($2_1 + 368 | 0, 0);
  if (($1944($1_1, 16) | 0) != 1) {
   $3 = $1963($1_1 + 72 | 0, 0);
   $0_1 = $1_1 + 68 | 0;
   $4_1 = $1963($0_1, 0);
   $5_1 = $1963($1_1 - -64 | 0, 0);
   $6_1 = $1963($1_1, 60);
   $1982($2_1 + 504 | 0, 0, $1959($0_1, 0), i64toi32_i32$HIGH_BITS);
   $1982($2_1, 496, $1959($1_1, 60), i64toi32_i32$HIGH_BITS);
   $0_1 = $1944($2_1, 580);
   $1986($0_1 + 100 | 0, 0, $5_1);
   $1986($0_1 + 104 | 0, 0, $4_1);
   $1986($0_1 + 108 | 0, 0, $3);
   $1986($0_1, 96, $6_1);
   $0_1 = $1944($2_1, 580);
   $0_1 = (($1944($0_1, 60) << 4) + $1944($0_1 + 68 | 0, 0) | 0) - 16 | 0;
   $1986($0_1, 12, $3);
   $1986($0_1, 8, $4_1);
   $1986($0_1, 4, $5_1);
   $1986($0_1, 0, $6_1);
   $422($1_1 + 104 | 0, $1944($2_1, 580), $1944($1_1, 12) + 1 | 0);
  }
 }
 
 function $552() {
  var $0_1 = 0, $1_1 = Math_fround(0), $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0);
  $3 = $1944(0, 73568);
  $2_1 = $1944($3, 7080);
  $1968($2_1, 140, 1);
  label$1 : {
   if ($1937($2_1, 143)) {
    break label$1
   }
   $4_1 = $1944($2_1 + 368 | 0, 0);
   if (!$4_1) {
    break label$1
   }
   $0_1 = $1944($4_1, 16);
   if (($0_1 | 0) == 1) {
    $1_1 = Math_fround(Math_fround($1963($2_1, 12) + $1963($2_1 + 272 | 0, 0)) + $1963($2_1 + 276 | 0, 0));
    label$3 : {
     if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$1_1;
      break label$3;
     }
     $0_1 = -2147483648;
    }
    $1986($2_1, 208, Math_fround($0_1 | 0));
    return;
   }
   $6_1 = $1944($4_1, 12) + 1 | 0;
   $1973($4_1, 12, ($0_1 | 0) != ($6_1 | 0) ? $6_1 : 0);
   $291();
   $0_1 = $1944($4_1 + 100 | 0, 0) + Math_imul($1944($4_1, 12), 28) | 0;
   $1_1 = $1963($0_1, 12);
   $5_1 = $1963($0_1 + 24 | 0, 0);
   $6_1 = $0_1 + 20 | 0;
   $7_1 = $1963($6_1, 0);
   $8 = $1963($0_1 + 16 | 0, 0);
   $1982($2_1 + 504 | 0, 0, $1959($6_1, 0), i64toi32_i32$HIGH_BITS);
   $1982($2_1, 496, $1959($0_1, 12), i64toi32_i32$HIGH_BITS);
   $0_1 = $1944($2_1, 580);
   $1986($0_1 + 100 | 0, 0, $8);
   $1986($0_1 + 104 | 0, 0, $7_1);
   $1986($0_1 + 108 | 0, 0, $5_1);
   $1986($0_1, 96, $1_1);
   $0_1 = $1944($2_1, 580);
   $0_1 = (($1944($0_1, 60) << 4) + $1944($0_1 + 68 | 0, 0) | 0) - 16 | 0;
   $1986($0_1, 12, $5_1);
   $1986($0_1, 8, $7_1);
   $1986($0_1, 4, $8);
   $1986($0_1, 0, $1_1);
   $422($4_1 + 104 | 0, $1944($2_1, 580), $1944($4_1, 12) + 1 | 0);
   $7_1 = $1963($3 + 5492 | 0, 0);
   $1_1 = $1963($4_1, 32);
   $5_1 = $1963($2_1 + 212 | 0, 0);
   $1_1 = $1_1 >= $5_1 ? $1_1 : $5_1;
   $1986($4_1, 32, $1_1);
   $0_1 = $1944($4_1, 12);
   label$5 : {
    if (($0_1 | 0) > 0) {
     $6_1 = $2_1 + 276 | 0;
     $3 = $1944($1944($1944(0, 73568), 7080) + 368 | 0, 0);
     if ($3) {
      if (($0_1 | 0) < 0) {
       $0_1 = $1944($3, 12)
      }
      $5_1 = $1963($3, 24);
      $1_1 = $1963($3, 20);
      $1_1 = Math_fround(Math_fround(Math_fround($5_1 - $1_1) * $1963($1944($3 + 100 | 0, 0) + Math_imul($0_1, 28) | 0, 0)) + $1_1);
     } else {
      $1_1 = Math_fround(0.0)
     }
     $1986($6_1, 0, Math_fround($7_1 + Math_fround($1_1 - $1963($2_1 + 272 | 0, 0))));
     break label$5;
    }
    $5_1 = Math_fround($7_1 - $1963($2_1, 60));
    $1986($2_1 + 276 | 0, 0, $5_1 >= Math_fround(0.0) ? $5_1 : Math_fround(0.0));
    $1986($4_1, 28, $1_1);
   }
   $1_1 = Math_fround(Math_fround($1963($2_1, 12) + $1963($2_1 + 272 | 0, 0)) + $1963($2_1 + 276 | 0, 0));
   label$10 : {
    if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
     $0_1 = ~~$1_1;
     break label$10;
    }
    $0_1 = -2147483648;
   }
   $1986($2_1, 208, Math_fround($0_1 | 0));
   $1986($2_1, 212, $1963($4_1, 28));
   $1973($2_1 + 264 | 0, 0, 0);
   $1982($2_1 + 248 | 0, 0, 0, 0);
   $0_1 = $1944($4_1, 12);
   $1_1 = Math_fround(0.0);
   $3 = $1944($1944($1944(0, 73568), 7080) + 368 | 0, 0);
   if ($3) {
    $4_1 = $0_1;
    if (($0_1 | 0) < 0) {
     $4_1 = $1944($3, 12)
    }
    $5_1 = $1963($3, 24);
    $1_1 = $1963($3, 20);
    $1_1 = Math_fround(Math_fround(Math_fround($5_1 - $1_1) * $1963($1944($3 + 100 | 0, 0) + Math_imul($4_1, 28) | 0, 0)) + $1_1);
   }
   $5_1 = $1_1;
   $1_1 = Math_fround(0.0);
   if ($3) {
    if (($0_1 | 0) > -2) {
     $0_1 = $0_1 + 1 | 0
    } else {
     $0_1 = $1944($3, 12)
    }
    $8 = $1963($3, 24);
    $1_1 = $1963($3, 20);
    $1_1 = Math_fround(Math_fround(Math_fround($8 - $1_1) * $1963($1944($3 + 100 | 0, 0) + Math_imul($0_1, 28) | 0, 0)) + $1_1);
   }
   $289(Math_fround(Math_fround($1_1 - $5_1) * Math_fround(.6499999761581421)));
   $1986($2_1 + 472 | 0, 0, Math_fround(Math_fround($1_1 + $1963($2_1, 12)) - $7_1));
  }
 }
 
 function $553() {
  var $0_1 = Math_fround(0), $1_1 = 0, $2_1 = Math_fround(0), $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = Math_fround(0), $10_1 = 0, $11_1 = 0, $12_1 = Math_fround(0), $13 = 0, $14 = Math_fround(0), $15_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $5_1 = global$0 - 48 | 0;
  global$0 = $5_1;
  $10_1 = $1944(0, 73568);
  $7_1 = $1944($10_1, 7080);
  $1968($7_1, 140, 1);
  $8 = $1944($7_1 + 368 | 0, 0);
  $291();
  if (($1944($8, 16) | 0) >= 2) {
   $159();
   $421($8 + 104 | 0, $1944($7_1, 580));
  }
  $0_1 = $1963($8, 32);
  $1_1 = $7_1 + 212 | 0;
  $2_1 = $1963($1_1, 0);
  $0_1 = $0_1 >= $2_1 ? $0_1 : $2_1;
  $1986($8, 32, $0_1);
  $6_1 = $1944($8, 4);
  $1986($1_1, 0, $0_1);
  if (!($6_1 & 16)) {
   $1986($7_1 + 232 | 0, 0, $1963($8, 40))
  }
  $1_1 = 0;
  label$3 : {
   if ($6_1 & 1) {
    break label$3
   }
   if ($1937($7_1, 143)) {
    break label$3
   }
   $3 = -1;
   $1_1 = $1944($8, 16);
   $4_1 = $1_1;
   if (($4_1 | 0) >= 2) {
    $2_1 = $1963($7_1 + 508 | 0, 0);
    $2_1 = $0_1 < $2_1 ? $0_1 : $2_1;
    $0_1 = $1963($8, 36);
    $9 = $1963($7_1 + 500 | 0, 0);
    $9 = $0_1 >= $9 ? $0_1 : $9;
    $12_1 = Math_fround($9 + Math_fround(1.0));
    $13 = $6_1 & 2;
    $1_1 = -1;
    $6_1 = 1;
    while (1) {
     $14 = $1963($7_1, 12);
     $3 = $1944($1944($1944(0, 73568), 7080) + 368 | 0, 0);
     if ($3) {
      $15_1 = $1963($3, 24);
      $0_1 = $1963($3, 20);
      $0_1 = Math_fround(Math_fround(Math_fround($15_1 - $0_1) * $1963($1944($3 + 100 | 0, 0) + Math_imul($6_1, 28) | 0, 0)) + $0_1);
     } else {
      $0_1 = Math_fround(0.0)
     }
     $4_1 = $1944($8, 100);
     $3 = $1944($8, 0);
     $1986($5_1, 44, $2_1);
     $0_1 = Math_fround($14 + $0_1);
     $1986($5_1, 40, Math_fround($0_1 + Math_fround(4.0)));
     $1986($5_1, 36, $9);
     $1986($5_1, 32, Math_fround($0_1 + Math_fround(-4.0)));
     $3 = $3 + $6_1 | 0;
     $79($3);
     if (!$95($5_1 + 32 | 0, $3)) {
      $1968($5_1, 31, 0);
      $1968($5_1, 30, 0);
      label$10 : {
       if ($13) {
        break label$10
       }
       $569($5_1 + 32 | 0, $3, $5_1 + 31 | 0, $5_1 + 30 | 0, 0);
       $11_1 = $1937($5_1, 31);
       $3 = $1937($5_1, 30);
       if (($11_1 | $3) & 255) {
        $1973($10_1, 7872, 4)
       }
       if (!($3 & 255)) {
        break label$10
       }
       $1_1 = $1937($4_1 + Math_imul($6_1, 28) | 0, 8) & 2 ? $1_1 : $6_1;
      }
      $4_1 = $51((wasm2js_i32$0 = 29, wasm2js_i32$1 = $1937($5_1, 31) ? 28 : 27, wasm2js_i32$2 = $1937($5_1, 30), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), Math_fround(1.0));
      $3 = $1944($7_1, 580);
      $1986($5_1, 24, $12_1);
      if (Math_fround(Math_abs($0_1)) < Math_fround(2147483648.0)) {
       $11_1 = ~~$0_1
      } else {
       $11_1 = -2147483648
      }
      $0_1 = Math_fround($11_1 | 0);
      $1986($5_1, 20, $0_1);
      $1986($5_1, 16, $2_1);
      $1986($5_1, 12, $0_1);
      $399($3, $5_1 + 20 | 0, $5_1 + 12 | 0, $4_1, Math_fround(1.0));
     }
     $3 = $1_1;
     $6_1 = $6_1 + 1 | 0;
     $4_1 = $1944($8, 16);
     if (($6_1 | 0) < ($4_1 | 0)) {
      continue
     }
     break;
    };
   }
   $1_1 = ($3 | 0) != -1;
   if (!$1_1) {
    break label$3
   }
   if (!($1937($8, 9) | ($4_1 | 0) < 0)) {
    $10_1 = $1944($8 + 100 | 0, 0);
    $1_1 = 0;
    while (1) {
     $6_1 = $10_1 + Math_imul($1_1, 28) | 0;
     $1986($6_1, 4, $1963($6_1, 0));
     $6_1 = $1_1;
     $1_1 = $1_1 + 1 | 0;
     if (($4_1 | 0) != ($6_1 | 0)) {
      continue
     }
     break;
    };
   }
   $1968($8, 9, 1);
   $1_1 = $1944(0, 73568);
   $0_1 = Math_fround(Math_fround($1963($1_1 + 228 | 0, 0) - $1963($1_1, 7176)) + Math_fround(4.0));
   $4_1 = $1944($1_1, 7080);
   $0_1 = Math_fround($0_1 - $1963($4_1, 12));
   $4_1 = $1944($4_1 + 368 | 0, 0);
   if ($4_1) {
    if (($3 | 0) > 0) {
     $6_1 = $3 - 1 | 0
    } else {
     $6_1 = $1944($4_1, 12)
    }
    $9 = $1963($4_1, 24);
    $2_1 = $1963($4_1, 20);
    $2_1 = Math_fround(Math_fround(Math_fround($9 - $2_1) * $1963($1944($4_1 + 100 | 0, 0) + Math_imul($6_1, 28) | 0, 0)) + $2_1);
   } else {
    $2_1 = Math_fround(0.0)
   }
   $9 = $1963($1_1 + 5528 | 0, 0);
   $2_1 = Math_fround($2_1 + $9);
   $0_1 = $0_1 >= $2_1 ? $0_1 : $2_1;
   if ($1937($8, 4) & 4) {
    if ($4_1) {
     if (($3 | 0) > -2) {
      $1_1 = $3 + 1 | 0
     } else {
      $1_1 = $1944($4_1, 12)
     }
     $12_1 = $1963($4_1, 24);
     $2_1 = $1963($4_1, 20);
     $2_1 = Math_fround(Math_fround(Math_fround($12_1 - $2_1) * $1963($1944($4_1 + 100 | 0, 0) + Math_imul($1_1, 28) | 0, 0)) + $2_1);
    } else {
     $2_1 = Math_fround(0.0)
    }
    $2_1 = Math_fround($2_1 - $9);
    $0_1 = $0_1 < $2_1 ? $0_1 : $2_1;
   }
   $546($3, $0_1);
   $1_1 = 1;
  }
  $1968($8, 9, $1_1);
  $1_1 = $7_1 + 488 | 0;
  $1982($7_1 + 472 | 0, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($7_1, 464, $1959($7_1, 480), i64toi32_i32$HIGH_BITS);
  $3 = $1959($8 + 84 | 0, 0);
  $4_1 = i64toi32_i32$HIGH_BITS;
  $6_1 = $1959($8, 76);
  $8 = i64toi32_i32$HIGH_BITS;
  $1973($7_1, 368, 0);
  $1973($7_1 + 276 | 0, 0, 0);
  $1982($7_1, 480, $6_1, $8);
  $1982($1_1, 0, $3, $4_1);
  $0_1 = Math_fround(Math_fround($1963($7_1, 12) + $1963($7_1 + 272 | 0, 0)) + Math_fround(0.0));
  label$28 : {
   if (Math_fround(Math_abs($0_1)) < Math_fround(2147483648.0)) {
    $1_1 = ~~$0_1;
    break label$28;
   }
   $1_1 = -2147483648;
  }
  $1986($7_1, 208, Math_fround($1_1 | 0));
  global$0 = $5_1 + 48 | 0;
 }
 
 function $555($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = Math_fround(0), $5_1 = 0, $6_1 = Math_fround(0), $7_1 = 0, $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0);
  $3 = global$0 + -64 | 0;
  global$0 = $3;
  $7_1 = $1944(0, 73568);
  $8 = $1944($7_1, 7080);
  $1968($8, 140, 1);
  label$1 : {
   if ($1937($8, 143)) {
    break label$1
   }
   $5_1 = ($0_1 | 0) == ($1_1 | 0);
   $0_1 = $5_1 ? 19354 : $0_1;
   $1_1 = $5_1 ? 19354 : $1_1;
   if (!$1_1) {
    $1_1 = $1697($0_1) + $0_1 | 0
   }
   $10_1 = Math_fround($1963($8 + 212 | 0, 0) + $1963($8 + 264 | 0, 0));
   $4_1 = $1963($8 + 388 | 0, 0);
   $11_1 = $1963($8, 208);
   label$3 : {
    label$4 : {
     if (!(($1_1 - $0_1 | 0) < 2001 | $4_1 >= Math_fround(0.0))) {
      $12_1 = $259();
      $1982($3, 56, 0, 0);
      if ($1937($7_1, 12196)) {
       break label$4
      }
      $6_1 = Math_fround(Math_fround($1963($8 + 500 | 0, 0) - $10_1) / $12_1);
      label$6 : {
       if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
        $7_1 = ~~$6_1;
        break label$6;
       }
       $7_1 = -2147483648;
      }
      if (($7_1 | 0) <= 0) {
       break label$4
      }
      if ($0_1 >>> 0 >= $1_1 >>> 0) {
       $6_1 = Math_fround(0.0)
      } else {
       $9 = $2_1 & 1;
       $5_1 = 0;
       while (1) {
        $8 = $1644($0_1, 10, $1_1 - $0_1 | 0);
        $8 = $8 ? $8 : $1_1;
        if (!$9) {
         $4_1 = $1963($3, 56);
         $68($3 + 40 | 0, $0_1, $8, 0, Math_fround(-1.0));
         $6_1 = $1963($3, 40);
         $1986($3, 56, $4_1 >= $6_1 ? $4_1 : $6_1);
        }
        $5_1 = $5_1 + 1 | 0;
        $0_1 = $8 + 1 | 0;
        if (($7_1 | 0) > ($5_1 | 0) & $1_1 >>> 0 > $0_1 >>> 0) {
         continue
        }
        break;
       };
       $6_1 = Math_fround($5_1 | 0);
      }
      $6_1 = Math_fround(Math_fround($6_1 * $12_1) + $10_1);
      break label$3;
     }
     if ($4_1 >= Math_fround(0.0)) {
      if ($4_1 < Math_fround(0.0)) {
       $6_1 = Math_fround(0.0)
      } else {
       $2_1 = $8 + 208 | 0;
       $5_1 = $1944($1944(0, 73568), 7080);
       label$2 : {
        if ($4_1 == Math_fround(0.0)) {
         $4_1 = $1963($5_1 + 472 | 0, 0);
         break label$2;
        }
        if (!($4_1 > Math_fround(0.0))) {
         break label$2
        }
        $4_1 = Math_fround(Math_fround($1963($5_1, 12) - $1963($5_1, 88)) + $4_1);
       }
       $6_1 = Math_fround($4_1 - $1963($2_1, 0));
       $6_1 = $6_1 >= Math_fround(1.0) ? $6_1 : Math_fround(1.0);
      }
     }
     $2_1 = $3 + 56 | 0;
     $68($2_1, $0_1, $1_1, 0, $6_1);
     $1986($3, 44, $10_1);
     $1986($3 + 52 | 0, 0, Math_fround($10_1 + $1963($3, 60)));
     $1986($3, 40, $11_1);
     $1986($3, 48, Math_fround($11_1 + $1963($3, 56)));
     $212($2_1, Math_fround(0.0));
     if (!$213($3 + 40 | 0, 0, 0, 0)) {
      break label$1
     }
     $5_1 = $1960($3, 40);
     $2_1 = i64toi32_i32$HIGH_BITS;
     $1983($3, 16, $5_1, $2_1);
     $1983($3, 0, $5_1, $2_1);
     $2_1 = $3;
     $9 = $1944(0, 73568);
     $8 = $1944($9, 7080);
     if (!$1_1) {
      $1_1 = $1697($0_1) + $0_1 | 0
     }
     label$20 : {
      if (($0_1 | 0) == ($1_1 | 0)) {
       break label$20
      }
      $4_1 = $1963($9 + 5620 | 0, 0);
      $4_1 = Math_fround(Math_fround(($4_1 < Math_fround(0.0) ? Math_fround(0.0) : $4_1 > Math_fround(1.0) ? Math_fround(1.0) : $4_1) * Math_fround(255.0)) + Math_fround(.5));
      label$31 : {
       if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
        $5_1 = ~~$4_1;
        break label$31;
       }
       $5_1 = -2147483648;
      }
      $5_1 = $5_1 << 8;
      $4_1 = $1963($9 + 5616 | 0, 0);
      $4_1 = Math_fround(Math_fround(($4_1 < Math_fround(0.0) ? Math_fround(0.0) : $4_1 > Math_fround(1.0) ? Math_fround(1.0) : $4_1) * Math_fround(255.0)) + Math_fround(.5));
      label$5 : {
       if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
        $7_1 = ~~$4_1;
        break label$5;
       }
       $7_1 = -2147483648;
      }
      $5_1 = $7_1 | $5_1;
      $4_1 = $1963($9 + 5624 | 0, 0);
      $4_1 = Math_fround(Math_fround(($4_1 < Math_fround(0.0) ? Math_fround(0.0) : $4_1 > Math_fround(1.0) ? Math_fround(1.0) : $4_1) * Math_fround(255.0)) + Math_fround(.5));
      label$7 : {
       if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
        $7_1 = ~~$4_1;
        break label$7;
       }
       $7_1 = -2147483648;
      }
      $7_1 = $5_1 | $7_1 << 16;
      $4_1 = Math_fround($1963($9 + 5628 | 0, 0) * $1963($9, 5416));
      $4_1 = Math_fround(Math_fround(($4_1 < Math_fround(0.0) ? Math_fround(0.0) : $4_1 > Math_fround(1.0) ? Math_fround(1.0) : $4_1) * Math_fround(255.0)) + Math_fround(.5));
      label$9 : {
       if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
        $5_1 = ~~$4_1;
        break label$9;
       }
       $5_1 = -2147483648;
      }
      $413($1944($8, 580), $1944($9, 6464), $1963($9, 6468), $2_1, $7_1 | $5_1 << 24, $0_1, $1_1, $6_1, 0);
      if (!$1937($9, 12196)) {
       break label$20
      }
      $64($2_1, $0_1, $1_1);
     }
     break label$1;
    }
    $6_1 = $10_1;
   }
   if ($1_1 >>> 0 > $0_1 >>> 0) {
    $1986($3, 44, $6_1);
    $1986($3 + 52 | 0, 0, Math_fround($12_1 + $6_1));
    $1986($3, 40, $11_1);
    $1986($3, 48, Math_fround($11_1 + Math_fround(3402823466385288598117041.0e14)));
    while (1) {
     label$16 : {
      if ($95($3 + 40 | 0, 0)) {
       $5_1 = $0_1;
       break label$16;
      }
      $13 = $1963($3, 56);
      $5_1 = $1644($0_1, 10, $1_1 - $0_1 | 0);
      $5_1 = $5_1 ? $5_1 : $1_1;
      $68($3 + 32 | 0, $0_1, $5_1, 0, Math_fround(-1.0));
      $1986($3, 24, $11_1);
      $4_1 = $1963($3, 32);
      $1986($3, 56, $4_1 <= $13 ? $13 : $4_1);
      $1986($3, 28, $6_1);
      $1983($3, 8, $1960($3, 24), i64toi32_i32$HIGH_BITS);
      $63($3 + 8 | 0, $0_1, $5_1, 0);
      $1986($3, 44, Math_fround($12_1 + $1963($3, 44)));
      $1986($3, 52, Math_fround($12_1 + $1963($3, 52)));
      $5_1 = $5_1 + 1 | 0;
      $0_1 = $5_1;
      $6_1 = Math_fround($12_1 + $6_1);
      if ($1_1 >>> 0 > $0_1 >>> 0) {
       continue
      }
     }
     break;
    };
    $0_1 = $5_1;
    if ($0_1 >>> 0 < $1_1 >>> 0) {
     $7_1 = $2_1 & 1;
     $5_1 = 0;
     while (1) {
      $2_1 = $1644($0_1, 10, $1_1 - $0_1 | 0);
      $2_1 = $2_1 ? $2_1 : $1_1;
      if (!$7_1) {
       $13 = $1963($3, 56);
       $68($3 + 32 | 0, $0_1, $2_1, 0, Math_fround(-1.0));
       $4_1 = $1963($3, 32);
       $1986($3, 56, $4_1 <= $13 ? $13 : $4_1);
      }
      $5_1 = $5_1 + 1 | 0;
      $0_1 = $2_1 + 1 | 0;
      if ($1_1 >>> 0 > $0_1 >>> 0) {
       continue
      }
      break;
     };
     $4_1 = Math_fround($5_1 | 0);
    } else {
     $4_1 = Math_fround(0.0)
    }
    $6_1 = Math_fround(Math_fround($4_1 * $12_1) + $6_1);
   }
   $6_1 = Math_fround($6_1 - $10_1);
   $1986($3, 60, $6_1);
   $1986($3 + 52 | 0, 0, Math_fround($10_1 + $6_1));
   $1986($3, 44, $10_1);
   $1986($3, 40, $11_1);
   $1986($3, 48, Math_fround($11_1 + $1963($3, 56)));
   $212($3 + 56 | 0, Math_fround(0.0));
   $213($3 + 40 | 0, 0, 0, 0);
  }
  global$0 = $3 - -64 | 0;
 }
 
 function $556($0_1) {
  $555($0_1, 0, 1);
 }
 
 function $557($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 12, $1_1);
  $2_1 = $1944(0, 73568);
  $4_1 = $1944($2_1, 7080);
  $1968($4_1, 140, 1);
  if (!$1937($4_1, 143)) {
   $2_1 = $2_1 + 12800 | 0;
   $555($2_1, $22($2_1, $0_1, $1_1) + $2_1 | 0, 1);
  }
  global$0 = $3 + 16 | 0;
 }
 
 function $559($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 12, $2_1);
  $56(0, $0_1);
  label$1 : {
   label$2 : {
    if (($1937($1_1, 0) | 0) != 37) {
     break label$2
    }
    if (($1937($1_1, 1) | 0) != 115) {
     break label$2
    }
    if ($1937($1_1, 2)) {
     break label$2
    }
    $555($1944($2_1, 0), 0, 1);
    break label$1;
   }
   $0_1 = $1944(0, 73568);
   $4_1 = $1944($0_1, 7080);
   $1968($4_1, 140, 1);
   if ($1937($4_1, 143)) {
    break label$1
   }
   $0_1 = $0_1 + 12800 | 0;
   $555($0_1, $22($0_1, $1_1, $2_1) + $0_1 | 0, 1);
  }
  $57(1);
  global$0 = $3 + 16 | 0;
 }
 
 function $561($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 12, $1_1);
  $56(0, $1944(0, 73568) + 5632 | 0);
  label$1 : {
   label$2 : {
    if (($1937($0_1, 0) | 0) != 37) {
     break label$2
    }
    if (($1937($0_1, 1) | 0) != 115) {
     break label$2
    }
    if ($1937($0_1, 2)) {
     break label$2
    }
    $555($1944($1_1, 0), 0, 1);
    break label$1;
   }
   $2_1 = $1944(0, 73568);
   $4_1 = $1944($2_1, 7080);
   $1968($4_1, 140, 1);
   if ($1937($4_1, 143)) {
    break label$1
   }
   $2_1 = $2_1 + 12800 | 0;
   $555($2_1, $22($2_1, $0_1, $1_1) + $2_1 | 0, 1);
  }
  $57(1);
  global$0 = $3 + 16 | 0;
 }
 
 function $567($0_1, $1_1) {
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = 0, $8 = 0, $9 = Math_fround(0), $10_1 = 0;
  $8 = global$0 - 16 | 0;
  global$0 = $8;
  $1973($8, 12, $1_1);
  $2_1 = global$0 + -64 | 0;
  global$0 = $2_1;
  $6_1 = $1944(0, 73568);
  $4_1 = $1944($6_1, 7080);
  $1968($4_1, 140, 1);
  label$1 : {
   if ($1937($4_1, 143)) {
    break label$1
   }
   $7_1 = $6_1 + 12800 | 0;
   $0_1 = $7_1 + $22($7_1, $0_1, $1_1) | 0;
   $68($2_1 + 56 | 0, $7_1, $0_1, 0, Math_fround(-1.0));
   $5_1 = $1963($6_1, 6468);
   $9 = $1963($2_1, 56);
   if ($9 > Math_fround(0.0)) {
    $3 = $1963($6_1 + 5476 | 0, 0);
    $3 = Math_fround(Math_fround($3 + $3) + $9);
   }
   $1986($2_1, 52, $1963($2_1, 60));
   $1986($2_1, 48, Math_fround($5_1 + $3));
   $3 = $1963($4_1 + 212 | 0, 0);
   $5_1 = $1963($4_1 + 264 | 0, 0);
   $1_1 = $1944($4_1, 208);
   $212($2_1 + 48 | 0, Math_fround(0.0));
   $3 = Math_fround($3 + $5_1);
   $1986($2_1, 36, $3);
   $1986($2_1 + 44 | 0, 0, Math_fround($3 + $1963($2_1, 52)));
   $1973($2_1, 32, $1_1);
   $1986($2_1, 40, Math_fround($1963($2_1, 48) + (wasm2js_scratch_store_i32(2, $1_1), wasm2js_scratch_load_f32())));
   if (!$213($2_1 + 32 | 0, 0, 0, 0)) {
    break label$1
   }
   $1_1 = $51(0, Math_fround(1.0));
   $10_1 = $6_1 + 5476 | 0;
   $3 = $1963($10_1, 0);
   $4_1 = $1944($4_1, 580);
   $5_1 = Math_fround($1963($6_1, 6468) * Math_fround(.5));
   $1986($2_1, 28, Math_fround($5_1 + $1963($2_1, 36)));
   $1986($2_1, 24, Math_fround(Math_fround($5_1 + $3) + $1963($2_1, 32)));
   $1983($2_1, 8, $1959($2_1, 24), i64toi32_i32$HIGH_BITS);
   $477($4_1, $2_1 + 8 | 0, $1_1);
   $3 = $1963($10_1, 0);
   $5_1 = $1963($6_1, 6468);
   $1986($2_1, 20, Math_fround($1963($2_1, 36) + Math_fround(0.0)));
   $1986($2_1, 16, Math_fround(Math_fround($5_1 + Math_fround($3 + $3)) + $1963($2_1, 32)));
   $1983($2_1, 0, $1959($2_1, 16), i64toi32_i32$HIGH_BITS);
   $63($2_1, $7_1, $0_1, 0);
  }
  global$0 = $2_1 - -64 | 0;
  global$0 = $8 + 16 | 0;
 }
 
 function $569($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = Math_fround(0), $13 = 0, $14 = 0;
  $5_1 = $1944(0, 73568);
  $10_1 = $1944($5_1, 7080);
  $1968($10_1, 140, 1);
  $8 = $1944($5_1, 7084);
  $6_1 = !($4_1 & 7) | $4_1;
  $7_1 = $4_1 & 1008 ? $6_1 : $6_1 | 32;
  $4_1 = 0;
  label$1 : {
   if (!($7_1 & 2048)) {
    break label$1
   }
   $4_1 = 0;
   if (!$8) {
    break label$1
   }
   $4_1 = ($1944($8, 736) | 0) == ($10_1 | 0);
  }
  $9 = $4_1;
  if ($4_1) {
   $1973($5_1, 7084, $10_1)
  }
  $4_1 = $91($0_1, $1_1);
  label$4 : {
   if (!$4_1) {
    break label$4
   }
   if (!$1937($5_1, 7876)) {
    break label$4
   }
   if (($1944($5_1 + 7900 | 0, 0) | 0) != ($1_1 | 0)) {
    break label$4
   }
   $4_1 = ($1937($5_1, 7880) & 2) >>> 1 & $4_1;
  }
  label$8 : {
   label$9 : {
    if (!$1937($5_1, 7876) | !($7_1 & 512)) {
     break label$9
    }
    if ($1937($5_1, 7880) & 4) {
     break label$9
    }
    if (!$89(128)) {
     break label$9
    }
    $87($1_1);
    $12_1 = $1963($5_1, 7128);
    if (!($12_1 >= Math_fround(.699999988079071))) {
     $4_1 = 1;
     $6_1 = 0;
     break label$8;
    }
    $4_1 = 1;
    $6_1 = 0;
    if (!(Math_fround($12_1 - $1963($5_1 + 24 | 0, 0)) <= Math_fround(.699999988079071))) {
     break label$8
    }
    $1973($5_1, 7988, $1_1);
    $125($10_1);
    $6_1 = 1;
    break label$8;
   }
   $6_1 = 0;
  }
  if ($9) {
   $1973($5_1, 7084, $8)
  }
  if (($7_1 & 4096) >>> 12 & $4_1) {
   $9 = $4_1;
   $4_1 = $1944($5_1, 7120);
   $4_1 = $9 & (($4_1 | 0) == ($1_1 | 0) | !$4_1);
  }
  $9 = $4_1;
  label$14 : {
   if (!$4_1) {
    $4_1 = $6_1;
    break label$14;
   }
   label$16 : {
    label$17 : {
     if (!($7_1 & 65536)) {
      break label$17
     }
     if ($1937($5_1 + 252 | 0, 0)) {
      $4_1 = $6_1;
      break label$16;
     }
     if ($1937($5_1 + 253 | 0, 0)) {
      $4_1 = $6_1;
      break label$16;
     }
     if (!$1937($5_1 + 254 | 0, 0)) {
      break label$17
     }
     $4_1 = $6_1;
     break label$16;
    }
    $13 = $7_1 & 1;
    label$20 : {
     if ($13) {
      $4_1 = 0;
      $11_1 = 0;
      if ($1937($5_1 + 992 | 0, 0)) {
       break label$20
      }
     }
     label$22 : {
      if (!($7_1 & 2)) {
       break label$22
      }
      if (!$1937($5_1 + 993 | 0, 0)) {
       break label$22
      }
      $4_1 = 0;
      $11_1 = 1;
      break label$20;
     }
     if (!($7_1 & 4)) {
      $4_1 = 1;
      $11_1 = -1;
      break label$20;
     }
     $8 = $1937($5_1 + 994 | 0, 0);
     $4_1 = !$8;
     $11_1 = $8 ? 2 : -1;
    }
    $14 = $4_1;
    label$24 : {
     label$25 : {
      if (!$13) {
       break label$25
      }
      if (!$1937($5_1 + 1022 | 0, 0)) {
       break label$25
      }
      $4_1 = 1;
      $8 = 0;
      break label$24;
     }
     if ($7_1 & 2) {
      $4_1 = 1;
      $8 = 1;
      if ($1937($5_1 + 1023 | 0, 0)) {
       break label$24
      }
     }
     if (!($7_1 & 4)) {
      $4_1 = 0;
      $8 = -1;
      break label$24;
     }
     $8 = $1937($5_1 + 1024 | 0, 0);
     $4_1 = ($8 | 0) != 0;
     $8 = $8 ? 2 : -1;
    }
    $13 = $4_1;
    label$28 : {
     if ($14) {
      break label$28
     }
     if (($1944($5_1, 7136) | 0) == ($1_1 | 0)) {
      break label$28
     }
     if ($7_1 & 96) {
      $85($1_1, $10_1);
      $1973($5_1, 7192, $11_1);
      if (!($7_1 & 262144)) {
       $330($1_1, $10_1)
      }
      $125($10_1);
     }
     if (!($7_1 & 16)) {
      if (!($7_1 & 256)) {
       break label$28
      }
      if (($1941(($5_1 + ($11_1 << 1) | 0) + 1002 | 0, 0) | 0) != 2) {
       break label$28
      }
     }
     label$35 : {
      if ($7_1 & 131072) {
       $86();
       break label$35;
      }
      $85($1_1, $10_1);
     }
     if (!($7_1 & 262144)) {
      $330($1_1, $10_1)
     }
     $1973($5_1, 7192, $11_1);
     $125($10_1);
     $6_1 = 1;
    }
    $4_1 = $6_1;
    if (!(!($7_1 & 128) | $13 ^ 1)) {
     $6_1 = 0;
     if ($7_1 & 1024) {
      $6_1 = $1963(($5_1 + ($8 << 2) | 0) + 1060 | 0, 0) >= $1963($5_1 + 140 | 0, 0)
     }
     $6_1 = $6_1 ^ 1;
     if (!($7_1 & 262144)) {
      $330($1_1, $10_1)
     }
     $86();
     $4_1 = $4_1 | $6_1;
    }
    if (!($7_1 & 1024) | ($1944($5_1, 7136) | 0) != ($1_1 | 0)) {
     break label$16
    }
    $6_1 = $1944($5_1, 7192);
    if (!($1963(($5_1 + ($6_1 << 2) | 0) + 1040 | 0, 0) > Math_fround(0.0))) {
     break label$16
    }
    $4_1 = $176($6_1, 1) | $4_1;
   }
   if ($4_1) {
    $1968($5_1, 7570, 1)
   }
  }
  $6_1 = $4_1;
  label$46 : {
   if (($1944($5_1, 7512) | 0) != ($1_1 | 0)) {
    $4_1 = $9;
    break label$46;
   }
   if ($1937($5_1, 7570)) {
    $4_1 = $9;
    break label$46;
   }
   if (!$1937($5_1, 7571)) {
    $4_1 = $9;
    break label$46;
   }
   $4_1 = $1944($5_1, 7136);
   label$50 : {
    if (!(!$4_1 | ($1_1 | 0) == ($4_1 | 0))) {
     if (($1944($10_1, 80) | 0) != ($4_1 | 0)) {
      $4_1 = $9;
      break label$46;
     }
     $4_1 = $9;
     if (!($7_1 & 524288)) {
      break label$50
     }
     break label$46;
    }
    $4_1 = $9;
    if ($7_1 & 524288) {
     break label$46
    }
   }
   $4_1 = 1;
  }
  $8 = $4_1;
  label$53 : {
   if (($1944($5_1, 7524) | 0) != ($1_1 | 0)) {
    break label$53
   }
   $4_1 = $1944($5_1, 7520);
   $12_1 = $333(0, $7_1 & 1024 ? 3 : 1);
   if (($1_1 | 0) != ($4_1 | 0)) {
    if (!($12_1 > Math_fround(0.0))) {
     break label$53
    }
   }
   $85($1_1, $10_1);
   $1973($5_1, 7188, 4);
   if (!($7_1 & 262144)) {
    $330($1_1, $10_1)
   }
   $6_1 = 1;
  }
  $4_1 = $6_1;
  label$57 : {
   if (($1944($5_1, 7136) | 0) != ($1_1 | 0)) {
    $9 = 0;
    $1_1 = $4_1;
    break label$57;
   }
   $9 = 0;
   $6_1 = $4_1;
   label$59 : {
    label$60 : {
     label$61 : {
      switch ($1944($5_1, 7188) - 1 | 0) {
      case 0:
       if ($1937($5_1, 7148)) {
        $12_1 = $1963($0_1, 0);
        $1986($5_1 + 7180 | 0, 0, Math_fround($1963($5_1 + 232 | 0, 0) - $1963($0_1, 4)));
        $1986($5_1, 7176, Math_fround($1963($5_1 + 228 | 0, 0) - $12_1));
       }
       $1_1 = $1944($5_1, 7192);
       $6_1 = $1_1 + $5_1 | 0;
       label$64 : {
        if ($1937($6_1 + 236 | 0, 0)) {
         $1_1 = $4_1;
         $9 = 1;
         break label$64;
        }
        label$66 : {
         if (!($8 & $7_1 >>> 5 | $7_1 & 64)) {
          break label$66
         }
         if ($1937($5_1, 7876)) {
          break label$66
         }
         $0_1 = 0;
         label$69 : {
          if (!($7_1 & 256)) {
           break label$69
          }
          $0_1 = 0;
          if (!$1937($6_1 + 1022 | 0, 0)) {
           break label$69
          }
          $0_1 = ($1941(($5_1 + ($1_1 << 1) | 0) + 1012 | 0, 0) | 0) == 2;
         }
         $9 = 1;
         if ($7_1 & 1024) {
          $9 = !($1963(($5_1 + ($1_1 << 2) | 0) + 1060 | 0, 0) >= $1963($5_1 + 140 | 0, 0))
         }
         if ($0_1) {
          break label$66
         }
         $4_1 = $4_1 | $9;
        }
        $1_1 = $4_1;
        $86();
        $9 = 0;
       }
       if ($7_1 & 262144) {
        break label$60
       }
       $1968($5_1, 7570, 1);
       break label$60;
      case 3:
       break label$61;
      default:
       break label$59;
      };
     }
     if (($1944($5_1, 7524) | 0) != ($1_1 | 0)) {
      $86()
     }
     break label$59;
    }
    $6_1 = $1_1;
   }
   $1_1 = $6_1;
   if ($1_1) {
    $1968($5_1, 7151, 1)
   }
  }
  if ($2_1) {
   $1968($2_1, 0, $8)
  }
  if ($3) {
   $1968($3, 0, $9)
  }
  return $1_1;
 }
 
 function $570($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $3 = global$0 - 112 | 0;
  global$0 = $3;
  $5_1 = $1944(0, 73568);
  $4_1 = $1944($5_1, 7080);
  $1968($4_1, 140, 1);
  if (!$1937($4_1, 143)) {
   $9 = $76($4_1, $0_1);
   $68($3 + 104 | 0, $0_1, 0, 1, Math_fround(-1.0));
   $6_1 = $1963($4_1 + 212 | 0, 0);
   $10_1 = $1944($4_1, 208);
   $12_1 = (wasm2js_scratch_store_i32(2, $10_1), wasm2js_scratch_load_f32());
   label$2 : {
    if (!($2_1 & 32768)) {
     break label$2
    }
    $7_1 = $1963($5_1 + 5480 | 0, 0);
    $8 = $1963($4_1 + 264 | 0, 0);
    if (!($7_1 < $8)) {
     break label$2
    }
    $6_1 = Math_fround($6_1 + Math_fround($8 - $7_1));
   }
   $1_1 = $1959($1_1, 0);
   $4_1 = i64toi32_i32$HIGH_BITS;
   $1983($3, 88, $1_1, $4_1);
   $7_1 = $1963($5_1 + 5476 | 0, 0);
   $11_1 = $5_1 + 5480 | 0;
   $8 = $1963($11_1, 0);
   $1983($3, 24, $1_1, $4_1);
   $1_1 = $3 + 96 | 0;
   $293($1_1, $3 + 24 | 0, Math_fround(Math_fround($7_1 + $7_1) + $1963($3, 104)), Math_fround(Math_fround($8 + $8) + $1963($3, 108)));
   $1986($3, 76, $6_1);
   $1986($3 + 84 | 0, 0, Math_fround($6_1 + $1963($3, 100)));
   $1973($3, 72, $10_1);
   $1986($3, 80, Math_fround($1963($3, 96) + $12_1));
   $212($1_1, $1963($11_1, 0));
   $10_1 = 0;
   if ($213($3 + 72 | 0, $9, 0, 0)) {
    $1_1 = $3 + 72 | 0;
    $10_1 = $569($1_1, $9, $3 + 71 | 0, $3 + 70 | 0, $1944($5_1 + 7244 | 0, 0) << 9 & 1024 | $2_1);
    $4_1 = $51((wasm2js_i32$0 = $1937($3, 70) ? 23 : 22, wasm2js_i32$1 = 21, wasm2js_i32$2 = $1937($3, 71), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), Math_fround(1.0));
    $73($1_1, $9, 1);
    $1_1 = $1960($3, 72);
    $9 = i64toi32_i32$HIGH_BITS;
    $1983($3, 56, $1_1, $9);
    $2_1 = $1960($3, 80);
    $11_1 = i64toi32_i32$HIGH_BITS;
    $1983($3, 48, $2_1, $11_1);
    $6_1 = $1963($5_1 + 5484 | 0, 0);
    $1983($3, 16, $1_1, $9);
    $1983($3, 8, $2_1, $11_1);
    $71($3 + 16 | 0, $3 + 8 | 0, $4_1, 1, $6_1);
    if ($1937($5_1, 12196)) {
     $341(13983, 13981)
    }
    $6_1 = $1963($5_1 + 5480 | 0, 0);
    $8 = $1963($3, 72);
    $7_1 = $1963($5_1, 5476);
    $1986($3, 40, Math_fround($8 + $7_1));
    $1986($3, 44, Math_fround($6_1 + $1963($3, 76)));
    $1986($3, 36, Math_fround($1963($3 + 84 | 0, 0) - $6_1));
    $1986($3, 32, Math_fround($1963($3, 80) - $7_1));
    $69($3 + 40 | 0, $3 + 32 | 0, $0_1, 0, $3 + 104 | 0, $5_1 + 5568 | 0, $3 + 72 | 0);
   }
  }
  global$0 = $3 + 112 | 0;
  return $10_1;
 }
 
 function $571($0_1, $1_1) {
  return $570($0_1, $1_1, 0);
 }
 
 function $572($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = Math_fround(0);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = $1944(0, 73568) + 5480 | 0;
  $3 = $1963($2_1, 0);
  $1973($2_1, 0, 0);
  $1982($1_1, 8, 0, 0);
  $0_1 = $570($0_1, $1_1 + 8 | 0, 32768);
  $1986($2_1, 0, $3);
  global$0 = $1_1 + 16 | 0;
  return $0_1;
 }
 
 function $573($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0);
  $3 = global$0 - 48 | 0;
  global$0 = $3;
  $5_1 = $1944($1944(0, 73568), 7080);
  $1968($5_1, 140, 1);
  if (!$1937($5_1, 143)) {
   $0_1 = $76($5_1, $0_1);
   $1_1 = $1959($1_1, 0);
   $4_1 = i64toi32_i32$HIGH_BITS;
   $1983($3, 0, $1_1, $4_1);
   $1983($3, 32, $1_1, $4_1);
   $6_1 = $3 + 40 | 0;
   $293($6_1, $3, Math_fround(0.0), Math_fround(0.0));
   $7_1 = $1963($5_1, 208);
   $1_1 = $1959($5_1, 208);
   $4_1 = i64toi32_i32$HIGH_BITS;
   $1986($3 + 28 | 0, 0, Math_fround($1963($5_1 + 212 | 0, 0) + $1963($3, 44)));
   $1983($3, 16, $1_1, $4_1);
   $1986($3, 24, Math_fround($7_1 + $1963($3, 40)));
   $212($6_1, Math_fround(-1.0));
   $4_1 = 0;
   if ($213($3 + 16 | 0, $0_1, 0, 0)) {
    $4_1 = $569($3 + 16 | 0, $0_1, $3 + 15 | 0, $3 + 14 | 0, $2_1)
   }
  }
  global$0 = $3 + 48 | 0;
  return $4_1;
 }
 
 function $574($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = 0, $13 = 0, $14 = 0, $15_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $4_1 = global$0 - 80 | 0;
  global$0 = $4_1;
  $9 = $1944(0, 73568);
  $7_1 = $1944($9, 7080);
  $1968($7_1, 140, 1);
  if (!$1937($7_1, 143)) {
   $6_1 = $76($7_1, $0_1);
   $5_1 = $1963($2_1, 0);
   $8 = $1963($7_1, 208);
   $0_1 = $1959($7_1, 208);
   $12_1 = i64toi32_i32$HIGH_BITS;
   $1986($4_1 + 76 | 0, 0, Math_fround($1963($7_1 + 212 | 0, 0) + $1963($2_1, 4)));
   $1983($4_1, 64, $0_1, $12_1);
   $1986($4_1, 72, Math_fround($8 + $5_1));
   $8 = $296();
   $5_1 = Math_fround(-1.0);
   if ($1963($2_1, 4) >= $8) {
    $5_1 = $1963($9 + 5480 | 0, 0)
   }
   $212($2_1, $5_1);
   $0_1 = 0;
   if ($213($4_1 - -64 | 0, $6_1, 0, 0)) {
    $10_1 = $4_1 - -64 | 0;
    $0_1 = $569($10_1, $6_1, $4_1 + 63 | 0, $4_1 + 62 | 0, $1944($9 + 7244 | 0, 0) << 9 & 1024 | $3);
    $12_1 = $51((wasm2js_i32$0 = $1937($4_1, 62) ? 23 : 22, wasm2js_i32$1 = 21, wasm2js_i32$2 = $1937($4_1, 63), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), Math_fround(1.0));
    $14 = $51(0, Math_fround(1.0));
    $73($10_1, $6_1, 1);
    $3 = $1960($4_1, 64);
    $13 = i64toi32_i32$HIGH_BITS;
    $1983($4_1, 48, $3, $13);
    $6_1 = $1960($4_1, 72);
    $10_1 = i64toi32_i32$HIGH_BITS;
    $1983($4_1, 40, $6_1, $10_1);
    $5_1 = $1963($9 + 5484 | 0, 0);
    $1983($4_1, 24, $3, $13);
    $1983($4_1, 16, $6_1, $10_1);
    $71($4_1 + 24 | 0, $4_1 + 16 | 0, $12_1, 1, $5_1);
    $3 = $1944($7_1, 580);
    $5_1 = $1963($2_1, 0);
    $15_1 = $1963($4_1, 68);
    $11_1 = $1963($2_1, 4);
    $8 = $1963($9, 6468);
    $11_1 = Math_fround(Math_fround($11_1 - $8) * Math_fround(.5));
    $1986($4_1, 36, Math_fround($15_1 + ($11_1 <= Math_fround(0.0) ? Math_fround(0.0) : $11_1)));
    $5_1 = Math_fround(Math_fround($5_1 - $8) * Math_fround(.5));
    $1986($4_1, 32, Math_fround($1963($4_1, 64) + ($5_1 <= Math_fround(0.0) ? Math_fround(0.0) : $5_1)));
    $1983($4_1, 8, $1959($4_1, 32), i64toi32_i32$HIGH_BITS);
    $476($3, $4_1 + 8 | 0, $14, $1_1, Math_fround(1.0));
   }
   $6_1 = $0_1;
  }
  global$0 = $4_1 + 80 | 0;
  return $6_1;
 }
 
 function $576($0_1, $1_1) {
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = 0;
  $2_1 = global$0 - 48 | 0;
  global$0 = $2_1;
  $7_1 = $1944(0, 73568);
  $4_1 = $1963($7_1 + 5476 | 0, 0);
  $11_1 = $1963($7_1 + 5480 | 0, 0);
  $9 = $1944($7_1, 7080);
  $8 = $1963($7_1, 6468);
  $3 = $1963($1_1, 0);
  $5_1 = $1963($1_1, 4);
  $1986($2_1, 36, $5_1);
  $1986($2_1, 32, $3);
  $11_1 = Math_fround(Math_fround($8 + $5_1) + Math_fround($11_1 + $11_1));
  $1986($2_1, 44, $11_1);
  $4_1 = Math_fround(Math_fround($8 + $3) + Math_fround($4_1 + $4_1));
  $1986($2_1, 40, $4_1);
  if (Math_fround(Math_fround(Math_fround($1963($9 + 424 | 0, 0) - $1963($9, 416)) * Math_fround($1963($9 + 428 | 0, 0) - $1963($9 + 420 | 0, 0))) / Math_fround(Math_fround($4_1 - $3) * Math_fround($11_1 - $5_1))) < Math_fround(1.5)) {
   $10_1 = $2_1 + 44 | 0;
   $8 = $1963($10_1, 0);
   $13 = $1963($2_1, 36);
   $6_1 = Math_fround(Math_fround($8 - $13) * Math_fround(-.25));
   label$2 : {
    if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
     $1_1 = ~~$6_1;
     break label$2;
    }
    $1_1 = -2147483648;
   }
   $6_1 = $8;
   $8 = Math_fround($1_1 | 0);
   $1986($10_1, 0, Math_fround($6_1 + $8));
   $6_1 = $1963($2_1, 40);
   $12_1 = Math_fround(Math_fround($6_1 - $3) * Math_fround(-.25));
   label$4 : {
    if (Math_fround(Math_abs($12_1)) < Math_fround(2147483648.0)) {
     $1_1 = ~~$12_1;
     break label$4;
    }
    $1_1 = -2147483648;
   }
   $12_1 = $6_1;
   $6_1 = Math_fround($1_1 | 0);
   $1986($2_1, 40, Math_fround($12_1 + $6_1));
   $1986($2_1, 32, Math_fround($3 - $6_1));
   $1986($2_1, 36, Math_fround($13 - $8));
  }
  $10_1 = $2_1 + 32 | 0;
  $1_1 = $213($10_1, $0_1, 0, 0);
  $10_1 = $569($10_1, $0_1, $2_1 + 31 | 0, $2_1 + 30 | 0, 0);
  if ($1_1) {
   $0_1 = $51($1937($2_1, 30) ? 23 : 22, Math_fround(1.0));
   $1986($2_1, 24, Math_fround(Math_fround($5_1 + $11_1) * Math_fround(.5)));
   $1986($2_1, 20, Math_fround(Math_fround($3 + $4_1) * Math_fround(.5)));
   if ($1937($2_1, 31)) {
    $1_1 = $1944($9, 580);
    $3 = Math_fround(Math_fround($1963($7_1, 6468) * Math_fround(.5)) + Math_fround(1.0));
    $408($1_1, $2_1 + 20 | 0, $3 <= Math_fround(2.0) ? Math_fround(2.0) : $3, $0_1, 12);
   }
   $3 = $1963($7_1, 6468);
   $0_1 = $51(0, Math_fround(1.0));
   $5_1 = Math_fround($1963($2_1, 24) + Math_fround(-.5));
   $1986($2_1, 24, $5_1);
   $4_1 = Math_fround($1963($2_1, 20) + Math_fround(-.5));
   $1986($2_1, 20, $4_1);
   $1_1 = $1944($9, 580);
   $3 = Math_fround(Math_fround(Math_fround($3 * Math_fround(.5)) * Math_fround(.707099974155426)) + Math_fround(-1.0));
   $1986($2_1, 16, Math_fround($3 + $5_1));
   $1986($2_1, 12, Math_fround($3 + $4_1));
   $1986($2_1, 8, Math_fround($5_1 - $3));
   $1986($2_1, 4, Math_fround($4_1 - $3));
   $7_1 = $2_1 + 12 | 0;
   $14 = $2_1 + 4 | 0;
   $399($1_1, $7_1, $14, $0_1, Math_fround(1.0));
   $1_1 = $1944($9, 580);
   $5_1 = $1963($2_1, 24);
   $1986($2_1, 16, Math_fround($5_1 - $3));
   $4_1 = $1963($2_1, 20);
   $1986($2_1, 12, Math_fround($3 + $4_1));
   $1986($2_1, 8, Math_fround($3 + $5_1));
   $1986($2_1, 4, Math_fround($4_1 - $3));
   $399($1_1, $7_1, $14, $0_1, Math_fround(1.0));
  }
  global$0 = $2_1 + 48 | 0;
  return $10_1;
 }
 
 function $578($0_1) {
  var $1_1 = Math_fround(0), $2_1 = Math_fround(0), $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = 0, $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = Math_fround(0), $21_1 = 0, $22_1 = 0, $23_1 = Math_fround(0), $24 = 0, $25_1 = 0, $26_1 = 0, $27_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $10_1 = global$0 - 32 | 0;
  global$0 = $10_1;
  $3 = $1944($1944(0, 73568), 7080);
  $13 = $81($3, $0_1 ? 14116 : 14356);
  $79($13);
  $1_1 = $1963(($3 + (($0_1 ^ 1) << 2) | 0) + 128 | 0, 0);
  $2_1 = $1963($3, 72);
  label$1 : {
   if (!$0_1) {
    $5_1 = $1963($3, 432);
    $6_1 = $1963($3 + 16 | 0, 0);
    $8 = Math_fround($6_1 + $1963($3 + 24 | 0, 0));
    $1_1 = Math_fround(Math_fround($8 - $2_1) - $1_1);
    $1_1 = $1_1 <= $6_1 ? $6_1 : $1_1;
    $6_1 = $1963($3 + 440 | 0, 0);
    break label$1;
   }
   $5_1 = $1963($3, 12);
   $6_1 = Math_fround($5_1 + $1963($3, 20));
   $1_1 = Math_fround(Math_fround($6_1 - $2_1) - $1_1);
   $5_1 = $1_1 <= $5_1 ? $5_1 : $1_1;
   $1_1 = $1963($3 + 436 | 0, 0);
   $8 = $1963($3 + 444 | 0, 0);
  }
  $1986($10_1, 28, $8);
  $1986($10_1, 24, $6_1);
  $1986($10_1, 20, $1_1);
  $1986($10_1, 16, $5_1);
  label$3 : {
   if (!$0_1) {
    $7_1 = $1937($3, 137) ? 320 : 448;
    break label$3;
   }
   $14 = ($1944($3, 8) & 1025) == 1 ? 288 : 256;
   $7_1 = $1937($3, 136) ? $14 : $14 | 128;
  }
  $24 = $7_1;
  $3 = $3 + ($0_1 << 2) | 0;
  $5_1 = $1963($3 + 36 | 0, 0);
  $2_1 = $1963($3 + 60 | 0, 0);
  $6_1 = $1963($3 + 432 | 0, 0);
  $8 = $1963($3 + 440 | 0, 0);
  $21_1 = $3 + 88 | 0;
  $1_1 = $1963($21_1, 0);
  label$5 : {
   if (Math_fround(Math_abs($1_1)) < Math_fround(9223372036854775808.0)) {
    $3 = Math_fround(Math_abs($1_1)) >= Math_fround(1.0) ? ~~($1_1 > Math_fround(0.0) ? Math_fround(Math_min(Math_fround(Math_floor(Math_fround($1_1 * Math_fround(2.3283064365386963e-10)))), Math_fround(4294967296.0))) : Math_fround(Math_ceil(Math_fround(Math_fround($1_1 - Math_fround(~~$1_1 >>> 0 >>> 0)) * Math_fround(2.3283064365386963e-10))))) >>> 0 : 0;
    $7_1 = ~~$1_1 >>> 0;
    break label$5;
   }
   $3 = -2147483648;
   $7_1 = 0;
  }
  $1983($10_1, 8, $7_1, $3);
  $12_1 = $10_1 + 16 | 0;
  $14 = $0_1;
  $22_1 = $10_1 + 8 | 0;
  $1_1 = Math_fround($8 - $6_1);
  label$7 : {
   if (Math_fround(Math_abs($1_1)) < Math_fround(9223372036854775808.0)) {
    $3 = Math_fround(Math_abs($1_1)) >= Math_fround(1.0) ? ~~($1_1 > Math_fround(0.0) ? Math_fround(Math_min(Math_fround(Math_floor(Math_fround($1_1 * Math_fround(2.3283064365386963e-10)))), Math_fround(4294967296.0))) : Math_fround(Math_ceil(Math_fround(Math_fround($1_1 - Math_fround(~~$1_1 >>> 0 >>> 0)) * Math_fround(2.3283064365386963e-10))))) >>> 0 : 0;
    $17_1 = ~~$1_1 >>> 0;
    break label$7;
   }
   $3 = -2147483648;
   $17_1 = 0;
  }
  $1_1 = Math_fround(Math_fround($2_1 + $2_1) + $5_1);
  label$9 : {
   if (Math_fround(Math_abs($1_1)) < Math_fround(9223372036854775808.0)) {
    $0_1 = Math_fround(Math_abs($1_1)) >= Math_fround(1.0) ? ~~($1_1 > Math_fround(0.0) ? Math_fround(Math_min(Math_fround(Math_floor(Math_fround($1_1 * Math_fround(2.3283064365386963e-10)))), Math_fround(4294967296.0))) : Math_fround(Math_ceil(Math_fround(Math_fround($1_1 - Math_fround(~~$1_1 >>> 0 >>> 0)) * Math_fround(2.3283064365386963e-10))))) >>> 0 : 0;
    $18_1 = ~~$1_1 >>> 0;
    break label$9;
   }
   $0_1 = -2147483648;
   $18_1 = 0;
  }
  $4_1 = global$0 - 48 | 0;
  global$0 = $4_1;
  $11_1 = $1944(0, 73568);
  $19 = $1944($11_1, 7080);
  label$10 : {
   if ($1937($19, 143)) {
    break label$10
   }
   $5_1 = Math_fround($1963($12_1, 8) - $1963($12_1, 0));
   if ($5_1 <= Math_fround(0.0)) {
    break label$10
   }
   $1_1 = Math_fround($1963($12_1 + 12 | 0, 0) - $1963($12_1, 4));
   if ($1_1 <= Math_fround(0.0)) {
    break label$10
   }
   $9 = Math_fround(1.0);
   label$51 : {
    if (($14 | 0) != 1) {
     break label$51
    }
    $2_1 = $1963($11_1 + 5480 | 0, 0);
    $2_1 = Math_fround($2_1 + $2_1);
    $6_1 = $1963($11_1, 6468);
    $9 = Math_fround(1.0);
    if (!($1_1 < Math_fround($2_1 + $6_1))) {
     break label$51
    }
    $2_1 = Math_fround(Math_fround($1_1 - $6_1) / $2_1);
    $9 = $2_1 < Math_fround(0.0) ? Math_fround(0.0) : $2_1 > Math_fround(1.0) ? Math_fround(1.0) : $2_1;
   }
   if ($9 <= Math_fround(0.0)) {
    break label$10
   }
   $7_1 = $4_1 + 40 | 0;
   $1983($7_1, 0, $1959($12_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
   $15_1 = $1959($12_1, 0);
   $25_1 = i64toi32_i32$HIGH_BITS;
   $16_1 = $7_1;
   $6_1 = $1963($7_1, 0);
   $2_1 = Math_fround(Math_fround($5_1 + Math_fround(-2.0)) * Math_fround(.5));
   label$72 : {
    if (Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0)) {
     $7_1 = ~~$2_1;
     break label$72;
    }
    $7_1 = -2147483648;
   }
   $2_1 = Math_fround($7_1 | 0);
   $2_1 = ($7_1 | 0) < 0 ? Math_fround(0.0) : $2_1 > Math_fround(3.0) ? Math_fround(3.0) : $2_1;
   $6_1 = Math_fround($6_1 - $2_1);
   $1986($16_1, 0, $6_1);
   $26_1 = $12_1 + 8 | 0;
   $7_1 = $4_1 + 44 | 0;
   $8 = $1963($7_1, 0);
   $1_1 = Math_fround(Math_fround($1_1 + Math_fround(-2.0)) * Math_fround(.5));
   label$93 : {
    if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
     $16_1 = ~~$1_1;
     break label$93;
    }
    $16_1 = -2147483648;
   }
   $1_1 = Math_fround($16_1 | 0);
   $5_1 = ($16_1 | 0) < 0 ? Math_fround(0.0) : $1_1 > Math_fround(3.0) ? Math_fround(3.0) : $1_1;
   $1_1 = Math_fround($8 - $5_1);
   $1986($7_1, 0, $1_1);
   $1983($4_1, 32, $15_1, $25_1);
   $8 = Math_fround($5_1 + $1963($4_1, 36));
   $1986($4_1, 36, $8);
   $2_1 = Math_fround($2_1 + $1963($4_1, 32));
   $1986($4_1, 32, $2_1);
   $5_1 = $1963($11_1 + 5540 | 0, 0);
   $1968($4_1, 31, 0);
   $1968($4_1, 30, 0);
   $569($4_1 + 32 | 0, $13, $4_1 + 30 | 0, $4_1 + 31 | 0, 262144);
   $2_1 = $14 ? Math_fround($1_1 - $8) : Math_fround($6_1 - $2_1);
   $7_1 = $17_1 >>> 0 < $18_1 >>> 0 & ($0_1 | 0) >= ($3 | 0) | ($0_1 | 0) > ($3 | 0);
   $15_1 = $7_1 ? $18_1 : $17_1;
   $16_1 = $15_1;
   $7_1 = $7_1 ? $0_1 : $3;
   $15_1 = $15_1 >>> 0 > 1 & ($7_1 | 0) >= 0 | ($7_1 | 0) > 0;
   $1_1 = Math_fround($2_1 * Math_fround(Math_fround(+($17_1 >>> 0) + +($3 | 0) * 4294967296.0) / Math_fround(+(($15_1 ? $16_1 : 1) >>> 0) + +(($15_1 ? $7_1 : 0) | 0) * 4294967296.0)));
   $8 = $1_1 < $5_1 ? $5_1 : $1_1 > $2_1 ? $2_1 : $1_1;
   $23_1 = Math_fround($2_1 - $8);
   $7_1 = $18_1 - $17_1 | 0;
   $0_1 = $0_1 - (($17_1 >>> 0 > $18_1 >>> 0) + $3 | 0) | 0;
   $3 = $7_1 >>> 0 > 1 & ($0_1 | 0) >= 0 | ($0_1 | 0) > 0;
   $20_1 = Math_fround(+(($3 ? $7_1 : 1) >>> 0) + +(($3 ? $0_1 : 0) | 0) * 4294967296.0);
   $1_1 = Math_fround(Math_fround(+($1960($22_1, 0) >>> 0) + +(i64toi32_i32$HIGH_BITS | 0) * 4294967296.0) / $20_1);
   $1_1 = Math_fround(Math_fround($23_1 * ($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1 > Math_fround(1.0) ? Math_fround(1.0) : $1_1)) / $2_1);
   label$11 : {
    if (!$1937($4_1, 31) | !($9 >= Math_fround(1.0))) {
     break label$11
    }
    $5_1 = Math_fround($8 / $2_1);
    if (!($5_1 < Math_fround(1.0))) {
     break label$11
    }
    $0_1 = $14 << 2;
    $6_1 = $1963($0_1 + ($4_1 + 32 | 0) | 0, 0);
    $27_1 = $1963(($0_1 + $11_1 | 0) + 228 | 0, 0);
    $87($13);
    $6_1 = Math_fround(Math_fround($27_1 - $6_1) / $2_1);
    $6_1 = $6_1 < Math_fround(0.0) ? Math_fround(0.0) : $6_1 > Math_fround(1.0) ? Math_fround(1.0) : $6_1;
    label$15 : {
     if (!$1937($11_1, 7148)) {
      $3 = 0;
      break label$15;
     }
     $3 = $6_1 > Math_fround($5_1 + $1_1) | $1_1 > $6_1;
     $1986($11_1, 12068, $3 ? Math_fround(0.0) : Math_fround(Math_fround($6_1 - $1_1) + Math_fround($5_1 * Math_fround(-.5))));
    }
    $1_1 = Math_fround(Math_fround(Math_fround($6_1 - $1963($11_1, 12068)) + Math_fround($5_1 * Math_fround(-.5))) / Math_fround(Math_fround(1.0) - $5_1));
    $1_1 = Math_fround(($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1 > Math_fround(1.0) ? Math_fround(1.0) : $1_1) * $20_1);
    label$17 : {
     if (Math_fround(Math_abs($1_1)) < Math_fround(9223372036854775808.0)) {
      $0_1 = Math_fround(Math_abs($1_1)) >= Math_fround(1.0) ? ~~($1_1 > Math_fround(0.0) ? Math_fround(Math_min(Math_fround(Math_floor(Math_fround($1_1 * Math_fround(2.3283064365386963e-10)))), Math_fround(4294967296.0))) : Math_fround(Math_ceil(Math_fround(Math_fround($1_1 - Math_fround(~~$1_1 >>> 0 >>> 0)) * Math_fround(2.3283064365386963e-10))))) >>> 0 : 0;
      $13 = ~~$1_1 >>> 0;
      break label$17;
     }
     $0_1 = -2147483648;
     $13 = 0;
    }
    $1983($22_1, 0, $13, $0_1);
    $1_1 = Math_fround(Math_fround(+($13 >>> 0) + +($0_1 | 0) * 4294967296.0) / $20_1);
    $1_1 = Math_fround(Math_fround($23_1 * ($1_1 < Math_fround(0.0) ? Math_fround(0.0) : $1_1 > Math_fround(1.0) ? Math_fround(1.0) : $1_1)) / $2_1);
    if ($3) {
     $1986($11_1, 12068, Math_fround(Math_fround($5_1 * Math_fround(-.5)) + Math_fround($6_1 - $1_1)))
    }
   }
   $2_1 = $1_1;
   $0_1 = $51(14, Math_fround(1.0));
   $3 = $51((wasm2js_i32$0 = 17, wasm2js_i32$1 = $1937($4_1, 30) ? 16 : 15, wasm2js_i32$2 = $1937($4_1, 31), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $9);
   $401($1944($19, 580), $12_1, $26_1, $0_1, $1963($19, 68), $24);
   $1983($4_1 + 16 | 0, 0, 0, 0);
   $1983($4_1, 8, 0, 0);
   $1_1 = $1963($4_1, 32);
   label$20 : {
    if (!$14) {
     $1_1 = Math_fround(Math_fround(Math_fround($1963($4_1, 40) - $1_1) * $2_1) + $1_1);
     $2_1 = $1963($4_1, 36);
     $5_1 = Math_fround($8 + $1_1);
     $9 = $1963($4_1, 44);
     break label$20;
    }
    $9 = $1963($4_1, 44);
    $5_1 = $1963($4_1, 36);
    $2_1 = Math_fround(Math_fround(Math_fround($9 - $5_1) * $2_1) + $5_1);
    $5_1 = $1963($4_1, 40);
    $9 = Math_fround($8 + $2_1);
   }
   $1986($4_1, 20, $9);
   $1986($4_1, 16, $5_1);
   $1986($4_1, 12, $2_1);
   $1986($4_1, 8, $1_1);
   $401($1944($19, 580), $4_1 + 8 | 0, $4_1 + 16 | 0, $3, $1963($11_1 + 5536 | 0, 0), 0);
   $1937($4_1, 31);
  }
  global$0 = $4_1 + 48 | 0;
  $1986($21_1, 0, Math_fround(+($1960($10_1, 8) >>> 0) + +(i64toi32_i32$HIGH_BITS | 0) * 4294967296.0));
  global$0 = $10_1 + 32 | 0;
 }
 
 function $583($0_1, $1_1) {
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = 0, $14 = 0, $15_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = global$0 - 112 | 0;
  global$0 = $2_1;
  $4_1 = $1944(0, 73568);
  $6_1 = $1944($4_1, 7080);
  $1968($6_1, 140, 1);
  if (!$1937($6_1, 143)) {
   $7_1 = $76($6_1, $0_1);
   $68($2_1 + 104 | 0, $0_1, 0, 1, Math_fround(-1.0));
   $3 = $296();
   $9 = $1944($6_1 + 212 | 0, 0);
   $11_1 = (wasm2js_scratch_store_i32(2, $9), wasm2js_scratch_load_f32());
   $10_1 = $1944($6_1, 208);
   $12_1 = (wasm2js_scratch_store_i32(2, $10_1), wasm2js_scratch_load_f32());
   $8 = $1963($2_1, 104);
   if ($8 > Math_fround(0.0)) {
    $5_1 = Math_fround($8 + $1963($4_1 + 5500 | 0, 0))
   }
   $8 = $1963($4_1 + 5480 | 0, 0);
   $1986($2_1 + 100 | 0, 0, Math_fround(Math_fround(Math_fround($8 + $8) + $1963($2_1, 108)) + $11_1));
   $1986($2_1, 96, Math_fround(Math_fround($3 + $5_1) + $12_1));
   $1973($2_1, 92, $9);
   $1973($2_1, 88, $10_1);
   $13 = $2_1 + 88 | 0;
   $277($13, $8);
   if ($213($13, $7_1, 0, 0)) {
    $14 = $569($2_1 + 88 | 0, $7_1, $2_1 + 87 | 0, $2_1 + 86 | 0, 0);
    if ($14) {
     $1968($1_1, 0, $1937($1_1, 0) ^ 1);
     $88($7_1);
    }
    $73($2_1 + 88 | 0, $7_1, 1);
    $1973($2_1, 76, $9);
    $1973($2_1, 72, $10_1);
    $5_1 = Math_fround($3 + $11_1);
    $1986($2_1, 68, $5_1);
    $8 = Math_fround($3 + $12_1);
    $1986($2_1, 64, $8);
    $7_1 = $51((wasm2js_i32$0 = $1937($2_1, 86) ? 9 : 8, wasm2js_i32$1 = 7, wasm2js_i32$2 = $1937($2_1, 87), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), Math_fround(1.0));
    $15_1 = $1963($4_1 + 5484 | 0, 0);
    $1983($2_1, 24, $1960($2_1, 72), i64toi32_i32$HIGH_BITS);
    $1983($2_1, 16, $1960($2_1, 64), i64toi32_i32$HIGH_BITS);
    $71($2_1 + 24 | 0, $2_1 + 16 | 0, $7_1, 1, $15_1);
    $9 = $51(18, Math_fround(1.0));
    $10_1 = $1944($4_1 + 7244 | 0, 0) & 64;
    label$5 : {
     if ($10_1) {
      $6_1 = $1944($6_1, 580);
      $3 = Math_fround($3 / Math_fround(3.5999999046325684));
      label$7 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $7_1 = ~~$3;
        break label$7;
       }
       $7_1 = -2147483648;
      }
      $3 = Math_fround($7_1 | 0);
      $3 = $3 <= Math_fround(1.0) ? Math_fround(1.0) : $3;
      $1986($2_1, 60, Math_fround($3 + $11_1));
      $1986($2_1, 56, Math_fround($3 + $12_1));
      $1986($2_1, 52, Math_fround($5_1 - $3));
      $1986($2_1, 48, Math_fround($8 - $3));
      $401($6_1, $2_1 + 56 | 0, $2_1 + 48 | 0, $9, $1963($4_1, 5484), 0);
      break label$5;
     }
     if (!$1937($1_1, 0)) {
      break label$5
     }
     $6_1 = $1944($6_1, 580);
     $5_1 = Math_fround($3 / Math_fround(6.0));
     label$9 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $7_1 = ~~$5_1;
       break label$9;
      }
      $7_1 = -2147483648;
     }
     $5_1 = Math_fround($7_1 | 0);
     $5_1 = $5_1 <= Math_fround(1.0) ? Math_fround(1.0) : $5_1;
     $1986($2_1, 44, Math_fround($5_1 + $11_1));
     $1986($2_1, 40, Math_fround($5_1 + $12_1));
     $1983($2_1, 8, $1959($2_1, 40), i64toi32_i32$HIGH_BITS);
     $478($6_1, $2_1 + 8 | 0, $9, Math_fround($3 - Math_fround($5_1 + $5_1)));
    }
    $3 = $1963($4_1 + 5500 | 0, 0);
    $1986($2_1, 60, Math_fround($1963($4_1, 5480) + $11_1));
    $1986($2_1, 56, Math_fround($8 + $3));
    if ($1937($4_1, 12196)) {
     $4_1 = 13939;
     $6_1 = $2_1 + 56 | 0;
     if (!$10_1) {
      $4_1 = $1937($1_1, 0) ? 13943 : 13979
     }
     $64($6_1, $4_1, 0);
    }
    if ($1963($2_1, 104) > Math_fround(0.0)) {
     $1_1 = $1960($2_1, 56);
     $4_1 = i64toi32_i32$HIGH_BITS;
     $1983($2_1, 32, $1_1, $4_1);
     $1983($2_1, 0, $1_1, $4_1);
     $63($2_1, $0_1, 0, 1);
    }
   }
  }
  global$0 = $2_1 + 112 | 0;
  return $14;
 }
 
 function $585($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = Math_fround(0), $5_1 = 0, $6_1 = Math_fround(0), $7_1 = 0, $8 = 0, $9 = Math_fround(0), $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = global$0 + -64 | 0;
  global$0 = $2_1;
  $7_1 = $1944(0, 73568);
  $8 = $1944($7_1, 7080);
  $1968($8, 140, 1);
  if (!$1937($8, 143)) {
   $3 = $76($8, $0_1);
   $68($2_1 + 56 | 0, $0_1, 0, 1, Math_fround(-1.0));
   $4_1 = $296();
   $5_1 = $1944($8 + 212 | 0, 0);
   $11_1 = (wasm2js_scratch_store_i32(2, $5_1), wasm2js_scratch_load_f32());
   $10_1 = $1944($8, 208);
   $6_1 = (wasm2js_scratch_store_i32(2, $10_1), wasm2js_scratch_load_f32());
   $9 = $1963($2_1, 56);
   if ($9 > Math_fround(0.0)) {
    $12_1 = Math_fround($9 + $1963($7_1 + 5500 | 0, 0))
   }
   $9 = $1963($7_1 + 5480 | 0, 0);
   $1986($2_1 + 52 | 0, 0, Math_fround(Math_fround(Math_fround($9 + $9) + $1963($2_1, 60)) + $11_1));
   $1986($2_1, 48, Math_fround(Math_fround($4_1 + $12_1) + $6_1));
   $1973($2_1, 44, $5_1);
   $1973($2_1, 40, $10_1);
   $10_1 = $2_1 + 40 | 0;
   $277($10_1, $9);
   $5_1 = 0;
   if ($213($10_1, $3, 0, 0)) {
    $12_1 = Math_fround($4_1 + $6_1);
    $9 = Math_fround(Math_fround(Math_fround(Math_fround($4_1 + $11_1) + $11_1) * Math_fround(.5)) + Math_fround(.5));
    label$4 : {
     if (Math_fround(Math_abs($9)) < Math_fround(2147483648.0)) {
      $5_1 = ~~$9;
      break label$4;
     }
     $5_1 = -2147483648;
    }
    $1986($2_1, 36, Math_fround($5_1 | 0));
    $6_1 = Math_fround(Math_fround(Math_fround($12_1 + $6_1) * Math_fround(.5)) + Math_fround(.5));
    label$6 : {
     if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
      $5_1 = ~~$6_1;
      break label$6;
     }
     $5_1 = -2147483648;
    }
    $1986($2_1, 32, Math_fround($5_1 | 0));
    $6_1 = Math_fround(Math_fround($4_1 + Math_fround(-1.0)) * Math_fround(.5));
    $5_1 = $569($2_1 + 40 | 0, $3, $2_1 + 31 | 0, $2_1 + 30 | 0, 0);
    if ($5_1) {
     $88($3)
    }
    $73($2_1 + 40 | 0, $3, 1);
    $408($1944($8, 580), $2_1 + 32 | 0, $6_1, $51((wasm2js_i32$0 = $1937($2_1, 30) ? 9 : 8, wasm2js_i32$1 = 7, wasm2js_i32$2 = $1937($2_1, 31), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), Math_fround(1.0)), 16);
    if ($1_1) {
     $10_1 = $1944($8, 580);
     $3 = $2_1 + 32 | 0;
     $4_1 = Math_fround($4_1 / Math_fround(6.0));
     label$10 : {
      if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
       $13 = ~~$4_1;
       break label$10;
      }
      $13 = -2147483648;
     }
     $4_1 = Math_fround($13 | 0);
     $408($10_1, $3, Math_fround($6_1 - ($4_1 <= Math_fround(1.0) ? Math_fround(1.0) : $4_1)), $51(18, Math_fround(1.0)), 16);
    }
    if ($1963($7_1 + 5488 | 0, 0) > Math_fround(0.0)) {
     $3 = $1944($8, 580);
     $1986($2_1, 20, Math_fround($1963($2_1, 36) + Math_fround(1.0)));
     $1986($2_1, 16, Math_fround($1963($2_1, 32) + Math_fround(1.0)));
     $407($3, $2_1 + 16 | 0, $6_1, $51(6, Math_fround(1.0)), 16, $1963($7_1, 5488));
     $407($1944($8, 580), $2_1 + 32 | 0, $6_1, $51(5, Math_fround(1.0)), 16, $1963($7_1, 5488));
    }
    $4_1 = $1963($7_1 + 5500 | 0, 0);
    $1986($2_1, 20, Math_fround($1963($7_1, 5480) + $11_1));
    $1986($2_1, 16, Math_fround($12_1 + $4_1));
    if ($1937($7_1, 12196)) {
     $64($2_1 + 16 | 0, $1_1 ? 17760 : 18698, 0)
    }
    if ($1963($2_1, 56) > Math_fround(0.0)) {
     $1_1 = $1960($2_1, 16);
     $3 = i64toi32_i32$HIGH_BITS;
     $1983($2_1, 8, $1_1, $3);
     $1983($2_1, 0, $1_1, $3);
     $63($2_1, $0_1, 0, 1);
    }
   }
   $3 = $5_1;
  }
  global$0 = $2_1 - -64 | 0;
  return $3;
 }
 
 function $588() {
  var $0_1 = 0, $1_1 = Math_fround(0), $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = 0, $9 = Math_fround(0);
  $0_1 = global$0 - 32 | 0;
  global$0 = $0_1;
  $4_1 = $1944(0, 73568);
  $2_1 = $1944($4_1, 7080);
  $1968($2_1, 140, 1);
  if (!$1937($2_1, 143)) {
   $7_1 = $1963($2_1, 208);
   $5_1 = $1959($2_1, 208);
   $8 = i64toi32_i32$HIGH_BITS;
   $9 = $1963($2_1 + 212 | 0, 0);
   $3 = $1963($2_1 + 252 | 0, 0);
   $1_1 = $1963($4_1 + 5480 | 0, 0);
   $6_1 = Math_fround($1_1 + $1_1);
   $1_1 = $1963($4_1, 6468);
   $6_1 = Math_fround($6_1 + $1_1);
   $3 = $3 < $6_1 ? $3 : $6_1;
   $3 = $1_1 <= $3 ? $3 : $1_1;
   $1986($0_1 + 28 | 0, 0, Math_fround($9 + $3));
   $1983($0_1, 16, $5_1, $8);
   $1986($0_1, 24, Math_fround($1_1 + $7_1));
   $5_1 = $0_1 + 16 | 0;
   $277($5_1, Math_fround(-1.0));
   if ($213($5_1, 0, 0, 0)) {
    $5_1 = $51(0, Math_fround(1.0));
    $2_1 = $1944($2_1, 580);
    $1_1 = $1963($4_1, 5476);
    $7_1 = $1963($4_1, 6468);
    $1986($0_1, 12, Math_fround(Math_fround($3 * Math_fround(.5)) + $1963($0_1, 20)));
    $1986($0_1, 8, Math_fround(Math_fround($1_1 + Math_fround($7_1 * Math_fround(.5))) + $1963($0_1, 16)));
    $1983($0_1, 0, $1959($0_1, 8), i64toi32_i32$HIGH_BITS);
    $477($2_1, $0_1, $5_1);
   }
   $1_1 = $1963($4_1, 5476);
   $276(Math_fround(0.0), Math_fround($1_1 + $1_1));
  }
  global$0 = $0_1 + 32 | 0;
 }
 
 function $589() {
  var $0_1 = 0, $1_1 = 0;
  $0_1 = global$0 - 16 | 0;
  global$0 = $0_1;
  $1_1 = $1944($1944(0, 73568), 7080);
  $1968($1_1, 140, 1);
  if (!$1937($1_1, 143)) {
   $1982($0_1, 8, 0, 0);
   $212($0_1 + 8 | 0, Math_fround(-1.0));
  }
  global$0 = $0_1 + 16 | 0;
 }
 
 function $590($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = $1944($1944(0, 73568), 7080);
  $1968($2_1, 140, 1);
  if (!$1937($2_1, 143)) {
   $3 = $1959($2_1, 208);
   $4_1 = i64toi32_i32$HIGH_BITS;
   $5_1 = $1963($0_1, 0);
   $6_1 = $1963($2_1, 208);
   $1986($1_1 + 12 | 0, 0, Math_fround($1963($2_1 + 212 | 0, 0) + $1963($0_1, 4)));
   $1986($1_1, 8, Math_fround($6_1 + $5_1));
   $1983($1_1, 0, $3, $4_1);
   $212($0_1, Math_fround(-1.0));
   $213($1_1, 0, 0, 0);
  }
  global$0 = $1_1 + 16 | 0;
 }
 
 function $591() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0;
  $0_1 = global$0 - 16 | 0;
  global$0 = $0_1;
  $2_1 = $1944(0, 73568);
  $1_1 = $1944($2_1, 7080);
  $1968($1_1, 140, 1);
  if (!$1937($1_1, 143)) {
   $3 = $1_1 + 376 | 0;
   $4_1 = $1944($3, 0);
   $1973($3, 0, 1);
   label$2 : {
    if ($1963($1_1 + 252 | 0, 0) > Math_fround(0.0)) {
     $1982($0_1, 8, 0, 0);
     break label$2;
    }
    $1986($0_1, 12, $1963($2_1, 6468));
    $1973($0_1, 8, 0);
   }
   $212($0_1 + 8 | 0, Math_fround(-1.0));
   $1973($1_1, 376, $4_1);
  }
  global$0 = $0_1 + 16 | 0;
 }
 
 function $592() {
  var $0_1 = 0, $1_1 = Math_fround(0), $2_1 = Math_fround(0), $3 = 0, $4_1 = 0, $5_1 = Math_fround(0);
  $3 = $1944(0, 73568);
  $0_1 = $1944($3, 7080);
  $1968($0_1, 140, 1);
  if (!$1937($0_1, 143)) {
   $5_1 = $1963($3, 6468);
   $4_1 = $0_1 + 264 | 0;
   $2_1 = $1963($4_1, 0);
   $1_1 = $1963($3 + 5480 | 0, 0);
   $1986($4_1, 0, $2_1 >= $1_1 ? $2_1 : $1_1);
   $0_1 = $0_1 + 252 | 0;
   $2_1 = $1963($0_1, 0);
   $1_1 = Math_fround($5_1 + Math_fround($1_1 + $1_1));
   $1986($0_1, 0, $2_1 >= $1_1 ? $2_1 : $1_1);
  }
 }
 
 function $593($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = 0, $7_1 = Math_fround(0);
  $1_1 = global$0 - 32 | 0;
  global$0 = $1_1;
  $6_1 = $1944(0, 73568);
  $3 = $1944($6_1, 7080);
  $1968($3, 140, 1);
  label$1 : {
   if ($1937($3, 143)) {
    break label$1
   }
   if ($0_1 & 2) {
    $4_1 = $1963($3, 208);
    $0_1 = $1_1 + 28 | 0;
    $5_1 = $1963($3 + 212 | 0, 0);
    $1986($0_1, 0, Math_fround($5_1 + $1963($3 + 252 | 0, 0)));
    $1986($1_1, 20, $5_1);
    $1986($1_1, 16, $4_1);
    $1986($1_1, 24, Math_fround($4_1 + Math_fround(1.0)));
    $1982($1_1, 8, 0, 0);
    $212($1_1 + 8 | 0, Math_fround(-1.0));
    if (!$213($1_1 + 16 | 0, 0, 0, 0)) {
     break label$1
    }
    $2_1 = $1944($3, 580);
    $1986($1_1, 12, $1963($1_1, 20));
    $4_1 = $1963($1_1, 16);
    $1986($1_1, 8, $4_1);
    $1986($1_1, 4, $1963($0_1, 0));
    $1986($1_1, 0, $4_1);
    $399($2_1, $1_1 + 8 | 0, $1_1, $51(27, Math_fround(1.0)), Math_fround(1.0));
    if (!$1937($6_1, 12196)) {
     break label$1
    }
    $65(1058, 0);
    break label$1;
   }
   if (!($0_1 & 1)) {
    break label$1
   }
   $5_1 = $1963($3, 12);
   $4_1 = $5_1;
   $2_1 = $1944($6_1, 7456);
   label$3 : {
    if (($2_1 | 0) <= 0) {
     break label$3
    }
    if (($1944(($1944($6_1 + 7464 | 0, 0) + Math_imul($2_1, 48) | 0) - 48 | 0, 0) | 0) != ($1944($3, 4) | 0)) {
     break label$3
    }
    $4_1 = Math_fround($5_1 + $1963($3 + 272 | 0, 0));
   }
   $2_1 = $1944($6_1, 8036);
   label$4 : {
    if (!$2_1) {
     $5_1 = Math_fround($5_1 + $1963($3, 20));
     break label$4;
    }
    $2_1 = $1944($2_1, 16) + Math_imul($1944($2_1, 92), 104) | 0;
    $5_1 = $1963($2_1, 12);
    $4_1 = $1963($2_1, 8);
   }
   $2_1 = 0;
   if ($0_1 & 4) {
    $2_1 = $1944($3 + 368 | 0, 0)
   }
   if ($2_1) {
    $548()
   }
   $7_1 = $1963($3 + 212 | 0, 0);
   $1986($1_1 + 28 | 0, 0, Math_fround($7_1 + Math_fround(1.0)));
   $1986($1_1, 24, $5_1);
   $1986($1_1, 20, $7_1);
   $1986($1_1, 16, $4_1);
   $1982($1_1, 8, 0, 0);
   $212($1_1 + 8 | 0, Math_fround(-1.0));
   label$8 : {
    if (!$213($1_1 + 16 | 0, 0, 0, 0)) {
     break label$8
    }
    $0_1 = $1944($3, 580);
    $1982($1_1, 8, __wasm_rotl_i64($1959($1_1, 20), i64toi32_i32$HIGH_BITS), i64toi32_i32$HIGH_BITS);
    $399($0_1, $1_1 + 16 | 0, $1_1 + 8 | 0, $51(27, Math_fround(1.0)), Math_fround(1.0));
    if (!$1937($6_1, 12196)) {
     break label$8
    }
    $64($1_1 + 16 | 0, 19321, 0);
   }
   if (!$2_1) {
    break label$1
   }
   $549();
   $1986($2_1, 28, $1963($3, 212));
  }
  global$0 = $1_1 + 32 | 0;
 }
 
 function $594() {
  var $0_1 = 0;
  $0_1 = $1944($1944(0, 73568), 7080);
  if (!$1937($0_1, 143)) {
   $593($1944($0_1 + 376 | 0, 0) ? 5 : 6)
  }
 }
 
 function $596($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = Math_fround(0);
  $3 = Math_fround($1963($1_1, 4) - $1963($0_1, 4));
  label$1 : {
   if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
    $2_1 = ~~$3;
    break label$1;
   }
   $2_1 = -2147483648;
  }
  if (!$2_1) {
   $2_1 = $1944($1_1, 0) - $1944($0_1, 0) | 0
  }
  return $2_1 | 0;
 }
 
 function $597($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = 0, $8 = 0, $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = 0, $13 = 0, $14 = Math_fround(0), $15_1 = 0, $16_1 = 0, $17_1 = Math_fround(0), $18_1 = 0, $19 = 0, $20_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $3 = global$0 - 144 | 0;
  global$0 = $3;
  $4_1 = $1944(0, 73568);
  $7_1 = $1944($4_1, 7080);
  $1968($7_1, 140, 1);
  $19 = $1944($4_1, 7300);
  $1973($4_1, 7300, 0);
  if (!$1937($7_1, 143)) {
   $8 = $76($7_1, $0_1);
   $13 = $2_1 & 32;
   if (!$13) {
    $9 = $296()
   }
   $68($3 + 136 | 0, $0_1, 0, 1, Math_fround(-1.0));
   $5_1 = $9;
   $15_1 = $2_1 & 64;
   if (!$15_1) {
    $5_1 = $292()
   }
   $6_1 = $1959($7_1, 208);
   $16_1 = i64toi32_i32$HIGH_BITS;
   $10_1 = $1963($7_1, 208);
   $18_1 = $3 + 132 | 0;
   $11_1 = $1963($4_1 + 5480 | 0, 0);
   $1986($18_1, 0, Math_fround(Math_fround(Math_fround($11_1 + $11_1) + $1963($3, 140)) + $1963($7_1 + 212 | 0, 0)));
   $14 = $5_1;
   $1986($3, 128, Math_fround($10_1 + $5_1));
   $1983($3, 120, $6_1, $16_1);
   $5_1 = Math_fround(0.0);
   $10_1 = $1963($3, 136);
   if ($10_1 > Math_fround(0.0)) {
    $5_1 = Math_fround($10_1 + $1963($4_1 + 5500 | 0, 0))
   }
   $12_1 = $3 + 104 | 0;
   $1986($12_1 + 12 | 0, 0, Math_fround($1963($18_1, 0) + Math_fround(0.0)));
   $1983($3, 104, $6_1, $16_1);
   $1986($3, 112, Math_fround($5_1 + $1963($3, 128)));
   $277($12_1, $11_1);
   if ($213($12_1, $8, $3 + 120 | 0, 0)) {
    $12_1 = $569($3 + 120 | 0, $8, $3 + 103 | 0, $3 + 102 | 0, 0);
    $16_1 = $23(6748, $8);
    $6_1 = $133($16_1);
    if (!(!!$6_1 | !$12_1)) {
     $318($16_1, 0);
     $6_1 = 1;
    }
    $12_1 = $51($1937($3, 103) ? 8 : 7, Math_fround(1.0));
    $5_1 = $1963($3, 120);
    $11_1 = $1963($3, 128);
    $73($3 + 120 | 0, $8, 1);
    $11_1 = Math_fround($11_1 - $9);
    $5_1 = $5_1 >= $11_1 ? $5_1 : $11_1;
    if (!$15_1) {
     $8 = $1944($7_1, 580);
     $1986($3, 96, $1963($3 + 132 | 0, 0));
     $1986($3, 92, $5_1);
     $401($8, $3 + 120 | 0, $3 + 92 | 0, $12_1, $1963($4_1 + 5484 | 0, 0), $13 ? 240 : 80);
    }
    label$9 : {
     if ($13) {
      break label$9
     }
     $8 = $51((wasm2js_i32$0 = 22, wasm2js_i32$1 = $1937($3, 103) & 1 ? 22 : 21, wasm2js_i32$2 = $6_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), Math_fround(1.0));
     $13 = $51(0, Math_fround(1.0));
     $12_1 = $1944($7_1, 580);
     $1986($3, 96, $1963($3, 124));
     $1986($3, 92, $5_1);
     $401($12_1, $3 + 92 | 0, $3 + 128 | 0, $8, $1963($4_1 + 5484 | 0, 0), $9 >= $14 ? 240 : 160);
     if (!(Math_fround(Math_fround($9 + $5_1) - $1963($4_1, 5476)) <= $1963($3, 128))) {
      break label$9
     }
     $7_1 = $1944($7_1, 580);
     $9 = $1963($4_1, 5480);
     $1986($3, 88, Math_fround($9 + $1963($3, 124)));
     $1986($3, 84, Math_fround($5_1 + $9));
     $1983($3, 32, $1959($3, 84), i64toi32_i32$HIGH_BITS);
     $476($7_1, $3 + 32 | 0, $13, 3, Math_fround(1.0));
    }
    $7_1 = $1960($3, 120);
    $8 = i64toi32_i32$HIGH_BITS;
    $1983($3, 72, $7_1, $8);
    $13 = $1960($3, 128);
    $12_1 = i64toi32_i32$HIGH_BITS;
    $1983($3, 64, $13, $12_1);
    $9 = $1963($4_1 + 5484 | 0, 0);
    $1983($3, 24, $7_1, $8);
    $1983($3, 16, $13, $12_1);
    $72($3 + 24 | 0, $3 + 16 | 0, $9);
    if ($2_1 & 1048576) {
     $1_1 = $1960($3, 120);
     $7_1 = i64toi32_i32$HIGH_BITS;
     $1986($4_1 + 12016 | 0, 0, $1963($3 + 132 | 0, 0));
     $1982($4_1, 12004, $1_1, $7_1);
     $1986($4_1 + 12012 | 0, 0, $5_1);
     $1_1 = 0;
    }
    if (!(!$1_1 | $15_1)) {
     if ($1937($4_1, 12196)) {
      $341(1061, 1056)
     }
     $9 = $1963($4_1 + 5480 | 0, 0);
     $1986($3, 92, Math_fround($1963($3, 120) + $1963($4_1, 5476)));
     $1986($3, 96, Math_fround($9 + $1963($3, 124)));
     $1986($3, 60, $1963($3 + 132 | 0, 0));
     $1986($3, 56, $5_1);
     $1982($3, 48, 0, 0);
     $69($3 + 92 | 0, $3 + 56 | 0, $1_1, 0, 0, $3 + 48 | 0, 0);
    }
    if ($1963($3, 136) > Math_fround(0.0)) {
     $5_1 = $1963($4_1 + 5500 | 0, 0);
     $1986($3, 44, Math_fround($1963($3, 124) + $1963($4_1, 5480)));
     $1986($3, 40, Math_fround($5_1 + $1963($3, 128)));
     $1983($3, 8, $1959($3, 40), i64toi32_i32$HIGH_BITS);
     $63($3 + 8 | 0, $0_1, 0, 1);
    }
    if ($6_1) {
     $1973($4_1, 7300, $19);
     $7_1 = $3 + 120 | 0;
     $0_1 = global$0 + -64 | 0;
     global$0 = $0_1;
     $1_1 = $1944(0, 73568);
     label$1 : {
      if (!$133($16_1)) {
       $1973($1_1, 7300, 0);
       $1_1 = 0;
       break label$1;
      }
      $5_1 = Math_fround($1963($7_1, 8) - $1963($7_1, 0));
      label$3 : {
       if ($1937($1_1, 7300) & 16) {
        $4_1 = $1_1 + 7360 | 0;
        $9 = $1963($4_1, 0);
        $1986($4_1, 0, $5_1 <= $9 ? $9 : $5_1);
        break label$3;
       }
       $1973($0_1, 52, 0);
       $1986($0_1, 48, $5_1);
       $2_1 = $2_1 & 30 ? $2_1 : $2_1 | 4;
       $6_1 = 8;
       label$5 : {
        if ($2_1 & 4) {
         break label$5
        }
        $6_1 = 4;
        if ($2_1 & 2) {
         break label$5
        }
        $6_1 = $2_1 & 8 ? 20 : -1;
       }
       if (($6_1 | 0) <= 0) {
        $5_1 = Math_fround(3402823466385288598117041.0e14)
       } else {
        $4_1 = $1944(0, 73568);
        $5_1 = $1963($4_1 + 5428 | 0, 0);
        $9 = Math_fround($5_1 + $5_1);
        $10_1 = $1963($4_1, 6468);
        $5_1 = $1963($4_1 + 5496 | 0, 0);
        $5_1 = Math_fround($9 + Math_fround(Math_fround(Math_fround($10_1 + $5_1) * Math_fround($6_1 | 0)) - $5_1));
       }
       $1986($0_1, 28, $5_1);
       $1973($0_1, 24, 2139095039);
       $251($0_1 + 48 | 0, $0_1 + 24 | 0, 0);
      }
      $6_1 = $2_1;
      $1973($0_1, 0, $1944($1_1, 7480));
      $2_1 = $0_1 + 48 | 0;
      $21($2_1, 16, 12883, $0_1);
      $2_1 = $218($2_1);
      label$8 : {
       if (!$2_1) {
        break label$8
       }
       if (!$1937($2_1, 139)) {
        break label$8
       }
       $4_1 = global$0 - 32 | 0;
       global$0 = $4_1;
       $1982($4_1, 24, 0, 0);
       $1982($4_1, 16, 0, 0);
       $8 = $4_1 + 16 | 0;
       $148($2_1, $4_1 + 24 | 0, $8);
       $13 = $4_1 + 8 | 0;
       $149($13, $2_1, $8);
       $15_1 = $0_1 + 40 | 0;
       $150($15_1, $2_1, $13);
       global$0 = $4_1 + 32 | 0;
       $1973($2_1, 168, $6_1 & 1 ? 0 : 3);
       $8 = $1944(0, 73568);
       $6_1 = $1944($1944($8 + 7504 | 0, 0), 0);
       $14 = $1963($6_1 + 16 | 0, 0);
       $5_1 = $1963($6_1 + 8 | 0, 0);
       $4_1 = $0_1 + 24 | 0;
       $9 = $1963($6_1, 4);
       $11_1 = Math_fround($9 + $1963($6_1, 12));
       $1986($4_1, 8, $11_1);
       $1986($4_1, 4, $5_1);
       $1986($4_1, 0, $9);
       $6_1 = $4_1 + 12 | 0;
       $10_1 = Math_fround($5_1 + $14);
       $1986($6_1, 0, $10_1);
       $14 = $1963($8 + 5592 | 0, 0);
       $20_1 = $10_1;
       $17_1 = $1963($8 + 5596 | 0, 0);
       $10_1 = Math_fround($17_1 + $17_1) < Math_fround($10_1 - $5_1) ? Math_fround(-$17_1) : Math_fround(0.0);
       $1986($6_1, 0, Math_fround($20_1 + $10_1));
       $14 = Math_fround($14 + $14) < Math_fround($11_1 - $9) ? Math_fround(-$14) : Math_fround(0.0);
       $1986($4_1, 8, Math_fround($11_1 + $14));
       $1986($4_1, 4, Math_fround($5_1 - $10_1));
       $1986($4_1, 0, Math_fround($9 - $14));
       $5_1 = $1963($7_1, 0);
       $1986($0_1, 12, $1963($7_1 + 12 | 0, 0));
       $1986($0_1, 8, $5_1);
       $6_1 = $0_1 + 16 | 0;
       $8 = $0_1 + 8 | 0;
       $220($6_1, $8, $15_1, $2_1 + 168 | 0, $4_1, $7_1, 1);
       $1982($0_1, 8, 0, 0);
       $250($6_1, 0, $8);
      }
      $5_1 = $1963($1_1 + 5476 | 0, 0);
      $1986($0_1, 28, $1963($1_1 + 5428 | 0, 0));
      $1986($0_1, 24, $5_1);
      $59(2, $0_1 + 24 | 0);
      $1_1 = $143($0_1 + 48 | 0, 0, 67109191);
      $60(1);
      if (!$1_1) {
       $321()
      }
     }
     global$0 = $0_1 - -64 | 0;
    } else {
     $1_1 = 0
    }
   } else {
    $1_1 = 0
   }
   $6_1 = $1_1;
  }
  global$0 = $3 + 144 | 0;
  return $6_1;
 }
 
 function $599() {
  $321();
 }
 
 function $601($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = 0, $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = 0, $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = 0, $15_1 = 0, $16_1 = Math_fround(0), $17_1 = 0, $18_1 = Math_fround(0), $19 = 0, $20_1 = Math_fround(0), wasm2js_f32$0 = Math_fround(0), wasm2js_f32$1 = Math_fround(0), wasm2js_i32$0 = 0;
  $4_1 = global$0 - 112 | 0;
  global$0 = $4_1;
  $11_1 = $1944(0, 73568);
  $8 = $1944($11_1, 7080);
  $1968($8, 140, 1);
  if (!$1937($8, 143)) {
   $9 = $76($8, $0_1);
   $68($4_1 + 104 | 0, $0_1, 0, 1, Math_fround(-1.0));
   $6_1 = $1963($3, 0);
   $10_1 = $1963($3, 4);
   $1986($4_1, 100, (wasm2js_f32$0 = $10_1, wasm2js_f32$1 = $1963($4_1, 108), wasm2js_i32$0 = $10_1 != Math_fround(0.0), wasm2js_i32$0 ? wasm2js_f32$0 : wasm2js_f32$1));
   $1986($4_1, 96, (wasm2js_f32$0 = $6_1, wasm2js_f32$1 = $1963($4_1, 104), wasm2js_i32$0 = $6_1 != Math_fround(0.0), wasm2js_i32$0 ? wasm2js_f32$0 : wasm2js_f32$1));
   $12_1 = $1963($8 + 212 | 0, 0);
   $13 = $1963($8 + 264 | 0, 0);
   $10_1 = $1963($8, 208);
   $212($4_1 + 96 | 0, Math_fround(0.0));
   $6_1 = $10_1;
   $15_1 = $2_1 & 2;
   if ($15_1) {
    $6_1 = $1963($8, 480)
   }
   $12_1 = Math_fround($12_1 + $13);
   label$3 : {
    if (!($2_1 & 16777216)) {
     if ($1963($3, 0) != Math_fround(0.0)) {
      break label$3
     }
    }
    $13 = $1963($4_1, 104);
    $16_1 = Math_fround($1963(($15_1 ? 488 : 472) + $8 | 0, 0) - $6_1);
    $1986($4_1, 96, $13 >= $16_1 ? $13 : $16_1);
   }
   $1986($4_1, 92, $12_1);
   $1986($4_1, 88, $10_1);
   $13 = Math_fround($12_1 + $1963($4_1, 100));
   $1986($4_1, 84, $13);
   $16_1 = Math_fround($6_1 + $1963($4_1, 96));
   $1986($4_1, 80, $16_1);
   $1986($4_1 + 76 | 0, 0, $13);
   $1986($4_1, 72, $16_1);
   $1986($4_1, 68, $12_1);
   $1986($4_1, 64, $6_1);
   if (!($2_1 & 134217728)) {
    $10_1 = Math_fround(0.0);
    if (!$15_1) {
     $10_1 = $1963($11_1 + 5492 | 0, 0)
    }
    $18_1 = $1963($11_1 + 5496 | 0, 0);
    $20_1 = $6_1;
    $6_1 = Math_fround($10_1 * Math_fround(.5));
    label$7 : {
     if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
      $3 = ~~$6_1;
      break label$7;
     }
     $3 = -2147483648;
    }
    $6_1 = Math_fround($3 | 0);
    $1986($4_1, 64, Math_fround($20_1 - $6_1));
    $1986($4_1, 72, Math_fround($16_1 + Math_fround($10_1 - $6_1)));
    $6_1 = Math_fround($18_1 * Math_fround(.5));
    label$9 : {
     if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
      $3 = ~~$6_1;
      break label$9;
     }
     $3 = -2147483648;
    }
    $6_1 = Math_fround($3 | 0);
    $1986($4_1, 68, Math_fround($12_1 - $6_1));
    $1986($4_1, 76, Math_fround($13 + Math_fround($18_1 - $6_1)));
   }
   $6_1 = $1963($8 + 504 | 0, 0);
   $10_1 = $1963($8, 496);
   if ($15_1) {
    $1986($8, 496, $1963($8, 480));
    $1986($8, 504, $1963($8, 488));
   }
   $5_1 = $2_1 & 8;
   $7_1 = $213($4_1 - -64 | 0, $9, 0, $5_1 >>> 1 | 0);
   if ($15_1) {
    $1986($8, 504, $6_1);
    $1986($8, 496, $10_1);
   }
   $3 = 0;
   if ($7_1) {
    $19 = !$5_1 | ($1937($11_1, 7216) & 4) >>> 2;
    if (!$19) {
     $226(1)
    }
    label$15 : {
     if (!$15_1) {
      break label$15
     }
     if ($1944($8 + 368 | 0, 0)) {
      $548();
      break label$15;
     }
     if (!$1944($11_1, 8036)) {
      break label$15
     }
     $5_1 = $1944(0, 73568);
     $3 = $1944($5_1, 8036);
     $5_1 = $1944($5_1, 7080);
     $1982($3, 340, $1959($5_1, 496), i64toi32_i32$HIGH_BITS);
     $7_1 = $5_1 + 504 | 0;
     $1982($3 + 348 | 0, 0, $1959($7_1, 0), i64toi32_i32$HIGH_BITS);
     $6_1 = $1963($3 + 320 | 0, 0);
     $14 = $3 + 316 | 0;
     $10_1 = $1963($14, 0);
     $12_1 = $1963($3 + 312 | 0, 0);
     $13 = $1963($3, 308);
     $1982($7_1, 0, $1959($14, 0), i64toi32_i32$HIGH_BITS);
     $1982($5_1, 496, $1959($3, 308), i64toi32_i32$HIGH_BITS);
     $7_1 = $1944($5_1, 580);
     $1986($7_1, 96, $13);
     $1986($7_1 + 100 | 0, 0, $12_1);
     $1986($7_1 + 104 | 0, 0, $10_1);
     $1986($7_1 + 108 | 0, 0, $6_1);
     $7_1 = $1944($5_1, 580);
     $7_1 = (($1944($7_1, 60) << 4) + $1944($7_1 + 68 | 0, 0) | 0) - 16 | 0;
     $1986($7_1, 12, $6_1);
     $1986($7_1, 8, $10_1);
     $1986($7_1, 4, $12_1);
     $1986($7_1, 0, $13);
     $422($1944($3, 376), $1944($5_1, 580), $1937($3, 439));
    }
    $7_1 = $2_1 & 16;
    $3 = $2_1 >>> 16 & 128 | ($2_1 >>> 18 & 16 | $2_1 >>> 3 & 131072);
    $3 = $569($4_1 - -64 | 0, $9, $4_1 + 63 | 0, $4_1 + 62 | 0, $7_1 << 8 | ($2_1 & 4 ? $3 | 288 : $3));
    label$17 : {
     label$18 : {
      if (!($2_1 & 2097152)) {
       break label$18
      }
      $5_1 = $1944($11_1, 7540);
      if (!$5_1) {
       break label$18
      }
      $14 = ($1944($11_1, 7544) | 0) == ($1944($8 + 300 | 0, 0) | 0) & ($5_1 | 0) == ($9 | 0);
      $5_1 = $14 | $1_1;
      $3 = $3 | $14;
      break label$17;
     }
     $5_1 = $1_1;
    }
    label$19 : {
     if (!$3) {
      if (!($2_1 & 67108864)) {
       break label$19
      }
      if (!($1937($4_1, 63) & 255)) {
       break label$19
      }
     }
     if ($1937($11_1, 7571)) {
      break label$19
     }
     if (($1944($11_1, 7508) | 0) != ($8 | 0)) {
      break label$19
     }
     $17_1 = $1944($11_1, 7564);
     $14 = $1944($8 + 292 | 0, 0);
     if (($17_1 | 0) != ($14 | 0)) {
      break label$19
     }
     $17_1 = $1944($8 + 300 | 0, 0);
     $6_1 = $1963($8 + 224 | 0, 0);
     $12_1 = $1963($4_1, 76);
     $10_1 = $1963($8 + 228 | 0, 0);
     $1986($4_1 + 56 | 0, 0, Math_fround($12_1 - $10_1));
     $1986($4_1, 52, Math_fround($1963($4_1, 72) - $6_1));
     $1986($4_1, 48, Math_fround($1963($4_1, 68) - $10_1));
     $1986($4_1, 44, Math_fround($1963($4_1, 64) - $6_1));
     $329($9, $14, $17_1, $4_1 + 44 | 0);
     $1968($11_1, 7570, 1);
    }
    if ($3) {
     $88($9)
    }
    if ($7_1) {
     $202()
    }
    if (($1_1 | 0) != ($5_1 | 0)) {
     $1_1 = $11_1 + 7248 | 0;
     $1973($1_1, 0, $1944($1_1, 0) | 8);
    }
    $1_1 = $1937($4_1, 62);
    if (!(!($2_1 & 33554432) | !($1_1 & 255))) {
     $1968($4_1, 63, 1)
    }
    $7_1 = $1937($4_1, 63);
    if (!(!$7_1 & ($5_1 ^ -1))) {
     $1_1 = $51($7_1 ? ($1_1 & 255 ? 26 : 25) : 24, Math_fround(1.0));
     $5_1 = $1960($4_1, 64);
     $7_1 = i64toi32_i32$HIGH_BITS;
     $1983($4_1, 32, $5_1, $7_1);
     $14 = $1960($4_1, 72);
     $17_1 = i64toi32_i32$HIGH_BITS;
     $1983($4_1, 24, $14, $17_1);
     $1983($4_1, 16, $5_1, $7_1);
     $1983($4_1, 8, $14, $17_1);
     $71($4_1 + 16 | 0, $4_1 + 8 | 0, $1_1, 0, Math_fround(0.0));
    }
    $73($4_1 - -64 | 0, $9, 10);
    label$26 : {
     if (!$15_1) {
      break label$26
     }
     if ($1944($8 + 368 | 0, 0)) {
      $549();
      break label$26;
     }
     if (!$1944($11_1, 8036)) {
      break label$26
     }
     $5_1 = $1944(0, 73568);
     $1_1 = $1944($5_1, 8036);
     $6_1 = $1963($1_1 + 352 | 0, 0);
     $9 = $1_1 + 348 | 0;
     $10_1 = $1963($9, 0);
     $12_1 = $1963($1_1 + 344 | 0, 0);
     $15_1 = $1944($1_1, 16);
     $7_1 = $1944($1_1, 92);
     $13 = $1963($1_1, 340);
     $5_1 = $1944($5_1, 7080);
     $1982($5_1 + 504 | 0, 0, $1959($9, 0), i64toi32_i32$HIGH_BITS);
     $1982($5_1, 496, $1959($1_1, 340), i64toi32_i32$HIGH_BITS);
     $9 = $1944($5_1, 580);
     $1986($9 + 100 | 0, 0, $12_1);
     $1986($9 + 104 | 0, 0, $10_1);
     $1986($9 + 108 | 0, 0, $6_1);
     $1986($9, 96, $13);
     $9 = $1944($5_1, 580);
     $9 = (($1944($9, 60) << 4) + $1944($9 + 68 | 0, 0) | 0) - 16 | 0;
     $1986($9, 12, $6_1);
     $1986($9, 8, $10_1);
     $1986($9, 4, $12_1);
     $1986($9, 0, $13);
     $422($1944($1_1, 376), $1944($5_1, 580), $1937(Math_imul($7_1, 104) + $15_1 | 0, 87));
    }
    $69($4_1 + 88 | 0, $4_1 + 80 | 0, $0_1, 0, $4_1 + 104 | 0, $11_1 + 5576 | 0, $4_1 - -64 | 0);
    label$28 : {
     if (!$3 | $2_1 & 1) {
      break label$28
     }
     if (!($1944($8, 8) & 67108864)) {
      break label$28
     }
     if ($1937($11_1 + 7244 | 0, 0) & 32) {
      break label$28
     }
     $319();
    }
    if (!$19) {
     $227()
    }
   }
   $5_1 = $3;
  }
  global$0 = $4_1 + 112 | 0;
  return $5_1;
 }
 
 function $602($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0);
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $9 = $1944($1_1, 0);
  $5_1 = 0;
  label$1 : {
   if (($9 | 0) < 0) {
    break label$1
   }
   $5_1 = 0;
   if (($3 | 0) <= ($9 | 0)) {
    break label$1
   }
   $5_1 = $1944(($9 << 2) + $2_1 | 0, 0);
  }
  $9 = $5_1;
  $5_1 = $1944(0, 73568);
  label$2 : {
   if (($4_1 | 0) == -1) {
    break label$2
   }
   if ($1937($5_1, 7300) & 16) {
    break label$2
   }
   $1982($7_1, 8, 0, 0);
   if (($4_1 | 0) <= 0) {
    $8 = Math_fround(3402823466385288598117041.0e14)
   } else {
    $8 = $1963($5_1 + 5428 | 0, 0);
    $10_1 = Math_fround($8 + $8);
    $11_1 = $1963($5_1, 6468);
    $8 = $1963($5_1 + 5496 | 0, 0);
    $8 = Math_fround($10_1 + Math_fround(Math_fround(Math_fround($11_1 + $8) * Math_fround($4_1 | 0)) - $8));
   }
   $1986($7_1, 4, $8);
   $1973($7_1, 0, 2139095039);
   $251($7_1 + 8 | 0, $7_1, 0);
  }
  if ($597($0_1, $9, 0)) {
   label$6 : {
    if (($3 | 0) <= 0) {
     $0_1 = 0;
     break label$6;
    }
    $0_1 = 0;
    while (1) {
     $266($6_1);
     $9 = $1944(($6_1 << 2) + $2_1 | 0, 0);
     $4_1 = $1944($1_1, 0);
     $1982($7_1, 8, 0, 0);
     if ($601($9, ($4_1 | 0) == ($6_1 | 0), 0, $7_1 + 8 | 0)) {
      $1973($1_1, 0, $6_1);
      $0_1 = 1;
     }
     if (($4_1 | 0) == ($6_1 | 0)) {
      $263()
     }
     $269();
     $6_1 = $6_1 + 1 | 0;
     if (($6_1 | 0) != ($3 | 0)) {
      continue
     }
     break;
    };
   }
   $321();
   $6_1 = $0_1;
   if ($6_1 & 1) {
    $88($1944($5_1, 7240))
   }
  }
  global$0 = $7_1 + 16 | 0;
  return $6_1 & 1;
 }
 
 function $603($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0;
  $5_1 = global$0 - 128 | 0;
  global$0 = $5_1;
  label$1 : {
   label$2 : {
    switch (($2_1 & -2) - 4 | 0) {
    case 0:
     $1973($5_1, 96, $1944($3, 0));
     $6_1 = $21($0_1, $1_1, $4_1, $5_1 + 96 | 0);
     break label$1;
    case 2:
     $1983($5_1, 112, $1960($3, 0), i64toi32_i32$HIGH_BITS);
     $6_1 = $21($0_1, $1_1, $4_1, $5_1 + 112 | 0);
     break label$1;
    default:
     break label$2;
    };
   }
   label$5 : {
    switch ($2_1 | 0) {
    case 8:
     $1990($5_1, 0, +$1963($3, 0));
     $6_1 = $21($0_1, $1_1, $4_1, $5_1);
     break label$1;
    case 9:
     $1990($5_1, 16, $1967($3, 0));
     $6_1 = $21($0_1, $1_1, $4_1, $5_1 + 16 | 0);
     break label$1;
    case 0:
     $1973($5_1, 32, $1936($3, 0));
     $6_1 = $21($0_1, $1_1, $4_1, $5_1 + 32 | 0);
     break label$1;
    case 1:
     $1973($5_1, 48, $1937($3, 0));
     $6_1 = $21($0_1, $1_1, $4_1, $5_1 + 48 | 0);
     break label$1;
    case 2:
     $1973($5_1, 64, $1939($3, 0));
     $6_1 = $21($0_1, $1_1, $4_1, $5_1 - -64 | 0);
     break label$1;
    case 3:
     break label$5;
    default:
     break label$1;
    };
   }
   $1973($5_1, 80, $1941($3, 0));
   $6_1 = $21($0_1, $1_1, $4_1, $5_1 + 80 | 0);
  }
  global$0 = $5_1 + 128 | 0;
  return $6_1;
 }
 
 function $604($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0;
  label$1 : {
   label$2 : {
    switch ($0_1 | 0) {
    case 0:
     if (($1_1 | 0) == 43) {
      $6_1 = $1936($3, 0);
      $5_1 = $1936($4_1, 0);
      label$13 : {
       if (($5_1 | 0) < 0) {
        $0_1 = 128;
        if (($6_1 | 0) < (-128 - $5_1 | 0)) {
         break label$13
        }
       }
       $0_1 = $5_1 + $6_1 | 0;
       $0_1 = ($5_1 | 0) > 0 ? (($6_1 | 0) > (127 - $5_1 | 0) ? 127 : $0_1) : $0_1;
      }
      $1968($2_1, 0, $0_1);
     }
     if (($1_1 | 0) != 45) {
      break label$1
     }
     $1_1 = $1936($3, 0);
     $0_1 = $1936($4_1, 0);
     label$15 : {
      if (($0_1 | 0) > 0) {
       $3 = 128;
       if (($1_1 | 0) < ($0_1 - 128 | 0)) {
        break label$15
       }
      }
      $3 = $1_1 - $0_1 | 0;
      $3 = ($0_1 | 0) < 0 ? (($1_1 | 0) > ($0_1 + 127 | 0) ? 127 : $3) : $3;
     }
     $1968($2_1, 0, $3);
     return;
    case 1:
     if (($1_1 | 0) == 43) {
      $0_1 = $1937($4_1, 0) + $1937($3, 0) | 0;
      $1968($2_1, 0, $0_1 >>> 0 >= 255 ? 255 : $0_1);
     }
     if (($1_1 | 0) != 45) {
      break label$1
     }
     $0_1 = $1937($3, 0);
     $1_1 = $0_1 - $1937($4_1, 0) | 0;
     $1968($2_1, 0, $0_1 >>> 0 >= $1_1 >>> 0 ? $1_1 : 0);
     return;
    case 2:
     if (($1_1 | 0) == 43) {
      $6_1 = $1939($3, 0);
      $5_1 = $1939($4_1, 0);
      label$19 : {
       if (($5_1 | 0) < 0) {
        $0_1 = 32768;
        if (($6_1 | 0) < (-32768 - $5_1 | 0)) {
         break label$19
        }
       }
       $0_1 = $5_1 + $6_1 | 0;
       $0_1 = ($5_1 | 0) > 0 ? (($6_1 | 0) > (32767 - $5_1 | 0) ? 32767 : $0_1) : $0_1;
      }
      $1970($2_1, 0, $0_1);
     }
     if (($1_1 | 0) != 45) {
      break label$1
     }
     $1_1 = $1939($3, 0);
     $0_1 = $1939($4_1, 0);
     label$21 : {
      if (($0_1 | 0) > 0) {
       $3 = 32768;
       if (($1_1 | 0) < ($0_1 - 32768 | 0)) {
        break label$21
       }
      }
      $3 = $1_1 - $0_1 | 0;
      $3 = ($0_1 | 0) < 0 ? (($1_1 | 0) > ($0_1 + 32767 | 0) ? 32767 : $3) : $3;
     }
     $1970($2_1, 0, $3);
     return;
    case 3:
     if (($1_1 | 0) == 43) {
      $0_1 = $1941($4_1, 0) + $1941($3, 0) | 0;
      $1970($2_1, 0, $0_1 >>> 0 >= 65535 ? 65535 : $0_1);
     }
     if (($1_1 | 0) != 45) {
      break label$1
     }
     $0_1 = $1941($3, 0);
     $1_1 = $0_1 - $1941($4_1, 0) | 0;
     $1970($2_1, 0, $0_1 >>> 0 >= $1_1 >>> 0 ? $1_1 : 0);
     return;
    case 4:
     if (($1_1 | 0) == 43) {
      $6_1 = $1944($3, 0);
      $5_1 = $1944($4_1, 0);
      label$25 : {
       if (($5_1 | 0) < 0) {
        $0_1 = -2147483648;
        if (($6_1 | 0) < (-2147483648 - $5_1 | 0)) {
         break label$25
        }
       }
       $0_1 = $5_1 + $6_1 | 0;
       $0_1 = ($5_1 | 0) > 0 ? (($6_1 | 0) > ($5_1 ^ 2147483647) ? 2147483647 : $0_1) : $0_1;
      }
      $1973($2_1, 0, $0_1);
     }
     if (($1_1 | 0) != 45) {
      break label$1
     }
     $1_1 = $1944($3, 0);
     $0_1 = $1944($4_1, 0);
     label$27 : {
      if (($0_1 | 0) > 0) {
       $3 = -2147483648;
       if (($1_1 | 0) < ($0_1 | -2147483648)) {
        break label$27
       }
      }
      $3 = $1_1 - $0_1 | 0;
      $3 = ($0_1 | 0) < 0 ? (($1_1 | 0) > ($0_1 + 2147483647 | 0) ? 2147483647 : $3) : $3;
     }
     $1973($2_1, 0, $3);
     return;
    case 5:
     if (($1_1 | 0) == 43) {
      $0_1 = $1944($4_1, 0);
      $5_1 = $1944($3, 0) + $0_1 | 0;
      $1973($2_1, 0, $0_1 >>> 0 > $5_1 >>> 0 ? -1 : $5_1);
     }
     if (($1_1 | 0) != 45) {
      break label$1
     }
     $0_1 = $1944($3, 0);
     $1_1 = $0_1 - $1944($4_1, 0) | 0;
     $1973($2_1, 0, $0_1 >>> 0 >= $1_1 >>> 0 ? $1_1 : 0);
     return;
    case 6:
     if (($1_1 | 0) == 43) {
      $6_1 = $1960($3, 0);
      $8 = i64toi32_i32$HIGH_BITS;
      $5_1 = $1960($4_1, 0);
      $0_1 = i64toi32_i32$HIGH_BITS;
      $9 = $0_1;
      label$31 : {
       if (($0_1 | 0) < 0) {
        $0_1 = 0;
        $7_1 = -2147483648 - ((($5_1 | 0) != 0) + $9 | 0) | 0;
        $10_1 = -2147483648;
        if ($6_1 >>> 0 < 0 - $5_1 >>> 0 & ($8 | 0) <= ($7_1 | 0) | ($7_1 | 0) > ($8 | 0)) {
         break label$31
        }
       }
       $7_1 = $8 + $9 | 0;
       $0_1 = $5_1 + $6_1 | 0;
       $7_1 = $0_1 >>> 0 < $6_1 >>> 0 ? $7_1 + 1 | 0 : $7_1;
       $10_1 = $6_1 >>> 0 > ($5_1 ^ -1) >>> 0;
       $6_1 = $9 ^ 2147483647;
       $6_1 = $10_1 & ($8 | 0) >= ($6_1 | 0) | ($6_1 | 0) < ($8 | 0);
       $5_1 = !!$5_1 & ($9 | 0) >= 0 | ($9 | 0) > 0;
       $0_1 = $5_1 ? ($6_1 ? -1 : $0_1) : $0_1;
       $10_1 = $5_1 ? ($6_1 ? 2147483647 : $7_1) : $7_1;
      }
      $7_1 = $10_1;
      $1983($2_1, 0, $0_1, $7_1);
     }
     if (($1_1 | 0) != 45) {
      break label$1
     }
     $1_1 = $1960($3, 0);
     $5_1 = i64toi32_i32$HIGH_BITS;
     $3 = $1960($4_1, 0);
     $0_1 = i64toi32_i32$HIGH_BITS;
     $6_1 = $0_1;
     label$33 : {
      if (!(!$3 & ($0_1 | 0) <= 0 | ($0_1 | 0) < 0)) {
       $0_1 = 0;
       $4_1 = $6_1 | -2147483648;
       $7_1 = -2147483648;
       if ($1_1 >>> 0 < $3 >>> 0 & ($5_1 | 0) <= ($4_1 | 0) | ($4_1 | 0) > ($5_1 | 0)) {
        break label$33
       }
      }
      $0_1 = $1_1 - $3 | 0;
      $4_1 = $5_1 - (($1_1 >>> 0 < $3 >>> 0) + $6_1 | 0) | 0;
      $7_1 = $6_1 + 2147483647 | 0;
      $3 = $3 - 1 | 0;
      $7_1 = ($3 | 0) != -1 ? $7_1 + 1 | 0 : $7_1;
      $1_1 = $1_1 >>> 0 > $3 >>> 0 & ($5_1 | 0) >= ($7_1 | 0) | ($5_1 | 0) > ($7_1 | 0);
      $3 = ($6_1 | 0) < 0;
      $0_1 = $3 ? ($1_1 ? -1 : $0_1) : $0_1;
      $7_1 = $3 ? ($1_1 ? 2147483647 : $4_1) : $4_1;
     }
     $1983($2_1, 0, $0_1, $7_1);
     return;
    case 7:
     if (($1_1 | 0) == 43) {
      $0_1 = $1960($4_1, 0);
      $5_1 = i64toi32_i32$HIGH_BITS;
      $8 = $1960($3, 0);
      $6_1 = $8 + $0_1 | 0;
      $7_1 = i64toi32_i32$HIGH_BITS + $5_1 | 0;
      $7_1 = $6_1 >>> 0 < $8 >>> 0 ? $7_1 + 1 | 0 : $7_1;
      $0_1 = ($5_1 | 0) == ($7_1 | 0) & $0_1 >>> 0 > $6_1 >>> 0 | $5_1 >>> 0 > $7_1 >>> 0;
      $1983($2_1, 0, $0_1 ? -1 : $6_1, $0_1 ? -1 : $7_1);
     }
     if (($1_1 | 0) != 45) {
      break label$1
     }
     $0_1 = $1960($3, 0);
     $1_1 = i64toi32_i32$HIGH_BITS;
     $4_1 = $1960($4_1, 0);
     $3 = $0_1 - $4_1 | 0;
     $4_1 = $1_1 - (i64toi32_i32$HIGH_BITS + ($0_1 >>> 0 < $4_1 >>> 0) | 0) | 0;
     $0_1 = ($1_1 | 0) == ($4_1 | 0) & $0_1 >>> 0 < $3 >>> 0 | $1_1 >>> 0 < $4_1 >>> 0;
     $1983($2_1, 0, $0_1 ? 0 : $3, $0_1 ? 0 : $4_1);
     return;
    case 8:
     if (($1_1 | 0) == 43) {
      $1986($2_1, 0, Math_fround($1963($3, 0) + $1963($4_1, 0)))
     }
     if (($1_1 | 0) != 45) {
      break label$1
     }
     $1986($2_1, 0, Math_fround($1963($3, 0) - $1963($4_1, 0)));
     return;
    case 9:
     break label$2;
    default:
     break label$1;
    };
   }
   if (($1_1 | 0) == 43) {
    $1990($2_1, 0, $1967($3, 0) + $1967($4_1, 0))
   }
   if (($1_1 | 0) != 45) {
    break label$1
   }
   $1990($2_1, 0, $1967($3, 0) - $1967($4_1, 0));
  }
 }
 
 function $605($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = Math_fround(0), $7_1 = 0, $8 = 0, $9 = 0.0, $10_1 = 0, $11_1 = 0;
  $5_1 = global$0 - 208 | 0;
  global$0 = $5_1;
  label$1 : {
   while (1) {
    label$2 : {
     $7_1 = $0_1;
     label$4 : {
      $10_1 = $1937($0_1, 0);
      switch ($10_1 - 9 | 0) {
      case 33:
      case 34:
      case 38:
       break label$2;
      case 0:
      case 23:
       break label$4;
      default:
       break label$1;
      };
     }
     $0_1 = $0_1 + 1 | 0;
     continue;
    }
    break;
   };
   while (1) {
    $8 = $0_1;
    $7_1 = $0_1 + 1 | 0;
    $0_1 = $7_1;
    $8 = $1937($8, 1);
    if (($8 | 0) == 9) {
     continue
    }
    if (($8 | 0) == 32) {
     continue
    }
    break;
   };
   $8 = $10_1;
  }
  $0_1 = 0;
  if ($1937($7_1, 0)) {
   $10_1 = $2_1 << 4;
   $11_1 = $1944($10_1 + 48160 | 0, 0);
   $1602($5_1 + 200 | 0, $3, $11_1);
   $0_1 = $4_1;
   if (!$0_1) {
    $0_1 = $1944($10_1 + 48172 | 0, 0)
   }
   $1973($5_1, 196, 0);
   label$8 : {
    label$9 : {
     label$10 : {
      label$11 : {
       label$12 : {
        label$13 : {
         label$14 : {
          switch ($2_1 - 4 | 0) {
          case 0:
           $1973($5_1, 184, $1944($3, 0));
           $1973($5_1, 176, 0);
           label$18 : {
            label$19 : {
             if (!$8) {
              break label$19
             }
             $1973($5_1, 96, $5_1 + 184 | 0);
             if (($1690($1_1, $0_1, $5_1 + 96 | 0) | 0) <= 0) {
              break label$12
             }
             label$20 : {
              switch ($8 - 42 | 0) {
              case 1:
               $1973($5_1, 48, $5_1 + 196 | 0);
               if (!$1690($7_1, 13404, $5_1 + 48 | 0)) {
                break label$13
               }
               $0_1 = $1944($5_1, 196) + $1944($5_1, 184) | 0;
               break label$18;
              case 0:
               $1973($5_1, 64, $5_1 + 176 | 0);
               if (!$1690($7_1, 10027, $5_1 - -64 | 0)) {
                break label$13
               }
               $6_1 = Math_fround($1963($5_1, 176) * Math_fround($1944($5_1, 184) | 0));
               if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
                $0_1 = ~~$6_1;
                break label$18;
               }
               $0_1 = -2147483648;
               break label$18;
              case 5:
               break label$20;
              default:
               break label$19;
              };
             }
             $1973($5_1, 80, $5_1 + 176 | 0);
             if (!$1690($7_1, 10027, $5_1 + 80 | 0)) {
              break label$13
             }
             $6_1 = $1963($5_1, 176);
             if ($6_1 == Math_fround(0.0)) {
              break label$13
             }
             $6_1 = Math_fround(Math_fround($1944($5_1, 184) | 0) / $6_1);
             if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
              $0_1 = ~~$6_1;
              break label$18;
             }
             $0_1 = -2147483648;
             break label$18;
            }
            $1973($5_1, 32, $5_1 + 196 | 0);
            if (($1690($7_1, $0_1, $5_1 + 32 | 0) | 0) != 1) {
             break label$13
            }
            $0_1 = $1944($5_1, 196);
           }
           $1973($3, 0, $0_1);
           break label$13;
          case 4:
           $1986($5_1, 184, $1963($3, 0));
           $1973($5_1, 176, 0);
           if ($8) {
            $1973($5_1, 128, $5_1 + 184 | 0);
            if (($1690($1_1, 10027, $5_1 + 128 | 0) | 0) <= 0) {
             break label$11
            }
           }
           $1973($5_1, 112, $5_1 + 176 | 0);
           if (($1690($7_1, 10027, $5_1 + 112 | 0) | 0) <= 0) {
            break label$11
           }
           label$26 : {
            label$27 : {
             switch ($8 - 42 | 0) {
             case 1:
              $6_1 = Math_fround($1963($5_1, 184) + $1963($5_1, 176));
              break label$26;
             case 0:
              $6_1 = Math_fround($1963($5_1, 184) * $1963($5_1, 176));
              break label$26;
             case 5:
              $6_1 = $1963($5_1, 176);
              if ($6_1 == Math_fround(0.0)) {
               break label$13
              }
              $6_1 = Math_fround($1963($5_1, 184) / $6_1);
              break label$26;
             default:
              break label$27;
             };
            }
            $6_1 = $1963($5_1, 176);
           }
           $1986($3, 0, $6_1);
           break label$13;
          case 5:
           $1990($5_1, 184, $1967($3, 0));
           $1983($5_1, 176, 0, 0);
           if ($8) {
            $1973($5_1, 160, $5_1 + 184 | 0);
            if (($1690($1_1, 9627, $5_1 + 160 | 0) | 0) <= 0) {
             break label$10
            }
           }
           $1973($5_1, 144, $5_1 + 176 | 0);
           if (($1690($7_1, 9627, $5_1 + 144 | 0) | 0) <= 0) {
            break label$10
           }
           label$32 : {
            label$33 : {
             switch ($8 - 42 | 0) {
             case 1:
              $9 = $1967($5_1, 184) + $1967($5_1, 176);
              break label$32;
             case 0:
              $9 = $1967($5_1, 184) * $1967($5_1, 176);
              break label$32;
             case 5:
              $9 = $1967($5_1, 176);
              if ($9 == 0.0) {
               break label$13
              }
              $9 = $1967($5_1, 184) / $9;
              break label$32;
             default:
              break label$33;
             };
            }
            $9 = $1967($5_1, 176);
           }
           $1990($3, 0, $9);
           break label$13;
          default:
           break label$14;
          };
         }
         if ($2_1 - 5 >>> 0 <= 2) {
          $1973($5_1, 0, $3);
          if (($1690($7_1, $0_1, $5_1) | 0) > 0) {
           break label$13
          }
          $0_1 = 0;
          break label$8;
         }
         $1973($5_1, 16, $5_1 + 184 | 0);
         if (($1690($7_1, $0_1, $5_1 + 16 | 0) | 0) <= 0) {
          break label$9
         }
         label$38 : {
          switch ($2_1 | 0) {
          case 0:
           $0_1 = $1944($5_1, 184);
           $0_1 = ($0_1 | 0) >= 127 ? 127 : $0_1;
           $1968($3, 0, ($0_1 | 0) <= -128 ? -128 : $0_1);
           break label$13;
          case 1:
           $0_1 = $1944($5_1, 184);
           $0_1 = ($0_1 | 0) >= 255 ? 255 : $0_1;
           $1968($3, 0, ($0_1 | 0) > 0 ? $0_1 : 0);
           break label$13;
          case 2:
           $0_1 = $1944($5_1, 184);
           $0_1 = ($0_1 | 0) >= 32767 ? 32767 : $0_1;
           $1970($3, 0, ($0_1 | 0) <= -32768 ? -32768 : $0_1);
           break label$13;
          case 3:
           break label$38;
          default:
           break label$13;
          };
         }
         $0_1 = $1944($5_1, 184);
         $0_1 = ($0_1 | 0) >= 65535 ? 65535 : $0_1;
         $1970($3, 0, ($0_1 | 0) > 0 ? $0_1 : 0);
        }
        $0_1 = ($1645($5_1 + 200 | 0, $3, $11_1) | 0) != 0;
        break label$8;
       }
       $0_1 = 0;
       break label$8;
      }
      $0_1 = 0;
      break label$8;
     }
     $0_1 = 0;
     break label$8;
    }
    $0_1 = 0;
   }
  }
  global$0 = $5_1 + 208 | 0;
  return $0_1;
 }
 
 function $606($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = 0.0, $7_1 = 0.0;
  label$1 : {
   switch ($0_1 | 0) {
   case 0:
    $0_1 = $1936($1_1, 0);
    $1_1 = $1936($2_1, 0);
    return ($0_1 | 0) < ($1_1 | 0) ? -1 : ($0_1 | 0) > ($1_1 | 0);
   case 1:
    $0_1 = $1937($1_1, 0);
    $1_1 = $1937($2_1, 0);
    return $0_1 >>> 0 < $1_1 >>> 0 ? -1 : $0_1 >>> 0 > $1_1 >>> 0;
   case 2:
    $0_1 = $1939($1_1, 0);
    $1_1 = $1939($2_1, 0);
    return ($0_1 | 0) < ($1_1 | 0) ? -1 : ($0_1 | 0) > ($1_1 | 0);
   case 3:
    $0_1 = $1941($1_1, 0);
    $1_1 = $1941($2_1, 0);
    return $0_1 >>> 0 < $1_1 >>> 0 ? -1 : $0_1 >>> 0 > $1_1 >>> 0;
   case 4:
    $0_1 = $1944($1_1, 0);
    $1_1 = $1944($2_1, 0);
    return ($0_1 | 0) < ($1_1 | 0) ? -1 : ($0_1 | 0) > ($1_1 | 0);
   case 5:
    $0_1 = $1944($1_1, 0);
    $1_1 = $1944($2_1, 0);
    return $0_1 >>> 0 < $1_1 >>> 0 ? -1 : $0_1 >>> 0 > $1_1 >>> 0;
   case 6:
    $0_1 = $1960($1_1, 0);
    $3 = i64toi32_i32$HIGH_BITS;
    $1_1 = $1960($2_1, 0);
    $2_1 = i64toi32_i32$HIGH_BITS;
    return $0_1 >>> 0 < $1_1 >>> 0 & ($2_1 | 0) >= ($3 | 0) | ($2_1 | 0) > ($3 | 0) ? -1 : $1_1 >>> 0 < $0_1 >>> 0 & ($2_1 | 0) <= ($3 | 0) | ($2_1 | 0) < ($3 | 0);
   case 7:
    $1_1 = $1960($1_1, 0);
    $0_1 = i64toi32_i32$HIGH_BITS;
    $3 = $1960($2_1, 0);
    $2_1 = i64toi32_i32$HIGH_BITS;
    return ($0_1 | 0) == ($2_1 | 0) & $1_1 >>> 0 < $3 >>> 0 | $0_1 >>> 0 < $2_1 >>> 0 ? -1 : ($2_1 | 0) == ($0_1 | 0) & $1_1 >>> 0 > $3 >>> 0 | $0_1 >>> 0 > $2_1 >>> 0;
   case 8:
    $4_1 = $1963($1_1, 0);
    $5_1 = $1963($2_1, 0);
    return $4_1 < $5_1 ? -1 : $4_1 > $5_1;
   case 9:
    $6_1 = $1967($1_1, 0);
    $7_1 = $1967($2_1, 0);
    $3 = $6_1 < $7_1 ? -1 : $6_1 > $7_1;
    break;
   default:
    break label$1;
   };
  }
  return $3;
 }
 
 function $609($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = Math_fround(0);
  $13 = global$0 - 16 | 0;
  global$0 = $13;
  $7_1 = $1944(0, 73568);
  if (!(($2_1 | 0) >= ($3 | 0) | $1_1 != Math_fround(0.0))) {
   $1_1 = Math_fround($1963($7_1, 12064) * Math_fround($3 - $2_1 | 0))
  }
  $14 = $5_1 & 32;
  $11_1 = $5_1 & 1048576;
  $6_1 = $11_1 >>> 20 | 0;
  label$3 : {
   label$4 : {
    if (($1944($7_1, 7188) | 0) != 1) {
     break label$4
    }
    if (!$128(0)) {
     break label$4
    }
    if (!$180(Math_fround($1963($7_1 + 48 | 0, 0) * Math_fround(.5)))) {
     break label$4
    }
    $8 = $1963(($7_1 + ($6_1 << 2) | 0) + 880 | 0, 0);
    $8 = $1937($7_1 + 254 | 0, 0) ? Math_fround($8 * Math_fround(.009999999776482582)) : $8;
    $8 = $1937($7_1 + 253 | 0, 0) ? Math_fround($8 * Math_fround(10.0)) : $8;
    break label$3;
   }
   if (($1944($7_1, 7188) | 0) != 4) {
    break label$3
   }
   $9 = $13 + 8 | 0;
   $154($9, 6, 5, Math_fround(.10000000149011612), Math_fround(10.0));
   $8 = $1963(($6_1 << 2) + $9 | 0, 0);
   $10_1 = $1963(48432, 0);
   $1_1 = $1_1 >= $10_1 ? $1_1 : $10_1;
  }
  $1_1 = Math_fround($8 * $1_1);
  $1_1 = $11_1 ? Math_fround(-$1_1) : $1_1;
  label$10 : {
   if (!$14) {
    break label$10
   }
   $6_1 = $3 - $2_1 | 0;
   if (($6_1 | 0) <= 0) {
    break label$10
   }
   $1_1 = Math_fround($1_1 / Math_fround($6_1 | 0));
  }
  $6_1 = $1937($7_1, 7148);
  $11_1 = ($2_1 | 0) >= ($3 | 0);
  $12_1 = 0;
  label$13 : {
   if ($11_1) {
    break label$13
   }
   $9 = $1944($0_1, 0);
   if (($3 | 0) <= ($9 | 0)) {
    $12_1 = 1;
    if ($1_1 > Math_fround(0.0)) {
     break label$13
    }
   }
   $12_1 = ($2_1 | 0) >= ($9 | 0) & $1_1 < Math_fround(0.0);
  }
  label$15 : {
   label$16 : {
    if ($12_1 | $6_1 & 255) {
     $1973($7_1, 12060, 0);
     $6_1 = 0;
     break label$16;
    }
    if ($1_1 == Math_fround(0.0)) {
     break label$15
    }
    $1986($7_1, 12060, Math_fround($1_1 + $1963($7_1, 12060)));
    $6_1 = 1;
   }
   $1968($7_1, 12057, $6_1);
  }
  $6_1 = 0;
  label$19 : {
   if (!$1937($7_1, 12057)) {
    break label$19
   }
   $6_1 = $1944($0_1, 0);
   label$21 : {
    if ($14) {
     $10_1 = $1669(Math_fround(.10000000149011612), Math_fround(1.0));
     $8 = $616($6_1, $2_1, $3, 1, $10_1, Math_fround(0.0));
     $6_1 = $617(Math_fround($8 + $1963($7_1, 12060)), $2_1, $3, 1, $10_1, Math_fround(0.0));
     break label$21;
    }
    $8 = Math_fround(0.0);
    $10_1 = Math_fround(0.0);
    $15_1 = $1963($7_1, 12060);
    label$24 : {
     if (Math_fround(Math_abs($15_1)) < Math_fround(2147483648.0)) {
      $9 = ~~$15_1;
      break label$24;
     }
     $9 = -2147483648;
    }
    $6_1 = $9 + $6_1 | 0;
   }
   if ($5_1 & 64) {
    $5_1 = $6_1
   } else {
    $5_1 = $618($4_1, $6_1)
   }
   $1968($7_1, 12057, 0);
   label$28 : {
    if ($14) {
     $8 = Math_fround($616($5_1, $2_1, $3, 1, $10_1, Math_fround(0.0)) - $8);
     break label$28;
    }
    $8 = Math_fround($5_1 - $1944($0_1, 0) | 0);
   }
   $1986($7_1, 12060, Math_fround($1963($7_1, 12060) - $8));
   $4_1 = $1944($0_1, 0);
   label$30 : {
    if ($11_1) {
     $2_1 = $5_1;
     break label$30;
    }
    if (($4_1 | 0) == ($5_1 | 0)) {
     $2_1 = $5_1;
     break label$30;
    }
    $2_1 = (!($1_1 < Math_fround(0.0)) | ($4_1 | 0) >= ($5_1 | 0)) & ($2_1 | 0) <= ($5_1 | 0) ? $5_1 : $2_1;
    if (($2_1 | 0) <= ($3 | 0) & (!($1_1 > Math_fround(0.0)) | ($2_1 | 0) >= ($4_1 | 0))) {
     break label$30
    }
    $2_1 = $3;
   }
   $6_1 = ($2_1 | 0) != ($4_1 | 0);
   if (($2_1 | 0) == ($4_1 | 0)) {
    break label$19
   }
   $1973($0_1, 0, $2_1);
   $6_1 = 1;
  }
  $0_1 = $6_1;
  global$0 = $13 + 16 | 0;
  return $0_1;
 }
 
 function $610($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = Math_fround(0);
  $17_1 = global$0 - 16 | 0;
  global$0 = $17_1;
  $10_1 = $1944(0, 73568);
  if (!($2_1 >>> 0 >= $3 >>> 0 | $1_1 != Math_fround(0.0))) {
   $1_1 = Math_fround($1963($10_1, 12064) * Math_fround($3 - $2_1 >>> 0))
  }
  $13 = $5_1 & 1048576;
  $6_1 = $13 >>> 20 | 0;
  label$3 : {
   label$4 : {
    if (($1944($10_1, 7188) | 0) != 1) {
     break label$4
    }
    if (!$128(0)) {
     break label$4
    }
    if (!$180(Math_fround($1963($10_1 + 48 | 0, 0) * Math_fround(.5)))) {
     break label$4
    }
    $7_1 = $1963(($10_1 + ($6_1 << 2) | 0) + 880 | 0, 0);
    $7_1 = $1937($10_1 + 254 | 0, 0) ? Math_fround($7_1 * Math_fround(.009999999776482582)) : $7_1;
    $7_1 = $1937($10_1 + 253 | 0, 0) ? Math_fround($7_1 * Math_fround(10.0)) : $7_1;
    break label$3;
   }
   if (($1944($10_1, 7188) | 0) != 4) {
    break label$3
   }
   $16_1 = $17_1 + 8 | 0;
   $154($16_1, 6, 5, Math_fround(.10000000149011612), Math_fround(10.0));
   $7_1 = $1963(($6_1 << 2) + $16_1 | 0, 0);
   $11_1 = $1963(48432, 0);
   $1_1 = $1_1 >= $11_1 ? $1_1 : $11_1;
  }
  $1_1 = Math_fround($7_1 * $1_1);
  $1_1 = $13 ? Math_fround(-$1_1) : $1_1;
  $13 = ($2_1 | 0) == ($3 | 0);
  $16_1 = $5_1 & 32;
  $1_1 = $13 | !$16_1 ? $1_1 : Math_fround($1_1 / Math_fround($3 - $2_1 >>> 0));
  $6_1 = $1937($10_1, 7148);
  $18_1 = $2_1 >>> 0 >= $3 >>> 0;
  $14 = 0;
  label$13 : {
   if ($18_1) {
    break label$13
   }
   $15_1 = $1944($0_1, 0);
   if ($3 >>> 0 <= $15_1 >>> 0) {
    $14 = 1;
    if ($1_1 > Math_fround(0.0)) {
     break label$13
    }
   }
   $14 = $2_1 >>> 0 >= $15_1 >>> 0 & $1_1 < Math_fround(0.0);
  }
  label$15 : {
   label$16 : {
    if ($14 | $6_1 & 255) {
     $1973($10_1, 12060, 0);
     $6_1 = 0;
     break label$16;
    }
    if ($1_1 == Math_fround(0.0)) {
     break label$15
    }
    $1986($10_1, 12060, Math_fround($1_1 + $1963($10_1, 12060)));
    $6_1 = 1;
   }
   $1968($10_1, 12057, $6_1);
  }
  $6_1 = 0;
  label$19 : {
   if (!$1937($10_1, 12057)) {
    break label$19
   }
   $6_1 = $1944($0_1, 0);
   label$21 : {
    label$22 : {
     if ($16_1) {
      $7_1 = $1669(Math_fround(.10000000149011612), Math_fround(1.0));
      $11_1 = Math_fround(0.0);
      if (!$13) {
       $19 = $2_1 >>> 0 > $3 >>> 0;
       $15_1 = $19 ? $3 : $2_1;
       $11_1 = Math_fround($15_1 >>> 0);
       $11_1 = $7_1 > $11_1 ? $7_1 : $11_1;
       $14 = $2_1 >>> 0 < $3 >>> 0 ? $3 : $2_1;
       $8 = Math_fround(($6_1 >>> 0 < $15_1 >>> 0 ? $15_1 : $6_1 >>> 0 < $14 >>> 0 ? $6_1 : $14) >>> 0);
       $9 = Math_fround(0.0);
       label$26 : {
        if ($11_1 >= $8) {
         break label$26
        }
        $12_1 = Math_fround($14 >>> 0);
        $12_1 = $7_1 > $12_1 ? $7_1 : $12_1;
        $9 = Math_fround(1.0);
        if ($12_1 <= $8) {
         break label$26
        }
        $9 = Math_fround($1642(Math_fround($8 / $11_1)) / $1642(Math_fround($12_1 / $11_1)));
       }
       $11_1 = $9;
       $11_1 = $19 ? Math_fround(Math_fround(1.0) - $11_1) : $11_1;
      }
      if ($13) {
       break label$22
      }
      $8 = Math_fround($11_1 + $1963($10_1, 12060));
      if ($8 <= Math_fround(0.0)) {
       break label$22
      }
      $6_1 = $3;
      if ($8 >= Math_fround(1.0)) {
       break label$21
      }
      $12_1 = Math_fround($3 >>> 0);
      $12_1 = $7_1 > $12_1 ? $7_1 : $12_1;
      $9 = Math_fround($2_1 >>> 0);
      $9 = $7_1 > $9 ? $7_1 : $9;
      $6_1 = $2_1 >>> 0 > $3 >>> 0;
      $20_1 = $6_1 ? $12_1 : $9;
      $8 = Math_fround($20_1 * $1669(Math_fround(($6_1 ? $9 : $12_1) / $20_1), $6_1 ? Math_fround(Math_fround(1.0) - $8) : $8));
      if ($8 < Math_fround(4294967296.0) & $8 >= Math_fround(0.0)) {
       $6_1 = ~~$8 >>> 0;
       break label$21;
      }
      $6_1 = 0;
      break label$21;
     }
     $11_1 = Math_fround(0.0);
     $7_1 = Math_fround(0.0);
     $8 = $1963($10_1, 12060);
     label$29 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $15_1 = ~~$8;
       break label$29;
      }
      $15_1 = -2147483648;
     }
     $6_1 = $15_1 + $6_1 | 0;
     break label$21;
    }
    $6_1 = $2_1;
   }
   if ($5_1 & 64) {
    $5_1 = $6_1
   } else {
    $5_1 = $618($4_1, $6_1)
   }
   $1968($10_1, 12057, 0);
   label$33 : {
    if ($16_1) {
     if ($13) {
      $7_1 = Math_fround(0.0)
     } else {
      $13 = $2_1 >>> 0 > $3 >>> 0;
      $4_1 = $13 ? $3 : $2_1;
      $8 = Math_fround($4_1 >>> 0);
      $8 = $7_1 > $8 ? $7_1 : $8;
      $6_1 = $2_1 >>> 0 < $3 >>> 0 ? $3 : $2_1;
      $12_1 = Math_fround(($4_1 >>> 0 > $5_1 >>> 0 ? $4_1 : $5_1 >>> 0 < $6_1 >>> 0 ? $5_1 : $6_1) >>> 0);
      $9 = Math_fround(0.0);
      label$36 : {
       if ($8 >= $12_1) {
        break label$36
       }
       $9 = Math_fround($6_1 >>> 0);
       $7_1 = $7_1 > $9 ? $7_1 : $9;
       $9 = Math_fround(1.0);
       if ($7_1 <= $12_1) {
        break label$36
       }
       $9 = Math_fround($1642(Math_fround($12_1 / $8)) / $1642(Math_fround($7_1 / $8)));
      }
      $7_1 = $9;
      $7_1 = $13 ? Math_fround(Math_fround(1.0) - $7_1) : $7_1;
     }
     $7_1 = Math_fround($7_1 - $11_1);
     break label$33;
    }
    $7_1 = Math_fround($5_1 - $1944($0_1, 0) | 0);
   }
   $1986($10_1, 12060, Math_fround($1963($10_1, 12060) - $7_1));
   $4_1 = $1944($0_1, 0);
   label$37 : {
    if ($18_1) {
     $2_1 = $5_1;
     break label$37;
    }
    if (($4_1 | 0) == ($5_1 | 0)) {
     $2_1 = $5_1;
     break label$37;
    }
    $2_1 = (!($1_1 < Math_fround(0.0)) | $4_1 >>> 0 >= $5_1 >>> 0) & $2_1 >>> 0 <= $5_1 >>> 0 ? $5_1 : $2_1;
    if ($2_1 >>> 0 <= $3 >>> 0 & (!($1_1 > Math_fround(0.0)) | $2_1 >>> 0 >= $4_1 >>> 0)) {
     break label$37
    }
    $2_1 = $3;
   }
   $6_1 = ($2_1 | 0) != ($4_1 | 0);
   if (($2_1 | 0) == ($4_1 | 0)) {
    break label$19
   }
   $1973($0_1, 0, $2_1);
   $6_1 = 1;
  }
  $0_1 = $6_1;
  global$0 = $17_1 + 16 | 0;
  return $0_1;
 }
 
 function $615($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  while (1) {
   $2_1 = $1_1;
   $1_1 = $1937($0_1, 0);
   label$2 : {
    if (!$1_1) {
     $3 = 3;
     break label$2;
    }
    label$4 : {
     if (($1_1 | 0) != 37) {
      break label$4
     }
     if (($1937($0_1, 1) | 0) == 37) {
      break label$4
     }
     $2_1 = $0_1;
     $3 = 1;
     break label$2;
    }
    $3 = 0;
    $0_1 = ((($1_1 | 0) == 37) + $0_1 | 0) + 1 | 0;
   }
   $4_1 = $0_1;
   $1_1 = $2_1;
   if (!$3) {
    continue
   }
   break;
  };
  $0_1 = $2_1;
  label$5 : {
   switch ($3 - 2 | 0) {
   case 0:
    wasm2js_trap();
   case 1:
    $0_1 = $4_1;
    break;
   default:
    break label$5;
   };
  }
  if (($1937($0_1, 0) | 0) != 37) {
   return 3
  }
  while (1) {
   $1_1 = $0_1;
   $2_1 = $0_1 + 1 | 0;
   $0_1 = $2_1;
   $4_1 = $1937($1_1, 1);
   if (($4_1 - 48 & 255) >>> 0 < 10) {
    continue
   }
   break;
  };
  $0_1 = 2147483647;
  if (($4_1 & 255) == 46) {
   $5_1 = ($1937($1_1, 2) | 0) == 45;
   $0_1 = $5_1 + ($1_1 + 2 | 0) | 0;
   $2_1 = (($1937($0_1, 0) | 0) == 43) + $0_1 | 0;
   $0_1 = $1937($2_1, 0);
   label$11 : {
    if (($0_1 - 48 & 255) >>> 0 > 9) {
     $3 = 0;
     break label$11;
    }
    $1_1 = 0;
    while (1) {
     $4_1 = $0_1;
     $0_1 = $1937($2_1, 1);
     $2_1 = $2_1 + 1 | 0;
     $1_1 = (($4_1 << 24 >> 24) + Math_imul($1_1, 10) | 0) - 48 | 0;
     $3 = $1_1;
     if (($0_1 - 48 & 255) >>> 0 < 10) {
      continue
     }
     break;
    };
   }
   $0_1 = $5_1 ? 0 - $3 | 0 : $3;
   $1_1 = $0_1 >>> 0 > 99 ? 3 : $0_1;
  } else {
   $1_1 = $0_1
  }
  $0_1 = $1937($2_1, 0);
  $1_1 = ($0_1 | 32) == 101 ? -1 : $1_1;
  label$15 : {
   label$16 : {
    if (($0_1 | 0) != 103) {
     if (($0_1 | 0) != 71) {
      break label$15
     }
     if (($1_1 | 0) == 2147483647) {
      break label$16
     }
     break label$15;
    }
    if (($1_1 | 0) != 2147483647) {
     break label$15
    }
   }
   $1_1 = -1;
  }
  return ($1_1 | 0) == 2147483647 ? 3 : $1_1;
 }
 
 function $616($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = 0, $9 = Math_fround(0), $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = 0, $15_1 = 0;
  if (($1_1 | 0) != ($2_1 | 0)) {
   $14 = ($1_1 | 0) > ($2_1 | 0);
   $10_1 = $14 ? $2_1 : $1_1;
   $8 = ($1_1 | 0) < ($2_1 | 0) ? $2_1 : $1_1;
   $15_1 = ($0_1 | 0) < ($10_1 | 0) ? $10_1 : ($0_1 | 0) < ($8 | 0) ? $0_1 : $8;
   if ($3) {
    $6_1 = Math_fround(-$4_1);
    $13 = Math_fround($8 | 0);
    $9 = Math_fround(Math_abs($13)) < $4_1 ? (($8 | 0) < 0 ? $6_1 : $4_1) : $13;
    $12_1 = Math_fround($10_1 | 0);
    if (($8 | 0) >= 0 | $10_1) {
     $1_1 = ($10_1 | 0) < 0;
     $9 = $8 ? $9 : $1_1 ? $6_1 : $9;
     $6_1 = Math_fround(Math_abs($12_1)) < $4_1 ? ($1_1 ? $6_1 : $4_1) : $12_1;
    }
    $11_1 = Math_fround($15_1 | 0);
    label$5 : {
     if ($11_1 <= $6_1) {
      break label$5
     }
     $7_1 = Math_fround(1.0);
     if ($9 <= $11_1) {
      break label$5
     }
     if ((Math_imul($8, $10_1) | 0) < 0) {
      $7_1 = Math_fround(Math_fround(-$12_1) / Math_fround($13 - $12_1));
      if (!$0_1) {
       break label$5
      }
      if (($0_1 | 0) < 0) {
       $7_1 = Math_fround(Math_fround($7_1 - $5_1) * Math_fround(Math_fround(1.0) - Math_fround($1642(Math_fround(Math_fround(-$11_1) / $4_1)) / $1642(Math_fround(Math_fround(-$6_1) / $4_1)))));
       break label$5;
      }
      $6_1 = Math_fround($1642(Math_fround($11_1 / $4_1)) / $1642(Math_fround($9 / $4_1)));
      $4_1 = Math_fround($7_1 + $5_1);
      $7_1 = Math_fround(Math_fround($6_1 * Math_fround(Math_fround(1.0) - $4_1)) + $4_1);
      break label$5;
     }
     if (($8 | $10_1) < 0) {
      $7_1 = Math_fround(Math_fround(1.0) - Math_fround($1642(Math_fround($11_1 / $9)) / $1642(Math_fround($6_1 / $9))));
      break label$5;
     }
     $7_1 = Math_fround($1642(Math_fround($11_1 / $6_1)) / $1642(Math_fround($9 / $6_1)));
    }
    return $14 ? Math_fround(Math_fround(1.0) - $7_1) : $7_1;
   }
   $4_1 = Math_fround(Math_fround($15_1 - $1_1 | 0) / Math_fround($2_1 - $1_1 | 0));
  } else {
   $4_1 = Math_fround(0.0)
  }
  return $4_1;
 }
 
 function $617($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0);
  if (($1_1 | 0) == ($2_1 | 0)) {
   return $1_1
  }
  folding_inner0 : {
   label$2 : {
    if ($3) {
     if ($0_1 <= Math_fround(0.0)) {
      return $1_1
     }
     if ($0_1 >= Math_fround(1.0)) {
      return $2_1
     }
     $6_1 = Math_fround(-$4_1);
     $10_1 = ($1_1 | 0) < 0;
     $7_1 = Math_fround($1_1 | 0);
     $8 = Math_fround(Math_abs($7_1)) < $4_1 ? ($10_1 ? $6_1 : $4_1) : $7_1;
     $9 = Math_fround($2_1 | 0);
     $11_1 = Math_fround(Math_abs($9)) < $4_1 ? (($2_1 | 0) < 0 ? $6_1 : $4_1) : $9;
     $3 = ($1_1 | 0) > ($2_1 | 0);
     $12_1 = $3 ? $8 : $11_1;
     $6_1 = $10_1 ? ($2_1 ? $12_1 : $6_1) : $12_1;
     $8 = $3 ? $11_1 : $8;
     $0_1 = $3 ? Math_fround(Math_fround(1.0) - $0_1) : $0_1;
     if ((Math_imul($1_1, $2_1) | 0) < 0) {
      $9 = Math_fround(Math_fround(-Math_fround((($1_1 | 0) < ($2_1 | 0) ? $1_1 : $2_1) | 0)) / Math_fround(Math_abs(Math_fround($9 - $7_1))));
      $7_1 = Math_fround($9 + $5_1);
      $5_1 = Math_fround($9 - $5_1);
      if ($0_1 >= $5_1) {
       $1_1 = 0;
       if ($0_1 <= $7_1) {
        break label$2
       }
      }
      if ($0_1 < $9) {
       $0_1 = Math_fround(Math_fround(-$1669(Math_fround(Math_fround(-$8) / $4_1), Math_fround(Math_fround(1.0) - Math_fround($0_1 / $5_1)))) * $4_1);
       if (Math_fround(Math_abs($0_1)) < Math_fround(2147483648.0)) {
        break folding_inner0
       }
       return -2147483648;
      }
      $0_1 = Math_fround($1669(Math_fround($6_1 / $4_1), Math_fround(Math_fround($0_1 - $7_1) / Math_fround(Math_fround(1.0) - $7_1))) * $4_1);
      if (Math_fround(Math_abs($0_1)) < Math_fround(2147483648.0)) {
       break folding_inner0
      }
      return -2147483648;
     }
     if (($1_1 | $2_1) < 0) {
      $0_1 = Math_fround($6_1 * $1669(Math_fround($8 / $6_1), Math_fround(Math_fround(1.0) - $0_1)));
      if (Math_fround(Math_abs($0_1)) < Math_fround(2147483648.0)) {
       break folding_inner0
      }
      return -2147483648;
     }
     $0_1 = Math_fround($8 * $1669(Math_fround($6_1 / $8), $0_1));
     if (Math_fround(Math_abs($0_1)) < Math_fround(2147483648.0)) {
      break folding_inner0
     }
     return -2147483648;
    }
    if (!($0_1 < Math_fround(1.0))) {
     return $2_1
    }
    $0_1 = Math_fround((($1_1 | 0) > ($2_1 | 0) ? Math_fround(-.5) : Math_fround(.5)) + Math_fround(Math_fround($2_1 - $1_1 | 0) * $0_1));
    label$17 : {
     if (Math_fround(Math_abs($0_1)) < Math_fround(2147483648.0)) {
      $2_1 = ~~$0_1;
      break label$17;
     }
     $2_1 = -2147483648;
    }
    $1_1 = $2_1 + $1_1 | 0;
   }
   return $1_1;
  }
  return ~~$0_1;
 }
 
 function $618($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $6_1 = global$0 - 112 | 0;
  global$0 = $6_1;
  while (1) {
   $2_1 = $3;
   $3 = $1937($0_1, 0);
   label$2 : {
    if (!$3) {
     $4_1 = 3;
     break label$2;
    }
    label$4 : {
     if (($3 | 0) != 37) {
      break label$4
     }
     if (($1937($0_1, 1) | 0) == 37) {
      break label$4
     }
     $2_1 = $0_1;
     $4_1 = 1;
     break label$2;
    }
    $4_1 = 0;
    $0_1 = ((($3 | 0) == 37) + $0_1 | 0) + 1 | 0;
   }
   $5_1 = $0_1;
   $3 = $2_1;
   if (!$4_1) {
    continue
   }
   break;
  };
  $0_1 = $2_1;
  label$5 : {
   switch ($4_1 - 2 | 0) {
   case 0:
    wasm2js_trap();
   case 1:
    $0_1 = $5_1;
    break;
   default:
    break label$5;
   };
  }
  $2_1 = $0_1;
  label$8 : {
   if (($1937($0_1, 0) | 0) != 37) {
    break label$8
   }
   if (($1937($2_1, 1) | 0) == 37) {
    break label$8
   }
   $5_1 = $2_1;
   $0_1 = $1937($2_1, 0);
   label$11 : {
    if (($0_1 | 0) != 37) {
     break label$11
    }
    $3 = $2_1;
    while (1) {
     $4_1 = $0_1 << 24 >> 24;
     if (!(1 << $4_1 - 65 & 2304 | ($0_1 - 65 & 255) >>> 0 > 25)) {
      $5_1 = $3 + 1 | 0;
      break label$11;
     }
     if (!(1 << $4_1 - 97 & 38275712 | ($0_1 - 97 & 255) >>> 0 > 25)) {
      $5_1 = $3 + 1 | 0;
      break label$11;
     }
     $0_1 = $1937($3, 1);
     $3 = $3 + 1 | 0;
     $5_1 = $3;
     if ($0_1) {
      continue
     }
     break;
    };
   }
   $4_1 = $6_1 + 80 | 0;
   if ($2_1 >>> 0 < $5_1 >>> 0) {
    $3 = $6_1 + 80 | 0;
    while (1) {
     $0_1 = $2_1 + 1 | 0;
     label$17 : {
      label$18 : {
       label$19 : {
        $2_1 = $1937($2_1, 0);
        switch ($2_1 - 36 | 0) {
        case 0:
        case 3:
         break label$17;
        case 1:
        case 2:
         break label$18;
        default:
         break label$19;
        };
       }
       if (($2_1 | 0) != 95) {
        break label$18
       }
       break label$17;
      }
      $1968($3, 0, $2_1);
      $3 = $3 + 1 | 0;
     }
     $4_1 = $3;
     $2_1 = $0_1;
     if (($0_1 | 0) != ($5_1 | 0)) {
      continue
     }
     break;
    };
   }
   $1968($4_1, 0, 0);
   $1973($6_1, 0, $1_1);
   $0_1 = $6_1 + 16 | 0;
   $21($0_1, 64, $6_1 + 80 | 0, $6_1);
   while (1) {
    $1_1 = $0_1;
    $0_1 = $0_1 + 1 | 0;
    $2_1 = $1937($1_1, 0);
    if (($2_1 | 0) == 32) {
     continue
    }
    break;
   };
   $4_1 = 0;
   $5_1 = ($2_1 | 0) == 45;
   $0_1 = $1_1 + $5_1 | 0;
   $2_1 = (($1937($0_1, 0) | 0) == 43) + $0_1 | 0;
   $0_1 = $1937($2_1, 0);
   if (($0_1 - 48 & 255) >>> 0 <= 9) {
    $3 = 0;
    while (1) {
     $1_1 = $0_1;
     $0_1 = $1937($2_1, 1);
     $2_1 = $2_1 + 1 | 0;
     $3 = (($1_1 << 24 >> 24) + Math_imul($3, 10) | 0) - 48 | 0;
     $4_1 = $3;
     if (($0_1 - 48 & 255) >>> 0 < 10) {
      continue
     }
     break;
    };
   }
   $1_1 = $5_1 ? 0 - $4_1 | 0 : $4_1;
  }
  $0_1 = $1_1;
  global$0 = $6_1 + 112 | 0;
  return $0_1;
 }
 
 function $620($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  var $9 = 0, $10_1 = 0, $11_1 = 0.0, $12_1 = 0.0, $13 = 0, $14 = 0, $15_1 = 0.0, $16_1 = 0.0, $17_1 = 0, $18_1 = Math_fround(0), $19 = 0, $20_1 = 0, $21_1 = 0;
  label$1 : {
   if (($2_1 | 0) == ($4_1 | 0) & ($3 | 0) == ($5_1 | 0)) {
    $7_1 = Math_fround(0.0)
   } else {
    $20_1 = $2_1 >>> 0 > $4_1 >>> 0 & ($3 | 0) >= ($5_1 | 0) | ($3 | 0) > ($5_1 | 0);
    $9 = $20_1;
    $13 = $9 ? $4_1 : $2_1;
    $10_1 = $2_1 >>> 0 < $4_1 >>> 0 & ($3 | 0) <= ($5_1 | 0) | ($3 | 0) < ($5_1 | 0);
    $14 = $10_1 ? $4_1 : $2_1;
    $10_1 = $10_1 ? $5_1 : $3;
    $17_1 = $0_1 >>> 0 < $14 >>> 0 & ($10_1 | 0) >= ($1_1 | 0) | ($1_1 | 0) < ($10_1 | 0);
    $9 = $9 ? $5_1 : $3;
    $21_1 = $0_1 >>> 0 < $13 >>> 0 & ($1_1 | 0) <= ($9 | 0) | ($1_1 | 0) < ($9 | 0);
    $19 = $21_1 ? $13 : $17_1 ? $0_1 : $14;
    $17_1 = $21_1 ? $9 : $17_1 ? $1_1 : $10_1;
    if ($6_1) {
     $18_1 = Math_fround(-$7_1);
     $11_1 = +($14 >>> 0) + +($10_1 | 0) * 4294967296.0;
     $15_1 = +$7_1;
     $11_1 = $15_1 > Math_abs($11_1) ? +(($10_1 | 0) < 0 ? $18_1 : $7_1) : $11_1;
     if (!(($9 | $13) != 0 | ($10_1 | 0) >= 0)) {
      $12_1 = +$18_1;
      break label$1;
     }
     $12_1 = +($13 >>> 0) + +($9 | 0) * 4294967296.0;
     $12_1 = Math_abs($12_1) < $15_1 ? +(($9 | 0) < 0 ? $18_1 : $7_1) : $12_1;
     if ($10_1 | $14 | ($9 | 0) >= 0) {
      break label$1
     }
     $11_1 = +$18_1;
     break label$1;
    }
    $7_1 = Math_fround((+($19 - $2_1 >>> 0) + +($17_1 - (($2_1 >>> 0 > $19 >>> 0) + $3 | 0) | 0) * 4294967296.0) / (+($4_1 - $2_1 >>> 0) + +($5_1 - (($2_1 >>> 0 > $4_1 >>> 0) + $3 | 0) | 0) * 4294967296.0));
   }
   return $7_1;
  }
  $16_1 = +($19 >>> 0) + +($17_1 | 0) * 4294967296.0;
  $7_1 = Math_fround(0.0);
  label$7 : {
   if ($16_1 <= $12_1) {
    break label$7
   }
   $7_1 = Math_fround(1.0);
   if ($11_1 <= $16_1) {
    break label$7
   }
   __wasm_i64_mul($13, $9, $14, $10_1);
   if ((i64toi32_i32$HIGH_BITS | 0) < 0) {
    $7_1 = Math_fround(+($13 >>> 0) + +($9 | 0) * 4294967296.0);
    $7_1 = Math_fround(Math_fround(-$7_1) / Math_fround(Math_fround(+($14 >>> 0) + +($10_1 | 0) * 4294967296.0) - $7_1));
    if (!($0_1 | $1_1)) {
     break label$7
    }
    if (($1_1 | 0) < 0) {
     $7_1 = Math_fround(Math_fround($7_1 - $8) * Math_fround(Math_fround(1.0) - Math_fround($1637(-$16_1 / $15_1) / $1637(-$12_1 / $15_1))));
     break label$7;
    }
    $7_1 = Math_fround($7_1 + $8);
    $7_1 = Math_fround(Math_fround(Math_fround($1637($16_1 / $15_1) / $1637($11_1 / $15_1)) * Math_fround(Math_fround(1.0) - $7_1)) + $7_1);
    break label$7;
   }
   if (($9 | $10_1) < 0) {
    $7_1 = Math_fround(Math_fround(1.0) - Math_fround($1637($16_1 / $11_1) / $1637($12_1 / $11_1)));
    break label$7;
   }
   $7_1 = Math_fround($1637($16_1 / $12_1) / $1637($11_1 / $12_1));
  }
  return $20_1 ? Math_fround(Math_fround(1.0) - $7_1) : $7_1;
 }
 
 function $621($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  var $8 = 0.0, $9 = 0.0, $10_1 = Math_fround(0), $11_1 = 0.0, $12_1 = 0, $13 = 0.0;
  if (!(($1_1 | 0) != ($3 | 0) | ($2_1 | 0) != ($4_1 | 0))) {
   i64toi32_i32$HIGH_BITS = $2_1;
   return $1_1;
  }
  folding_inner1 : {
   folding_inner0 : {
    label$2 : {
     if ($5_1) {
      if ($0_1 <= Math_fround(0.0)) {
       i64toi32_i32$HIGH_BITS = $2_1;
       return $1_1;
      }
      if ($0_1 >= Math_fround(1.0)) {
       i64toi32_i32$HIGH_BITS = $4_1;
       return $3;
      }
      $10_1 = Math_fround(-$6_1);
      $12_1 = ($2_1 | 0) < 0;
      $9 = +($1_1 >>> 0) + +($2_1 | 0) * 4294967296.0;
      $8 = +$6_1;
      $11_1 = $8 > Math_abs($9) ? +($12_1 ? $10_1 : $6_1) : $9;
      $9 = +($3 >>> 0) + +($4_1 | 0) * 4294967296.0;
      $13 = $8 > Math_abs($9) ? +(($4_1 | 0) < 0 ? $10_1 : $6_1) : $9;
      $5_1 = $1_1 >>> 0 > $3 >>> 0 & ($2_1 | 0) >= ($4_1 | 0) | ($2_1 | 0) > ($4_1 | 0);
      $9 = $5_1 ? $11_1 : $13;
      $9 = $12_1 ? ($3 | $4_1 ? $9 : +$10_1) : $9;
      $11_1 = $5_1 ? $13 : $11_1;
      $0_1 = $5_1 ? Math_fround(Math_fround(1.0) - $0_1) : $0_1;
      __wasm_i64_mul($3, $4_1, $1_1, $2_1);
      if ((i64toi32_i32$HIGH_BITS | 0) < 0) {
       $5_1 = $1_1 >>> 0 < $3 >>> 0 & ($2_1 | 0) <= ($4_1 | 0) | ($2_1 | 0) < ($4_1 | 0);
       $10_1 = Math_fround(Math_fround(-Math_fround(+(($5_1 ? $1_1 : $3) >>> 0) + +(($5_1 ? $2_1 : $4_1) | 0) * 4294967296.0)) / Math_fround(Math_abs(Math_fround(Math_fround(+($3 >>> 0) + +($4_1 | 0) * 4294967296.0) - Math_fround(+($1_1 >>> 0) + +($2_1 | 0) * 4294967296.0)))));
       $6_1 = Math_fround($10_1 + $7_1);
       $7_1 = Math_fround($10_1 - $7_1);
       if ($0_1 >= $7_1) {
        $1_1 = 0;
        $2_1 = 0;
        if ($0_1 <= $6_1) {
         break label$2
        }
       }
       if ($0_1 < $10_1) {
        $8 = $8 * -$1656(-$11_1 / $8, +Math_fround(Math_fround(1.0) - Math_fround($0_1 / $7_1)));
        if (Math_abs($8) < 9223372036854775808.0) {
         break folding_inner0
        }
        break folding_inner1;
       }
       $8 = $1656($9 / $8, +Math_fround(Math_fround($0_1 - $6_1) / Math_fround(Math_fround(1.0) - $6_1))) * $8;
       if (Math_abs($8) < 9223372036854775808.0) {
        break folding_inner0
       }
       break folding_inner1;
      }
      if (($2_1 | $4_1) < 0) {
       $8 = $9 * $1656($11_1 / $9, +Math_fround(Math_fround(1.0) - $0_1));
       if (Math_abs($8) < 9223372036854775808.0) {
        break folding_inner0
       }
       break folding_inner1;
      }
      $8 = $11_1 * $1656($9 / $11_1, +$0_1);
      if (Math_abs($8) < 9223372036854775808.0) {
       break folding_inner0
      }
      break folding_inner1;
     }
     if (!($0_1 < Math_fround(1.0))) {
      i64toi32_i32$HIGH_BITS = $4_1;
      return $3;
     }
     $5_1 = $1_1 >>> 0 > $3 >>> 0;
     $8 = ($5_1 & ($2_1 | 0) >= ($4_1 | 0) | ($2_1 | 0) > ($4_1 | 0) ? -.5 : .5) + +Math_fround(Math_fround(+($3 - $1_1 >>> 0) + +($4_1 - ($2_1 + $5_1 | 0) | 0) * 4294967296.0) * $0_1);
     label$17 : {
      if (Math_abs($8) < 9223372036854775808.0) {
       $4_1 = Math_abs($8) >= 1.0 ? ~~($8 > 0.0 ? Math_min(Math_floor($8 * 2.3283064365386963e-10), 4294967295.0) : Math_ceil(($8 - +(~~$8 >>> 0 >>> 0)) * 2.3283064365386963e-10)) >>> 0 : 0;
       $3 = ~~$8 >>> 0;
       break label$17;
      }
      $4_1 = -2147483648;
      $3 = 0;
     }
     $2_1 = $2_1 + $4_1 | 0;
     $4_1 = $1_1;
     $1_1 = $1_1 + $3 | 0;
     $2_1 = $4_1 >>> 0 > $1_1 >>> 0 ? $2_1 + 1 | 0 : $2_1;
    }
    i64toi32_i32$HIGH_BITS = $2_1;
    return $1_1;
   }
   i64toi32_i32$HIGH_BITS = Math_abs($8) >= 1.0 ? ~~($8 > 0.0 ? Math_min(Math_floor($8 * 2.3283064365386963e-10), 4294967295.0) : Math_ceil(($8 - +(~~$8 >>> 0 >>> 0)) * 2.3283064365386963e-10)) >>> 0 : 0;
   return ~~$8 >>> 0;
  }
  i64toi32_i32$HIGH_BITS = -2147483648;
  return 0;
 }
 
 function $622($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $6_1 = global$0 - 112 | 0;
  global$0 = $6_1;
  while (1) {
   $4_1 = $3;
   $3 = $1937($0_1, 0);
   label$2 : {
    if (!$3) {
     $3 = $0_1;
     $7_1 = 3;
     break label$2;
    }
    label$4 : {
     if (($3 | 0) != 37) {
      break label$4
     }
     if (($1937($0_1, 1) | 0) == 37) {
      break label$4
     }
     $3 = $0_1;
     $4_1 = $0_1;
     $7_1 = 1;
     break label$2;
    }
    $3 = ((($3 | 0) == 37) + $0_1 | 0) + 1 | 0;
    $7_1 = 0;
   }
   $5_1 = $3;
   $0_1 = $3;
   $3 = $4_1;
   if (!$7_1) {
    continue
   }
   break;
  };
  $0_1 = $4_1;
  label$5 : {
   switch ($7_1 - 2 | 0) {
   case 0:
    wasm2js_trap();
   case 1:
    $0_1 = $5_1;
    break;
   default:
    break label$5;
   };
  }
  $4_1 = $0_1;
  label$8 : {
   if (($1937($0_1, 0) | 0) != 37) {
    break label$8
   }
   if (($1937($4_1, 1) | 0) == 37) {
    break label$8
   }
   $5_1 = $4_1;
   $0_1 = $1937($4_1, 0);
   label$11 : {
    if (($0_1 | 0) != 37) {
     break label$11
    }
    $3 = $4_1;
    while (1) {
     $5_1 = $0_1 << 24 >> 24;
     if (!(1 << $5_1 - 65 & 2304 | ($0_1 - 65 & 255) >>> 0 > 25)) {
      $5_1 = $3 + 1 | 0;
      break label$11;
     }
     if (!(1 << $5_1 - 97 & 38275712 | ($0_1 - 97 & 255) >>> 0 > 25)) {
      $5_1 = $3 + 1 | 0;
      break label$11;
     }
     $0_1 = $1937($3, 1);
     $3 = $3 + 1 | 0;
     $5_1 = $3;
     if ($0_1) {
      continue
     }
     break;
    };
   }
   $3 = $6_1 + 80 | 0;
   if ($4_1 >>> 0 < $5_1 >>> 0) {
    $3 = $6_1 + 80 | 0;
    while (1) {
     $0_1 = $4_1 + 1 | 0;
     label$17 : {
      label$18 : {
       label$19 : {
        $4_1 = $1937($4_1, 0);
        switch ($4_1 - 36 | 0) {
        case 0:
        case 3:
         break label$17;
        case 1:
        case 2:
         break label$18;
        default:
         break label$19;
        };
       }
       if (($4_1 | 0) != 95) {
        break label$18
       }
       break label$17;
      }
      $1968($3, 0, $4_1);
      $3 = $3 + 1 | 0;
     }
     $4_1 = $0_1;
     if (($0_1 | 0) != ($5_1 | 0)) {
      continue
     }
     break;
    };
   }
   $1968($3, 0, 0);
   $1983($6_1, 0, $1_1, $2_1);
   $0_1 = $6_1 + 16 | 0;
   $21($0_1, 64, $6_1 + 80 | 0, $6_1);
   while (1) {
    $1_1 = $0_1;
    $0_1 = $0_1 + 1 | 0;
    $2_1 = $1937($1_1, 0);
    if (($2_1 | 0) == 32) {
     continue
    }
    break;
   };
   $5_1 = 0;
   $4_1 = 0;
   $7_1 = ($2_1 | 0) == 45;
   $0_1 = $7_1 + $1_1 | 0;
   $3 = (($1937($0_1, 0) | 0) == 43) + $0_1 | 0;
   $0_1 = $1937($3, 0);
   if (($0_1 - 48 & 255) >>> 0 <= 9) {
    $1_1 = 0;
    $2_1 = 0;
    while (1) {
     $4_1 = $0_1;
     $0_1 = $1937($3, 1);
     $3 = $3 + 1 | 0;
     $2_1 = __wasm_i64_mul($1_1, $2_1, 10, 0);
     $1_1 = $2_1 + (($4_1 << 24 >> 24) - 48 | 0) | 0;
     $5_1 = $1_1;
     $4_1 = i64toi32_i32$HIGH_BITS;
     $2_1 = $5_1 >>> 0 < $2_1 >>> 0 ? $4_1 + 1 | 0 : $4_1;
     $4_1 = $2_1;
     if (($0_1 - 48 & 255) >>> 0 < 10) {
      continue
     }
     break;
    };
   }
   $2_1 = $7_1 ? 0 - ($4_1 + (($5_1 | 0) != 0) | 0) | 0 : $4_1;
   $1_1 = $7_1 ? 0 - $5_1 | 0 : $5_1;
  }
  global$0 = $6_1 + 112 | 0;
  i64toi32_i32$HIGH_BITS = $2_1;
  return $1_1;
 }
 
 function $624($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = Math_fround(0), $7_1 = 0, $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = Math_fround(0);
  if ($1_1 != $2_1) {
   $7_1 = $1_1 < $2_1;
   $11_1 = $7_1 ? $1_1 : $2_1;
   $6_1 = $7_1 ? $2_1 : $1_1;
   $9 = $0_1 < $11_1 ? $11_1 : $0_1 > $6_1 ? $6_1 : $0_1;
   if ($3) {
    $6_1 = Math_fround(-$4_1);
    $3 = $1_1 > $2_1;
    $10_1 = $3 ? $1_1 : $2_1;
    $7_1 = $10_1 < Math_fround(0.0);
    $11_1 = Math_fround(Math_abs($10_1)) < $4_1 ? ($7_1 ? $6_1 : $4_1) : $10_1;
    $8 = $3 ? $2_1 : $1_1;
    label$3 : {
     if (!(!$7_1 | $8 != Math_fround(0.0))) {
      $2_1 = $11_1;
      break label$3;
     }
     $7_1 = $8 < Math_fround(0.0);
     $2_1 = $10_1 == Math_fround(0.0) ? ($7_1 ? $6_1 : $11_1) : $11_1;
     $6_1 = Math_fround(Math_abs($8)) < $4_1 ? ($7_1 ? $6_1 : $4_1) : $8;
    }
    $1_1 = $2_1;
    $2_1 = Math_fround(0.0);
    label$5 : {
     if ($6_1 >= $9) {
      break label$5
     }
     $2_1 = Math_fround(1.0);
     if ($1_1 <= $9) {
      break label$5
     }
     if (Math_fround($8 * $10_1) < Math_fround(0.0)) {
      $2_1 = Math_fround(Math_fround(-$8) / Math_fround($10_1 - $8));
      if ($0_1 == Math_fround(0.0)) {
       break label$5
      }
      if ($0_1 < Math_fround(0.0)) {
       $2_1 = Math_fround(Math_fround($2_1 - $5_1) * Math_fround(Math_fround(1.0) - Math_fround($1642(Math_fround(Math_fround(-$9) / $4_1)) / $1642(Math_fround(Math_fround(-$6_1) / $4_1)))));
       break label$5;
      }
      $0_1 = Math_fround($2_1 + $5_1);
      $2_1 = Math_fround(Math_fround(Math_fround($1642(Math_fround($9 / $4_1)) / $1642(Math_fround($1_1 / $4_1))) * Math_fround(Math_fround(1.0) - $0_1)) + $0_1);
      break label$5;
     }
     if ($8 < Math_fround(0.0) | $10_1 < Math_fround(0.0)) {
      $2_1 = Math_fround(Math_fround(1.0) - Math_fround($1642(Math_fround($9 / $1_1)) / $1642(Math_fround($6_1 / $1_1))));
      break label$5;
     }
     $2_1 = Math_fround($1642(Math_fround($9 / $6_1)) / $1642(Math_fround($1_1 / $6_1)));
    }
    return $3 ? Math_fround(Math_fround(1.0) - $2_1) : $2_1;
   }
   $0_1 = Math_fround(Math_fround($9 - $1_1) / Math_fround($2_1 - $1_1));
  } else {
   $0_1 = Math_fround(0.0)
  }
  return $0_1;
 }
 
 function $625($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0);
  if ($1_1 == $2_1) {
   return $1_1
  }
  label$2 : {
   if ($3) {
    if ($0_1 <= Math_fround(0.0)) {
     return $1_1
    }
    if ($0_1 >= Math_fround(1.0)) {
     return $2_1
    }
    $6_1 = Math_fround(-$4_1);
    $3 = $1_1 < Math_fround(0.0);
    $7_1 = Math_fround(Math_abs($1_1)) < $4_1 ? ($3 ? $6_1 : $4_1) : $1_1;
    $8 = $6_1;
    $10_1 = Math_fround(Math_abs($2_1)) < $4_1 ? ($2_1 < Math_fround(0.0) ? $6_1 : $4_1) : $2_1;
    $9 = $1_1 > $2_1;
    $6_1 = $9 ? $7_1 : $10_1;
    $6_1 = $3 ? ($2_1 == Math_fround(0.0) ? $8 : $6_1) : $6_1;
    $7_1 = $9 ? $10_1 : $7_1;
    $0_1 = $9 ? Math_fround(Math_fround(1.0) - $0_1) : $0_1;
    if (Math_fround($1_1 * $2_1) < Math_fround(0.0)) {
     $2_1 = Math_fround(Math_fround(-($1_1 < $2_1 ? $1_1 : $2_1)) / Math_fround(Math_abs(Math_fround($2_1 - $1_1))));
     $1_1 = Math_fround($2_1 + $5_1);
     $5_1 = Math_fround($2_1 - $5_1);
     if ($0_1 >= $5_1) {
      $8 = Math_fround(0.0);
      if ($0_1 <= $1_1) {
       break label$2
      }
     }
     if ($0_1 < $2_1) {
      return Math_fround(Math_fround(-$1669(Math_fround(Math_fround(-$7_1) / $4_1), Math_fround(Math_fround(1.0) - Math_fround($0_1 / $5_1)))) * $4_1)
     }
     return Math_fround($1669(Math_fround($6_1 / $4_1), Math_fround(Math_fround($0_1 - $1_1) / Math_fround(Math_fround(1.0) - $1_1))) * $4_1);
    }
    if ($3 | $2_1 < Math_fround(0.0)) {
     return Math_fround($6_1 * $1669(Math_fround($7_1 / $6_1), Math_fround(Math_fround(1.0) - $0_1)))
    }
    return Math_fround($7_1 * $1669(Math_fround($6_1 / $7_1), $0_1));
   }
   $8 = Math_fround(Math_fround(Math_fround($2_1 - $1_1) * $0_1) + $1_1);
  }
  return $8;
 }
 
 function $626($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $5_1 = global$0 - 112 | 0;
  global$0 = $5_1;
  while (1) {
   $2_1 = $3;
   $3 = $1937($0_1, 0);
   label$2 : {
    if (!$3) {
     $4_1 = 3;
     break label$2;
    }
    label$4 : {
     if (($3 | 0) != 37) {
      break label$4
     }
     if (($1937($0_1, 1) | 0) == 37) {
      break label$4
     }
     $2_1 = $0_1;
     $4_1 = 1;
     break label$2;
    }
    $4_1 = 0;
    $0_1 = ((($3 | 0) == 37) + $0_1 | 0) + 1 | 0;
   }
   $6_1 = $0_1;
   $3 = $2_1;
   if (!$4_1) {
    continue
   }
   break;
  };
  $0_1 = $2_1;
  label$5 : {
   switch ($4_1 - 2 | 0) {
   case 0:
    wasm2js_trap();
   case 1:
    $0_1 = $6_1;
    break;
   default:
    break label$5;
   };
  }
  $2_1 = $0_1;
  label$8 : {
   if (($1937($0_1, 0) | 0) != 37) {
    break label$8
   }
   if (($1937($2_1, 1) | 0) == 37) {
    break label$8
   }
   $6_1 = $2_1;
   $0_1 = $1937($2_1, 0);
   label$11 : {
    if (($0_1 | 0) != 37) {
     break label$11
    }
    $3 = $2_1;
    while (1) {
     $4_1 = $0_1 << 24 >> 24;
     if (!(1 << $4_1 - 65 & 2304 | ($0_1 - 65 & 255) >>> 0 > 25)) {
      $6_1 = $3 + 1 | 0;
      break label$11;
     }
     if (!(1 << $4_1 - 97 & 38275712 | ($0_1 - 97 & 255) >>> 0 > 25)) {
      $6_1 = $3 + 1 | 0;
      break label$11;
     }
     $0_1 = $1937($3, 1);
     $3 = $3 + 1 | 0;
     $6_1 = $3;
     if ($0_1) {
      continue
     }
     break;
    };
   }
   $4_1 = $5_1 + 80 | 0;
   if ($2_1 >>> 0 < $6_1 >>> 0) {
    $3 = $5_1 + 80 | 0;
    while (1) {
     $0_1 = $2_1 + 1 | 0;
     label$17 : {
      label$18 : {
       label$19 : {
        $2_1 = $1937($2_1, 0);
        switch ($2_1 - 36 | 0) {
        case 0:
        case 3:
         break label$17;
        case 1:
        case 2:
         break label$18;
        default:
         break label$19;
        };
       }
       if (($2_1 | 0) != 95) {
        break label$18
       }
       break label$17;
      }
      $1968($3, 0, $2_1);
      $3 = $3 + 1 | 0;
     }
     $4_1 = $3;
     $2_1 = $0_1;
     if (($0_1 | 0) != ($6_1 | 0)) {
      continue
     }
     break;
    };
   }
   $1968($4_1, 0, 0);
   $1990($5_1, 0, +$1_1);
   $0_1 = $5_1 + 16 | 0;
   $21($0_1, 64, $5_1 + 80 | 0, $5_1);
   while (1) {
    $2_1 = $0_1;
    $0_1 = $0_1 + 1 | 0;
    if (($1937($2_1, 0) | 0) == 32) {
     continue
    }
    break;
   };
   $1_1 = Math_fround($1719($2_1));
  }
  global$0 = $5_1 + 112 | 0;
  return $1_1;
 }
 
 function $627($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0.0, $7_1 = 0.0, $8 = 0, $9 = 0.0, $10_1 = 0.0, $11_1 = Math_fround(0);
  label$2 : {
   label$3 : {
    if ($1_1 != $2_1) {
     $8 = $1_1 < $2_1;
     $6_1 = $8 ? $1_1 : $2_1;
     $7_1 = $8 ? $2_1 : $1_1;
     $6_1 = $0_1 < $6_1 ? $6_1 : $0_1 > $7_1 ? $7_1 : $0_1;
     if ($3) {
      $11_1 = Math_fround(-$4_1);
      $3 = $1_1 > $2_1;
      $7_1 = $3 ? $1_1 : $2_1;
      $8 = $7_1 < 0.0;
      $9 = +$4_1;
      $10_1 = $9 > Math_abs($7_1) ? +($8 ? $11_1 : $4_1) : $7_1;
      $2_1 = $3 ? $2_1 : $1_1;
      if (!(!$8 | $2_1 != 0.0)) {
       $1_1 = +$11_1;
       break label$2;
      }
      $8 = $2_1 < 0.0;
      $1_1 = Math_abs($2_1) < $9 ? +($8 ? $11_1 : $4_1) : $2_1;
      if (!$8 | $7_1 != 0.0) {
       break label$3
      }
      $10_1 = +$11_1;
      break label$2;
     }
     $4_1 = Math_fround(($6_1 - $1_1) / ($2_1 - $1_1));
    } else {
     $4_1 = Math_fround(0.0)
    }
    return $4_1;
   }
  }
  $4_1 = Math_fround(0.0);
  label$7 : {
   if ($1_1 >= $6_1) {
    break label$7
   }
   $4_1 = Math_fround(1.0);
   if ($6_1 >= $10_1) {
    break label$7
   }
   if ($2_1 * $7_1 < 0.0) {
    $4_1 = Math_fround($2_1);
    $4_1 = Math_fround(Math_fround(-$4_1) / Math_fround(Math_fround($7_1) - $4_1));
    if ($0_1 == 0.0) {
     break label$7
    }
    if ($0_1 < 0.0) {
     $4_1 = Math_fround(Math_fround($4_1 - $5_1) * Math_fround(Math_fround(1.0) - Math_fround($1637(-$6_1 / $9) / $1637(-$1_1 / $9))));
     break label$7;
    }
    $4_1 = Math_fround($4_1 + $5_1);
    $4_1 = Math_fround(Math_fround(Math_fround($1637($6_1 / $9) / $1637($10_1 / $9)) * Math_fround(Math_fround(1.0) - $4_1)) + $4_1);
    break label$7;
   }
   if ($2_1 < 0.0 | $7_1 < 0.0) {
    $4_1 = Math_fround(Math_fround(1.0) - Math_fround($1637($6_1 / $10_1) / $1637($1_1 / $10_1)));
    break label$7;
   }
   $4_1 = Math_fround($1637($6_1 / $1_1) / $1637($10_1 / $1_1));
  }
  return $3 ? Math_fround(Math_fround(1.0) - $4_1) : $4_1;
 }
 
 function $628($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = Math_fround(0), $7_1 = 0.0, $8 = 0.0, $9 = 0.0, $10_1 = 0, $11_1 = 0.0;
  if ($1_1 == $2_1) {
   return $1_1
  }
  label$2 : {
   if ($3) {
    if ($0_1 <= Math_fround(0.0)) {
     return $1_1
    }
    if ($0_1 >= Math_fround(1.0)) {
     return $2_1
    }
    $6_1 = Math_fround(-$4_1);
    $3 = $1_1 < 0.0;
    $9 = +$4_1;
    $7_1 = $9 > Math_abs($1_1) ? +($3 ? $6_1 : $4_1) : $1_1;
    $11_1 = Math_abs($2_1) < $9 ? +($2_1 < 0.0 ? $6_1 : $4_1) : $2_1;
    $10_1 = $1_1 > $2_1;
    $8 = $10_1 ? $7_1 : $11_1;
    $8 = $3 ? ($2_1 == 0.0 ? +$6_1 : $8) : $8;
    $7_1 = $10_1 ? $11_1 : $7_1;
    $0_1 = $10_1 ? Math_fround(Math_fround(1.0) - $0_1) : $0_1;
    if ($1_1 * $2_1 < 0.0) {
     $6_1 = Math_fround(Math_fround(-Math_fround($1_1 < $2_1 ? $1_1 : $2_1)) / Math_fround(Math_abs(Math_fround(Math_fround($2_1) - Math_fround($1_1)))));
     $4_1 = Math_fround($6_1 + $5_1);
     $5_1 = Math_fround($6_1 - $5_1);
     if ($0_1 >= $5_1) {
      $1_1 = 0.0;
      if ($0_1 <= $4_1) {
       break label$2
      }
     }
     if ($0_1 < $6_1) {
      return $9 * -$1656(-$7_1 / $9, +Math_fround(Math_fround(1.0) - Math_fround($0_1 / $5_1)))
     }
     return $1656($8 / $9, +Math_fround(Math_fround($0_1 - $4_1) / Math_fround(Math_fround(1.0) - $4_1))) * $9;
    }
    if ($3 | $2_1 < 0.0) {
     return $8 * $1656($7_1 / $8, +Math_fround(Math_fround(1.0) - $0_1))
    }
    return $7_1 * $1656($8 / $7_1, +$0_1);
   }
   $1_1 = ($2_1 - $1_1) * +$0_1 + $1_1;
  }
  return $1_1;
 }
 
 function $629($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $5_1 = global$0 - 112 | 0;
  global$0 = $5_1;
  while (1) {
   $2_1 = $3;
   $3 = $1937($0_1, 0);
   label$2 : {
    if (!$3) {
     $4_1 = 3;
     break label$2;
    }
    label$4 : {
     if (($3 | 0) != 37) {
      break label$4
     }
     if (($1937($0_1, 1) | 0) == 37) {
      break label$4
     }
     $2_1 = $0_1;
     $4_1 = 1;
     break label$2;
    }
    $4_1 = 0;
    $0_1 = ((($3 | 0) == 37) + $0_1 | 0) + 1 | 0;
   }
   $6_1 = $0_1;
   $3 = $2_1;
   if (!$4_1) {
    continue
   }
   break;
  };
  $0_1 = $2_1;
  label$5 : {
   switch ($4_1 - 2 | 0) {
   case 0:
    wasm2js_trap();
   case 1:
    $0_1 = $6_1;
    break;
   default:
    break label$5;
   };
  }
  $2_1 = $0_1;
  label$8 : {
   if (($1937($0_1, 0) | 0) != 37) {
    break label$8
   }
   if (($1937($2_1, 1) | 0) == 37) {
    break label$8
   }
   $6_1 = $2_1;
   $0_1 = $1937($2_1, 0);
   label$11 : {
    if (($0_1 | 0) != 37) {
     break label$11
    }
    $3 = $2_1;
    while (1) {
     $4_1 = $0_1 << 24 >> 24;
     if (!(1 << $4_1 - 65 & 2304 | ($0_1 - 65 & 255) >>> 0 > 25)) {
      $6_1 = $3 + 1 | 0;
      break label$11;
     }
     if (!(1 << $4_1 - 97 & 38275712 | ($0_1 - 97 & 255) >>> 0 > 25)) {
      $6_1 = $3 + 1 | 0;
      break label$11;
     }
     $0_1 = $1937($3, 1);
     $3 = $3 + 1 | 0;
     $6_1 = $3;
     if ($0_1) {
      continue
     }
     break;
    };
   }
   $4_1 = $5_1 + 80 | 0;
   if ($2_1 >>> 0 < $6_1 >>> 0) {
    $3 = $5_1 + 80 | 0;
    while (1) {
     $0_1 = $2_1 + 1 | 0;
     label$17 : {
      label$18 : {
       label$19 : {
        $2_1 = $1937($2_1, 0);
        switch ($2_1 - 36 | 0) {
        case 0:
        case 3:
         break label$17;
        case 1:
        case 2:
         break label$18;
        default:
         break label$19;
        };
       }
       if (($2_1 | 0) != 95) {
        break label$18
       }
       break label$17;
      }
      $1968($3, 0, $2_1);
      $3 = $3 + 1 | 0;
     }
     $4_1 = $3;
     $2_1 = $0_1;
     if (($0_1 | 0) != ($6_1 | 0)) {
      continue
     }
     break;
    };
   }
   $1968($4_1, 0, 0);
   $1990($5_1, 0, $1_1);
   $0_1 = $5_1 + 16 | 0;
   $21($0_1, 64, $5_1 + 80 | 0, $5_1);
   while (1) {
    $2_1 = $0_1;
    $0_1 = $0_1 + 1 | 0;
    if (($1937($2_1, 0) | 0) == 32) {
     continue
    }
    break;
   };
   $1_1 = $1719($2_1);
  }
  global$0 = $5_1 + 112 | 0;
  return $1_1;
 }
 
 function $630($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  var $8 = Math_fround(0), $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0.0, $13 = Math_fround(0), $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0.0, $19 = 0, $20_1 = 0.0, $21_1 = 0, $22_1 = 0, $23_1 = Math_fround(0), $24 = 0.0, $25_1 = 0, $26_1 = 0, $27_1 = 0, $28_1 = 0, $29_1 = Math_fround(0), $30 = 0, $31_1 = 0, $32_1 = 0, $33_1 = 0, $34_1 = Math_fround(0), $35_1 = 0, $36_1 = 0, $37 = 0, $38_1 = 0.0, $39_1 = 0;
  $16_1 = global$0 - 176 | 0;
  global$0 = $16_1;
  $21_1 = $1944(0, 73568);
  $10_1 = $1944($21_1, 7080);
  $1968($10_1, 140, 1);
  if (!$1937($10_1, 143)) {
   $26_1 = $76($10_1, $0_1);
   $13 = $292();
   $68($16_1 + 168 | 0, $0_1, 0, 1, Math_fround(-1.0));
   $23_1 = $1963($10_1, 208);
   $9 = $1959($10_1, 208);
   $22_1 = i64toi32_i32$HIGH_BITS;
   $17_1 = $16_1 + 164 | 0;
   $8 = $1963($21_1 + 5480 | 0, 0);
   $1986($17_1, 0, Math_fround(Math_fround(Math_fround($8 + $8) + $1963($16_1, 172)) + $1963($10_1 + 212 | 0, 0)));
   $1983($16_1, 152, $9, $22_1);
   $1986($16_1, 160, Math_fround($13 + $23_1));
   $13 = Math_fround(0.0);
   $23_1 = $1963($16_1, 168);
   if ($23_1 > Math_fround(0.0)) {
    $13 = Math_fround($23_1 + $1963($21_1 + 5500 | 0, 0))
   }
   $11_1 = $16_1 + 136 | 0;
   $1986($11_1 + 12 | 0, 0, Math_fround($1963($17_1, 0) + Math_fround(0.0)));
   $1983($16_1, 136, $9, $22_1);
   $1986($16_1, 144, Math_fround($13 + $1963($16_1, 160)));
   $277($11_1, $8);
   $9 = 0;
   $14 = $11_1;
   $11_1 = $7_1 & 128;
   label$3 : {
    if (!$213($14, $26_1, $16_1 + 152 | 0, $11_1 << 1 ^ 256)) {
     break label$3
    }
    label$4 : {
     if (!$6_1) {
      $6_1 = $1944(($1_1 << 4) + 48168 | 0, 0);
      break label$4;
     }
     label$6 : {
      if (($1_1 | 0) != 4) {
       break label$6
      }
      if (!$1695($6_1, 13404)) {
       break label$6
      }
      label$7 : {
       if (($1937($6_1, 0) | 0) != 37) {
        break label$7
       }
       if (($1937($6_1, 1) | 0) != 46) {
        break label$7
       }
       if (($1937($6_1, 2) | 0) != 48) {
        break label$7
       }
       if (($1937($6_1, 3) | 0) != 102) {
        break label$7
       }
       if ($1937($6_1, 4)) {
        break label$7
       }
       $6_1 = 13404;
       break label$4;
      }
      $9 = $6_1;
      while (1) {
       label$9 : {
        label$10 : {
         $22_1 = $1937($9, 0);
         if (!$22_1) {
          break label$10
         }
         if (($22_1 | 0) == 37) {
          if (($1937($9, 1) | 0) != 37) {
           break label$10
          }
         }
         $9 = ((($22_1 | 0) == 37) + $9 | 0) + 1 | 0;
         $14 = 1;
         break label$9;
        }
        $14 = 0;
       }
       if ($14) {
        continue
       }
       break;
      };
     }
    }
    $22_1 = $6_1;
    $17_1 = $91($16_1 + 152 | 0, $26_1);
    label$13 : {
     label$14 : {
      $9 = 0;
      label$12 : {
       if ($11_1) {
        break label$12
       }
       $6_1 = $1944(0, 73568);
       $9 = 0;
       if (($1944($6_1, 7136) | 0) != ($26_1 | 0)) {
        break label$12
       }
       $9 = ($1944($6_1, 11968) | 0) == ($26_1 | 0);
      }
      if ($9) {
       break label$14
      }
      $6_1 = 0;
      label$19 : {
       label$20 : {
        if ($11_1) {
         $14 = 0
        } else {
         $14 = $1937($21_1 + 7249 | 0, 0) & 1
        }
        if ($17_1) {
         $19 = ($1937($21_1 + 992 | 0, 0) | 0) != 0
        } else {
         $19 = 0
        }
        $15_1 = $14 | $19;
        if ($17_1) {
         $6_1 = ($1941($21_1 + 1002 | 0, 0) | 0) == 2
        }
        if ($15_1 | $6_1) {
         break label$20
        }
        if (($1944($21_1, 7520) | 0) == ($26_1 | 0)) {
         break label$20
        }
        if (($1944($21_1, 7532) | 0) == ($26_1 | 0)) {
         break label$20
        }
        break label$19;
       }
       $85($26_1, $10_1);
       $330($26_1, $10_1);
       $125($10_1);
       $1973($21_1, 7156, 3);
       if ($11_1) {
        break label$19
       }
       label$22 : {
        if ($14) {
         break label$22
        }
        label$23 : {
         if ($19) {
          if (!(($1937($21_1 + 252 | 0, 0) | 0) != 0 | $6_1)) {
           break label$23
          }
          break label$22;
         }
         if ($6_1) {
          break label$22
         }
        }
        if (($1944($21_1, 7532) | 0) != ($26_1 | 0)) {
         break label$19
        }
       }
       $9 = 1;
      }
      if ($9 | $11_1) {
       break label$14
      }
      if (!($1937($21_1 + 179 | 0, 0) & 255)) {
       break label$14
      }
      if ($17_1 ^ 1 | ($1944($21_1, 7136) | 0) != ($26_1 | 0)) {
       break label$14
      }
      if (!$1937($21_1 + 1022 | 0, 0)) {
       break label$14
      }
      if ($180(Math_fround($1963($21_1 + 48 | 0, 0) * Math_fround(.5)))) {
       break label$14
      }
      $1973($21_1, 7536, 1);
      $1973($21_1, 7520, $26_1);
      $1973($21_1, 7532, $26_1);
      break label$13;
     }
     if ($9) {
      break label$13
     }
     $6_1 = $51(($1944($21_1, 7136) | 0) == ($26_1 | 0) ? 9 : $17_1 ? 8 : 7, Math_fround(1.0));
     $73($16_1 + 152 | 0, $26_1, 1);
     $9 = $1960($16_1, 152);
     $10_1 = i64toi32_i32$HIGH_BITS;
     $1983($16_1, 128, $9, $10_1);
     $11_1 = $1960($16_1, 160);
     $17_1 = i64toi32_i32$HIGH_BITS;
     $1983($16_1, 120, $11_1, $17_1);
     $8 = $1963($21_1 + 5484 | 0, 0);
     $1983($16_1, 24, $9, $10_1);
     $1983($16_1, 16, $11_1, $17_1);
     $71($16_1 + 24 | 0, $16_1 + 16 | 0, $6_1, 1, $8);
     $6_1 = $4_1;
     $11_1 = $7_1;
     $8 = Math_fround(0.0);
     $13 = Math_fround(0.0);
     $28_1 = global$0 - 16 | 0;
     global$0 = $28_1;
     $4_1 = $1944(0, 73568);
     label$1 : {
      if (($1944($4_1, 7136) | 0) != ($26_1 | 0)) {
       break label$1
      }
      label$2 : {
       label$30 : {
        label$41 : {
         $7_1 = $1944($4_1, 7188);
         switch ($7_1 - 1 | 0) {
         case 3:
          break label$30;
         case 0:
          break label$41;
         default:
          break label$1;
         };
        }
        if (!$1937($4_1 + 236 | 0, 0)) {
         break label$2
        }
        if (($7_1 | 0) != 4) {
         break label$1
        }
       }
       if (($1944($4_1, 7528) | 0) != ($26_1 | 0)) {
        break label$1
       }
       if ($1937($4_1, 7148)) {
        break label$1
       }
      }
      $86();
     }
     label$5 : {
      if (($1944($4_1, 7136) | 0) != ($26_1 | 0)) {
       $4_1 = 0;
       break label$5;
      }
      if ($1944($4_1 + 7244 | 0, 0) & 128 | $11_1 & 2097152) {
       $4_1 = 0;
       break label$5;
      }
      $4_1 = 0;
      label$82 : {
       switch ($1_1 | 0) {
       case 0:
        $1973($28_1, 12, $1936($2_1, 0));
        $7_1 = $28_1 + 12 | 0;
        if ($6_1) {
         $4_1 = $1936($6_1, 0)
        } else {
         $4_1 = -128
        }
        if ($5_1) {
         $5_1 = $1936($5_1, 0)
        } else {
         $5_1 = 127
        }
        $4_1 = $609($7_1, $3, $4_1, $5_1, $22_1, $11_1);
        if ($4_1) {
         $1968($2_1, 0, $1944($28_1, 12))
        }
        break label$5;
       case 1:
        $1973($28_1, 12, $1937($2_1, 0));
        $7_1 = $28_1 + 12 | 0;
        if ($6_1) {
         $4_1 = $1937($6_1, 0)
        } else {
         $4_1 = 0
        }
        if ($5_1) {
         $5_1 = $1937($5_1, 0)
        } else {
         $5_1 = 255
        }
        $4_1 = $610($7_1, $3, $4_1, $5_1, $22_1, $11_1);
        if ($4_1) {
         $1968($2_1, 0, $1944($28_1, 12))
        }
        break label$5;
       case 2:
        $1973($28_1, 12, $1939($2_1, 0));
        $7_1 = $28_1 + 12 | 0;
        if ($6_1) {
         $4_1 = $1939($6_1, 0)
        } else {
         $4_1 = -32768
        }
        if ($5_1) {
         $5_1 = $1939($5_1, 0)
        } else {
         $5_1 = 32767
        }
        $4_1 = $609($7_1, $3, $4_1, $5_1, $22_1, $11_1);
        if ($4_1) {
         $1970($2_1, 0, $1944($28_1, 12))
        }
        break label$5;
       case 3:
        $1973($28_1, 12, $1941($2_1, 0));
        $7_1 = $28_1 + 12 | 0;
        if ($6_1) {
         $4_1 = $1941($6_1, 0)
        } else {
         $4_1 = 0
        }
        if ($5_1) {
         $5_1 = $1941($5_1, 0)
        } else {
         $5_1 = 65535
        }
        $4_1 = $610($7_1, $3, $4_1, $5_1, $22_1, $11_1);
        if ($4_1) {
         $1970($2_1, 0, $1944($28_1, 12))
        }
        break label$5;
       case 4:
        if ($6_1) {
         $4_1 = $1944($6_1, 0)
        } else {
         $4_1 = -2147483648
        }
        if ($5_1) {
         $5_1 = $1944($5_1, 0)
        } else {
         $5_1 = 2147483647
        }
        $4_1 = $609($2_1, $3, $4_1, $5_1, $22_1, $11_1);
        break label$5;
       case 5:
        if ($6_1) {
         $4_1 = $1944($6_1, 0)
        } else {
         $4_1 = 0
        }
        if ($5_1) {
         $5_1 = $1944($5_1, 0)
        } else {
         $5_1 = -1
        }
        $4_1 = $610($2_1, $3, $4_1, $5_1, $22_1, $11_1);
        break label$5;
       case 6:
        if ($6_1) {
         $4_1 = $1960($6_1, 0);
         $9 = i64toi32_i32$HIGH_BITS;
        } else {
         $9 = -2147483648
        }
        $6_1 = $4_1;
        label$48 : {
         if (!$5_1) {
          $4_1 = -1;
          $10_1 = 2147483647;
          break label$48;
         }
         $4_1 = $1960($5_1, 0);
         $10_1 = i64toi32_i32$HIGH_BITS;
        }
        $25_1 = global$0 - 16 | 0;
        global$0 = $25_1;
        $14 = $1944(0, 73568);
        $7_1 = $4_1;
        if (!($4_1 >>> 0 <= $6_1 >>> 0 & ($9 | 0) >= ($10_1 | 0) | ($9 | 0) > ($10_1 | 0) | $3 != Math_fround(0.0))) {
         $3 = Math_fround($1963($14, 12064) * Math_fround(+($7_1 - $6_1 >>> 0) + +($10_1 - (($6_1 >>> 0 > $7_1 >>> 0) + $9 | 0) | 0) * 4294967296.0))
        }
        $17_1 = $2_1;
        $19 = $11_1 & 32;
        $5_1 = $11_1 & 1048576;
        $4_1 = $5_1 >>> 20 | 0;
        label$308 : {
         label$419 : {
          if (($1944($14, 7188) | 0) != 1) {
           break label$419
          }
          if (!$128(0)) {
           break label$419
          }
          if (!$180(Math_fround($1963($14 + 48 | 0, 0) * Math_fround(.5)))) {
           break label$419
          }
          $8 = $1963(($14 + ($4_1 << 2) | 0) + 880 | 0, 0);
          $8 = $1937($14 + 254 | 0, 0) ? Math_fround($8 * Math_fround(.009999999776482582)) : $8;
          $8 = $1937($14 + 253 | 0, 0) ? Math_fround($8 * Math_fround(10.0)) : $8;
          break label$308;
         }
         if (($1944($14, 7188) | 0) != 4) {
          break label$308
         }
         $27_1 = $25_1 + 8 | 0;
         $154($27_1, 6, 5, Math_fround(.10000000149011612), Math_fround(10.0));
         $8 = $1963(($4_1 << 2) + $27_1 | 0, 0);
         $13 = $1963(48432, 0);
         $3 = $3 >= $13 ? $3 : $13;
        }
        $3 = Math_fround($8 * $3);
        $3 = $5_1 ? Math_fround(-$3) : $3;
        label$102 : {
         if (!$19) {
          break label$102
         }
         $5_1 = $7_1 - $6_1 | 0;
         $4_1 = $10_1 - (($6_1 >>> 0 > $7_1 >>> 0) + $9 | 0) | 0;
         if (!(!!$5_1 & ($4_1 | 0) >= 0 | ($4_1 | 0) > 0)) {
          break label$102
         }
         $3 = Math_fround($3 / Math_fround(+($5_1 >>> 0) + +($4_1 | 0) * 4294967296.0));
        }
        $5_1 = $1937($14, 7148);
        $30 = ($9 | 0) >= ($10_1 | 0) & $6_1 >>> 0 >= $7_1 >>> 0 | ($9 | 0) > ($10_1 | 0);
        $15_1 = 0;
        label$135 : {
         if ($30) {
          break label$135
         }
         $27_1 = $1960($17_1, 0);
         $4_1 = i64toi32_i32$HIGH_BITS;
         if (!($7_1 >>> 0 > $27_1 >>> 0 & ($10_1 | 0) >= ($4_1 | 0) | ($4_1 | 0) < ($10_1 | 0))) {
          $15_1 = 1;
          if ($3 > Math_fround(0.0)) {
           break label$135
          }
         }
         $15_1 = (($4_1 | 0) <= ($9 | 0) & $6_1 >>> 0 >= $27_1 >>> 0 | ($4_1 | 0) < ($9 | 0)) & $3 < Math_fround(0.0);
        }
        label$153 : {
         label$164 : {
          if ($15_1 | $5_1 & 255) {
           $1973($14, 12060, 0);
           $4_1 = 0;
           break label$164;
          }
          if ($3 == Math_fround(0.0)) {
           break label$153
          }
          $1986($14, 12060, Math_fround($3 + $1963($14, 12060)));
          $4_1 = 1;
         }
         $1968($14, 12057, $4_1);
        }
        $15_1 = 0;
        label$1910 : {
         if (!$1937($14, 12057)) {
          break label$1910
         }
         $5_1 = $1960($17_1, 0);
         $27_1 = i64toi32_i32$HIGH_BITS;
         label$21 : {
          if ($19) {
           $8 = $1669(Math_fround(.10000000149011612), Math_fround(1.0));
           $13 = $620($5_1, $27_1, $6_1, $9, $7_1, $10_1, 1, $8, Math_fround(0.0));
           $12_1 = +$13;
           $5_1 = $621(Math_fround($13 + $1963($14, 12060)), $6_1, $9, $7_1, $10_1, 1, $8, Math_fround(0.0));
           $4_1 = i64toi32_i32$HIGH_BITS;
           break label$21;
          }
          $8 = $1963($14, 12060);
          label$24 : {
           if (Math_fround(Math_abs($8)) < Math_fround(9223372036854775808.0)) {
            $4_1 = Math_fround(Math_abs($8)) >= Math_fround(1.0) ? ~~($8 > Math_fround(0.0) ? Math_fround(Math_min(Math_fround(Math_floor(Math_fround($8 * Math_fround(2.3283064365386963e-10)))), Math_fround(4294967296.0))) : Math_fround(Math_ceil(Math_fround(Math_fround($8 - Math_fround(~~$8 >>> 0 >>> 0)) * Math_fround(2.3283064365386963e-10))))) >>> 0 : 0;
            $15_1 = ~~$8 >>> 0;
            break label$24;
           }
           $4_1 = -2147483648;
           $15_1 = 0;
          }
          $8 = Math_fround(0.0);
          $4_1 = $4_1 + $27_1 | 0;
          $5_1 = $5_1 + $15_1 | 0;
          $4_1 = $15_1 >>> 0 > $5_1 >>> 0 ? $4_1 + 1 | 0 : $4_1;
         }
         if (!($11_1 & 64)) {
          $5_1 = $622($22_1, $5_1, $4_1);
          $4_1 = i64toi32_i32$HIGH_BITS;
         }
         $1968($14, 12057, 0);
         label$28 : {
          if ($19) {
           $8 = Math_fround(+$620($5_1, $4_1, $6_1, $9, $7_1, $10_1, 1, $8, Math_fround(0.0)) - $12_1);
           break label$28;
          }
          $11_1 = $1960($17_1, 0);
          $8 = Math_fround(+($5_1 - $11_1 >>> 0) + +($4_1 - (i64toi32_i32$HIGH_BITS + ($5_1 >>> 0 < $11_1 >>> 0) | 0) | 0) * 4294967296.0);
         }
         $1986($14, 12060, Math_fround($1963($14, 12060) - $8));
         $14 = $1960($17_1, 0);
         $11_1 = i64toi32_i32$HIGH_BITS;
         label$306 : {
          if (!(($14 | 0) != ($5_1 | 0) | ($11_1 | 0) != ($4_1 | 0)) | $30) {
           break label$306
          }
          if (!(!($5_1 >>> 0 < $6_1 >>> 0 & ($4_1 | 0) <= ($9 | 0) | ($4_1 | 0) < ($9 | 0)) & (!($5_1 >>> 0 > $14 >>> 0 & ($4_1 | 0) >= ($11_1 | 0) | ($4_1 | 0) > ($11_1 | 0)) | !($3 < Math_fround(0.0))))) {
           $5_1 = $6_1;
           $4_1 = $9;
          }
          if (!($5_1 >>> 0 > $7_1 >>> 0 & ($4_1 | 0) >= ($10_1 | 0) | ($4_1 | 0) > ($10_1 | 0)) & (!($5_1 >>> 0 < $14 >>> 0 & ($4_1 | 0) <= ($11_1 | 0) | ($4_1 | 0) < ($11_1 | 0)) | !($3 > Math_fround(0.0)))) {
           break label$306
          }
          $5_1 = $7_1;
          $4_1 = $10_1;
         }
         $6_1 = ($5_1 | 0) != ($14 | 0) | ($4_1 | 0) != ($11_1 | 0);
         $15_1 = $6_1;
         if (!$6_1) {
          break label$1910
         }
         $1983($17_1, 0, $5_1, $4_1);
         $15_1 = 1;
        }
        $4_1 = $15_1;
        global$0 = $25_1 + 16 | 0;
        break label$5;
       case 7:
        if ($6_1) {
         $4_1 = $1960($6_1, 0);
         $7_1 = i64toi32_i32$HIGH_BITS;
        } else {
         $7_1 = 0
        }
        $9 = $4_1;
        label$52 : {
         if (!$5_1) {
          $4_1 = -1;
          $6_1 = -1;
          break label$52;
         }
         $4_1 = $1960($5_1, 0);
         $6_1 = i64toi32_i32$HIGH_BITS;
        }
        $30 = global$0 - 16 | 0;
        global$0 = $30;
        $19 = $1944(0, 73568);
        $10_1 = $4_1;
        if (!(($6_1 | 0) == ($7_1 | 0) & $4_1 >>> 0 <= $9 >>> 0 | $6_1 >>> 0 < $7_1 >>> 0 | $3 != Math_fround(0.0))) {
         $3 = Math_fround($1963($19, 12064) * Math_fround(+($10_1 - $9 >>> 0) + +($6_1 - (($9 >>> 0 > $10_1 >>> 0) + $7_1 | 0) >>> 0) * 4294967296.0))
        }
        $17_1 = $2_1;
        $14 = $22_1;
        $5_1 = $11_1 & 1048576;
        $4_1 = $5_1 >>> 20 | 0;
        label$31 : {
         label$42 : {
          if (($1944($19, 7188) | 0) != 1) {
           break label$42
          }
          if (!$128(0)) {
           break label$42
          }
          if (!$180(Math_fround($1963($19 + 48 | 0, 0) * Math_fround(.5)))) {
           break label$42
          }
          $8 = $1963(($19 + ($4_1 << 2) | 0) + 880 | 0, 0);
          $8 = $1937($19 + 254 | 0, 0) ? Math_fround($8 * Math_fround(.009999999776482582)) : $8;
          $8 = $1937($19 + 253 | 0, 0) ? Math_fround($8 * Math_fround(10.0)) : $8;
          break label$31;
         }
         if (($1944($19, 7188) | 0) != 4) {
          break label$31
         }
         $25_1 = $30 + 8 | 0;
         $154($25_1, 6, 5, Math_fround(.10000000149011612), Math_fround(10.0));
         $8 = $1963(($4_1 << 2) + $25_1 | 0, 0);
         $13 = $1963(48432, 0);
         $3 = $3 >= $13 ? $3 : $13;
        }
        $3 = Math_fround($8 * $3);
        $3 = $5_1 ? Math_fround(-$3) : $3;
        $4_1 = ($6_1 | 0) == ($7_1 | 0);
        $27_1 = $4_1 & ($9 | 0) == ($10_1 | 0);
        $31_1 = $11_1 & 32;
        $3 = $27_1 | !$31_1 ? $3 : Math_fround($3 / Math_fround(+($10_1 - $9 >>> 0) + +($6_1 - (($9 >>> 0 > $10_1 >>> 0) + $7_1 | 0) >>> 0) * 4294967296.0));
        $25_1 = $1937($19, 7148);
        $35_1 = $9 >>> 0 >= $10_1 >>> 0 & $4_1 | $6_1 >>> 0 < $7_1 >>> 0;
        $15_1 = 0;
        label$13611 : {
         if ($35_1) {
          break label$13611
         }
         $5_1 = $1960($17_1, 0);
         $4_1 = i64toi32_i32$HIGH_BITS;
         if (!(($6_1 | 0) == ($4_1 | 0) & $5_1 >>> 0 < $10_1 >>> 0 | $4_1 >>> 0 < $6_1 >>> 0)) {
          $15_1 = 1;
          if ($3 > Math_fround(0.0)) {
           break label$13611
          }
         }
         $15_1 = (($4_1 | 0) == ($7_1 | 0) & $5_1 >>> 0 <= $9 >>> 0 | $4_1 >>> 0 < $7_1 >>> 0) & $3 < Math_fround(0.0);
        }
        label$154 : {
         label$165 : {
          if ($15_1 | $25_1 & 255) {
           $1973($19, 12060, 0);
           $4_1 = 0;
           break label$165;
          }
          if ($3 == Math_fround(0.0)) {
           break label$154
          }
          $1986($19, 12060, Math_fround($3 + $1963($19, 12060)));
          $4_1 = 1;
         }
         $1968($19, 12057, $4_1);
        }
        $15_1 = 0;
        label$197 : {
         if (!$1937($19, 12057)) {
          break label$197
         }
         $25_1 = $1960($17_1, 0);
         $4_1 = i64toi32_i32$HIGH_BITS;
         label$218 : {
          if ($31_1) {
           $8 = $1669(Math_fround(.10000000149011612), Math_fround(1.0));
           $13 = Math_fround(0.0);
           if (!$27_1) {
            $5_1 = ($6_1 | 0) == ($7_1 | 0);
            $36_1 = $5_1 & $9 >>> 0 > $10_1 >>> 0 | $6_1 >>> 0 < $7_1 >>> 0;
            $15_1 = $36_1;
            $32_1 = $15_1 ? $10_1 : $9;
            $5_1 = $9 >>> 0 < $10_1 >>> 0 & $5_1 | $6_1 >>> 0 > $7_1 >>> 0;
            $33_1 = $5_1 ? $10_1 : $9;
            $5_1 = $5_1 ? $6_1 : $7_1;
            $37 = ($5_1 | 0) == ($4_1 | 0) & $25_1 >>> 0 < $33_1 >>> 0 | $4_1 >>> 0 < $5_1 >>> 0;
            $39_1 = $37 ? $25_1 : $33_1;
            $15_1 = $15_1 ? $6_1 : $7_1;
            $25_1 = ($15_1 | 0) == ($4_1 | 0) & $25_1 >>> 0 < $32_1 >>> 0 | $4_1 >>> 0 < $15_1 >>> 0;
            $12_1 = +$8;
            $20_1 = +($32_1 >>> 0) + +($15_1 >>> 0) * 4294967296.0;
            $20_1 = $12_1 > $20_1 ? $12_1 : $20_1;
            $18_1 = +(($25_1 ? $32_1 : $39_1) >>> 0) + +(($25_1 ? $15_1 : $37 ? $4_1 : $5_1) >>> 0) * 4294967296.0;
            $13 = Math_fround(0.0);
            label$25 : {
             if ($20_1 >= $18_1) {
              break label$25
             }
             $24 = +($33_1 >>> 0) + +($5_1 >>> 0) * 4294967296.0;
             $12_1 = $12_1 > $24 ? $12_1 : $24;
             $13 = Math_fround(1.0);
             if ($12_1 <= $18_1) {
              break label$25
             }
             $13 = Math_fround($1637($18_1 / $20_1) / $1637($12_1 / $20_1));
            }
            $13 = $36_1 ? Math_fround(Math_fround(1.0) - $13) : $13;
           }
           $4_1 = $7_1;
           $5_1 = $9;
           label$26 : {
            if ($27_1) {
             break label$26
            }
            $23_1 = Math_fround($13 + $1963($19, 12060));
            $5_1 = $9;
            if ($23_1 <= Math_fround(0.0)) {
             break label$26
            }
            $4_1 = $6_1;
            $5_1 = $10_1;
            if ($23_1 >= Math_fround(1.0)) {
             break label$26
            }
            $12_1 = +$8;
            $20_1 = +($10_1 >>> 0) + +($6_1 >>> 0) * 4294967296.0;
            $20_1 = $12_1 > $20_1 ? $12_1 : $20_1;
            $18_1 = +($9 >>> 0) + +($7_1 >>> 0) * 4294967296.0;
            $12_1 = $12_1 > $18_1 ? $12_1 : $18_1;
            $4_1 = ($6_1 | 0) == ($7_1 | 0) & $9 >>> 0 > $10_1 >>> 0 | $6_1 >>> 0 < $7_1 >>> 0;
            $18_1 = $4_1 ? $20_1 : $12_1;
            $12_1 = $18_1 * $1656(($4_1 ? $12_1 : $20_1) / $18_1, +($4_1 ? Math_fround(Math_fround(1.0) - $23_1) : $23_1));
            label$27 : {
             if ($12_1 < 18446744073709551615.0 & $12_1 >= 0.0) {
              $4_1 = Math_abs($12_1) >= 1.0 ? ~~($12_1 > 0.0 ? Math_min(Math_floor($12_1 * 2.3283064365386963e-10), 4294967295.0) : Math_ceil(($12_1 - +(~~$12_1 >>> 0 >>> 0)) * 2.3283064365386963e-10)) >>> 0 : 0;
              $5_1 = ~~$12_1 >>> 0;
              break label$27;
             }
             $4_1 = 0;
             $5_1 = 0;
            }
           }
           $20_1 = +$13;
           $12_1 = +$8;
           break label$218;
          }
          $8 = $1963($19, 12060);
          label$29 : {
           if (Math_fround(Math_abs($8)) < Math_fround(9223372036854775808.0)) {
            $5_1 = ~~$8 >>> 0;
            $15_1 = Math_fround(Math_abs($8)) >= Math_fround(1.0) ? ~~($8 > Math_fround(0.0) ? Math_fround(Math_min(Math_fround(Math_floor(Math_fround($8 * Math_fround(2.3283064365386963e-10)))), Math_fround(4294967296.0))) : Math_fround(Math_ceil(Math_fround(Math_fround($8 - Math_fround(~~$8 >>> 0 >>> 0)) * Math_fround(2.3283064365386963e-10))))) >>> 0 : 0;
            break label$29;
           }
           $5_1 = 0;
           $15_1 = -2147483648;
          }
          $4_1 = $15_1 + $4_1 | 0;
          $15_1 = $5_1;
          $5_1 = $5_1 + $25_1 | 0;
          $4_1 = $15_1 >>> 0 > $5_1 >>> 0 ? $4_1 + 1 | 0 : $4_1;
         }
         if (!($11_1 & 64)) {
          $5_1 = $622($14, $5_1, $4_1);
          $4_1 = i64toi32_i32$HIGH_BITS;
         }
         $1968($19, 12057, 0);
         label$33 : {
          if ($31_1) {
           if ($27_1) {
            $12_1 = 0.0
           } else {
            $11_1 = ($6_1 | 0) == ($7_1 | 0);
            $15_1 = $11_1 & $9 >>> 0 > $10_1 >>> 0 | $6_1 >>> 0 < $7_1 >>> 0;
            $14 = $15_1;
            $25_1 = $14 ? $10_1 : $9;
            $11_1 = $9 >>> 0 < $10_1 >>> 0 & $11_1 | $6_1 >>> 0 > $7_1 >>> 0;
            $27_1 = $11_1 ? $10_1 : $9;
            $11_1 = $11_1 ? $6_1 : $7_1;
            $31_1 = ($11_1 | 0) == ($4_1 | 0) & $5_1 >>> 0 < $27_1 >>> 0 | $4_1 >>> 0 < $11_1 >>> 0;
            $14 = $14 ? $6_1 : $7_1;
            $32_1 = ($14 | 0) == ($4_1 | 0) & $5_1 >>> 0 < $25_1 >>> 0 | $4_1 >>> 0 < $14 >>> 0;
            $33_1 = $32_1 ? $25_1 : $31_1 ? $5_1 : $27_1;
            $18_1 = +($25_1 >>> 0) + +($14 >>> 0) * 4294967296.0;
            $18_1 = $12_1 > $18_1 ? $12_1 : $18_1;
            $24 = +($33_1 >>> 0) + +(($32_1 ? $14 : $31_1 ? $4_1 : $11_1) >>> 0) * 4294967296.0;
            $8 = Math_fround(0.0);
            label$36 : {
             if ($18_1 >= $24) {
              break label$36
             }
             $38_1 = +($27_1 >>> 0) + +($11_1 >>> 0) * 4294967296.0;
             $12_1 = $12_1 > $38_1 ? $12_1 : $38_1;
             $8 = Math_fround(1.0);
             if ($12_1 <= $24) {
              break label$36
             }
             $8 = Math_fround($1637($24 / $18_1) / $1637($12_1 / $18_1));
            }
            $12_1 = +($15_1 ? Math_fround(Math_fround(1.0) - $8) : $8);
           }
           $8 = Math_fround($12_1 - $20_1);
           break label$33;
          }
          $11_1 = $1960($17_1, 0);
          $8 = Math_fround(+($5_1 - $11_1 >>> 0) + +($4_1 - (i64toi32_i32$HIGH_BITS + ($5_1 >>> 0 < $11_1 >>> 0) | 0) | 0) * 4294967296.0);
         }
         $1986($19, 12060, Math_fround($1963($19, 12060) - $8));
         $14 = $1960($17_1, 0);
         $11_1 = i64toi32_i32$HIGH_BITS;
         label$37 : {
          if (!(($14 | 0) != ($5_1 | 0) | ($11_1 | 0) != ($4_1 | 0)) | $35_1) {
           break label$37
          }
          if (!(!(($4_1 | 0) == ($7_1 | 0) & $5_1 >>> 0 < $9 >>> 0 | $4_1 >>> 0 < $7_1 >>> 0) & (!(($4_1 | 0) == ($11_1 | 0) & $5_1 >>> 0 > $14 >>> 0 | $4_1 >>> 0 > $11_1 >>> 0) | !($3 < Math_fround(0.0))))) {
           $5_1 = $9;
           $4_1 = $7_1;
          }
          if (!(($4_1 | 0) == ($6_1 | 0) & $5_1 >>> 0 > $10_1 >>> 0 | $4_1 >>> 0 > $6_1 >>> 0) & (!(($4_1 | 0) == ($11_1 | 0) & $5_1 >>> 0 < $14 >>> 0 | $4_1 >>> 0 < $11_1 >>> 0) | !($3 > Math_fround(0.0)))) {
           break label$37
          }
          $5_1 = $10_1;
          $4_1 = $6_1;
         }
         $6_1 = ($5_1 | 0) != ($14 | 0) | ($4_1 | 0) != ($11_1 | 0);
         $15_1 = $6_1;
         if (!$6_1) {
          break label$197
         }
         $1983($17_1, 0, $5_1, $4_1);
         $15_1 = 1;
        }
        $4_1 = $15_1;
        global$0 = $30 + 16 | 0;
        break label$5;
       case 8:
        if ($6_1) {
         $23_1 = $1963($6_1, 0)
        } else {
         $23_1 = Math_fround(-3402823466385288598117041.0e14)
        }
        if ($5_1) {
         $8 = $1963($5_1, 0)
        } else {
         $8 = Math_fround(3402823466385288598117041.0e14)
        }
        $7_1 = global$0 - 16 | 0;
        global$0 = $7_1;
        $9 = $11_1 & 1048576;
        $4_1 = $1944(0, 73568);
        label$18 : {
         if (!($8 > $23_1) | $3 != Math_fround(0.0)) {
          break label$18
         }
         $29_1 = Math_fround($8 - $23_1);
         if (!($29_1 < Math_fround(3402823466385288598117041.0e14))) {
          break label$18
         }
         $3 = Math_fround($29_1 * $1963($4_1, 12064));
        }
        $6_1 = $11_1 & 32;
        $10_1 = $9 >>> 20 | 0;
        label$49 : {
         label$510 : {
          if (($1944($4_1, 7188) | 0) != 1) {
           break label$510
          }
          if (!$128(0)) {
           break label$510
          }
          if (!$180(Math_fround($1963($4_1 + 48 | 0, 0) * Math_fround(.5)))) {
           break label$510
          }
          $13 = $1963(($4_1 + ($10_1 << 2) | 0) + 880 | 0, 0);
          $13 = $1937($4_1 + 254 | 0, 0) ? Math_fround($13 * Math_fround(.009999999776482582)) : $13;
          $13 = $1937($4_1 + 253 | 0, 0) ? Math_fround($13 * Math_fround(10.0)) : $13;
          break label$49;
         }
         if (($1944($4_1, 7188) | 0) != 4) {
          break label$49
         }
         $5_1 = $615($22_1);
         $17_1 = $7_1 + 8 | 0;
         $154($17_1, 6, 5, Math_fround(.10000000149011612), Math_fround(10.0));
         $13 = $1963(($10_1 << 2) + $17_1 | 0, 0);
         $29_1 = Math_fround(1.1754943508222875e-38);
         label$811 : {
          if (($5_1 | 0) < 0) {
           break label$811
          }
          if (($5_1 | 0) <= 9) {
           $29_1 = $1963(($5_1 << 2) + 48432 | 0, 0);
           break label$811;
          }
          $29_1 = $1669(Math_fround(10.0), Math_fround(0 - $5_1 | 0));
         }
         $3 = $3 >= $29_1 ? $3 : $29_1;
        }
        $3 = Math_fround($13 * $3);
        $3 = $9 ? Math_fround(-$3) : $3;
        label$1112 : {
         if (!$6_1) {
          break label$1112
         }
         $13 = Math_fround($8 - $23_1);
         if (!($13 < Math_fround(3402823466385288598117041.0e14)) | !($13 > Math_fround(9.999999974752427e-07))) {
          break label$1112
         }
         $3 = Math_fround($3 / $13);
        }
        $5_1 = $1937($4_1, 7148);
        $9 = $8 > $23_1;
        $10_1 = 0;
        label$1515 : {
         if (!$9) {
          break label$1515
         }
         $13 = $1963($2_1, 0);
         if ($8 <= $13) {
          $10_1 = 1;
          if ($3 > Math_fround(0.0)) {
           break label$1515
          }
         }
         $10_1 = $3 < Math_fround(0.0) & $13 <= $23_1;
        }
        label$1713 : {
         label$1814 : {
          if ($10_1 | $5_1 & 255) {
           $1973($4_1, 12060, 0);
           $5_1 = 0;
           break label$1814;
          }
          if ($3 == Math_fround(0.0)) {
           break label$1713
          }
          $1986($4_1, 12060, Math_fround($3 + $1963($4_1, 12060)));
          $5_1 = 1;
         }
         $1968($4_1, 12057, $5_1);
        }
        $5_1 = 0;
        label$2116 : {
         if (!$1937($4_1, 12057)) {
          break label$2116
         }
         $13 = $1963($2_1, 0);
         label$2312 : {
          if ($6_1) {
           $34_1 = $1669(Math_fround(.10000000149011612), Math_fround($615($22_1) | 0));
           $3 = $624($13, $23_1, $8, 1, $34_1, Math_fround(0.0));
           $13 = $625(Math_fround($3 + $1963($4_1, 12060)), $23_1, $8, 1, $34_1, Math_fround(0.0));
           break label$2312;
          }
          $3 = Math_fround(0.0);
          $13 = Math_fround($13 + $1963($4_1, 12060));
         }
         if (!($11_1 & 64)) {
          $13 = $626($22_1, $13)
         }
         $1968($4_1, 12057, 0);
         label$2817 : {
          if ($6_1) {
           $3 = Math_fround($624($13, $23_1, $8, 1, $34_1, Math_fround(0.0)) - $3);
           break label$2817;
          }
          $3 = Math_fround($13 - $1963($2_1, 0));
         }
         $1986($4_1, 12060, Math_fround($1963($4_1, 12060) - $3));
         $3 = $13 == Math_fround(0.0) ? Math_fround(0.0) : $13;
         $13 = $1963($2_1, 0);
         label$3018 : {
          if (!$9 | $3 == $13) {
           break label$3018
          }
          $3 = $3 < $23_1 ? $23_1 : $3;
          if (!($3 > $8)) {
           break label$3018
          }
          $3 = $8;
         }
         $5_1 = $3 != $13;
         if ($3 == $13) {
          break label$2116
         }
         $1986($2_1, 0, $3);
         $5_1 = 1;
        }
        $4_1 = $5_1;
        global$0 = $7_1 + 16 | 0;
        break label$5;
       case 9:
        break label$82;
       default:
        break label$5;
       };
      }
      if ($6_1) {
       $18_1 = $1967($6_1, 0)
      } else {
       $18_1 = -1797693134862315708145274.0e284
      }
      if ($5_1) {
       $20_1 = $1967($5_1, 0)
      } else {
       $20_1 = 1797693134862315708145274.0e284
      }
      $7_1 = global$0 - 16 | 0;
      global$0 = $7_1;
      $9 = $11_1 & 1048576;
      $4_1 = $1944(0, 73568);
      label$110 : {
       if (!($20_1 > $18_1) | $3 != Math_fround(0.0)) {
        break label$110
       }
       $12_1 = $20_1 - $18_1;
       if (!($12_1 < 3402823466385288598117041.0e14)) {
        break label$110
       }
       $3 = Math_fround($12_1 * +$1963($4_1, 12064));
      }
      $6_1 = $11_1 & 32;
      $10_1 = $9 >>> 20 | 0;
      label$411 : {
       label$512 : {
        if (($1944($4_1, 7188) | 0) != 1) {
         break label$512
        }
        if (!$128(0)) {
         break label$512
        }
        if (!$180(Math_fround($1963($4_1 + 48 | 0, 0) * Math_fround(.5)))) {
         break label$512
        }
        $8 = $1963(($4_1 + ($10_1 << 2) | 0) + 880 | 0, 0);
        $8 = $1937($4_1 + 254 | 0, 0) ? Math_fround($8 * Math_fround(.009999999776482582)) : $8;
        $8 = $1937($4_1 + 253 | 0, 0) ? Math_fround($8 * Math_fround(10.0)) : $8;
        break label$411;
       }
       if (($1944($4_1, 7188) | 0) != 4) {
        break label$411
       }
       $5_1 = $615($22_1);
       $17_1 = $7_1 + 8 | 0;
       $154($17_1, 6, 5, Math_fround(.10000000149011612), Math_fround(10.0));
       $8 = $1963(($10_1 << 2) + $17_1 | 0, 0);
       $13 = Math_fround(1.1754943508222875e-38);
       label$813 : {
        if (($5_1 | 0) < 0) {
         break label$813
        }
        if (($5_1 | 0) <= 9) {
         $13 = $1963(($5_1 << 2) + 48432 | 0, 0);
         break label$813;
        }
        $13 = $1669(Math_fround(10.0), Math_fround(0 - $5_1 | 0));
       }
       $3 = $3 >= $13 ? $3 : $13;
      }
      $3 = Math_fround($8 * $3);
      $3 = $9 ? Math_fround(-$3) : $3;
      label$1114 : {
       if (!$6_1) {
        break label$1114
       }
       $12_1 = $20_1 - $18_1;
       if (!($12_1 < 3402823466385288598117041.0e14) | !($12_1 > 9.999999974752427e-07)) {
        break label$1114
       }
       $3 = Math_fround($3 / Math_fround($12_1));
      }
      $5_1 = $1937($4_1, 7148);
      $9 = $20_1 > $18_1;
      $10_1 = 0;
      label$1517 : {
       if (!$9) {
        break label$1517
       }
       $12_1 = $1967($2_1, 0);
       if ($20_1 <= $12_1) {
        $10_1 = 1;
        if ($3 > Math_fround(0.0)) {
         break label$1517
        }
       }
       $10_1 = $3 < Math_fround(0.0) & $12_1 <= $18_1;
      }
      label$1715 : {
       label$1816 : {
        if ($10_1 | $5_1 & 255) {
         $1973($4_1, 12060, 0);
         $5_1 = 0;
         break label$1816;
        }
        if ($3 == Math_fround(0.0)) {
         break label$1715
        }
        $1986($4_1, 12060, Math_fround($3 + $1963($4_1, 12060)));
        $5_1 = 1;
       }
       $1968($4_1, 12057, $5_1);
      }
      $5_1 = 0;
      label$2118 : {
       if (!$1937($4_1, 12057)) {
        break label$2118
       }
       $24 = $1967($2_1, 0);
       label$2319 : {
        if ($6_1) {
         $8 = $1669(Math_fround(.10000000149011612), Math_fround($615($22_1) | 0));
         $3 = $627($24, $18_1, $20_1, 1, $8, Math_fround(0.0));
         $12_1 = +$3;
         $24 = $628(Math_fround($3 + $1963($4_1, 12060)), $18_1, $20_1, 1, $8, Math_fround(0.0));
         break label$2319;
        }
        $12_1 = 0.0;
        $8 = Math_fround(0.0);
        $24 = $24 + +$1963($4_1, 12060);
       }
       if (!($11_1 & 64)) {
        $24 = $629($22_1, $24)
       }
       $1968($4_1, 12057, 0);
       label$2820 : {
        if ($6_1) {
         $12_1 = +$627($24, $18_1, $20_1, 1, $8, Math_fround(0.0)) - $12_1;
         break label$2820;
        }
        $12_1 = $24 - $1967($2_1, 0);
       }
       $1986($4_1, 12060, Math_fround($1963($4_1, 12060) - Math_fround($12_1)));
       $12_1 = $24 == 0.0 ? 0.0 : $24;
       $24 = $1967($2_1, 0);
       label$3021 : {
        if (!$9 | $12_1 == $24) {
         break label$3021
        }
        $12_1 = $12_1 < $18_1 ? $18_1 : $12_1;
        if (!($20_1 < $12_1)) {
         break label$3021
        }
        $12_1 = $20_1;
       }
       $5_1 = $12_1 != $24;
       if ($12_1 == $24) {
        break label$2118
       }
       $1990($2_1, 0, $12_1);
       $5_1 = 1;
      }
      $4_1 = $5_1;
      global$0 = $7_1 + 16 | 0;
     }
     global$0 = $28_1 + 16 | 0;
     $9 = $4_1;
     if ($4_1) {
      $88($26_1)
     }
     $4_1 = $16_1 + 48 | 0;
     $1_1 = $4_1 + $603($4_1, 64, $1_1, $2_1, $22_1) | 0;
     if ($1937($21_1, 12196)) {
      $341(1061, 1056)
     }
     $1982($16_1, 40, 1056964608, 1056964608);
     $69($16_1 + 152 | 0, $16_1 + 160 | 0, $16_1 + 48 | 0, $1_1, 0, $16_1 + 40 | 0, 0);
     if ($1963($16_1, 168) > Math_fround(0.0)) {
      $3 = $1963($21_1 + 5500 | 0, 0);
      $1986($16_1, 36, Math_fround($1963($16_1, 156) + $1963($21_1, 5480)));
      $1986($16_1, 32, Math_fround($3 + $1963($16_1, 160)));
      $1983($16_1, 8, $1959($16_1, 32), i64toi32_i32$HIGH_BITS);
      $63($16_1 + 8 | 0, $0_1, 0, 1);
     }
     break label$3;
    }
    $9 = $16_1 + 152 | 0;
    $6_1 = $0_1;
    $0_1 = 0;
    label$3313 : {
     if (!($7_1 & 16)) {
      break label$3313
     }
     $0_1 = 1;
     if (!$4_1) {
      break label$3313
     }
     $0_1 = 1;
     if (!$5_1) {
      break label$3313
     }
     $0_1 = $606($1_1, $4_1, $5_1) >>> 31 | 0;
    }
    $9 = $631($9, $26_1, $6_1, $1_1, $2_1, $22_1, $0_1 ? $4_1 : 0, $0_1 ? $5_1 : 0);
   }
  }
  global$0 = $16_1 + 176 | 0;
  return $9;
 }
 
 function $631($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  var $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = 0.0, $16_1 = 0.0, $17_1 = 0, $18_1 = 0;
  $10_1 = global$0 - 80 | 0;
  global$0 = $10_1;
  $18_1 = $1944(0, 73568);
  $17_1 = $10_1 + 32 | 0;
  $12_1 = $5_1;
  while (1) {
   $8 = $1937($5_1, 0);
   label$2 : {
    if (!$8) {
     $11_1 = 3;
     break label$2;
    }
    label$4 : {
     if (($8 | 0) != 37) {
      break label$4
     }
     if (($1937($5_1, 1) | 0) == 37) {
      break label$4
     }
     $9 = $5_1;
     $11_1 = 1;
     break label$2;
    }
    $11_1 = 0;
    $5_1 = ((($8 | 0) == 37) + $5_1 | 0) + 1 | 0;
   }
   $8 = $5_1;
   if (!$11_1) {
    continue
   }
   break;
  };
  $5_1 = $9;
  label$5 : {
   switch ($11_1 - 2 | 0) {
   case 0:
    wasm2js_trap();
   case 1:
    $5_1 = $8;
    break;
   default:
    break label$5;
   };
  }
  $8 = $5_1;
  $5_1 = $1937($5_1, 0);
  __inlined_func$632 : {
   if (($5_1 | 0) == 37) {
    $9 = $8;
    while (1) {
     label$9 : {
      $12_1 = $5_1 << 24 >> 24;
      if (!(1 << $12_1 - 65 & 2304 | ($5_1 - 65 & 255) >>> 0 > 25)) {
       $11_1 = $9 + 1 | 0;
       break label$9;
      }
      if (!(1 << $12_1 - 97 & 38275712 | ($5_1 - 97 & 255) >>> 0 > 25)) {
       $11_1 = $9 + 1 | 0;
       break label$9;
      }
      $5_1 = $1937($9, 1);
      $9 = $9 + 1 | 0;
      $11_1 = $9;
      if ($5_1) {
       continue
      }
     }
     break;
    };
    $5_1 = $8;
    if (!$1937($11_1, 0)) {
     break __inlined_func$632
    }
    $5_1 = ($11_1 - $8 | 0) + 1 | 0;
    $15($17_1, $8, $5_1 >>> 0 >= 32 ? 32 : $5_1);
    $5_1 = $17_1;
   } else {
    $5_1 = $12_1
   }
  }
  $603($10_1, 32, $3, $4_1, $5_1);
  $8 = $10_1;
  while (1) {
   $5_1 = $1937($8, 0);
   if (($5_1 | 0) == 32 | ($5_1 | 0) == 9) {
    $8 = $8 + 1 | 0;
    continue;
   } else {
    $5_1 = $8;
    while (1) {
     $9 = $5_1;
     $5_1 = $5_1 + 1 | 0;
     if ($1937($9, 0)) {
      continue
     }
     break;
    };
    label$42 : {
     if ($8 >>> 0 >= $9 >>> 0) {
      $5_1 = $9;
      break label$42;
     }
     $5_1 = $9;
     while (1) {
      $9 = $5_1 - 1 | 0;
      $12_1 = $1937($9, 0);
      if (($12_1 | 0) != 32 & ($12_1 | 0) != 9) {
       break label$42
      }
      $5_1 = $9;
      if ($5_1 >>> 0 > $8 >>> 0) {
       continue
      }
      break;
     };
     $5_1 = $8;
    }
    if (($8 | 0) != ($10_1 | 0)) {
     $1603($10_1, $8, $5_1 - $8 | 0)
    }
    $1968(($5_1 - $8 | 0) + $10_1 | 0, 0, 0);
   }
   break;
  };
  $5_1 = $1944(0, 73568);
  $9 = ($1944($5_1, 11968) | 0) == ($1_1 | 0);
  if (!$9) {
   $86()
  }
  $1982($1944($5_1, 7080), 208, $1959($0_1, 0), i64toi32_i32$HIGH_BITS);
  $13 = $1963($0_1, 0);
  $14 = $1963($0_1, 8);
  $1986($10_1, 76, Math_fround($1963($0_1 + 12 | 0, 0) - $1963($0_1, 4)));
  $1986($10_1, 72, Math_fround($14 - $13));
  $2_1 = $633($2_1, 0, $10_1, 32, $10_1 + 72 | 0, ($3 & -2) == 8 ? 402784272 : 402653201, 0);
  if (!$9) {
   $1973($5_1, 11968, $1944($5_1, 7136))
  }
  $0_1 = 0;
  if ($2_1) {
   $9 = $1944(($3 << 4) + 48160 | 0, 0);
   $1602($10_1 + 72 | 0, $4_1, $9);
   $605($10_1, $1944($18_1 + 8224 | 0, 0), $3, $4_1, 0);
   if ($6_1 | $7_1) {
    label$50 : {
     if (!(!$6_1 | !$7_1)) {
      $0_1 = ($606($3, $6_1, $7_1) | 0) > 0;
      $5_1 = $0_1 ? $7_1 : $6_1;
      $0_1 = $0_1 ? $6_1 : $7_1;
      break label$50;
     }
     $5_1 = $6_1;
     $0_1 = $7_1;
    }
    __inlined_func$607 : {
     folding_inner6 : {
      folding_inner5 : {
       folding_inner4 : {
        folding_inner3 : {
         folding_inner2 : {
          folding_inner0 : {
           label$23 : {
            switch ($3 | 0) {
            case 0:
             label$1212 : {
              if (!$5_1) {
               break label$1212
              }
              $3 = $1936($4_1, 0);
              $2_1 = $1936($5_1, 0);
              if (($3 | 0) >= ($2_1 | 0)) {
               break label$1212
              }
              break folding_inner0;
             }
             if (!$0_1) {
              break __inlined_func$607
             }
             $3 = $1936($4_1, 0);
             $2_1 = $1936($0_1, 0);
             if (($3 | 0) <= ($2_1 | 0)) {
              break __inlined_func$607
             }
             break folding_inner0;
            case 1:
             label$14 : {
              if (!$5_1) {
               break label$14
              }
              $3 = $1937($4_1, 0);
              $2_1 = $1937($5_1, 0);
              if ($3 >>> 0 >= $2_1 >>> 0) {
               break label$14
              }
              break folding_inner0;
             }
             if (!$0_1) {
              break __inlined_func$607
             }
             $3 = $1937($4_1, 0);
             $2_1 = $1937($0_1, 0);
             if ($3 >>> 0 <= $2_1 >>> 0) {
              break __inlined_func$607
             }
             break folding_inner0;
            case 2:
             label$16 : {
              if (!$5_1) {
               break label$16
              }
              $3 = $1939($4_1, 0);
              $2_1 = $1939($5_1, 0);
              if (($3 | 0) >= ($2_1 | 0)) {
               break label$16
              }
              break folding_inner2;
             }
             if (!$0_1) {
              break __inlined_func$607
             }
             $3 = $1939($4_1, 0);
             $2_1 = $1939($0_1, 0);
             if (($3 | 0) <= ($2_1 | 0)) {
              break __inlined_func$607
             }
             break folding_inner2;
            case 3:
             label$18 : {
              if (!$5_1) {
               break label$18
              }
              $3 = $1941($4_1, 0);
              $2_1 = $1941($5_1, 0);
              if ($3 >>> 0 >= $2_1 >>> 0) {
               break label$18
              }
              break folding_inner2;
             }
             if (!$0_1) {
              break __inlined_func$607
             }
             $3 = $1941($4_1, 0);
             $2_1 = $1941($0_1, 0);
             if ($3 >>> 0 <= $2_1 >>> 0) {
              break __inlined_func$607
             }
             break folding_inner2;
            case 4:
             label$20 : {
              if (!$5_1) {
               break label$20
              }
              $3 = $1944($4_1, 0);
              $2_1 = $1944($5_1, 0);
              if (($3 | 0) >= ($2_1 | 0)) {
               break label$20
              }
              break folding_inner3;
             }
             if (!$0_1) {
              break __inlined_func$607
             }
             $3 = $1944($4_1, 0);
             $2_1 = $1944($0_1, 0);
             if (($3 | 0) <= ($2_1 | 0)) {
              break __inlined_func$607
             }
             break folding_inner3;
            case 5:
             label$22 : {
              if (!$5_1) {
               break label$22
              }
              $3 = $1944($4_1, 0);
              $2_1 = $1944($5_1, 0);
              if ($3 >>> 0 >= $2_1 >>> 0) {
               break label$22
              }
              break folding_inner3;
             }
             if (!$0_1) {
              break __inlined_func$607
             }
             $3 = $1944($4_1, 0);
             $2_1 = $1944($0_1, 0);
             if ($3 >>> 0 <= $2_1 >>> 0) {
              break __inlined_func$607
             }
             break folding_inner3;
            case 6:
             label$24 : {
              if (!$5_1) {
               break label$24
              }
              $3 = $1960($4_1, 0);
              $6_1 = i64toi32_i32$HIGH_BITS;
              $2_1 = $1960($5_1, 0);
              $5_1 = $3 >>> 0 >= $2_1 >>> 0;
              $3 = i64toi32_i32$HIGH_BITS;
              if ($5_1 & ($3 | 0) <= ($6_1 | 0) | ($3 | 0) < ($6_1 | 0)) {
               break label$24
              }
              break folding_inner4;
             }
             if (!$0_1) {
              break __inlined_func$607
             }
             $5_1 = $1960($4_1, 0);
             $3 = i64toi32_i32$HIGH_BITS;
             $2_1 = $1960($0_1, 0);
             $0_1 = i64toi32_i32$HIGH_BITS;
             if (($0_1 | 0) >= ($3 | 0) & $2_1 >>> 0 >= $5_1 >>> 0 | ($0_1 | 0) > ($3 | 0)) {
              break __inlined_func$607
             }
             break folding_inner5;
            case 7:
             label$26 : {
              if (!$5_1) {
               break label$26
              }
              $7_1 = $1960($4_1, 0);
              $6_1 = i64toi32_i32$HIGH_BITS;
              $2_1 = $1960($5_1, 0);
              $3 = i64toi32_i32$HIGH_BITS;
              if (($3 | 0) == ($6_1 | 0) & $2_1 >>> 0 <= $7_1 >>> 0 | $3 >>> 0 < $6_1 >>> 0) {
               break label$26
              }
              break folding_inner4;
             }
             if (!$0_1) {
              break __inlined_func$607
             }
             $5_1 = $1960($4_1, 0);
             $3 = i64toi32_i32$HIGH_BITS;
             $2_1 = $1960($0_1, 0);
             $0_1 = i64toi32_i32$HIGH_BITS;
             if (($0_1 | 0) == ($3 | 0) & $2_1 >>> 0 >= $5_1 >>> 0 | $0_1 >>> 0 > $3 >>> 0) {
              break __inlined_func$607
             }
             break folding_inner5;
            case 8:
             label$28 : {
              if (!$5_1) {
               break label$28
              }
              $14 = $1963($4_1, 0);
              $13 = $1963($5_1, 0);
              if (!($14 < $13)) {
               break label$28
              }
              break folding_inner6;
             }
             if (!$0_1) {
              break __inlined_func$607
             }
             $14 = $1963($4_1, 0);
             $13 = $1963($0_1, 0);
             if (!($14 > $13)) {
              break __inlined_func$607
             }
             break folding_inner6;
            case 9:
             break label$23;
            default:
             break __inlined_func$607;
            };
           }
           label$30 : {
            if (!$5_1) {
             break label$30
            }
            $16_1 = $1967($4_1, 0);
            $15_1 = $1967($5_1, 0);
            if (!($16_1 < $15_1)) {
             break label$30
            }
            $1990($4_1, 0, $15_1);
            break __inlined_func$607;
           }
           if (!$0_1) {
            break __inlined_func$607
           }
           $16_1 = $1967($4_1, 0);
           $15_1 = $1967($0_1, 0);
           if (!($16_1 > $15_1)) {
            break __inlined_func$607
           }
           $1990($4_1, 0, $15_1);
           break __inlined_func$607;
          }
          $1968($4_1, 0, $2_1);
          break __inlined_func$607;
         }
         $1970($4_1, 0, $2_1);
         break __inlined_func$607;
        }
        $1973($4_1, 0, $2_1);
        break __inlined_func$607;
       }
       $1983($4_1, 0, $2_1, $3);
       break __inlined_func$607;
      }
      $1983($4_1, 0, $2_1, $0_1);
      break __inlined_func$607;
     }
     $1986($4_1, 0, $13);
    }
   }
   $0_1 = $1645($10_1 + 72 | 0, $4_1, $9);
   if ($0_1) {
    $88($1_1)
   }
   $0_1 = ($0_1 | 0) != 0;
  }
  global$0 = $10_1 + 80 | 0;
  return $0_1;
 }
 
 function $633($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = Math_fround(0), $15_1 = 0, $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = 0, $19 = 0, $20_1 = 0, $21_1 = Math_fround(0), $22_1 = 0, $23_1 = 0, $24 = 0, $25_1 = 0, $26_1 = 0, $27_1 = Math_fround(0), $28_1 = 0, $29_1 = 0, $30 = 0, $31_1 = 0, $32_1 = 0, $33_1 = 0, $34_1 = Math_fround(0), $35_1 = Math_fround(0), $36_1 = 0, $37 = Math_fround(0), $38_1 = Math_fround(0), $39_1 = Math_fround(0), $40_1 = 0, $41_1 = Math_fround(0), $42_1 = Math_fround(0), $43_1 = Math_fround(0), $44_1 = 0, $45_1 = 0, $46_1 = 0, $47_1 = 0, $48_1 = Math_fround(0), $49 = 0, $50_1 = 0, $51_1 = 0, $52_1 = Math_fround(0), $53_1 = Math_fround(0), $54_1 = Math_fround(0), $55_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $11_1 = global$0 - 192 | 0;
  global$0 = $11_1;
  $10_1 = $1944(0, 73568);
  $13 = $1944($10_1, 7080);
  $1968($13, 140, 1);
  if (!$1937($13, 143)) {
   $22_1 = $5_1 & 67108864;
   if ($22_1) {
    $301()
   }
   $24 = $76($13, $0_1);
   $68($11_1 + 184 | 0, $0_1, 0, 1, Math_fround(-1.0));
   $1983($11_1, 168, $1959($4_1, 0), i64toi32_i32$HIGH_BITS);
   $17_1 = $292();
   label$3 : {
    if ($22_1) {
     $16_1 = Math_fround($1963($10_1, 6468) * Math_fround(8.0));
     break label$3;
    }
    $16_1 = $1963($11_1, 188);
   }
   $14 = $1963($10_1 + 5480 | 0, 0);
   $1983($11_1, 24, $1960($11_1, 168), i64toi32_i32$HIGH_BITS);
   $293($11_1 + 176 | 0, $11_1 + 24 | 0, $17_1, Math_fround(Math_fround($14 + $14) + $16_1));
   $14 = $1963($11_1, 176);
   $16_1 = Math_fround(0.0);
   $17_1 = $1963($11_1, 184);
   if ($17_1 > Math_fround(0.0)) {
    $16_1 = Math_fround($17_1 + $1963($10_1 + 5500 | 0, 0))
   }
   $17_1 = $1963($13, 208);
   $4_1 = $1959($13, 208);
   $7_1 = i64toi32_i32$HIGH_BITS;
   $34_1 = $1963($11_1, 180);
   $1986($11_1 + 164 | 0, 0, Math_fround($34_1 + $1963($13 + 212 | 0, 0)));
   $1983($11_1, 152, $4_1, $7_1);
   $1986($11_1, 160, Math_fround($14 + $17_1));
   $9 = $11_1 + 136 | 0;
   $1986($9 + 12 | 0, 0, Math_fround($34_1 + $1963($11_1, 156)));
   $1986($11_1, 144, Math_fround(Math_fround($14 + $16_1) + $1963($11_1, 152)));
   $1983($11_1, 136, $4_1, $7_1);
   $277($9, $1963($10_1, 5480));
   label$6 : {
    label$7 : {
     if ($22_1) {
      label$9 : {
       if (!$213($11_1 + 136 | 0, $24, $11_1 + 152 | 0, 256)) {
        $275();
        $9 = 0;
        $7_1 = $13;
        $15_1 = 0;
        break label$9;
       }
       $12_1 = $1944($10_1 + 7244 | 0, 0);
       $9 = $1944($10_1 + 7248 | 0, 0);
       $1982($13, 208, $4_1, $7_1);
       $56(3, $10_1 + 5728 | 0);
       $58(7, $1963($10_1 + 5484 | 0, 0));
       $58(8, $1963($10_1 + 5488 | 0, 0));
       $1982($11_1, 88, 0, 0);
       $4_1 = $11_1 + 88 | 0;
       $59(2, $4_1);
       $1986($11_1, 92, Math_fround($1963($11_1 + 164 | 0, 0) - $1963($11_1, 156)));
       $1986($11_1, 88, Math_fround($1963($11_1, 160) - $1963($11_1, 152)));
       $4_1 = $207($0_1, $24, $4_1, 1, 4);
       $60(3);
       $57(1);
       if (!$4_1) {
        $211();
        $275();
        $7_1 = $13;
        $15_1 = 0;
        break label$9;
       }
       $7_1 = $1944($10_1, 7080);
       $4_1 = $7_1 + 298 | 0;
       $8 = $1941($4_1, 0);
       $1970($4_1, 0, 1 << $1944($7_1 + 292 | 0, 0) | $8);
       $1986($7_1, 208, Math_fround($1963($10_1, 5476) + $1963($7_1, 208)));
       $4_1 = $7_1 + 212 | 0;
       $1986($4_1, 0, Math_fround($1963($10_1 + 5480 | 0, 0) + $1963($4_1, 0)));
       $14 = Math_fround($14 - $1963($7_1, 128));
       $15_1 = 1;
      }
      $4_1 = $9;
      $8 = $9;
      $9 = 0;
      if ($15_1) {
       break label$7
      }
      break label$6;
     }
     if (!($5_1 & 268435456)) {
      $9 = 0;
      if (!$213($11_1 + 136 | 0, $24, $11_1 + 152 | 0, 256)) {
       break label$6
      }
     }
     $4_1 = 0;
     $8 = $1944($10_1 + 7248 | 0, 0);
     $7_1 = $13;
    }
    $15_1 = $91($11_1 + 152 | 0, $24);
    if ($15_1) {
     $1973($10_1, 7872, 1)
    }
    $32_1 = $7_1;
    $29_1 = $1944(0, 73568);
    $18_1 = $1944($29_1, 8180);
    $7_1 = $1944($10_1, 7136);
    $19 = 0;
    label$14 : {
     if (($7_1 | 0) == ($24 | 0)) {
      break label$14
     }
     $19 = 1;
     if (($1944($10_1, 7532) | 0) == ($24 | 0)) {
      break label$14
     }
     $19 = 0;
     if (($1944($10_1, 7520) | 0) != ($24 | 0)) {
      break label$14
     }
     $19 = ($1944($10_1, 7560) | 0) == 2;
    }
    $28_1 = ($18_1 | 0) == ($24 | 0);
    $9 = 0;
    if ($15_1) {
     $20_1 = ($1937($10_1 + 992 | 0, 0) | 0) != 0
    } else {
     $20_1 = 0
    }
    $30 = $28_1 & ($22_1 | 0) != 0;
    $25_1 = 0;
    label$16 : {
     if (!$30) {
      break label$16
     }
     $25_1 = 0;
     if ($7_1) {
      break label$16
     }
     $25_1 = ($1944($10_1, 7196) | 0) == ($81($32_1, 14116) | 0);
    }
    if ($30) {
     $9 = ($1944($10_1, 7136) | 0) == ($81($32_1, 14116) | 0)
    }
    $35_1 = $14;
    $14 = Math_fround(3402823466385288598117041.0e14);
    if ($22_1) {
     $14 = $1963($32_1 + 92 | 0, 0)
    }
    $7_1 = $8;
    $49 = $12_1;
    $50_1 = $4_1;
    $8 = $28_1 ? $29_1 + 8180 | 0 : 0;
    $28_1 = $7_1 & 256;
    $12_1 = 0;
    if (($18_1 | 0) == ($24 | 0)) {
     $18_1 = ($1937($8 + 83 | 0, 0) | 0) != (!$22_1 | 0)
    } else {
     $18_1 = 0
    }
    $29_1 = $19 | ($20_1 | $25_1) | ($28_1 | 0) != 0;
    $30 = $29_1 | $9;
    label$20 : {
     label$21 : {
      if (($30 | 0) == 1) {
       if ($18_1 | ($1944($10_1, 7136) | 0) != ($24 | 0)) {
        break label$21
       }
       break label$20;
      }
      if (!$18_1) {
       break label$20
      }
     }
     $1973($10_1 + 11868 | 0, 0, -1097229926);
     $12_1 = $1697($2_1);
     $4_1 = $12_1 + 1 | 0;
     $7_1 = $1944($10_1 + 8220 | 0, 0);
     label$23 : {
      if (($12_1 | 0) < ($7_1 | 0)) {
       break label$23
      }
      $12_1 = $7_1 ? $7_1 + (($7_1 | 0) / 2 | 0) | 0 : 8;
      $12_1 = ($4_1 | 0) < ($12_1 | 0) ? $12_1 : $4_1;
      if (($7_1 | 0) >= ($12_1 | 0)) {
       break label$23
      }
      $7_1 = $16($12_1);
      $8 = $1944($10_1 + 8224 | 0, 0);
      if ($8) {
       $1602($7_1, $8, $1944($10_1, 8216));
       $17($1944($10_1, 8224));
      }
      $1973($10_1, 8220, $12_1);
      $1973($10_1, 8224, $7_1);
     }
     $1973($10_1, 8216, $4_1);
     $1602($1944($10_1 + 8224 | 0, 0), $2_1, $4_1);
     $1973($11_1, 88, 0);
     $7_1 = $3 + 1 | 0;
     $4_1 = $1944($10_1 + 8196 | 0, 0);
     label$27 : {
      if (($4_1 | 0) > ($3 | 0)) {
       break label$27
      }
      $12_1 = $4_1 ? $4_1 + (($4_1 | 0) / 2 | 0) | 0 : 8;
      $12_1 = ($7_1 | 0) < ($12_1 | 0) ? $12_1 : $7_1;
      if (($4_1 | 0) >= ($12_1 | 0)) {
       break label$27
      }
      $4_1 = $16($12_1 << 1);
      $8 = $1944($10_1 + 8200 | 0, 0);
      if ($8) {
       $1602($4_1, $8, $1944($10_1, 8192) << 1);
       $17($1944($10_1, 8200));
      }
      $1973($10_1, 8196, $12_1);
      $1973($10_1, 8200, $4_1);
     }
     $1973($10_1, 8192, $7_1);
     $4_1 = $1944($10_1 + 8208 | 0, 0);
     label$31 : {
      if (($4_1 | 0) >= 0) {
       break label$31
      }
      $7_1 = $4_1 + (($4_1 | 0) / 2 | 0) | 0;
      $7_1 = ($7_1 | 0) > 0 ? $7_1 : 0;
      if (($4_1 | 0) >= ($7_1 | 0)) {
       break label$31
      }
      $4_1 = $16($7_1);
      $12_1 = $1944($10_1 + 8212 | 0, 0);
      if ($12_1) {
       $1602($4_1, $12_1, $1944($10_1, 8204));
       $17($1944($10_1, 8212));
      }
      $1973($10_1, 8208, $7_1);
      $1973($10_1, 8212, $4_1);
     }
     $1973($10_1, 8204, 0);
     $1968($10_1 + 8228 | 0, 0, 0);
     $4_1 = $10_1 + 8184 | 0;
     $1973($4_1, 0, $25($1944($10_1 + 8200 | 0, 0), $3, $2_1, 0, $11_1 + 88 | 0));
     $1973($10_1 + 8188 | 0, 0, $1944($11_1, 88) - $2_1 | 0);
     $12_1 = $18_1 | ($1944($10_1, 8180) | 0) != ($24 | 0);
     label$33 : {
      if (!$12_1) {
       $8 = $10_1 + 8240 | 0;
       $7_1 = $1944($8, 0);
       $4_1 = $1944($4_1, 0);
       $1973($8, 0, ($4_1 | 0) > ($7_1 | 0) ? $7_1 : $4_1);
       $8 = $10_1 + 8244 | 0;
       $7_1 = $1944($8, 0);
       $1973($8, 0, ($4_1 | 0) > ($7_1 | 0) ? $7_1 : $4_1);
       $8 = $10_1 + 8248 | 0;
       $7_1 = $1944($8, 0);
       $1973($8, 0, ($4_1 | 0) > ($7_1 | 0) ? $7_1 : $4_1);
       break label$33;
      }
      $1973($10_1, 8180, $24);
      $1973($10_1 + 8236 | 0, 0, 0);
      $1982($10_1 + 11860 | 0, 0, 0, 999);
      $1972($10_1 + 11854 | 0, 0, 6488064);
      $1973($10_1 + 8248 | 0, 0, 0);
      $1973($10_1 + 8268 | 0, 0, 0);
      $1968($10_1 + 8262 | 0, 0, 0);
      $1982($10_1 + 8240 | 0, 0, 0, 0);
      $1968($10_1 + 8263 | 0, 0, !$22_1);
      $1970($10_1 + 8260 | 0, 0, 256);
      $1973($10_1 + 8256 | 0, 0, 0);
      $1968($10_1 + 8252 | 0, 0, 0);
     }
     $4_1 = 0;
     label$35 : {
      if ($22_1) {
       break label$35
      }
      $4_1 = $5_1 >>> 4 & 1;
      label$36 : {
       if (!$19) {
        break label$36
       }
       if (!$12_1) {
        if ($1937($10_1, 7536) & 4) {
         break label$36
        }
       }
       $4_1 = 1;
      }
      if (!$28_1) {
       if (!$20_1) {
        break label$35
       }
       if (!$1937($10_1 + 252 | 0, 0)) {
        break label$35
       }
      }
      $4_1 = 1;
     }
     if ($5_1 & 8192) {
      $1968($10_1 + 8252 | 0, 0, 1)
     }
     $12_1 = $4_1;
     $8 = $10_1 + 8180 | 0;
    }
    label$42 : {
     if (!($29_1 & ($1944($10_1, 7136) | 0) != ($24 | 0))) {
      break label$42
     }
     $85($24, $13);
     $330($24, $13);
     $125($13);
     $1973($10_1, 7156, $1944($10_1, 7156) | ($5_1 & 67108992 ? 15 : 3));
     $1973($10_1, 7160, $1944($10_1, 7160) | 2);
     $4_1 = $1960($10_1, 7168) | ($22_1 ? 480 : 384);
     $7_1 = i64toi32_i32$HIGH_BITS;
     $1983($10_1, 7168, $4_1, $7_1);
     if (!($5_1 & 1088)) {
      break label$42
     }
     $1983($10_1, 7168, $4_1 | 1, $7_1);
    }
    label$43 : {
     if ($8) {
      break label$43
     }
     if (($1944($10_1, 7136) | 0) != ($24 | 0)) {
      break label$43
     }
     $86();
    }
    $7_1 = $1944($10_1, 7136);
    if (($24 | 0) == ($7_1 | 0)) {
     $4_1 = ($30 ^ -1) & ($1937($10_1 + 992 | 0, 0) | 0) != 0
    } else {
     $4_1 = 0
    }
    $36_1 = ($8 | 0) != 0 & $9 | ($7_1 | 0) == ($24 | 0);
    $25_1 = $5_1 & 16384;
    if ($8) {
     $7_1 = $36_1 & (($1944($8 - -64 | 0, 0) | 0) != ($1944($8 + 68 | 0, 0) | 0) | $12_1)
    } else {
     $7_1 = 0
    }
    if (!(!($36_1 | $7_1) | (!$25_1 | !$8))) {
     $1973($11_1, 88, 0);
     $9 = $3 + 1 | 0;
     $13 = $1944($8 + 16 | 0, 0);
     label$52 : {
      if (($13 | 0) > ($3 | 0)) {
       break label$52
      }
      $18_1 = $13 ? $13 + (($13 | 0) / 2 | 0) | 0 : 8;
      $18_1 = ($9 | 0) < ($18_1 | 0) ? $18_1 : $9;
      if (($13 | 0) >= ($18_1 | 0)) {
       break label$52
      }
      $13 = $16($18_1 << 1);
      $28_1 = $1944($8 + 20 | 0, 0);
      if ($28_1) {
       $1602($13, $28_1, $1944($8, 12) << 1);
       $17($1944($8, 20));
      }
      $1973($8, 16, $18_1);
      $1973($8, 20, $13);
     }
     $1973($8, 12, $9);
     $9 = $25($1944($8 + 20 | 0, 0), $9, $2_1, 0, $11_1 + 88 | 0);
     $1973($8, 4, $9);
     $1973($8, 8, $1944($11_1, 88) - $2_1 | 0);
     $13 = $1944($8, 60);
     $1973($8, 60, ($9 | 0) > ($13 | 0) ? $13 : $9);
     $18_1 = $8 - -64 | 0;
     $13 = $1944($18_1, 0);
     $13 = ($9 | 0) > ($13 | 0) ? $13 : $9;
     $1973($18_1, 0, $13);
     $18_1 = $8 + 68 | 0;
     $28_1 = $1944($18_1, 0);
     $9 = ($9 | 0) > ($28_1 | 0) ? $28_1 : $9;
     $1973($18_1, 0, $9);
     $7_1 = $7_1 & ($9 | 0) != ($13 | 0);
    }
    $18_1 = $7_1;
    label$56 : {
     label$57 : {
      if (!($7_1 | $36_1)) {
       if (!$8) {
        $7_1 = 0;
        break label$56;
       }
       if (($1944($10_1, 7136) | 0) != ($24 | 0)) {
        $7_1 = 0;
        break label$56;
       }
       $7_1 = 0;
       if (!$25_1) {
        break label$57
       }
       break label$56;
      }
      if (!$8) {
       $7_1 = 0;
       break label$56;
      }
      $7_1 = 0;
      if ($25_1) {
       break label$56
      }
     }
     $7_1 = ($1937($8, 48) | 0) != 0;
    }
    $28_1 = $7_1;
    $20_1 = $5_1 & 32768;
    if ($1_1) {
     if ($28_1) {
      $7_1 = $1944($8 + 32 | 0, 0)
     } else {
      $7_1 = $2_1
     }
     $7_1 = $1937($7_1, 0);
    } else {
     $7_1 = 1
    }
    $7_1 = !$7_1;
    $40_1 = $7_1;
    $33_1 = !$20_1;
    $46_1 = $33_1 | $7_1;
    if (!$46_1) {
     $9 = $472($1944($10_1, 6464), 42);
     $7_1 = $1944($10_1, 6464);
     $1986($10_1 + 11896 | 0, 0, $1963($7_1, 16));
     $1986($10_1 + 11948 | 0, 0, $1963($7_1, 68));
     $1986($10_1 + 11952 | 0, 0, $1963($7_1, 72));
     $1986($10_1 + 11956 | 0, 0, $1963($7_1, 76));
     $1973($10_1 + 11928 | 0, 0, $1944($7_1, 48));
     $1973($10_1 + 11924 | 0, 0, $9);
     $1986($10_1 + 11892 | 0, 0, $1963($9, 4));
     $222($10_1 + 11880 | 0);
    }
    if (($1944($10_1, 7136) | 0) == ($24 | 0)) {
     $1968($8, 3694, 0);
     $1973($8, 3696, $5_1);
     $1973($8, 52, $3);
     $30 = $1944($8, 8);
     $1973($10_1, 12796, 1);
     $7_1 = $1937($10_1 + 236 | 0, 0);
     $1968($10_1, 7149, $7_1 ^ 1);
     label$67 : {
      if ($22_1) {
       $17_1 = Math_fround($1963($10_1 + 232 | 0, 0) - $1963($32_1 + 212 | 0, 0));
       break label$67;
      }
      $17_1 = Math_fround($1963($10_1, 6468) * Math_fround(.5));
     }
     $29_1 = $1937($10_1 + 177 | 0, 0);
     label$69 : {
      if ($12_1) {
       $1968($8, 3693, 1);
       $1973($8 - -64 | 0, 0, 0);
       $7_1 = $1944($8, 4);
       $1973($8 + 68 | 0, 0, $7_1);
       $1968($8 + 82 | 0, 0, 0);
       $1973($8, 60, $7_1);
       break label$69;
      }
      $16_1 = Math_fround(Math_fround(Math_fround($1963($10_1 + 228 | 0, 0) - $1963($11_1, 152)) - $1963($10_1, 5476)) + $1963($8, 56));
      label$71 : {
       if (!$15_1) {
        break label$71
       }
       if ($1941($10_1 + 1002 | 0, 0) >>> 0 < 2) {
        break label$71
       }
       if ($1937($10_1 + 253 | 0, 0)) {
        break label$71
       }
       $13 = $8 + 60 | 0;
       $666($8, $13, $16_1, $17_1);
       $7_1 = $1944($8, 60);
       label$72 : {
        if (!($1937($10_1, 1002) & 1)) {
         if ($7_1) {
          $7_1 = ($1941(($1944($8 + 20 | 0, 0) + ($7_1 << 1) | 0) - 2 | 0, 0) | 0) == 10
         } else {
          $7_1 = 1
         }
         label$75 : {
          if ($7_1) {
           if (($1944($8 - -64 | 0, 0) | 0) == ($1944($8 + 68 | 0, 0) | 0)) {
            break label$75
           }
          }
          $667($8, 2097164);
         }
         label$77 : {
          if (($1944($8, 64) | 0) != ($1944($8, 68) | 0)) {
           break label$77
          }
          $9 = $1944($8 - -64 | 0, 0);
          $7_1 = $1944($8 + 68 | 0, 0);
          if (($9 | 0) == ($7_1 | 0)) {
           $7_1 = $1944($8, 60);
           $1973($8, 68, $7_1);
           $1973($8, 64, $7_1);
           break label$77;
          }
          $1973($13, 0, $7_1);
         }
         $9 = $1944($8, 60);
         $7_1 = $9 + 1 | 0;
         $12_1 = $1944($8, 4);
         label$1 : {
          if (($7_1 | 0) >= ($12_1 | 0)) {
           break label$1
          }
          $44_1 = $1944($8, 3696) & 32768;
          label$30 : {
           while (1) {
            $15_1 = $9;
            $9 = $7_1;
            label$5 : {
             if ($44_1) {
              break label$5
             }
             if (($15_1 | 0) < 0) {
              break label$30
             }
             label$61 : {
              label$73 : {
               $31_1 = $1944($8, 20);
               $7_1 = $1941($31_1 + ($15_1 << 1) | 0, 0);
               switch ($7_1 - 9 | 0) {
               case 0:
               case 1:
               case 4:
               case 23:
               case 31:
               case 32:
               case 35:
               case 50:
               case 82:
               case 84:
               case 114:
               case 115:
               case 116:
                break label$5;
               case 2:
               case 3:
               case 5:
               case 6:
               case 7:
               case 8:
               case 9:
               case 10:
               case 11:
               case 12:
               case 13:
               case 14:
               case 15:
               case 16:
               case 17:
               case 18:
               case 19:
               case 20:
               case 21:
               case 22:
               case 24:
               case 25:
               case 26:
               case 27:
               case 28:
               case 29:
               case 30:
               case 33:
               case 34:
               case 36:
               case 37:
               case 38:
               case 39:
               case 40:
               case 41:
               case 42:
               case 43:
               case 44:
               case 45:
               case 46:
               case 47:
               case 48:
               case 49:
               case 51:
               case 52:
               case 53:
               case 54:
               case 55:
               case 56:
               case 57:
               case 58:
               case 59:
               case 60:
               case 61:
               case 62:
               case 63:
               case 64:
               case 65:
               case 66:
               case 67:
               case 68:
               case 69:
               case 70:
               case 71:
               case 72:
               case 73:
               case 74:
               case 75:
               case 76:
               case 77:
               case 78:
               case 79:
               case 80:
               case 81:
               case 83:
               case 85:
               case 86:
               case 87:
               case 88:
               case 89:
               case 90:
               case 91:
               case 92:
               case 93:
               case 94:
               case 95:
               case 96:
               case 97:
               case 98:
               case 99:
               case 100:
               case 101:
               case 102:
               case 103:
               case 104:
               case 105:
               case 106:
               case 107:
               case 108:
               case 109:
               case 110:
               case 111:
               case 112:
               case 113:
                break label$61;
               default:
                break label$73;
               };
              }
              if (($7_1 | 0) == 12288) {
               break label$5
              }
             }
             label$8 : {
              $7_1 = $9;
              $15_1 = $1941(($7_1 << 1) + $31_1 | 0, 0);
              switch ($15_1 - 9 | 0) {
              case 0:
              case 1:
              case 4:
              case 23:
              case 31:
              case 32:
              case 35:
              case 50:
              case 82:
              case 84:
              case 114:
              case 115:
              case 116:
               break label$1;
              case 2:
              case 3:
              case 5:
              case 6:
              case 7:
              case 8:
              case 9:
              case 10:
              case 11:
              case 12:
              case 13:
              case 14:
              case 15:
              case 16:
              case 17:
              case 18:
              case 19:
              case 20:
              case 21:
              case 22:
              case 24:
              case 25:
              case 26:
              case 27:
              case 28:
              case 29:
              case 30:
              case 33:
              case 34:
              case 36:
              case 37:
              case 38:
              case 39:
              case 40:
              case 41:
              case 42:
              case 43:
              case 44:
              case 45:
              case 46:
              case 47:
              case 48:
              case 49:
              case 51:
              case 52:
              case 53:
              case 54:
              case 55:
              case 56:
              case 57:
              case 58:
              case 59:
              case 60:
              case 61:
              case 62:
              case 63:
              case 64:
              case 65:
              case 66:
              case 67:
              case 68:
              case 69:
              case 70:
              case 71:
              case 72:
              case 73:
              case 74:
              case 75:
              case 76:
              case 77:
              case 78:
              case 79:
              case 80:
              case 81:
              case 83:
              case 85:
              case 86:
              case 87:
              case 88:
              case 89:
              case 90:
              case 91:
              case 92:
              case 93:
              case 94:
              case 95:
              case 96:
              case 97:
              case 98:
              case 99:
              case 100:
              case 101:
              case 102:
              case 103:
              case 104:
              case 105:
              case 106:
              case 107:
              case 108:
              case 109:
              case 110:
              case 111:
              case 112:
              case 113:
               break label$5;
              default:
               break label$8;
              };
             }
             if (($15_1 | 0) == 12288) {
              break label$30
             }
            }
            $7_1 = $9 + 1 | 0;
            if (($12_1 | 0) != ($7_1 | 0)) {
             continue
            }
            break;
           };
           $7_1 = $12_1;
           break label$1;
          }
          $7_1 = $9;
         }
         $7_1 = ($7_1 | 0) < ($12_1 | 0) ? $7_1 : $12_1;
         $1973($8, 68, $7_1);
         $1973($8, 60, $7_1);
         $9 = $1944($8, 4);
         $7_1 = $13;
         $12_1 = $1944($7_1, 4);
         $13 = $1944($7_1, 8);
         label$10 : {
          if (($12_1 | 0) == ($13 | 0)) {
           break label$10
          }
          if (($9 | 0) < ($12_1 | 0)) {
           $1973($7_1, 4, $9)
          }
          if (($9 | 0) < ($13 | 0)) {
           $1973($7_1, 8, $9)
          }
          $12_1 = $1944($7_1, 4);
          if (($1944($7_1, 8) | 0) != ($12_1 | 0)) {
           break label$10
          }
          $1973($7_1, 0, $12_1);
         }
         if (($1944($7_1, 0) | 0) > ($9 | 0)) {
          $1973($7_1, 0, $9)
         }
         break label$72;
        }
        $7_1 = $1941($1944($8 + 20 | 0, 0) + ($7_1 << 1) | 0, 0);
        $667($8, 2097156);
        $667($8, 6291461);
        $667($8, 6291457);
        if (!(!$22_1 | ($7_1 & 65535) == 10)) {
         $7_1 = $8 + 68 | 0;
         $9 = $1944($7_1, 0);
         $13 = $7_1;
         $7_1 = $8 - -64 | 0;
         $12_1 = $1944($7_1, 0);
         $1973($13, 0, $12_1);
         $1973($7_1, 0, $9);
         $1973($8, 60, $12_1);
        }
        $1968($8, 3692, 0);
       }
       $1973($8, 3688, -1097229926);
       break label$69;
      }
      label$80 : {
       if (!$1937($10_1 + 992 | 0, 0)) {
        break label$80
       }
       if ($1937($8, 3693)) {
        break label$80
       }
       if (!$15_1) {
        break label$69
       }
       $666($8, $8 + 60 | 0, $16_1, $17_1);
       $1973($8, 3688, -1097229926);
       break label$69;
      }
      if (!($7_1 & 255)) {
       break label$69
      }
      if ($1937($8, 3693)) {
       break label$69
      }
      if ($1963($10_1 + 880 | 0, 0) == Math_fround(0.0)) {
       if ($1963($10_1 + 884 | 0, 0) == Math_fround(0.0)) {
        break label$69
       }
      }
      $12_1 = $8 + 60 | 0;
      label$11 : {
       if (!$1937($12_1, 23)) {
        break label$11
       }
       $7_1 = $1944($8 + 20 | 0, 0);
       $13 = $7_1 + ($1944($8, 4) << 1) | 0;
       while (1) {
        $9 = $7_1;
        if ($13 >>> 0 <= $7_1 >>> 0) {
         $17_1 = Math_fround(0.0);
         break label$11;
        }
        $7_1 = $9 + 2 | 0;
        $17_1 = Math_fround(0.0);
        if (($1941($9, 0) | 0) != 10) {
         continue
        }
        break;
       };
      }
      if (($1944($12_1, 4) | 0) == ($1944($12_1, 8) | 0)) {
       $1973($12_1, 4, $1944($12_1, 0))
      }
      $7_1 = $696($8, $16_1, $17_1);
      $1973($12_1, 0, $7_1);
      $1973($12_1, 8, $7_1);
      $1968($8, 3692, 1);
      $1973($8, 3688, -1097229926);
     }
     label$82 : {
      if (!$1937($8, 3693)) {
       break label$82
      }
      if ($1937($10_1, 236)) {
       break label$82
      }
      $1968($8, 3693, 0);
     }
     $9 = $5_1 & 1024;
     label$83 : {
      label$84 : {
       label$85 : {
        if ($1937($10_1 + 252 | 0, 0)) {
         $12_1 = $1937($10_1 + 254 | 0, 0);
         $7_1 = !$12_1;
         if ($29_1 & 255) {
          break label$85
         }
         break label$83;
        }
        if ($29_1 & 255) {
         break label$84
        }
        $7_1 = 0;
        break label$83;
       }
       if (!$12_1) {
        break label$83
       }
      }
      $7_1 = ($1937($10_1 + 255 | 0, 0) | 0) != 0;
     }
     $12_1 = $7_1;
     label$87 : {
      if (!$9) {
       break label$87
      }
      $7_1 = $1944($1944(0, 73568) + 52 | 0, 0);
      if (($7_1 | 0) >= 0) {
       $7_1 = $174($7_1, 1)
      } else {
       $7_1 = 0
      }
      if ($25_1 | ($12_1 | $7_1 ^ 1)) {
       break label$87
      }
      if ($1937($10_1 + 253 | 0, 0) & 255) {
       break label$87
      }
      $9 = $1944($10_1 + 5412 | 0, 0);
      $13 = $9 + ($1944($10_1 + 5404 | 0, 0) << 1) | 0;
      label$89 : {
       while (1) {
        $7_1 = $9;
        if ($7_1 >>> 0 >= $13 >>> 0) {
         break label$89
        }
        $9 = $7_1 + 2 | 0;
        if (($1941($7_1, 0) | 0) != 9) {
         continue
        }
        break;
       };
       if ($7_1 >>> 0 < $13 >>> 0) {
        break label$87
       }
      }
      $1973($11_1, 88, 9);
      if (!$671($11_1 + 88 | 0, $5_1, $6_1, 2)) {
       break label$87
      }
      $667($8, $1944($11_1, 88));
     }
     if (($1944($10_1 + 5404 | 0, 0) | 0) > 0) {
      label$92 : {
       if ($19 | ($12_1 | $25_1)) {
        break label$92
       }
       if (($1944($10_1, 5404) | 0) <= 0) {
        break label$92
       }
       $7_1 = 0;
       while (1) {
        $9 = $1941($1944($10_1, 5412) + ($7_1 << 1) | 0, 0);
        $1973($11_1, 88, $9);
        label$94 : {
         if (($9 | 0) == 9) {
          if ($1937($10_1, 253)) {
           break label$94
          }
         }
         if (!$671($11_1 + 88 | 0, $5_1, $6_1, 2)) {
          break label$94
         }
         $667($8, $1944($11_1, 88));
        }
        $7_1 = $7_1 + 1 | 0;
        if (($1944($10_1, 5404) | 0) > ($7_1 | 0)) {
         continue
        }
        break;
       };
      }
      $7_1 = $1944($10_1 + 5408 | 0, 0);
      label$96 : {
       if (($7_1 | 0) >= 0) {
        break label$96
       }
       $9 = $7_1 + (($7_1 | 0) / 2 | 0) | 0;
       $9 = ($9 | 0) > 0 ? $9 : 0;
       if (($7_1 | 0) >= ($9 | 0)) {
        break label$96
       }
       $7_1 = $16($9 << 1);
       $12_1 = $1944($10_1 + 5412 | 0, 0);
       if ($12_1) {
        $1602($7_1, $12_1, $1944($10_1, 5404) << 1);
        $17($1944($10_1, 5412));
       }
       $1973($10_1, 5408, $9);
       $1973($10_1, 5412, $7_1);
      }
      $1973($10_1, 5404, 0);
     }
    } else {
     $30 = 0
    }
    $44_1 = $30;
    label$98 : {
     label$99 : {
      if (($1944($10_1, 7136) | 0) != ($24 | 0)) {
       break label$99
      }
      if ($1937($10_1, 7148) | $4_1) {
       break label$99
      }
      $7_1 = $1944(0, 73568);
      $1937($7_1 + 252 | 0, 0);
      $1937($7_1 + 253 | 0, 0);
      $1937($7_1 + 254 | 0, 0);
      $1937($7_1 + 255 | 0, 0);
      $9 = $8 + 76 | 0;
      $17_1 = Math_fround(Math_fround($34_1 - $1963($10_1, 5480)) / $1963($10_1, 6468));
      label$100 : {
       if (Math_fround(Math_abs($17_1)) < Math_fround(2147483648.0)) {
        $7_1 = ~~$17_1;
        break label$100;
       }
       $7_1 = -2147483648;
      }
      $30 = ($7_1 | 0) <= 1 ? 1 : $7_1;
      $1973($9, 0, $30);
      $19 = $1937($10_1 + 177 | 0, 0);
      if ($19) {
       $31_1 = ($1944($10_1, 892) | 0) == 10
      } else {
       $31_1 = 0
      }
      $7_1 = $10_1 + 253 | 0;
      $9 = ($19 ? 254 : 252) + $10_1 | 0;
      label$103 : {
       if (!$19) {
        $13 = 1;
        $15_1 = 0;
        break label$103;
       }
       label$105 : {
        if (!$1937($10_1 + 255 | 0, 0)) {
         break label$105
        }
        if ($1937($10_1, 252)) {
         break label$105
        }
        $13 = 8;
        $15_1 = !$1937($10_1, 254);
        break label$103;
       }
       $13 = 8;
       $15_1 = 0;
      }
      $23_1 = $1937($7_1, 0);
      $29_1 = $1937($9, 0);
      label$106 : {
       label$107 : {
        label$108 : {
         $9 = $1944($10_1, 892);
         $12_1 = ($9 | 0) != ($13 | 0);
         label$109 : {
          if ($12_1) {
           break label$109
          }
          $7_1 = $1944($1944(0, 73568) + 128 | 0, 0);
          if (($7_1 | 0) < 0) {
           break label$109
          }
          if ($174($7_1, 1)) {
           break label$108
          }
         }
         $13 = 0;
         if (($9 | 0) != 2) {
          break label$106
         }
         $7_1 = $1944($1944(0, 73568) + 92 | 0, 0);
         if (($7_1 | 0) >= 0) {
          $7_1 = $174($7_1, 1)
         } else {
          $7_1 = 0
         }
         $7_1 = $7_1 ^ 1 | ($20_1 | 0) != 0 | ($25_1 | 0) != 0;
         $13 = $7_1 ^ 1;
         if ($7_1) {
          break label$106
         }
         if ($22_1) {
          break label$107
         }
         break label$106;
        }
        $7_1 = $20_1 | $25_1;
        $13 = !$7_1;
        if ($7_1 | !$22_1) {
         break label$106
        }
       }
       $13 = ($1944($8 - -64 | 0, 0) | 0) != ($1944($8 + 68 | 0, 0) | 0);
      }
      $7_1 = $13;
      label$113 : {
       label$114 : {
        label$115 : {
         label$116 : {
          label$117 : {
           if ($12_1) {
            break label$117
           }
           $13 = $1944($1944(0, 73568) + 120 | 0, 0);
           if (($13 | 0) < 0) {
            break label$117
           }
           if ($174($13, 1)) {
            break label$116
           }
          }
          $13 = 0;
          if (($9 | 0) != 1) {
           break label$113
          }
          $13 = $1944($1944(0, 73568) + 88 | 0, 0);
          if (($13 | 0) >= 0) {
           $13 = $174($13, 1)
          } else {
           $13 = 0
          }
          $13 = $13 & $33_1;
          if ($22_1) {
           break label$115
          }
          break label$113;
         }
         if (($5_1 & 67141632) == 67108864) {
          break label$114
         }
         $13 = !$20_1;
         break label$113;
        }
        if (!$13) {
         break label$113
        }
       }
       $13 = ($1944($8 - -64 | 0, 0) | 0) != ($1944($8 + 68 | 0, 0) | 0);
      }
      label$119 : {
       label$120 : {
        label$121 : {
         if ($12_1) {
          break label$121
         }
         $20_1 = $1944($1944(0, 73568) + 124 | 0, 0);
         if (($20_1 | 0) < 0) {
          break label$121
         }
         if ($174($20_1, 1)) {
          break label$120
         }
        }
        $33_1 = 0;
        if (($9 | 0) != 2) {
         break label$119
        }
        $9 = $1944($1944(0, 73568) + 88 | 0, 0);
        $33_1 = 0;
        if (($9 | 0) < 0) {
         break label$119
        }
        $33_1 = 0;
        if (!$174($9, 1)) {
         break label$119
        }
       }
       $33_1 = !$25_1;
      }
      $9 = $5_1 & 65536;
      if ($12_1) {
       $20_1 = 0
      } else {
       $26_1 = !$9;
       $20_1 = $1944($1944(0, 73568) + 136 | 0, 0);
       if (($20_1 | 0) >= 0) {
        $20_1 = $174($20_1, 1)
       } else {
        $20_1 = 0
       }
       $20_1 = $26_1 & ($20_1 & !$25_1);
      }
      label$125 : {
       label$126 : {
        label$127 : {
         if ($12_1) {
          break label$127
         }
         $45_1 = $1944($1944(0, 73568) + 132 | 0, 0);
         if (($45_1 | 0) < 0) {
          break label$127
         }
         if ($174($45_1, 1)) {
          break label$126
         }
        }
        $26_1 = 0;
        if (!$31_1) {
         break label$125
        }
        $31_1 = $1944($1944(0, 73568) + 136 | 0, 0);
        $26_1 = 0;
        if (($31_1 | 0) < 0) {
         break label$125
        }
        $26_1 = 0;
        if (!$174($31_1, 1)) {
         break label$125
        }
       }
       $26_1 = !($9 | $25_1);
      }
      $31_1 = $26_1;
      $9 = $1944($1944(0, 73568) + 104 | 0, 0);
      label$129 : {
       if (($9 | 0) >= 0) {
        $26_1 = 1;
        if ($174($9, 1)) {
         break label$129
        }
       }
       $9 = $1944($1944(0, 73568) + 112 | 0, 0);
       $26_1 = 0;
       if (($9 | 0) < 0) {
        break label$129
       }
       $26_1 = $174($9, 1);
      }
      $45_1 = $26_1;
      label$131 : {
       if ($333(0, 1) > Math_fround(0.0)) {
        $9 = $1944($1944(0, 73568) + 100 | 0, 0);
        $26_1 = 1;
        if (($9 | 0) < 0) {
         break label$131
        }
        $26_1 = 1;
        if (!$174($9, 1)) {
         break label$131
        }
       }
       $26_1 = $333(2, 1) > Math_fround(0.0);
      }
      $51_1 = $26_1;
      $9 = $1944($1944(0, 73568) + 108 | 0, 0);
      label$134 : {
       if (($9 | 0) >= 0) {
        $26_1 = 1;
        if ($174($9, 1)) {
         break label$134
        }
       }
       $26_1 = $333(1, 1) > Math_fround(0.0);
      }
      $9 = $23_1 << 22;
      label$136 : {
       label$141 : {
        $23_1 = $1944($1944(0, 73568) + 56 | 0, 0);
        if (($23_1 | 0) < 0) {
         break label$141
        }
        if (!$174($23_1, 1)) {
         break label$141
        }
        $667($8, $9 | ($15_1 ? 2097156 : $29_1 & 255 ? 2097164 : 2097152));
        $9 = 0;
        $7_1 = 0;
        break label$136;
       }
       label$142 : {
        $23_1 = $1944($1944(0, 73568) + 60 | 0, 0);
        if (($23_1 | 0) < 0) {
         break label$142
        }
        if (!$174($23_1, 1)) {
         break label$142
        }
        $667($8, $9 | ($15_1 ? 2097157 : $29_1 & 255 ? 2097165 : 2097153));
        $9 = 0;
        $7_1 = 0;
        break label$136;
       }
       $47_1 = !$22_1;
       $23_1 = $1944($1944(0, 73568) - -64 | 0, 0);
       if (($23_1 | 0) >= 0) {
        $23_1 = $174($23_1, 1)
       } else {
        $23_1 = 0
       }
       if (!($47_1 | !$23_1)) {
        if ($1937($10_1, 252)) {
         $17_1 = Math_fround($1963($32_1 + 92 | 0, 0) - $1963($10_1, 6468));
         $307($32_1, $17_1 >= Math_fround(0.0) ? $17_1 : Math_fround(0.0));
         $9 = 0;
         $7_1 = 0;
         break label$136;
        }
        $667($8, $9 | ($15_1 ? 2097158 : 2097154));
        $9 = 0;
        $7_1 = 0;
        break label$136;
       }
       $47_1 = !$22_1;
       $23_1 = $1944($1944(0, 73568) + 68 | 0, 0);
       if (($23_1 | 0) >= 0) {
        $23_1 = $174($23_1, 1)
       } else {
        $23_1 = 0
       }
       if (!($47_1 | !$23_1)) {
        if ($1937($10_1, 252)) {
         $17_1 = Math_fround($1963($32_1 + 92 | 0, 0) + $1963($10_1, 6468));
         $16_1 = $306();
         $307($32_1, $16_1 > $17_1 ? $17_1 : $16_1);
         $9 = 0;
         $7_1 = 0;
         break label$136;
        }
        $667($8, $9 | ($15_1 ? 2097159 : 2097155));
        $9 = 0;
        $7_1 = 0;
        break label$136;
       }
       $23_1 = !$22_1;
       $15_1 = $1944($1944(0, 73568) + 72 | 0, 0);
       if (($15_1 | 0) >= 0) {
        $15_1 = $174($15_1, 1)
       } else {
        $15_1 = 0
       }
       if (!($23_1 | !$15_1)) {
        $667($8, $9 | 2097166);
        $9 = 0;
        $14 = Math_fround($14 - Math_fround(Math_fround($30 | 0) * $1963($10_1, 6468)));
        $7_1 = 0;
        break label$136;
       }
       $23_1 = !$22_1;
       $15_1 = $1944($1944(0, 73568) + 76 | 0, 0);
       if (($15_1 | 0) >= 0) {
        $15_1 = $174($15_1, 1)
       } else {
        $15_1 = 0
       }
       if (!($23_1 | !$15_1)) {
        $667($8, $9 | 2097167);
        $9 = 0;
        $14 = Math_fround(Math_fround(Math_fround($30 | 0) * $1963($10_1, 6468)) + $14);
        $7_1 = 0;
        break label$136;
       }
       label$153 : {
        $15_1 = $1944($1944(0, 73568) + 80 | 0, 0);
        if (($15_1 | 0) < 0) {
         break label$153
        }
        if (!$174($15_1, 1)) {
         break label$153
        }
        $667($8, $9 | ($1937($10_1, 252) ? 2097158 : 2097156));
        $9 = 0;
        $7_1 = 0;
        break label$136;
       }
       label$154 : {
        $15_1 = $1944($1944(0, 73568) + 84 | 0, 0);
        if (($15_1 | 0) < 0) {
         break label$154
        }
        if (!$174($15_1, 1)) {
         break label$154
        }
        $667($8, $9 | ($1937($10_1, 252) ? 2097159 : 2097157));
        $9 = 0;
        $7_1 = 0;
        break label$136;
       }
       $15_1 = $1944($1944(0, 73568) + 92 | 0, 0);
       if (($15_1 | 0) >= 0) {
        $15_1 = $174($15_1, 1)
       } else {
        $15_1 = 0
       }
       if (!($7_1 | ($15_1 ^ 1 | ($25_1 | 0) != 0))) {
        $667($8, $9 | 2097160);
        $9 = 0;
        $7_1 = 0;
        break label$136;
       }
       $15_1 = $1944($1944(0, 73568) + 96 | 0, 0);
       if (($15_1 | 0) >= 0) {
        $15_1 = $174($15_1, 1)
       } else {
        $15_1 = 0
       }
       if (!(!$15_1 | $25_1)) {
        label$159 : {
         if (($1944($8 - -64 | 0, 0) | 0) != ($1944($8 + 68 | 0, 0) | 0)) {
          break label$159
         }
         if ($29_1 & 255) {
          $7_1 = 6291468
         } else {
          if (!$19) {
           break label$159
          }
          if (!$1937($10_1 + 255 | 0, 0)) {
           break label$159
          }
          if ($1937($10_1, 254)) {
           break label$159
          }
          if ($1937($10_1, 252)) {
           break label$159
          }
          $7_1 = 6291460;
         }
         $667($8, $7_1);
        }
        $667($8, $9 | 2097161);
        $9 = 0;
        $7_1 = 0;
        break label$136;
       }
       label$137 : {
        label$138 : {
         if ($45_1) {
          if (!$22_1) {
           break label$137
          }
          $7_1 = $1937($10_1, 252);
          label$162 : {
           if ($5_1 & 2048) {
            if (!($7_1 & 255)) {
             break label$137
            }
            if (!$25_1) {
             break label$162
            }
            $9 = 0;
            $7_1 = 0;
            break label$136;
           }
           $12_1 = $7_1 & 255;
           $9 = ($12_1 | 0) != 0;
           $7_1 = $9 | $4_1;
           if ($12_1 | $25_1) {
            break label$138
           }
          }
          $1973($11_1, 88, 10);
          if ($671($11_1 + 88 | 0, $5_1, $6_1, 2)) {
           $667($8, $1944($11_1, 88))
          }
          $9 = 0;
          $7_1 = 0;
          break label$136;
         }
         if ($51_1) {
          $9 = 1;
          $4_1 = 1;
          $7_1 = 0;
          break label$136;
         }
         if ($26_1) {
          $9 = 0;
          $4_1 = 1;
          $7_1 = 1;
          break label$136;
         }
         if (($20_1 | $31_1) == 1) {
          $667($8, $20_1 ? 2097162 : 2097163);
          $7_1 = $1944($8, 60);
          $1973($8 + 68 | 0, 0, $7_1);
          $1973($8 - -64 | 0, 0, $7_1);
          $9 = 0;
          $7_1 = 0;
          break label$136;
         }
         label$168 : {
          if ($12_1) {
           break label$168
          }
          $9 = $1944($1944(0, 73568) + 116 | 0, 0);
          if (($9 | 0) < 0) {
           break label$168
          }
          if (!$174($9, 1)) {
           break label$168
          }
          $1968($8, 3692, 1);
          $1973($8 - -64 | 0, 0, 0);
          $7_1 = $1944($8, 4);
          $1973($8 + 68 | 0, 0, $7_1);
          $1968($8 + 82 | 0, 0, 0);
          $1973($8, 60, $7_1);
          $9 = 0;
          $7_1 = 0;
          break label$136;
         }
         $20_1 = $8 + 60 | 0;
         label$169 : {
          if (($7_1 | $13) == 1) {
           if ($1944($10_1 + 212 | 0, 0)) {
            $9 = $1944($8 - -64 | 0, 0);
            $12_1 = $1944($8 + 68 | 0, 0);
            $13 = ($9 | 0) == ($12_1 | 0);
            $15_1 = $13 ? 0 : ($9 | 0) < ($12_1 | 0) ? $9 : $12_1;
            if ($13) {
             $9 = $1944($8, 4)
            } else {
             $9 = ($9 | 0) > ($12_1 | 0) ? $9 : $12_1
            }
            $12_1 = $8 + 20 | 0;
            $13 = $1944($12_1, 0);
            $15_1 = $15_1 << 1;
            $19 = $9 << 1;
            $13 = $28($13 + $15_1 | 0, $13 + $19 | 0) + 1 | 0;
            $9 = $16($13);
            $12_1 = $1944($12_1, 0);
            $27($9, $13, $12_1 + $15_1 | 0, $12_1 + $19 | 0);
            $98($9);
            $17($9);
           }
           if (!$7_1) {
            break label$169
           }
           $7_1 = $8 - -64 | 0;
           $9 = $8 + 68 | 0;
           if (($1944($7_1, 0) | 0) == ($1944($9, 0) | 0)) {
            $1973($8, 64, 0);
            $12_1 = $1944($8, 4);
            $1973($8, 68, $12_1);
            $1968($8 + 82 | 0, 0, 0);
            $1973($8, 60, $12_1);
           }
           $1968($8, 3692, 1);
           if (($1944($7_1, 0) | 0) == ($1944($9, 0) | 0)) {
            break label$169
           }
           $672($8, $20_1);
           $1968($8 + 82 | 0, 0, 0);
           $9 = 0;
           $7_1 = 0;
           break label$136;
          }
          label$175 : {
           if (!$33_1) {
            break label$175
           }
           $13 = $97();
           if (!$13) {
            break label$175
           }
           $15_1 = $16(($1697($13) << 1) + 2 | 0);
           $9 = 0;
           label$176 : {
            if (!$1937($13, 0)) {
             break label$176
            }
            $12_1 = 0;
            while (1) {
             $7_1 = $12_1;
             $19 = $10($11_1 + 88 | 0, $13, 0);
             $12_1 = 5;
             label$178 : {
              if (!$1944($11_1, 88)) {
               break label$178
              }
              $12_1 = 6;
              if (!$671($11_1 + 88 | 0, $5_1, $6_1, 5)) {
               break label$178
              }
              $1970($15_1 + ($7_1 << 1) | 0, 0, $1944($11_1, 88));
              $7_1 = $7_1 + 1 | 0;
              $12_1 = 0;
             }
             $9 = $7_1;
             label$181 : {
              switch ($12_1 | 0) {
              case 0:
              case 6:
               break label$181;
              default:
               break label$176;
              };
             }
             $12_1 = $7_1;
             $13 = $13 + $19 | 0;
             if ($1937($13, 0)) {
              continue
             }
             break;
            };
           }
           $1970($15_1 + ($9 << 1) | 0, 0, 0);
           if (($9 | 0) > 0) {
            $12_1 = $1944($8, 4);
            $7_1 = $20_1;
            $13 = $1944($7_1, 4);
            $20_1 = $1944($7_1, 8);
            label$12 : {
             if (($13 | 0) == ($20_1 | 0)) {
              break label$12
             }
             if (($12_1 | 0) < ($13 | 0)) {
              $1973($7_1, 4, $12_1)
             }
             if (($12_1 | 0) < ($20_1 | 0)) {
              $1973($7_1, 8, $12_1)
             }
             $13 = $1944($7_1, 4);
             if (($1944($7_1, 8) | 0) != ($13 | 0)) {
              break label$12
             }
             $1973($7_1, 0, $13);
            }
            if (($1944($7_1, 0) | 0) > ($12_1 | 0)) {
             $1973($7_1, 0, $12_1)
            }
            $672($8, $7_1);
            if ($676($8, $1944($7_1, 0), $15_1, $9)) {
             $675($7_1 + 32 | 0, $1944($7_1, 0), 0, $9);
             $1968($7_1, 22, 0);
             $1973($7_1, 0, $1944($7_1, 0) + $9 | 0);
            }
            $1968($8, 3692, 1);
           }
           $17($15_1);
           $9 = 0;
           $7_1 = 0;
           break label$136;
          }
          $9 = 0;
          $7_1 = 0;
          break label$136;
         }
         $9 = 0;
         $7_1 = 0;
         break label$136;
        }
        $4_1 = $7_1;
        $7_1 = 0;
        break label$136;
       }
       $9 = 1;
       $4_1 = 1;
       $7_1 = 0;
      }
      $18_1 = $18_1 | $36_1 & ($1944($8 - -64 | 0, 0) | 0) != ($1944($8 + 68 | 0, 0) | 0);
      break label$98;
     }
     $7_1 = 0;
     $9 = 0;
    }
    $33_1 = $18_1;
    $15_1 = $4_1;
    $30 = $9;
    $12_1 = $7_1;
    $20_1 = $5_1 & 262144;
    $7_1 = 0;
    $9 = 0;
    if (($1944($10_1, 7136) | 0) == ($24 | 0)) {
     label$184 : {
      if ($25_1 | $12_1 ^ 1) {
       break label$184
      }
      $9 = $1944($8 + 44 | 0, 0);
      if (!$1695($2_1, $9)) {
       $9 = 0;
       break label$184;
      }
      $4_1 = $1944($8, 36);
      $1973($11_1, 96, 0);
      $1982($11_1, 88, 0, 0);
      $13 = $4_1 - 1 | 0;
      if (($4_1 | 0) >= 2) {
       $7_1 = $9 + $13 | 0;
       $674($11_1 + 88 | 0, $26($9, $7_1) + 1 | 0);
       $25($1944($11_1, 96), $1944($11_1, 88), $9, $7_1, 0);
      }
      $29_1 = $1944($11_1, 96);
      $19 = $1944($8, 4);
      $18_1 = (wasm2js_i32$0 = $1944($11_1, 88) - 1 | 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = ($4_1 | 0) > 1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
      $4_1 = $675($8 + 92 | 0, 0, $19, $18_1);
      if (!(!$4_1 | ($19 | 0) <= 0)) {
       $31_1 = $1944($8 + 20 | 0, 0);
       $7_1 = 0;
       while (1) {
        $23_1 = $7_1 << 1;
        $1970($23_1 + $4_1 | 0, 0, $1941($23_1 + $31_1 | 0, 0));
        $7_1 = $7_1 + 1 | 0;
        if (($19 | 0) != ($7_1 | 0)) {
         continue
        }
        break;
       };
      }
      $1968($8, 3694, 1);
      $4_1 = $8 + 20 | 0;
      $7_1 = $1944($4_1, 0);
      $19 = $1944($8, 4);
      $31_1 = $19 << 1;
      $23_1 = $28($7_1, $31_1 + $7_1 | 0);
      $1973($8, 8, $1944($8, 8) - $23_1 | 0);
      $1973($8, 4, $1944($8, 4) - $19 | 0);
      $4_1 = $1944($4_1, 0) + $31_1 | 0;
      while (1) {
       $19 = $1941($4_1, 0);
       if ($19) {
        $1970($7_1, 0, $19);
        $7_1 = $7_1 + 2 | 0;
       }
       $4_1 = $4_1 + 2 | 0;
       if ($19) {
        continue
       }
       break;
      };
      $1970($7_1, 0, 0);
      label$193 : {
       if (($18_1 | 0) <= 0) {
        break label$193
       }
       if (!$676($8, 0, $29_1, $18_1)) {
        break label$193
       }
       $1973($8, 60, $18_1);
       $1968($8 + 82 | 0, 0, 0);
      }
      $4_1 = $1944($11_1, 96);
      if ($4_1) {
       $17($4_1)
      }
      $7_1 = $13;
     }
     label$195 : {
      if (!($5_1 & 32) | $30 ^ 1 ? $12_1 : 0) {
       break label$195
      }
      if (!$25_1) {
       $1968($8, 48, 1);
       $4_1 = $1944($8 + 28 | 0, 0);
       $12_1 = $1944($8, 12) << 2 | 1;
       label$199 : {
        if (($4_1 | 0) >= ($12_1 | 0)) {
         break label$199
        }
        $13 = $4_1 ? $4_1 + (($4_1 | 0) / 2 | 0) | 0 : 8;
        $13 = ($12_1 | 0) < ($13 | 0) ? $13 : $12_1;
        if (($4_1 | 0) >= ($13 | 0)) {
         break label$199
        }
        $4_1 = $16($13);
        $18_1 = $1944($8 + 32 | 0, 0);
        if ($18_1) {
         $1602($4_1, $18_1, $1944($8, 24));
         $17($1944($8, 32));
        }
        $1973($8, 28, $13);
        $1973($8, 32, $4_1);
       }
       $1973($8, 24, $12_1);
       $27($1944($8 + 32 | 0, 0), $12_1, $1944($8 + 20 | 0, 0), 0);
      }
      label$203 : {
       if (!($5_1 & 524736)) {
        break label$203
       }
       label$204 : {
        label$205 : {
         if (!($5_1 & 64)) {
          break label$205
         }
         $4_1 = $1944($1944(0, 73568) + 52 | 0, 0);
         if (($4_1 | 0) < 0) {
          break label$205
         }
         if (!$174($4_1, 1)) {
          break label$205
         }
         $12_1 = 64;
         $13 = 0;
         $4_1 = 0;
         break label$204;
        }
        label$206 : {
         if (!($5_1 & 128)) {
          break label$206
         }
         label$207 : {
          $4_1 = $1944($1944(0, 73568) - -64 | 0, 0);
          if (($4_1 | 0) < 0) {
           break label$207
          }
          if (!$174($4_1, 1)) {
           break label$207
          }
          $12_1 = 128;
          $13 = 3;
          $4_1 = 0;
          break label$204;
         }
         $4_1 = $1944($1944(0, 73568) + 68 | 0, 0);
         if (($4_1 | 0) < 0) {
          break label$206
         }
         if (!$174($4_1, 1)) {
          break label$206
         }
         $12_1 = 128;
         $13 = 4;
         $4_1 = 0;
         break label$204;
        }
        label$208 : {
         if (!($5_1 & 524288)) {
          break label$208
         }
         if (!$1937($8, 3694)) {
          break label$208
         }
         $12_1 = 524288;
         $13 = 22;
         $4_1 = 0;
         break label$204;
        }
        $13 = 22;
        $12_1 = $5_1 & 256;
        $4_1 = !$12_1;
       }
       if ($4_1) {
        break label$203
       }
       $4_1 = $11_1 + 88 | 0;
       $693($4_1);
       $18_1 = $11_1 + 96 | 0;
       $1983($18_1, 0, 0, 0);
       $1983($11_1 + 128 | 0, 0, 0, 0);
       $1983($4_1 + 32 | 0, 0, 0, 0);
       $1983($11_1 + 112 | 0, 0, 0, 0);
       $1983($11_1 + 104 | 0, 0, 0, 0);
       $1973($18_1, 0, 0);
       $1983($11_1, 88, 0, 0);
       $1973($11_1, 92, $5_1);
       $1973($11_1, 88, $12_1);
       if ($25_1) {
        $4_1 = $2_1
       } else {
        $4_1 = $1944($8 + 32 | 0, 0)
       }
       $1973($11_1, 108, $4_1);
       $1973($11_1, 104, $13);
       $1973($11_1, 112, $1944($8, 8));
       $4_1 = $1944($8, 52);
       $1968($11_1, 120, 0);
       $1973($11_1, 116, $4_1);
       $4_1 = $1944($8 + 20 | 0, 0);
       $13 = $28($4_1, $4_1 + ($1944($8, 60) << 1) | 0);
       $1973($11_1, 124, $13);
       $18_1 = $28($4_1, $4_1 + ($1944($8 - -64 | 0, 0) << 1) | 0);
       $1973($11_1, 128, $18_1);
       $19 = $28($4_1, $4_1 + ($1944($8 + 68 | 0, 0) << 1) | 0);
       $1973($11_1, 132, $19);
       FUNCTION_TABLE[$6_1 | 0]($11_1 + 88 | 0) | 0;
       $12_1 = $1944($11_1, 124);
       $4_1 = $1937($11_1, 120);
       if (!(!$4_1 & ($12_1 | 0) == ($13 | 0))) {
        $13 = $1944($11_1, 108);
        $12_1 = $26($13, $12_1 + $13 | 0);
        $1968($8, 3692, 1);
        $1973($8, 60, $12_1);
       }
       $12_1 = $1944($11_1, 128);
       if (!(!$4_1 & ($12_1 | 0) == ($18_1 | 0))) {
        label$214 : {
         if (($1944($11_1, 124) | 0) == ($12_1 | 0)) {
          $12_1 = $1944($8, 60);
          break label$214;
         }
         $13 = $1944($11_1, 108);
         $12_1 = $26($13, $12_1 + $13 | 0);
        }
        $1973($8, 64, $12_1);
       }
       $12_1 = $1944($11_1, 132);
       if (!(!$4_1 & ($12_1 | 0) == ($19 | 0))) {
        label$218 : {
         if (($1944($11_1, 128) | 0) == ($12_1 | 0)) {
          $12_1 = $1944($8, 64);
          break label$218;
         }
         $13 = $1944($11_1, 108);
         $12_1 = $26($13, $12_1 + $13 | 0);
        }
        $1973($8, 68, $12_1);
       }
       if (!$4_1) {
        break label$203
       }
       label$220 : {
        if (!$20_1) {
         break label$220
        }
        $4_1 = $1944($11_1, 112);
        if (($4_1 | 0) <= ($44_1 | 0)) {
         break label$220
        }
        $12_1 = $8 + 12 | 0;
        $674($12_1, $1944($12_1, 0) + ($4_1 - $44_1 | 0) | 0);
       }
       $1973($8, 4, $25($1944($8, 20), $1944($8, 12), $1944($11_1, 108), 0, 0));
       $4_1 = $1944($11_1, 112);
       $1973($8, 3688, -1097229926);
       $1973($8, 8, $4_1);
      }
      if ($25_1) {
       break label$195
      }
      $4_1 = $1944($8 + 32 | 0, 0);
      if (!$1695($4_1, $2_1)) {
       break label$195
      }
      $7_1 = $1944($8, 8);
      $9 = $4_1;
     }
     $1973($8, 3696, 0);
    }
    $29_1 = $9;
    label$221 : {
     if (!$9) {
      $7_1 = $2_1;
      break label$221;
     }
     label$223 : {
      if (!$20_1) {
       $9 = $7_1;
       $4_1 = $3;
       break label$223;
      }
      $4_1 = $11_1 + 88 | 0;
      $693($4_1);
      $1973($11_1, 108, $2_1);
      $1973($11_1, 92, $5_1);
      $1973($11_1, 88, 262144);
      $1973($11_1, 96, 0);
      $1973($11_1, 112, $7_1);
      $2_1 = $7_1 + 1 | 0;
      $1973($11_1, 116, ($2_1 | 0) < ($3 | 0) ? $3 : $2_1);
      FUNCTION_TABLE[$6_1 | 0]($4_1) | 0;
      $2_1 = $1944($11_1, 112);
      $4_1 = $1944($11_1, 116);
      $3 = $4_1 - 1 | 0;
      $9 = ($2_1 | 0) < ($3 | 0) ? $2_1 : $3;
      $2_1 = $1944($11_1, 108);
     }
     $7_1 = $2_1;
     $2_1 = $9 + 1 | 0;
     $15($7_1, $29_1, ($2_1 | 0) < ($4_1 | 0) ? $2_1 : $4_1);
    }
    label$225 : {
     if (!$15_1) {
      break label$225
     }
     if (($1944($10_1, 7136) | 0) != ($24 | 0)) {
      break label$225
     }
     $86();
    }
    if (!$22_1) {
     $73($11_1 + 152 | 0, $24, 1);
     $1983($11_1, 80, $1960($11_1, 152), i64toi32_i32$HIGH_BITS);
     $1983($11_1, 72, $1960($11_1, 160), i64toi32_i32$HIGH_BITS);
     $2_1 = $51(7, Math_fround(1.0));
     $17_1 = $1963($10_1 + 5484 | 0, 0);
     $1983($11_1, 16, $1960($11_1, 80), i64toi32_i32$HIGH_BITS);
     $1983($11_1, 8, $1960($11_1, 72), i64toi32_i32$HIGH_BITS);
     $71($11_1 + 16 | 0, $11_1 + 8 | 0, $2_1, 1, $17_1);
    }
    $17_1 = $1963($11_1, 156);
    $1986($11_1, 60, $17_1);
    $16_1 = $1963($11_1, 152);
    $1986($11_1, 56, $16_1);
    $1986($11_1, 68, Math_fround($34_1 + $17_1));
    $1986($11_1, 64, Math_fround($35_1 + $16_1));
    label$227 : {
     if ($22_1) {
      $1983($11_1, 48, $1959($32_1, 208), i64toi32_i32$HIGH_BITS);
      break label$227;
     }
     $21_1 = $1963($10_1 + 5480 | 0, 0);
     $1986($11_1, 48, Math_fround($16_1 + $1963($10_1, 5476)));
     $1986($11_1, 52, Math_fround($17_1 + $21_1));
    }
    if ($28_1) {
     $7_1 = $1944($8 + 32 | 0, 0)
    }
    $41_1 = $14;
    $9 = 0;
    if ($40_1) {
     $9 = $1697($1_1) + $1_1 | 0
    } else {
     $1_1 = $7_1
    }
    $15_1 = $1_1;
    $7_1 = $9;
    label$231 : {
     label$232 : {
      label$233 : {
       if (($36_1 | $33_1) == 1) {
        if (!$40_1) {
         $7_1 = $1944($8, 8) + $15_1 | 0
        }
        $18_1 = $7_1;
        $28_1 = $1944($8 + 20 | 0, 0);
        $7_1 = 0;
        $9 = -1e3;
        $4_1 = 0;
        if ($36_1) {
         $7_1 = $28_1 + ($1944($8, 60) << 1) | 0;
         $9 = -1;
         $4_1 = 1;
        }
        $20_1 = $7_1;
        label$237 : {
         if (!$33_1) {
          $7_1 = 0;
          $3 = $4_1;
          $1_1 = -1e3;
          break label$237;
         }
         $1_1 = $1944($8 - -64 | 0, 0);
         $2_1 = $1944($8 + 68 | 0, 0);
         $7_1 = $28_1 + ((($1_1 | 0) < ($2_1 | 0) ? $1_1 : $2_1) << 1) | 0;
         $3 = $4_1 + 1 | 0;
         $1_1 = -1;
        }
        $19 = $7_1;
        $7_1 = $1_1;
        $4_1 = $9;
        $12_1 = ($22_1 >>> 26 | 0) + $3 | 0;
        $6_1 = 0;
        $1_1 = $28_1;
        while (1) {
         $3 = $4_1;
         $2_1 = $7_1;
         $13 = $4_1;
         $9 = $6_1;
         label$240 : {
          switch ($1941($1_1, 0) | 0) {
          case 10:
           $6_1 = $6_1 + 1 | 0;
           label$242 : {
            if (($4_1 | 0) != -1) {
             $7_1 = $12_1;
             $3 = $4_1;
             break label$242;
            }
            if ($1_1 >>> 0 < $20_1 >>> 0) {
             $7_1 = $12_1;
             $3 = -1;
             break label$242;
            }
            if (($12_1 | 0) < 2) {
             $13 = $6_1;
             break label$233;
            }
            $7_1 = $12_1 - 1 | 0;
            $3 = $6_1;
           }
           label$246 : {
            label$247 : {
             if (($2_1 | 0) != -1) {
              break label$247
             }
             if ($1_1 >>> 0 < $19 >>> 0) {
              $2_1 = -1;
              break label$247;
             }
             if (($7_1 | 0) < 2) {
              $7_1 = $6_1;
              $13 = $3;
              break label$233;
             }
             $2_1 = $6_1;
             $7_1 = $7_1 - 1 | 0;
             break label$246;
            }
           }
           $12_1 = $7_1;
           break;
          case 0:
           break label$232;
          default:
           break label$240;
          };
         }
         $7_1 = $2_1;
         $4_1 = $3;
         $1_1 = $1_1 + 2 | 0;
         continue;
        };
       }
       label$251 : {
        if ($22_1) {
         $2_1 = $15_1;
         $7_1 = 0;
         while (1) {
          $12_1 = $7_1;
          $9 = 0;
          label$254 : {
           label$255 : {
            label$256 : {
             $1_1 = $2_1;
             $3 = $1937($1_1, 0);
             switch ($3 | 0) {
             case 0:
              break label$254;
             case 10:
              break label$256;
             default:
              break label$255;
             };
            }
            $12_1 = $7_1 + 1 | 0;
           }
           $7_1 = $12_1;
           $9 = 1;
          }
          $2_1 = $1_1 + 1 | 0;
          if ($9) {
           continue
          }
          break;
         };
         $9 = $7_1;
         label$257 : {
          switch ($3 - 10 | 0) {
          default:
           $9 = $7_1 + 1 | 0;
           break;
          case 0:
          case 3:
           break label$257;
          };
         }
         $7_1 = $1_1;
         $16_1 = Math_fround($1963($10_1, 6468) * Math_fround($9 | 0));
         $14 = $35_1;
         break label$251;
        }
        label$259 : {
         if ($40_1) {
          break label$259
         }
         if (($1944($10_1, 7136) | 0) == ($24 | 0)) {
          $7_1 = $1944($8, 8) + $15_1 | 0;
          break label$259;
         }
         if ($40_1) {
          break label$259
         }
         $7_1 = $1697($15_1) + $15_1 | 0;
        }
        $16_1 = Math_fround(0.0);
        $14 = Math_fround(0.0);
       }
       $9 = 0;
       label$262 : {
        if (!$22_1) {
         $9 = $11_1 + 56 | 0;
         if (($7_1 - $15_1 | 0) > 2097151) {
          break label$262
         }
        }
        $1_1 = $51($40_1, Math_fround(1.0));
        $413($1944($32_1, 580), $1944($10_1, 6464), $1963($10_1, 6468), $11_1 + 48 | 0, $1_1, $15_1, $7_1, Math_fround(0.0), $9);
       }
       break label$231;
      }
      $9 = $6_1;
     }
     $3 = $9 + 1 | 0;
     $4_1 = ($7_1 | 0) == -1 ? $3 : $7_1;
     $17_1 = Math_fround(0.0);
     $9 = $18($20_1, $28_1);
     if ($20_1 >>> 0 > $9 >>> 0) {
      $1_1 = $1944(0, 73568);
      $2_1 = $1944($1_1, 6464);
      $7_1 = $2_1 + 12 | 0;
      $42_1 = Math_fround($1963($1_1, 6468) / $1963($2_1, 16));
      $21_1 = Math_fround(0.0);
      $16_1 = Math_fround(0.0);
      $14 = Math_fround(0.0);
      while (1) {
       $1_1 = $9 + 2 | 0;
       label$266 : {
        label$267 : {
         label$268 : {
          $6_1 = $1941($9, 0);
          switch ($6_1 - 10 | 0) {
          case 3:
           break label$266;
          case 0:
           break label$268;
          default:
           break label$267;
          };
         }
         $14 = $16_1 >= $21_1 ? $16_1 : $21_1;
         $16_1 = $14;
         $21_1 = Math_fround(0.0);
         break label$266;
        }
        $21_1 = Math_fround($21_1 + Math_fround($42_1 * $1963((wasm2js_i32$0 = $1944($2_1, 8) + ($6_1 << 2) | 0, wasm2js_i32$1 = $7_1, wasm2js_i32$2 = ($1944($2_1, 0) | 0) > ($6_1 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0)));
       }
       $27_1 = $14;
       $17_1 = $21_1;
       $9 = $1_1;
       if ($9 >>> 0 < $20_1 >>> 0) {
        continue
       }
       break;
      };
     }
     $38_1 = $17_1;
     $39_1 = $27_1;
     $43_1 = $1963($10_1, 6468);
     $14 = Math_fround(0.0);
     $16_1 = Math_fround(0.0);
     if (($4_1 | 0) >= 0) {
      $9 = $18($19, $28_1);
      label$270 : {
       if ($19 >>> 0 <= $9 >>> 0) {
        $27_1 = Math_fround(0.0);
        $17_1 = Math_fround(0.0);
        break label$270;
       }
       $1_1 = $1944(0, 73568);
       $2_1 = $1944($1_1, 6464);
       $7_1 = $2_1 + 12 | 0;
       $42_1 = Math_fround($1963($1_1, 6468) / $1963($2_1, 16));
       $21_1 = Math_fround(0.0);
       while (1) {
        $1_1 = $9 + 2 | 0;
        label$273 : {
         label$274 : {
          label$275 : {
           $6_1 = $1941($9, 0);
           switch ($6_1 - 10 | 0) {
           case 3:
            break label$273;
           case 0:
            break label$275;
           default:
            break label$274;
           };
          }
          $14 = $16_1 >= $21_1 ? $16_1 : $21_1;
          $16_1 = $14;
          $21_1 = Math_fround(0.0);
          break label$273;
         }
         $21_1 = Math_fround($21_1 + Math_fround($42_1 * $1963((wasm2js_i32$0 = $1944($2_1, 8) + ($6_1 << 2) | 0, wasm2js_i32$1 = $7_1, wasm2js_i32$2 = ($1944($2_1, 0) | 0) > ($6_1 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0)));
        }
        $27_1 = $14;
        $17_1 = $21_1;
        $9 = $1_1;
        if ($9 >>> 0 < $19 >>> 0) {
         continue
        }
        break;
       };
      }
      $16_1 = Math_fround($1963($10_1, 6468) * Math_fround($4_1 | 0));
      $14 = $17_1 > $27_1 ? $17_1 : $27_1;
     }
     $17_1 = $16_1;
     $27_1 = $14;
     $14 = Math_fround(0.0);
     $16_1 = Math_fround(0.0);
     if ($22_1) {
      $16_1 = Math_fround($1963($10_1, 6468) * Math_fround($3 | 0));
      $14 = $35_1;
     }
     $42_1 = $16_1;
     $52_1 = $14;
     $38_1 = $38_1 > $39_1 ? $38_1 : $39_1;
     $39_1 = Math_fround($43_1 * Math_fround((($13 | 0) == -1 ? $3 : $13) | 0));
     label$277 : {
      if (!$36_1) {
       break label$277
      }
      if (!$1937($8, 3692)) {
       break label$277
      }
      label$278 : {
       if (!($5_1 & 4096)) {
        $14 = Math_fround($35_1 * Math_fround(.25));
        $16_1 = $1963($8, 56);
        if ($38_1 < $16_1) {
         $14 = Math_fround($38_1 - $14);
         $14 = $14 <= Math_fround(0.0) ? Math_fround(0.0) : $14;
         label$281 : {
          if (Math_fround(Math_abs($14)) < Math_fround(2147483648.0)) {
           $1_1 = ~~$14;
           break label$281;
          }
          $1_1 = -2147483648;
         }
         $1986($8, 56, Math_fround($1_1 | 0));
         break label$278;
        }
        $21_1 = Math_fround($38_1 - Math_fround($35_1 - $1963($10_1, 5476)));
        if (!($16_1 <= $21_1)) {
         break label$278
        }
        $14 = Math_fround($14 + $21_1);
        label$283 : {
         if (Math_fround(Math_abs($14)) < Math_fround(2147483648.0)) {
          $1_1 = ~~$14;
          break label$283;
         }
         $1_1 = -2147483648;
        }
        $1986($8, 56, Math_fround($1_1 | 0));
        break label$278;
       }
       $1973($8, 56, 0);
      }
      if ($22_1) {
       $14 = Math_fround($39_1 - $1963($10_1, 6468));
       label$286 : {
        if ($41_1 > $14) {
         $14 = $14 <= Math_fround(0.0) ? Math_fround(0.0) : $14;
         break label$286;
        }
        $14 = $41_1;
        $16_1 = $1963($10_1, 5480);
        $16_1 = Math_fround($16_1 + $16_1);
        if (!($14 <= Math_fround($39_1 - Math_fround($34_1 - $16_1)))) {
         break label$286
        }
        $14 = Math_fround($16_1 + Math_fround($39_1 - $34_1));
       }
       $21_1 = $1963($11_1, 52);
       $1_1 = $32_1 + 92 | 0;
       $35_1 = $1963($1_1, 0);
       $16_1 = $1963($10_1, 5480);
       $16_1 = Math_fround(Math_fround(Math_fround($16_1 + $16_1) + $42_1) - $34_1);
       $16_1 = $16_1 >= Math_fround(0.0) ? $16_1 : Math_fround(0.0);
       $14 = $14 < Math_fround(0.0) ? Math_fround(0.0) : $14 > $16_1 ? $16_1 : $14;
       $1986($11_1, 52, Math_fround($21_1 + Math_fround($35_1 - $14)));
       $1986($1_1, 0, $14);
      }
      $1968($8, 3692, 0);
     }
     $41_1 = $1963($8, 56);
     label$288 : {
      if (!$33_1) {
       break label$288
      }
      $1_1 = $1944($8 + 68 | 0, 0);
      $2_1 = $1944($8 - -64 | 0, 0);
      $4_1 = $51(47, $36_1 ? Math_fround(1.0) : Math_fround(.6000000238418579));
      $6_1 = ($1_1 | 0) > ($2_1 | 0) ? $2_1 : $1_1;
      $1_1 = ($1_1 | 0) < ($2_1 | 0) ? $2_1 : $1_1;
      if (($6_1 | 0) >= ($1_1 | 0)) {
       break label$288
      }
      $53_1 = $22_1 ? Math_fround(0.0) : Math_fround(2.0);
      $54_1 = $22_1 ? Math_fround(0.0) : Math_fround(-1.0);
      $3 = $28_1 + ($1_1 << 1) | 0;
      $12_1 = $11_1 + 96 | 0;
      $14 = Math_fround($27_1 + $1963($11_1, 48));
      $16_1 = Math_fround($17_1 + $1963($11_1, 52));
      $7_1 = $28_1 + ($6_1 << 1) | 0;
      while (1) {
       $34_1 = $1963($11_1, 68);
       $48_1 = $1963($10_1, 6468);
       if (Math_fround($34_1 + $48_1) < $16_1) {
        break label$288
       }
       $35_1 = $16_1;
       $43_1 = $1963($11_1, 60);
       label$290 : {
        if ($16_1 < $43_1) {
         $9 = $7_1;
         while (1) {
          $1_1 = $9;
          if ($3 >>> 0 <= $9 >>> 0) {
           $2_1 = $1_1;
           break label$290;
          }
          $9 = $1_1 + 2 | 0;
          $2_1 = $9;
          if (($1941($1_1, 0) | 0) != 10) {
           continue
          }
          break;
         };
         break label$290;
        }
        $37 = Math_fround($14 - $41_1);
        $2_1 = $1944(0, 73568);
        $1_1 = $1944($2_1, 6464);
        $6_1 = $1_1 + 12 | 0;
        $55_1 = Math_fround($1963($2_1, 6468) / $1963($1_1, 16));
        $21_1 = Math_fround(0.0);
        $16_1 = Math_fround(0.0);
        $14 = Math_fround(0.0);
        while (1) {
         label$294 : {
          if ($3 >>> 0 <= $7_1 >>> 0) {
           $27_1 = $21_1;
           $2_1 = $7_1;
           $17_1 = $14;
           break label$294;
          }
          $17_1 = $16_1;
          $9 = 0;
          $27_1 = $14;
          label$297 : {
           label$298 : {
            label$299 : {
             $2_1 = $1941($7_1, 0);
             switch ($2_1 - 10 | 0) {
             case 3:
              break label$297;
             case 0:
              break label$299;
             default:
              break label$298;
             };
            }
            $17_1 = $14 <= $16_1 ? $16_1 : $14;
            $21_1 = $17_1;
            $9 = 1;
            $27_1 = Math_fround(0.0);
            break label$297;
           }
           $27_1 = Math_fround($14 + Math_fround($55_1 * $1963((wasm2js_i32$0 = $1944($1_1, 8) + ($2_1 << 2) | 0, wasm2js_i32$1 = $6_1, wasm2js_i32$2 = ($1944($1_1, 0) | 0) > ($2_1 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0)));
          }
          $16_1 = $17_1;
          $14 = $27_1;
          $27_1 = $21_1;
          $7_1 = $7_1 + 2 | 0;
          $2_1 = $7_1;
          $17_1 = $14;
          if (!$9) {
           continue
          }
         }
         break;
        };
        $14 = $17_1 > $27_1 ? $17_1 : $27_1;
        if ($14 <= Math_fround(0.0)) {
         $1_1 = $1944($10_1, 6464);
         $14 = Math_fround($1963((wasm2js_i32$0 = $1944($1_1, 8) + 128 | 0, wasm2js_i32$1 = $1_1 + 12 | 0, wasm2js_i32$2 = ($1944($1_1, 0) | 0) > 32, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0) * Math_fround(.5));
         label$301 : {
          if (Math_fround(Math_abs($14)) < Math_fround(2147483648.0)) {
           $1_1 = ~~$14;
           break label$301;
          }
          $1_1 = -2147483648;
         }
         $14 = Math_fround($1_1 | 0);
        }
        $17_1 = Math_fround($37 + $14);
        $14 = $1963($11_1, 64);
        $27_1 = $14 > $17_1 ? $17_1 : $14;
        $1986($11_1, 96, $27_1);
        $16_1 = Math_fround($37 + Math_fround(0.0));
        $17_1 = $1963($11_1, 56);
        $16_1 = $16_1 >= $17_1 ? $16_1 : $17_1;
        $1986($11_1, 88, $16_1);
        $21_1 = Math_fround($35_1 + Math_fround($54_1 - $48_1));
        $21_1 = $21_1 >= $43_1 ? $21_1 : $43_1;
        $1986($11_1, 92, $21_1);
        $37 = Math_fround($53_1 + $35_1);
        $37 = $34_1 > $37 ? $37 : $34_1;
        $1986($11_1, 100, $37);
        if (!(!($37 > $43_1) | !($21_1 < $34_1) | (!($17_1 < $27_1) | !($14 > $16_1)))) {
         $401($1944($32_1, 580), $11_1 + 88 | 0, $12_1, $4_1, Math_fround(0.0), 0)
        }
       }
       $14 = $1963($11_1, 48);
       $16_1 = Math_fround($35_1 + $1963($10_1, 6468));
       $7_1 = $2_1;
       if ($3 >>> 0 > $7_1 >>> 0) {
        continue
       }
       break;
      };
     }
     $7_1 = 0;
     label$304 : {
      if (!$22_1) {
       $7_1 = $11_1 + 56 | 0;
       if (($18_1 - $15_1 | 0) > 2097151) {
        break label$304
       }
      }
      $1_1 = $51($40_1, Math_fround(1.0));
      $14 = $1963($10_1, 6468);
      $2_1 = $1944($10_1, 6464);
      $3 = $1944($32_1, 580);
      $1986($11_1, 92, $1963($11_1, 52));
      $1986($11_1, 88, Math_fround($1963($11_1, 48) - $41_1));
      $413($3, $2_1, $14, $11_1 + 88 | 0, $1_1, $15_1, $18_1, Math_fround(0.0), $7_1);
     }
     label$306 : {
      if (!$36_1) {
       break label$306
      }
      $14 = Math_fround($1963($10_1 + 24 | 0, 0) + $1963($8, 3688));
      $1986($8, 3688, $14);
      $1_1 = 1;
      label$307 : {
       if (!$1937($10_1 + 178 | 0, 0)) {
        break label$307
       }
       $1_1 = 1;
       if ($14 <= Math_fround(0.0)) {
        break label$307
       }
       $1_1 = $1612($14, Math_fround(1.2000000476837158)) <= Math_fround(.800000011920929);
      }
      $14 = Math_fround($39_1 + $1963($11_1, 52));
      label$309 : {
       if (Math_fround(Math_abs($14)) < Math_fround(2147483648.0)) {
        $2_1 = ~~$14;
        break label$309;
       }
       $2_1 = -2147483648;
      }
      $14 = $1963($11_1, 48);
      $16_1 = $1963($10_1, 6468);
      $17_1 = Math_fround($2_1 | 0);
      $27_1 = Math_fround($17_1 + Math_fround(-1.5));
      $1986($11_1 + 100 | 0, 0, $27_1);
      $14 = Math_fround(Math_fround($38_1 + $14) - $41_1);
      label$311 : {
       if (Math_fround(Math_abs($14)) < Math_fround(2147483648.0)) {
        $2_1 = ~~$14;
        break label$311;
       }
       $2_1 = -2147483648;
      }
      $14 = Math_fround($2_1 | 0);
      $1986($11_1, 88, $14);
      $21_1 = Math_fround($14 + Math_fround(1.0));
      $1986($11_1, 96, $21_1);
      $16_1 = Math_fround(Math_fround($17_1 - $16_1) + Math_fround(.5));
      $1986($11_1, 92, $16_1);
      label$313 : {
       if (!$1_1) {
        break label$313
       }
       if (!($1963($11_1, 60) < $27_1)) {
        break label$313
       }
       if (!($1963($11_1, 68) > $16_1)) {
        break label$313
       }
       if (!($1963($11_1, 56) < $21_1)) {
        break label$313
       }
       if (!($1963($11_1, 64) > $14)) {
        break label$313
       }
       $1_1 = $1944($32_1, 580);
       $1986($11_1, 44, $27_1);
       $1986($11_1, 40, $14);
       $399($1_1, $11_1 + 88 | 0, $11_1 + 40 | 0, $51(0, Math_fround(1.0)), Math_fround(1.0));
      }
      if ($25_1) {
       break label$306
      }
      $1986($10_1, 12108, Math_fround($14 + Math_fround(-1.0)));
      $1986($10_1 + 12112 | 0, 0, Math_fround($17_1 - $1963($10_1, 6468)));
     }
     $7_1 = $18_1;
     $14 = $52_1;
     $16_1 = $42_1;
    }
    if (!$46_1) {
     $223()
    }
    label$315 : {
     if (!$22_1) {
      break label$315
     }
     $17_1 = $1963($10_1, 5480);
     $1986($11_1, 40, $14);
     $17_1 = Math_fround($16_1 + $17_1);
     $1986($11_1, 44, $17_1);
     $1_1 = $1944($1944(0, 73568), 7080);
     $1968($1_1, 140, 1);
     if (!$1937($1_1, 143)) {
      $2_1 = $1959($1_1, 208);
      $3 = i64toi32_i32$HIGH_BITS;
      $27_1 = $1963($1_1, 208);
      $1986($11_1 + 100 | 0, 0, Math_fround($17_1 + $1963($1_1 + 212 | 0, 0)));
      $1986($11_1, 96, Math_fround($14 + $27_1));
      $1983($11_1, 88, $2_1, $3);
      $212($11_1 + 40 | 0, Math_fround(-1.0));
      $213($11_1 + 88 | 0, 0, 0, 0);
     }
     $1_1 = $1944($10_1, 7216);
     $1973($10_1, 7216, $1_1 | 257);
     $211();
     $1973($10_1, 7216, $1_1);
     $1_1 = $1944($10_1 + 7248 | 0, 0);
     $275();
     if ($1944($10_1, 7240)) {
      break label$315
     }
     $1973($10_1, 7240, $24);
     $1973($10_1 + 7244 | 0, 0, $49);
     $1973($10_1, 7248, $1_1 & 128 | $50_1);
    }
    if (!(!$1937($10_1, 12196) | $46_1 ^ 1)) {
     $341(1061, 1056);
     $64($11_1 + 48 | 0, $15_1, $7_1);
    }
    if ($1963($11_1, 184) > Math_fround(0.0)) {
     $14 = $1963($10_1 + 5500 | 0, 0);
     $1986($11_1, 36, Math_fround($1963($11_1, 156) + $1963($10_1, 5480)));
     $1986($11_1, 32, Math_fround($14 + $1963($11_1, 160)));
     $1983($11_1, 0, $1959($11_1, 32), i64toi32_i32$HIGH_BITS);
     $63($11_1, $0_1, 0, 1);
    }
    if (!(!$29_1 | $5_1 & 134217728)) {
     $88($24)
    }
    $9 = $5_1 & 32 ? $30 : ($29_1 | 0) != 0;
   }
  }
  global$0 = $11_1 + 192 | 0;
  return $9;
 }
 
 function $634($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  var $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0;
  $12_1 = $1944(0, 73568);
  $9 = $1944($12_1, 7080);
  $1968($9, 140, 1);
  if (!$1937($9, 143)) {
   $301();
   $153($0_1);
   $290($3, $292());
   $9 = 0;
   if (($3 | 0) > 0) {
    $13 = $1944(($1_1 << 4) + 48160 | 0, 0);
    $10_1 = $2_1;
    $2_1 = 0;
    while (1) {
     $266($11_1);
     if ($11_1) {
      $276(Math_fround(0.0), $1963($12_1, 5500))
     }
     $9 = $630(19354, $1_1, $10_1, $4_1, $5_1, $6_1, $7_1, $8);
     $269();
     $291();
     $2_1 = $2_1 | $9;
     $9 = $2_1;
     $10_1 = $10_1 + $13 | 0;
     $11_1 = $11_1 + 1 | 0;
     if (($11_1 | 0) != ($3 | 0)) {
      continue
     }
     break;
    };
   }
   $10_1 = $9;
   $269();
   $1_1 = $62($0_1);
   if (($0_1 | 0) != ($1_1 | 0)) {
    $276(Math_fround(0.0), $1963($12_1 + 5500 | 0, 0));
    $555($0_1, $1_1, 0);
   }
   $275();
  }
  return $10_1 & 1;
 }
 
 function $645($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  var $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = 0.0, $12_1 = Math_fround(0), $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0.0, $19 = Math_fround(0), $20_1 = Math_fround(0), $21_1 = Math_fround(0), $22_1 = 0.0, $23_1 = 0, $24 = Math_fround(0), $25_1 = Math_fround(0), $26_1 = Math_fround(0), $27_1 = 0.0, $28_1 = 0, $29_1 = 0, $30 = 0, $31_1 = Math_fround(0), $32_1 = 0, $33_1 = 0, $34_1 = 0, $35_1 = Math_fround(0), $36_1 = 0, $37 = Math_fround(0), $38_1 = Math_fround(0), $39_1 = 0, $40_1 = 0, $41_1 = 0, $42_1 = Math_fround(0), $43_1 = 0, wasm2js_f32$0 = Math_fround(0), wasm2js_f32$1 = Math_fround(0), wasm2js_i32$0 = 0;
  $32_1 = global$0 - 16 | 0;
  global$0 = $32_1;
  label$1 : {
   if ($1944($1944(0, 73568) + 7244 | 0, 0) & 128 | $7_1 & 2097152) {
    break label$1
   }
   label$3 : {
    switch ($2_1 | 0) {
    case 0:
     $1973($32_1, 12, $1936($3, 0));
     $15_1 = $646($0_1, $1_1, $32_1 + 12 | 0, $1936($4_1, 0), $1936($5_1, 0), $6_1, $7_1, $8);
     if ($15_1) {
      $1968($3, 0, $1944($32_1, 12))
     }
     break label$1;
    case 1:
     $1973($32_1, 12, $1937($3, 0));
     $15_1 = $647($0_1, $1_1, $32_1 + 12 | 0, $1937($4_1, 0), $1937($5_1, 0), $6_1, $7_1, $8);
     if ($15_1) {
      $1968($3, 0, $1944($32_1, 12))
     }
     break label$1;
    case 2:
     $1973($32_1, 12, $1939($3, 0));
     $15_1 = $646($0_1, $1_1, $32_1 + 12 | 0, $1939($4_1, 0), $1939($5_1, 0), $6_1, $7_1, $8);
     if ($15_1) {
      $1970($3, 0, $1944($32_1, 12))
     }
     break label$1;
    case 3:
     $1973($32_1, 12, $1941($3, 0));
     $15_1 = $647($0_1, $1_1, $32_1 + 12 | 0, $1941($4_1, 0), $1941($5_1, 0), $6_1, $7_1, $8);
     if ($15_1) {
      $1970($3, 0, $1944($32_1, 12))
     }
     break label$1;
    case 4:
     $15_1 = $646($0_1, $1_1, $3, $1944($4_1, 0), $1944($5_1, 0), $6_1, $7_1, $8);
     break label$1;
    case 5:
     $15_1 = $647($0_1, $1_1, $3, $1944($4_1, 0), $1944($5_1, 0), $6_1, $7_1, $8);
     break label$1;
    case 6:
     $33_1 = $1960($4_1, 0);
     $30 = i64toi32_i32$HIGH_BITS;
     $34_1 = $1960($5_1, 0);
     $23_1 = global$0 - 16 | 0;
     global$0 = $23_1;
     $36_1 = i64toi32_i32$HIGH_BITS;
     $2_1 = $30 - ($36_1 + ($33_1 >>> 0 < $34_1 >>> 0) | 0) | 0;
     $4_1 = $2_1;
     $5_1 = $2_1 >> 31;
     $2_1 = $5_1 ^ $33_1 - $34_1;
     $14 = $2_1 - $5_1 | 0;
     $15_1 = ($4_1 ^ $5_1) - (($2_1 >>> 0 < $5_1 >>> 0) + $5_1 | 0) | 0;
     $5_1 = $14 + 1 | 0;
     $4_1 = $5_1 ? $15_1 : $15_1 + 1 | 0;
     $17_1 = $7_1 & 1048576;
     $2_1 = ($17_1 >>> 18 | 0) + $0_1 | 0;
     $20_1 = $1963($2_1 + 8 | 0, 0);
     $12_1 = $1963($2_1, 0);
     $24 = Math_fround(Math_fround($20_1 - $12_1) + Math_fround(-4.0));
     $10_1 = Math_fround($24 / Math_fround(+($5_1 >>> 0) + +($4_1 | 0) * 4294967296.0));
     $2_1 = $1944(0, 73568);
     $9 = $1963($2_1 + 5540 | 0, 0);
     $9 = $9 <= $10_1 ? $10_1 : $9;
     $21_1 = $9 < $24 ? $9 : $24;
     $35_1 = Math_fround($21_1 * Math_fround(.5));
     $9 = Math_fround($24 - $21_1);
     $4_1 = $7_1 & 32;
     if ($4_1) {
      $25_1 = Math_fround(Math_fround($1963($2_1 + 5548 | 0, 0) * Math_fround(.5)) / ($9 >= Math_fround(1.0) ? $9 : Math_fround(1.0)));
      $26_1 = $1669(Math_fround(.10000000149011612), Math_fround(1.0));
     }
     $31_1 = Math_fround($35_1 + Math_fround($12_1 + Math_fround(2.0)));
     $5_1 = 0;
     label$50 : {
      if (($1944($2_1, 7136) | 0) != ($1_1 | 0)) {
       break label$50
      }
      $10_1 = Math_fround(0.0);
      label$61 : {
       label$72 : {
        switch ($1944($2_1, 7188) - 1 | 0) {
        case 0:
         if (!$1937($2_1 + 236 | 0, 0)) {
          $86();
          break label$61;
         }
         if ($9 > Math_fround(0.0)) {
          $9 = Math_fround(Math_fround($1963(($2_1 + ($17_1 >>> 20 << 2) | 0) + 228 | 0, 0) - $31_1) / $9);
          $10_1 = $9 < Math_fround(0.0) ? Math_fround(0.0) : $9 > Math_fround(1.0) ? Math_fround(1.0) : $9;
         }
         $10_1 = $17_1 ? Math_fround(Math_fround(1.0) - $10_1) : $10_1;
         $28_1 = 1;
         break label$61;
        case 3:
         break label$72;
        default:
         break label$61;
        };
       }
       if ($1937($2_1, 7148)) {
        $1968($2_1, 12056, 0);
        $1973($2_1, 12052, 0);
       }
       $154($23_1 + 8 | 0, 6, 5, Math_fround(0.0), Math_fround(0.0));
       $9 = (wasm2js_f32$0 = Math_fround(-$1963($23_1, 12)), wasm2js_f32$1 = $1963($23_1, 8), wasm2js_i32$0 = $17_1, wasm2js_i32$0 ? wasm2js_f32$0 : wasm2js_f32$1);
       if ($9 != Math_fround(0.0)) {
        label$14 : {
         label$17 : {
          if (!(!$15_1 & $14 >>> 0 < 101)) {
           if (!($1963($1944(0, 73568) + 824 | 0, 0) > Math_fround(0.0))) {
            break label$17
           }
          }
          $10_1 = Math_fround(($9 < Math_fround(0.0) ? Math_fround(-1.0) : Math_fround(1.0)) / Math_fround(+($14 >>> 0) + +($15_1 | 0) * 4294967296.0));
          break label$14;
         }
         $10_1 = Math_fround($9 / Math_fround(100.0));
        }
        $9 = $1963($1944(0, 73568) + 828 | 0, 0);
        $1968($2_1, 12056, 1);
        $1986($2_1, 12052, Math_fround($1963($2_1, 12052) + ($9 > Math_fround(0.0) ? Math_fround($10_1 * Math_fround(10.0)) : $10_1)));
       }
       $19 = $1963($2_1, 12052);
       label$19 : {
        label$20 : {
         if (($1944($2_1, 7528) | 0) != ($1_1 | 0)) {
          break label$20
         }
         if ($1937($2_1, 7148)) {
          break label$20
         }
         $86();
         $10_1 = Math_fround(0.0);
         break label$19;
        }
        if (!$1937($2_1, 12056)) {
         $10_1 = Math_fround(0.0);
         break label$19;
        }
        $9 = $620($1960($3, 0), i64toi32_i32$HIGH_BITS, $33_1, $30, $34_1, $36_1, ($4_1 | 0) != 0, $26_1, $25_1);
        label$22 : {
         if (!(!(!($9 >= Math_fround(1.0)) | !($19 > Math_fround(0.0))) | !(!($9 <= Math_fround(0.0)) | !($19 < Math_fround(0.0))))) {
          $10_1 = Math_fround($19 + $9);
          $10_1 = $10_1 < Math_fround(0.0) ? Math_fround(0.0) : $10_1 > Math_fround(1.0) ? Math_fround(1.0) : $10_1;
          $1_1 = ($4_1 | 0) != 0;
          $5_1 = $621($10_1, $33_1, $30, $34_1, $36_1, $1_1, $26_1, $25_1);
          $28_1 = i64toi32_i32$HIGH_BITS;
          if (!($7_1 & 64)) {
           $5_1 = $622($6_1, $5_1, $28_1);
           $28_1 = i64toi32_i32$HIGH_BITS;
          }
          $12_1 = Math_fround($620($5_1, $28_1, $33_1, $30, $34_1, $36_1, $1_1, $26_1, $25_1) - $9);
          $9 = $1963($2_1, 12052);
          if ($19 > Math_fround(0.0)) {
           $12_1 = Math_fround($9 - ($12_1 < $19 ? $12_1 : $19));
           $28_1 = 1;
           break label$22;
          }
          $12_1 = Math_fround($9 - ($12_1 >= $19 ? $12_1 : $19));
          $28_1 = 1;
          break label$22;
         }
         $12_1 = Math_fround(0.0);
         $10_1 = $9;
         $28_1 = 0;
        }
        $1968($2_1, 12056, 0);
        $1986($2_1, 12052, $12_1);
       }
      }
      $5_1 = 0;
      if (!$28_1) {
       break label$50
      }
      $5_1 = $621($10_1, $33_1, $30, $34_1, $36_1, ($4_1 | 0) != 0, $26_1, $25_1);
      $28_1 = i64toi32_i32$HIGH_BITS;
      if (!($7_1 & 64)) {
       $5_1 = $622($6_1, $5_1, $28_1);
       $28_1 = i64toi32_i32$HIGH_BITS;
      }
      $2_1 = $1960($3, 0);
      $1_1 = i64toi32_i32$HIGH_BITS;
      if (!(($2_1 | 0) != ($5_1 | 0) | ($28_1 | 0) != ($1_1 | 0))) {
       $5_1 = ($2_1 | 0) != ($5_1 | 0) | ($1_1 | 0) != ($28_1 | 0);
       break label$50;
      }
      $1983($3, 0, $5_1, $28_1);
      $5_1 = 1;
     }
     $2_1 = $5_1;
     label$32 : {
      if ($24 < Math_fround(1.0)) {
       $1_1 = $1959($0_1, 0);
       $0_1 = i64toi32_i32$HIGH_BITS;
       $1982($8, 8, $1_1, $0_1);
       $1982($8, 0, $1_1, $0_1);
       break label$32;
      }
      $12_1 = Math_fround(-$21_1);
      $9 = $620($1960($3, 0), i64toi32_i32$HIGH_BITS, $33_1, $30, $34_1, $36_1, ($4_1 | 0) != 0, $26_1, $25_1);
      $20_1 = Math_fround(Math_fround(Math_fround(Math_fround(Math_fround($20_1 + Math_fround(-2.0)) - $35_1) - $31_1) * ($17_1 ? Math_fround(Math_fround(1.0) - $9) : $9)) + $31_1);
      if (!$17_1) {
       $10_1 = $1963($0_1 + 12 | 0, 0);
       $9 = $1963($0_1, 4);
       $1986($8, 8, Math_fround(Math_fround($21_1 * Math_fround(.5)) + $20_1));
       $1986($8, 4, Math_fround($9 + Math_fround(2.0)));
       $1986($8, 0, Math_fround(Math_fround($12_1 * Math_fround(.5)) + $20_1));
       $1986($8, 12, Math_fround($10_1 + Math_fround(-2.0)));
       break label$32;
      }
      $10_1 = $1963($0_1, 0);
      $9 = $1963($0_1, 8);
      $1986($8, 12, Math_fround(Math_fround($21_1 * Math_fround(.5)) + $20_1));
      $1986($8, 8, Math_fround($9 + Math_fround(-2.0)));
      $1986($8, 4, Math_fround(Math_fround($12_1 * Math_fround(.5)) + $20_1));
      $1986($8, 0, Math_fround($10_1 + Math_fround(2.0)));
     }
     global$0 = $23_1 + 16 | 0;
     $15_1 = $2_1;
     break label$1;
    case 7:
     $15_1 = $1_1;
     $2_1 = $1960($4_1, 0);
     $13 = i64toi32_i32$HIGH_BITS;
     $1_1 = $1960($5_1, 0);
     $34_1 = global$0 - 16 | 0;
     global$0 = $34_1;
     $40_1 = $1_1 - $2_1 | 0;
     $14 = $1_1 >>> 0 > $2_1 >>> 0;
     $16_1 = i64toi32_i32$HIGH_BITS;
     $39_1 = $14 & ($16_1 | 0) == ($13 | 0) | $13 >>> 0 < $16_1 >>> 0;
     $5_1 = $39_1;
     $23_1 = $5_1 ? $40_1 : $2_1 - $1_1 | 0;
     $4_1 = $0_1;
     $41_1 = $7_1 & 1048576;
     $0_1 = $0_1 + ($41_1 >>> 18 | 0) | 0;
     $20_1 = $1963($0_1 + 8 | 0, 0);
     $12_1 = $1963($0_1, 0);
     $26_1 = Math_fround(Math_fround($20_1 - $12_1) + Math_fround(-4.0));
     $29_1 = $1944(0, 73568);
     $10_1 = $1963($29_1 + 5540 | 0, 0);
     $28_1 = $16_1 - (($1_1 >>> 0 < $2_1 >>> 0) + $13 | 0) | 0;
     $14 = $5_1 ? $28_1 : $13 - ($14 + $16_1 | 0) | 0;
     if (($14 | 0) > 0 | ($14 | 0) >= 0) {
      $5_1 = $23_1 + 1 | 0;
      $0_1 = $5_1 ? $14 : $14 + 1 | 0;
      $9 = Math_fround($26_1 / Math_fround(+($5_1 >>> 0) + +($0_1 | 0) * 4294967296.0));
      $10_1 = $9 >= $10_1 ? $9 : $10_1;
     }
     $24 = $10_1 < $26_1 ? $10_1 : $26_1;
     $35_1 = Math_fround($24 * Math_fround(.5));
     $33_1 = $7_1 & 32;
     if ($33_1) {
      $25_1 = $1669(Math_fround(.10000000149011612), Math_fround(1.0))
     }
     $31_1 = Math_fround($35_1 + Math_fround($12_1 + Math_fround(2.0)));
     $0_1 = 0;
     label$60 : {
      if (($1944($29_1, 7136) | 0) != ($15_1 | 0)) {
       break label$60
      }
      $10_1 = Math_fround(0.0);
      label$71 : {
       label$82 : {
        switch ($1944($29_1, 7188) - 1 | 0) {
        case 0:
         if (!$1937($29_1 + 236 | 0, 0)) {
          $86();
          break label$71;
         }
         $9 = Math_fround($26_1 - $24);
         if ($9 > Math_fround(0.0)) {
          $9 = Math_fround(Math_fround($1963(($29_1 + ($41_1 >>> 20 << 2) | 0) + 228 | 0, 0) - $31_1) / $9);
          $10_1 = $9 < Math_fround(0.0) ? Math_fround(0.0) : $9 > Math_fround(1.0) ? Math_fround(1.0) : $9;
         }
         $10_1 = $41_1 ? Math_fround(Math_fround(1.0) - $10_1) : $10_1;
         $17_1 = 1;
         break label$71;
        case 3:
         break label$82;
        default:
         break label$71;
        };
       }
       if ($1937($29_1, 7148)) {
        $1968($29_1, 12056, 0);
        $1973($29_1, 12052, 0);
       }
       $154($34_1 + 8 | 0, 6, 5, Math_fround(0.0), Math_fround(0.0));
       $9 = (wasm2js_f32$0 = Math_fround(-$1963($34_1, 12)), wasm2js_f32$1 = $1963($34_1, 8), wasm2js_i32$0 = $41_1, wasm2js_i32$0 ? wasm2js_f32$0 : wasm2js_f32$1);
       if ($9 != Math_fround(0.0)) {
        label$15 : {
         label$18 : {
          $0_1 = $23_1 + 100 | 0;
          if (!(!($0_1 >>> 0 < 100 ? $14 + 1 | 0 : $14) & $0_1 >>> 0 < 201)) {
           if (!($1963($1944(0, 73568) + 824 | 0, 0) > Math_fround(0.0))) {
            break label$18
           }
          }
          $10_1 = Math_fround(($9 < Math_fround(0.0) ? Math_fround(-1.0) : Math_fround(1.0)) / Math_fround(+($23_1 >>> 0) + +($14 | 0) * 4294967296.0));
          break label$15;
         }
         $10_1 = Math_fround($9 / Math_fround(100.0));
        }
        $9 = $1963($1944(0, 73568) + 828 | 0, 0);
        $1968($29_1, 12056, 1);
        $1986($29_1, 12052, Math_fround($1963($29_1, 12052) + ($9 > Math_fround(0.0) ? Math_fround($10_1 * Math_fround(10.0)) : $10_1)));
       }
       $19 = $1963($29_1, 12052);
       label$204 : {
        label$21 : {
         if (($1944($29_1, 7528) | 0) != ($15_1 | 0)) {
          break label$21
         }
         if ($1937($29_1, 7148)) {
          break label$21
         }
         $86();
         $10_1 = Math_fround(0.0);
         break label$204;
        }
        if (!$1937($29_1, 12056)) {
         $10_1 = Math_fround(0.0);
         break label$204;
        }
        $36_1 = ($1_1 | 0) == ($2_1 | 0) & ($13 | 0) == ($16_1 | 0);
        $10_1 = Math_fround(0.0);
        label$23 : {
         if ($36_1) {
          break label$23
         }
         $15_1 = $39_1 ? $2_1 : $1_1;
         $17_1 = $1960($3, 0);
         $5_1 = ($13 | 0) == ($16_1 | 0) & $1_1 >>> 0 < $2_1 >>> 0 | $13 >>> 0 > $16_1 >>> 0;
         $0_1 = $5_1 ? $2_1 : $1_1;
         $30 = i64toi32_i32$HIGH_BITS;
         $23_1 = $5_1 ? $13 : $16_1;
         $5_1 = ($30 | 0) == ($23_1 | 0) & $0_1 >>> 0 > $17_1 >>> 0 | $23_1 >>> 0 > $30 >>> 0;
         $43_1 = $5_1 ? $17_1 : $0_1;
         $14 = $39_1 ? $13 : $16_1;
         $0_1 = ($14 | 0) == ($30 | 0) & $15_1 >>> 0 > $17_1 >>> 0 | $14 >>> 0 > $30 >>> 0;
         $15_1 = $0_1 ? $15_1 : $43_1;
         $0_1 = $0_1 ? $14 : $5_1 ? $30 : $23_1;
         if ($33_1) {
          $27_1 = +$25_1;
          $5_1 = ($13 | 0) == ($16_1 | 0) & $1_1 >>> 0 < $2_1 >>> 0 | $13 >>> 0 > $16_1 >>> 0;
          $11_1 = +(($5_1 ? $1_1 : $2_1) >>> 0) + +(($5_1 ? $16_1 : $13) >>> 0) * 4294967296.0;
          $22_1 = $11_1 < $27_1 ? $27_1 : $11_1;
          $18_1 = +($15_1 >>> 0) + +($0_1 >>> 0) * 4294967296.0;
          $9 = Math_fround(0.0);
          label$25 : {
           if ($22_1 >= $18_1) {
            break label$25
           }
           $0_1 = ($13 | 0) == ($16_1 | 0) & $1_1 >>> 0 > $2_1 >>> 0 | $13 >>> 0 < $16_1 >>> 0;
           $11_1 = +(($0_1 ? $1_1 : $2_1) >>> 0) + +(($0_1 ? $16_1 : $13) >>> 0) * 4294967296.0;
           $11_1 = $11_1 < $27_1 ? $27_1 : $11_1;
           $9 = Math_fround(1.0);
           if ($11_1 <= $18_1) {
            break label$25
           }
           $9 = Math_fround($1637($18_1 / $22_1) / $1637($11_1 / $22_1));
          }
          $10_1 = $5_1 ? Math_fround(Math_fround(1.0) - $9) : $9;
          break label$23;
         }
         $10_1 = Math_fround((+($15_1 - $2_1 >>> 0) + +($0_1 - (($2_1 >>> 0 > $15_1 >>> 0) + $13 | 0) | 0) * 4294967296.0) / (+($40_1 >>> 0) + +($28_1 | 0) * 4294967296.0));
        }
        label$26 : {
         if (!(!(!($10_1 >= Math_fround(1.0)) | !($19 > Math_fround(0.0))) | !(!($10_1 <= Math_fround(0.0)) | !($19 < Math_fround(0.0))))) {
          $9 = Math_fround($19 + $10_1);
          $9 = $9 < Math_fround(0.0) ? Math_fround(0.0) : $9 > Math_fround(1.0) ? Math_fround(1.0) : $9;
          $0_1 = $2_1;
          $5_1 = $13;
          label$30 : {
           if ($36_1) {
            break label$30
           }
           if ($33_1) {
            $5_1 = $13;
            if ($9 <= Math_fround(0.0)) {
             break label$30
            }
            $0_1 = $1_1;
            $5_1 = $16_1;
            if ($9 >= Math_fround(1.0)) {
             break label$30
            }
            $18_1 = +$25_1;
            $11_1 = +($1_1 >>> 0) + +($16_1 >>> 0) * 4294967296.0;
            $22_1 = $11_1 < $18_1 ? $18_1 : $11_1;
            $11_1 = +($2_1 >>> 0) + +($13 >>> 0) * 4294967296.0;
            $18_1 = $11_1 < $18_1 ? $18_1 : $11_1;
            $0_1 = ($13 | 0) == ($16_1 | 0) & $1_1 >>> 0 < $2_1 >>> 0 | $13 >>> 0 > $16_1 >>> 0;
            $11_1 = $0_1 ? $22_1 : $18_1;
            $11_1 = $11_1 * $1656(($0_1 ? $18_1 : $22_1) / $11_1, +($0_1 ? Math_fround(Math_fround(1.0) - $9) : $9));
            if ($11_1 < 18446744073709551615.0 & $11_1 >= 0.0) {
             $0_1 = ~~$11_1 >>> 0;
             $5_1 = Math_abs($11_1) >= 1.0 ? ~~($11_1 > 0.0 ? Math_min(Math_floor($11_1 * 2.3283064365386963e-10), 4294967295.0) : Math_ceil(($11_1 - +(~~$11_1 >>> 0 >>> 0)) * 2.3283064365386963e-10)) >>> 0 : 0;
             break label$30;
            }
            $0_1 = 0;
            $5_1 = 0;
            break label$30;
           }
           $0_1 = $1_1;
           $5_1 = $16_1;
           if (!($9 < Math_fround(1.0))) {
            break label$30
           }
           $11_1 = (($13 | 0) == ($16_1 | 0) & $1_1 >>> 0 < $2_1 >>> 0 | $13 >>> 0 > $16_1 >>> 0 ? -.5 : .5) + +Math_fround($9 * Math_fround(+($40_1 >>> 0) + +($28_1 | 0) * 4294967296.0));
           label$35 : {
            if (Math_abs($11_1) < 9223372036854775808.0) {
             $17_1 = Math_abs($11_1) >= 1.0 ? ~~($11_1 > 0.0 ? Math_min(Math_floor($11_1 * 2.3283064365386963e-10), 4294967295.0) : Math_ceil(($11_1 - +(~~$11_1 >>> 0 >>> 0)) * 2.3283064365386963e-10)) >>> 0 : 0;
             $5_1 = ~~$11_1 >>> 0;
             break label$35;
            }
            $17_1 = -2147483648;
            $5_1 = 0;
           }
           $0_1 = $13 + $17_1 | 0;
           $17_1 = $0_1 + 1 | 0;
           $15_1 = $0_1;
           $0_1 = $2_1 + $5_1 | 0;
           $5_1 = $0_1 >>> 0 < $2_1 >>> 0 ? $17_1 : $15_1;
          }
          $17_1 = $5_1;
          if (!($7_1 & 64)) {
           $0_1 = $622($6_1, $0_1, $17_1);
           $17_1 = i64toi32_i32$HIGH_BITS;
          }
          $12_1 = Math_fround(0.0);
          label$39 : {
           if ($36_1) {
            break label$39
           }
           $14 = $39_1 ? $2_1 : $1_1;
           $15_1 = ($13 | 0) == ($16_1 | 0) & $1_1 >>> 0 < $2_1 >>> 0 | $13 >>> 0 > $16_1 >>> 0;
           $5_1 = $15_1 ? $2_1 : $1_1;
           $30 = $5_1;
           $23_1 = $15_1 ? $13 : $16_1;
           $5_1 = ($23_1 | 0) == ($17_1 | 0) & $0_1 >>> 0 < $5_1 >>> 0 | $17_1 >>> 0 < $23_1 >>> 0;
           $30 = $5_1 ? $0_1 : $30;
           $15_1 = $39_1 ? $13 : $16_1;
           $0_1 = ($15_1 | 0) == ($17_1 | 0) & $0_1 >>> 0 < $14 >>> 0 | $15_1 >>> 0 > $17_1 >>> 0;
           $14 = $0_1 ? $14 : $30;
           $0_1 = $0_1 ? $15_1 : $5_1 ? $17_1 : $23_1;
           if ($33_1) {
            $27_1 = +$25_1;
            $5_1 = ($13 | 0) == ($16_1 | 0) & $1_1 >>> 0 < $2_1 >>> 0 | $13 >>> 0 > $16_1 >>> 0;
            $11_1 = +(($5_1 ? $1_1 : $2_1) >>> 0) + +(($5_1 ? $16_1 : $13) >>> 0) * 4294967296.0;
            $22_1 = $11_1 < $27_1 ? $27_1 : $11_1;
            $18_1 = +($14 >>> 0) + +($0_1 >>> 0) * 4294967296.0;
            $12_1 = Math_fround(0.0);
            label$41 : {
             if ($22_1 >= $18_1) {
              break label$41
             }
             $0_1 = ($13 | 0) == ($16_1 | 0) & $1_1 >>> 0 > $2_1 >>> 0 | $13 >>> 0 < $16_1 >>> 0;
             $11_1 = +(($0_1 ? $1_1 : $2_1) >>> 0) + +(($0_1 ? $16_1 : $13) >>> 0) * 4294967296.0;
             $11_1 = $11_1 < $27_1 ? $27_1 : $11_1;
             $12_1 = Math_fround(1.0);
             if ($11_1 <= $18_1) {
              break label$41
             }
             $12_1 = Math_fround($1637($18_1 / $22_1) / $1637($11_1 / $22_1));
            }
            $12_1 = $5_1 ? Math_fround(Math_fround(1.0) - $12_1) : $12_1;
            break label$39;
           }
           $12_1 = Math_fround((+($14 - $2_1 >>> 0) + +($0_1 - (($2_1 >>> 0 > $14 >>> 0) + $13 | 0) | 0) * 4294967296.0) / (+($40_1 >>> 0) + +($28_1 | 0) * 4294967296.0));
          }
          $12_1 = Math_fround($12_1 - $10_1);
          $10_1 = $1963($29_1, 12052);
          if ($19 > Math_fround(0.0)) {
           $21_1 = Math_fround($10_1 - ($12_1 < $19 ? $12_1 : $19));
           $10_1 = $9;
           $17_1 = 1;
           break label$26;
          }
          $21_1 = Math_fround($10_1 - ($12_1 >= $19 ? $12_1 : $19));
          $10_1 = $9;
          $17_1 = 1;
          break label$26;
         }
         $17_1 = 0;
        }
        $1968($29_1, 12056, 0);
        $1986($29_1, 12052, $21_1);
       }
      }
      $0_1 = 0;
      if (!$17_1) {
       break label$60
      }
      $0_1 = $2_1;
      $5_1 = $13;
      label$43 : {
       if (($1_1 | 0) == ($2_1 | 0) & ($13 | 0) == ($16_1 | 0)) {
        break label$43
       }
       if ($33_1) {
        $5_1 = $13;
        if ($10_1 <= Math_fround(0.0)) {
         break label$43
        }
        $0_1 = $1_1;
        $5_1 = $16_1;
        if ($10_1 >= Math_fround(1.0)) {
         break label$43
        }
        $18_1 = +$25_1;
        $11_1 = +($1_1 >>> 0) + +($16_1 >>> 0) * 4294967296.0;
        $22_1 = $11_1 < $18_1 ? $18_1 : $11_1;
        $11_1 = +($2_1 >>> 0) + +($13 >>> 0) * 4294967296.0;
        $18_1 = $11_1 < $18_1 ? $18_1 : $11_1;
        $0_1 = ($13 | 0) == ($16_1 | 0) & $1_1 >>> 0 < $2_1 >>> 0 | $13 >>> 0 > $16_1 >>> 0;
        $11_1 = $0_1 ? $22_1 : $18_1;
        $11_1 = $11_1 * $1656(($0_1 ? $18_1 : $22_1) / $11_1, +($0_1 ? Math_fround(Math_fround(1.0) - $10_1) : $10_1));
        if ($11_1 < 18446744073709551615.0 & $11_1 >= 0.0) {
         $0_1 = ~~$11_1 >>> 0;
         $5_1 = Math_abs($11_1) >= 1.0 ? ~~($11_1 > 0.0 ? Math_min(Math_floor($11_1 * 2.3283064365386963e-10), 4294967295.0) : Math_ceil(($11_1 - +(~~$11_1 >>> 0 >>> 0)) * 2.3283064365386963e-10)) >>> 0 : 0;
         break label$43;
        }
        $0_1 = 0;
        $5_1 = 0;
        break label$43;
       }
       $0_1 = $1_1;
       $5_1 = $16_1;
       if (!($10_1 < Math_fround(1.0))) {
        break label$43
       }
       $11_1 = (($13 | 0) == ($16_1 | 0) & $1_1 >>> 0 < $2_1 >>> 0 | $13 >>> 0 > $16_1 >>> 0 ? -.5 : .5) + +Math_fround($10_1 * Math_fround(+($40_1 >>> 0) + +($28_1 | 0) * 4294967296.0));
       label$48 : {
        if (Math_abs($11_1) < 9223372036854775808.0) {
         $17_1 = Math_abs($11_1) >= 1.0 ? ~~($11_1 > 0.0 ? Math_min(Math_floor($11_1 * 2.3283064365386963e-10), 4294967295.0) : Math_ceil(($11_1 - +(~~$11_1 >>> 0 >>> 0)) * 2.3283064365386963e-10)) >>> 0 : 0;
         $5_1 = ~~$11_1 >>> 0;
         break label$48;
        }
        $17_1 = -2147483648;
        $5_1 = 0;
       }
       $0_1 = $13 + $17_1 | 0;
       $17_1 = $0_1 + 1 | 0;
       $15_1 = $0_1;
       $0_1 = $2_1 + $5_1 | 0;
       $5_1 = $0_1 >>> 0 < $2_1 >>> 0 ? $17_1 : $15_1;
      }
      $17_1 = $5_1;
      if (!($7_1 & 64)) {
       $0_1 = $622($6_1, $0_1, $17_1);
       $17_1 = i64toi32_i32$HIGH_BITS;
      }
      $6_1 = $1960($3, 0);
      $5_1 = i64toi32_i32$HIGH_BITS;
      if (!(($0_1 | 0) != ($6_1 | 0) | ($17_1 | 0) != ($5_1 | 0))) {
       $0_1 = ($0_1 | 0) != ($6_1 | 0) | ($5_1 | 0) != ($17_1 | 0);
       break label$60;
      }
      $1983($3, 0, $0_1, $17_1);
      $0_1 = 1;
     }
     $6_1 = $0_1;
     label$53 : {
      if ($26_1 < Math_fround(1.0)) {
       $1_1 = $1959($4_1, 0);
       $0_1 = i64toi32_i32$HIGH_BITS;
       $1982($8, 8, $1_1, $0_1);
       $1982($8, 0, $1_1, $0_1);
       break label$53;
      }
      $12_1 = Math_fround(-$24);
      $10_1 = Math_fround(Math_fround(Math_fround($20_1 + Math_fround(-2.0)) - $35_1) - $31_1);
      $9 = Math_fround(0.0);
      label$55 : {
       if (($1_1 | 0) == ($2_1 | 0) & ($13 | 0) == ($16_1 | 0)) {
        break label$55
       }
       $5_1 = $39_1 ? $2_1 : $1_1;
       $14 = $1960($3, 0);
       $3 = ($13 | 0) == ($16_1 | 0) & $1_1 >>> 0 < $2_1 >>> 0 | $13 >>> 0 > $16_1 >>> 0;
       $0_1 = $3 ? $2_1 : $1_1;
       $23_1 = i64toi32_i32$HIGH_BITS;
       $15_1 = $3 ? $13 : $16_1;
       $3 = ($23_1 | 0) == ($15_1 | 0) & $0_1 >>> 0 > $14 >>> 0 | $15_1 >>> 0 > $23_1 >>> 0;
       $17_1 = $3 ? $14 : $0_1;
       $7_1 = $39_1 ? $13 : $16_1;
       $0_1 = ($7_1 | 0) == ($23_1 | 0) & $5_1 >>> 0 > $14 >>> 0 | $7_1 >>> 0 > $23_1 >>> 0;
       $5_1 = $0_1 ? $5_1 : $17_1;
       $0_1 = $0_1 ? $7_1 : $3 ? $23_1 : $15_1;
       if ($33_1) {
        $27_1 = +$25_1;
        $3 = ($13 | 0) == ($16_1 | 0) & $1_1 >>> 0 < $2_1 >>> 0 | $13 >>> 0 > $16_1 >>> 0;
        $11_1 = +(($3 ? $1_1 : $2_1) >>> 0) + +(($3 ? $16_1 : $13) >>> 0) * 4294967296.0;
        $22_1 = $11_1 < $27_1 ? $27_1 : $11_1;
        $18_1 = +($5_1 >>> 0) + +($0_1 >>> 0) * 4294967296.0;
        $9 = Math_fround(0.0);
        label$57 : {
         if ($22_1 >= $18_1) {
          break label$57
         }
         $0_1 = ($13 | 0) == ($16_1 | 0) & $1_1 >>> 0 > $2_1 >>> 0 | $13 >>> 0 < $16_1 >>> 0;
         $11_1 = +(($0_1 ? $1_1 : $2_1) >>> 0) + +(($0_1 ? $16_1 : $13) >>> 0) * 4294967296.0;
         $11_1 = $11_1 < $27_1 ? $27_1 : $11_1;
         $9 = Math_fround(1.0);
         if ($11_1 <= $18_1) {
          break label$57
         }
         $9 = Math_fround($1637($18_1 / $22_1) / $1637($11_1 / $22_1));
        }
        $9 = $3 ? Math_fround(Math_fround(1.0) - $9) : $9;
        break label$55;
       }
       $9 = Math_fround((+($5_1 - $2_1 >>> 0) + +($0_1 - (($2_1 >>> 0 > $5_1 >>> 0) + $13 | 0) | 0) * 4294967296.0) / (+($40_1 >>> 0) + +($28_1 | 0) * 4294967296.0));
      }
      $20_1 = Math_fround(Math_fround($10_1 * ($41_1 ? Math_fround(Math_fround(1.0) - $9) : $9)) + $31_1);
      if (!$41_1) {
       $10_1 = $1963($4_1 + 12 | 0, 0);
       $9 = $1963($4_1, 4);
       $1986($8, 8, Math_fround(Math_fround($24 * Math_fround(.5)) + $20_1));
       $1986($8, 4, Math_fround($9 + Math_fround(2.0)));
       $1986($8, 0, Math_fround(Math_fround($12_1 * Math_fround(.5)) + $20_1));
       $1986($8, 12, Math_fround($10_1 + Math_fround(-2.0)));
       break label$53;
      }
      $10_1 = $1963($4_1, 0);
      $9 = $1963($4_1, 8);
      $1986($8, 12, Math_fround(Math_fround($24 * Math_fround(.5)) + $20_1));
      $1986($8, 8, Math_fround($9 + Math_fround(-2.0)));
      $1986($8, 4, Math_fround(Math_fround($12_1 * Math_fround(.5)) + $20_1));
      $1986($8, 0, Math_fround($10_1 + Math_fround(2.0)));
     }
     global$0 = $34_1 + 16 | 0;
     $15_1 = $6_1;
     break label$1;
    case 8:
     $37 = $1963($4_1, 0);
     $38_1 = $1963($5_1, 0);
     $5_1 = global$0 - 16 | 0;
     global$0 = $5_1;
     $15_1 = $7_1 & 1048576;
     $2_1 = ($15_1 >>> 18 | 0) + $0_1 | 0;
     $20_1 = $1963($2_1 + 8 | 0, 0);
     $10_1 = $1963($2_1, 0);
     $25_1 = Math_fround(Math_fround($20_1 - $10_1) + Math_fround(-4.0));
     $14 = $1944(0, 73568);
     $12_1 = $1963($14 + 5540 | 0, 0);
     $26_1 = $37 < $38_1 ? Math_fround($38_1 - $37) : Math_fround($37 - $38_1);
     if (!(!($26_1 >= Math_fround(0.0)) | 1)) {
      $9 = Math_fround($25_1 / Math_fround($26_1 + Math_fround(1.0)));
      $12_1 = $9 >= $12_1 ? $9 : $12_1;
     }
     $24 = $12_1 < $25_1 ? $12_1 : $25_1;
     $35_1 = Math_fround($24 * Math_fround(.5));
     $21_1 = Math_fround($25_1 - $24);
     $4_1 = $7_1 & 32;
     if ($4_1) {
      $2_1 = $615($6_1);
      $42_1 = Math_fround(Math_fround($1963($14 + 5548 | 0, 0) * Math_fround(.5)) / ($21_1 >= Math_fround(1.0) ? $21_1 : Math_fround(1.0)));
      $19 = $1669(Math_fround(.10000000149011612), Math_fround($2_1 | 0));
     }
     $31_1 = Math_fround($35_1 + Math_fround($10_1 + Math_fround(2.0)));
     $13 = 0;
     label$62 : {
      if (($1944($14, 7136) | 0) != ($1_1 | 0)) {
       break label$62
      }
      $12_1 = Math_fround(0.0);
      $2_1 = 0;
      label$73 : {
       label$84 : {
        switch ($1944($14, 7188) - 1 | 0) {
        case 0:
         if (!$1937($14 + 236 | 0, 0)) {
          $86();
          break label$73;
         }
         $9 = Math_fround(0.0);
         if ($21_1 > Math_fround(0.0)) {
          $9 = Math_fround(Math_fround($1963(($14 + ($15_1 >>> 20 << 2) | 0) + 228 | 0, 0) - $31_1) / $21_1);
          $9 = $9 < Math_fround(0.0) ? Math_fround(0.0) : $9 > Math_fround(1.0) ? Math_fround(1.0) : $9;
         }
         $12_1 = $15_1 ? Math_fround(Math_fround(1.0) - $9) : $9;
         $2_1 = 1;
         break label$73;
        case 3:
         break label$84;
        default:
         break label$73;
        };
       }
       if ($1937($14, 7148)) {
        $1968($14, 12056, 0);
        $1973($14, 12052, 0);
       }
       $154($5_1 + 8 | 0, 6, 5, Math_fround(0.0), Math_fround(0.0));
       $9 = (wasm2js_f32$0 = Math_fround(-$1963($5_1, 12)), wasm2js_f32$1 = $1963($5_1, 8), wasm2js_i32$0 = $15_1, wasm2js_i32$0 ? wasm2js_f32$0 : wasm2js_f32$1);
       if ($9 != Math_fround(0.0)) {
        label$156 : {
         if (($615($6_1) | 0) > 0) {
          $9 = Math_fround($9 / Math_fround(100.0));
          if (!($1963($1944(0, 73568) + 824 | 0, 0) > Math_fround(0.0))) {
           break label$156
          }
          $9 = Math_fround($9 / Math_fround(10.0));
          break label$156;
         }
         label$187 : {
          if (!($26_1 <= Math_fround(100.0) & $26_1 >= Math_fround(-100.0))) {
           if (!($1963($1944(0, 73568) + 824 | 0, 0) > Math_fround(0.0))) {
            break label$187
           }
          }
          $9 = Math_fround(($9 < Math_fround(0.0) ? Math_fround(-1.0) : Math_fround(1.0)) / $26_1);
          break label$156;
         }
         $9 = Math_fround($9 / Math_fround(100.0));
        }
        $10_1 = $9;
        $9 = $1963($1944(0, 73568) + 828 | 0, 0);
        $1968($14, 12056, 1);
        $1986($14, 12052, Math_fround($1963($14, 12052) + ($9 > Math_fround(0.0) ? Math_fround($10_1 * Math_fround(10.0)) : $10_1)));
       }
       $21_1 = $1963($14, 12052);
       label$218 : {
        label$229 : {
         if (($1944($14, 7528) | 0) != ($1_1 | 0)) {
          break label$229
         }
         if ($1937($14, 7148)) {
          break label$229
         }
         $86();
         $9 = Math_fround(0.0);
         break label$218;
        }
        if (!$1937($14, 12056)) {
         $9 = Math_fround(0.0);
         break label$218;
        }
        $10_1 = $624($1963($3, 0), $37, $38_1, ($4_1 | 0) != 0, $19, $42_1);
        label$24 : {
         if (!(!(!($10_1 >= Math_fround(1.0)) | !($21_1 > Math_fround(0.0))) | !(!($10_1 <= Math_fround(0.0)) | !($21_1 < Math_fround(0.0))))) {
          $9 = Math_fround($21_1 + $10_1);
          $9 = $9 < Math_fround(0.0) ? Math_fround(0.0) : $9 > Math_fround(1.0) ? Math_fround(1.0) : $9;
          $1_1 = ($4_1 | 0) != 0;
          $12_1 = $625($9, $37, $38_1, $1_1, $19, $42_1);
          if (!($7_1 & 64)) {
           $12_1 = $626($6_1, $12_1)
          }
          $12_1 = Math_fround($624($12_1, $37, $38_1, $1_1, $19, $42_1) - $10_1);
          $10_1 = $1963($14, 12052);
          if ($21_1 > Math_fround(0.0)) {
           $12_1 = Math_fround($10_1 - ($12_1 < $21_1 ? $12_1 : $21_1));
           $2_1 = 1;
           break label$24;
          }
          $12_1 = Math_fround($10_1 - ($12_1 >= $21_1 ? $12_1 : $21_1));
          $2_1 = 1;
          break label$24;
         }
         $9 = $10_1;
         $2_1 = 0;
        }
        $1968($14, 12056, 0);
        $1986($14, 12052, $12_1);
       }
       $12_1 = $9;
      }
      $13 = 0;
      if (!$2_1) {
       break label$62
      }
      $9 = $625($12_1, $37, $38_1, ($4_1 | 0) != 0, $19, $42_1);
      if (!($7_1 & 64)) {
       $9 = $626($6_1, $9)
      }
      $10_1 = $1963($3, 0);
      if ($9 == $10_1) {
       $13 = $9 != $10_1;
       break label$62;
      }
      $1986($3, 0, $9);
      $13 = 1;
     }
     $2_1 = $13;
     label$34 : {
      if ($25_1 < Math_fround(1.0)) {
       $1_1 = $1959($0_1, 0);
       $0_1 = i64toi32_i32$HIGH_BITS;
       $1982($8, 8, $1_1, $0_1);
       $1982($8, 0, $1_1, $0_1);
       break label$34;
      }
      $12_1 = Math_fround(-$24);
      $9 = $624($1963($3, 0), $37, $38_1, ($4_1 | 0) != 0, $19, $42_1);
      $20_1 = Math_fround(Math_fround(Math_fround(Math_fround(Math_fround($20_1 + Math_fround(-2.0)) - $35_1) - $31_1) * ($15_1 ? Math_fround(Math_fround(1.0) - $9) : $9)) + $31_1);
      if (!$15_1) {
       $10_1 = $1963($0_1 + 12 | 0, 0);
       $9 = $1963($0_1, 4);
       $1986($8, 8, Math_fround(Math_fround($24 * Math_fround(.5)) + $20_1));
       $1986($8, 4, Math_fround($9 + Math_fround(2.0)));
       $1986($8, 0, Math_fround(Math_fround($12_1 * Math_fround(.5)) + $20_1));
       $1986($8, 12, Math_fround($10_1 + Math_fround(-2.0)));
       break label$34;
      }
      $10_1 = $1963($0_1, 0);
      $9 = $1963($0_1, 8);
      $1986($8, 12, Math_fround(Math_fround($24 * Math_fround(.5)) + $20_1));
      $1986($8, 8, Math_fround($9 + Math_fround(-2.0)));
      $1986($8, 4, Math_fround(Math_fround($12_1 * Math_fround(.5)) + $20_1));
      $1986($8, 0, Math_fround($10_1 + Math_fround(2.0)));
     }
     global$0 = $5_1 + 16 | 0;
     $15_1 = $2_1;
     break label$1;
    case 9:
     break label$3;
    default:
     break label$1;
    };
   }
   $27_1 = $1967($4_1, 0);
   $22_1 = $1967($5_1, 0);
   $5_1 = global$0 - 16 | 0;
   global$0 = $5_1;
   $15_1 = $7_1 & 1048576;
   $2_1 = ($15_1 >>> 18 | 0) + $0_1 | 0;
   $20_1 = $1963($2_1 + 8 | 0, 0);
   $12_1 = $1963($2_1, 0);
   $24 = Math_fround(Math_fround($20_1 - $12_1) + Math_fround(-4.0));
   $14 = $1944(0, 73568);
   $10_1 = $1963($14 + 5540 | 0, 0);
   $11_1 = $22_1 > $27_1 ? $22_1 - $27_1 : $27_1 - $22_1;
   if (!(!($11_1 >= 0.0) | 1)) {
    $9 = Math_fround(+$24 / ($11_1 + 1.0));
    $10_1 = $9 >= $10_1 ? $9 : $10_1;
   }
   $21_1 = $10_1 < $24 ? $10_1 : $24;
   $35_1 = Math_fround($21_1 * Math_fround(.5));
   $9 = Math_fround($24 - $21_1);
   $4_1 = $7_1 & 32;
   if ($4_1) {
    $2_1 = $615($6_1);
    $25_1 = Math_fround(Math_fround($1963($14 + 5548 | 0, 0) * Math_fround(.5)) / ($9 >= Math_fround(1.0) ? $9 : Math_fround(1.0)));
    $26_1 = $1669(Math_fround(.10000000149011612), Math_fround($2_1 | 0));
   }
   $31_1 = Math_fround($35_1 + Math_fround($12_1 + Math_fround(2.0)));
   $13 = 0;
   label$63 : {
    if (($1944($14, 7136) | 0) != ($1_1 | 0)) {
     break label$63
    }
    $10_1 = Math_fround(0.0);
    $2_1 = 0;
    label$74 : {
     label$85 : {
      switch ($1944($14, 7188) - 1 | 0) {
      case 0:
       if (!$1937($14 + 236 | 0, 0)) {
        $86();
        break label$74;
       }
       if ($9 > Math_fround(0.0)) {
        $9 = Math_fround(Math_fround($1963(($14 + ($15_1 >>> 20 << 2) | 0) + 228 | 0, 0) - $31_1) / $9);
        $10_1 = $9 < Math_fround(0.0) ? Math_fround(0.0) : $9 > Math_fround(1.0) ? Math_fround(1.0) : $9;
       }
       $10_1 = $15_1 ? Math_fround(Math_fround(1.0) - $10_1) : $10_1;
       $2_1 = 1;
       break label$74;
      case 3:
       break label$85;
      default:
       break label$74;
      };
     }
     if ($1937($14, 7148)) {
      $1968($14, 12056, 0);
      $1973($14, 12052, 0);
     }
     $154($5_1 + 8 | 0, 6, 5, Math_fround(0.0), Math_fround(0.0));
     $9 = (wasm2js_f32$0 = Math_fround(-$1963($5_1, 12)), wasm2js_f32$1 = $1963($5_1, 8), wasm2js_i32$0 = $15_1, wasm2js_i32$0 ? wasm2js_f32$0 : wasm2js_f32$1);
     if ($9 != Math_fround(0.0)) {
      label$157 : {
       if (($615($6_1) | 0) > 0) {
        $9 = Math_fround($9 / Math_fround(100.0));
        if (!($1963($1944(0, 73568) + 824 | 0, 0) > Math_fround(0.0))) {
         break label$157
        }
        $9 = Math_fround($9 / Math_fround(10.0));
        break label$157;
       }
       label$188 : {
        if (!($11_1 <= 100.0 & $11_1 >= -100.0)) {
         if (!($1963($1944(0, 73568) + 824 | 0, 0) > Math_fround(0.0))) {
          break label$188
         }
        }
        $9 = Math_fround(($9 < Math_fround(0.0) ? Math_fround(-1.0) : Math_fround(1.0)) / Math_fround($11_1));
        break label$157;
       }
       $9 = Math_fround($9 / Math_fround(100.0));
      }
      $10_1 = $9;
      $9 = $1963($1944(0, 73568) + 828 | 0, 0);
      $1968($14, 12056, 1);
      $1986($14, 12052, Math_fround($1963($14, 12052) + ($9 > Math_fround(0.0) ? Math_fround($10_1 * Math_fround(10.0)) : $10_1)));
     }
     $19 = $1963($14, 12052);
     label$219 : {
      label$2210 : {
       if (($1944($14, 7528) | 0) != ($1_1 | 0)) {
        break label$2210
       }
       if ($1937($14, 7148)) {
        break label$2210
       }
       $86();
       $10_1 = Math_fround(0.0);
       break label$219;
      }
      if (!$1937($14, 12056)) {
       $10_1 = Math_fround(0.0);
       break label$219;
      }
      $9 = $627($1967($3, 0), $27_1, $22_1, ($4_1 | 0) != 0, $26_1, $25_1);
      label$2411 : {
       if (!(!(!($9 >= Math_fround(1.0)) | !($19 > Math_fround(0.0))) | !(!($9 <= Math_fround(0.0)) | !($19 < Math_fround(0.0))))) {
        $10_1 = Math_fround($19 + $9);
        $10_1 = $10_1 < Math_fround(0.0) ? Math_fround(0.0) : $10_1 > Math_fround(1.0) ? Math_fround(1.0) : $10_1;
        $1_1 = ($4_1 | 0) != 0;
        $11_1 = $628($10_1, $27_1, $22_1, $1_1, $26_1, $25_1);
        if (!($7_1 & 64)) {
         $11_1 = $629($6_1, $11_1)
        }
        $12_1 = Math_fround($627($11_1, $27_1, $22_1, $1_1, $26_1, $25_1) - $9);
        $9 = $1963($14, 12052);
        if ($19 > Math_fround(0.0)) {
         $12_1 = Math_fround($9 - ($12_1 < $19 ? $12_1 : $19));
         $2_1 = 1;
         break label$2411;
        }
        $12_1 = Math_fround($9 - ($12_1 >= $19 ? $12_1 : $19));
        $2_1 = 1;
        break label$2411;
       }
       $12_1 = Math_fround(0.0);
       $10_1 = $9;
       $2_1 = 0;
      }
      $1968($14, 12056, 0);
      $1986($14, 12052, $12_1);
     }
    }
    $13 = 0;
    if (!$2_1) {
     break label$63
    }
    $18_1 = $628($10_1, $27_1, $22_1, ($4_1 | 0) != 0, $26_1, $25_1);
    if (!($7_1 & 64)) {
     $18_1 = $629($6_1, $18_1)
    }
    $11_1 = $1967($3, 0);
    if ($18_1 == $11_1) {
     $13 = $11_1 != $18_1;
     break label$63;
    }
    $1990($3, 0, $18_1);
    $13 = 1;
   }
   $2_1 = $13;
   label$3412 : {
    if ($24 < Math_fround(1.0)) {
     $1_1 = $1959($0_1, 0);
     $0_1 = i64toi32_i32$HIGH_BITS;
     $1982($8, 8, $1_1, $0_1);
     $1982($8, 0, $1_1, $0_1);
     break label$3412;
    }
    $12_1 = Math_fround(-$21_1);
    $9 = $627($1967($3, 0), $27_1, $22_1, ($4_1 | 0) != 0, $26_1, $25_1);
    $20_1 = Math_fround(Math_fround(Math_fround(Math_fround(Math_fround($20_1 + Math_fround(-2.0)) - $35_1) - $31_1) * ($15_1 ? Math_fround(Math_fround(1.0) - $9) : $9)) + $31_1);
    if (!$15_1) {
     $10_1 = $1963($0_1 + 12 | 0, 0);
     $9 = $1963($0_1, 4);
     $1986($8, 8, Math_fround(Math_fround($21_1 * Math_fround(.5)) + $20_1));
     $1986($8, 4, Math_fround($9 + Math_fround(2.0)));
     $1986($8, 0, Math_fround(Math_fround($12_1 * Math_fround(.5)) + $20_1));
     $1986($8, 12, Math_fround($10_1 + Math_fround(-2.0)));
     break label$3412;
    }
    $10_1 = $1963($0_1, 0);
    $9 = $1963($0_1, 8);
    $1986($8, 12, Math_fround(Math_fround($21_1 * Math_fround(.5)) + $20_1));
    $1986($8, 8, Math_fround($9 + Math_fround(-2.0)));
    $1986($8, 4, Math_fround(Math_fround($12_1 * Math_fround(.5)) + $20_1));
    $1986($8, 0, Math_fround($10_1 + Math_fround(2.0)));
   }
   global$0 = $5_1 + 16 | 0;
   $15_1 = $2_1;
  }
  global$0 = $32_1 + 16 | 0;
  return $15_1;
 }
 
 function $646($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  var $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = 0, $11_1 = Math_fround(0), $12_1 = 0, $13 = Math_fround(0), $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = Math_fround(0), $18_1 = Math_fround(0), $19 = 0, $20_1 = Math_fround(0), $21_1 = 0, $22_1 = Math_fround(0), $23_1 = Math_fround(0), $24 = Math_fround(0), $25_1 = Math_fround(0), wasm2js_f32$0 = Math_fround(0), wasm2js_f32$1 = Math_fround(0), wasm2js_i32$0 = 0;
  $16_1 = global$0 - 16 | 0;
  global$0 = $16_1;
  $10_1 = $3 - $4_1 | 0;
  $12_1 = $10_1 >> 31;
  $21_1 = ($10_1 ^ $12_1) - $12_1 | 0;
  $14 = $6_1 & 1048576;
  $12_1 = ($14 >>> 18 | 0) + $0_1 | 0;
  $23_1 = $1963($12_1 + 8 | 0, 0);
  $11_1 = $1963($12_1, 0);
  $17_1 = Math_fround(Math_fround($23_1 - $11_1) + Math_fround(-4.0));
  $9 = Math_fround($17_1 / Math_fround($21_1 + 1 | 0));
  $10_1 = $1944(0, 73568);
  $8 = $1963($10_1 + 5540 | 0, 0);
  $8 = $8 <= $9 ? $9 : $8;
  $18_1 = $8 < $17_1 ? $8 : $17_1;
  $24 = Math_fround($18_1 * Math_fround(.5));
  $9 = Math_fround($17_1 - $18_1);
  $19 = $6_1 & 32;
  if ($19) {
   $13 = Math_fround(Math_fround($1963($10_1 + 5548 | 0, 0) * Math_fround(.5)) / ($9 >= Math_fround(1.0) ? $9 : Math_fround(1.0)));
   $20_1 = $1669(Math_fround(.10000000149011612), Math_fround(1.0));
  }
  $22_1 = Math_fround($24 + Math_fround($11_1 + Math_fround(2.0)));
  $15_1 = 0;
  label$5 : {
   if (($1944($10_1, 7136) | 0) != ($1_1 | 0)) {
    break label$5
   }
   $8 = Math_fround(0.0);
   $12_1 = 0;
   label$6 : {
    label$7 : {
     switch ($1944($10_1, 7188) - 1 | 0) {
     case 0:
      if (!$1937($10_1 + 236 | 0, 0)) {
       $86();
       break label$6;
      }
      if ($9 > Math_fround(0.0)) {
       $8 = Math_fround(Math_fround($1963(($10_1 + ($14 >>> 20 << 2) | 0) + 228 | 0, 0) - $22_1) / $9);
       $8 = $8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8;
      }
      $8 = $14 ? Math_fround(Math_fround(1.0) - $8) : $8;
      $12_1 = 1;
      break label$6;
     case 3:
      break label$7;
     default:
      break label$6;
     };
    }
    if ($1937($10_1, 7148)) {
     $1968($10_1, 12056, 0);
     $1973($10_1, 12052, 0);
    }
    $154($16_1 + 8 | 0, 6, 5, Math_fround(0.0), Math_fround(0.0));
    $8 = (wasm2js_f32$0 = Math_fround(-$1963($16_1, 12)), wasm2js_f32$1 = $1963($16_1, 8), wasm2js_i32$0 = $14, wasm2js_i32$0 ? wasm2js_f32$0 : wasm2js_f32$1);
    if ($8 != Math_fround(0.0)) {
     label$14 : {
      label$17 : {
       if ($21_1 >>> 0 >= 101) {
        if (!($1963($1944(0, 73568) + 824 | 0, 0) > Math_fround(0.0))) {
         break label$17
        }
       }
       $8 = Math_fround(($8 < Math_fround(0.0) ? Math_fround(-1.0) : Math_fround(1.0)) / Math_fround($21_1 | 0));
       break label$14;
      }
      $8 = Math_fround($8 / Math_fround(100.0));
     }
     $9 = $1963($1944(0, 73568) + 828 | 0, 0);
     $1968($10_1, 12056, 1);
     $1986($10_1, 12052, Math_fround($1963($10_1, 12052) + ($9 > Math_fround(0.0) ? Math_fround($8 * Math_fround(10.0)) : $8)));
    }
    $11_1 = $1963($10_1, 12052);
    label$19 : {
     label$20 : {
      if (($1944($10_1, 7528) | 0) != ($1_1 | 0)) {
       break label$20
      }
      if ($1937($10_1, 7148)) {
       break label$20
      }
      $86();
      $8 = Math_fround(0.0);
      $1_1 = 0;
      break label$19;
     }
     if (!$1937($10_1, 12056)) {
      $8 = Math_fround(0.0);
      $1_1 = 0;
      break label$19;
     }
     $9 = $616($1944($2_1, 0), $3, $4_1, ($19 | 0) != 0, $20_1, $13);
     label$22 : {
      if (!(!(!($9 >= Math_fround(1.0)) | !($11_1 > Math_fround(0.0))) | !(!($9 <= Math_fround(0.0)) | !($11_1 < Math_fround(0.0))))) {
       $8 = Math_fround($11_1 + $9);
       $8 = $8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8;
       $12_1 = ($19 | 0) != 0;
       $1_1 = $617($8, $3, $4_1, $12_1, $20_1, $13);
       if (!($6_1 & 64)) {
        $1_1 = $618($5_1, $1_1)
       }
       $9 = Math_fround($616($1_1, $3, $4_1, $12_1, $20_1, $13) - $9);
       $25_1 = $1963($10_1, 12052);
       if ($11_1 > Math_fround(0.0)) {
        $11_1 = Math_fround($25_1 - ($9 < $11_1 ? $9 : $11_1));
        $1_1 = 1;
        break label$22;
       }
       $11_1 = Math_fround($25_1 - ($9 >= $11_1 ? $9 : $11_1));
       $1_1 = 1;
       break label$22;
      }
      $11_1 = Math_fround(0.0);
      $8 = $9;
      $1_1 = 0;
     }
     $1968($10_1, 12056, 0);
     $1986($10_1, 12052, $11_1);
    }
    $12_1 = $1_1;
   }
   $15_1 = 0;
   if (!$12_1) {
    break label$5
   }
   $1_1 = $617($8, $3, $4_1, ($19 | 0) != 0, $20_1, $13);
   if (!($6_1 & 64)) {
    $1_1 = $618($5_1, $1_1)
   }
   $5_1 = $1944($2_1, 0);
   if (($1_1 | 0) == ($5_1 | 0)) {
    $15_1 = ($1_1 | 0) != ($5_1 | 0);
    break label$5;
   }
   $1973($2_1, 0, $1_1);
   $15_1 = 1;
  }
  $1_1 = $15_1;
  label$32 : {
   if ($17_1 < Math_fround(1.0)) {
    $0_1 = $1959($0_1, 0);
    $2_1 = i64toi32_i32$HIGH_BITS;
    $1982($7_1, 8, $0_1, $2_1);
    $1982($7_1, 0, $0_1, $2_1);
    break label$32;
   }
   $9 = Math_fround(-$18_1);
   $8 = $616($1944($2_1, 0), $3, $4_1, ($19 | 0) != 0, $20_1, $13);
   $8 = Math_fround(Math_fround(Math_fround(Math_fround(Math_fround($23_1 + Math_fround(-2.0)) - $24) - $22_1) * ($14 ? Math_fround(Math_fround(1.0) - $8) : $8)) + $22_1);
   if (!$14) {
    $11_1 = $1963($0_1 + 12 | 0, 0);
    $13 = $1963($0_1, 4);
    $1986($7_1, 8, Math_fround(Math_fround($18_1 * Math_fround(.5)) + $8));
    $1986($7_1, 4, Math_fround($13 + Math_fround(2.0)));
    $1986($7_1, 0, Math_fround(Math_fround($9 * Math_fround(.5)) + $8));
    $1986($7_1, 12, Math_fround($11_1 + Math_fround(-2.0)));
    break label$32;
   }
   $11_1 = $1963($0_1, 0);
   $13 = $1963($0_1, 8);
   $1986($7_1, 12, Math_fround(Math_fround($18_1 * Math_fround(.5)) + $8));
   $1986($7_1, 8, Math_fround($13 + Math_fround(-2.0)));
   $1986($7_1, 4, Math_fround(Math_fround($9 * Math_fround(.5)) + $8));
   $1986($7_1, 0, Math_fround($11_1 + Math_fround(2.0)));
  }
  global$0 = $16_1 + 16 | 0;
  return $1_1;
 }
 
 function $647($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  var $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = 0, $13 = 0, $14 = Math_fround(0), $15_1 = Math_fround(0), $16_1 = 0, $17_1 = Math_fround(0), $18_1 = 0, $19 = 0, $20_1 = 0, $21_1 = 0, $22_1 = Math_fround(0), $23_1 = 0, $24 = Math_fround(0), $25_1 = Math_fround(0), $26_1 = 0, $27_1 = Math_fround(0), $28_1 = Math_fround(0), $29_1 = Math_fround(0), wasm2js_f32$0 = Math_fround(0), wasm2js_f32$1 = Math_fround(0), wasm2js_i32$0 = 0;
  $23_1 = global$0 - 16 | 0;
  global$0 = $23_1;
  $19 = $6_1 & 1048576;
  $12_1 = ($19 >>> 18 | 0) + $0_1 | 0;
  $28_1 = $1963($12_1 + 8 | 0, 0);
  $9 = $1963($12_1, 0);
  $24 = Math_fround(Math_fround($28_1 - $9) + Math_fround(-4.0));
  $13 = $1944(0, 73568);
  $10_1 = $1963($13 + 5540 | 0, 0);
  $20_1 = $4_1 - $3 | 0;
  $26_1 = $3 >>> 0 < $4_1 >>> 0;
  $12_1 = $26_1 ? $20_1 : $3 - $4_1 | 0;
  if (($12_1 | 0) >= 0) {
   $8 = Math_fround($24 / Math_fround($12_1 + 1 | 0));
   $10_1 = $8 >= $10_1 ? $8 : $10_1;
  }
  $25_1 = $10_1 < $24 ? $10_1 : $24;
  $29_1 = Math_fround($25_1 * Math_fround(.5));
  $21_1 = $6_1 & 32;
  if ($21_1) {
   $11_1 = $1669(Math_fround(.10000000149011612), Math_fround(1.0))
  }
  $27_1 = Math_fround($29_1 + Math_fround($9 + Math_fround(2.0)));
  $16_1 = 0;
  label$6 : {
   if (($1944($13, 7136) | 0) != ($1_1 | 0)) {
    break label$6
   }
   $10_1 = Math_fround(0.0);
   label$7 : {
    label$8 : {
     switch ($1944($13, 7188) - 1 | 0) {
     case 0:
      if (!$1937($13 + 236 | 0, 0)) {
       $86();
       break label$7;
      }
      $8 = Math_fround($24 - $25_1);
      if ($8 > Math_fround(0.0)) {
       $8 = Math_fround(Math_fround($1963(($13 + ($19 >>> 20 << 2) | 0) + 228 | 0, 0) - $27_1) / $8);
       $10_1 = $8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8;
      }
      $10_1 = $19 ? Math_fround(Math_fround(1.0) - $10_1) : $10_1;
      $18_1 = 1;
      break label$7;
     case 3:
      break label$8;
     default:
      break label$7;
     };
    }
    if ($1937($13, 7148)) {
     $1968($13, 12056, 0);
     $1973($13, 12052, 0);
    }
    $154($23_1 + 8 | 0, 6, 5, Math_fround(0.0), Math_fround(0.0));
    $8 = (wasm2js_f32$0 = Math_fround(-$1963($23_1, 12)), wasm2js_f32$1 = $1963($23_1, 8), wasm2js_i32$0 = $19, wasm2js_i32$0 ? wasm2js_f32$0 : wasm2js_f32$1);
    if ($8 != Math_fround(0.0)) {
     label$15 : {
      label$18 : {
       if ($12_1 + 100 >>> 0 >= 201) {
        if (!($1963($1944(0, 73568) + 824 | 0, 0) > Math_fround(0.0))) {
         break label$18
        }
       }
       $10_1 = Math_fround(($8 < Math_fround(0.0) ? Math_fround(-1.0) : Math_fround(1.0)) / Math_fround($12_1 | 0));
       break label$15;
      }
      $10_1 = Math_fround($8 / Math_fround(100.0));
     }
     $8 = $1963($1944(0, 73568) + 828 | 0, 0);
     $1968($13, 12056, 1);
     $1986($13, 12052, Math_fround($1963($13, 12052) + ($8 > Math_fround(0.0) ? Math_fround($10_1 * Math_fround(10.0)) : $10_1)));
    }
    $17_1 = $1963($13, 12052);
    label$20 : {
     label$21 : {
      if (($1944($13, 7528) | 0) != ($1_1 | 0)) {
       break label$21
      }
      if ($1937($13, 7148)) {
       break label$21
      }
      $86();
      $10_1 = Math_fround(0.0);
      $1_1 = 0;
      break label$20;
     }
     if (!$1937($13, 12056)) {
      $10_1 = Math_fround(0.0);
      $1_1 = 0;
      break label$20;
     }
     $16_1 = ($3 | 0) == ($4_1 | 0);
     $10_1 = Math_fround(0.0);
     label$23 : {
      if ($16_1) {
       break label$23
      }
      $12_1 = $26_1 ? $3 : $4_1;
      $18_1 = $1944($2_1, 0);
      $1_1 = $3 >>> 0 > $4_1 >>> 0 ? $3 : $4_1;
      $12_1 = $12_1 >>> 0 > $18_1 >>> 0 ? $12_1 : $1_1 >>> 0 > $18_1 >>> 0 ? $18_1 : $1_1;
      if ($21_1) {
       $1_1 = $3 >>> 0 > $4_1 >>> 0;
       $8 = Math_fround(($1_1 ? $4_1 : $3) >>> 0);
       $9 = $8 < $11_1 ? $11_1 : $8;
       $10_1 = Math_fround($12_1 >>> 0);
       $14 = Math_fround(0.0);
       label$25 : {
        if ($9 >= $10_1) {
         break label$25
        }
        $8 = Math_fround(($3 >>> 0 < $4_1 >>> 0 ? $4_1 : $3) >>> 0);
        $8 = $8 < $11_1 ? $11_1 : $8;
        $14 = Math_fround(1.0);
        if ($8 <= $10_1) {
         break label$25
        }
        $14 = Math_fround($1642(Math_fround($10_1 / $9)) / $1642(Math_fround($8 / $9)));
       }
       $8 = $14;
       $10_1 = $1_1 ? Math_fround(Math_fround(1.0) - $8) : $8;
       break label$23;
      }
      $10_1 = Math_fround(Math_fround($12_1 - $3 | 0) / Math_fround($20_1 | 0));
     }
     label$26 : {
      if (!(!(!($10_1 >= Math_fround(1.0)) | !($17_1 > Math_fround(0.0))) | !(!($10_1 <= Math_fround(0.0)) | !($17_1 < Math_fround(0.0))))) {
       $8 = Math_fround($17_1 + $10_1);
       $8 = $8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8;
       $1_1 = $3;
       label$30 : {
        if ($16_1) {
         break label$30
        }
        if ($21_1) {
         $1_1 = $3;
         if ($8 <= Math_fround(0.0)) {
          break label$30
         }
         $1_1 = $4_1;
         if ($8 >= Math_fround(1.0)) {
          break label$30
         }
         $9 = Math_fround($4_1 >>> 0);
         $22_1 = $9 < $11_1 ? $11_1 : $9;
         $9 = Math_fround($3 >>> 0);
         $15_1 = $9 < $11_1 ? $11_1 : $9;
         $1_1 = $3 >>> 0 > $4_1 >>> 0;
         $9 = $1_1 ? $22_1 : $15_1;
         $9 = Math_fround($9 * $1669(Math_fround(($1_1 ? $15_1 : $22_1) / $9), $1_1 ? Math_fround(Math_fround(1.0) - $8) : $8));
         if ($9 < Math_fround(4294967296.0) & $9 >= Math_fround(0.0)) {
          $1_1 = ~~$9 >>> 0;
          break label$30;
         }
         $1_1 = 0;
         break label$30;
        }
        $1_1 = $4_1;
        if (!($8 < Math_fround(1.0))) {
         break label$30
        }
        $9 = Math_fround(($3 >>> 0 > $4_1 >>> 0 ? Math_fround(-.5) : Math_fround(.5)) + Math_fround($8 * Math_fround($20_1 | 0)));
        label$35 : {
         if (Math_fround(Math_abs($9)) < Math_fround(2147483648.0)) {
          $1_1 = ~~$9;
          break label$35;
         }
         $1_1 = -2147483648;
        }
        $1_1 = $1_1 + $3 | 0;
       }
       if (!($6_1 & 64)) {
        $1_1 = $618($5_1, $1_1)
       }
       $9 = Math_fround(0.0);
       label$39 : {
        if ($16_1) {
         break label$39
        }
        $18_1 = $26_1 ? $3 : $4_1;
        $12_1 = $3 >>> 0 > $4_1 >>> 0 ? $3 : $4_1;
        $12_1 = $1_1 >>> 0 < $18_1 >>> 0 ? $18_1 : $1_1 >>> 0 < $12_1 >>> 0 ? $1_1 : $12_1;
        if ($21_1) {
         $1_1 = $3 >>> 0 > $4_1 >>> 0;
         $9 = Math_fround(($1_1 ? $4_1 : $3) >>> 0);
         $22_1 = $9 < $11_1 ? $11_1 : $9;
         $15_1 = Math_fround($12_1 >>> 0);
         $14 = Math_fround(0.0);
         label$41 : {
          if ($22_1 >= $15_1) {
           break label$41
          }
          $9 = Math_fround(($3 >>> 0 < $4_1 >>> 0 ? $4_1 : $3) >>> 0);
          $9 = $9 < $11_1 ? $11_1 : $9;
          $14 = Math_fround(1.0);
          if ($9 <= $15_1) {
           break label$41
          }
          $14 = Math_fround($1642(Math_fround($15_1 / $22_1)) / $1642(Math_fround($9 / $22_1)));
         }
         $9 = $14;
         $9 = $1_1 ? Math_fround(Math_fround(1.0) - $9) : $9;
         break label$39;
        }
        $9 = Math_fround(Math_fround($12_1 - $3 | 0) / Math_fround($20_1 | 0));
       }
       $9 = Math_fround($9 - $10_1);
       $10_1 = $1963($13, 12052);
       if ($17_1 > Math_fround(0.0)) {
        $9 = Math_fround($10_1 - ($9 < $17_1 ? $9 : $17_1));
        $10_1 = $8;
        $1_1 = 1;
        break label$26;
       }
       $9 = Math_fround($10_1 - ($9 >= $17_1 ? $9 : $17_1));
       $10_1 = $8;
       $1_1 = 1;
       break label$26;
      }
      $9 = Math_fround(0.0);
      $1_1 = 0;
     }
     $1968($13, 12056, 0);
     $1986($13, 12052, $9);
    }
    $18_1 = $1_1;
   }
   $16_1 = 0;
   if (!$18_1) {
    break label$6
   }
   $1_1 = $3;
   label$43 : {
    if (($3 | 0) == ($4_1 | 0)) {
     break label$43
    }
    if ($21_1) {
     $1_1 = $3;
     if ($10_1 <= Math_fround(0.0)) {
      break label$43
     }
     $1_1 = $4_1;
     if ($10_1 >= Math_fround(1.0)) {
      break label$43
     }
     $8 = Math_fround($4_1 >>> 0);
     $15_1 = $8 < $11_1 ? $11_1 : $8;
     $8 = Math_fround($3 >>> 0);
     $9 = $8 < $11_1 ? $11_1 : $8;
     $1_1 = $3 >>> 0 > $4_1 >>> 0;
     $8 = $1_1 ? $15_1 : $9;
     $8 = Math_fround($8 * $1669(Math_fround(($1_1 ? $9 : $15_1) / $8), $1_1 ? Math_fround(Math_fround(1.0) - $10_1) : $10_1));
     if ($8 < Math_fround(4294967296.0) & $8 >= Math_fround(0.0)) {
      $1_1 = ~~$8 >>> 0;
      break label$43;
     }
     $1_1 = 0;
     break label$43;
    }
    $1_1 = $4_1;
    if (!($10_1 < Math_fround(1.0))) {
     break label$43
    }
    $8 = Math_fround(($3 >>> 0 > $4_1 >>> 0 ? Math_fround(-.5) : Math_fround(.5)) + Math_fround($10_1 * Math_fround($20_1 | 0)));
    label$48 : {
     if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
      $1_1 = ~~$8;
      break label$48;
     }
     $1_1 = -2147483648;
    }
    $1_1 = $1_1 + $3 | 0;
   }
   if (!($6_1 & 64)) {
    $1_1 = $618($5_1, $1_1)
   }
   $5_1 = $1944($2_1, 0);
   if (($1_1 | 0) == ($5_1 | 0)) {
    $16_1 = ($1_1 | 0) != ($5_1 | 0);
    break label$6;
   }
   $1973($2_1, 0, $1_1);
   $16_1 = 1;
  }
  $6_1 = $16_1;
  label$53 : {
   if ($24 < Math_fround(1.0)) {
    $1_1 = $1959($0_1, 0);
    $0_1 = i64toi32_i32$HIGH_BITS;
    $1982($7_1, 8, $1_1, $0_1);
    $1982($7_1, 0, $1_1, $0_1);
    break label$53;
   }
   $15_1 = Math_fround(-$25_1);
   $17_1 = Math_fround(Math_fround(Math_fround($28_1 + Math_fround(-2.0)) - $29_1) - $27_1);
   $8 = Math_fround(0.0);
   label$55 : {
    if (($3 | 0) == ($4_1 | 0)) {
     break label$55
    }
    $5_1 = $26_1 ? $3 : $4_1;
    $2_1 = $1944($2_1, 0);
    $1_1 = $3 >>> 0 > $4_1 >>> 0 ? $3 : $4_1;
    $2_1 = $2_1 >>> 0 < $5_1 >>> 0 ? $5_1 : $1_1 >>> 0 > $2_1 >>> 0 ? $2_1 : $1_1;
    if ($21_1) {
     $1_1 = $3 >>> 0 > $4_1 >>> 0;
     $8 = Math_fround(($1_1 ? $4_1 : $3) >>> 0);
     $9 = $8 < $11_1 ? $11_1 : $8;
     $10_1 = Math_fround($2_1 >>> 0);
     $14 = Math_fround(0.0);
     label$57 : {
      if ($9 >= $10_1) {
       break label$57
      }
      $8 = Math_fround(($3 >>> 0 < $4_1 >>> 0 ? $4_1 : $3) >>> 0);
      $8 = $8 < $11_1 ? $11_1 : $8;
      $14 = Math_fround(1.0);
      if ($8 <= $10_1) {
       break label$57
      }
      $14 = Math_fround($1642(Math_fround($10_1 / $9)) / $1642(Math_fround($8 / $9)));
     }
     $8 = $14;
     $8 = $1_1 ? Math_fround(Math_fround(1.0) - $8) : $8;
     break label$55;
    }
    $8 = Math_fround(Math_fround($2_1 - $3 | 0) / Math_fround($20_1 | 0));
   }
   $9 = Math_fround(Math_fround($17_1 * ($19 ? Math_fround(Math_fround(1.0) - $8) : $8)) + $27_1);
   if (!$19) {
    $10_1 = $1963($0_1 + 12 | 0, 0);
    $8 = $1963($0_1, 4);
    $1986($7_1, 8, Math_fround(Math_fround($25_1 * Math_fround(.5)) + $9));
    $1986($7_1, 4, Math_fround($8 + Math_fround(2.0)));
    $1986($7_1, 0, Math_fround(Math_fround($15_1 * Math_fround(.5)) + $9));
    $1986($7_1, 12, Math_fround($10_1 + Math_fround(-2.0)));
    break label$53;
   }
   $10_1 = $1963($0_1, 0);
   $8 = $1963($0_1, 8);
   $1986($7_1, 12, Math_fround(Math_fround($25_1 * Math_fround(.5)) + $9));
   $1986($7_1, 8, Math_fround($8 + Math_fround(-2.0)));
   $1986($7_1, 4, Math_fround(Math_fround($15_1 * Math_fround(.5)) + $9));
   $1986($7_1, 0, Math_fround($10_1 + Math_fround(2.0)));
  }
  global$0 = $23_1 + 16 | 0;
  return $6_1;
 }
 
 function $652($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = Math_fround(0), $16_1 = 0, $17_1 = Math_fround(0), $18_1 = Math_fround(0), $19 = 0;
  $7_1 = global$0 - 192 | 0;
  global$0 = $7_1;
  $9 = $1944(0, 73568);
  $13 = $1944($9, 7080);
  $1968($13, 140, 1);
  if (!$1937($13, 143)) {
   $10_1 = $76($13, $0_1);
   $17_1 = $292();
   $68($7_1 + 184 | 0, $0_1, 0, 1, Math_fround(-1.0));
   $18_1 = $1963($13, 208);
   $8 = $1959($13, 208);
   $14 = i64toi32_i32$HIGH_BITS;
   $11_1 = $7_1 + 180 | 0;
   $15_1 = $1963($9 + 5480 | 0, 0);
   $1986($11_1, 0, Math_fround(Math_fround(Math_fround($15_1 + $15_1) + $1963($7_1, 188)) + $1963($13 + 212 | 0, 0)));
   $1983($7_1, 168, $8, $14);
   $1986($7_1, 176, Math_fround($17_1 + $18_1));
   $17_1 = Math_fround(0.0);
   $18_1 = $1963($7_1, 184);
   if ($18_1 > Math_fround(0.0)) {
    $17_1 = Math_fround($18_1 + $1963($9 + 5500 | 0, 0))
   }
   $12_1 = $7_1 + 152 | 0;
   $1986($12_1 + 12 | 0, 0, Math_fround($1963($11_1, 0) + Math_fround(0.0)));
   $1983($7_1, 152, $8, $14);
   $1986($7_1, 160, Math_fround($17_1 + $1963($7_1, 176)));
   $277($12_1, $15_1);
   $8 = 0;
   $11_1 = $12_1;
   $12_1 = $6_1 & 128;
   label$3 : {
    if (!$213($11_1, $10_1, $7_1 + 168 | 0, $12_1 << 1 ^ 256)) {
     break label$3
    }
    label$4 : {
     if (!$5_1) {
      $5_1 = $1944(($1_1 << 4) + 48168 | 0, 0);
      break label$4;
     }
     label$6 : {
      if (($1_1 | 0) != 4) {
       break label$6
      }
      if (!$1695($5_1, 13404)) {
       break label$6
      }
      label$7 : {
       if (($1937($5_1, 0) | 0) != 37) {
        break label$7
       }
       if (($1937($5_1, 1) | 0) != 46) {
        break label$7
       }
       if (($1937($5_1, 2) | 0) != 48) {
        break label$7
       }
       if (($1937($5_1, 3) | 0) != 102) {
        break label$7
       }
       if ($1937($5_1, 4)) {
        break label$7
       }
       $5_1 = 13404;
       break label$4;
      }
      $8 = $5_1;
      while (1) {
       label$9 : {
        label$10 : {
         $14 = $1937($8, 0);
         if (!$14) {
          break label$10
         }
         if (($14 | 0) == 37) {
          if (($1937($8, 1) | 0) != 37) {
           break label$10
          }
         }
         $8 = ((($14 | 0) == 37) + $8 | 0) + 1 | 0;
         $11_1 = 1;
         break label$9;
        }
        $11_1 = 0;
       }
       if ($11_1) {
        continue
       }
       break;
      };
     }
    }
    $14 = $5_1;
    $16_1 = $91($7_1 + 168 | 0, $10_1);
    label$13 : {
     $8 = 0;
     label$12 : {
      if ($12_1) {
       break label$12
      }
      $5_1 = $1944(0, 73568);
      $8 = 0;
      if (($1944($5_1, 7136) | 0) != ($10_1 | 0)) {
       break label$12
      }
      $8 = ($1944($5_1, 11968) | 0) == ($10_1 | 0);
     }
     label$14 : {
      if ($8) {
       break label$14
      }
      $5_1 = 0;
      if ($12_1) {
       $11_1 = $5_1
      } else {
       $11_1 = $1937($9 + 7249 | 0, 0) & 1
      }
      if ($16_1) {
       $5_1 = ($1937($9 + 992 | 0, 0) | 0) != 0
      }
      label$17 : {
       label$18 : {
        if ($5_1 | $11_1) {
         break label$18
        }
        if (($1944($9, 7520) | 0) == ($10_1 | 0)) {
         break label$18
        }
        if (($1944($9, 7532) | 0) != ($10_1 | 0)) {
         break label$17
        }
       }
       $85($10_1, $13);
       $330($10_1, $13);
       $125($13);
       $1973($9, 7156, $1944($9, 7156) | 3);
       if ($12_1) {
        break label$17
       }
       if ($11_1) {
        break label$14
       }
       if ($5_1) {
        if ($1937($9 + 252 | 0, 0)) {
         break label$14
        }
       }
       if (($1944($9, 7532) | 0) == ($10_1 | 0) | $8) {
        break label$14
       }
       break label$13;
      }
      if (!$8) {
       break label$13
      }
     }
     $5_1 = $0_1;
     $0_1 = $6_1 << 27 >> 31;
     $8 = $631($7_1 + 168 | 0, $10_1, $5_1, $1_1, $2_1, $14, $0_1 & $3, $0_1 & $4_1);
     break label$3;
    }
    $11_1 = $51(($1944($9, 7136) | 0) == ($10_1 | 0) ? 9 : $16_1 ? 8 : 7, Math_fround(1.0));
    $19 = $7_1 + 168 | 0;
    $73($19, $10_1, 1);
    $5_1 = $1960($7_1, 168);
    $12_1 = i64toi32_i32$HIGH_BITS;
    $1983($7_1, 144, $5_1, $12_1);
    $8 = $1960($7_1, 176);
    $16_1 = i64toi32_i32$HIGH_BITS;
    $1983($7_1, 136, $8, $16_1);
    $15_1 = $1963($9 + 5484 | 0, 0);
    $1983($7_1, 24, $5_1, $12_1);
    $1983($7_1, 16, $8, $16_1);
    $71($7_1 + 24 | 0, $7_1 + 16 | 0, $11_1, 1, $15_1);
    $8 = $7_1 + 120 | 0;
    $5_1 = $8 + 8 | 0;
    $1983($5_1, 0, 0, 0);
    $1983($7_1, 120, 0, 0);
    $8 = $645($19, $10_1, $1_1, $2_1, $3, $4_1, $14, $6_1, $8);
    if ($8) {
     $88($10_1)
    }
    if ($1963($7_1, 128) > $1963($7_1, 120)) {
     $401($1944($13, 580), $7_1 + 120 | 0, $5_1, $51(($1944($9, 7136) | 0) == ($10_1 | 0) ? 20 : 19, Math_fround(1.0)), $1963($9 + 5544 | 0, 0), 0)
    }
    $3 = $7_1 + 176 | 0;
    $4_1 = $7_1 + 48 | 0;
    $1_1 = $4_1 + $603($4_1, 64, $1_1, $2_1, $14) | 0;
    if ($1937($9, 12196)) {
     $341(1061, 1056)
    }
    $1982($7_1, 40, 1056964608, 1056964608);
    $69($7_1 + 168 | 0, $3, $7_1 + 48 | 0, $1_1, 0, $7_1 + 40 | 0, 0);
    if ($1963($7_1, 184) > Math_fround(0.0)) {
     $15_1 = $1963($9 + 5500 | 0, 0);
     $1986($7_1, 36, Math_fround($1963($7_1, 172) + $1963($9, 5480)));
     $1986($7_1, 32, Math_fround($15_1 + $1963($7_1, 176)));
     $1983($7_1, 8, $1959($7_1, 32), i64toi32_i32$HIGH_BITS);
     $63($7_1 + 8 | 0, $0_1, 0, 1);
    }
   }
  }
  global$0 = $7_1 + 192 | 0;
  return $8;
 }
 
 function $653($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  var $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0;
  $11_1 = $1944(0, 73568);
  $8 = $1944($11_1, 7080);
  $1968($8, 140, 1);
  if (!$1937($8, 143)) {
   $301();
   $153($0_1);
   $290($3, $292());
   $8 = 0;
   if (($3 | 0) > 0) {
    $12_1 = $1944(($1_1 << 4) + 48160 | 0, 0);
    $9 = $2_1;
    $2_1 = 0;
    while (1) {
     $266($10_1);
     if ($10_1) {
      $276(Math_fround(0.0), $1963($11_1, 5500))
     }
     $8 = $652(19354, $1_1, $9, $4_1, $5_1, $6_1, $7_1);
     $269();
     $291();
     $2_1 = $2_1 | $8;
     $8 = $2_1;
     $9 = $9 + $12_1 | 0;
     $10_1 = $10_1 + 1 | 0;
     if (($10_1 | 0) != ($3 | 0)) {
      continue
     }
     break;
    };
   }
   $9 = $8;
   $269();
   $1_1 = $62($0_1);
   if (($0_1 | 0) != ($1_1 | 0)) {
    $276(Math_fround(0.0), $1963($11_1 + 5500 | 0, 0));
    $555($0_1, $1_1, 0);
   }
   $275();
  }
  return $9 & 1;
 }
 
 function $659($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $1973($6_1, 8, $3);
  $1973($6_1, 12, $2_1);
  $0_1 = $652($0_1, 4, $1_1, $6_1 + 12 | 0, $6_1 + 8 | 0, $4_1, $5_1);
  global$0 = $6_1 + 16 | 0;
  return $0_1;
 }
 
 function $663($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  var $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = Math_fround(0), $14 = 0, $15_1 = Math_fround(0), $16_1 = 0, $17_1 = 0, $18_1 = 0;
  $8 = global$0 - 192 | 0;
  global$0 = $8;
  $9 = $1944(0, 73568);
  $12_1 = $1944($9, 7080);
  $1968($12_1, 140, 1);
  if (!$1937($12_1, 143)) {
   $11_1 = $76($12_1, $0_1);
   $68($8 + 184 | 0, $0_1, 0, 1, Math_fround(-1.0));
   $13 = $1963($1_1, 0);
   $15_1 = $1963($12_1, 208);
   $10_1 = $1959($12_1, 208);
   $16_1 = i64toi32_i32$HIGH_BITS;
   $14 = $8 + 180 | 0;
   $1986($14, 0, Math_fround($1963($12_1 + 212 | 0, 0) + $1963($1_1, 4)));
   $1983($8, 168, $10_1, $16_1);
   $1986($8, 176, Math_fround($15_1 + $13));
   $13 = Math_fround(0.0);
   $15_1 = $1963($8, 184);
   if ($15_1 > Math_fround(0.0)) {
    $13 = Math_fround($15_1 + $1963($9 + 5500 | 0, 0))
   }
   $1_1 = $8 + 152 | 0;
   $1986($1_1 + 12 | 0, 0, Math_fround($1963($14, 0) + Math_fround(0.0)));
   $1983($8, 152, $10_1, $16_1);
   $1986($8, 160, Math_fround($13 + $1963($8, 176)));
   $277($1_1, $1963($9 + 5480 | 0, 0));
   $10_1 = 0;
   if ($213($8 + 168 | 0, $11_1, 0, 0)) {
    label$4 : {
     if (!$6_1) {
      $6_1 = $1944(($2_1 << 4) + 48168 | 0, 0);
      break label$4;
     }
     label$6 : {
      if (($2_1 | 0) != 4) {
       break label$6
      }
      if (!$1695($6_1, 13404)) {
       break label$6
      }
      label$7 : {
       if (($1937($6_1, 0) | 0) != 37) {
        break label$7
       }
       if (($1937($6_1, 1) | 0) != 46) {
        break label$7
       }
       if (($1937($6_1, 2) | 0) != 48) {
        break label$7
       }
       if (($1937($6_1, 3) | 0) != 102) {
        break label$7
       }
       if ($1937($6_1, 4)) {
        break label$7
       }
       $6_1 = 13404;
       break label$4;
      }
      $10_1 = $6_1;
      while (1) {
       label$9 : {
        label$10 : {
         $1_1 = $1937($10_1, 0);
         if (!$1_1) {
          break label$10
         }
         if (($1_1 | 0) == 37) {
          if (($1937($10_1, 1) | 0) != 37) {
           break label$10
          }
         }
         $10_1 = ((($1_1 | 0) == 37) + $10_1 | 0) + 1 | 0;
         $1_1 = 1;
         break label$9;
        }
        $1_1 = 0;
       }
       if ($1_1) {
        continue
       }
       break;
      };
     }
    }
    $10_1 = $6_1;
    $1_1 = $91($8 + 168 | 0, $11_1);
    label$12 : {
     label$13 : {
      if ($1_1) {
       if ($1937($9 + 992 | 0, 0)) {
        break label$13
       }
      }
      if (($1944($9, 7520) | 0) == ($11_1 | 0)) {
       break label$13
      }
      if (($1944($9, 7532) | 0) != ($11_1 | 0)) {
       break label$12
      }
     }
     $85($11_1, $12_1);
     $330($11_1, $12_1);
     $125($12_1);
     $1973($9, 7156, $1944($9, 7156) | 12);
    }
    $16_1 = $51(($1944($9, 7136) | 0) == ($11_1 | 0) ? 9 : $1_1 ? 8 : 7, Math_fround(1.0));
    $17_1 = $8 + 168 | 0;
    $73($17_1, $11_1, 1);
    $1_1 = $1960($8, 168);
    $14 = i64toi32_i32$HIGH_BITS;
    $1983($8, 144, $1_1, $14);
    $6_1 = $1960($8, 176);
    $18_1 = i64toi32_i32$HIGH_BITS;
    $1983($8, 136, $6_1, $18_1);
    $13 = $1963($9 + 5484 | 0, 0);
    $1983($8, 16, $1_1, $14);
    $1983($8, 8, $6_1, $18_1);
    $71($8 + 16 | 0, $8 + 8 | 0, $16_1, 1, $13);
    $1_1 = $8 + 120 | 0;
    $1983($1_1 + 8 | 0, 0, 0, 0);
    $1983($8, 120, 0, 0);
    $1_1 = $645($17_1, $11_1, $2_1, $3, $4_1, $5_1, $10_1, $7_1 | 1048576, $1_1);
    if ($1_1) {
     $88($11_1)
    }
    $4_1 = $8 + 176 | 0;
    if ($1963($8 + 132 | 0, 0) > $1963($8, 124)) {
     $401($1944($12_1, 580), $8 + 120 | 0, $8 + 128 | 0, $51(($1944($9, 7136) | 0) == ($11_1 | 0) ? 20 : 19, Math_fround(1.0)), $1963($9 + 5544 | 0, 0), 0)
    }
    $5_1 = $8 + 48 | 0;
    $2_1 = $603($5_1, 64, $2_1, $3, $10_1);
    $13 = $1963($9, 5480);
    $1986($8, 40, $1963($8, 168));
    $1986($8, 44, Math_fround($13 + $1963($8, 172)));
    $1982($8, 32, 1056964608, 0);
    $69($8 + 40 | 0, $4_1, $5_1, $2_1 + $5_1 | 0, 0, $8 + 32 | 0, 0);
    if ($1963($8, 184) > Math_fround(0.0)) {
     $13 = $1963($9 + 5500 | 0, 0);
     $1986($8, 28, Math_fround($1963($8, 172) + $1963($9, 5480)));
     $1986($8, 24, Math_fround($13 + $1963($8, 176)));
     $1983($8, 0, $1959($8, 24), i64toi32_i32$HIGH_BITS);
     $63($8, $0_1, 0, 1);
    }
    $10_1 = $1_1;
   }
  }
  global$0 = $8 + 192 | 0;
  return $10_1;
 }
 
 function $666($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0;
  label$1 : {
   if (!$1937($1_1, 23)) {
    break label$1
   }
   $4_1 = $1944($0_1 + 20 | 0, 0);
   $6_1 = $4_1 + ($1944($0_1, 4) << 1) | 0;
   while (1) {
    $5_1 = $4_1;
    if ($6_1 >>> 0 <= $5_1 >>> 0) {
     $3 = Math_fround(0.0);
     break label$1;
    }
    $4_1 = $5_1 + 2 | 0;
    $3 = Math_fround(0.0);
    if (($1941($5_1, 0) | 0) != 10) {
     continue
    }
    break;
   };
  }
  $0_1 = $696($0_1, $2_1, $3);
  $1968($1_1, 22, 0);
  $1973($1_1, 8, $0_1);
  $1973($1_1, 4, $0_1);
  $1973($1_1, 0, $0_1);
 }
 
 function $667($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = Math_fround(0), $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = 0, $21_1 = Math_fround(0), $22_1 = 0, $23_1 = 0, $24 = 0, $25_1 = 0, $26_1 = Math_fround(0), $27_1 = 0, $28_1 = Math_fround(0), $29_1 = 0, $30 = 0, $31_1 = 0, $32_1 = 0, $33_1 = Math_fround(0), $34_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_f32$0 = Math_fround(0), wasm2js_f32$1 = Math_fround(0);
  $14 = global$0 - 32 | 0;
  global$0 = $14;
  $23_1 = $1944($0_1 + 20 | 0, 0);
  $9 = $1944($0_1, 4);
  $29_1 = $23_1 + ($9 << 1) | 0;
  $4_1 = $0_1 + 60 | 0;
  $30 = $1944($0_1 + 76 | 0, 0);
  $27_1 = $1944(0, 73568);
  $2_1 = $1937($0_1 + 83 | 0, 0);
  $31_1 = $2_1;
  $32_1 = ($2_1 | 0) != 0;
  $13 = $1963($0_1 + 88 | 0, 0);
  $11_1 = $0_1 + 82 | 0;
  $10_1 = $1937($11_1, 0);
  $5_1 = $1944($0_1, 60);
  $6_1 = $0_1 + 68 | 0;
  $2_1 = $1944($6_1, 0);
  $7_1 = $0_1 - -64 | 0;
  $3 = $1944($7_1, 0);
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           label$10 : {
            label$11 : {
             label$12 : {
              label$13 : {
               label$14 : {
                label$15 : {
                 label$16 : {
                  label$17 : {
                   label$18 : {
                    while (1) {
                     label$19 : {
                      label$21 : {
                       label$22 : {
                        label$23 : {
                         label$24 : {
                          label$25 : {
                           label$26 : {
                            label$27 : {
                             label$28 : {
                              label$29 : {
                               label$30 : {
                                label$31 : {
                                 label$32 : {
                                  label$33 : {
                                   $18_1 = $1_1;
                                   switch ($1_1 - 2097152 | 0) {
                                   case 5:
                                    break label$12;
                                   case 4:
                                    break label$13;
                                   case 7:
                                    break label$16;
                                   case 6:
                                    break label$17;
                                   case 9:
                                    break label$18;
                                   case 8:
                                    break label$19;
                                   case 2:
                                   case 14:
                                    break label$21;
                                   case 3:
                                   case 15:
                                    break label$22;
                                   case 13:
                                    break label$25;
                                   case 12:
                                    break label$27;
                                   case 1:
                                    break label$29;
                                   case 0:
                                    break label$30;
                                   case 11:
                                    break label$31;
                                   case 10:
                                    break label$32;
                                   default:
                                    break label$33;
                                   };
                                  }
                                  label$34 : {
                                   switch ($18_1 - 6291456 | 0) {
                                   case 5:
                                    break label$10;
                                   case 4:
                                    break label$11;
                                   case 7:
                                    break label$14;
                                   case 6:
                                    break label$15;
                                   case 9:
                                    break label$18;
                                   case 8:
                                    break label$19;
                                   case 2:
                                   case 14:
                                    break label$21;
                                   case 3:
                                   case 15:
                                    break label$22;
                                   case 1:
                                    break label$23;
                                   case 13:
                                    break label$24;
                                   case 12:
                                    break label$26;
                                   case 0:
                                    break label$28;
                                   default:
                                    break label$34;
                                   };
                                  }
                                  $1_1 = ($18_1 | 0) <= 2097151 ? $18_1 : 0;
                                  if (($1_1 | 0) <= 0) {
                                   break label$1
                                  }
                                  $1970($14, 8, $1_1);
                                  if (($1_1 | 0) == 10) {
                                   if ($1937($0_1, 83) & 255) {
                                    break label$1
                                   }
                                  }
                                  label$36 : {
                                   label$37 : {
                                    if (!$1937($0_1 + 72 | 0, 0)) {
                                     break label$37
                                    }
                                    if (($1944($7_1, 0) | 0) != ($1944($6_1, 0) | 0)) {
                                     break label$37
                                    }
                                    $1_1 = $1944($0_1, 60);
                                    if (($1944($0_1, 4) | 0) <= ($1_1 | 0)) {
                                     break label$37
                                    }
                                    $2_1 = $675($0_1 + 92 | 0, $1_1, 1, 1);
                                    if ($2_1) {
                                     $1970($2_1, 0, $1941($1944($0_1, 20) + ($1_1 << 1) | 0, 0))
                                    }
                                    $1968($0_1, 3694, 1);
                                    $2_1 = $1944($0_1, 20);
                                    $1_1 = $1944($0_1, 60) << 1;
                                    $2_1 = $2_1 + $1_1 | 0;
                                    $3 = $28($2_1, $2_1 + 2 | 0);
                                    $1973($0_1, 8, $1944($0_1, 8) - $3 | 0);
                                    $1973($0_1, 4, $1944($0_1, 4) - 1 | 0);
                                    $3 = $1944($0_1, 20) + $1_1 | 0;
                                    while (1) {
                                     $1_1 = $1941($3, 2);
                                     if ($1_1) {
                                      $1970($2_1, 0, $1_1);
                                      $2_1 = $2_1 + 2 | 0;
                                     }
                                     $3 = $3 + 2 | 0;
                                     if ($1_1) {
                                      continue
                                     }
                                     break;
                                    };
                                    $1970($2_1, 0, 0);
                                    if ($676($0_1, $1944($0_1, 60), $14 + 8 | 0, 1)) {
                                     break label$36
                                    }
                                    break label$1;
                                   }
                                   $672($0_1, $4_1);
                                   if (!$676($0_1, $1944($0_1, 60), $14 + 8 | 0, 1)) {
                                    break label$1
                                   }
                                   $675($0_1 + 92 | 0, $1944($0_1, 60), 0, 1);
                                  }
                                  $1973($4_1, 0, $1944($4_1, 0) + 1 | 0);
                                  $1968($11_1, 0, 0);
                                  break label$1;
                                 }
                                 $1_1 = $1939($0_1 + 3674 | 0, 0);
                                 label$42 : {
                                  if (!$1_1) {
                                   break label$42
                                  }
                                  $8 = $0_1 + 92 | 0;
                                  $3 = ($8 + ($1_1 << 4) | 0) - 16 | 0;
                                  $15_1 = $1944($3, 12);
                                  $10_1 = $1944($3, 0);
                                  $5_1 = $1944($3, 8);
                                  $2_1 = $1939($0_1 + 3676 | 0, 0);
                                  $1_1 = ($8 + ($2_1 << 4) | 0) - 16 | 0;
                                  $9 = $1944($3, 4);
                                  $1973($1_1, 8, $9);
                                  $1973($1_1, 4, $5_1);
                                  $1973($1_1, 12, -1);
                                  $1973($1_1, 0, $10_1);
                                  if ($5_1) {
                                   label$44 : {
                                    label$45 : {
                                     label$46 : {
                                      $3 = $1944($0_1 + 3680 | 0, 0) + $5_1 | 0;
                                      if (($3 | 0) <= 998) {
                                       $1_1 = $1944($0_1 + 3684 | 0, 0);
                                       if (($3 | 0) <= ($1_1 | 0)) {
                                        $3 = ($1_1 | 0) < ($3 | 0);
                                        break label$45;
                                       }
                                       if (($2_1 | 0) == 99) {
                                        break label$42
                                       }
                                       $12_1 = $0_1 + 1676 | 0;
                                       break label$46;
                                      }
                                      $1973($1_1 + 4 | 0, 0, 0);
                                      break label$44;
                                     }
                                     while (1) {
                                      if ($2_1 << 16 >> 16 <= 98) {
                                       label$51 : {
                                        if (($1944($0_1, 1672) | 0) < 0) {
                                         break label$51
                                        }
                                        $1_1 = $1944($0_1, 3684);
                                        $3 = $1944($0_1, 1664);
                                        $2_1 = $1_1 + $3 | 0;
                                        $1973($0_1, 3684, $2_1);
                                        $2_1 = $2_1 << 1;
                                        $1603($2_1 + $12_1 | 0, $12_1 + ($1_1 << 1) | 0, 1998 - $2_1 | 0);
                                        $2_1 = $1939($0_1, 3676);
                                        if (($2_1 | 0) > 97) {
                                         break label$51
                                        }
                                        while (1) {
                                         $1_1 = $8 + ($2_1 << 4) | 0;
                                         $17_1 = $1944($1_1, 12);
                                         if (($17_1 | 0) >= 0) {
                                          $1973($1_1 + 12 | 0, 0, $3 + $17_1 | 0)
                                         }
                                         $2_1 = $2_1 + 1 | 0;
                                         if (($2_1 | 0) != 98) {
                                          continue
                                         }
                                         break;
                                        };
                                       }
                                       $1_1 = $1939($0_1, 3676) << 4;
                                       $2_1 = $1_1 + $8 | 0;
                                       $1603($2_1 + 16 | 0, $2_1, 1568 - $1_1 | 0);
                                       $1970($0_1, 3676, $1941($0_1, 3676) + 1 | 0);
                                      }
                                      $1_1 = $1944($0_1, 3684);
                                      $2_1 = ($1_1 | 0) < ($1944($0_1, 3680) + $5_1 | 0);
                                      $3 = $2_1;
                                      if (!$2_1) {
                                       break label$45
                                      }
                                      $2_1 = $1941($0_1, 3676);
                                      if (($2_1 | 0) != 99) {
                                       continue
                                      }
                                      break;
                                     };
                                     break label$42;
                                    }
                                    $1_1 = $1_1 - $5_1 | 0;
                                    $1973(($8 + ($1939($0_1, 3676) << 4) | 0) - 4 | 0, 0, $1_1);
                                    $1973($0_1, 3684, $1_1);
                                    if (($5_1 | 0) > 0) {
                                     $8 = $1944($0_1, 20);
                                     $2_1 = 0;
                                     while (1) {
                                      $1970((($1_1 + $2_1 << 1) + $0_1 | 0) + 1676 | 0, 0, $1941($8 + ($2_1 + $10_1 << 1) | 0, 0));
                                      $2_1 = $2_1 + 1 | 0;
                                      if (($5_1 | 0) != ($2_1 | 0)) {
                                       continue
                                      }
                                      break;
                                     };
                                    }
                                    if ($3) {
                                     break label$42
                                    }
                                   }
                                   $1968($0_1, 3694, 1);
                                   $1_1 = $10_1 << 1;
                                   $2_1 = $1944($0_1, 20) + $1_1 | 0;
                                   $3 = $5_1 << 1;
                                   $8 = $28($2_1, $3 + $2_1 | 0);
                                   $1973($0_1, 8, $1944($0_1, 8) - $8 | 0);
                                   $1973($0_1, 4, $1944($0_1, 4) - $5_1 | 0);
                                   $3 = $3 + ($1944($0_1, 20) + $1_1 | 0) | 0;
                                   while (1) {
                                    $1_1 = $1941($3, 0);
                                    if ($1_1) {
                                     $1970($2_1, 0, $1_1);
                                     $2_1 = $2_1 + 2 | 0;
                                    }
                                    $3 = $3 + 2 | 0;
                                    if ($1_1) {
                                     continue
                                    }
                                    break;
                                   };
                                   $1970($2_1, 0, 0);
                                  }
                                  if ($9) {
                                   $676($0_1, $10_1, (($15_1 << 1) + $0_1 | 0) + 1676 | 0, $9);
                                   $1_1 = $0_1 + 3680 | 0;
                                   $1973($1_1, 0, $1944($1_1, 0) - $9 | 0);
                                  }
                                  $1973($0_1, 60, $10_1 + $9 | 0);
                                  $1970($0_1, 3674, $1941($0_1, 3674) - 1 | 0);
                                  $1970($0_1, 3676, $1941($0_1, 3676) - 1 | 0);
                                 }
                                 $1968($11_1, 0, 0);
                                 break label$1;
                                }
                                $1_1 = $1939($0_1 + 3676 | 0, 0);
                                if (($1_1 | 0) != 99) {
                                 $2_1 = $1_1 << 4;
                                 $1_1 = $0_1 + 92 | 0;
                                 $2_1 = $2_1 + $1_1 | 0;
                                 $9 = $1944($2_1, 12);
                                 $5_1 = $1944($2_1, 0);
                                 $10_1 = $1944($2_1, 4);
                                 $1_1 = $1_1 + ($1939($0_1 + 3674 | 0, 0) << 4) | 0;
                                 $3 = $1944($2_1, 8);
                                 $1973($1_1, 4, $3);
                                 $1973($1_1, 8, $10_1);
                                 $1973($1_1, 12, -1);
                                 $1973($1_1, 0, $5_1);
                                 if ($3) {
                                  $8 = $1944($0_1 + 3680 | 0, 0);
                                  $2_1 = $8 + $3 | 0;
                                  label$62 : {
                                   if (($1944($0_1 + 3684 | 0, 0) | 0) < ($2_1 | 0)) {
                                    $1973($1_1 + 4 | 0, 0, 0);
                                    $1973($1_1 + 8 | 0, 0, 0);
                                    break label$62;
                                   }
                                   $1973($1_1 + 12 | 0, 0, $8);
                                   $1973($0_1, 3680, $2_1);
                                   if (($3 | 0) <= 0) {
                                    break label$62
                                   }
                                   $1_1 = $1944($0_1, 20);
                                   $2_1 = 0;
                                   while (1) {
                                    $1970((($2_1 + $8 << 1) + $0_1 | 0) + 1676 | 0, 0, $1941($1_1 + ($2_1 + $5_1 << 1) | 0, 0));
                                    $2_1 = $2_1 + 1 | 0;
                                    if (($3 | 0) != ($2_1 | 0)) {
                                     continue
                                    }
                                    break;
                                   };
                                  }
                                  $1968($0_1, 3694, 1);
                                  $2_1 = $5_1 << 1;
                                  $1_1 = $1944($0_1, 20) + $2_1 | 0;
                                  $8 = $3 << 1;
                                  $12_1 = $28($1_1, $8 + $1_1 | 0);
                                  $1973($0_1, 8, $1944($0_1, 8) - $12_1 | 0);
                                  $1973($0_1, 4, $1944($0_1, 4) - $3 | 0);
                                  $3 = $8 + ($1944($0_1, 20) + $2_1 | 0) | 0;
                                  while (1) {
                                   $2_1 = $1941($3, 0);
                                   if ($2_1) {
                                    $1970($1_1, 0, $2_1);
                                    $1_1 = $1_1 + 2 | 0;
                                   }
                                   $3 = $3 + 2 | 0;
                                   if ($2_1) {
                                    continue
                                   }
                                   break;
                                  };
                                  $1970($1_1, 0, 0);
                                 }
                                 if ($10_1) {
                                  $676($0_1, $5_1, (($9 << 1) + $0_1 | 0) + 1676 | 0, $10_1);
                                  $1_1 = $0_1 + 3684 | 0;
                                  $1973($1_1, 0, $1944($1_1, 0) + $10_1 | 0);
                                 }
                                 $1973($0_1, 60, $5_1 + $10_1 | 0);
                                 $1970($0_1, 3674, $1941($0_1, 3674) + 1 | 0);
                                 $1970($0_1, 3676, $1941($0_1, 3676) + 1 | 0);
                                }
                                $1968($11_1, 0, 0);
                                break label$1;
                               }
                               $1_1 = $1944($7_1, 0);
                               $2_1 = $1944($6_1, 0);
                               label$69 : {
                                if (($1_1 | 0) != ($2_1 | 0)) {
                                 if (($1_1 | 0) > ($2_1 | 0)) {
                                  $1973($6_1, 0, $1_1);
                                  $1973($7_1, 0, $2_1);
                                 }
                                 $1_1 = $1944($7_1, 0);
                                 $1973($4_1, 0, $1_1);
                                 $1973($6_1, 0, $1_1);
                                 $1968($11_1, 0, 0);
                                 break label$69;
                                }
                                $1_1 = $1944($4_1, 0);
                                if (($1_1 | 0) <= 0) {
                                 break label$69
                                }
                                $1973($4_1, 0, $1_1 - 1 | 0);
                               }
                               $1968($11_1, 0, 0);
                               break label$1;
                              }
                              $1_1 = $1944($7_1, 0);
                              $2_1 = $1944($6_1, 0);
                              label$72 : {
                               if (($1_1 | 0) != ($2_1 | 0)) {
                                if (($1_1 | 0) > ($2_1 | 0)) {
                                 $1973($6_1, 0, $1_1);
                                 $1973($7_1, 0, $2_1);
                                }
                                $1_1 = $1944($0_1, 4);
                                $2_1 = $1944($0_1, 64);
                                $3 = $1944($0_1, 68);
                                label$75 : {
                                 if (($2_1 | 0) == ($3 | 0)) {
                                  break label$75
                                 }
                                 if (($1_1 | 0) < ($2_1 | 0)) {
                                  $1973($7_1, 0, $1_1)
                                 }
                                 if (($1_1 | 0) < ($3 | 0)) {
                                  $1973($6_1, 0, $1_1)
                                 }
                                 $2_1 = $1944($7_1, 0);
                                 if (($1944($6_1, 0) | 0) != ($2_1 | 0)) {
                                  break label$75
                                 }
                                 $1973($4_1, 0, $2_1);
                                }
                                if (($1944($4_1, 0) | 0) > ($1_1 | 0)) {
                                 $1973($4_1, 0, $1_1)
                                }
                                $1_1 = $1944($6_1, 0);
                                $1973($4_1, 0, $1_1);
                                $1973($7_1, 0, $1_1);
                                $1968($11_1, 0, 0);
                                break label$72;
                               }
                               $1973($4_1, 0, $1944($4_1, 0) + 1 | 0);
                              }
                              $1_1 = $1944($0_1, 4);
                              $2_1 = $1944($0_1, 64);
                              $3 = $1944($0_1, 68);
                              label$79 : {
                               if (($2_1 | 0) == ($3 | 0)) {
                                break label$79
                               }
                               if (($1_1 | 0) < ($2_1 | 0)) {
                                $1973($7_1, 0, $1_1)
                               }
                               if (($1_1 | 0) < ($3 | 0)) {
                                $1973($6_1, 0, $1_1)
                               }
                               $2_1 = $1944($7_1, 0);
                               if (($1944($6_1, 0) | 0) != ($2_1 | 0)) {
                                break label$79
                               }
                               $1973($4_1, 0, $2_1);
                              }
                              if (($1944($4_1, 0) | 0) > ($1_1 | 0)) {
                               $1973($4_1, 0, $1_1)
                              }
                              $1968($11_1, 0, 0);
                              break label$1;
                             }
                             $1_1 = $1944($0_1, 4);
                             $2_1 = $1944($0_1, 64);
                             $3 = $1944($0_1, 68);
                             label$83 : {
                              if (($2_1 | 0) == ($3 | 0)) {
                               break label$83
                              }
                              if (($1_1 | 0) < ($2_1 | 0)) {
                               $1973($7_1, 0, $1_1)
                              }
                              if (($1_1 | 0) < ($3 | 0)) {
                               $1973($6_1, 0, $1_1)
                              }
                              $2_1 = $1944($7_1, 0);
                              if (($1944($6_1, 0) | 0) != ($2_1 | 0)) {
                               break label$83
                              }
                              $1973($4_1, 0, $2_1);
                             }
                             if (($1944($4_1, 0) | 0) > ($1_1 | 0)) {
                              $1973($4_1, 0, $1_1)
                             }
                             $2_1 = $1944($7_1, 0);
                             $1_1 = $1944($6_1, 0);
                             label$87 : {
                              if (($2_1 | 0) == ($1_1 | 0)) {
                               $1_1 = $1944($4_1, 0);
                               $1973($6_1, 0, $1_1);
                               $1973($7_1, 0, $1_1);
                               break label$87;
                              }
                              $1973($4_1, 0, $1_1);
                             }
                             $1_1 = $1944($6_1, 0);
                             if (($1_1 | 0) > 0) {
                              $1973($6_1, 0, $1_1 - 1 | 0)
                             }
                             $1973($4_1, 0, $1944($6_1, 0));
                             $1968($11_1, 0, 0);
                             break label$1;
                            }
                            $1_1 = $1944($7_1, 0);
                            $2_1 = $1944($6_1, 0);
                            if (($1_1 | 0) != ($2_1 | 0)) {
                             if (($1_1 | 0) > ($2_1 | 0)) {
                              $1973($6_1, 0, $1_1);
                              $1973($7_1, 0, $2_1);
                             }
                             $1_1 = $1944($7_1, 0);
                             $1973($4_1, 0, $1_1);
                             $1973($6_1, 0, $1_1);
                             $1968($11_1, 0, 0);
                             break label$1;
                            }
                            $1_1 = $1944($4_1, 0);
                            $2_1 = ($1_1 >> 31 & $1_1) - 1 | 0;
                            while (1) {
                             label$92 : {
                              if (($1_1 | 0) <= 0) {
                               $3 = $2_1;
                               break label$92;
                              }
                              $3 = $1_1 - 1 | 0;
                              $1_1 = $3;
                              if (!$691($0_1, $1_1)) {
                               continue
                              }
                             }
                             break;
                            };
                            $1_1 = ($3 | 0) > 0 ? $3 : 0;
                            $2_1 = $1944($0_1, 4);
                            $1973($0_1, 60, ($1_1 | 0) < ($2_1 | 0) ? $1_1 : $2_1);
                            break label$1;
                           }
                           if (($1944($7_1, 0) | 0) == ($1944($6_1, 0) | 0)) {
                            $1_1 = $1944($4_1, 0);
                            $1973($6_1, 0, $1_1);
                            $1973($7_1, 0, $1_1);
                           }
                           $1_1 = $1944($4_1, 0);
                           $2_1 = ($1_1 >> 31 & $1_1) - 1 | 0;
                           while (1) {
                            label$96 : {
                             if (($1_1 | 0) <= 0) {
                              $3 = $2_1;
                              break label$96;
                             }
                             $3 = $1_1 - 1 | 0;
                             $1_1 = $3;
                             if (!$691($0_1, $1_1)) {
                              continue
                             }
                            }
                            break;
                           };
                           $2_1 = ($3 | 0) > 0 ? $3 : 0;
                           $1973($0_1, 68, $2_1);
                           $1973($0_1, 60, $2_1);
                           $1_1 = $1944($0_1, 4);
                           $3 = $1944($0_1, 64);
                           label$99 : {
                            if (($3 | 0) == ($2_1 | 0)) {
                             break label$99
                            }
                            if (($1_1 | 0) < ($3 | 0)) {
                             $1973($7_1, 0, $1_1)
                            }
                            if (($1_1 | 0) < ($2_1 | 0)) {
                             $1973($6_1, 0, $1_1)
                            }
                            $2_1 = $1944($7_1, 0);
                            if (($1944($6_1, 0) | 0) != ($2_1 | 0)) {
                             break label$99
                            }
                            $1973($4_1, 0, $2_1);
                           }
                           if (($1944($4_1, 0) | 0) <= ($1_1 | 0)) {
                            break label$1
                           }
                           $1973($4_1, 0, $1_1);
                           break label$1;
                          }
                          $1_1 = $1944($7_1, 0);
                          $2_1 = $1944($6_1, 0);
                          if (($1_1 | 0) != ($2_1 | 0)) {
                           if (($1_1 | 0) > ($2_1 | 0)) {
                            $1973($6_1, 0, $1_1);
                            $1973($7_1, 0, $2_1);
                           }
                           $1_1 = $1944($0_1, 4);
                           $2_1 = $1944($0_1, 64);
                           $3 = $1944($0_1, 68);
                           label$104 : {
                            if (($2_1 | 0) == ($3 | 0)) {
                             break label$104
                            }
                            if (($1_1 | 0) < ($2_1 | 0)) {
                             $1973($7_1, 0, $1_1)
                            }
                            if (($1_1 | 0) < ($3 | 0)) {
                             $1973($6_1, 0, $1_1)
                            }
                            $2_1 = $1944($7_1, 0);
                            if (($1944($6_1, 0) | 0) != ($2_1 | 0)) {
                             break label$104
                            }
                            $1973($4_1, 0, $2_1);
                           }
                           if (($1944($4_1, 0) | 0) > ($1_1 | 0)) {
                            $1973($4_1, 0, $1_1)
                           }
                           $1_1 = $1944($6_1, 0);
                           $1973($4_1, 0, $1_1);
                           $1973($7_1, 0, $1_1);
                           $1968($11_1, 0, 0);
                           break label$1;
                          }
                          $3 = $1944($0_1, 4);
                          $1_1 = $1944($0_1, 60);
                          $2_1 = $1_1 + 1 | 0;
                          $2_1 = ($2_1 | 0) < ($3 | 0) ? $3 : $2_1;
                          while (1) {
                           label$108 : {
                            $1_1 = $1_1 + 1 | 0;
                            if (($3 | 0) <= ($1_1 | 0)) {
                             $5_1 = $2_1;
                             break label$108;
                            }
                            $5_1 = $1_1;
                            if (!$691($0_1, $1_1)) {
                             continue
                            }
                           }
                           break;
                          };
                          $1973($4_1, 0, ($3 | 0) > ($5_1 | 0) ? $5_1 : $3);
                          break label$1;
                         }
                         if (($1944($7_1, 0) | 0) == ($1944($6_1, 0) | 0)) {
                          $1_1 = $1944($4_1, 0);
                          $1973($6_1, 0, $1_1);
                          $1973($7_1, 0, $1_1);
                         }
                         $3 = $1944($0_1, 4);
                         $1_1 = $1944($0_1, 60);
                         $2_1 = $1_1 + 1 | 0;
                         $2_1 = ($2_1 | 0) < ($3 | 0) ? $3 : $2_1;
                         while (1) {
                          label$112 : {
                           $1_1 = $1_1 + 1 | 0;
                           if (($3 | 0) <= ($1_1 | 0)) {
                            $5_1 = $2_1;
                            break label$112;
                           }
                           $5_1 = $1_1;
                           if (!$691($0_1, $1_1)) {
                            continue
                           }
                          }
                          break;
                         };
                         $1_1 = ($3 | 0) > ($5_1 | 0) ? $5_1 : $3;
                         $1973($4_1, 0, $1_1);
                         $1973($6_1, 0, $1_1);
                         $2_1 = $1944($7_1, 0);
                         label$115 : {
                          if (($2_1 | 0) == ($1_1 | 0)) {
                           break label$115
                          }
                          if (($2_1 | 0) > ($3 | 0)) {
                           $1973($7_1, 0, $3)
                          }
                          $2_1 = $1_1;
                          $1_1 = $1944($7_1, 0);
                          if (($2_1 | 0) != ($1_1 | 0)) {
                           break label$115
                          }
                          $1973($4_1, 0, $1_1);
                         }
                         if (($1944($4_1, 0) | 0) <= ($3 | 0)) {
                          break label$1
                         }
                         $1973($4_1, 0, $3);
                         break label$1;
                        }
                        $2_1 = $1944($7_1, 0);
                        $1_1 = $1944($6_1, 0);
                        label$117 : {
                         if (($2_1 | 0) == ($1_1 | 0)) {
                          $1_1 = $1944($4_1, 0);
                          $1973($6_1, 0, $1_1);
                          $1973($7_1, 0, $1_1);
                          break label$117;
                         }
                         $1973($4_1, 0, $1_1);
                        }
                        $2_1 = $1944($0_1, 68);
                        $3 = $2_1 + 1 | 0;
                        $1973($0_1, 68, $3);
                        $1_1 = $1944($0_1, 4);
                        $5_1 = $3;
                        $3 = $1944($0_1, 64);
                        label$119 : {
                         if (($5_1 | 0) == ($3 | 0)) {
                          break label$119
                         }
                         if (($1_1 | 0) < ($3 | 0)) {
                          $1973($7_1, 0, $1_1)
                         }
                         if (($1_1 | 0) <= ($2_1 | 0)) {
                          $1973($6_1, 0, $1_1)
                         }
                         $2_1 = $1944($7_1, 0);
                         if (($1944($6_1, 0) | 0) != ($2_1 | 0)) {
                          break label$119
                         }
                         $1973($4_1, 0, $2_1);
                        }
                        if (($1944($4_1, 0) | 0) > ($1_1 | 0)) {
                         $1973($4_1, 0, $1_1)
                        }
                        $1973($4_1, 0, $1944($6_1, 0));
                        $1968($11_1, 0, 0);
                        break label$1;
                       }
                       $20_1 = $18_1 & 4194304;
                       $12_1 = ($18_1 & -4194305) != 2097167;
                       $24 = $12_1 & $32_1;
                       if ($24) {
                        $1_1 = $20_1 | 2097153
                       } else {
                        label$125 : {
                         label$126 : {
                          label$127 : {
                           if ($20_1) {
                            if (($2_1 | 0) == ($3 | 0)) {
                             $1973($6_1, 0, $5_1);
                             $1973($7_1, 0, $5_1);
                             $8 = $5_1;
                             $1_1 = $5_1;
                             $2_1 = $1_1;
                             break label$125;
                            }
                            $1973($4_1, 0, $2_1);
                            $5_1 = $2_1;
                            break label$127;
                           }
                           if (($2_1 | 0) != ($3 | 0)) {
                            break label$126
                           }
                          }
                          $8 = $5_1;
                          $1_1 = $2_1;
                          $2_1 = $3;
                          break label$125;
                         }
                         label$130 : {
                          if (($2_1 | 0) >= ($3 | 0)) {
                           $10_1 = $2_1;
                           $2_1 = $3;
                           break label$130;
                          }
                          $1973($6_1, 0, $3);
                          $1973($7_1, 0, $2_1);
                          $10_1 = $3;
                         }
                         $1_1 = $2_1;
                         $2_1 = $10_1;
                         label$132 : {
                          if (($2_1 | 0) == ($1_1 | 0)) {
                           $3 = $5_1;
                           break label$132;
                          }
                          $10_1 = $1_1;
                          if (($9 | 0) < ($1_1 | 0)) {
                           $1973($7_1, 0, $9);
                           $3 = $9;
                          } else {
                           $3 = $10_1
                          }
                          $10_1 = $2_1;
                          if (($2_1 | 0) > ($9 | 0)) {
                           $1973($6_1, 0, $9);
                           $2_1 = $9;
                          } else {
                           $2_1 = $10_1
                          }
                          label$136 : {
                           if (($2_1 | 0) != ($3 | 0)) {
                            $3 = $5_1;
                            break label$136;
                           }
                           $1973($4_1, 0, $3);
                          }
                         }
                         if (($3 | 0) > ($9 | 0)) {
                          $1973($4_1, 0, $9)
                         }
                         $1973($4_1, 0, $2_1);
                         $1973($7_1, 0, $2_1);
                         $1968($11_1, 0, 0);
                         $10_1 = 0;
                         $8 = $2_1;
                         $1_1 = $2_1;
                        }
                        $5_1 = $8;
                        $3 = $1_1;
                        if (($1_1 | 0) != ($2_1 | 0)) {
                         $8 = $2_1;
                         if (($2_1 | 0) > ($9 | 0)) {
                          $1973($7_1, 0, $9);
                          $2_1 = $9;
                         } else {
                          $2_1 = $8
                         }
                         $8 = $3;
                         if (($3 | 0) > ($9 | 0)) {
                          $1973($6_1, 0, $9);
                          $3 = $9;
                         } else {
                          $3 = $8
                         }
                         if (($3 | 0) == ($2_1 | 0)) {
                          $1973($4_1, 0, $2_1);
                          $5_1 = $2_1;
                         }
                        }
                        $1_1 = $2_1;
                        $2_1 = $3;
                        $25_1 = $12_1 ? 1 : $30;
                        $3 = $5_1;
                        if (($9 | 0) < ($3 | 0)) {
                         $1973($4_1, 0, $9);
                         $3 = $9;
                        }
                        $692($14 + 8 | 0, $0_1, $3, $31_1);
                        label$146 : {
                         if (($25_1 | 0) <= 0) {
                          $5_1 = $3;
                          $12_1 = $1_1;
                          break label$146;
                         }
                         $28_1 = $1963($14, 8);
                         $8 = $3;
                         $3 = $2_1;
                         $12_1 = $1_1;
                         $5_1 = $2_1;
                         $15_1 = $1944($14, 24);
                         $17_1 = $1944($14, 20);
                         $22_1 = 0;
                         label$148 : {
                          while (1) {
                           $2_1 = $17_1;
                           $17_1 = $3;
                           if (!$15_1) {
                            break label$148
                           }
                           $16_1 = $2_1 + $15_1 | 0;
                           $19 = $23_1 + ($16_1 << 1) | 0;
                           if (($1941($19 - 2 | 0, 0) | 0) != 10) {
                            break label$148
                           }
                           $15_1 = $5_1;
                           $21_1 = $10_1 & 255 ? $13 : $28_1;
                           $1973($4_1, 0, $16_1);
                           $10_1 = $1944($27_1, 6464);
                           $8 = $10_1 + 12 | 0;
                           $33_1 = Math_fround($1963($27_1, 6468) / $1963($10_1, 16));
                           $3 = $19;
                           while (1) {
                            label$150 : {
                             $2_1 = $3;
                             if ($29_1 >>> 0 <= $2_1 >>> 0) {
                              $5_1 = $2_1;
                              break label$150;
                             }
                             $3 = $2_1 + 2 | 0;
                             $5_1 = $3;
                             if (($1941($2_1, 0) | 0) != 10) {
                              continue
                             }
                            }
                            break;
                           };
                           $3 = $5_1 - $19 | 0;
                           $19 = $3 >> 1;
                           $2_1 = $16_1;
                           label$153 : {
                            if (($3 | 0) <= 0) {
                             break label$153
                            }
                            $3 = $16_1;
                            $5_1 = 0;
                            $13 = Math_fround(0.0);
                            while (1) {
                             $26_1 = $13;
                             $2_1 = $3;
                             $13 = Math_fround(-1.0);
                             $3 = $1941($23_1 + ($5_1 + $16_1 << 1) | 0, 0);
                             if (($3 | 0) != 10) {
                              $13 = Math_fround($33_1 * $1963((wasm2js_i32$0 = $1944($10_1, 8) + ($3 << 2) | 0, wasm2js_i32$1 = $8, wasm2js_i32$2 = ($1944($10_1, 0) | 0) > ($3 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0))
                             }
                             label$156 : {
                              if ($13 == Math_fround(-1.0)) {
                               $13 = $26_1;
                               $3 = 0;
                               break label$156;
                              }
                              $13 = Math_fround($26_1 + $13);
                              $3 = 0;
                              if ($13 > $21_1) {
                               break label$156
                              }
                              $2_1 = $2_1 + 1 | 0;
                              $1973($4_1, 0, $2_1);
                              $3 = 1;
                             }
                             if (!$3) {
                              break label$153
                             }
                             $3 = $2_1;
                             $5_1 = $5_1 + 1 | 0;
                             if (($19 | 0) > ($5_1 | 0)) {
                              continue
                             }
                             break;
                            };
                           }
                           label$160 : {
                            if (($1_1 | 0) == ($15_1 | 0)) {
                             $3 = $17_1;
                             $10_1 = $12_1;
                             $5_1 = $15_1;
                             $8 = $1_1;
                             break label$160;
                            }
                            $3 = $12_1;
                            $5_1 = $1_1;
                            if (($9 | 0) < ($1_1 | 0)) {
                             $1973($7_1, 0, $9);
                             $3 = $9;
                             $5_1 = $3;
                            }
                            $8 = $5_1;
                            $10_1 = $3;
                            $3 = $17_1;
                            $5_1 = $15_1;
                            if (($9 | 0) < ($5_1 | 0)) {
                             $1973($6_1, 0, $9);
                             $3 = $9;
                             $5_1 = $3;
                            }
                            if (($5_1 | 0) == ($8 | 0)) {
                             $1973($4_1, 0, $8);
                             $2_1 = $8;
                            }
                           }
                           $1_1 = $8;
                           $12_1 = $10_1;
                           if (($2_1 | 0) > ($9 | 0)) {
                            $1973($4_1, 0, $9);
                            $2_1 = $9;
                           }
                           $1986($0_1, 88, $21_1);
                           $1968($0_1, 82, 1);
                           if ($20_1) {
                            $1973($6_1, 0, $2_1);
                            $5_1 = $2_1;
                            $3 = $2_1;
                           }
                           $13 = $21_1;
                           $10_1 = 1;
                           $8 = $2_1;
                           $15_1 = $19;
                           $17_1 = $16_1;
                           $22_1 = $22_1 + 1 | 0;
                           if (($25_1 | 0) != ($22_1 | 0)) {
                            continue
                           }
                           break;
                          };
                          $1973($14, 24, $19);
                          $1973($14, 20, $16_1);
                          $5_1 = $2_1;
                          $2_1 = $3;
                          break label$146;
                         }
                         $1973($14, 24, $15_1);
                         $1973($14, 20, $2_1);
                         $5_1 = $8;
                         $2_1 = $17_1;
                        }
                        $3 = $12_1;
                        $1_1 = $18_1;
                       }
                       if ($24) {
                        continue
                       }
                       break label$1;
                      }
                      $22_1 = $18_1 & 4194304;
                      $15_1 = ($18_1 & -4194305) != 2097166;
                      $24 = $15_1 & $32_1;
                      label$168 : {
                       if ($24) {
                        $8 = $10_1;
                        $1_1 = $22_1 | 2097152;
                        break label$168;
                       }
                       label$170 : {
                        label$171 : {
                         label$172 : {
                          if ($22_1) {
                           if (($2_1 | 0) == ($3 | 0)) {
                            $1973($6_1, 0, $5_1);
                            $1973($7_1, 0, $5_1);
                            $8 = $5_1;
                            $1_1 = $5_1;
                            $2_1 = $1_1;
                            break label$170;
                           }
                           $1973($4_1, 0, $2_1);
                           $5_1 = $2_1;
                           break label$172;
                          }
                          if (($2_1 | 0) != ($3 | 0)) {
                           break label$171
                          }
                         }
                         $8 = $5_1;
                         $1_1 = $2_1;
                         $2_1 = $3;
                         break label$170;
                        }
                        label$175 : {
                         if (($2_1 | 0) >= ($3 | 0)) {
                          $2_1 = $3;
                          break label$175;
                         }
                         $1973($6_1, 0, $3);
                         $1973($7_1, 0, $2_1);
                        }
                        $1973($4_1, 0, $2_1);
                        $1973($6_1, 0, $2_1);
                        $1968($11_1, 0, 0);
                        $10_1 = 0;
                        $8 = $2_1;
                        $1_1 = $2_1;
                       }
                       $5_1 = $8;
                       $8 = $10_1;
                       $3 = $1_1;
                       if (($1_1 | 0) != ($2_1 | 0)) {
                        $10_1 = $2_1;
                        if (($2_1 | 0) > ($9 | 0)) {
                         $1973($7_1, 0, $9);
                         $2_1 = $9;
                        } else {
                         $2_1 = $10_1
                        }
                        $10_1 = $3;
                        if (($3 | 0) > ($9 | 0)) {
                         $1973($6_1, 0, $9);
                         $3 = $9;
                        } else {
                         $3 = $10_1
                        }
                        if (($3 | 0) == ($2_1 | 0)) {
                         $1973($4_1, 0, $2_1);
                         $5_1 = $2_1;
                        }
                       }
                       $10_1 = $2_1;
                       $12_1 = $3;
                       $25_1 = $15_1 ? 1 : $30;
                       $2_1 = $5_1;
                       if (($9 | 0) < ($2_1 | 0)) {
                        $1973($4_1, 0, $9);
                        $2_1 = $9;
                       }
                       $692($14 + 8 | 0, $0_1, $2_1, $31_1);
                       label$184 : {
                        if (($25_1 | 0) <= 0) {
                         $5_1 = $2_1;
                         $3 = $10_1;
                         break label$184;
                        }
                        label$186 : {
                         $5_1 = $1944($14, 28);
                         $3 = $1944($14, 20);
                         label$187 : {
                          if (($5_1 | 0) == ($3 | 0)) {
                           $1_1 = $2_1;
                           $2_1 = $5_1;
                           break label$187;
                          }
                          $21_1 = (wasm2js_f32$0 = $13, wasm2js_f32$1 = $1963($14, 8), wasm2js_i32$0 = $8 & 255, wasm2js_i32$0 ? wasm2js_f32$0 : wasm2js_f32$1);
                          $20_1 = $1944($27_1, 6464);
                          $34_1 = $20_1 + 12 | 0;
                          $28_1 = Math_fround($1963($27_1, 6468) / $1963($20_1, 16));
                          $3 = 0;
                          $8 = $10_1;
                          $17_1 = $10_1;
                          $1_1 = $12_1;
                          $15_1 = $1_1;
                          while (1) {
                           $10_1 = $8;
                           $19 = $3;
                           $16_1 = $5_1;
                           $1973($4_1, 0, $5_1);
                           $8 = $23_1 + ($5_1 << 1) | 0;
                           $3 = $8;
                           while (1) {
                            label$190 : {
                             $2_1 = $3;
                             if ($29_1 >>> 0 <= $2_1 >>> 0) {
                              $5_1 = $2_1;
                              break label$190;
                             }
                             $3 = $2_1 + 2 | 0;
                             $5_1 = $3;
                             if (($1941($2_1, 0) | 0) != 10) {
                              continue
                             }
                            }
                            break;
                           };
                           $2_1 = $16_1;
                           $3 = $5_1 - $8 | 0;
                           label$193 : {
                            if (($3 | 0) <= 0) {
                             break label$193
                            }
                            $8 = $3 >> 1;
                            $3 = $16_1;
                            $13 = Math_fround(0.0);
                            $5_1 = 0;
                            while (1) {
                             $26_1 = $13;
                             $2_1 = $3;
                             $13 = Math_fround(-1.0);
                             $3 = $1941($23_1 + ($5_1 + $16_1 << 1) | 0, 0);
                             if (($3 | 0) != 10) {
                              $13 = Math_fround($28_1 * $1963((wasm2js_i32$0 = $1944($20_1, 8) + ($3 << 2) | 0, wasm2js_i32$1 = $34_1, wasm2js_i32$2 = ($1944($20_1, 0) | 0) > ($3 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0))
                             }
                             label$196 : {
                              if ($13 == Math_fround(-1.0)) {
                               $13 = $26_1;
                               $3 = 0;
                               break label$196;
                              }
                              $13 = Math_fround($26_1 + $13);
                              $3 = 0;
                              if ($13 > $21_1) {
                               break label$196
                              }
                              $2_1 = $2_1 + 1 | 0;
                              $1973($4_1, 0, $2_1);
                              $3 = 1;
                             }
                             if (!$3) {
                              break label$193
                             }
                             $3 = $2_1;
                             $5_1 = $5_1 + 1 | 0;
                             if (($8 | 0) > ($5_1 | 0)) {
                              continue
                             }
                             break;
                            };
                           }
                           label$200 : {
                            if (($1_1 | 0) == ($10_1 | 0)) {
                             $8 = $2_1;
                             $2_1 = $15_1;
                             $5_1 = $1_1;
                             break label$200;
                            }
                            $3 = $17_1;
                            $5_1 = $10_1;
                            if (($9 | 0) < ($5_1 | 0)) {
                             $1973($7_1, 0, $9);
                             $3 = $9;
                             $5_1 = $3;
                            }
                            $10_1 = $5_1;
                            $12_1 = $3;
                            $3 = $15_1;
                            $5_1 = $1_1;
                            if (($9 | 0) < ($1_1 | 0)) {
                             $1973($6_1, 0, $9);
                             $3 = $9;
                             $5_1 = $3;
                            }
                            if (!(($5_1 | 0) != ($10_1 | 0))) {
                             $1973($4_1, 0, $10_1);
                             $2_1 = $10_1;
                            }
                            $8 = $2_1;
                            $2_1 = $3;
                            $17_1 = $12_1;
                           }
                           $1_1 = $2_1;
                           $2_1 = $8;
                           if (($9 | 0) < ($2_1 | 0)) {
                            $1973($4_1, 0, $9);
                            $2_1 = $9;
                           }
                           $12_1 = $2_1;
                           $1986($0_1, 88, $21_1);
                           $1968($0_1, 82, 1);
                           $2_1 = $1_1;
                           $3 = $5_1;
                           if ($22_1) {
                            $1973($6_1, 0, $12_1);
                            $2_1 = $12_1;
                            $1_1 = $2_1;
                           } else {
                            $1_1 = $3
                           }
                           $15_1 = $2_1;
                           $3 = ($16_1 | 0) > 0 ? $16_1 - 1 | 0 : 0;
                           $5_1 = $3 >> 31 & $3;
                           while (1) {
                            label$208 : {
                             $2_1 = $3;
                             if (($2_1 | 0) <= 0) {
                              $2_1 = $5_1;
                              break label$208;
                             }
                             $3 = $2_1 - 1 | 0;
                             if (($1941($23_1 + ($3 << 1) | 0, 0) | 0) != 10) {
                              continue
                             }
                            }
                            break;
                           };
                           $3 = $19 + 1 | 0;
                           if (($25_1 | 0) == ($3 | 0)) {
                            break label$186
                           }
                           $5_1 = $2_1;
                           $8 = $10_1;
                           if (($2_1 | 0) != ($16_1 | 0)) {
                            continue
                           }
                           break;
                          };
                          $13 = $21_1;
                          $8 = 1;
                          $1_1 = $12_1;
                          $12_1 = $15_1;
                          $10_1 = $17_1;
                          $3 = $16_1;
                         }
                         $1973($14, 20, $3);
                         $1973($14, 28, $2_1);
                         $5_1 = $1_1;
                         $3 = $10_1;
                         break label$184;
                        }
                        $1973($14, 20, $16_1);
                        $1973($14, 28, $2_1);
                        $13 = $21_1;
                        $8 = 1;
                        $5_1 = $12_1;
                        $3 = $17_1;
                        $12_1 = $15_1;
                       }
                       $2_1 = $12_1;
                       $1_1 = $18_1;
                      }
                      $10_1 = $8;
                      if ($24) {
                       continue
                      }
                      break label$1;
                     }
                     break;
                    };
                    label$211 : {
                     if (($1944($7_1, 0) | 0) != ($1944($6_1, 0) | 0)) {
                      $672($0_1, $4_1);
                      break label$211;
                     }
                     $1_1 = $1944($0_1, 60);
                     if (($1944($0_1, 4) | 0) <= ($1_1 | 0)) {
                      break label$211
                     }
                     $2_1 = $675($0_1 + 92 | 0, $1_1, 1, 0);
                     if ($2_1) {
                      $1970($2_1, 0, $1941($1944($0_1, 20) + ($1_1 << 1) | 0, 0))
                     }
                     $1968($0_1, 3694, 1);
                     $2_1 = $1_1 << 1;
                     $1_1 = $1944($0_1, 20) + $2_1 | 0;
                     $3 = $28($1_1, $1_1 + 2 | 0);
                     $1973($0_1, 8, $1944($0_1, 8) - $3 | 0);
                     $1973($0_1, 4, $1944($0_1, 4) - 1 | 0);
                     $3 = $1944($0_1, 20) + $2_1 | 0;
                     while (1) {
                      $2_1 = $1941($3, 2);
                      if ($2_1) {
                       $1970($1_1, 0, $2_1);
                       $1_1 = $1_1 + 2 | 0;
                      }
                      $3 = $3 + 2 | 0;
                      if ($2_1) {
                       continue
                      }
                      break;
                     };
                     $1970($1_1, 0, 0);
                     $1968($11_1, 0, 0);
                    }
                    $1968($11_1, 0, 0);
                    break label$1;
                   }
                   label$217 : {
                    if (($1944($7_1, 0) | 0) != ($1944($6_1, 0) | 0)) {
                     $672($0_1, $4_1);
                     break label$217;
                    }
                    $2_1 = $1944($0_1, 60);
                    $1_1 = $1944($0_1, 4);
                    if (($2_1 | 0) > ($1_1 | 0)) {
                     $1973($4_1, 0, $1_1)
                    }
                    $1_1 = $1944($4_1, 0);
                    if (($1_1 | 0) <= 0) {
                     break label$217
                    }
                    $2_1 = $1_1 - 1 | 0;
                    $3 = $675($0_1 + 92 | 0, $2_1, 1, 0);
                    if ($3) {
                     $1970($3, 0, $1941($1944($0_1, 20) + ($2_1 << 1) | 0, 0))
                    }
                    $1968($0_1, 3694, 1);
                    $3 = $1944($0_1, 20);
                    $5_1 = $2_1 << 1;
                    $2_1 = $3 + $5_1 | 0;
                    $1_1 = $28($2_1, $3 + ($1_1 << 1) | 0);
                    $1973($0_1, 8, $1944($0_1, 8) - $1_1 | 0);
                    $1973($0_1, 4, $1944($0_1, 4) - 1 | 0);
                    $3 = $1944($0_1, 20) + $5_1 | 0;
                    while (1) {
                     $1_1 = $1941($3, 2);
                     if ($1_1) {
                      $1970($2_1, 0, $1_1);
                      $2_1 = $2_1 + 2 | 0;
                     }
                     $3 = $3 + 2 | 0;
                     if ($1_1) {
                      continue
                     }
                     break;
                    };
                    $1970($2_1, 0, 0);
                    $1968($11_1, 0, 0);
                    $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
                   }
                   $1968($11_1, 0, 0);
                   break label$1;
                  }
                  $1973($6_1, 0, 0);
                  $1973($7_1, 0, 0);
                  $1973($4_1, 0, 0);
                  $1968($11_1, 0, 0);
                  break label$1;
                 }
                 $1968($0_1, 82, 0);
                 $1982($0_1, 64, 0, 0);
                 $1973($0_1, 60, $1944($0_1, 4));
                 break label$1;
                }
                $2_1 = $1944($7_1, 0);
                $1_1 = $1944($6_1, 0);
                label$224 : {
                 if (($2_1 | 0) == ($1_1 | 0)) {
                  $1_1 = $1944($4_1, 0);
                  $1973($6_1, 0, $1_1);
                  $1973($7_1, 0, $1_1);
                  break label$224;
                 }
                 $1973($4_1, 0, $1_1);
                }
                $1973($6_1, 0, 0);
                $1973($4_1, 0, 0);
                $1968($11_1, 0, 0);
                break label$1;
               }
               $2_1 = $1944($7_1, 0);
               $1_1 = $1944($6_1, 0);
               label$226 : {
                if (($2_1 | 0) == ($1_1 | 0)) {
                 $1_1 = $1944($4_1, 0);
                 $1973($6_1, 0, $1_1);
                 $1973($7_1, 0, $1_1);
                 break label$226;
                }
                $1973($4_1, 0, $1_1);
               }
               $1968($0_1, 82, 0);
               $1_1 = $1944($0_1, 4);
               $1973($0_1, 68, $1_1);
               $1973($0_1, 60, $1_1);
               break label$1;
              }
              $1_1 = $1944($0_1, 4);
              $2_1 = $1944($0_1, 64);
              $3 = $1944($0_1, 68);
              label$228 : {
               if (($2_1 | 0) == ($3 | 0)) {
                break label$228
               }
               if (($1_1 | 0) < ($2_1 | 0)) {
                $1973($7_1, 0, $1_1)
               }
               if (($1_1 | 0) < ($3 | 0)) {
                $1973($6_1, 0, $1_1)
               }
               $2_1 = $1944($7_1, 0);
               if (($1944($6_1, 0) | 0) != ($2_1 | 0)) {
                break label$228
               }
               $1973($4_1, 0, $2_1);
              }
              if (($1944($4_1, 0) | 0) > ($1_1 | 0)) {
               $1973($4_1, 0, $1_1)
              }
              $1_1 = $1944($7_1, 0);
              $2_1 = $1944($6_1, 0);
              if (($1_1 | 0) != ($2_1 | 0)) {
               if (($1_1 | 0) > ($2_1 | 0)) {
                $1973($6_1, 0, $1_1);
                $1973($7_1, 0, $2_1);
               }
               $1_1 = $1944($7_1, 0);
               $1973($4_1, 0, $1_1);
               $1973($6_1, 0, $1_1);
               $1968($11_1, 0, 0);
              }
              if ($1937($0_1, 83)) {
               break label$9
              }
              $2_1 = $1944($4_1, 0);
              if (($2_1 | 0) <= 0) {
               break label$2
              }
              $3 = $1944($0_1, 20);
              while (1) {
               $1_1 = $2_1;
               $2_1 = $1_1 - 1 | 0;
               if (($1941($3 + ($2_1 << 1) | 0, 0) | 0) == 10) {
                break label$2
               }
               $1973($4_1, 0, $2_1);
               if (($1_1 | 0) > 1) {
                continue
               }
               break;
              };
              break label$2;
             }
             $1_1 = $1944($0_1, 4);
             $2_1 = $1944($0_1, 64);
             $3 = $1944($0_1, 68);
             label$235 : {
              if (($2_1 | 0) == ($3 | 0)) {
               break label$235
              }
              if (($1_1 | 0) < ($2_1 | 0)) {
               $1973($7_1, 0, $1_1)
              }
              if (($1_1 | 0) < ($3 | 0)) {
               $1973($6_1, 0, $1_1)
              }
              $2_1 = $1944($7_1, 0);
              if (($1944($6_1, 0) | 0) != ($2_1 | 0)) {
               break label$235
              }
              $1973($4_1, 0, $2_1);
             }
             if (($1944($4_1, 0) | 0) > ($1_1 | 0)) {
              $1973($4_1, 0, $1_1)
             }
             $2_1 = $1944($7_1, 0);
             $3 = $1944($6_1, 0);
             if (($2_1 | 0) != ($3 | 0)) {
              if (($2_1 | 0) > ($3 | 0)) {
               $1973($6_1, 0, $2_1);
               $1973($7_1, 0, $3);
              }
              $2_1 = $1944($7_1, 0);
              $1973($4_1, 0, $2_1);
              $1973($6_1, 0, $2_1);
              $1968($11_1, 0, 0);
             }
             if ($1937($0_1, 83)) {
              break label$8
             }
             $3 = $1944($4_1, 0);
             if (($3 | 0) >= ($1_1 | 0)) {
              break label$3
             }
             $2_1 = $1944($0_1, 20);
             while (1) {
              if (($1941($2_1 + ($3 << 1) | 0, 0) | 0) == 10) {
               break label$3
              }
              $3 = $3 + 1 | 0;
              $1973($4_1, 0, $3);
              if (($1_1 | 0) != ($3 | 0)) {
               continue
              }
              break;
             };
             break label$3;
            }
            $1_1 = $1944($0_1, 4);
            $2_1 = $1944($0_1, 64);
            $3 = $1944($0_1, 68);
            label$242 : {
             if (($2_1 | 0) == ($3 | 0)) {
              break label$242
             }
             if (($1_1 | 0) < ($2_1 | 0)) {
              $1973($7_1, 0, $1_1)
             }
             if (($1_1 | 0) < ($3 | 0)) {
              $1973($6_1, 0, $1_1)
             }
             $2_1 = $1944($7_1, 0);
             if (($1944($6_1, 0) | 0) != ($2_1 | 0)) {
              break label$242
             }
             $1973($4_1, 0, $2_1);
            }
            if (($1944($4_1, 0) | 0) > ($1_1 | 0)) {
             $1973($4_1, 0, $1_1)
            }
            $2_1 = $1944($7_1, 0);
            $1_1 = $1944($6_1, 0);
            label$246 : {
             if (($2_1 | 0) == ($1_1 | 0)) {
              $1_1 = $1944($4_1, 0);
              $1973($6_1, 0, $1_1);
              $1973($7_1, 0, $1_1);
              break label$246;
             }
             $1973($4_1, 0, $1_1);
            }
            if ($1937($0_1, 83)) {
             break label$7
            }
            $2_1 = $1944($4_1, 0);
            if (($2_1 | 0) <= 0) {
             break label$4
            }
            $3 = $1944($0_1, 20);
            while (1) {
             $1_1 = $2_1;
             $2_1 = $1_1 - 1 | 0;
             if (($1941($3 + ($2_1 << 1) | 0, 0) | 0) == 10) {
              break label$4
             }
             $1973($4_1, 0, $2_1);
             if (($1_1 | 0) > 1) {
              continue
             }
             break;
            };
            break label$4;
           }
           $1_1 = $1944($0_1, 4);
           $2_1 = $1944($0_1, 64);
           $3 = $1944($0_1, 68);
           label$249 : {
            if (($2_1 | 0) == ($3 | 0)) {
             break label$249
            }
            if (($1_1 | 0) < ($2_1 | 0)) {
             $1973($7_1, 0, $1_1)
            }
            if (($1_1 | 0) < ($3 | 0)) {
             $1973($6_1, 0, $1_1)
            }
            $2_1 = $1944($7_1, 0);
            if (($1944($6_1, 0) | 0) != ($2_1 | 0)) {
             break label$249
            }
            $1973($4_1, 0, $2_1);
           }
           if (($1944($4_1, 0) | 0) > ($1_1 | 0)) {
            $1973($4_1, 0, $1_1)
           }
           $3 = $1944($7_1, 0);
           $2_1 = $1944($6_1, 0);
           label$253 : {
            if (($3 | 0) == ($2_1 | 0)) {
             $2_1 = $1944($4_1, 0);
             $1973($6_1, 0, $2_1);
             $1973($7_1, 0, $2_1);
             break label$253;
            }
            $1973($4_1, 0, $2_1);
           }
           if ($1937($0_1, 83)) {
            break label$6
           }
           $3 = $1944($4_1, 0);
           if (($3 | 0) >= ($1_1 | 0)) {
            break label$5
           }
           $2_1 = $1944($0_1, 20);
           while (1) {
            if (($1941($2_1 + ($3 << 1) | 0, 0) | 0) == 10) {
             break label$5
            }
            $3 = $3 + 1 | 0;
            $1973($4_1, 0, $3);
            if (($1_1 | 0) != ($3 | 0)) {
             continue
            }
            break;
           };
           break label$5;
          }
          $1973($4_1, 0, 0);
          break label$2;
         }
         $1973($4_1, 0, $1_1);
         break label$3;
        }
        $1973($4_1, 0, 0);
        break label$4;
       }
       $1973($4_1, 0, $1_1);
      }
      $1973($6_1, 0, $1944($4_1, 0));
      $1968($11_1, 0, 0);
      break label$1;
     }
     $1973($6_1, 0, $1944($4_1, 0));
     $1968($11_1, 0, 0);
     break label$1;
    }
    $1968($11_1, 0, 0);
    break label$1;
   }
   $1968($11_1, 0, 0);
  }
  $1973($0_1, 3688, -1097229926);
  $1968($0_1, 3692, 1);
  global$0 = $14 + 32 | 0;
 }
 
 function $671($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $5_1 = global$0 - 48 | 0;
  global$0 = $5_1;
  $4_1 = $1944($0_1, 0);
  label$1 : {
   if ($4_1 >>> 0 <= 31) {
    $6_1 = $1_1 >>> 26 & ($4_1 | 0) == 10 | $1_1 >>> 10 & ($4_1 | 0) == 9;
    if (!$6_1) {
     break label$1
    }
   }
   label$3 : {
    if (($3 | 0) != 5) {
     if (($4_1 | 0) == 127 | $4_1 >>> 0 > 65535) {
      break label$1
     }
     if ($4_1 - 57344 >>> 0 >= 6400) {
      break label$3
     }
     break label$1;
    }
    if ($4_1 >>> 0 > 65535) {
     break label$1
    }
   }
   if (!(!($1_1 & 131087) | $6_1)) {
    label$9 : {
     label$10 : {
      $7_1 = $4_1 - 48 | 0;
      $6_1 = $1936($1944(0, 73568), 12124);
      if (!(!($1_1 & 1) | $7_1 >>> 0 < 10 | ($6_1 | 0) == ($4_1 | 0))) {
       $3 = $4_1 - 42 | 0;
       if ($3 >>> 0 > 5 | !(1 << $3 & 43)) {
        break label$10
       }
      }
      label$12 : {
       if (!($1_1 & 131072) | $7_1 >>> 0 < 10 | ($4_1 | 0) == ($6_1 | 0)) {
        break label$12
       }
       $3 = 0;
       $6_1 = $4_1;
       switch ($4_1 - 42 | 0) {
       case 0:
       case 1:
       case 3:
       case 5:
       case 27:
       case 59:
        break label$12;
       default:
        break label$9;
       };
      }
      $3 = $4_1 - 97 | 0;
      if (!(!($1_1 & 2) | $7_1 >>> 0 < 10 | ($3 >>> 0 < 6 | $4_1 - 65 >>> 0 <= 5))) {
       $3 = 0;
       $6_1 = $4_1;
       break label$9;
      }
      if (!(!($1_1 & 4) | $3 >>> 0 > 25)) {
       $4_1 = $4_1 - 32 | 0;
       $1973($0_1, 0, $4_1);
      }
      $3 = !(($4_1 | 0) == 9 | ($4_1 | 0) == 32 | ($4_1 | 0) == 12288 ? $1_1 & 8 : 0);
      $6_1 = $4_1;
      break label$9;
     }
     $3 = 0;
     $6_1 = $4_1;
    }
    $4_1 = $6_1;
    $7_1 = 0;
    if (!$3) {
     break label$1
    }
   }
   label$20 : {
    label$21 : {
     if (!($1_1 & 512)) {
      break label$21
     }
     $693($5_1);
     $3 = $5_1 + 8 | 0;
     $1983($3, 0, 0, 0);
     $1983($5_1 + 40 | 0, 0, 0, 0);
     $1983($5_1 + 32 | 0, 0, 0, 0);
     $1983($5_1 + 24 | 0, 0, 0, 0);
     $1983($5_1 + 16 | 0, 0, 0, 0);
     $1973($3, 0, 0);
     $1983($5_1, 0, 0, 0);
     $1970($5_1, 12, $4_1);
     $1973($5_1, 0, 512);
     $1973($5_1, 4, $1_1);
     if (FUNCTION_TABLE[$2_1 | 0]($5_1) | 0) {
      break label$20
     }
     $1_1 = $0_1;
     $0_1 = $1941($5_1, 12);
     $1973($1_1, 0, $0_1);
     if ($0_1) {
      break label$21
     }
     break label$1;
    }
    $7_1 = 1;
   }
  }
  global$0 = $5_1 + 48 | 0;
  return $7_1;
 }
 
 function $672($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $2_1 = $1944($0_1, 4);
  $3 = $1944($1_1, 4);
  $4_1 = $1944($1_1, 8);
  label$1 : {
   if (($3 | 0) == ($4_1 | 0)) {
    break label$1
   }
   if (($2_1 | 0) < ($3 | 0)) {
    $1973($1_1, 4, $2_1)
   }
   if (($2_1 | 0) < ($4_1 | 0)) {
    $1973($1_1, 8, $2_1)
   }
   $3 = $1944($1_1, 4);
   if (($1944($1_1, 8) | 0) != ($3 | 0)) {
    break label$1
   }
   $1973($1_1, 0, $3);
  }
  if (($1944($1_1, 0) | 0) > ($2_1 | 0)) {
   $1973($1_1, 0, $2_1)
  }
  $3 = $1944($1_1, 4);
  $4_1 = $1944($1_1, 8);
  if (($3 | 0) != ($4_1 | 0)) {
   $2_1 = $1_1 + 32 | 0;
   label$6 : {
    if (($3 | 0) < ($4_1 | 0)) {
     $6_1 = $4_1 - $3 | 0;
     $5_1 = $675($2_1, $3, $6_1, 0);
     if (!(!$5_1 | ($6_1 | 0) <= 0)) {
      $7_1 = $1944($0_1 + 20 | 0, 0);
      $2_1 = 0;
      while (1) {
       $1970($5_1 + ($2_1 << 1) | 0, 0, $1941($7_1 + ($2_1 + $3 << 1) | 0, 0));
       $2_1 = $2_1 + 1 | 0;
       if (($6_1 | 0) != ($2_1 | 0)) {
        continue
       }
       break;
      };
     }
     $1968($0_1, 3694, 1);
     $2_1 = $3 << 1;
     $3 = $0_1 + 20 | 0;
     $5_1 = $1944($3, 0);
     $2_1 = $2_1 + $5_1 | 0;
     $4_1 = $4_1 << 1;
     $5_1 = $28($2_1, $4_1 + $5_1 | 0);
     $1973($0_1, 8, $1944($0_1, 8) - $5_1 | 0);
     $1973($0_1, 4, $1944($0_1, 4) - $6_1 | 0);
     $0_1 = $1944($3, 0) + $4_1 | 0;
     while (1) {
      $3 = $1941($0_1, 0);
      if ($3) {
       $1970($2_1, 0, $3);
       $2_1 = $2_1 + 2 | 0;
      }
      $0_1 = $0_1 + 2 | 0;
      if ($3) {
       continue
      }
      break;
     };
     $1970($2_1, 0, 0);
     $1968($1_1, 22, 0);
     $0_1 = $1944($1_1, 4);
     $1973($1_1, 8, $0_1);
     break label$6;
    }
    $6_1 = $3 - $4_1 | 0;
    $5_1 = $675($2_1, $4_1, $6_1, 0);
    if (!(!$5_1 | ($6_1 | 0) <= 0)) {
     $7_1 = $1944($0_1 + 20 | 0, 0);
     $2_1 = 0;
     while (1) {
      $1970($5_1 + ($2_1 << 1) | 0, 0, $1941($7_1 + ($2_1 + $4_1 << 1) | 0, 0));
      $2_1 = $2_1 + 1 | 0;
      if (($6_1 | 0) != ($2_1 | 0)) {
       continue
      }
      break;
     };
    }
    $1968($0_1, 3694, 1);
    $2_1 = $4_1 << 1;
    $4_1 = $0_1 + 20 | 0;
    $5_1 = $1944($4_1, 0);
    $2_1 = $2_1 + $5_1 | 0;
    $3 = $3 << 1;
    $5_1 = $28($2_1, $3 + $5_1 | 0);
    $1973($0_1, 8, $1944($0_1, 8) - $5_1 | 0);
    $1973($0_1, 4, $1944($0_1, 4) - $6_1 | 0);
    $0_1 = $1944($4_1, 0) + $3 | 0;
    while (1) {
     $3 = $1941($0_1, 0);
     if ($3) {
      $1970($2_1, 0, $3);
      $2_1 = $2_1 + 2 | 0;
     }
     $0_1 = $0_1 + 2 | 0;
     if ($3) {
      continue
     }
     break;
    };
    $1970($2_1, 0, 0);
    $1968($1_1, 22, 0);
    $0_1 = $1944($1_1, 8);
    $1973($1_1, 4, $0_1);
   }
   $1973($1_1, 0, $0_1);
   $1968($1_1, 22, 0);
  }
 }
 
 function $674($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = $1944($0_1, 4);
  label$1 : {
   if (($2_1 | 0) >= ($1_1 | 0)) {
    break label$1
   }
   $4_1 = $2_1;
   if ($2_1) {
    $3 = $2_1 + (($2_1 | 0) / 2 | 0) | 0
   } else {
    $3 = 8
   }
   $2_1 = ($1_1 | 0) < ($3 | 0) ? $3 : $1_1;
   if (($4_1 | 0) >= ($2_1 | 0)) {
    break label$1
   }
   $3 = $16($2_1 << 1);
   $4_1 = $1944($0_1, 8);
   if ($4_1) {
    $1602($3, $4_1, $1944($0_1, 0) << 1);
    $17($1944($0_1, 8));
   }
   $1973($0_1, 4, $2_1);
   $1973($0_1, 8, $3);
  }
  $1973($0_1, 0, $1_1);
 }
 
 function $675($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0;
  $1973($0_1, 3592, 999);
  $1970($0_1, 3584, 99);
  if (($1941($0_1, 3582) | 0) == 99) {
   label$2 : {
    if (($1944($0_1, 12) | 0) < 0) {
     break label$2
    }
    $4_1 = $1944($0_1, 3588);
    $6_1 = $1944($0_1, 4);
    $4_1 = $4_1 - $6_1 | 0;
    $1973($0_1, 3588, $4_1);
    $5_1 = $0_1 + 1584 | 0;
    $1603($5_1, $5_1 + ($6_1 << 1) | 0, $4_1 << 1);
    $5_1 = $1939($0_1, 3582);
    if (($5_1 | 0) <= 0) {
     break label$2
    }
    $4_1 = 0;
    while (1) {
     $8 = ($4_1 << 4) + $0_1 | 0;
     $7_1 = $1944($8, 12);
     if (($7_1 | 0) >= 0) {
      $1973($8 + 12 | 0, 0, $7_1 - $6_1 | 0)
     }
     $4_1 = $4_1 + 1 | 0;
     if (($5_1 | 0) != ($4_1 | 0)) {
      continue
     }
     break;
    };
   }
   $4_1 = $1941($0_1, 3582) - 1 | 0;
   $1970($0_1, 3582, $4_1);
   $1603($0_1, $0_1 + 16 | 0, $4_1 << 16 >> 16 << 4);
  }
  label$5 : {
   if (($2_1 | 0) <= 999) {
    $4_1 = $1944($0_1, 3588);
    if (($4_1 + $2_1 | 0) >= 1e3) {
     $8 = $0_1 + 16 | 0;
     $6_1 = $0_1 + 1584 | 0;
     while (1) {
      if (($1939($0_1, 3582) | 0) > 0) {
       label$10 : {
        if (($1944($0_1, 12) | 0) < 0) {
         break label$10
        }
        $5_1 = $1944($0_1, 4);
        $4_1 = $4_1 - $5_1 | 0;
        $1973($0_1, 3588, $4_1);
        $1603($6_1, ($5_1 << 1) + $6_1 | 0, $4_1 << 1);
        $4_1 = 0;
        $7_1 = $1939($0_1, 3582);
        if (($7_1 | 0) <= 0) {
         break label$10
        }
        while (1) {
         $9 = ($4_1 << 4) + $0_1 | 0;
         $10_1 = $1944($9, 12);
         if (($10_1 | 0) >= 0) {
          $1973($9 + 12 | 0, 0, $10_1 - $5_1 | 0)
         }
         $4_1 = $4_1 + 1 | 0;
         if (($7_1 | 0) != ($4_1 | 0)) {
          continue
         }
         break;
        };
       }
       $4_1 = $1941($0_1, 3582) - 1 | 0;
       $1970($0_1, 3582, $4_1);
       $1603($0_1, $8, $4_1 << 16 >> 16 << 4);
      }
      $4_1 = $1944($0_1, 3588);
      if (($4_1 + $2_1 | 0) > 999) {
       continue
      }
      break;
     };
    }
    $4_1 = $1939($0_1, 3582);
    $1970($0_1, 3582, $4_1 + 1 | 0);
    $4_1 = ($4_1 << 4) + $0_1 | 0;
    break label$5;
   }
   $1973($0_1, 3588, 0);
   $1970($0_1, 3582, 0);
   $4_1 = 0;
  }
  if (!$4_1) {
   return 0
  }
  $1973($4_1, 8, $3);
  $1973($4_1, 4, $2_1);
  $1973($4_1, 0, $1_1);
  if (!$2_1) {
   $1973($4_1, 12, -1);
   return 0;
  }
  $1_1 = $1944($0_1, 3588);
  $1973($4_1, 12, $1_1);
  $1973($0_1, 3588, $1_1 + $2_1 | 0);
  return (($1_1 << 1) + $0_1 | 0) + 1584 | 0;
 }
 
 function $676($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  $4_1 = $1944($0_1, 3696);
  $8 = $1944($0_1, 4);
  $9 = $28($2_1, ($3 << 1) + $2_1 | 0);
  $5_1 = $4_1 & 262144;
  label$1 : {
   if (!$5_1) {
    $4_1 = 0;
    if (($1944($0_1, 8) + $9 | 0) >= ($1944($0_1, 52) | 0)) {
     break label$1
    }
   }
   if (($1944($0_1, 12) | 0) <= ($3 + $8 | 0)) {
    $4_1 = 0;
    if (!$5_1) {
     break label$1
    }
    $4_1 = $3 << 2;
    $5_1 = ($3 | 0) <= 256 ? 256 : $3;
    $4_1 = (($3 | 0) < 8 ? 32 : ($4_1 | 0) < ($5_1 | 0) ? $4_1 : $5_1) + $8 | 0;
    $5_1 = $4_1 + 1 | 0;
    $7_1 = $4_1;
    $4_1 = $1944($0_1 + 16 | 0, 0);
    label$4 : {
     if (($7_1 | 0) < ($4_1 | 0)) {
      break label$4
     }
     $6_1 = 8;
     $7_1 = $4_1;
     $6_1 = $4_1 ? $4_1 + (($4_1 | 0) / 2 | 0) | 0 : $6_1;
     $4_1 = ($5_1 | 0) < ($6_1 | 0) ? $6_1 : $5_1;
     if (($7_1 | 0) >= ($4_1 | 0)) {
      break label$4
     }
     $6_1 = $16($4_1 << 1);
     $7_1 = $1944($0_1 + 20 | 0, 0);
     if ($7_1) {
      $1602($6_1, $7_1, $1944($0_1, 12) << 1);
      $17($1944($0_1, 20));
     }
     $1973($0_1, 16, $4_1);
     $1973($0_1, 20, $6_1);
    }
    $1973($0_1, 12, $5_1);
   }
   $5_1 = $0_1 + 20 | 0;
   $4_1 = $1944($5_1, 0);
   if (($1_1 | 0) != ($8 | 0)) {
    $6_1 = $4_1 + ($1_1 << 1) | 0;
    $1603($6_1 + ($3 << 1) | 0, $6_1, $8 - $1_1 << 1);
   }
   $1602($4_1 + ($1_1 << 1) | 0, $2_1, $3 << 1);
   $1968($0_1, 3694, 1);
   $1_1 = $1944($0_1, 4) + $3 | 0;
   $1973($0_1, 4, $1_1);
   $1973($0_1, 8, $1944($0_1, 8) + $9 | 0);
   $1970($1944($5_1, 0) + ($1_1 << 1) | 0, 0, 0);
   $4_1 = 1;
  }
  return $4_1;
 }
 
 function $677($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $7_1 = global$0 - 80 | 0;
  global$0 = $7_1;
  $8 = $1944(0, 73568);
  $10_1 = $1944($8, 7080);
  $1968($10_1, 140, 1);
  if (!$1937($10_1, 143)) {
   $9 = $5_1;
   if (!$9) {
    $9 = $1944(($1_1 << 4) + 48168 | 0, 0)
   }
   $5_1 = $9;
   $603($7_1, 64, $1_1, $2_1, $9);
   $10_1 = !($6_1 & 131074) | $6_1 | 134217744;
   label$3 : {
    if ($3) {
     $11_1 = $296();
     $301();
     $153($0_1);
     $13 = $292();
     $12_1 = Math_fround($11_1 + $1963($8 + 5500 | 0, 0));
     $12_1 = Math_fround($13 - Math_fround($12_1 + $12_1));
     $38($12_1 <= Math_fround(1.0) ? Math_fround(1.0) : $12_1);
     $1982($7_1, 72, 0, 0);
     $9 = 0;
     if ($633(19354, 0, $7_1, 64, $7_1 + 72 | 0, $10_1, 0)) {
      $9 = $605($7_1, $1944($8 + 8224 | 0, 0), $1_1, $2_1, $5_1)
     }
     $10_1 = $8 + 5476 | 0;
     $5_1 = $1959($10_1, 0);
     $14 = i64toi32_i32$HIGH_BITS;
     $1986($10_1, 0, $1963($8 + 5480 | 0, 0));
     $6_1 = $6_1 & 16384;
     if ($6_1) {
      $226(1)
     }
     $276(Math_fround(0.0), $1963($8, 5500));
     $1986($7_1, 76, $11_1);
     $1986($7_1, 72, $11_1);
     if ($570(17688, $7_1 + 72 | 0, 9216)) {
      $604($1_1, 45, $2_1, $2_1, (wasm2js_i32$0 = $1937($8 + 252 | 0, 0) ? $4_1 : $3, wasm2js_i32$1 = $3, wasm2js_i32$2 = $4_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
      $9 = 1;
     }
     $276(Math_fround(0.0), $1963($8, 5500));
     $1986($7_1, 76, $11_1);
     $1986($7_1, 72, $11_1);
     if ($570(17690, $7_1 + 72 | 0, 9216)) {
      $604($1_1, 43, $2_1, $2_1, (wasm2js_i32$0 = $1937($8 + 252 | 0, 0) ? $4_1 : $3, wasm2js_i32$1 = $3, wasm2js_i32$2 = $4_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
      $9 = 1;
     }
     if ($6_1) {
      $227()
     }
     $1_1 = $62($0_1);
     if (($0_1 | 0) != ($1_1 | 0)) {
      $276(Math_fround(0.0), $1963($8, 5500));
      $555($0_1, $1_1, 0);
     }
     $1982($8, 5476, $5_1, $14);
     $269();
     $275();
     break label$3;
    }
    $1982($7_1, 72, 0, 0);
    $9 = 0;
    if (!$633($0_1, 0, $7_1, 64, $7_1 + 72 | 0, $10_1, 0)) {
     break label$3
    }
    $9 = $605($7_1, $1944($8 + 8224 | 0, 0), $1_1, $2_1, $5_1);
   }
   if ($9) {
    $88($1944($8, 7240))
   }
  }
  global$0 = $7_1 + 80 | 0;
  return $9;
 }
 
 function $678($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $1982($5_1, 8, 0, 0);
  $0_1 = $633($0_1, 0, $1_1, $2_1, $5_1 + 8 | 0, $3, $4_1);
  global$0 = $5_1 + 16 | 0;
  return $0_1;
 }
 
 function $679($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  var $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0;
  $11_1 = $1944(0, 73568);
  $8 = $1944($11_1, 7080);
  $1968($8, 140, 1);
  if (!$1937($8, 143)) {
   $301();
   $153($0_1);
   $290($3, $292());
   $8 = 0;
   if (($3 | 0) > 0) {
    $12_1 = $1944(($1_1 << 4) + 48160 | 0, 0);
    $9 = $2_1;
    $2_1 = 0;
    while (1) {
     $266($10_1);
     if ($10_1) {
      $276(Math_fround(0.0), $1963($11_1, 5500))
     }
     $8 = $677(19354, $1_1, $9, $4_1, $5_1, $6_1, $7_1);
     $269();
     $291();
     $2_1 = $2_1 | $8;
     $8 = $2_1;
     $9 = $9 + $12_1 | 0;
     $10_1 = $10_1 + 1 | 0;
     if (($10_1 | 0) != ($3 | 0)) {
      continue
     }
     break;
    };
   }
   $9 = $8;
   $269();
   $1_1 = $62($0_1);
   if (($0_1 | 0) != ($1_1 | 0)) {
    $276(Math_fround(0.0), $1963($11_1 + 5500 | 0, 0));
    $555($0_1, $1_1, 0);
   }
   $275();
  }
  return $9 & 1;
 }
 
 function $689($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  return $633($0_1, 0, $1_1, $2_1, $3, $4_1 | 67108864, $5_1);
 }
 
 function $690($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $1982($6_1, 8, 0, 0);
  $0_1 = $633($0_1, $1_1, $2_1, $3, $6_1 + 8 | 0, $4_1, $5_1);
  global$0 = $6_1 + 16 | 0;
  return $0_1;
 }
 
 function $691($0_1, $1_1) {
  var $2_1 = 0;
  if ($1937($0_1 + 3697 | 0, 0) & 128) {
   return 0
  }
  $2_1 = 1;
  label$2 : {
   if (($1_1 | 0) <= 0) {
    break label$2
   }
   $2_1 = 0;
   label$3 : {
    label$4 : {
     $0_1 = $1944($0_1 + 20 | 0, 0) + ($1_1 << 1) | 0;
     $1_1 = $1941($0_1 - 2 | 0, 0);
     switch ($1_1 - 9 | 0) {
     case 2:
     case 3:
     case 5:
     case 6:
     case 7:
     case 8:
     case 9:
     case 10:
     case 11:
     case 12:
     case 13:
     case 14:
     case 15:
     case 16:
     case 17:
     case 18:
     case 19:
     case 20:
     case 21:
     case 22:
     case 24:
     case 25:
     case 26:
     case 27:
     case 28:
     case 29:
     case 30:
     case 33:
     case 34:
     case 36:
     case 37:
     case 38:
     case 39:
     case 40:
     case 41:
     case 42:
     case 43:
     case 44:
     case 45:
     case 46:
     case 47:
     case 48:
     case 49:
     case 51:
     case 52:
     case 53:
     case 54:
     case 55:
     case 56:
     case 57:
     case 58:
     case 59:
     case 60:
     case 61:
     case 62:
     case 63:
     case 64:
     case 65:
     case 66:
     case 67:
     case 68:
     case 69:
     case 70:
     case 71:
     case 72:
     case 73:
     case 74:
     case 75:
     case 76:
     case 77:
     case 78:
     case 79:
     case 80:
     case 81:
     case 83:
     case 85:
     case 86:
     case 87:
     case 88:
     case 89:
     case 90:
     case 91:
     case 92:
     case 93:
     case 94:
     case 95:
     case 96:
     case 97:
     case 98:
     case 99:
     case 100:
     case 101:
     case 102:
     case 103:
     case 104:
     case 105:
     case 106:
     case 107:
     case 108:
     case 109:
     case 110:
     case 111:
     case 112:
     case 113:
      break label$2;
     case 0:
     case 1:
     case 4:
     case 23:
     case 31:
     case 32:
     case 35:
     case 50:
     case 82:
     case 84:
     case 114:
     case 115:
     case 116:
      break label$3;
     default:
      break label$4;
     };
    }
    if (($1_1 | 0) == 12288) {
     break label$3
    }
    return 0;
   }
   label$5 : {
    label$6 : {
     $0_1 = $1941($0_1, 0);
     switch ($0_1 - 9 | 0) {
     case 0:
     case 1:
     case 4:
     case 23:
     case 31:
     case 32:
     case 35:
     case 50:
     case 82:
     case 84:
     case 114:
     case 115:
     case 116:
      break label$2;
     case 2:
     case 3:
     case 5:
     case 6:
     case 7:
     case 8:
     case 9:
     case 10:
     case 11:
     case 12:
     case 13:
     case 14:
     case 15:
     case 16:
     case 17:
     case 18:
     case 19:
     case 20:
     case 21:
     case 22:
     case 24:
     case 25:
     case 26:
     case 27:
     case 28:
     case 29:
     case 30:
     case 33:
     case 34:
     case 36:
     case 37:
     case 38:
     case 39:
     case 40:
     case 41:
     case 42:
     case 43:
     case 44:
     case 45:
     case 46:
     case 47:
     case 48:
     case 49:
     case 51:
     case 52:
     case 53:
     case 54:
     case 55:
     case 56:
     case 57:
     case 58:
     case 59:
     case 60:
     case 61:
     case 62:
     case 63:
     case 64:
     case 65:
     case 66:
     case 67:
     case 68:
     case 69:
     case 70:
     case 71:
     case 72:
     case 73:
     case 74:
     case 75:
     case 76:
     case 77:
     case 78:
     case 79:
     case 80:
     case 81:
     case 83:
     case 85:
     case 86:
     case 87:
     case 88:
     case 89:
     case 90:
     case 91:
     case 92:
     case 93:
     case 94:
     case 95:
     case 96:
     case 97:
     case 98:
     case 99:
     case 100:
     case 101:
     case 102:
     case 103:
     case 104:
     case 105:
     case 106:
     case 107:
     case 108:
     case 109:
     case 110:
     case 111:
     case 112:
     case 113:
      break label$5;
     default:
      break label$6;
     };
    }
    if (($0_1 | 0) == 12288) {
     break label$2
    }
   }
   $2_1 = 1;
  }
  return $2_1;
 }
 
 function $692($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = 0, $15_1 = 0, $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = 0, $19 = 0, $20_1 = Math_fround(0), $21_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $6_1 = $1944($1_1, 4);
  if (($2_1 | 0) == ($6_1 | 0)) {
   if ($3) {
    $1_1 = $1944($1_1 + 20 | 0, 0);
    $14 = $1_1 + ($6_1 << 1) | 0;
    $3 = $1944(0, 73568);
    $2_1 = $1944($3, 6464);
    $9 = $2_1 + 12 | 0;
    $17_1 = $1963($3, 6468);
    $20_1 = Math_fround($17_1 / $1963($2_1, 16));
    while (1) {
     label$3 : {
      if ($1_1 >>> 0 >= $14 >>> 0) {
       $10_1 = $12_1;
       $8 = $16_1;
       $7_1 = $5_1;
       break label$3;
      }
      $7_1 = $11_1;
      $10_1 = $13;
      $3 = 0;
      $8 = $5_1;
      label$6 : {
       label$7 : {
        label$8 : {
         $4_1 = $1941($1_1, 0);
         switch ($4_1 - 10 | 0) {
         case 3:
          break label$6;
         case 0:
          break label$8;
         default:
          break label$7;
         };
        }
        $7_1 = Math_fround($17_1 + $11_1);
        $12_1 = $7_1;
        $10_1 = $5_1 <= $13 ? $13 : $5_1;
        $16_1 = $10_1;
        $3 = 1;
        $8 = Math_fround(0.0);
        break label$6;
       }
       $8 = Math_fround($5_1 + Math_fround($20_1 * $1963((wasm2js_i32$0 = $1944($2_1, 8) + ($4_1 << 2) | 0, wasm2js_i32$1 = $9, wasm2js_i32$2 = ($1944($2_1, 0) | 0) > ($4_1 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0)));
      }
      $11_1 = $7_1;
      $13 = $10_1;
      $1_1 = $1_1 + 2 | 0;
      $5_1 = $8;
      $10_1 = $12_1;
      $8 = $16_1;
      $7_1 = $5_1;
      if (!$3) {
       continue
      }
     }
     break;
    };
    $1973($0_1, 16, $6_1);
    $1973($0_1, 12, 0);
    $1973($0_1, 4, 0);
    $1986($0_1, 0, $7_1 > $8 ? $7_1 : $8);
    $1986($0_1, 8, Math_fround($10_1 + ($7_1 > Math_fround(0.0) ? $17_1 : $10_1 == Math_fround(0.0) ? $17_1 : Math_fround(-0.0))));
    return;
   }
   $1973($0_1, 8, 1065353216);
   $1982($0_1, 0, 0, 0);
   $2_1 = 0;
   if (($6_1 | 0) > 0) {
    $14 = $1944($1_1 + 20 | 0, 0);
    $9 = $14 + ($6_1 << 1) | 0;
    $3 = 0;
    while (1) {
     $2_1 = $3;
     $15_1 = $14 + ($3 << 1) | 0;
     $3 = $15_1;
     while (1) {
      label$11 : {
       $1_1 = $3;
       if ($9 >>> 0 <= $1_1 >>> 0) {
        $4_1 = $1_1;
        break label$11;
       }
       $3 = $1_1 + 2 | 0;
       $4_1 = $3;
       if (($1941($1_1, 0) | 0) != 10) {
        continue
       }
      }
      break;
     };
     $4_1 = ($4_1 - $15_1 >> 1) + $2_1 | 0;
     $3 = $4_1;
     if (($4_1 | 0) < ($6_1 | 0)) {
      continue
     }
     break;
    };
   }
   $1973($0_1, 20, $2_1);
   $1973($0_1, 16, 0);
   $1973($0_1, 12, $4_1);
   return;
  }
  $15_1 = $1944($1_1 + 20 | 0, 0);
  $21_1 = $15_1 + ($6_1 << 1) | 0;
  $1_1 = $1944(0, 73568);
  $9 = $1944($1_1, 6464);
  $18_1 = $9 + 12 | 0;
  $8 = $1963($1_1, 6468);
  $16_1 = Math_fround($8 / $1963($9, 16));
  $1_1 = 0;
  $3 = 0;
  while (1) {
   $14 = $3;
   $10_1 = $5_1;
   $1986($0_1, 4, $5_1);
   $13 = Math_fround(0.0);
   $5_1 = Math_fround(0.0);
   $6_1 = $1_1;
   $19 = ($1_1 << 1) + $15_1 | 0;
   $1_1 = $19;
   $11_1 = Math_fround(0.0);
   while (1) {
    label$15 : {
     $12_1 = $11_1;
     $7_1 = $13;
     if ($1_1 >>> 0 >= $21_1 >>> 0) {
      $4_1 = $1_1;
      break label$15;
     }
     $11_1 = $5_1;
     $3 = 0;
     label$18 : {
      label$19 : {
       label$20 : {
        $4_1 = $1941($1_1, 0);
        switch ($4_1 - 10 | 0) {
        case 3:
         break label$18;
        case 0:
         break label$20;
        default:
         break label$19;
        };
       }
       $11_1 = Math_fround($8 + $5_1);
       $13 = $11_1;
       $3 = 1;
       $12_1 = Math_fround(0.0);
       break label$18;
      }
      $12_1 = Math_fround($12_1 + Math_fround($16_1 * $1963((wasm2js_i32$0 = $1944($9, 8) + ($4_1 << 2) | 0, wasm2js_i32$1 = $18_1, wasm2js_i32$2 = ($1944($9, 0) | 0) > ($4_1 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0)));
     }
     $5_1 = $11_1;
     $7_1 = $13;
     $1_1 = $1_1 + 2 | 0;
     $4_1 = $1_1;
     $11_1 = $12_1;
     if (!$3) {
      continue
     }
    }
    break;
   };
   $7_1 = Math_fround($7_1 + ($12_1 > Math_fround(0.0) ? $8 : $7_1 == Math_fround(0.0) ? $8 : Math_fround(-0.0)));
   $3 = $4_1 - $19 >> 1;
   $1_1 = $3 + $6_1 | 0;
   if (($1_1 | 0) <= ($2_1 | 0)) {
    $5_1 = Math_fround($10_1 + $7_1);
    $3 = $6_1;
    continue;
   }
   break;
  };
  $1973($0_1, 16, $3);
  $1973($0_1, 12, $6_1);
  $1973($0_1, 20, $14);
  $1986($0_1, 8, $7_1);
  $1973($0_1, 0, 0);
  if (($2_1 | 0) > ($6_1 | 0)) {
   $2_1 = $2_1 - $6_1 | 0;
   $3 = $6_1;
   $4_1 = 0;
   while (1) {
    $5_1 = Math_fround(-1.0);
    $1_1 = $1941(($3 << 1) + $15_1 | 0, 0);
    if (($1_1 | 0) != 10) {
     $5_1 = Math_fround($16_1 * $1963((wasm2js_i32$0 = $1944($9, 8) + ($1_1 << 2) | 0, wasm2js_i32$1 = $18_1, wasm2js_i32$2 = ($1944($9, 0) | 0) > ($1_1 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0))
    }
    $1986($0_1, 0, Math_fround($5_1 + $1963($0_1, 0)));
    $4_1 = $4_1 + 1 | 0;
    $3 = $4_1 + $6_1 | 0;
    if (($2_1 | 0) != ($4_1 | 0)) {
     continue
    }
    break;
   };
  }
 }
 
 function $693($0_1) {
  $1982($0_1, 0, 0, 0);
  $1982($0_1 + 40 | 0, 0, 0, 0);
  $1982($0_1 + 32 | 0, 0, 0, 0);
  $1982($0_1 + 24 | 0, 0, 0, 0);
  $1982($0_1 + 16 | 0, 0, 0, 0);
  $1982($0_1 + 8 | 0, 0, 0, 0);
 }
 
 function $694($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0;
  $3 = $1944($0_1, 20) + $1_1 | 0;
  $4_1 = $3 + $2_1 | 0;
  while (1) {
   $5_1 = $1937($4_1, 0);
   if ($5_1) {
    $1968($3, 0, $5_1);
    $3 = $3 + 1 | 0;
   }
   $4_1 = $4_1 + 1 | 0;
   if ($5_1) {
    continue
   }
   break;
  };
  $1968($3, 0, 0);
  $4_1 = $1944($0_1, 36);
  label$4 : {
   label$5 : {
    if (($4_1 | 0) >= ($1_1 + $2_1 | 0)) {
     $3 = $4_1 - $2_1 | 0;
     break label$5;
    }
    $3 = $1_1;
    if (($4_1 | 0) < ($3 | 0)) {
     break label$4
    }
   }
   $1973($0_1, 36, $3);
  }
  $1968($0_1, 32, 1);
  $1_1 = $1944($0_1, 36);
  $1973($0_1, 44, $1_1);
  $1973($0_1, 40, $1_1);
  $1973($0_1, 24, $1944($0_1, 24) - $2_1 | 0);
 }
 
 function $696($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = Math_fround(0), $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = 0, $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = 0, $12_1 = 0, $13 = Math_fround(0), $14 = 0, $15_1 = Math_fround(0), $16_1 = 0, $17_1 = 0, $18_1 = Math_fround(0), $19 = Math_fround(0), $20_1 = Math_fround(0), $21_1 = Math_fround(0), $22_1 = 0, $23_1 = 0, $24 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $6_1 = $1944($0_1, 4);
  $5_1 = ($6_1 | 0) > 0;
  label$1 : {
   if (($6_1 | 0) <= 0) {
    $4_1 = Math_fround(0.0);
    break label$1;
   }
   $14 = $1944($0_1 + 20 | 0, 0);
   $16_1 = $14 + ($6_1 << 1) | 0;
   $3 = $1944(0, 73568);
   $11_1 = $1944($3, 6464);
   $23_1 = $11_1 + 12 | 0;
   $15_1 = $1963($3, 6468);
   $24 = Math_fround($15_1 / $1963($11_1, 16));
   $3 = 0;
   label$3 : {
    while (1) {
     $21_1 = $4_1;
     $17_1 = $5_1;
     $18_1 = Math_fround(0.0);
     $19 = Math_fround(0.0);
     $20_1 = Math_fround(0.0);
     $7_1 = Math_fround(0.0);
     $12_1 = $3;
     $22_1 = ($3 << 1) + $14 | 0;
     $5_1 = $22_1;
     $4_1 = Math_fround(0.0);
     while (1) {
      label$5 : {
       if ($5_1 >>> 0 >= $16_1 >>> 0) {
        $13 = $18_1;
        $10_1 = $19;
        $8 = $5_1;
        $9 = $4_1;
        break label$5;
       }
       $9 = $20_1;
       $13 = $7_1;
       $3 = 0;
       $10_1 = $4_1;
       label$8 : {
        label$9 : {
         label$10 : {
          $8 = $1941($5_1, 0);
          switch ($8 - 10 | 0) {
          case 0:
           break label$10;
          case 3:
           break label$8;
          default:
           break label$9;
          };
         }
         $9 = Math_fround($15_1 + $20_1);
         $18_1 = $9;
         $13 = $4_1 <= $7_1 ? $7_1 : $4_1;
         $19 = $13;
         $3 = 1;
         $10_1 = Math_fround(0.0);
         break label$8;
        }
        $10_1 = Math_fround($4_1 + Math_fround($24 * $1963((wasm2js_i32$0 = $1944($11_1, 8) + ($8 << 2) | 0, wasm2js_i32$1 = $23_1, wasm2js_i32$2 = ($1944($11_1, 0) | 0) > ($8 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0)));
       }
       $20_1 = $9;
       $7_1 = $13;
       $4_1 = $10_1;
       $13 = $18_1;
       $10_1 = $19;
       $5_1 = $5_1 + 2 | 0;
       $8 = $5_1;
       $9 = $4_1;
       if (!$3) {
        continue
       }
      }
      break;
     };
     $3 = $8 - $22_1 | 0;
     if (($3 | 0) < 2) {
      return $6_1
     }
     if (!(!(Math_fround($21_1 + Math_fround(0.0)) > $2_1) | $12_1)) {
      return 0
     }
     $8 = $3 >> 1;
     $4_1 = Math_fround($21_1 + Math_fround($13 + ($9 > Math_fround(0.0) ? $15_1 : $13 == Math_fround(0.0) ? $15_1 : Math_fround(-0.0))));
     if ($4_1 > $2_1) {
      break label$3
     }
     $3 = $8 + $12_1 | 0;
     $5_1 = ($3 | 0) < ($6_1 | 0);
     if ($5_1) {
      continue
     }
     break;
    };
    $4_1 = $9 > $10_1 ? $9 : $10_1;
    break label$1;
   }
   $3 = $12_1;
   $5_1 = $17_1;
   $4_1 = $9 > $10_1 ? $9 : $10_1;
  }
  $12_1 = $3;
  $3 = $6_1;
  if ($5_1 & 1) {
   if ($1_1 < Math_fround(0.0)) {
    return $12_1
   }
   label$15 : {
    if (!($1_1 < $4_1) | ($8 | 0) <= 0) {
     break label$15
    }
    $16_1 = $1944($0_1 + 20 | 0, 0);
    $11_1 = $1944(0, 73568);
    $3 = 0;
    $4_1 = Math_fround(0.0);
    while (1) {
     $17_1 = $3;
     $3 = $3 + $12_1 | 0;
     $14 = $1941($16_1 + ($3 << 1) | 0, 0);
     $7_1 = Math_fround(-1.0);
     label$17 : {
      if (($14 | 0) == 10) {
       break label$17
      }
      $6_1 = $1944($11_1, 6464);
      $7_1 = Math_fround($1963((wasm2js_i32$0 = $1944($6_1, 8) + ($14 << 2) | 0, wasm2js_i32$1 = $6_1 + 12 | 0, wasm2js_i32$2 = ($1944($6_1, 0) | 0) > ($14 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0) * Math_fround($1963($11_1, 6468) / $1963($6_1, 16)));
     }
     $2_1 = $7_1;
     $7_1 = Math_fround($4_1 + $7_1);
     $6_1 = $7_1 > $1_1;
     label$18 : {
      if (!$6_1) {
       break label$18
      }
      if ($1_1 < Math_fround($4_1 + Math_fround($2_1 * Math_fround(.5)))) {
       $7_1 = $4_1;
       $5_1 = $3;
       break label$18;
      }
      $7_1 = $4_1;
      $5_1 = $3 + 1 | 0;
     }
     $4_1 = $7_1;
     if (!$6_1) {
      $3 = $17_1 + 1 | 0;
      if (($8 | 0) == ($3 | 0)) {
       break label$15
      }
      continue;
     }
     break;
    };
    return $5_1;
   }
   $3 = $8 + $12_1 | 0;
   $5_1 = $3 - 1 | 0;
   $3 = ($1941($1944($0_1 + 20 | 0, 0) + ($5_1 << 1) | 0, 0) | 0) == 10 ? $5_1 : $3;
  }
  return $3;
 }
 
 function $698($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = Math_fround(0), $14 = 0, $15_1 = Math_fround(0), $16_1 = 0, $17_1 = Math_fround(0), $18_1 = 0, $19 = 0, $20_1 = Math_fround(0), $21_1 = 0, $22_1 = Math_fround(0), $23_1 = 0, $24 = Math_fround(0), $25_1 = Math_fround(0), $26_1 = 0.0, $27_1 = 0, $28_1 = 0, $29_1 = 0, $30 = 0.0, $31_1 = 0.0, $32_1 = 0.0, $33_1 = 0, $34_1 = 0;
  $3 = global$0 - 208 | 0;
  global$0 = $3;
  $10_1 = $1944(0, 73568);
  $18_1 = $1944($10_1, 7080);
  $1968($18_1, 140, 1);
  if (!$1937($18_1, 143)) {
   $24 = $296();
   $25_1 = $292();
   if ($2_1 & 16) {
    $20_1 = Math_fround(0.0)
   } else {
    $20_1 = Math_fround($24 + $1963($10_1 + 5500 | 0, 0))
   }
   $23_1 = $62($0_1);
   $1973($10_1, 7220, 0);
   $301();
   $153($0_1);
   $4_1 = $2_1 & 32 ? $2_1 & -7340041 | 1048584 : $2_1;
   if (!($4_1 & 8)) {
    $7_1 = global$0 - 160 | 0;
    global$0 = $7_1;
    $6_1 = $4_1 & 7340032;
    $11_1 = $4_1 & 25165824;
    label$1 : {
     if ($11_1 ? $6_1 : 0) {
      break label$1
     }
     if (!$322(1958, 0)) {
      break label$1
     }
     $21_1 = $1944(0, 73568);
     $5_1 = $1944($21_1, 11972);
     label$3 : {
      if ($6_1) {
       break label$3
      }
      $12_1 = $5_1 & -7340033;
      $5_1 = $585(15314, ($5_1 & 1048576) >>> 20 | 0) ? $12_1 | 1048576 : $5_1;
      $5_1 = $585(14802, ($5_1 & 2097152) >>> 21 | 0) ? $12_1 | 2097152 : $5_1;
      if (!$585(1504, ($5_1 & 4194304) >>> 22 | 0)) {
       break label$3
      }
      $5_1 = $5_1 & -7340033 | 4194304;
     }
     if (!$11_1) {
      label$8 : {
       if ($6_1) {
        break label$8
       }
       $6_1 = $1944($1944(0, 73568), 7080);
       if ($1937($6_1, 143)) {
        break label$8
       }
       $593($1944($6_1 + 376 | 0, 0) ? 5 : 6);
      }
      $6_1 = $5_1 & -25165825;
      $5_1 = $585(16228, ($5_1 & 8388608) >>> 23 | 0) ? $6_1 | 8388608 : $5_1;
      $5_1 = $585(16670, ($5_1 & 16777216) >>> 24 | 0) ? $6_1 | 16777216 : $5_1;
     }
     $6_1 = $1944($1944(0, 73568), 7080);
     if (!$1937($6_1, 143)) {
      $593($1944($6_1 + 376 | 0, 0) ? 5 : 6)
     }
     $1982($7_1, 96, -1082130432, 0);
     if ($570(17283, $7_1 + 96 | 0, 0)) {
      $317(1159, 0)
     }
     if ($322(1159, 0)) {
      $8 = $1963($1_1, 8);
      $13 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
      label$12 : {
       if (Math_fround(Math_abs($13)) < Math_fround(2147483648.0)) {
        $6_1 = ~~$13;
        break label$12;
       }
       $6_1 = -2147483648;
      }
      $13 = $1963($1_1, 4);
      $17_1 = Math_fround(Math_fround(($13 < Math_fround(0.0) ? Math_fround(0.0) : $13 > Math_fround(1.0) ? Math_fround(1.0) : $13) * Math_fround(255.0)) + Math_fround(.5));
      label$14 : {
       if (Math_fround(Math_abs($17_1)) < Math_fround(2147483648.0)) {
        $11_1 = ~~$17_1;
        break label$14;
       }
       $11_1 = -2147483648;
      }
      $17_1 = $1963($1_1, 0);
      $9 = Math_fround(Math_fround(($17_1 < Math_fround(0.0) ? Math_fround(0.0) : $17_1 > Math_fround(1.0) ? Math_fround(1.0) : $17_1) * Math_fround(255.0)) + Math_fround(.5));
      label$16 : {
       if (Math_fround(Math_abs($9)) < Math_fround(2147483648.0)) {
        $12_1 = ~~$9;
        break label$16;
       }
       $12_1 = -2147483648;
      }
      $16_1 = 255;
      $19 = $4_1 & 2;
      if (!$19) {
       $9 = $1963($1_1, 12);
       $9 = Math_fround(Math_fround(($9 < Math_fround(0.0) ? Math_fround(0.0) : $9 > Math_fround(1.0) ? Math_fround(1.0) : $9) * Math_fround(255.0)) + Math_fround(.5));
       label$19 : {
        if (Math_fround(Math_abs($9)) < Math_fround(2147483648.0)) {
         $16_1 = ~~$9;
         break label$19;
        }
        $16_1 = -2147483648;
       }
      }
      $30 = +$8;
      $31_1 = +$13;
      $32_1 = +$17_1;
      $14 = $7_1 + 72 | 0;
      if ($19) {
       $26_1 = 1.0
      } else {
       $26_1 = +$1963($1_1, 12)
      }
      $1990($14, 0, $26_1);
      $1990($7_1 - -64 | 0, 0, $30);
      $1990($7_1, 56, $31_1);
      $1990($7_1, 48, $32_1);
      $14 = $7_1 + 96 | 0;
      $21($14, 64, 18009, $7_1 + 48 | 0);
      $1982($7_1, 88, 0, 0);
      if ($601($14, 0, 0, $7_1 + 88 | 0)) {
       $98($7_1 + 96 | 0)
      }
      $1973($7_1, 44, $16_1);
      $1973($7_1, 40, $6_1);
      $1973($7_1, 36, $11_1);
      $1973($7_1, 32, $12_1);
      $14 = $7_1 + 96 | 0;
      $21($14, 64, 18399, $7_1 + 32 | 0);
      $1982($7_1, 88, 0, 0);
      if ($601($14, 0, 0, $7_1 + 88 | 0)) {
       $98($7_1 + 96 | 0)
      }
      $1973($7_1, 24, $6_1);
      $1973($7_1, 20, $11_1);
      $1973($7_1, 16, $12_1);
      $14 = $7_1 + 96 | 0;
      $21($14, 64, 14729, $7_1 + 16 | 0);
      $1982($7_1, 88, 0, 0);
      if ($601($14, 0, 0, $7_1 + 88 | 0)) {
       $98($7_1 + 96 | 0)
      }
      label$25 : {
       if ($19) {
        break label$25
       }
       $1973($7_1, 12, $16_1);
       $1973($7_1, 8, $6_1);
       $1973($7_1, 4, $11_1);
       $1973($7_1, 0, $12_1);
       $6_1 = $7_1 + 96 | 0;
       $21($6_1, 64, 14711, $7_1);
       $1982($7_1, 88, 0, 0);
       if (!$601($6_1, 0, 0, $7_1 + 88 | 0)) {
        break label$25
       }
       $98($7_1 + 96 | 0);
      }
      $321();
     }
     $1973($21_1, 11972, $5_1);
     $321();
    }
    global$0 = $7_1 + 160 | 0;
   }
   if (!($4_1 & 7340032)) {
    $4_1 = $1944($10_1, 11972) & 7340032 | $4_1
   }
   if (!($4_1 & 25165824)) {
    $4_1 = $1944($10_1, 11972) & 25165824 | $4_1
   }
   if (!($4_1 & 100663296)) {
    $4_1 = $1944($10_1, 11972) & 100663296 | $4_1
   }
   if (!($4_1 & 402653184)) {
    $4_1 = $1944($10_1, 11972) & 402653184 | $4_1
   }
   $5_1 = $1944($10_1, 11972);
   $8 = $1963($1_1, 0);
   $1986($3, 176, $8);
   $1986($3, 180, $1963($1_1, 4));
   $1986($3, 184, $1963($1_1, 8));
   $7_1 = $4_1;
   $12_1 = $4_1 | $5_1 & -535822337;
   $16_1 = $12_1 & 2;
   if ($16_1) {
    $9 = Math_fround(1.0)
   } else {
    $9 = $1963($1_1, 12)
   }
   $1986($3, 188, $9);
   $27_1 = $7_1 & 269484032;
   label$13 : {
    if (($27_1 | 0) == 269484032) {
     $4_1 = $3 + 176 | 0;
     $33($8, $1963($3, 180), $1963($3, 184), $4_1, $4_1 | 4, $4_1 | 8);
     break label$13;
    }
    if (($7_1 & 136314880) != 136314880) {
     break label$13
    }
    $4_1 = $3 + 176 | 0;
    $32($8, $1963($3, 180), $1963($3, 184), $4_1, $4_1 | 4, $4_1 | 8);
    $4_1 = $1944(0, 73568);
    $5_1 = $1944($4_1, 11984);
    $6_1 = $1959($1_1, 0);
    $11_1 = i64toi32_i32$HIGH_BITS;
    $8 = $1963($1_1, 8);
    $1973($3, 108, 0);
    $1986($3, 104, $8);
    $1982($3, 96, $6_1, $11_1);
    if (($31($3 + 96 | 0) | 0) != ($5_1 | 0)) {
     break label$13
    }
    label$15 : {
     if ($1963($3, 180) != Math_fround(0.0)) {
      if ($1963($3, 176) != Math_fround(0.0)) {
       break label$15
      }
      if ($1963($4_1, 11976) != Math_fround(1.0)) {
       break label$15
      }
     }
     $1986($3, 176, $1963($4_1, 11976));
    }
    if ($1963($3, 184) != Math_fround(0.0)) {
     break label$13
    }
    $1986($3, 180, $1963($4_1, 11980));
   }
   $8 = $1963($3, 176);
   $8 = Math_fround(Math_fround($8 * Math_fround(255.0)) + ($8 >= Math_fround(0.0) ? Math_fround(.5) : Math_fround(-.5)));
   label$17 : {
    if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
     $4_1 = ~~$8;
     break label$17;
    }
    $4_1 = -2147483648;
   }
   $1973($3, 160, $4_1);
   $8 = $1963($3, 180);
   $8 = Math_fround(Math_fround($8 * Math_fround(255.0)) + ($8 >= Math_fround(0.0) ? Math_fround(.5) : Math_fround(-.5)));
   label$190 : {
    if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
     $5_1 = ~~$8;
     break label$190;
    }
    $5_1 = -2147483648;
   }
   $1973($3, 164, $5_1);
   $8 = $1963($3, 184);
   $8 = Math_fround(Math_fround($8 * Math_fround(255.0)) + ($8 >= Math_fround(0.0) ? Math_fround(.5) : Math_fround(-.5)));
   label$21 : {
    if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
     $5_1 = ~~$8;
     break label$21;
    }
    $5_1 = -2147483648;
   }
   $1973($3, 168, $5_1);
   $8 = Math_fround($25_1 - $20_1);
   $19 = $16_1 ? 3 : 4;
   $13 = $1963($3, 188);
   $13 = Math_fround(Math_fround($13 * Math_fround(255.0)) + ($13 >= Math_fround(0.0) ? Math_fround(.5) : Math_fround(-.5)));
   label$23 : {
    if (Math_fround(Math_abs($13)) < Math_fround(2147483648.0)) {
     $5_1 = ~~$13;
     break label$23;
    }
    $5_1 = -2147483648;
   }
   $1973($3, 172, $5_1);
   $13 = $1963($18_1, 208);
   $1986($18_1, 208, Math_fround($13 + ($1944($10_1 + 5564 | 0, 0) ? Math_fround(0.0) : $20_1)));
   $17_1 = $1963($18_1 + 212 | 0, 0);
   $21_1 = $12_1 & 32;
   label$251 : {
    if (!($21_1 | !($7_1 & 3145728))) {
     $9 = $1963($10_1 + 5500 | 0, 0);
     $28_1 = $7_1 & 16777216;
     $68($3 + 96 | 0, $28_1 ? 16662 : 16656, 0, 0, Math_fround(-1.0));
     $4_1 = $12_1 & 524288;
     $22_1 = $9;
     $15_1 = Math_fround($19 - 1 | 0);
     $9 = Math_fround(Math_fround($8 - Math_fround($9 * $15_1)) / Math_fround($19 | 0));
     label$27 : {
      if (Math_fround(Math_abs($9)) < Math_fround(2147483648.0)) {
       $5_1 = ~~$9;
       break label$27;
      }
      $5_1 = -2147483648;
     }
     $9 = Math_fround($5_1 | 0);
     $9 = $9 <= Math_fround(1.0) ? Math_fround(1.0) : $9;
     $15_1 = Math_fround($8 - Math_fround(Math_fround($22_1 + $9) * $15_1));
     label$29 : {
      if (Math_fround(Math_abs($15_1)) < Math_fround(2147483648.0)) {
       $5_1 = ~~$15_1;
       break label$29;
      }
      $5_1 = -2147483648;
     }
     $15_1 = Math_fround($5_1 | 0);
     $15_1 = $15_1 <= Math_fround(1.0) ? Math_fround(1.0) : $15_1;
     $29_1 = $1963($3, 96) >= $9 ? 0 : $7_1 & 2097152 ? 2 : 1;
     $33_1 = $4_1 ? 0 : 255;
     $22_1 = $4_1 ? Math_fround(0.0) : Math_fround(1.0);
     $34_1 = $12_1 & 8;
     $4_1 = 0;
     $14 = 0;
     $6_1 = 0;
     while (1) {
      if ($6_1) {
       $276(Math_fround(0.0), $1963($10_1, 5500))
      }
      $11_1 = $6_1 + 1 | 0;
      $38($11_1 >>> 0 < $19 >>> 0 ? $9 : $15_1);
      $5_1 = $4_1 & 1;
      $4_1 = $6_1 << 2;
      $6_1 = $1944($4_1 + 48320 | 0, 0);
      label$33 : {
       if ($28_1) {
        $1973($3, 96, 0);
        $1986($3, 200, $22_1);
        $4_1 = $630($6_1, 8, $4_1 + ($3 + 176 | 0) | 0, Math_fround(.003921568859368563), $3 + 96 | 0, $3 + 200 | 0, $1944(($4_1 + ($29_1 << 4) | 0) + 48384 | 0, 0), 0) | $5_1;
        $14 = $4_1 | $14 & 1;
        break label$33;
       }
       $1973($3, 96, 0);
       $1973($3, 200, $33_1);
       $4_1 = $630($6_1, 4, $4_1 + ($3 + 160 | 0) | 0, Math_fround(1.0), $3 + 96 | 0, $3 + 200 | 0, $1944(($4_1 + ($29_1 << 4) | 0) + 48336 | 0, 0), 0) | $5_1;
      }
      $5_1 = $4_1;
      if (!$34_1) {
       $324(1958, 1)
      }
      $6_1 = $11_1;
      if (($6_1 | 0) != ($19 | 0)) {
       continue
      }
      break;
     };
     $6_1 = $14 & 1;
     break label$251;
    }
    if (!($7_1 & 4194304)) {
     $5_1 = 0;
     $6_1 = 0;
     break label$251;
    }
    $5_1 = 0;
    $6_1 = 0;
    if ($21_1) {
     break label$251
    }
    $5_1 = $1944($3, 168);
    $5_1 = ($5_1 | 0) >= 255 ? 255 : $5_1;
    $5_1 = ($5_1 | 0) > 0 ? $5_1 : 0;
    $6_1 = $1944($3, 164);
    $6_1 = ($6_1 | 0) >= 255 ? 255 : $6_1;
    $6_1 = ($6_1 | 0) > 0 ? $6_1 : 0;
    $4_1 = ($4_1 | 0) >= 255 ? 255 : $4_1;
    $4_1 = ($4_1 | 0) > 0 ? $4_1 : 0;
    label$37 : {
     if (!$16_1) {
      $1973($3, 48, $4_1);
      $1973($3, 52, $6_1);
      $1973($3, 56, $5_1);
      $4_1 = $1944($3, 172);
      $4_1 = ($4_1 | 0) >= 255 ? 255 : $4_1;
      $1973($3, 60, ($4_1 | 0) > 0 ? $4_1 : 0);
      $21($3 + 96 | 0, 64, 14711, $3 + 48 | 0);
      break label$37;
     }
     $1973($3, 72, $5_1);
     $1973($3, 68, $6_1);
     $1973($3, 64, $4_1);
     $21($3 + 96 | 0, 64, 14729, $3 - -64 | 0);
    }
    $38($8);
    $1982($3, 200, 0, 0);
    $5_1 = $633(2138, 0, $3 + 96 | 0, 64, $3 + 200 | 0, 6, 0);
    label$39 : {
     if (!$5_1) {
      break label$39
     }
     $4_1 = $3 + 96 | 0;
     while (1) {
      $6_1 = $1937($4_1, 0) - 9 | 0;
      if (!($6_1 >>> 0 > 26 | !(1 << $6_1 & 75497473))) {
       $4_1 = $4_1 + 1 | 0;
       continue;
      }
      break;
     };
     $1983($3, 168, 0, 255);
     $1983($3, 160, 0, 0);
     $11_1 = $3 + 160 | 0;
     $6_1 = $11_1 | 4;
     $11_1 = $11_1 | 8;
     if (!$16_1) {
      $14 = $3 + 160 | 0;
      $1973($3, 28, $14 | 12);
      $1973($3, 24, $11_1);
      $1973($3, 20, $6_1);
      $1973($3, 16, $14);
      $1690($4_1, 14712, $3 + 16 | 0);
      break label$39;
     }
     $1973($3, 40, $11_1);
     $1973($3, 36, $6_1);
     $1973($3, 32, $3 + 160 | 0);
     $1690($4_1, 14730, $3 + 32 | 0);
    }
    if (!($12_1 & 8)) {
     $324(1958, 1)
    }
    $6_1 = 0;
   }
   label$44 : {
    if ($12_1 & 16) {
     $4_1 = 0;
     break label$44;
    }
    $9 = Math_fround(0.0);
    label$46 : {
     if ($21_1) {
      break label$46
     }
     $9 = Math_fround(0.0);
     if (!$1944($10_1, 5564)) {
      break label$46
     }
     $9 = Math_fround($8 + $1963($10_1 + 5500 | 0, 0));
    }
    $8 = $9;
    $1986($18_1 + 212 | 0, 0, $17_1);
    $1986($18_1, 208, Math_fround($13 + $8));
    $8 = $1963($1_1, 8);
    $9 = $1963($1_1, 4);
    $15_1 = $1963($1_1, 0);
    if ($16_1) {
     $22_1 = Math_fround(1.0)
    } else {
     $22_1 = $1963($1_1, 12)
    }
    $1986($3, 108, $22_1);
    $1986($3, 104, $8);
    $1986($3, 100, $9);
    $1986($3, 96, $15_1);
    $1982($3, 88, 0, 0);
    $1983($3, 8, 0, 0);
    if (!(!$700(7267, $3 + 96 | 0, $12_1, $3 + 8 | 0) | $12_1 & 4)) {
     $1982($10_1, 11988, $1959($3, 96), i64toi32_i32$HIGH_BITS);
     $1982($10_1 + 11996 | 0, 0, $1959($3 + 104 | 0, 0), i64toi32_i32$HIGH_BITS);
     $317(6273, 0);
     $8 = $1963($10_1 + 7252 | 0, 0);
     $1986($3, 204, Math_fround($1963($10_1 + 7264 | 0, 0) + $1963($10_1 + 5496 | 0, 0)));
     $1986($3, 200, Math_fround($8 + Math_fround(-1.0)));
     $1982($3, 80, 0, 0);
     $250($3 + 200 | 0, 0, $3 + 80 | 0);
    }
    if (!($12_1 & 8)) {
     $324(1958, 1)
    }
    label$51 : {
     if (!$322(6273, 0)) {
      $4_1 = 0;
      break label$51;
     }
     $4_1 = $1944($10_1, 7080);
     label$53 : {
      if (($0_1 | 0) == ($23_1 | 0)) {
       break label$53
      }
      $555($0_1, $23_1, 0);
      $11_1 = $1944($1944(0, 73568), 7080);
      $1968($11_1, 140, 1);
      if ($1937($11_1, 143)) {
       break label$53
      }
      $1982($3, 200, 0, 0);
      $212($3 + 200 | 0, Math_fround(-1.0));
     }
     $38(Math_fround($24 * Math_fround(12.0)));
     $2_1 = $701(6271, $1_1, $2_1 & 529072130 | 7602304, $10_1 + 11988 | 0);
     $321();
     $5_1 = $2_1 | $5_1;
    }
   }
   if (!($12_1 & 128 | ($0_1 | 0) == ($23_1 | 0))) {
    if (!$21_1) {
     $20_1 = Math_fround($25_1 + $1963($10_1 + 5500 | 0, 0))
    }
    $8 = $1963($10_1 + 5480 | 0, 0);
    $1986($18_1, 208, Math_fround($13 + $20_1));
    $1986($18_1 + 212 | 0, 0, Math_fround($17_1 + $8));
    $555($0_1, $23_1, 0);
   }
   $0_1 = $4_1;
   label$56 : {
    if (!($5_1 & !$4_1)) {
     break label$56
    }
    if (!$6_1) {
     $4_1 = 0;
     while (1) {
      $2_1 = $4_1 << 2;
      $1986($2_1 + ($3 + 176 | 0) | 0, 0, Math_fround(Math_fround($1944($2_1 + ($3 + 160 | 0) | 0, 0) | 0) / Math_fround(255.0)));
      $4_1 = $4_1 + 1 | 0;
      if (($4_1 | 0) != 4) {
       continue
      }
      break;
     };
    }
    $4_1 = $3 + 176 | 0;
    $2_1 = $4_1 | 8;
    $4_1 = $4_1 | 4;
    if (($7_1 & 136314880) == 136314880) {
     $20_1 = $1963($3, 176);
     $1986($10_1, 11976, $20_1);
     $8 = $1963($3, 180);
     $1986($10_1, 11980, $8);
     $33($20_1, $8, $1963($3, 184), $3 + 176 | 0, $4_1, $2_1);
     $1973($3, 108, 0);
     $1986($3, 104, $1963($3, 184));
     $1982($3, 96, $1960($3, 176), i64toi32_i32$HIGH_BITS);
     $1973($10_1, 11984, $31($3 + 96 | 0));
    }
    if (($27_1 | 0) == 269484032) {
     $32($1963($3, 176), $1963($3, 180), $1963($3, 184), $3 + 176 | 0, $4_1, $2_1)
    }
    $1986($1_1, 0, $1963($3, 176));
    $1986($1_1, 4, $1963($3, 180));
    $1986($1_1, 8, $1963($3, 184));
    if ($16_1) {
     break label$56
    }
    $1986($1_1, 12, $1963($3, 188));
   }
   $269();
   $275();
   label$61 : {
    if (!($1937($10_1 + 7248 | 0, 0) & 1)) {
     $4_1 = $5_1;
     break label$61;
    }
    if ($12_1 & 512) {
     $4_1 = $5_1;
     break label$61;
    }
    if (!$337()) {
     $4_1 = $5_1;
     break label$61;
    }
    $4_1 = $5_1;
    $2_1 = $338(14967, 0);
    if ($2_1) {
     $4_1 = $1944($2_1, 0);
     $1980($1_1, $1957($4_1), i64toi32_i32$HIGH_BITS);
     $1971($1_1 + 8 | 0, 0, $1942($4_1 + 8 | 0, 0));
     $4_1 = 1;
    }
    $5_1 = $338(14960, 0);
    if ($5_1) {
     $1602($1_1, $1944($5_1, 0), $19 << 2);
     $4_1 = 1;
     $2_1 = 1;
    } else {
     $2_1 = ($2_1 | 0) != 0
    }
    if (!(!$2_1 | !($7_1 & 268435456))) {
     $32($1963($1_1, 0), $1963($1_1, 4), $1963($1_1, 8), $1_1, $1_1 + 4 | 0, $1_1 + 8 | 0)
    }
    $339();
   }
   label$69 : {
    if (!$0_1) {
     break label$69
    }
    $1_1 = $1944($10_1, 7136);
    if (!$1_1) {
     break label$69
    }
    if (($1944($10_1, 7184) | 0) != ($0_1 | 0)) {
     break label$69
    }
    $1973($10_1, 7240, $1_1);
   }
   if ($4_1) {
    $88($1944($10_1, 7240))
   }
  }
  global$0 = $3 + 208 | 0;
  return $4_1;
 }
 
 function $700($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = 0, $12_1 = 0, $13 = Math_fround(0), $14 = 0, $15_1 = Math_fround(0), $16_1 = 0.0, $17_1 = 0.0, $18_1 = 0.0, $19 = Math_fround(0);
  $4_1 = global$0 - 240 | 0;
  global$0 = $4_1;
  $11_1 = $1944(0, 73568);
  $6_1 = $1944($11_1, 7080);
  $1968($6_1, 140, 1);
  if (!$1937($6_1, 143)) {
   $14 = $76($6_1, $0_1);
   $5_1 = $296();
   if ($1963($3, 0) == Math_fround(0.0)) {
    $1986($3, 0, $5_1)
   }
   if ($1963($3, 4) == Math_fround(0.0)) {
    $1986($3, 4, $5_1)
   }
   $7_1 = $1959($6_1, 208);
   $9 = i64toi32_i32$HIGH_BITS;
   $8 = $1963($3, 0);
   $13 = $1963($6_1, 208);
   $15_1 = $1963($6_1 + 212 | 0, 0);
   $10_1 = $1963($3, 4);
   $1986($4_1 + 236 | 0, 0, Math_fround($15_1 + $10_1));
   $1986($4_1, 232, Math_fround($13 + $8));
   $1983($4_1, 224, $7_1, $9);
   $7_1 = $4_1 + 224 | 0;
   if ($5_1 <= $10_1) {
    $5_1 = $1963($11_1 + 5480 | 0, 0)
   } else {
    $5_1 = Math_fround(0.0)
   }
   $277($7_1, $5_1);
   $3 = 0;
   if ($213($7_1, $14, 0, 0)) {
    $3 = $569($4_1 + 224 | 0, $14, $4_1 + 223 | 0, $4_1 + 222 | 0, 0);
    $9 = $4_1 + 208 | 0;
    $1983($9, 0, $1959($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
    $1983($4_1, 200, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
    $7_1 = $2_1 & 2 ? $2_1 & -393217 : $2_1;
    if ($7_1 & 268435456) {
     $2_1 = $4_1 + 200 | 0;
     $33($1963($4_1, 200), $1963($4_1, 204), $1963($4_1, 208), $2_1, $2_1 | 4, $9);
    }
    $1973($4_1, 196, 1065353216);
    $1986($4_1, 192, $1963($4_1, 208));
    $1982($4_1, 184, $1960($4_1, 200), i64toi32_i32$HIGH_BITS);
    $5_1 = $1963($11_1 + 5484 | 0, 0);
    $1983($4_1 + 176 | 0, 0, $1960($4_1 + 232 | 0, 0), i64toi32_i32$HIGH_BITS);
    $1983($4_1, 168, $1960($4_1, 224), i64toi32_i32$HIGH_BITS);
    $10_1 = Math_fround(($8 < $10_1 ? $8 : $10_1) / Math_fround(2.990000009536743));
    $13 = Math_fround($10_1 * Math_fround(.5));
    $2_1 = $13 > $5_1;
    $8 = Math_fround(0.0);
    $9 = $7_1 & 1024;
    if (!$9) {
     $12_1 = $4_1 + 180 | 0;
     $1986($12_1, 0, Math_fround($1963($12_1, 0) + Math_fround(-.75)));
     $1986($4_1, 168, Math_fround($1963($4_1, 168) + Math_fround(.75)));
     $1986($4_1, 172, Math_fround($1963($4_1, 172) + Math_fround(.75)));
     $1986($4_1, 176, Math_fround($1963($4_1, 176) + Math_fround(-.75)));
     $8 = Math_fround(-.75);
    }
    $5_1 = $2_1 ? $5_1 : $13;
    label$8 : {
     label$9 : {
      if (!($7_1 & 262144)) {
       break label$9
      }
      if (!($1963($4_1, 212) < Math_fround(1.0))) {
       break label$9
      }
      $2_1 = $1944($6_1, 580);
      $1986($4_1, 164, $1963($4_1, 172));
      $13 = $1963($4_1, 168);
      $1986($4_1, 160, Math_fround($10_1 + $13));
      $1983($4_1, 152, $1960($4_1, 176), i64toi32_i32$HIGH_BITS);
      $15_1 = $1963($4_1, 176);
      $12_1 = $52($4_1 + 200 | 0);
      $1986($4_1, 148, $8);
      $1986($4_1, 144, Math_fround($8 - $10_1));
      $1983($4_1, 48, $1959($4_1, 160), i64toi32_i32$HIGH_BITS);
      $1983($4_1, 40, $1960($4_1, 152), i64toi32_i32$HIGH_BITS);
      $1983($4_1, 32, $1959($4_1, 144), i64toi32_i32$HIGH_BITS);
      $482($2_1, $4_1 + 48 | 0, $4_1 + 40 | 0, $12_1, $10_1, $4_1 + 32 | 0, $5_1, 160);
      $2_1 = $1944($6_1, 580);
      $1986($4_1, 132, $1963($4_1 + 180 | 0, 0));
      $8 = Math_fround(Math_fround(Math_fround($13 + $15_1) * Math_fround(.5)) + Math_fround(.5));
      label$10 : {
       if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
        $12_1 = ~~$8;
        break label$10;
       }
       $12_1 = -2147483648;
      }
      $1986($4_1, 128, Math_fround($12_1 | 0));
      $401($2_1, $4_1 + 168 | 0, $4_1 + 128 | 0, $52($4_1 + 184 | 0), $5_1, 80);
      break label$8;
     }
     $2_1 = $7_1 & 131072 ? $4_1 + 200 | 0 : $4_1 + 184 | 0;
     $1983($4_1 + 136 | 0, 0, $1959($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1983($4_1, 128, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
     $2_1 = $1944($6_1, 580);
     if ($1963($4_1, 140) < Math_fround(1.0)) {
      $1983($4_1, 120, $1960($4_1, 168), i64toi32_i32$HIGH_BITS);
      $1983($4_1, 112, $1960($4_1, 176), i64toi32_i32$HIGH_BITS);
      $12_1 = $52($4_1 + 128 | 0);
      $1986($4_1, 108, $8);
      $1986($4_1, 104, $8);
      $1983($4_1, 72, $1960($4_1, 120), i64toi32_i32$HIGH_BITS);
      $1983($4_1, 64, $1960($4_1, 112), i64toi32_i32$HIGH_BITS);
      $1983($4_1, 56, $1959($4_1, 104), i64toi32_i32$HIGH_BITS);
      $482($2_1, $4_1 + 72 | 0, $4_1 - -64 | 0, $12_1, $10_1, $4_1 + 56 | 0, $5_1, 0);
      break label$8;
     }
     $12_1 = $2_1;
     $2_1 = $4_1 + 168 | 0;
     $401($12_1, $2_1, $2_1 + 8 | 0, $52($4_1 + 128 | 0), $5_1, 0);
    }
    $73($4_1 + 224 | 0, $14, 1);
    label$13 : {
     if ($9) {
      break label$13
     }
     if ($1963($11_1 + 5488 | 0, 0) > Math_fround(0.0)) {
      $2_1 = $1960($4_1, 224);
      $6_1 = i64toi32_i32$HIGH_BITS;
      $1983($4_1, 96, $2_1, $6_1);
      $9 = $1960($4_1, 232);
      $12_1 = i64toi32_i32$HIGH_BITS;
      $1983($4_1, 88, $9, $12_1);
      $1983($4_1, 24, $2_1, $6_1);
      $1983($4_1, 16, $9, $12_1);
      $72($4_1 + 24 | 0, $4_1 + 16 | 0, $5_1);
      break label$13;
     }
     $400($1944($6_1, 580), $4_1 + 224 | 0, $4_1 + 232 | 0, $51(7, Math_fround(1.0)), $5_1, 0, Math_fround(1.0));
    }
    label$15 : {
     if ($7_1 & 512) {
      break label$15
     }
     if (($1944($11_1, 7136) | 0) != ($14 | 0)) {
      break label$15
     }
     if (!$334(0)) {
      break label$15
     }
     label$16 : {
      if ($7_1 & 2) {
       $336(14967, $4_1 + 200 | 0, 12, 2);
       break label$16;
      }
      $336(14960, $4_1 + 200 | 0, 16, 2);
     }
     $1983($4_1, 8, 0, 0);
     $1982($4_1, 80, 0, 0);
     $700($0_1, $1_1, $7_1, $4_1 + 8 | 0);
     $276(Math_fround(0.0), Math_fround(-1.0));
     $555(6176, 0, 0);
     $335();
    }
    label$18 : {
     if ($7_1 & 64) {
      break label$18
     }
     if (!($1937($4_1, 223) & 255)) {
      break label$18
     }
     $6_1 = 0;
     $2_1 = global$0 - 208 | 0;
     global$0 = $2_1;
     $11_1 = $1944(0, 73568);
     $141(1);
     $7_1 = $7_1 & 403046402;
     if ($0_1) {
      $6_1 = $62($0_1)
     }
     label$2 : {
      if ($0_1 >>> 0 >= $6_1 >>> 0) {
       break label$2
      }
      $555($0_1, $6_1, 0);
      $0_1 = $1944($1944(0, 73568), 7080);
      if ($1937($0_1, 143)) {
       break label$2
      }
      $593($1944($0_1 + 376 | 0, 0) ? 5 : 6);
     }
     $5_1 = $1963($1_1, 8);
     $13 = Math_fround(1.0);
     $14 = $7_1 & 2;
     if (!$14) {
      $13 = $1963($1_1, 12)
     }
     $19 = $1963($11_1, 6468);
     $15_1 = $1963($11_1 + 5480 | 0, 0);
     $8 = $1963($1_1, 4);
     $10_1 = $1963($1_1, 0);
     $1986($2_1, 204, $13);
     $1986($2_1, 200, $5_1);
     $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
     label$4 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $0_1 = ~~$5_1;
       break label$4;
      }
      $0_1 = -2147483648;
     }
     $1986($2_1, 196, $8);
     $5_1 = Math_fround(Math_fround(($8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > Math_fround(1.0) ? Math_fround(1.0) : $8) * Math_fround(255.0)) + Math_fround(.5));
     label$6 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $6_1 = ~~$5_1;
       break label$6;
      }
      $6_1 = -2147483648;
     }
     $1986($2_1, 192, $10_1);
     $5_1 = Math_fround(Math_fround(($10_1 < Math_fround(0.0) ? Math_fround(0.0) : $10_1 > Math_fround(1.0) ? Math_fround(1.0) : $10_1) * Math_fround(255.0)) + Math_fround(.5));
     label$80 : {
      if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
       $11_1 = ~~$5_1;
       break label$80;
      }
      $11_1 = -2147483648;
     }
     $9 = 255;
     if (!$14) {
      $5_1 = $1963($1_1, 12);
      $5_1 = Math_fround(Math_fround(($5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1) * Math_fround(255.0)) + Math_fround(.5));
      label$11 : {
       if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
        $9 = ~~$5_1;
        break label$11;
       }
       $9 = -2147483648;
      }
     }
     $5_1 = Math_fround(Math_fround($19 * Math_fround(3.0)) + Math_fround($15_1 + $15_1));
     $1986($2_1, 188, $5_1);
     $1986($2_1, 184, $5_1);
     $1983($2_1, 176, $1960($2_1, 184), i64toi32_i32$HIGH_BITS);
     $700(1849, $2_1 + 192 | 0, $7_1 & 403046402 | 64, $2_1 + 176 | 0);
     $276(Math_fround(0.0), Math_fround(-1.0));
     label$131 : {
      if ($7_1 & 402653184 ? $7_1 & 134217728 : 1) {
       $16_1 = +$1963($1_1, 8);
       $17_1 = +$1963($1_1, 4);
       $18_1 = +$1963($1_1, 0);
       if ($14) {
        $1990($2_1 + 104 | 0, 0, $16_1);
        $1990($2_1 + 96 | 0, 0, $17_1);
        $1990($2_1 + 88 | 0, 0, $18_1);
        $1973($2_1 + 84 | 0, 0, $0_1);
        $1973($2_1 + 80 | 0, 0, $6_1);
        $1973($2_1, 76, $11_1);
        $1973($2_1, 72, $0_1);
        $1973($2_1, 68, $6_1);
        $1973($2_1, 64, $11_1);
        $557(18038, $2_1 - -64 | 0);
        break label$131;
       }
       $5_1 = $1963($1_1, 12);
       $1990($2_1 + 48 | 0, 0, $16_1);
       $1990($2_1 + 40 | 0, 0, $17_1);
       $1990($2_1 + 32 | 0, 0, $18_1);
       $1973($2_1 + 28 | 0, 0, $9);
       $1973($2_1 + 24 | 0, 0, $0_1);
       $1973($2_1 + 20 | 0, 0, $6_1);
       $1973($2_1 + 16 | 0, 0, $11_1);
       $1990($2_1 + 56 | 0, 0, +$5_1);
       $1973($2_1, 12, $9);
       $1973($2_1, 8, $0_1);
       $1973($2_1, 4, $6_1);
       $1973($2_1, 0, $11_1);
       $557(18091, $2_1);
       break label$131;
      }
      if (!($7_1 & 268435456)) {
       break label$131
      }
      $16_1 = +$1963($1_1, 8);
      $17_1 = +$1963($1_1, 4);
      $18_1 = +$1963($1_1, 0);
      if ($14) {
       $1990($2_1 + 160 | 0, 0, $16_1);
       $1990($2_1, 152, $17_1);
       $1990($2_1, 144, $18_1);
       $557(9709, $2_1 + 144 | 0);
       break label$131;
      }
      $5_1 = $1963($1_1, 12);
      $1990($2_1 + 128 | 0, 0, $16_1);
      $1990($2_1 + 136 | 0, 0, +$5_1);
      $1990($2_1, 120, $17_1);
      $1990($2_1, 112, $18_1);
      $557(9735, $2_1 + 112 | 0);
     }
     $142();
     global$0 = $2_1 + 208 | 0;
    }
   }
   $7_1 = $3;
  }
  global$0 = $4_1 + 240 | 0;
  return $7_1;
 }
 
 function $701($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = 0, $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = Math_fround(0), $16_1 = 0, $17_1 = Math_fround(0), $18_1 = 0, $19 = Math_fround(0), $20_1 = 0, $21_1 = Math_fround(0), $22_1 = Math_fround(0), $23_1 = 0, $24 = Math_fround(0), $25_1 = 0, $26_1 = Math_fround(0), $27_1 = 0, $28_1 = 0, $29_1 = Math_fround(0), $30 = 0, $31_1 = Math_fround(0), $32_1 = 0, $33_1 = Math_fround(0), $34_1 = 0, $35_1 = 0, $36_1 = Math_fround(0), $37 = Math_fround(0), $38_1 = Math_fround(0), $39_1 = Math_fround(0), $40_1 = 0, $41_1 = 0, $42_1 = Math_fround(0), $43_1 = Math_fround(0), $44_1 = 0, $45_1 = 0;
  $4_1 = global$0 - 576 | 0;
  global$0 = $4_1;
  $20_1 = $1944(0, 73568);
  $27_1 = $1944($20_1, 7080);
  $1968($27_1, 140, 1);
  if (!$1937($27_1, 143)) {
   $9 = $1944($27_1, 580);
   $11_1 = $292();
   $1973($20_1, 7220, 0);
   $153($0_1);
   $12_1 = ($2_1 ^ -1) >>> 4 & 16 | $2_1;
   $301();
   if (!($2_1 & 8)) {
    $18_1 = global$0 - 32 | 0;
    global$0 = $18_1;
    $23_1 = $12_1 & 100663296;
    $34_1 = $12_1 & 65538;
    label$1 : {
     if ($34_1 ? $23_1 : 0) {
      break label$1
     }
     if (!$322(1958, 0)) {
      break label$1
     }
     $25_1 = $1944(0, 73568);
     if (!$23_1) {
      $32_1 = $12_1 & 2;
      $5_1 = $1963($25_1, 6468);
      $15_1 = $296();
      $26_1 = $1963($25_1 + 5500 | 0, 0);
      $5_1 = Math_fround($5_1 * Math_fround(8.0));
      $1986($18_1, 24, $5_1);
      $15_1 = Math_fround($5_1 - Math_fround($15_1 + $26_1));
      $1986($18_1, 28, $15_1 >= Math_fround(1.0) ? $15_1 : Math_fround(1.0));
      $289($5_1);
      while (1) {
       $8 = $16_1;
       label$5 : {
        if (($8 | 0) != 1) {
         break label$5
        }
        $16_1 = $1944($1944(0, 73568), 7080);
        if ($1937($16_1, 143)) {
         break label$5
        }
        $593($1944($16_1 + 376 | 0, 0) ? 5 : 6);
       }
       $266($8);
       $16_1 = ($8 ? 424 : 33554856) | $32_1;
       $16_1 = ($8 | 0) == 1 ? $16_1 | 67108864 : $16_1;
       $278($18_1 + 16 | 0);
       if ($601(11380, 0, 0, $18_1 + 24 | 0)) {
        $1973($25_1, 11972, $1944($25_1, 11972) & -100663297 | $16_1 & 100663296)
       }
       $279($18_1 + 16 | 0);
       $35_1 = $16_1 & 2;
       $28_1 = $35_1 ? 12 : 16;
       $1604($28_1 + $18_1 | 0, 0, $35_1 << 1);
       $701(6251, $1602($18_1, $1_1, $28_1), $16_1, 0);
       $269();
       $16_1 = $8 + 1 | 0;
       if (!$8) {
        continue
       }
       break;
      };
      $291();
     }
     label$7 : {
      if ($34_1) {
       break label$7
      }
      label$8 : {
       if ($23_1) {
        break label$8
       }
       $8 = $1944($1944(0, 73568), 7080);
       if ($1937($8, 143)) {
        break label$8
       }
       $593($1944($8 + 376 | 0, 0) ? 5 : 6);
      }
      $1968($18_1, 0, $1937($25_1 + 11974 | 0, 0) & 1);
      if (!$583(6687, $18_1)) {
       break label$7
      }
      $1973($25_1, 11972, $1944($25_1, 11972) & -65537 | $1937($18_1, 0) << 16);
     }
     $321();
    }
    global$0 = $18_1 + 32 | 0;
   }
   if ($2_1 & 100663296) {
    $2_1 = $12_1
   } else {
    $2_1 = $1944($20_1, 11972) & 100663296;
    $2_1 = $12_1 | ($2_1 ? $2_1 : 33554432);
   }
   if (!($2_1 & 402653184)) {
    $12_1 = $1944($20_1, 11972) & 402653184;
    $2_1 = $2_1 | ($12_1 ? $12_1 : 134217728);
   }
   if (!($2_1 & 8)) {
    $2_1 = $1944($20_1, 11972) & 65536 | $2_1
   }
   $1983($4_1, 504, $1959($27_1, 208), i64toi32_i32$HIGH_BITS);
   $26_1 = $296();
   $33_1 = $1963($20_1 + 5500 | 0, 0);
   $17_1 = $1963($4_1, 504);
   $16_1 = $2_1;
   $27_1 = $2_1 & 2;
   $35_1 = $27_1 ? 12 : 16;
   $1602($4_1 + 480 | 0, $1_1, $35_1);
   $34_1 = $2_1 & 65538;
   $5_1 = Math_fround($11_1 - Math_fround(Math_fround((($34_1 | 0) == 65536 ? 2 : 1) | 0) * Math_fround($26_1 + $33_1)));
   $15_1 = $5_1 <= $26_1 ? $26_1 : $5_1;
   $6_1 = Math_fround($15_1 * Math_fround(.5));
   $1986($4_1, 476, Math_fround($6_1 + $1963($4_1, 508)));
   $1986($4_1, 472, Math_fround($17_1 + Math_fround(Math_fround($26_1 + $15_1) * Math_fround(.5))));
   $1973($4_1, 468, 0);
   $43_1 = Math_fround($15_1 * Math_fround(.07999999821186066));
   $10_1 = Math_fround($6_1 - $43_1);
   $5_1 = Math_fround($15_1 * Math_fround(.027000000700354576));
   label$9 : {
    if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$5_1;
     break label$9;
    }
    $2_1 = -2147483648;
   }
   $5_1 = Math_fround($10_1 - Math_fround($2_1 | 0));
   $1986($4_1, 464, $5_1);
   $1986($4_1, 460, Math_fround($5_1 * Math_fround(-.8660249710083008)));
   $11_1 = Math_fround($5_1 * Math_fround(-.5));
   $1986($4_1, 456, $11_1);
   $1986($4_1, 452, Math_fround($5_1 * Math_fround(.8660249710083008)));
   $1986($4_1, 448, $11_1);
   $5_1 = $1963($1_1, 0);
   $1986($4_1, 444, $5_1);
   $11_1 = $1963($1_1, 4);
   $1986($4_1, 440, $11_1);
   $7_1 = $1963($1_1, 8);
   $1986($4_1, 436, $7_1);
   $1986($4_1, 432, $5_1);
   $1986($4_1, 428, $11_1);
   $1986($4_1, 424, $7_1);
   $17_1 = Math_fround($17_1 + $15_1);
   $25_1 = $16_1 & 134217728;
   $13 = Math_fround($26_1 * Math_fround(.20000000298023224));
   label$11 : {
    if (Math_fround(Math_abs($13)) < Math_fround(2147483648.0)) {
     $32_1 = ~~$13;
     break label$11;
    }
    $32_1 = -2147483648;
   }
   $17_1 = Math_fround($33_1 + $17_1);
   label$13 : {
    if ($25_1) {
     $32($5_1, $11_1, $7_1, $4_1 + 444 | 0, $4_1 + 440 | 0, $4_1 + 436 | 0);
     $2_1 = $1944(0, 73568);
     $12_1 = $1944($2_1, 11984);
     $8 = $1959($1_1, 0);
     $18_1 = i64toi32_i32$HIGH_BITS;
     $5_1 = $1963($1_1, 8);
     $1973($4_1, 364, 0);
     $1986($4_1, 360, $5_1);
     $1982($4_1, 352, $8, $18_1);
     if (($31($4_1 + 352 | 0) | 0) != ($12_1 | 0)) {
      break label$13
     }
     label$15 : {
      if ($1963($4_1, 440) != Math_fround(0.0)) {
       if ($1963($4_1, 444) != Math_fround(0.0)) {
        break label$15
       }
       if ($1963($2_1, 11976) != Math_fround(1.0)) {
        break label$15
       }
      }
      $1986($4_1, 444, $1963($2_1, 11976));
     }
     if ($1963($4_1, 436) != Math_fround(0.0)) {
      break label$13
     }
     $1986($4_1, 440, $1963($2_1, 11980));
     break label$13;
    }
    if (!($16_1 & 268435456)) {
     break label$13
    }
    $33($5_1, $11_1, $7_1, $4_1 + 432 | 0, $4_1 + 428 | 0, $4_1 + 424 | 0);
   }
   $38_1 = Math_fround($26_1 + $17_1);
   $224(8, 1);
   $28_1 = $16_1 & 67108864;
   label$17 : {
    if ($28_1) {
     $5_1 = $1963($20_1, 5500);
     $1986($4_1, 356, $15_1);
     $1986($4_1, 352, Math_fround($26_1 + Math_fround($15_1 + $5_1)));
     $573(1861, $4_1 + 352 | 0, 0);
     $12_1 = 0;
     $8 = 0;
     $2_1 = 0;
     label$20 : {
      if (!$191()) {
       break label$20
      }
      $11_1 = $1963($20_1 + 232 | 0, 0);
      $5_1 = $1963($4_1, 476);
      $11_1 = Math_fround($11_1 - $5_1);
      $14 = $1963($20_1 + 228 | 0, 0);
      $13 = $1963($4_1, 472);
      $7_1 = Math_fround($14 - $13);
      $13 = Math_fround($1963($20_1 + 908 | 0, 0) - $13);
      $19 = Math_fround($1963($20_1 + 912 | 0, 0) - $5_1);
      $5_1 = Math_fround(Math_fround($13 * $13) + Math_fround($19 * $19));
      $14 = Math_fround($10_1 + Math_fround(-1.0));
      $12_1 = 0;
      label$21 : {
       if (!($5_1 >= Math_fround($14 * $14))) {
        break label$21
       }
       $14 = Math_fround($6_1 + Math_fround(1.0));
       $12_1 = 0;
       if (!($5_1 <= Math_fround($14 * $14))) {
        break label$21
       }
       $5_1 = $11_1;
       __inlined_func$1592 : {
        if (!(((wasm2js_scratch_store_f32($5_1), wasm2js_scratch_load_i32(2)) & 2147483647) >>> 0 < 2139095041 & ((wasm2js_scratch_store_f32($7_1), wasm2js_scratch_load_i32(2)) & 2147483647) >>> 0 <= 2139095040)) {
         $5_1 = Math_fround($5_1 + $7_1);
         break __inlined_func$1592;
        }
        $8 = (wasm2js_scratch_store_f32($7_1), wasm2js_scratch_load_i32(2));
        if (($8 | 0) == 1065353216) {
         $5_1 = $1594($5_1);
         break __inlined_func$1592;
        }
        $18_1 = $8 >>> 30 & 2;
        $12_1 = (wasm2js_scratch_store_f32($5_1), wasm2js_scratch_load_i32(2));
        $2_1 = $18_1 | $12_1 >>> 31;
        folding_inner0 : {
         label$41 : {
          $12_1 = $12_1 & 2147483647;
          label$52 : {
           if (!$12_1) {
            label$73 : {
             switch ($2_1 - 2 | 0) {
             case 0:
              $5_1 = Math_fround(3.1415927410125732);
              break __inlined_func$1592;
             case 1:
              break label$73;
             default:
              break label$52;
             };
            }
            $5_1 = Math_fround(-3.1415927410125732);
            break __inlined_func$1592;
           }
           $8 = $8 & 2147483647;
           if (($8 | 0) != 2139095040) {
            if (!$8 | !(($12_1 | 0) != 2139095040 & $12_1 >>> 0 <= $8 + 218103808 >>> 0)) {
             break folding_inner0
            }
            label$135 : {
             if ($18_1) {
              $14 = Math_fround(0.0);
              if ($8 >>> 0 > $12_1 + 218103808 >>> 0) {
               break label$135
              }
             }
             $14 = $1594(Math_fround(Math_abs(Math_fround($5_1 / $7_1))));
            }
            $5_1 = $14;
            label$156 : {
             switch ($2_1 | 0) {
             case 1:
              $5_1 = Math_fround(-$5_1);
              break __inlined_func$1592;
             case 2:
              $5_1 = Math_fround(Math_fround(3.1415927410125732) - Math_fround($5_1 + Math_fround(8.742277657347586e-08)));
              break __inlined_func$1592;
             case 0:
              break label$52;
             default:
              break label$156;
             };
            }
            $5_1 = Math_fround(Math_fround($5_1 + Math_fround(8.742277657347586e-08)) + Math_fround(-3.1415927410125732));
            break __inlined_func$1592;
           }
           if (($12_1 | 0) == 2139095040) {
            break label$41
           }
           $5_1 = $1963(($2_1 << 2) + 56744 | 0, 0);
          }
          break __inlined_func$1592;
         }
         $5_1 = $1963(($2_1 << 2) + 56728 | 0, 0);
         break __inlined_func$1592;
        }
        $5_1 = (wasm2js_scratch_store_i32(2, (wasm2js_scratch_store_f32($5_1), wasm2js_scratch_load_i32(2)) & -2147483648 | 1070141403), wasm2js_scratch_load_f32());
       }
       $5_1 = Math_fround(Math_fround($5_1 / Math_fround(3.1415927410125732)) * Math_fround(.5));
       $1986($4_1, 444, $5_1 < Math_fround(0.0) ? Math_fround($5_1 + Math_fround(1.0)) : $5_1);
       $12_1 = 1;
      }
      $14 = Math_fround(Math_fround($1963($4_1, 444) * Math_fround(-2.0)) * Math_fround(3.1415927410125732));
      $5_1 = $1601($14);
      $14 = $1688($14);
      $1986($4_1, 356, Math_fround(Math_fround($13 * $14) + Math_fround($19 * $5_1)));
      $1986($4_1, 352, Math_fround(Math_fround($13 * $5_1) - Math_fround($14 * $19)));
      if (!$12($4_1 + 464 | 0, $4_1 + 456 | 0, $4_1 + 448 | 0, $4_1 + 352 | 0)) {
       $8 = $12_1;
       $2_1 = 0;
       break label$20;
      }
      $1986($4_1, 356, Math_fround(Math_fround($7_1 * $14) + Math_fround($11_1 * $5_1)));
      $1986($4_1, 352, Math_fround(Math_fround($7_1 * $5_1) - Math_fround($14 * $11_1)));
      if (!$12($4_1 + 464 | 0, $4_1 + 456 | 0, $4_1 + 448 | 0, $4_1 + 352 | 0)) {
       $23_1 = $4_1 + 400 | 0;
       $2_1 = $4_1 + 448 | 0;
       $30 = $4_1 + 352 | 0;
       $7_1 = $1963($30, 0);
       $8 = $4_1 + 464 | 0;
       $14 = $1963($8, 0);
       $18_1 = $4_1 + 456 | 0;
       $19 = $1963($18_1, 0);
       $5_1 = Math_fround($19 - $14);
       $13 = $1963($30, 4);
       $24 = $1963($8, 4);
       $22_1 = $1963($18_1, 4);
       $11_1 = Math_fround($22_1 - $24);
       $21_1 = Math_fround(Math_fround(Math_fround($7_1 - $14) * $5_1) + Math_fround(Math_fround($13 - $24) * $11_1));
       label$12 : {
        if ($21_1 < Math_fround(0.0)) {
         $5_1 = $1963($8, 0);
         $36_1 = $1963($8, 4);
         break label$12;
        }
        $29_1 = Math_fround(Math_fround($5_1 * $5_1) + Math_fround($11_1 * $11_1));
        if ($21_1 > $29_1) {
         $5_1 = $1963($18_1, 0);
         $36_1 = $1963($18_1, 4);
         break label$12;
        }
        $5_1 = Math_fround($14 + Math_fround(Math_fround($5_1 * $21_1) / $29_1));
        $36_1 = Math_fround($24 + Math_fround(Math_fround($11_1 * $21_1) / $29_1));
       }
       $11_1 = $5_1;
       $5_1 = $1963($2_1, 0);
       $21_1 = Math_fround($5_1 - $19);
       $29_1 = $1963($2_1, 4);
       $31_1 = Math_fround($29_1 - $22_1);
       $37 = Math_fround(Math_fround(Math_fround($7_1 - $19) * $21_1) + Math_fround(Math_fround($13 - $22_1) * $31_1));
       label$43 : {
        if ($37 < Math_fround(0.0)) {
         $19 = $1963($18_1, 0);
         $21_1 = $1963($18_1, 4);
         break label$43;
        }
        $39_1 = Math_fround(Math_fround($21_1 * $21_1) + Math_fround($31_1 * $31_1));
        if ($37 > $39_1) {
         $19 = $1963($2_1, 0);
         $21_1 = $1963($2_1, 4);
         break label$43;
        }
        $19 = Math_fround($19 + Math_fround(Math_fround($21_1 * $37) / $39_1));
        $21_1 = Math_fround($22_1 + Math_fround(Math_fround($31_1 * $37) / $39_1));
       }
       $14 = Math_fround($14 - $5_1);
       $24 = Math_fround($24 - $29_1);
       $22_1 = Math_fround(Math_fround(Math_fround($7_1 - $5_1) * $14) + Math_fround(Math_fround($13 - $29_1) * $24));
       label$74 : {
        if ($22_1 < Math_fround(0.0)) {
         $5_1 = $1963($2_1, 0);
         $14 = $1963($2_1, 4);
         break label$74;
        }
        $31_1 = Math_fround(Math_fround($14 * $14) + Math_fround($24 * $24));
        if ($22_1 > $31_1) {
         $5_1 = $1963($8, 0);
         $14 = $1963($8, 4);
         break label$74;
        }
        $5_1 = Math_fround($5_1 + Math_fround(Math_fround($14 * $22_1) / $31_1));
        $14 = Math_fround($29_1 + Math_fround(Math_fround($24 * $22_1) / $31_1));
       }
       $24 = Math_fround($7_1 - $11_1);
       $22_1 = Math_fround($24 * $24);
       $24 = Math_fround($13 - $36_1);
       $24 = Math_fround($22_1 + Math_fround($24 * $24));
       $22_1 = Math_fround($7_1 - $19);
       $29_1 = Math_fround($22_1 * $22_1);
       $22_1 = Math_fround($13 - $21_1);
       $22_1 = Math_fround($29_1 + Math_fround($22_1 * $22_1));
       $7_1 = Math_fround($7_1 - $5_1);
       $29_1 = Math_fround($7_1 * $7_1);
       $7_1 = Math_fround($13 - $14);
       $7_1 = Math_fround($29_1 + Math_fround($7_1 * $7_1));
       $7_1 = $7_1 > $22_1 ? $22_1 : $7_1;
       $7_1 = $7_1 > $24 ? $24 : $7_1;
       $2_1 = $7_1 == $22_1;
       $8 = $7_1 == $24;
       $1986($23_1, 4, $8 ? $36_1 : $2_1 ? $21_1 : $14);
       $1986($23_1, 0, $8 ? $11_1 : $2_1 ? $19 : $5_1);
       $1983($4_1, 352, $1960($4_1, 400), i64toi32_i32$HIGH_BITS);
      }
      $2_1 = $4_1 + 336 | 0;
      $8 = $4_1 + 352 | 0;
      $11_1 = $1963($8, 0);
      $18_1 = $4_1 + 464 | 0;
      $5_1 = $1963($18_1, 0);
      $7_1 = Math_fround($11_1 - $5_1);
      $23_1 = $4_1 + 448 | 0;
      $14 = $1963($23_1, 4);
      $11_1 = $1963($18_1, 4);
      $13 = Math_fround($14 - $11_1);
      $19 = Math_fround($1963($8, 4) - $11_1);
      $14 = Math_fround($1963($23_1, 0) - $5_1);
      $21_1 = Math_fround(Math_fround($7_1 * $13) - Math_fround($19 * $14));
      $8 = $4_1 + 456 | 0;
      $5_1 = Math_fround($1963($8, 0) - $5_1);
      $11_1 = Math_fround($1963($8, 4) - $11_1);
      $13 = Math_fround(Math_fround($5_1 * $13) - Math_fround($11_1 * $14));
      $1986($2_1, 0, Math_fround($21_1 / $13));
      $5_1 = Math_fround(Math_fround(Math_fround($5_1 * $19) - Math_fround($11_1 * $7_1)) / $13);
      $1986($4_1 + 568 | 0, 0, $5_1);
      $1986($4_1 + 400 | 0, 0, Math_fround(Math_fround(Math_fround(1.0) - $1963($2_1, 0)) - $5_1));
      $5_1 = Math_fround(Math_fround(1.0) - $1963($4_1, 336));
      $5_1 = $5_1 < Math_fround(9.999999747378752e-05) ? Math_fround(9.999999747378752e-05) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1;
      $1986($4_1, 436, $5_1);
      $5_1 = Math_fround($1963($4_1, 400) / $5_1);
      $1986($4_1, 440, $5_1 < Math_fround(9.999999747378752e-05) ? Math_fround(9.999999747378752e-05) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1);
      $8 = 1;
      $2_1 = 1;
     }
     if ($16_1 & 8) {
      break label$17
     }
     $324(1958, 1);
     break label$17;
    }
    $2_1 = 0;
    $12_1 = 0;
    $8 = 0;
    if (!($16_1 & 33554432)) {
     break label$17
    }
    $1986($4_1, 356, $15_1);
    $1986($4_1, 352, $15_1);
    $573(1862, $4_1 + 352 | 0, 0);
    $2_1 = $191();
    label$24 : {
     if (!$2_1) {
      break label$24
     }
     $11_1 = Math_fround($15_1 + Math_fround(-1.0));
     $5_1 = Math_fround(Math_fround($1963($20_1 + 228 | 0, 0) - $1963($4_1, 504)) / $11_1);
     $1986($4_1, 440, $5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1);
     $5_1 = Math_fround(Math_fround($1963($20_1 + 232 | 0, 0) - $1963($4_1, 508)) / $11_1);
     $1986($4_1, 436, $5_1 < Math_fround(0.0) ? Math_fround(1.0) : Math_fround(Math_fround(1.0) - ($5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1)));
     $12_1 = $1944($20_1, 11984);
     $8 = $1959($1_1, 0);
     $18_1 = i64toi32_i32$HIGH_BITS;
     $5_1 = $1963($1_1, 8);
     $1973($4_1, 364, 0);
     $1986($4_1, 360, $5_1);
     $1982($4_1, 352, $8, $18_1);
     if (($31($4_1 + 352 | 0) | 0) != ($12_1 | 0)) {
      break label$24
     }
     $1986($4_1, 444, $1963($20_1, 11976));
    }
    if (!($16_1 & 8)) {
     $324(1958, 1)
    }
    $1986($4_1, 356, $1963($4_1, 508));
    $1986($4_1, 352, $17_1);
    $12_1 = $4_1 + 352 | 0;
    $279($12_1);
    $1986($4_1, 356, $15_1);
    $1986($4_1, 352, $26_1);
    $573(10673, $12_1, 0);
    if (!$191()) {
     $12_1 = 0;
     $8 = $2_1;
     break label$17;
    }
    $5_1 = Math_fround(Math_fround($1963($20_1 + 232 | 0, 0) - $1963($4_1, 508)) / Math_fround($15_1 + Math_fround(-1.0)));
    $1986($4_1, 444, $5_1 < Math_fround(0.0) ? Math_fround(0.0) : $5_1 > Math_fround(1.0) ? Math_fround(1.0) : $5_1);
    $12_1 = 1;
    $8 = 1;
   }
   $5_1 = Math_fround($33_1 + $38_1);
   label$27 : {
    if (($34_1 | 0) != 65536) {
     break label$27
    }
    $1986($4_1, 356, $1963($4_1, 508));
    $1986($4_1, 352, $5_1);
    $18_1 = $4_1 + 352 | 0;
    $279($18_1);
    $1986($4_1, 356, $15_1);
    $1986($4_1, 352, $26_1);
    $573(13898, $18_1, 0);
    if (!$191()) {
     break label$27
    }
    $11_1 = Math_fround(Math_fround($1963($20_1 + 232 | 0, 0) - $1963($4_1, 508)) / Math_fround($15_1 + Math_fround(-1.0)));
    $1986($1_1, 12, $11_1 < Math_fround(0.0) ? Math_fround(1.0) : Math_fround(Math_fround(1.0) - ($11_1 > Math_fround(1.0) ? Math_fround(1.0) : $11_1)));
    $8 = 1;
   }
   $225();
   $23_1 = $16_1 & 256;
   if (!$23_1) {
    $276(Math_fround(0.0), $1963($20_1, 5500));
    $301();
   }
   $18_1 = $2_1;
   $2_1 = $16_1 & 128;
   label$30 : {
    if ($2_1) {
     break label$30
    }
    $30 = $62($0_1);
    if (($30 | 0) == ($0_1 | 0)) {
     break label$30
    }
    if ($23_1) {
     $276(Math_fround(0.0), $1963($20_1, 5500))
    }
    $555($0_1, $30, 0);
   }
   label$32 : {
    if ($23_1) {
     $0_1 = $8;
     break label$32;
    }
    $224(16, 1);
    $7_1 = $1963($1_1, 8);
    $13 = $1963($1_1, 4);
    $19 = $1963($1_1, 0);
    $11_1 = Math_fround(1.0);
    if ($27_1) {
     $14 = Math_fround(1.0)
    } else {
     $14 = $1963($1_1, 12)
    }
    $1986($4_1, 364, $14);
    $1986($4_1, 360, $7_1);
    $1986($4_1, 356, $13);
    $1986($4_1, 352, $19);
    if ($2_1) {
     $557(3061, 0)
    }
    $7_1 = Math_fround($26_1 + $26_1);
    $1986($4_1, 420, $7_1);
    $13 = Math_fround($26_1 * Math_fround(3.0));
    $1986($4_1, 416, $13);
    $1983($4_1, 232, $1959($4_1, 416), i64toi32_i32$HIGH_BITS);
    $0_1 = $16_1 & 403570752;
    $700(3040, $4_1 + 352 | 0, $0_1, $4_1 + 232 | 0);
    if ($3) {
     $557(8356, 0);
     $19 = $1963($3, 8);
     $33_1 = $1963($3, 4);
     $14 = $1963($3, 0);
     if (!$27_1) {
      $11_1 = $1963($3, 12)
     }
     $1986($4_1, 396, $7_1);
     $1986($4_1, 392, $13);
     $1986($4_1, 412, $11_1);
     $1986($4_1, 408, $19);
     $1986($4_1, 404, $33_1);
     $1986($4_1, 400, $14);
     $1983($4_1, 224, $1959($4_1, 392), i64toi32_i32$HIGH_BITS);
     if ($700(8345, $4_1 + 400 | 0, $0_1, $4_1 + 224 | 0)) {
      $1602($1_1, $3, $35_1);
      $0_1 = 1;
     } else {
      $0_1 = $8
     }
    } else {
     $0_1 = $8
    }
    $225();
    $275();
   }
   $3 = $0_1;
   $8 = $1_1 + 8 | 0;
   $27_1 = $1_1 + 4 | 0;
   label$40 : {
    if (($12_1 | $18_1) != 1) {
     break label$40
    }
    if ($25_1) {
     $33($1963($4_1, 444), $1963($4_1, 440), $1963($4_1, 436), $1_1, $27_1, $8);
     $1986($20_1, 11976, $1963($4_1, 444));
     $1986($20_1, 11980, $1963($4_1, 440));
     $0_1 = $1959($1_1, 0);
     $2_1 = i64toi32_i32$HIGH_BITS;
     $11_1 = $1963($1_1, 8);
     $1973($4_1, 364, 0);
     $1986($4_1, 360, $11_1);
     $1982($4_1, 352, $0_1, $2_1);
     $1973($20_1, 11984, $31($4_1 + 352 | 0));
     break label$40;
    }
    if (!($16_1 & 268435456)) {
     break label$40
    }
    $1986($1_1, 0, $1963($4_1, 444));
    $1986($1_1, 4, $1963($4_1, 440));
    $1986($1_1, 8, $1963($4_1, 436));
   }
   label$42 : {
    if ($16_1 & 32) {
     $0_1 = 0;
     break label$42;
    }
    $289(Math_fround(Math_fround($26_1 + (($34_1 | 0) == 65536 ? $5_1 : $17_1)) - $1963($4_1, 504)));
    $2_1 = $16_1 & 428736538;
    label$44 : {
     label$45 : {
      $23_1 = $16_1 & 7340032;
      if (!($23_1 ? $16_1 & 1048576 : 1)) {
       break label$45
      }
      if (!$698(13533, $1_1, $2_1 | 1048580)) {
       break label$45
      }
      $3 = 1;
      if ($1944($20_1, 7136)) {
       $0_1 = $1937($20_1, 7149)
      } else {
       $0_1 = 1
      }
      $0_1 = !$0_1;
      break label$44;
     }
     $0_1 = 0;
    }
    if (!$23_1 | $16_1 & 2097152) {
     $3 = $698(1859, $1_1, $2_1 | 2097156) | $3
    }
    if (!$23_1 | $16_1 & 4194304) {
     $3 = $698(1406, $1_1, $2_1 | 4194308) | $3
    }
    $291();
   }
   label$53 : {
    if (!$25_1 | !$0_1) {
     break label$53
    }
    $32($1963($1_1, 0), $1963($1_1, 4), $1963($1_1, 8), $4_1 + 352 | 0, $4_1 + 400 | 0, $4_1 + 336 | 0);
    if (!($1963($4_1, 352) <= Math_fround(0.0))) {
     break label$53
    }
    $11_1 = $1963($4_1, 444);
    if (!($11_1 > Math_fround(0.0))) {
     break label$53
    }
    $14 = $11_1;
    label$54 : {
     label$55 : {
      $11_1 = $1963($4_1, 336);
      if (!($11_1 <= Math_fround(0.0))) {
       break label$55
      }
      $7_1 = $1963($4_1, 436);
      if ($7_1 == $11_1) {
       break label$55
      }
      $11_1 = Math_fround($7_1 * Math_fround(.5));
      $21_1 = $1963($4_1, 440);
      break label$54;
     }
     if (!($1963($4_1, 400) <= Math_fround(0.0))) {
      break label$53
     }
     $21_1 = Math_fround($1963($4_1, 440) * Math_fround(.5));
    }
    $33($14, $21_1, $11_1, $1_1, $27_1, $8);
   }
   label$56 : {
    if (!$3) {
     break label$56
    }
    if ($25_1) {
     $11_1 = $1963($1_1, 0);
     $1986($4_1, 432, $11_1);
     $7_1 = $1963($1_1, 4);
     $1986($4_1, 428, $7_1);
     $13 = $1963($1_1, 8);
     $1986($4_1, 424, $13);
     $32($11_1, $7_1, $13, $4_1 + 444 | 0, $4_1 + 440 | 0, $4_1 + 436 | 0);
     $0_1 = $1944(0, 73568);
     $2_1 = $1944($0_1, 11984);
     $8 = $1959($1_1, 0);
     $25_1 = i64toi32_i32$HIGH_BITS;
     $11_1 = $1963($1_1, 8);
     $1973($4_1, 364, 0);
     $1986($4_1, 360, $11_1);
     $1982($4_1, 352, $8, $25_1);
     if (($31($4_1 + 352 | 0) | 0) != ($2_1 | 0)) {
      break label$56
     }
     label$58 : {
      if ($1963($4_1, 440) != Math_fround(0.0)) {
       if ($1963($4_1, 444) != Math_fround(0.0)) {
        break label$58
       }
       if ($1963($0_1, 11976) != Math_fround(1.0)) {
        break label$58
       }
      }
      $1986($4_1, 444, $1963($0_1, 11976));
     }
     if ($1963($4_1, 436) != Math_fround(0.0)) {
      break label$56
     }
     $1986($4_1, 440, $1963($0_1, 11980));
     break label$56;
    }
    if (!($16_1 & 268435456)) {
     break label$56
    }
    $11_1 = $1963($1_1, 0);
    $1986($4_1, 444, $11_1);
    $7_1 = $1963($1_1, 4);
    $1986($4_1, 440, $7_1);
    $13 = $1963($1_1, 8);
    $1986($4_1, 436, $13);
    $33($11_1, $7_1, $13, $4_1 + 432 | 0, $4_1 + 428 | 0, $4_1 + 424 | 0);
   }
   $11_1 = Math_fround($32_1 | 0);
   $7_1 = $1963($20_1, 5416);
   $13 = Math_fround(Math_fround(($7_1 < Math_fround(0.0) ? Math_fround(0.0) : $7_1 > Math_fround(1.0) ? Math_fround(1.0) : $7_1) * Math_fround(255.0)) + Math_fround(.5));
   label$60 : {
    if (Math_fround(Math_abs($13)) < Math_fround(2147483648.0)) {
     $0_1 = ~~$13;
     break label$60;
    }
    $0_1 = -2147483648;
   }
   $8 = $0_1 << 24;
   $0_1 = $8 | 255;
   $1973($4_1, 376, $0_1);
   $1973($4_1, 372, $8 | 16711935);
   $1973($4_1, 368, $8 | 16711680);
   $1973($4_1, 364, $8 | 16776960);
   $1973($4_1, 360, $8 | 65280);
   $1973($4_1, 356, $8 | 65535);
   $1973($4_1, 352, $0_1);
   $1986($4_1, 412, $7_1);
   $1973($4_1, 408, 1065353216);
   $1982($4_1, 400, 1065353216, 1065353216);
   $0_1 = $4_1 + 400 | 0;
   $33($1963($4_1, 444), Math_fround(1.0), Math_fround(1.0), $0_1, $4_1 + 404 | 0, $4_1 + 408 | 0);
   $27_1 = $31($0_1);
   $1986($4_1, 348, $1963($20_1, 5416));
   $1986($4_1, 344, $1963($4_1, 424));
   $1986($4_1, 340, $1963($4_1, 428));
   $1986($4_1, 336, $1963($4_1, 432));
   $23_1 = $31($4_1 + 336 | 0);
   $1983($4_1, 328, 0, 0);
   $32_1 = $8 | 8421504;
   $25_1 = $8 | 16777215;
   label$62 : {
    if ($28_1) {
     $0_1 = ((Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0) ? ~~$6_1 : -2147483648) | 0) / 12 | 0;
     $45_1 = ($0_1 | 0) <= 4 ? 4 : $0_1;
     $17_1 = Math_fround($6_1 + $10_1);
     $19 = Math_fround($17_1 * Math_fround(.5));
     $33_1 = Math_fround(Math_fround(.5) / $6_1);
     $38_1 = Math_fround(-$33_1);
     $2_1 = 0;
     while (1) {
      $28_1 = $1944($9, 24);
      $7_1 = Math_fround($2_1 | 0);
      $6_1 = Math_fround($7_1 / Math_fround(6.0));
      $6_1 = Math_fround(Math_fround(Math_fround($6_1 + $6_1) * Math_fround(3.1415927410125732)) + $38_1);
      $7_1 = Math_fround(Math_fround($7_1 + Math_fround(1.0)) / Math_fround(6.0));
      $7_1 = Math_fround(Math_fround(Math_fround($7_1 + $7_1) * Math_fround(3.1415927410125732)) + $33_1);
      $393($9, $4_1 + 472 | 0, $19, $6_1, $7_1, $45_1);
      $388($9, $1944($9, 92), $1944($9, 84), $25_1, 0, $43_1);
      $1973($9, 84, 0);
      $13 = $1688($6_1);
      $30 = $1944($9, 24);
      $14 = Math_fround($13 * $10_1);
      $13 = $1963($4_1, 476);
      $1986($4_1, 324, Math_fround($14 + $13));
      $14 = Math_fround($1601($6_1) * $10_1);
      $6_1 = $1963($4_1, 472);
      $1986($4_1, 320, Math_fround($14 + $6_1));
      $1986($4_1, 316, Math_fround($13 + Math_fround($1688($7_1) * $10_1)));
      $1986($4_1, 312, Math_fround($6_1 + Math_fround($1601($7_1) * $10_1)));
      $1983($4_1, 216, $1960($4_1, 320), i64toi32_i32$HIGH_BITS);
      $1983($4_1, 208, $1960($4_1, 312), i64toi32_i32$HIGH_BITS);
      $16_1 = $4_1 + 352 | 0;
      $0_1 = $1944($16_1 + ($2_1 << 2) | 0, 0);
      $2_1 = $2_1 + 1 | 0;
      $16_1 = $1944(($2_1 << 2) + $16_1 | 0, 0);
      if (($30 | 0) > ($28_1 | 0)) {
       $44_1 = $1944($9 + 32 | 0, 0);
       $30 = $44_1 + Math_imul($30, 20) | 0;
       $40_1 = $4_1 + 208 | 0;
       $21_1 = $1963($40_1, 0);
       $41_1 = $4_1 + 216 | 0;
       $14 = $1963($41_1, 0);
       $6_1 = Math_fround($21_1 - $14);
       $21_1 = $1963($40_1, 4);
       $24 = $1963($41_1, 4);
       $7_1 = Math_fround($21_1 - $24);
       $22_1 = Math_fround(Math_fround(1.0) / Math_fround(Math_fround($6_1 * $6_1) + Math_fround($7_1 * $7_1)));
       $40_1 = $0_1 & 255;
       $21_1 = Math_fround(($16_1 & 255) - $40_1 | 0);
       $41_1 = $0_1 >>> 16 & 255;
       $29_1 = Math_fround(($16_1 >>> 16 & 255) - $41_1 | 0);
       $0_1 = $0_1 >>> 8 & 255;
       $31_1 = Math_fround(($16_1 >>> 8 & 255) - $0_1 | 0);
       $37 = Math_fround($40_1 | 0);
       $36_1 = Math_fround($41_1 | 0);
       $39_1 = Math_fround($0_1 | 0);
       $0_1 = Math_imul($28_1, 20) + $44_1 | 0;
       while (1) {
        $13 = Math_fround($22_1 * Math_fround(Math_fround(Math_fround($1963($0_1, 0) - $14) * $6_1) + Math_fround($7_1 * Math_fround($1963($0_1, 4) - $24))));
        $13 = $13 < Math_fround(0.0) ? Math_fround(0.0) : $13 > Math_fround(1.0) ? Math_fround(1.0) : $13;
        $42_1 = Math_fround(Math_fround($31_1 * $13) + $39_1);
        label$3 : {
         if (Math_fround(Math_abs($42_1)) < Math_fround(2147483648.0)) {
          $16_1 = ~~$42_1;
          break label$3;
         }
         $16_1 = -2147483648;
        }
        $16_1 = $16_1 << 8;
        $42_1 = Math_fround(Math_fround($21_1 * $13) + $37);
        label$50 : {
         if (Math_fround(Math_abs($42_1)) < Math_fround(2147483648.0)) {
          $28_1 = ~~$42_1;
          break label$50;
         }
         $28_1 = -2147483648;
        }
        $16_1 = $16_1 | ($28_1 | $1937($0_1 + 19 | 0, 0) << 24);
        $13 = Math_fround(Math_fround($29_1 * $13) + $36_1);
        label$71 : {
         if (Math_fround(Math_abs($13)) < Math_fround(2147483648.0)) {
          $28_1 = ~~$13;
          break label$71;
         }
         $28_1 = -2147483648;
        }
        $1973($0_1, 16, $16_1 | $28_1 << 16);
        $0_1 = $0_1 + 20 | 0;
        if ($30 >>> 0 > $0_1 >>> 0) {
         continue
        }
        break;
       };
      }
      if (($2_1 | 0) != 6) {
       continue
      }
      break;
     };
     $6_1 = $1963($4_1, 444);
     $10_1 = Math_fround(Math_fround($6_1 + $6_1) * Math_fround(3.1415927410125732));
     $6_1 = $1688($10_1);
     $1986($4_1, 340, Math_fround(Math_fround(Math_fround($17_1 * $6_1) * Math_fround(.5)) + $1963($4_1, 476)));
     $10_1 = $1601($10_1);
     $1986($4_1, 336, Math_fround(Math_fround(Math_fround($17_1 * $10_1) * Math_fround(.5)) + $1963($4_1, 472)));
     $17_1 = Math_fround($43_1 * ($12_1 ? Math_fround(.6499999761581421) : Math_fround(.550000011920929)));
     $7_1 = Math_fround($17_1 / Math_fround(1.399999976158142));
     label$67 : {
      if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
       $0_1 = ~~$7_1;
       break label$67;
      }
      $0_1 = -2147483648;
     }
     $2_1 = $4_1 + 336 | 0;
     $0_1 = ($0_1 | 0) >= 32 ? 32 : $0_1;
     $0_1 = ($0_1 | 0) <= 9 ? 9 : $0_1;
     $408($9, $2_1, $17_1, $27_1, $0_1);
     $407($9, $2_1, Math_fround($17_1 + Math_fround(1.0)), $32_1, $0_1, Math_fround(1.0));
     $407($9, $2_1, $17_1, $25_1, $0_1, Math_fround(1.0));
     $13 = $1963($4_1, 464);
     $19 = $1963($4_1, 468);
     $17_1 = $1963($4_1, 476);
     $1986($4_1, 572, Math_fround(Math_fround(Math_fround($13 * $6_1) + Math_fround($10_1 * $19)) + $17_1));
     $7_1 = $1963($4_1, 472);
     $1986($4_1, 568, Math_fround($7_1 + Math_fround(Math_fround($13 * $10_1) - Math_fround($6_1 * $19))));
     $13 = $1963($4_1, 456);
     $19 = $1963($4_1, 460);
     $1986($4_1, 564, Math_fround($17_1 + Math_fround(Math_fround($13 * $6_1) + Math_fround($10_1 * $19))));
     $1986($4_1, 560, Math_fround($7_1 + Math_fround(Math_fround($13 * $10_1) - Math_fround($6_1 * $19))));
     $14 = $17_1;
     $17_1 = $1963($4_1, 448);
     $13 = $1963($4_1, 452);
     $1986($4_1, 556, Math_fround($14 + Math_fround(Math_fround($17_1 * $6_1) + Math_fround($10_1 * $13))));
     $1986($4_1, 552, Math_fround($7_1 + Math_fround(Math_fround($17_1 * $10_1) - Math_fround($6_1 * $13))));
     $260($4_1 + 544 | 0);
     $383($9, 6, 6);
     $0_1 = $1944($9, 56);
     $1970($0_1, 0, $1944($9, 40));
     $1973($9, 56, $0_1 + 2 | 0);
     $1982($1944($9, 52), 0, $1960($4_1, 568), i64toi32_i32$HIGH_BITS);
     $1982($1944($9, 52), 8, $1960($4_1, 544), i64toi32_i32$HIGH_BITS);
     $0_1 = $1944($9, 52);
     $1973($0_1, 16, $27_1);
     $1973($9, 52, $0_1 + 20 | 0);
     $2_1 = $1944($9, 40) + 1 | 0;
     $1973($9, 40, $2_1);
     $12_1 = $1944($9, 56);
     $1970($12_1, 0, $2_1);
     $1973($9, 56, $12_1 + 2 | 0);
     $1982($0_1, 20, $1960($4_1, 560), i64toi32_i32$HIGH_BITS);
     $1982($1944($9, 52), 8, $1960($4_1, 544), i64toi32_i32$HIGH_BITS);
     $0_1 = $1944($9, 52);
     $1973($0_1, 16, $27_1);
     $1973($9, 52, $0_1 + 20 | 0);
     $2_1 = $1944($9, 40) + 1 | 0;
     $1973($9, 40, $2_1);
     $12_1 = $1944($9, 56);
     $1970($12_1, 0, $2_1);
     $1973($9, 56, $12_1 + 2 | 0);
     $1982($0_1, 20, $1960($4_1, 552), i64toi32_i32$HIGH_BITS);
     $1982($1944($9, 52), 8, $1960($4_1, 544), i64toi32_i32$HIGH_BITS);
     $0_1 = $1944($9, 52);
     $1973($0_1, 16, $25_1);
     $1973($9, 52, $0_1 + 20 | 0);
     $2_1 = $1944($9, 40) + 1 | 0;
     $1973($9, 40, $2_1);
     $12_1 = $1944($9, 56);
     $1970($12_1, 0, $2_1);
     $1973($9, 56, $12_1 + 2 | 0);
     $1982($0_1, 20, $1960($4_1, 568), i64toi32_i32$HIGH_BITS);
     $1982($1944($9, 52), 8, $1960($4_1, 544), i64toi32_i32$HIGH_BITS);
     $0_1 = $1944($9, 52);
     $1973($0_1, 16, 0);
     $1973($9, 52, $0_1 + 20 | 0);
     $2_1 = $1944($9, 40) + 1 | 0;
     $1973($9, 40, $2_1);
     $12_1 = $1944($9, 56);
     $1970($12_1, 0, $2_1);
     $1973($9, 56, $12_1 + 2 | 0);
     $1982($0_1, 20, $1960($4_1, 560), i64toi32_i32$HIGH_BITS);
     $1982($1944($9, 52), 8, $1960($4_1, 544), i64toi32_i32$HIGH_BITS);
     $0_1 = $1944($9, 52);
     $1973($0_1, 16, $8);
     $1973($9, 52, $0_1 + 20 | 0);
     $2_1 = $1944($9, 40) + 1 | 0;
     $1973($9, 40, $2_1);
     $12_1 = $1944($9, 56);
     $1970($12_1, 0, $2_1);
     $1973($9, 56, $12_1 + 2 | 0);
     $1982($0_1, 20, $1960($4_1, 552), i64toi32_i32$HIGH_BITS);
     $1982($1944($9, 52), 8, $1960($4_1, 544), i64toi32_i32$HIGH_BITS);
     $0_1 = $1944($9, 52);
     $1973($0_1, 16, 0);
     $1973($9, 52, $0_1 + 20 | 0);
     $1973($9, 40, $1944($9, 40) + 1 | 0);
     $405($9, $4_1 + 568 | 0, $4_1 + 560 | 0, $4_1 + 552 | 0, $32_1, Math_fround(1.5));
     $14 = $1963($4_1, 564);
     $21_1 = $1963($4_1, 572);
     $10_1 = $1963($4_1, 556);
     $6_1 = $1963($4_1, 440);
     $17_1 = $6_1 < Math_fround(0.0) ? Math_fround(0.0) : $6_1 > Math_fround(1.0) ? Math_fround(1.0) : $6_1;
     $10_1 = Math_fround(Math_fround(Math_fround($21_1 - $10_1) * $17_1) + $10_1);
     $6_1 = Math_fround(Math_fround(1.0) - $1963($4_1, 436));
     $6_1 = $6_1 < Math_fround(0.0) ? Math_fround(0.0) : $6_1 > Math_fround(1.0) ? Math_fround(1.0) : $6_1;
     $1986($4_1, 332, Math_fround(Math_fround(Math_fround($14 - $10_1) * $6_1) + $10_1));
     $14 = $1963($4_1, 560);
     $21_1 = $1963($4_1, 568);
     $10_1 = $1963($4_1, 552);
     $10_1 = Math_fround(Math_fround(Math_fround($21_1 - $10_1) * $17_1) + $10_1);
     $1986($4_1, 328, Math_fround(Math_fround(Math_fround($14 - $10_1) * $6_1) + $10_1));
     break label$62;
    }
    if (!($16_1 & 33554432)) {
     break label$62
    }
    $1986($4_1, 340, Math_fround($15_1 + $1963($4_1, 508)));
    $1986($4_1, 336, Math_fround($15_1 + $1963($4_1, 504)));
    $0_1 = $4_1 + 504 | 0;
    $2_1 = $4_1 + 336 | 0;
    $402($9, $0_1, $2_1, $25_1, $27_1, $27_1, $25_1);
    $1986($4_1, 340, Math_fround($15_1 + $1963($4_1, 508)));
    $1986($4_1, 336, Math_fround($15_1 + $1963($4_1, 504)));
    $402($9, $0_1, $2_1, 0, 0, $8, $8);
    $1986($4_1, 300, Math_fround($15_1 + $1963($4_1, 508)));
    $1986($4_1, 296, Math_fround($15_1 + $1963($4_1, 504)));
    $0_1 = $1960($4_1, 504);
    $2_1 = i64toi32_i32$HIGH_BITS;
    $1983($4_1, 304, $0_1, $2_1);
    $1983($4_1, 200, $0_1, $2_1);
    $1983($4_1, 192, $1959($4_1, 296), i64toi32_i32$HIGH_BITS);
    $72($4_1 + 200 | 0, $4_1 + 192 | 0, Math_fround(0.0));
    $6_1 = $1963($4_1, 440);
    $10_1 = Math_fround(($6_1 < Math_fround(0.0) ? Math_fround(0.0) : $6_1 > Math_fround(1.0) ? Math_fround(1.0) : $6_1) * $15_1);
    $6_1 = $1963($4_1, 504);
    $10_1 = Math_fround(Math_fround($10_1 + $6_1) + Math_fround(.5));
    label$69 : {
     if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$10_1;
      break label$69;
     }
     $0_1 = -2147483648;
    }
    $10_1 = Math_fround($6_1 + Math_fround(2.0));
    $7_1 = Math_fround(Math_fround($15_1 + $6_1) + Math_fround(-2.0));
    $6_1 = Math_fround($0_1 | 0);
    $1986($4_1, 328, $6_1 < $10_1 ? $10_1 : $6_1 > $7_1 ? $7_1 : $6_1);
    $6_1 = Math_fround(Math_fround(1.0) - $1963($4_1, 436));
    $10_1 = Math_fround(($6_1 < Math_fround(0.0) ? Math_fround(0.0) : $6_1 > Math_fround(1.0) ? Math_fround(1.0) : $6_1) * $15_1);
    $6_1 = $1963($4_1, 508);
    $10_1 = Math_fround(Math_fround($10_1 + $6_1) + Math_fround(.5));
    label$712 : {
     if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$10_1;
      break label$712;
     }
     $0_1 = -2147483648;
    }
    $10_1 = Math_fround($6_1 + Math_fround(2.0));
    $7_1 = Math_fround(Math_fround($15_1 + $6_1) + Math_fround(-2.0));
    $6_1 = Math_fround($0_1 | 0);
    $1986($4_1, 332, $6_1 < $10_1 ? $10_1 : $6_1 > $7_1 ? $7_1 : $6_1);
    $6_1 = Math_fround($15_1 / Math_fround(6.0));
    $2_1 = 0;
    while (1) {
     $1986($4_1, 336, $17_1);
     $10_1 = $1963($4_1, 508);
     $1986($4_1, 340, Math_fround(Math_fround(Math_fround($2_1 | 0) * $6_1) + $10_1));
     $0_1 = $2_1 + 1 | 0;
     $1986($4_1, 572, Math_fround($10_1 + Math_fround(Math_fround($0_1 | 0) * $6_1)));
     $1986($4_1, 568, $38_1);
     $12_1 = $4_1 + 352 | 0;
     $2_1 = $1944($12_1 + ($2_1 << 2) | 0, 0);
     $8 = $2_1;
     $2_1 = $1944(($0_1 << 2) + $12_1 | 0, 0);
     $402($9, $4_1 + 336 | 0, $4_1 + 568 | 0, $8, $8, $2_1, $2_1);
     $2_1 = $0_1;
     if (($0_1 | 0) != 6) {
      continue
     }
     break;
    };
    $6_1 = $1963($4_1, 508);
    $1986($4_1, 292, $6_1);
    $1986($4_1, 280, $38_1);
    $1986($4_1, 284, Math_fround($15_1 + $6_1));
    $1986($4_1, 288, $17_1);
    $1983($4_1, 184, $1959($4_1, 288), i64toi32_i32$HIGH_BITS);
    $1983($4_1, 176, $1959($4_1, 280), i64toi32_i32$HIGH_BITS);
    $6_1 = Math_fround(Math_fround($6_1 + Math_fround($1963($4_1, 444) * $15_1)) + Math_fround(.5));
    label$745 : {
     if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$6_1;
      break label$745;
     }
     $0_1 = -2147483648;
    }
    $72($4_1 + 184 | 0, $4_1 + 176 | 0, Math_fround(0.0));
    $10_1 = $1963($20_1, 5416);
    $7_1 = Math_fround($0_1 | 0);
    $1986($4_1, 340, $7_1);
    $6_1 = Math_fround($11_1 + Math_fround(1.0));
    $17_1 = Math_fround($17_1 + Math_fround(-1.0));
    $13 = Math_fround($6_1 + $17_1);
    $1986($4_1, 336, Math_fround($13 + Math_fround(1.0)));
    $1986($4_1, 572, $6_1);
    $19 = Math_fround($6_1 + Math_fround(2.0));
    $1986($4_1, 568, $19);
    $1983($4_1, 168, $1959($4_1, 336), i64toi32_i32$HIGH_BITS);
    $1983($4_1, 160, $1959($4_1, 568), i64toi32_i32$HIGH_BITS);
    $2_1 = $4_1 + 168 | 0;
    $8 = $4_1 + 160 | 0;
    $10_1 = Math_fround(Math_fround(($10_1 < Math_fround(0.0) ? Math_fround(0.0) : $10_1 > Math_fround(1.0) ? Math_fround(1.0) : $10_1) * Math_fround(255.0)) + Math_fround(.5));
    label$76 : {
     if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$10_1;
      break label$76;
     }
     $0_1 = -2147483648;
    }
    $0_1 = $0_1 << 24;
    $480($9, $2_1, $8, 1, $0_1);
    $1986($4_1, 564, $7_1);
    $1986($4_1, 560, $13);
    $1986($4_1, 556, $11_1);
    $1986($4_1, 552, $6_1);
    $1983($4_1, 152, $1959($4_1, 560), i64toi32_i32$HIGH_BITS);
    $1983($4_1, 144, $1960($4_1, 552), i64toi32_i32$HIGH_BITS);
    $2_1 = $0_1 | 16777215;
    $480($9, $4_1 + 152 | 0, $4_1 + 144 | 0, 1, $2_1);
    $1986($4_1, 548, $7_1);
    $10_1 = Math_fround(Math_fround(Math_fround($26_1 + Math_fround(2.0)) + $17_1) - $6_1);
    $1986($4_1, 544, Math_fround($10_1 + Math_fround(-1.0)));
    $1986($4_1, 540, $6_1);
    $1986($4_1, 536, $19);
    $1983($4_1, 136, $1959($4_1, 544), i64toi32_i32$HIGH_BITS);
    $1983($4_1, 128, $1959($4_1, 536), i64toi32_i32$HIGH_BITS);
    $480($9, $4_1 + 136 | 0, $4_1 + 128 | 0, 0, $0_1);
    $1986($4_1, 532, $7_1);
    $1986($4_1, 528, $10_1);
    $1986($4_1, 524, $11_1);
    $1986($4_1, 520, $6_1);
    $1983($4_1, 120, $1959($4_1, 528), i64toi32_i32$HIGH_BITS);
    $1983($4_1, 112, $1960($4_1, 520), i64toi32_i32$HIGH_BITS);
    $480($9, $4_1 + 120 | 0, $4_1 + 112 | 0, 0, $2_1);
   }
   $0_1 = $4_1 + 328 | 0;
   $6_1 = $18_1 ? Math_fround(10.0) : Math_fround(6.0);
   $408($9, $0_1, $6_1, $23_1, 12);
   $407($9, $0_1, Math_fround($6_1 + Math_fround(1.0)), $32_1, 12, Math_fround(1.0));
   $407($9, $0_1, $6_1, $25_1, 12, Math_fround(1.0));
   if (($34_1 | 0) == 65536) {
    $6_1 = $1963($1_1, 12);
    $0_1 = $4_1 + 336 | 0;
    $10_1 = $1963($4_1, 508);
    $1986($0_1 + 12 | 0, 0, Math_fround($15_1 + $10_1));
    $1986($4_1, 340, $10_1);
    $1982($4_1, 256, 0, 0);
    $1983($4_1, 88, 0, 0);
    $1986($4_1, 336, $5_1);
    $2_1 = $1960($4_1, 336);
    $12_1 = i64toi32_i32$HIGH_BITS;
    $1983($4_1, 272, $2_1, $12_1);
    $1983($4_1, 104, $2_1, $12_1);
    $10_1 = Math_fround($26_1 + $5_1);
    $1986($4_1, 344, $10_1);
    $2_1 = $1960($4_1, 344);
    $12_1 = i64toi32_i32$HIGH_BITS;
    $1983($4_1, 264, $2_1, $12_1);
    $1983($4_1, 96, $2_1, $12_1);
    $482($9, $4_1 + 104 | 0, $4_1 + 96 | 0, 0, Math_fround(Math_fround($10_1 - $5_1) * Math_fround(.5)), $4_1 + 88 | 0, Math_fround(0.0), 0);
    $2_1 = $0_1;
    $0_1 = $23_1 & 16777215;
    $402($9, $2_1, $4_1 + 344 | 0, $23_1, $23_1, $0_1, $0_1);
    $0_1 = $1960($4_1, 336);
    $2_1 = i64toi32_i32$HIGH_BITS;
    $1983($4_1, 248, $0_1, $2_1);
    $12_1 = $1960($4_1, 344);
    $8 = i64toi32_i32$HIGH_BITS;
    $1983($4_1, 240, $12_1, $8);
    $1983($4_1, 80, $0_1, $2_1);
    $1983($4_1, 72, $12_1, $8);
    $17_1 = $1963($4_1, 508);
    $72($4_1 + 80 | 0, $4_1 + 72 | 0, Math_fround(0.0));
    $10_1 = $1963($20_1, 5416);
    $15_1 = Math_fround(Math_fround($17_1 + Math_fround(($6_1 < Math_fround(0.0) ? Math_fround(1.0) : Math_fround(Math_fround(1.0) - ($6_1 > Math_fround(1.0) ? Math_fround(1.0) : $6_1))) * $15_1)) + Math_fround(.5));
    label$79 : {
     if (Math_fround(Math_abs($15_1)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$15_1;
      break label$79;
     }
     $0_1 = -2147483648;
    }
    $6_1 = Math_fround($0_1 | 0);
    $1986($4_1, 572, $6_1);
    $15_1 = Math_fround($11_1 + Math_fround(1.0));
    $5_1 = Math_fround($5_1 + Math_fround(-1.0));
    $17_1 = Math_fround($15_1 + $5_1);
    $1986($4_1, 568, Math_fround($17_1 + Math_fround(1.0)));
    $1986($4_1, 564, $15_1);
    $7_1 = Math_fround($15_1 + Math_fround(2.0));
    $1986($4_1, 560, $7_1);
    $1983($4_1, 64, $1959($4_1, 568), i64toi32_i32$HIGH_BITS);
    $1983($4_1, 56, $1959($4_1, 560), i64toi32_i32$HIGH_BITS);
    $2_1 = $4_1 - -64 | 0;
    $8 = $4_1 + 56 | 0;
    $10_1 = Math_fround(Math_fround(($10_1 < Math_fround(0.0) ? Math_fround(0.0) : $10_1 > Math_fround(1.0) ? Math_fround(1.0) : $10_1) * Math_fround(255.0)) + Math_fround(.5));
    label$81 : {
     if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$10_1;
      break label$81;
     }
     $0_1 = -2147483648;
    }
    $0_1 = $0_1 << 24;
    $480($9, $2_1, $8, 1, $0_1);
    $1986($4_1, 556, $6_1);
    $1986($4_1, 552, $17_1);
    $1986($4_1, 548, $11_1);
    $1986($4_1, 544, $15_1);
    $1983($4_1, 48, $1959($4_1, 552), i64toi32_i32$HIGH_BITS);
    $1983($4_1, 40, $1960($4_1, 544), i64toi32_i32$HIGH_BITS);
    $2_1 = $0_1 | 16777215;
    $480($9, $4_1 + 48 | 0, $4_1 + 40 | 0, 1, $2_1);
    $1986($4_1, 540, $6_1);
    $5_1 = Math_fround(Math_fround(Math_fround($26_1 + Math_fround(2.0)) + $5_1) - $15_1);
    $1986($4_1, 536, Math_fround($5_1 + Math_fround(-1.0)));
    $1986($4_1, 532, $15_1);
    $1986($4_1, 528, $7_1);
    $1983($4_1, 32, $1959($4_1, 536), i64toi32_i32$HIGH_BITS);
    $1983($4_1, 24, $1959($4_1, 528), i64toi32_i32$HIGH_BITS);
    $480($9, $4_1 + 32 | 0, $4_1 + 24 | 0, 0, $0_1);
    $1986($4_1, 524, $6_1);
    $1986($4_1, 520, $5_1);
    $1986($4_1, 516, $11_1);
    $1986($4_1, 512, $15_1);
    $1983($4_1, 16, $1959($4_1, 520), i64toi32_i32$HIGH_BITS);
    $1983($4_1, 8, $1960($4_1, 512), i64toi32_i32$HIGH_BITS);
    $480($9, $4_1 + 16 | 0, $4_1 + 8 | 0, 0, $2_1);
   }
   $275();
   if ($3) {
    $3 = $3 & ($1645($4_1 + 480 | 0, $1_1, $35_1) | 0) != 0
   }
   $12_1 = $3;
   if ($12_1) {
    $88($1944($20_1, 7240))
   }
   $269();
  }
  global$0 = $4_1 + 576 | 0;
  return $12_1;
 }
 
 function $705($0_1) {
  $0_1 = $0_1 | 0;
  $0_1 = $0_1 & 7340032 ? $0_1 : $0_1 | 1048576;
  $0_1 = $0_1 & 25165824 ? $0_1 : $0_1 | 8388608;
  $0_1 = $0_1 & 100663296 ? $0_1 : $0_1 | 33554432;
  $1973($1944(0, 73568), 11972, $0_1 & 402653184 ? $0_1 : $0_1 | 134217728);
 }
 
 function $706($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1973($4_1, 12, $2_1);
  $6_1 = $1944(0, 73568);
  $5_1 = $1944($6_1, 7080);
  $1968($5_1, 140, 1);
  if (!$1937($5_1, 143)) {
   $3 = $6_1 + 12800 | 0;
   $1_1 = $22($3, $1_1, $2_1);
   $3 = $707($76($5_1, $0_1), 0, $3, $1_1 + $3 | 0);
  }
  global$0 = $4_1 + 16 | 0;
  return $3;
 }
 
 function $707($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = 0, $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = 0, $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = 0, $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = Math_fround(0), $19 = Math_fround(0), $20_1 = 0, $21_1 = 0, $22_1 = Math_fround(0), $23_1 = 0, $24 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $4_1 = global$0 - 208 | 0;
  global$0 = $4_1;
  $6_1 = $1944(0, 73568);
  $9 = $1944($6_1, 7080);
  $1968($9, 140, 1);
  if (!$1937($9, 143)) {
   label$2 : {
    if ($1_1 & 1026) {
     $17_1 = $1963($6_1 + 5480 | 0, 0);
     break label$2;
    }
    $11_1 = $1963($9 + 264 | 0, 0);
    $7_1 = $1963($6_1 + 5480 | 0, 0);
    $17_1 = $7_1 > $11_1 ? $11_1 : $7_1;
   }
   $18_1 = $1963($6_1 + 5476 | 0, 0);
   $5_1 = $3;
   if (!$5_1) {
    $5_1 = $62($2_1)
   }
   $68($4_1 + 200 | 0, $2_1, $5_1, 0, Math_fround(-1.0));
   $13 = $1963($9 + 252 | 0, 0);
   $11_1 = $1963($6_1 + 5480 | 0, 0);
   $7_1 = $1963($6_1, 6468);
   $16_1 = $1963($4_1, 204);
   $20_1 = $4_1 + 192 | 0;
   $1983($20_1, 0, 0, 0);
   $1983($4_1, 184, 0, 0);
   $14 = $1963($9 + ($1_1 & 4096 ? 464 : 208) | 0, 0);
   $1986($4_1, 184, $14);
   $22_1 = $1963($9 + 212 | 0, 0);
   $1986($4_1, 188, $22_1);
   $19 = $1963($9 + 472 | 0, 0);
   $7_1 = Math_fround($7_1 + Math_fround($11_1 + $11_1));
   $11_1 = $7_1 > $13 ? $13 : $7_1;
   $7_1 = Math_fround($16_1 + Math_fround($17_1 + $17_1));
   $16_1 = $7_1 <= $11_1 ? $11_1 : $7_1;
   $1986($4_1 + 196 | 0, 0, Math_fround($22_1 + $16_1));
   $1986($20_1, 0, $19);
   $13 = Math_fround(2.0);
   $15_1 = $1_1 & 2;
   if ($15_1) {
    $7_1 = Math_fround($1963($9, 60) * Math_fround(.5));
    label$6 : {
     if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
      $3 = ~~$7_1;
      break label$6;
     }
     $3 = -2147483648;
    }
    $1986($4_1, 192, Math_fround($19 + Math_fround($3 | 0)));
    $7_1 = Math_fround($7_1 + Math_fround(-1.0));
    label$8 : {
     if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
      $3 = ~~$7_1;
      break label$8;
     }
     $3 = -2147483648;
    }
    $1986($4_1, 184, Math_fround($14 - Math_fround($3 | 0)));
    $13 = Math_fround(3.0);
   }
   $19 = $1963($6_1, 6468);
   $14 = $1963($4_1, 200);
   $11_1 = $1963($9, 208);
   $7_1 = $1963($9 + 264 | 0, 0);
   $1986($4_1, 180, Math_fround($22_1 + ($7_1 <= $17_1 ? $17_1 : $7_1)));
   $13 = Math_fround($19 + Math_fround($18_1 * $13));
   $1986($4_1, 176, Math_fround($11_1 + $13));
   $1986($4_1, 164, $16_1);
   $16_1 = Math_fround($18_1 + $18_1);
   $11_1 = Math_fround($19 + ($14 > Math_fround(0.0) ? Math_fround($14 + $16_1) : Math_fround(0.0)));
   $1986($4_1, 160, $11_1);
   $3 = $4_1 + 160 | 0;
   $212($3, $17_1);
   $1983($3 + 8 | 0, 0, $1960($20_1, 0), i64toi32_i32$HIGH_BITS);
   $1983($4_1, 160, $1960($4_1, 184), i64toi32_i32$HIGH_BITS);
   if (!($1_1 & 6146)) {
    $7_1 = $1963($6_1 + 5492 | 0, 0);
    $1986($4_1, 168, Math_fround(Math_fround($7_1 + $7_1) + Math_fround($11_1 + $1963($4_1, 184))));
   }
   $24 = $5_1;
   if ($1_1 & 256) {
    $3 = 1
   } else {
    $10_1 = $1944(0, 73568);
    $5_1 = $1944($10_1, 7080);
    $8 = $1944($5_1 + 364 | 0, 0);
    label$20 : {
     if ($1937($10_1, 7220) & 2) {
      if ($1937($10_1 + 7232 | 0, 0) & 1) {
       $3 = $1937($10_1 + 7236 | 0, 0);
       $36($8, $0_1, $3);
       $3 = ($3 | 0) != 0;
       break label$20;
      }
      $3 = $34($8, $0_1, -1);
      if (($3 | 0) == -1) {
       $3 = $1937($10_1 + 7236 | 0, 0);
       $36($8, $0_1, $3);
       $3 = ($3 | 0) != 0;
       break label$20;
      }
      $3 = ($3 | 0) != 0;
      break label$20;
     }
     $3 = ($34($8, $0_1, $1_1 >>> 5 & 1) | 0) != 0;
    }
    __inlined_func$710 : {
     if ($1_1 & 16) {
      break __inlined_func$710
     }
     if (!($1937($10_1, 12196) & 255)) {
      break __inlined_func$710
     }
     $3 = ($1944($5_1 + 344 | 0, 0) - $1944($10_1, 12236) | 0) < ($1944($10_1, 12240) | 0) | $3;
    }
   }
   label$11 : {
    if (!$3 | ($1_1 & 8200) != 8192) {
     break label$11
    }
    if ($1937($6_1, 7568) & 255) {
     break label$11
    }
    $8 = $9 + 348 | 0;
    $5_1 = $1944($8, 0);
    $1973($8, 0, 1 << $1944($9 + 344 | 0, 0) | $5_1);
   }
   $8 = $213($4_1 + 160 | 0, $0_1, 0, 0);
   $5_1 = $6_1 + 7248 | 0;
   $1973($5_1, 0, $1944($5_1, 0) | 2);
   $1982($6_1 + 7284 | 0, 0, $1960($4_1, 184), i64toi32_i32$HIGH_BITS);
   $1982($6_1 + 7292 | 0, 0, $1960($4_1 + 192 | 0, 0), i64toi32_i32$HIGH_BITS);
   label$12 : {
    if (!$8) {
     if ($3 ^ 1 | ($1_1 & 8) >>> 3) {
      break label$12
     }
     $1_1 = $1944($1944(0, 73568), 7080);
     $287(Math_fround(0.0));
     $1_1 = $1_1 + 344 | 0;
     $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
     $267($0_1);
     break label$12;
    }
    $10_1 = $1_1 & 4;
    $5_1 = $10_1 << 10;
    $21_1 = $1_1 & 256;
    $5_1 = $21_1 ? $5_1 : $5_1 | 512;
    $14 = $1963($6_1 + 228 | 0, 0);
    $11_1 = Math_fround($1963($4_1, 176) - $13);
    $7_1 = $1963($6_1 + 5516 | 0, 0);
    $8 = 0;
    label$15 : {
     if (!($14 >= Math_fround($11_1 - $7_1))) {
      break label$15
     }
     $8 = $14 < Math_fround($7_1 + Math_fround($11_1 + Math_fround($16_1 + $1963($6_1, 6468))));
    }
    $12_1 = $5_1;
    $5_1 = $5_1 | 65536;
    $5_1 = $569($4_1 + 160 | 0, $0_1, $4_1 + 159 | 0, $4_1 + 158 | 0, (wasm2js_i32$0 = ($1944($6_1, 7084) | 0) == ($9 | 0) ? $12_1 : $5_1, wasm2js_i32$1 = $5_1, wasm2js_i32$2 = $8, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) | ($8 ? 16 : $1_1 & 64 ? 288 : 32));
    label$16 : {
     if ($21_1) {
      break label$16
     }
     $12_1 = 0;
     label$19 : {
      if (!$5_1) {
       break label$19
      }
      if (($1944($6_1, 7988) | 0) != ($0_1 | 0)) {
       label$21 : {
        if ($1_1 & 192) {
         $5_1 = 0;
         if (($1944($6_1, 7520) | 0) != ($0_1 | 0)) {
          break label$21
         }
        }
        $5_1 = 1;
       }
       if ($1_1 & 128) {
        if ($8) {
         $12_1 = $1937($6_1, 7571) ^ 1
        } else {
         $12_1 = 0
        }
        $5_1 = $12_1 & 1 | $5_1;
       }
       $12_1 = $5_1;
       if (!($1_1 & 64)) {
        break label$19
       }
       $12_1 = ($1941($6_1 + 1002 | 0, 0) | 0) == 2 | ($5_1 | 0) != 0;
       break label$19;
      }
      $12_1 = $5_1 & ($3 ^ 1);
     }
     $5_1 = $12_1;
     label$26 : {
      if (($1944($6_1, 7512) | 0) != ($0_1 | 0)) {
       break label$26
      }
      if ($1944($6_1, 7612) | $3 ^ 1) {
       break label$26
      }
      $203();
      $5_1 = 1;
     }
     label$17 : {
      label$28 : {
       if (($1944($6_1, 7512) | 0) != ($0_1 | 0)) {
        break label$28
       }
       if (($1944($6_1, 7612) | 0) != 1 | $3) {
        break label$28
       }
       $203();
       break label$17;
      }
      if ($5_1) {
       break label$17
      }
      break label$16;
     }
     $3 = $3 ^ 1;
     $36($1944($9 + 364 | 0, 0), $0_1, $3);
     $1973($6_1, 7248, $1944($6_1, 7248) | 16);
    }
    if ($10_1) {
     $202()
    }
    $12_1 = $51(0, Math_fround(1.0));
    label$30 : {
     if ($15_1) {
      $23_1 = $51((wasm2js_i32$0 = $1937($4_1, 158) ? 26 : 25, wasm2js_i32$1 = 24, wasm2js_i32$2 = $1937($4_1, 159), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), Math_fround(1.0));
      $15_1 = $1960($4_1, 184);
      $10_1 = i64toi32_i32$HIGH_BITS;
      $1983($4_1, 144, $15_1, $10_1);
      $8 = $1960($4_1, 192);
      $5_1 = i64toi32_i32$HIGH_BITS;
      $1983($4_1, 136, $8, $5_1);
      $7_1 = $1963($6_1 + 5484 | 0, 0);
      $1983($4_1, 64, $15_1, $10_1);
      $1983($4_1, 56, $8, $5_1);
      $71($4_1 - -64 | 0, $4_1 + 56 | 0, $23_1, 1, $7_1);
      $73($4_1 + 184 | 0, $0_1, 2);
      label$32 : {
       if ($1_1 & 512) {
        $5_1 = $1944($9, 580);
        $7_1 = $1963($6_1, 6468);
        $1986($4_1, 128, Math_fround($1963($4_1, 176) + Math_fround($13 * Math_fround(-.6000000238418579))));
        $1986($4_1, 132, Math_fround(Math_fround($7_1 * Math_fround(.5)) + $1963($4_1, 180)));
        $1983($4_1, 48, $1959($4_1, 128), i64toi32_i32$HIGH_BITS);
        $477($5_1, $4_1 + 48 | 0, $12_1);
        break label$32;
       }
       if (!$21_1) {
        $5_1 = $1944($9, 580);
        $1986($4_1, 124, $1963($4_1, 180));
        $1986($4_1, 120, Math_fround($18_1 + Math_fround($1963($4_1, 176) - $13)));
        $1983($4_1, 40, $1959($4_1, 120), i64toi32_i32$HIGH_BITS);
        $476($5_1, $4_1 + 40 | 0, $12_1, $3 ? 3 : 1, Math_fround(1.0));
        break label$32;
       }
       $1986($4_1, 176, Math_fround($1963($4_1, 176) - $13));
      }
      if ($1_1 & 1048576) {
       $1986($4_1, 192, Math_fround($1963($4_1, 192) - Math_fround($1963($6_1, 6468) + $1963($6_1, 5476))))
      }
      if ($1937($6_1, 12196)) {
       $341(18920, 18920)
      }
      $1982($4_1, 112, 0, 0);
      $69($4_1 + 176 | 0, $20_1, $2_1, $24, $4_1 + 200 | 0, $4_1 + 112 | 0, 0);
      break label$30;
     }
     $5_1 = $1937($4_1, 159);
     if ($1_1 & 1 | $5_1 & 255) {
      $23_1 = $51((wasm2js_i32$0 = $1937($4_1, 158) ? 26 : 25, wasm2js_i32$1 = 24, wasm2js_i32$2 = $5_1 & 255, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), Math_fround(1.0));
      $15_1 = $1960($4_1, 184);
      $10_1 = i64toi32_i32$HIGH_BITS;
      $1983($4_1, 104, $15_1, $10_1);
      $8 = $1960($4_1, 192);
      $5_1 = i64toi32_i32$HIGH_BITS;
      $1983($4_1, 96, $8, $5_1);
      $1983($4_1, 32, $15_1, $10_1);
      $1983($4_1, 24, $8, $5_1);
      $71($4_1 + 32 | 0, $4_1 + 24 | 0, $23_1, 0, Math_fround(0.0));
     }
     $73($4_1 + 184 | 0, $0_1, 2);
     label$39 : {
      if ($1_1 & 512) {
       $5_1 = $1944($9, 580);
       $7_1 = $1963($6_1, 6468);
       $1986($4_1, 88, Math_fround($1963($4_1, 176) - Math_fround($13 * Math_fround(.5))));
       $1986($4_1, 92, Math_fround(Math_fround($7_1 * Math_fround(.5)) + $1963($4_1, 180)));
       $1983($4_1, 16, $1959($4_1, 88), i64toi32_i32$HIGH_BITS);
       $477($5_1, $4_1 + 16 | 0, $12_1);
       break label$39;
      }
      if ($21_1) {
       break label$39
      }
      $5_1 = $1944($9, 580);
      $7_1 = $1963($6_1, 6468);
      $1986($4_1, 80, Math_fround($18_1 + Math_fround($1963($4_1, 176) - $13)));
      $1986($4_1, 84, Math_fround(Math_fround($7_1 * Math_fround(.15000000596046448)) + $1963($4_1, 180)));
      $1983($4_1, 8, $1959($4_1, 80), i64toi32_i32$HIGH_BITS);
      $476($5_1, $4_1 + 8 | 0, $12_1, $3 ? 3 : 1, Math_fround(.699999988079071));
     }
     if ($1937($6_1, 12196)) {
      $341(16149, 0)
     }
     $8 = $1960($4_1, 176);
     $5_1 = i64toi32_i32$HIGH_BITS;
     $1983($4_1, 72, $8, $5_1);
     $1983($4_1, 0, $8, $5_1);
     $63($4_1, $2_1, $24, 0);
    }
    if (!($3 ^ 1 | ($1_1 & 8) >>> 3)) {
     $1_1 = $1944($1944(0, 73568), 7080);
     $287(Math_fround(0.0));
     $1_1 = $1_1 + 344 | 0;
     $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
     $267($0_1);
    }
   }
   $5_1 = $3;
  }
  global$0 = $4_1 + 208 | 0;
  return $5_1;
 }
 
 function $708($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1973($4_1, 12, $2_1);
  $6_1 = $1944(0, 73568);
  $5_1 = $1944($6_1, 7080);
  $1968($5_1, 140, 1);
  if (!$1937($5_1, 143)) {
   $3 = $6_1 + 12800 | 0;
   $1_1 = $22($3, $1_1, $2_1);
   $3 = $707($80($5_1, $0_1), 0, $3, $1_1 + $3 | 0);
  }
  global$0 = $4_1 + 16 | 0;
  return $3;
 }
 
 function $709($0_1) {
  var $1_1 = 0, $2_1 = 0;
  $1_1 = $1944($1944(0, 73568), 7080);
  $1968($1_1, 140, 1);
  if (!$1937($1_1, 143)) {
   $2_1 = $707($76($1_1, $0_1), 0, $0_1, 0)
  }
  return $2_1;
 }
 
 function $712($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $1973($5_1, 12, $3);
  $7_1 = $1944(0, 73568);
  $6_1 = $1944($7_1, 7080);
  $1968($6_1, 140, 1);
  if (!$1937($6_1, 143)) {
   $4_1 = $7_1 + 12800 | 0;
   $2_1 = $22($4_1, $2_1, $3);
   $4_1 = $707($76($6_1, $0_1), $1_1, $4_1, $2_1 + $4_1 | 0);
  }
  global$0 = $5_1 + 16 | 0;
  return $4_1;
 }
 
 function $716() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = $1944(0, 73568);
  $0_1 = $1944($1_1, 7080);
  $288(Math_fround(0.0));
  $4_1 = $0_1 + 344 | 0;
  $3 = $1944($4_1, 0) - 1 | 0;
  $1973($4_1, 0, $3);
  $3 = 1 << $3;
  label$1 : {
   if ($1944($1_1, 7612)) {
    break label$1
   }
   if (($1944($1_1, 7508) | 0) != ($0_1 | 0)) {
    break label$1
   }
   if (!$331()) {
    break label$1
   }
   if (!$1937($1_1, 7568)) {
    break label$1
   }
   if (!($1944($0_1 + 348 | 0, 0) & $3)) {
    break label$1
   }
   $4_1 = $1944((($1944($0_1, 196) << 2) + $1944($0_1 + 204 | 0, 0) | 0) - 4 | 0, 0);
   $1_1 = $1944($1_1, 7564);
   $1983($2_1 + 8 | 0, 0, 0, 0);
   $1983($2_1, 0, 0, 0);
   $329($4_1, $1_1, 0, $2_1);
   $203();
  }
  $0_1 = $0_1 + 348 | 0;
  $1973($0_1, 0, $1944($0_1, 0) & $3 - 1);
  $269();
  global$0 = $2_1 + 16 | 0;
 }
 
 function $717() {
  var $0_1 = 0, $1_1 = Math_fround(0);
  $0_1 = $1944(0, 73568);
  $1_1 = $1963($0_1 + 5476 | 0, 0);
  return Math_fround(Math_fround(Math_fround($1_1 + $1_1) + $1963($0_1, 6468)));
 }
 
 function $718($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = $1944(0, 73568);
  if (!$1937($1944($2_1, 7080), 143)) {
   $1968($2_1 + 7236 | 0, 0, $0_1);
   $1973($2_1, 7220, $1944($2_1, 7220) | 2);
   $1973($2_1 + 7232 | 0, 0, $1_1 >>> 0 <= 1 ? 1 : $1_1);
  }
 }
 
 function $722($0_1, $1_1) {
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = 0, $6_1 = Math_fround(0), $7_1 = 0, $8 = 0, $9 = Math_fround(0), $10_1 = 0, $11_1 = 0, $12_1 = 0;
  $2_1 = global$0 - 80 | 0;
  global$0 = $2_1;
  $7_1 = $1944(0, 73568);
  $8 = $1944($7_1, 7080);
  $1968($8, 140, 1);
  if (!$1937($8, 143)) {
   $12_1 = $270($0_1);
   $68($2_1 + 72 | 0, $0_1, 0, 1, Math_fround(-1.0));
   $1983($2_1, 64, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
   $4_1 = $292();
   $6_1 = $295();
   $3 = $1963($7_1 + 5480 | 0, 0);
   $1983($2_1, 8, $1960($2_1, 64), i64toi32_i32$HIGH_BITS);
   $293($2_1 + 48 | 0, $2_1 + 8 | 0, $4_1, Math_fround(Math_fround($6_1 * Math_fround(7.25)) + Math_fround($3 + $3)));
   $3 = $1963($2_1, 52);
   label$2 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $5_1 = ~~$3;
     break label$2;
    }
    $5_1 = -2147483648;
   }
   $3 = $1963($2_1, 48);
   $4_1 = $1963($8, 208);
   $1_1 = $1959($8, 208);
   $10_1 = i64toi32_i32$HIGH_BITS;
   $6_1 = Math_fround($5_1 | 0);
   $9 = $1963($2_1, 76);
   $1986($2_1 + 60 | 0, 0, Math_fround(($6_1 >= $9 ? $6_1 : $9) + $1963($8 + 212 | 0, 0)));
   $1983($2_1, 48, $1_1, $10_1);
   if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
    $5_1 = ~~$3
   } else {
    $5_1 = -2147483648
   }
   $1986($2_1, 56, Math_fround($4_1 + Math_fround($5_1 | 0)));
   $3 = Math_fround(0.0);
   $4_1 = $1963($2_1, 72);
   if ($4_1 > Math_fround(0.0)) {
    $3 = Math_fround($4_1 + $1963($7_1 + 5500 | 0, 0))
   }
   $5_1 = $2_1 + 32 | 0;
   $11_1 = $5_1 + 12 | 0;
   $1986($11_1, 0, Math_fround($1963($2_1 + 60 | 0, 0) + Math_fround(0.0)));
   $1983($2_1, 32, $1_1, $10_1);
   $1986($2_1, 40, Math_fround($3 + $1963($2_1, 56)));
   $1973($7_1, 7220, 0);
   $5_1 = $273($5_1, $2_1 + 40 | 0);
   label$7 : {
    if (!$5_1) {
     $1986($2_1, 24, Math_fround($1963($2_1, 40) - $1963($2_1, 32)));
     $1986($2_1, 28, Math_fround($1963($11_1, 0) - $1963($2_1, 36)));
     $212($2_1 + 24 | 0, $1963($7_1, 5480));
     $213($2_1 + 32 | 0, 0, $2_1 + 48 | 0, 0);
     break label$7;
    }
    $301();
    if ($1963($2_1, 72) > Math_fround(0.0)) {
     $3 = $1963($7_1, 5480);
     $4_1 = Math_fround($1963($2_1, 56) + $1963($7_1 + 5500 | 0, 0));
     $1986($2_1, 16, $4_1);
     $6_1 = Math_fround($3 + $1963($2_1, 52));
     $1986($2_1, 20, $6_1);
     $1983($2_1, 0, $1960($2_1, 16), i64toi32_i32$HIGH_BITS);
     $63($2_1, $0_1, 0, 1);
     $9 = $1963($2_1, 72);
     $0_1 = $8 + 236 | 0;
     $3 = $1963($0_1, 0);
     $6_1 = Math_fround($6_1 + $1963($2_1, 76));
     $1986($0_1, 0, $3 >= $6_1 ? $3 : $6_1);
     $0_1 = $8 + 232 | 0;
     $3 = $1963($0_1, 0);
     $4_1 = Math_fround($4_1 + $9);
     $1986($0_1, 0, $3 >= $4_1 ? $3 : $4_1);
    }
    $1986($2_1, 24, Math_fround($1963($2_1, 56) - $1963($2_1, 48)));
    $1986($2_1, 28, Math_fround($1963($2_1 + 60 | 0, 0) - $1963($2_1, 52)));
    $216($12_1, $2_1 + 24 | 0, 0);
   }
  }
  global$0 = $2_1 + 80 | 0;
  return $5_1;
 }
 
 function $723() {
  $211();
  $275();
 }
 
 function $724($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = 0, $9 = Math_fround(0), $10_1 = 0;
  $5_1 = global$0 - 48 | 0;
  global$0 = $5_1;
  $8 = $1944(0, 73568);
  $9 = $295();
  $7_1 = $1963($8 + 5480 | 0, 0);
  $1973($5_1, 40, 0);
  $7_1 = Math_fround(Math_fround($9 * Math_fround(Math_fround((($4_1 | 0) < 0 ? (($3 | 0) >= 7 ? 7 : $3) : $4_1) | 0) + Math_fround(.25))) + Math_fround($7_1 + $7_1));
  label$1 : {
   if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
    $4_1 = ~~$7_1;
    break label$1;
   }
   $4_1 = -2147483648;
  }
  $1986($5_1, 44, Math_fround($4_1 | 0));
  $4_1 = 0;
  if ($722($0_1, $5_1 + 40 | 0)) {
   $6_1 = $42($5_1 + 16 | 0);
   $46($6_1, $3, $295());
   if ($48($6_1)) {
    $3 = 0;
    while (1) {
     $4_1 = $3;
     $3 = $1944($6_1, 0);
     if (($3 | 0) < ($1944($6_1, 4) | 0)) {
      while (1) {
       $0_1 = $4_1;
       if (!(FUNCTION_TABLE[$2_1 | 0](0, $3, $5_1 + 12 | 0) | 0)) {
        $1973($5_1, 12, 17692)
       }
       $266($3);
       $4_1 = $1944($1_1, 0);
       $10_1 = $1944($5_1, 12);
       $1982($5_1, 4, 0, 0);
       if ($601($10_1, ($3 | 0) == ($4_1 | 0), 0, $5_1 + 4 | 0)) {
        $1973($1_1, 0, $3);
        $0_1 = 1;
       }
       if (($3 | 0) == ($4_1 | 0)) {
        $263()
       }
       $269();
       $4_1 = $0_1;
       $3 = $3 + 1 | 0;
       if (($1944($6_1, 4) | 0) > ($3 | 0)) {
        continue
       }
       break;
      }
     }
     $3 = $4_1;
     if ($48($6_1)) {
      continue
     }
     break;
    };
   }
   $211();
   $275();
   if ($4_1 & 1) {
    $88($1944($8, 7240))
   }
   $43($6_1);
  }
  global$0 = $5_1 + 48 | 0;
  return $4_1 & 1;
 }
 
 function $725($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  var $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = Math_fround(0), $16_1 = Math_fround(0), $17_1 = 0, $18_1 = 0, $19 = Math_fround(0), $20_1 = 0, $21_1 = 0, $22_1 = 0, $23_1 = Math_fround(0), $24 = Math_fround(0), $25_1 = Math_fround(0), $26_1 = 0, $27_1 = Math_fround(0), $28_1 = Math_fround(0);
  $9 = global$0 - 160 | 0;
  global$0 = $9;
  $17_1 = $1944(0, 73568);
  $20_1 = $1944($17_1, 7080);
  $1968($20_1, 140, 1);
  if (!$1937($20_1, 143)) {
   $18_1 = $76($20_1, $1_1);
   $68($9 + 152 | 0, $1_1, 0, 1, Math_fround(-1.0));
   if ($1963($8, 0) == Math_fround(0.0)) {
    $1986($8, 0, $292())
   }
   if ($1963($8, 4) == Math_fround(0.0)) {
    $11_1 = $1963($17_1 + 5480 | 0, 0);
    $1986($8, 4, Math_fround(Math_fround($11_1 + $11_1) + $1963($9, 156)));
   }
   $10_1 = $1959($20_1, 208);
   $22_1 = i64toi32_i32$HIGH_BITS;
   $13 = $1963($8, 0);
   $11_1 = $1963($20_1, 208);
   $19 = Math_fround($1963($20_1 + 212 | 0, 0) + $1963($8, 4));
   $1986($9 + 148 | 0, 0, $19);
   $15_1 = Math_fround($11_1 + $13);
   $1986($9, 144, $15_1);
   $1983($9, 136, $10_1, $22_1);
   $11_1 = $1963($9, 152);
   if ($11_1 > Math_fround(0.0)) {
    $12_1 = Math_fround($11_1 + $1963($17_1 + 5500 | 0, 0))
   }
   $8 = $17_1 + 5480 | 0;
   $16_1 = $1963($8, 0);
   $23_1 = $1963($17_1 + 5476 | 0, 0);
   $24 = $1963($9, 140);
   $25_1 = $1963($9, 136);
   $10_1 = $9 + 120 | 0;
   $1986($10_1 + 12 | 0, 0, Math_fround($19 + Math_fround(0.0)));
   $1983($9, 120, $1960($9, 136), i64toi32_i32$HIGH_BITS);
   $1986($9, 128, Math_fround($15_1 + $12_1));
   $277($10_1, $1963($8, 0));
   if ($213($10_1, 0, $9 + 136 | 0, 0)) {
    $18_1 = $91($9 + 136 | 0, $18_1);
    label$6 : {
     if (!($6_1 == Math_fround(3402823466385288598117041.0e14) | $7_1 == Math_fround(3402823466385288598117041.0e14))) {
      $11_1 = $6_1;
      $6_1 = $7_1;
      break label$6;
     }
     label$8 : {
      if (($3 | 0) <= 0) {
       $12_1 = Math_fround(-3402823466385288598117041.0e14);
       $11_1 = Math_fround(3402823466385288598117041.0e14);
       break label$8;
      }
      $11_1 = Math_fround(3402823466385288598117041.0e14);
      $12_1 = Math_fround(-3402823466385288598117041.0e14);
      $8 = 0;
      while (1) {
       $14 = Math_fround(FUNCTION_TABLE[$2_1 | 0](0, $8));
       $10_1 = $14 != $14;
       $12_1 = $10_1 ? $12_1 : $12_1 >= $14 ? $12_1 : $14;
       $11_1 = $10_1 ? $11_1 : $11_1 < $14 ? $11_1 : $14;
       $8 = $8 + 1 | 0;
       if (($8 | 0) != ($3 | 0)) {
        continue
       }
       break;
      };
     }
     $11_1 = $6_1 == Math_fround(3402823466385288598117041.0e14) ? $11_1 : $6_1;
     $6_1 = $7_1 == Math_fround(3402823466385288598117041.0e14) ? $12_1 : $7_1;
    }
    $14 = Math_fround($24 + $16_1);
    $1983($9, 112, $1960($9, 136), i64toi32_i32$HIGH_BITS);
    $1983($9, 104, $1960($9, 144), i64toi32_i32$HIGH_BITS);
    $8 = $51(7, Math_fround(1.0));
    $7_1 = $1963($17_1 + 5484 | 0, 0);
    $1983($9, 72, $1960($9, 112), i64toi32_i32$HIGH_BITS);
    $1983($9, 64, $1960($9, 104), i64toi32_i32$HIGH_BITS);
    $71($9 + 72 | 0, $9 - -64 | 0, $8, 1, $7_1);
    $8 = -1;
    if (($3 | 0) >= (($0_1 ? 1 : 2) | 0)) {
     $19 = Math_fround($19 - $16_1);
     $12_1 = Math_fround($15_1 - $23_1);
     $7_1 = Math_fround($25_1 + $23_1);
     $21_1 = !$0_1;
     $8 = $3 - $21_1 | 0;
     $10_1 = Math_fround(Math_abs($13)) < Math_fround(2147483648.0) ? ~~$13 : -2147483648;
     $26_1 = ($3 | 0) > ($10_1 | 0) ? $10_1 : $3;
     label$14 : {
      if (!$18_1) {
       $10_1 = -1;
       break label$14;
      }
      $13 = $1963($17_1 + 228 | 0, 0);
      if (!($13 >= $7_1)) {
       $10_1 = -1;
       break label$14;
      }
      $15_1 = $1963($17_1 + 232 | 0, 0);
      if (!($15_1 >= $14)) {
       $10_1 = -1;
       break label$14;
      }
      if (!($12_1 > $13)) {
       $10_1 = -1;
       break label$14;
      }
      $10_1 = -1;
      if (!($15_1 < $19)) {
       break label$14
      }
      $13 = Math_fround(Math_fround($13 - $7_1) / Math_fround($12_1 - $7_1));
      $13 = Math_fround(($13 < Math_fround(0.0) ? Math_fround(0.0) : $13 > Math_fround(.9998999834060669) ? Math_fround(.9998999834060669) : $13) * Math_fround($8 | 0));
      label$19 : {
       if (Math_fround(Math_abs($13)) < Math_fround(2147483648.0)) {
        $10_1 = ~~$13;
        break label$19;
       }
       $10_1 = -2147483648;
      }
      $13 = Math_fround(FUNCTION_TABLE[$2_1 | 0](0, ($10_1 + $4_1 | 0) % ($3 | 0) | 0));
      $18_1 = $10_1 + 1 | 0;
      $15_1 = Math_fround(FUNCTION_TABLE[$2_1 | 0](0, ($18_1 + $4_1 | 0) % ($3 | 0) | 0));
      label$21 : {
       if (!$0_1) {
        $1990($9 + 40 | 0, 0, +$15_1);
        $1973($9 + 32 | 0, 0, $18_1);
        $1973($9, 16, $10_1);
        $1990($9, 24, +$13);
        $162(9599, $9 + 16 | 0);
        break label$21;
       }
       if (($0_1 | 0) != 1) {
        break label$21
       }
       $1973($9, 48, $10_1);
       $1990($9, 56, +$13);
       $162(9609, $9 + 48 | 0);
      }
     }
     $16_1 = Math_fround(FUNCTION_TABLE[$2_1 | 0](0, ($4_1 | 0) % ($3 | 0) | 0));
     $18_1 = $51($0_1 ? 40 : 38, Math_fround(1.0));
     $22_1 = $51($0_1 ? 41 : 39, Math_fround(1.0));
     $21_1 = $26_1 - $21_1 | 0;
     if (($21_1 | 0) > 0) {
      $23_1 = Math_fround(Math_fround(1.0) / Math_fround($21_1 | 0));
      $13 = $6_1 != $11_1 ? Math_fround(Math_fround(1.0) / Math_fround($6_1 - $11_1)) : Math_fround(0.0);
      $24 = Math_fround($6_1 * $11_1) < Math_fround(0.0) ? Math_fround(Math_fround($11_1 * $13) + Math_fround(1.0)) : $11_1 < Math_fround(0.0) ? Math_fround(0.0) : Math_fround(1.0);
      $19 = Math_fround($19 - $14);
      $15_1 = Math_fround($12_1 - $7_1);
      $26_1 = $4_1 + 1 | 0;
      $25_1 = Math_fround($8 | 0);
      $8 = 0;
      $6_1 = Math_fround($13 * Math_fround($16_1 - $11_1));
      $12_1 = $6_1 < Math_fround(0.0) ? Math_fround(1.0) : Math_fround(Math_fround(1.0) - ($6_1 > Math_fround(1.0) ? Math_fround(1.0) : $6_1));
      $6_1 = Math_fround(0.0);
      while (1) {
       $12_1 = Math_fround(Math_fround($19 * $12_1) + $14);
       $16_1 = Math_fround(Math_fround($6_1 * $25_1) + Math_fround(.5));
       label$26 : {
        if (Math_fround(Math_abs($16_1)) < Math_fround(2147483648.0)) {
         $4_1 = ~~$16_1;
         break label$26;
        }
        $4_1 = -2147483648;
       }
       $28_1 = Math_fround(FUNCTION_TABLE[$2_1 | 0](0, ($26_1 + $4_1 | 0) % ($3 | 0) | 0));
       $1986($9, 100, $12_1);
       $27_1 = Math_fround(Math_fround($15_1 * $6_1) + $7_1);
       $1986($9, 96, $27_1);
       $6_1 = Math_fround($23_1 + $6_1);
       $16_1 = Math_fround(Math_fround($15_1 * $6_1) + $7_1);
       $1986($9, 88, $16_1);
       $12_1 = Math_fround($13 * Math_fround($28_1 - $11_1));
       $12_1 = $12_1 < Math_fround(0.0) ? Math_fround(1.0) : Math_fround(Math_fround(1.0) - ($12_1 > Math_fround(1.0) ? Math_fround(1.0) : $12_1));
       $1986($9, 92, Math_fround(Math_fround($19 * ($0_1 ? $24 : $12_1)) + $14));
       label$28 : {
        if (!$0_1) {
         $399($1944($20_1, 580), $9 + 96 | 0, $9 + 88 | 0, ($4_1 | 0) == ($10_1 | 0) ? $22_1 : $18_1, Math_fround(1.0));
         break label$28;
        }
        if (($0_1 | 0) != 1) {
         break label$28
        }
        if (Math_fround($27_1 + Math_fround(2.0)) <= $16_1) {
         $1986($9, 88, Math_fround($16_1 + Math_fround(-1.0)))
        }
        $401($1944($20_1, 580), $9 + 96 | 0, $9 + 88 | 0, ($4_1 | 0) == ($10_1 | 0) ? $22_1 : $18_1, Math_fround(0.0), 0);
       }
       $8 = $8 + 1 | 0;
       if (($8 | 0) != ($21_1 | 0)) {
        continue
       }
       break;
      };
     }
     $8 = 0;
    }
    if ($5_1) {
     $6_1 = $1963($17_1, 5480);
     $1986($9, 96, $1963($9, 136));
     $1986($9, 100, Math_fround($6_1 + $1963($9, 140)));
     $1982($9, 88, 1056964608, 0);
     $69($9 + 96 | 0, $9 + 144 | 0, $5_1, 0, 0, $9 + 88 | 0, 0);
    }
    if ($1963($9, 152) > Math_fround(0.0)) {
     $6_1 = $1963($17_1 + 5500 | 0, 0);
     $1986($9, 84, $14);
     $1986($9, 80, Math_fround($6_1 + $1963($9, 144)));
     $1983($9, 8, $1959($9, 80), i64toi32_i32$HIGH_BITS);
     $63($9 + 8 | 0, $1_1, 0, 1);
    }
   }
  }
  global$0 = $9 + 160 | 0;
 }
 
 function $733() {
  var $0_1 = 0, $1_1 = Math_fround(0), $2_1 = 0, $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = 0, $11_1 = 0, $12_1 = Math_fround(0), $13 = Math_fround(0);
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $0_1 = $1944($1944(0, 73568), 7080);
  $1968($0_1, 140, 1);
  $2_1 = 0;
  label$1 : {
   if ($1937($0_1, 143)) {
    break label$1
   }
   $2_1 = 0;
   if (!($1937($0_1 + 9 | 0, 0) & 4)) {
    break label$1
   }
   $301();
   $153(6548);
   $2_1 = $0_1 + 16 | 0;
   $6_1 = $1944($0_1, 8);
   if ($6_1 & 1) {
    $1_1 = $3
   } else {
    $10_1 = $1944(0, 73568);
    $3 = Math_fround($1963($10_1, 6472) * $1963($0_1, 572));
    $11_1 = $1944($0_1, 728);
    if ($11_1) {
     $3 = Math_fround($3 * $1963($11_1, 572))
    }
    $1_1 = $1963($10_1 + 5480 | 0, 0);
    $1_1 = Math_fround(Math_fround($1_1 + $1_1) + $3);
   }
   $9 = $1963($2_1, 0);
   if ($6_1 & 1024) {
    $2_1 = $1944(0, 73568);
    $3 = Math_fround($1963($2_1, 6472) * $1963($0_1, 572));
    $4_1 = $1963($0_1 + 312 | 0, 0);
    $6_1 = $1944($0_1, 728);
    if ($6_1) {
     $3 = Math_fround($3 * $1963($6_1, 572))
    }
    $8 = $1963($2_1 + 5480 | 0, 0);
    $4_1 = Math_fround(Math_fround($8 + $8) + Math_fround($4_1 + $3));
   }
   $7_1 = $1963($0_1, 28);
   $3 = $1963($0_1, 12);
   $9 = Math_fround($9 + $1_1);
   $1_1 = Math_fround(Math_fround($9 + $4_1) + Math_fround(.5));
   label$9 : {
    if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$1_1;
     break label$9;
    }
    $2_1 = -2147483648;
   }
   $4_1 = $1963($0_1, 68);
   $1_1 = $1963($0_1, 72);
   $6_1 = $5_1 + 12 | 0;
   $8 = Math_fround($2_1 | 0);
   $1986($6_1, 0, $8);
   $4_1 = Math_fround(Math_fround($3 + $7_1) - ($1_1 <= $4_1 ? $4_1 : $1_1));
   $4_1 = Math_fround(($3 >= $4_1 ? $3 : $4_1) + Math_fround(.5));
   label$11 : {
    if (Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$4_1;
     break label$11;
    }
    $2_1 = -2147483648;
   }
   $4_1 = Math_fround($2_1 | 0);
   $1986($5_1, 8, $4_1);
   $7_1 = Math_fround(Math_fround($3 + $1_1) + Math_fround(.5));
   label$13 : {
    if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$7_1;
     break label$13;
    }
    $2_1 = -2147483648;
   }
   $7_1 = Math_fround($2_1 | 0);
   $1986($5_1, 0, $7_1);
   $1_1 = Math_fround(Math_fround($9 + $1_1) + Math_fround(.5));
   label$15 : {
    if (Math_fround(Math_abs($1_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$1_1;
     break label$15;
    }
    $2_1 = -2147483648;
   }
   $1_1 = Math_fround($2_1 | 0);
   $1986($5_1, 4, $1_1);
   $12_1 = $1963($0_1, 416);
   $13 = $1963($0_1 + 420 | 0, 0);
   $1986($5_1, 4, $1_1 >= $13 ? $1_1 : $13);
   $1986($5_1, 0, $7_1 >= $12_1 ? $7_1 : $12_1);
   $1_1 = $1963($0_1 + 424 | 0, 0);
   $7_1 = $1963($0_1 + 428 | 0, 0);
   $1986($6_1, 0, $7_1 > $8 ? $8 : $7_1);
   $1986($5_1, 8, $1_1 > $4_1 ? $4_1 : $1_1);
   $158($5_1, $5_1 + 8 | 0, 0);
   $1973($0_1 + 376 | 0, 0, 0);
   $1968($0_1, 306, 1);
   $1973($0_1 + 292 | 0, 0, 1);
   $1_1 = Math_fround($9 + $1963($0_1 + 312 | 0, 0));
   $1986($0_1 + 236 | 0, 0, $1_1);
   $3 = Math_fround($3 + $1963($0_1 + 308 | 0, 0));
   $1986($0_1 + 232 | 0, 0, $3);
   $1986($0_1 + 212 | 0, 0, $1_1);
   $1986($0_1, 208, $3);
   $2_1 = $1944(0, 73568);
   $0_1 = $1944($2_1, 7080);
   $1968($0_1, 140, 1);
   if (!$1937($0_1, 143)) {
    $4_1 = $1963($2_1, 6468);
    $6_1 = $0_1 + 264 | 0;
    $1_1 = $1963($6_1, 0);
    $3 = $1963($2_1 + 5480 | 0, 0);
    $1986($6_1, 0, $1_1 >= $3 ? $1_1 : $3);
    $0_1 = $0_1 + 252 | 0;
    $1_1 = $1963($0_1, 0);
    $3 = Math_fround($4_1 + Math_fround($3 + $3));
    $1986($0_1, 0, $1_1 >= $3 ? $1_1 : $3);
   }
   $2_1 = 1;
  }
  global$0 = $5_1 + 16 | 0;
  return $2_1 | 0;
 }
 
 function $734() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $1_1 = $1944(0, 73568);
  $2_1 = $1944($1_1, 7080);
  $1968($2_1, 140, 1);
  if (!$1937($2_1, 143)) {
   label$2 : {
    if (!$331()) {
     break label$2
    }
    if ($1944($1_1, 7612) >>> 0 > 1) {
     break label$2
    }
    $0_1 = $1944($1_1, 7508);
    if (!($1937($0_1 + 11 | 0, 0) & 16)) {
     break label$2
    }
    while (1) {
     $3 = $0_1;
     $0_1 = $1944($0_1, 728);
     if ($0_1) {
      if ($1937($0_1 + 11 | 0, 0) & 16) {
       continue
      }
     }
     break;
    };
    if (($0_1 | 0) != ($2_1 | 0)) {
     break label$2
    }
    if ($1944($3 + 380 | 0, 0)) {
     break label$2
    }
    if ($1937($1_1, 7600) & 128) {
     break label$2
    }
    $125($2_1);
    $329($1944($2_1 + 760 | 0, 0), 1, 0, $2_1 + 780 | 0);
    $1968($1_1, 7571, 1);
    $1969($1_1, 7569, 257);
    $3 = $1944($1_1, 7612);
    $4_1 = $1944($1_1, 7620);
    $5_1 = $1944($1_1, 7600);
    $6_1 = $1944($1_1, 7604);
    $0_1 = $1944(0, 73568);
    $1968($0_1, 7596, 0);
    $1969($0_1, 7597, 256);
    $1973($0_1, 7620, $4_1);
    $1973($0_1, 7612, $3);
    $1973($0_1, 7604, $6_1);
    $1973($0_1, 7600, $5_1 | 128);
    $1968($0_1, 7572, $1937($0_1, 7573));
   }
   $159();
   $269();
   $1986($2_1 + 308 | 0, 0, Math_fround($1963($2_1, 208) - $1963($2_1, 12)));
   $1968((Math_imul($1944($1_1, 7456), 48) + $1944($1_1 + 7464 | 0, 0) | 0) - 2 | 0, 0, 0);
   $275();
   $1968($2_1 + 306 | 0, 0, 0);
   $1973($2_1 + 292 | 0, 0, 0);
   $1973($2_1 + 376 | 0, 0, 1);
  }
 }
 
 function $736() {
  var $0_1 = 0, $1_1 = 0, $2_1 = Math_fround(0), $3 = Math_fround(0), $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = 0, $9 = Math_fround(0), $10_1 = Math_fround(0);
  $0_1 = $1944(0, 73568);
  $1_1 = $221();
  $8 = $0_1 + 7388 | 0;
  $1973($8, 0, $1944($0_1 + 5592 | 0, 0));
  $5_1 = Math_fround($1963($0_1 + 5596 | 0, 0) - $1963($0_1 + 5480 | 0, 0));
  $1986($0_1 + 7392 | 0, 0, $5_1 >= Math_fround(0.0) ? $5_1 : Math_fround(0.0));
  $5_1 = $296();
  $0_1 = global$0 - 48 | 0;
  global$0 = $0_1;
  $4_1 = $218(6628);
  label$1 : {
   if ($4_1) {
    if ($1941($4_1, 150)) {
     break label$1
    }
   }
   if (!$1_1) {
    $1_1 = $221()
   }
   $7_1 = $1963($1_1, 4);
   $9 = $1963($1_1, 144);
   $10_1 = $1963($1_1, 12);
   $2_1 = $1963($1_1, 136);
   $6_1 = $1963($1_1 + 8 | 0, 0);
   $4_1 = $1_1 + 140 | 0;
   $3 = $1963($4_1, 0);
   $6_1 = Math_fround($6_1 + $3);
   $3 = Math_fround(Math_fround($1963($1_1 + 16 | 0, 0) - $3) + $1963($1_1 + 148 | 0, 0));
   $3 = Math_fround($6_1 + ($3 <= Math_fround(0.0) ? Math_fround(0.0) : $3));
   $1986($0_1 + 44 | 0, 0, $3);
   $1986($0_1, 36, $6_1);
   $7_1 = Math_fround($7_1 + $2_1);
   $1986($0_1, 32, $7_1);
   $2_1 = Math_fround($9 + Math_fround($10_1 - $2_1));
   $2_1 = Math_fround($7_1 + ($2_1 <= Math_fround(0.0) ? Math_fround(0.0) : $2_1));
   $1986($0_1, 40, $2_1);
   $1983($0_1, 24, $1960($0_1, 32), i64toi32_i32$HIGH_BITS);
   $1986($0_1, 20, Math_fround($3 - $6_1));
   $1986($0_1, 16, Math_fround($2_1 - $1963($0_1, 32)));
   $1_1 = $0_1 + 16 | 0;
   $1986($1_1 + 4 | 0, 0, $5_1);
   $1982($0_1, 8, 0, 0);
   $250($0_1 + 24 | 0, 0, $0_1 + 8 | 0);
   $145($1_1, 0);
   $1986($4_1, 0, Math_fround($1963($4_1, 0) + $5_1));
  }
  $58(3, Math_fround(0.0));
  $1982($0_1, 32, 0, 0);
  $59(5, $0_1 + 32 | 0);
  $1_1 = $143(6628, 0, 1295);
  $60(2);
  global$0 = $0_1 + 48 | 0;
  $1982($8, 0, 0, 0);
  if ($1_1) {
   $733();
   return $1_1 | 0;
  }
  $142();
  return $1_1 | 0;
 }
 
 function $737() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0;
  $734();
  $0_1 = $1944(0, 73568);
  $2_1 = $1944($0_1, 7080);
  $1_1 = $1944($0_1, 7508);
  label$1 : {
   if (($2_1 | 0) != ($1_1 | 0)) {
    break label$1
   }
   if ($1944($0_1, 7564)) {
    break label$1
   }
   if ($1937($0_1, 7572)) {
    break label$1
   }
   $144($1_1);
  }
  $142();
 }
 
 function $740() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0;
  $1_1 = $1944(0, 73568);
  label$1 : {
   if ($1944($1_1, 7612)) {
    break label$1
   }
   $2_1 = $1944($1_1, 7080);
   if (!$331()) {
    break label$1
   }
   if (($1944($2_1 + 376 | 0, 0) | 0) != 1) {
    break label$1
   }
   $0_1 = $1944($1_1, 7508);
   if (!$0_1) {
    break label$1
   }
   $0_1 = $1944($0_1, 748);
   if (!($1937($0_1 + 11 | 0, 0) & 4)) {
    break label$1
   }
   if (($1944($0_1, 728) | 0) != ($2_1 | 0)) {
    break label$1
   }
   $132($1944($1_1, 7480), 1);
   $203();
  }
  $321();
 }
 
 function $741($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = 0, $11_1 = 0, $12_1 = Math_fround(0), $13 = 0, $14 = Math_fround(0), $15_1 = 0, $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = 0, $19 = 0;
  $5_1 = global$0 - 96 | 0;
  global$0 = $5_1;
  $11_1 = $1944(0, 73568);
  $7_1 = $1944($11_1, 7080);
  $1968($7_1, 140, 1);
  if (!$1937($7_1, 143)) {
   $16_1 = $1963($7_1 + 212 | 0, 0);
   $12_1 = $1963($7_1, 208);
   $68($5_1 + 88 | 0, $0_1, 0, 1, Math_fround(-1.0));
   $6_1 = $1944(0, 73568);
   $10_1 = $1944($6_1, 7468);
   $4_1 = $1944($6_1, 7480);
   $13 = 0;
   label$2 : {
    if (($10_1 | 0) <= ($4_1 | 0)) {
     break label$2
    }
    $13 = 0;
    if ($1937($1944($6_1, 7080) + 11 | 0, 0) & 16) {
     break label$2
    }
    $6_1 = $1944($1944($6_1 + 7476 | 0, 0) + Math_imul($4_1, 36) | 0, 4);
    $13 = 0;
    if (!$6_1) {
     break label$2
    }
    $13 = ($1937($6_1 + 11 | 0, 0) & 16) >>> 4 | 0;
   }
   $18_1 = $1944($11_1, 7508);
   if ($13) {
    $1973($11_1, 7508, $7_1)
   }
   $153($0_1);
   if (!$3) {
    $226(1)
   }
   label$7 : {
    if (!$1944($7_1 + 376 | 0, 0)) {
     $1_1 = $11_1 + 5492 | 0;
     $8 = $1963($1_1, 0);
     $12_1 = Math_fround($8 * Math_fround(.5));
     label$9 : {
      if (Math_fround(Math_abs($12_1)) < Math_fround(2147483648.0)) {
       $6_1 = ~~$12_1;
       break label$9;
      }
      $6_1 = -2147483648;
     }
     $12_1 = $1963($5_1, 88);
     $9 = Math_fround($1963($7_1, 208) + Math_fround($6_1 | 0));
     $1986($7_1, 208, $9);
     $4_1 = $1941($7_1 + 328 | 0, 0);
     $16_1 = $1963($7_1 + 212 | 0, 0);
     $14 = $1963($7_1 + 264 | 0, 0);
     $1986($5_1, 84, $1963($11_1 + 5496 | 0, 0));
     $1986($5_1, 80, Math_fround($8 + $8));
     $6_1 = $5_1 + 80 | 0;
     $59(14, $6_1);
     $1973($5_1, 84, 0);
     $1986($5_1, 80, $12_1);
     $6_1 = $601(19354, $2_1, 75497472, $6_1);
     $60(1);
     $1986($5_1, 76, Math_fround($16_1 + $14));
     $1986($5_1, 72, Math_fround($9 + Math_fround($4_1 >>> 0)));
     $1983($5_1, 0, $1960($5_1, 72), i64toi32_i32$HIGH_BITS);
     $63($5_1, $0_1, 0, 1);
     $8 = Math_fround($1963($1_1, 0) * Math_fround(-.5));
     label$11 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $0_1 = ~~$8;
       break label$11;
      }
      $0_1 = -2147483648;
     }
     $1986($7_1, 208, Math_fround($1963($7_1, 208) + Math_fround($0_1 | 0)));
     break label$7;
    }
    $8 = Math_fround(0.0);
    label$14 : {
     if (!$1_1) {
      break label$14
     }
     $8 = Math_fround(0.0);
     if (!$1937($1_1, 0)) {
      break label$14
     }
     $68($5_1 + 80 | 0, $1_1, 0, 0, Math_fround(-1.0));
     $8 = $1963($5_1, 80);
    }
    $4_1 = $7_1 + 334 | 0;
    $6_1 = $1941($4_1, 0);
    $14 = $1963($11_1, 6468);
    $9 = $1963($5_1, 88);
    $1970($4_1, 0, $6_1);
    $4_1 = $7_1 + 336 | 0;
    $6_1 = $1941($4_1, 0);
    $10_1 = $4_1;
    $4_1 = $9 < Math_fround(4294967296.0) & $9 >= Math_fround(0.0) ? ~~$9 >>> 0 : 0;
    $1970($10_1, 0, $6_1 >>> 0 > $4_1 >>> 0 ? $6_1 : $4_1);
    $4_1 = $7_1 + 338 | 0;
    $6_1 = $1941($4_1, 0);
    $10_1 = $4_1;
    $4_1 = $8 < Math_fround(4294967296.0) & $8 >= Math_fround(0.0) ? ~~$8 >>> 0 : 0;
    $1970($10_1, 0, $6_1 >>> 0 > $4_1 >>> 0 ? $6_1 : $4_1);
    $4_1 = $7_1 + 340 | 0;
    $6_1 = $1941($4_1, 0);
    $10_1 = $4_1;
    $9 = Math_fround($14 * Math_fround(1.2000000476837158));
    label$22 : {
     if (Math_fround(Math_abs($9)) < Math_fround(2147483648.0)) {
      $4_1 = ~~$9;
      break label$22;
     }
     $4_1 = -2147483648;
    }
    $4_1 = $4_1 & 65535;
    $1970($10_1, 0, $6_1 >>> 0 > $4_1 >>> 0 ? $6_1 : $4_1);
    $19 = $1941($7_1 + 324 | 0, 0);
    $6_1 = 0;
    $4_1 = 0;
    while (1) {
     $10_1 = $1941((($4_1 << 1) + $7_1 | 0) + 334 | 0, 0);
     $6_1 = ($10_1 + $6_1 | 0) + ($15_1 & 1 ? ($10_1 ? $19 : 0) : 0) | 0;
     $15_1 = ($10_1 | 0) != 0 | $15_1;
     $4_1 = $4_1 + 1 | 0;
     if (($4_1 | 0) != 4) {
      continue
     }
     break;
    };
    $6_1 = $6_1 & 65535;
    $1973($7_1 + 320 | 0, 0, $6_1);
    $4_1 = $1944($7_1, 316);
    $15_1 = $5_1 + 80 | 0;
    $208($15_1);
    $9 = $1963($5_1, 80);
    $1973($5_1, 84, 0);
    $14 = Math_fround(($6_1 >>> 0 < $4_1 >>> 0 ? $4_1 : $6_1) >>> 0);
    $1986($5_1, 80, $14);
    $6_1 = $601(19354, 0, 92274688, $15_1);
    $4_1 = $1941($7_1 + 328 | 0, 0);
    $17_1 = Math_fround($16_1 + Math_fround(0.0));
    $1986($5_1, 68, $17_1);
    $1986($5_1, 64, Math_fround($12_1 + Math_fround($4_1 >>> 0)));
    $1983($5_1, 32, $1959($5_1, 64), i64toi32_i32$HIGH_BITS);
    $63($5_1 + 32 | 0, $0_1, 0, 1);
    $9 = Math_fround($9 - $14);
    $0_1 = $9 <= Math_fround(0.0);
    $9 = $0_1 ? Math_fround(0.0) : $9;
    if ($8 > Math_fround(0.0)) {
     $56(0, $11_1 + 5632 | 0);
     $0_1 = $1941($7_1 + 330 | 0, 0);
     $1986($5_1, 52, $17_1);
     $1986($5_1, 48, Math_fround($12_1 + Math_fround($9 + Math_fround($0_1 >>> 0))));
     $1983($5_1, 16, $1959($5_1, 48), i64toi32_i32$HIGH_BITS);
     $63($5_1 + 16 | 0, $1_1, 0, 0);
     $57(1);
    }
    if ($2_1) {
     $0_1 = $1941($7_1 + 332 | 0, 0);
     $1_1 = $1944($7_1, 580);
     $8 = $1963($11_1, 6468);
     $1986($5_1, 44, Math_fround($16_1 + Math_fround(Math_fround($8 * Math_fround(.1340000033378601)) * Math_fround(.5))));
     $1986($5_1, 40, Math_fround($12_1 + Math_fround(Math_fround($8 * Math_fround(.4000000059604645)) + Math_fround($9 + Math_fround($0_1 >>> 0)))));
     $0_1 = $51(0, Math_fround(1.0));
     $8 = $1963($11_1, 6468);
     $1983($5_1, 8, $1959($5_1, 40), i64toi32_i32$HIGH_BITS);
     $478($1_1, $5_1 + 8 | 0, $0_1, Math_fround($8 * Math_fround(.8659999966621399)));
    }
   }
   if (!$3) {
    $227()
   }
   $269();
   if ($13) {
    $1973($11_1, 7508, $18_1)
   }
  }
  global$0 = $5_1 + 96 | 0;
  return $6_1;
 }
 
 function $742($0_1, $1_1, $2_1, $3) {
  return $741($0_1, $1_1, $2_1, $3);
 }
 
 function $748($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  return $1939($0_1, 32) - $1939($1_1, 32) | 0;
 }
 
 function $749() {
  var $0_1 = 0, $1_1 = 0, $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0);
  label$1 : {
   $2_1 = $1944(0, 73568);
   $1_1 = $1944($2_1, 7080);
   if ($1937($1_1, 143)) {
    break label$1
   }
   $0_1 = $1944($2_1, 8112);
   if (!$0_1) {
    break label$1
   }
   if ($1937($0_1, 103)) {
    $750($0_1)
   }
   label$3 : {
    label$4 : {
     label$5 : {
      if ($1937($0_1, 104)) {
       break label$5
      }
      if (!$1944($0_1, 28)) {
       break label$5
      }
      if (($1944($0_1, 36) + 1 | 0) >= ($1944($2_1, 6984) | 0)) {
       break label$4
      }
     }
     $4_1 = $1_1 + 212 | 0;
     $3 = $1963($4_1, 0);
     $5_1 = $1963($0_1 + 52 | 0, 0);
     $3 = Math_fround($3 - $5_1);
     $6_1 = $1963($0_1, 56);
     $3 = $3 >= $6_1 ? $3 : $6_1;
     $1986($0_1, 56, $3);
     $1986($4_1, 0, Math_fround($5_1 + $3));
     break label$3;
    }
    $1986($1_1 + 212 | 0, 0, Math_fround($1963($0_1 + 52 | 0, 0) + $1963($0_1, 60)));
   }
   if (($1936($0_1, 102) | 0) >= 2) {
    $1982($1_1, 208, $1959($0_1, 124), i64toi32_i32$HIGH_BITS)
   }
   if (!($1937($0_1 + 14 | 0, 0) & 16)) {
    $269()
   }
   $0_1 = $1944($2_1, 8148);
   $1_1 = $0_1 - 1 | 0;
   $1973($2_1, 8148, $1_1);
   label$8 : {
    if (!$1_1) {
     $0_1 = 0;
     break label$8;
    }
    $1_1 = $1944($2_1 + 8156 | 0, 0) + ($0_1 - 2 << 3) | 0;
    $0_1 = $1944($1_1, 0);
    if ($0_1) {
     break label$8
    }
    $0_1 = $1944($1944(0, 73568) + 8124 | 0, 0) + Math_imul($1944($1_1, 4), 144) | 0;
   }
   $1973($2_1, 8112, $0_1);
  }
 }
 
 function $750($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = 0, $12_1 = 0, $13 = 0, $14 = Math_fround(0), $15_1 = 0, $16_1 = 0, $17_1 = Math_fround(0), $18_1 = 0, $19 = 0, $20_1 = Math_fround(0), $21_1 = 0, $22_1 = Math_fround(0), $23_1 = Math_fround(0), $24 = Math_fround(0), $25_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $8 = global$0 - 112 | 0;
  global$0 = $8;
  $15_1 = $1944(0, 73568);
  $1968($0_1, 103, 0);
  $1973($8 - -64 | 0, 0, 0);
  $1_1 = $8 + 32 | 0;
  $1983($1_1 + 24 | 0, 0, 0, 0);
  $1983($1_1 + 16 | 0, 0, 0, 0);
  $1983($8, 40, 0, 0);
  $1983($8, 32, 0, 0);
  $18_1 = $1944($0_1, 0);
  label$1 : {
   if (($18_1 | 0) <= 0) {
    $1_1 = 0;
    break label$1;
   }
   $1_1 = 0;
   while (1) {
    label$4 : {
     label$6 : {
      $4_1 = $1944($0_1, 8);
      $2_1 = $4_1 + Math_imul($7_1, 40) | 0;
      if (($1944($2_1, 8) | 0) >= ($1944($0_1, 36) | 0)) {
       if (!($1937($2_1, 36) & 255)) {
        break label$6
       }
      }
      $4_1 = $1944($0_1, 28);
      $2_1 = $1944($2_1, 0);
      if (($4_1 | 0) == ($2_1 | 0)) {
       $1973($0_1, 28, 0)
      }
      if (($1944($0_1, 20) | 0) == ($2_1 | 0)) {
       $1973($0_1, 20, 0)
      }
      if (($1944($0_1, 24) | 0) != ($2_1 | 0)) {
       break label$4
      }
      $1973($0_1, 24, 0);
      break label$4;
     }
     if (($1_1 | 0) != ($7_1 | 0)) {
      $4_1 = $4_1 + Math_imul($1_1, 40) | 0;
      $1982($4_1, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
      $1980($4_1 + 29 | 0, $1957($2_1 + 29 | 0), i64toi32_i32$HIGH_BITS);
      $1982($4_1 + 24 | 0, 0, $1959($2_1 + 24 | 0, 0), i64toi32_i32$HIGH_BITS);
      $1982($4_1 + 16 | 0, 0, $1959($2_1 + 16 | 0, 0), i64toi32_i32$HIGH_BITS);
      $1982($4_1 + 8 | 0, 0, $1959($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
     }
     $2_1 = $1944($0_1, 8) + Math_imul($1_1, 40) | 0;
     $1970($2_1, 34, $1_1);
     $4_1 = $1944($2_1, 4);
     $9 = $4_1 & 64;
     if (($1_1 | 0) > 0) {
      $2_1 = $1944($2_1 - 36 | 0, 0);
      $6_1 = $6_1 | (($2_1 & 192) == 128 & ($4_1 & 192) != 128 | !($2_1 & 64) & ($9 | 0) != 0);
     }
     $2_1 = ($8 + 32 | 0) + Math_imul($9 >>> 6 | 0 ? 0 : $4_1 & 128 ? 2 : 1, 12) | 0;
     $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
     $1_1 = $1_1 + 1 | 0;
    }
    $2_1 = $1944($0_1, 0);
    $18_1 = $2_1;
    $7_1 = $7_1 + 1 | 0;
    if (($2_1 | 0) > ($7_1 | 0)) {
     continue
    }
    break;
   };
  }
  if (($1_1 | 0) != ($18_1 | 0)) {
   $2_1 = $1944($0_1, 4);
   label$14 : {
    if (($2_1 | 0) >= ($1_1 | 0)) {
     break label$14
    }
    $4_1 = $2_1;
    $2_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
    $2_1 = ($1_1 | 0) < ($2_1 | 0) ? $2_1 : $1_1;
    if (($4_1 | 0) >= ($2_1 | 0)) {
     break label$14
    }
    $4_1 = $16(Math_imul($2_1, 40));
    $7_1 = $1944($0_1, 8);
    if ($7_1) {
     $1602($4_1, $7_1, Math_imul($1944($0_1, 0), 40));
     $17($1944($0_1, 8));
    }
    $1973($0_1, 4, $2_1);
    $1973($0_1, 8, $4_1);
   }
   $1973($0_1, 0, $1_1);
  }
  label$18 : {
   if (!($6_1 & 1)) {
    break label$18
   }
   $1_1 = $1944($0_1, 0);
   if ($1_1 >>> 0 < 2) {
    break label$18
   }
   $1685($1944($0_1, 8), $1_1, 40, 23);
  }
  $13 = $1944($8, 32);
  $3 = Math_fround(0.0);
  label$19 : {
   if (($13 | 0) <= 0) {
    break label$19
   }
   $3 = Math_fround(0.0);
   if (($1944($8, 56) + $1944($8, 44) | 0) <= 0) {
    break label$19
   }
   $3 = $1963($15_1 + 5500 | 0, 0);
  }
  $1986($8, 40, $3);
  $18_1 = $1944($8, 56);
  $1_1 = $8 + 52 | 0;
  $3 = Math_fround(0.0);
  label$20 : {
   if (($1944($8, 44) | 0) <= 0) {
    break label$20
   }
   $3 = Math_fround(0.0);
   if (($18_1 | 0) <= 0) {
    break label$20
   }
   $3 = $1963($15_1 + 5500 | 0, 0);
  }
  $1986($1_1, 0, $3);
  $1_1 = $1944($0_1, 24);
  label$22 : {
   if (!$1_1) {
    $1_1 = 0;
    break label$22;
   }
   $1973($0_1, 24, 0);
   $1973($0_1, 20, $1_1);
  }
  if ($1944($0_1, 96)) {
   $7_1 = 0;
   $2_1 = 0;
   $9 = global$0 - 48 | 0;
   global$0 = $9;
   $11_1 = $1944($0_1, 96);
   label$10 : {
    if ($11_1) {
     $12_1 = $1944($0_1, 0);
     label$31 : {
      if (($12_1 | 0) <= 0) {
       $4_1 = ($12_1 | 0) > 0;
       break label$31;
      }
      $4_1 = $1944($0_1, 8);
      if (($1944($4_1, 0) | 0) == ($11_1 | 0)) {
       $2_1 = $4_1;
       $4_1 = 1;
       break label$31;
      }
      $6_1 = ($4_1 + Math_imul($12_1, 40) | 0) - 40 | 0;
      while (1) {
       label$62 : {
        $7_1 = $7_1 + 1 | 0;
        if (($12_1 | 0) == ($7_1 | 0)) {
         $2_1 = $6_1;
         break label$62;
        }
        $2_1 = $4_1 + Math_imul($7_1, 40) | 0;
        if (($1944($2_1, 0) | 0) != ($11_1 | 0)) {
         continue
        }
       }
       break;
      };
      $4_1 = ($7_1 | 0) < ($12_1 | 0);
     }
     if ($4_1) {
      break label$10
     }
    }
    $2_1 = 0;
   }
   $11_1 = 0;
   label$9 : {
    if (!$2_1) {
     break label$9
    }
    $6_1 = $1944($2_1, 4);
    $11_1 = 0;
    if ($6_1 & 32) {
     break label$9
    }
    $12_1 = $1944($0_1, 8);
    $7_1 = $1939($0_1, 100);
    $4_1 = (($2_1 - $12_1 | 0) / 40 | 0) + $7_1 | 0;
    $11_1 = 0;
    if (($4_1 | 0) < 0) {
     break label$9
    }
    $11_1 = 0;
    if (($1944($0_1, 0) | 0) <= ($4_1 | 0)) {
     break label$9
    }
    $4_1 = $12_1 + Math_imul($4_1, 40) | 0;
    $12_1 = $1944($4_1, 4);
    $11_1 = 0;
    if ($12_1 & 32) {
     break label$9
    }
    $11_1 = 0;
    if (($6_1 ^ $12_1) & 192) {
     break label$9
    }
    $6_1 = $9 + 8 | 0;
    $1983($6_1 + 32 | 0, 0, $1959($2_1 + 32 | 0, 0), i64toi32_i32$HIGH_BITS);
    $12_1 = $6_1 + 24 | 0;
    $1983($12_1, 0, $1959($2_1 + 24 | 0, 0), i64toi32_i32$HIGH_BITS);
    $11_1 = $6_1 + 16 | 0;
    $1983($11_1, 0, $1959($2_1 + 16 | 0, 0), i64toi32_i32$HIGH_BITS);
    $16_1 = $6_1 + 8 | 0;
    $1983($16_1, 0, $1959($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
    $1983($9, 8, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
    $19 = ($7_1 | 0) > 0;
    $21_1 = $19 ? $2_1 : $4_1 + 40 | 0;
    $19 = $19 ? $2_1 + 40 | 0 : $4_1;
    $2_1 = $7_1 >> 31;
    $1603($21_1, $19, Math_imul(($2_1 ^ $7_1) - $2_1 | 0, 40));
    $1980($4_1 + 29 | 0, $1957($6_1 + 29 | 0), i64toi32_i32$HIGH_BITS);
    $1982($4_1 + 24 | 0, 0, $1960($12_1, 0), i64toi32_i32$HIGH_BITS);
    $1982($4_1 + 16 | 0, 0, $1960($11_1, 0), i64toi32_i32$HIGH_BITS);
    $1982($4_1 + 8 | 0, 0, $1960($16_1, 0), i64toi32_i32$HIGH_BITS);
    $1982($4_1, 0, $1960($9, 8), i64toi32_i32$HIGH_BITS);
    if ($1937($0_1 + 14 | 0, 0) & 64) {
     $346()
    }
    $11_1 = 1;
   }
   $2_1 = $11_1;
   global$0 = $9 + 48 | 0;
   if ($2_1) {
    $2_1 = $1944($0_1, 96);
    $1_1 = ($1944($0_1, 20) | 0) == ($2_1 | 0) ? $2_1 : $1_1;
   }
   $1973($0_1, 96, 0);
  }
  $4_1 = $1_1;
  label$28 : {
   if (!($1937($0_1, 12) & 4)) {
    break label$28
   }
   $1_1 = $1944(0, 73568);
   $3 = $1963($1_1 + 5480 | 0, 0);
   $7_1 = $1944($1_1, 7080);
   $9 = $1959($7_1, 208);
   $12_1 = i64toi32_i32$HIGH_BITS;
   $5_1 = $1963($1_1, 6468);
   $10_1 = $1963($0_1, 40);
   $1973($7_1 + 212 | 0, 0, $1944($0_1 + 44 | 0, 0));
   $1986($7_1, 208, Math_fround($10_1 - $3));
   $1986($0_1, 40, Math_fround(Math_fround($5_1 + $3) + $1963($0_1, 40)));
   $2_1 = $8 + 96 | 0;
   $1983($2_1 + 8 | 0, 0, $1959($1_1 + 5624 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1983($8, 96, $1959($1_1 + 5616 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1986($8, 108, Math_fround($1963($8, 108) * Math_fround(.5)));
   $56(0, $2_1);
   $1_1 = $8 + 80 | 0;
   $1983($1_1 + 8 | 0, 0, 0, 0);
   $1983($8, 80, 0, 0);
   $56(21, $1_1);
   $1_1 = $597(1869, 0, 80);
   $57(2);
   $6_1 = 0;
   if ($1_1) {
    label$313 : {
     if (($1944($0_1, 0) | 0) <= 0) {
      $2_1 = 0;
      break label$313;
     }
     $1_1 = 0;
     while (1) {
      $2_1 = $1944($0_1, 8) + Math_imul($6_1, 40) | 0;
      if (!($1937($2_1 + 6 | 0, 0) & 32)) {
       $11_1 = $1944($2_1, 28);
       $16_1 = $1944($2_1, 0);
       $19 = $1944($0_1, 140);
       $21_1 = $1944($0_1, 20);
       $1982($8, 80, 0, 0);
       $1_1 = $601($11_1 + $19 | 0, ($16_1 | 0) == ($21_1 | 0), 0, $8 + 80 | 0) ? $2_1 : $1_1;
      }
      $2_1 = $1_1;
      $6_1 = $6_1 + 1 | 0;
      if (($1944($0_1, 0) | 0) > ($6_1 | 0)) {
       continue
      }
      break;
     };
    }
    $321();
    $6_1 = $2_1;
   }
   $1982($7_1, 208, $9, $12_1);
   $1_1 = $4_1;
   if (!$6_1) {
    break label$28
   }
   $1_1 = $1944($6_1, 0);
   $1973($0_1, 20, $1_1);
  }
  $1973($8, 20, 0);
  $1973($8, 28, $13);
  $1973($8, 24, $13 + $18_1 | 0);
  $2_1 = $1944($15_1 + 8164 | 0, 0);
  $4_1 = $1944($0_1, 0);
  label$36 : {
   if (($2_1 | 0) >= ($4_1 | 0)) {
    break label$36
   }
   $6_1 = $2_1;
   $2_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
   $2_1 = ($2_1 | 0) > ($4_1 | 0) ? $2_1 : $4_1;
   if (($6_1 | 0) >= ($2_1 | 0)) {
    break label$36
   }
   $6_1 = $16($2_1 << 3);
   $7_1 = $1944($15_1 + 8168 | 0, 0);
   if ($7_1) {
    $1602($6_1, $7_1, $1944($15_1, 8160) << 3);
    $17($1944($15_1, 8168));
   }
   $1973($15_1, 8164, $2_1);
   $1973($15_1, 8168, $6_1);
  }
  $1973($15_1, 8160, $4_1);
  $9 = $1944($0_1, 0);
  label$40 : {
   if (($9 | 0) <= 0) {
    $18_1 = 0;
    $2_1 = 0;
    break label$40;
   }
   $2_1 = 0;
   $6_1 = -1;
   $4_1 = 0;
   $7_1 = 0;
   while (1) {
    $9 = $4_1;
    $12_1 = $1944($0_1, 8) + Math_imul($7_1, 40) | 0;
    label$43 : {
     label$44 : {
      if (!$2_1) {
       break label$44
      }
      if (($1944($2_1, 12) | 0) < ($1944($12_1, 12) | 0)) {
       break label$44
      }
      break label$43;
     }
     $2_1 = $1937($12_1 + 6 | 0, 0) & 32 ? $2_1 : $12_1;
    }
    $13 = $1944($12_1, 0);
    $4_1 = $1_1;
    if (!$1_1) {
     $4_1 = ($1944($15_1, 7540) | 0) == ($13 | 0) ? $13 : 0
    }
    $18_1 = $1944($0_1, 20);
    $11_1 = $1944($12_1, 4);
    $1_1 = $1944(0, 73568);
    $68($8 + 96 | 0, $1944($0_1, 140) + $1944($12_1, 28) | 0, 0, 1, Math_fround(-1.0));
    $16_1 = $12_1 + 4 | 0;
    $3 = $1963($1_1 + 5476 | 0, 0);
    $10_1 = Math_fround($1963($8, 96) + $3);
    if ($11_1 & 1048576) {
     $5_1 = Math_fround(1.0)
    } else {
     $5_1 = Math_fround($1963($1_1 + 5500 | 0, 0) + $1963($1_1, 6468))
    }
    $3 = Math_fround($10_1 + Math_fround($3 + $5_1));
    $5_1 = Math_fround($1963($1944(0, 73568), 6468) * Math_fround(20.0));
    $3 = $3 < $5_1 ? $3 : $5_1;
    $1986($12_1, 24, $3);
    $5_1 = Math_fround(0.0);
    $11_1 = $6_1;
    $1_1 = $1944($16_1, 0);
    $6_1 = $1_1 & 64 ? 0 : $1_1 & 128 ? 2 : 1;
    if (($11_1 | 0) == ($6_1 | 0)) {
     $5_1 = $1963($15_1, 5500)
    }
    $1_1 = ($8 + 32 | 0) + Math_imul($6_1, 12) | 0;
    $1986($1_1, 4, Math_fround($1963($1_1, 4) + Math_fround($3 + $5_1)));
    $11_1 = ($8 + 20 | 0) + ($6_1 << 2) | 0;
    $1_1 = $1944($11_1, 0);
    $1973($11_1, 0, $1_1 + 1 | 0);
    $1_1 = $1944($15_1, 8168) + ($1_1 << 3) | 0;
    $1986($1_1, 4, $3);
    $1973($1_1, 0, $7_1);
    $1986($12_1, 20, $3);
    $1_1 = $4_1;
    $18_1 = ($13 | 0) == ($18_1 | 0) | $9;
    $4_1 = $18_1;
    $7_1 = $7_1 + 1 | 0;
    $9 = $1944($0_1, 0);
    if (($7_1 | 0) < ($9 | 0)) {
     continue
    }
    break;
   };
  }
  $4_1 = $1_1;
  $12_1 = $2_1;
  $1973($0_1, 68, 0);
  $1_1 = 0;
  $3 = Math_fround(0.0);
  while (1) {
   $2_1 = ($8 + 32 | 0) + Math_imul($1_1, 12) | 0;
   $3 = Math_fround($3 + Math_fround($1963($2_1, 4) + $1963($2_1, 8)));
   $1_1 = $1_1 + 1 | 0;
   if (($1_1 | 0) != 3) {
    continue
   }
   break;
  };
  $1986($0_1, 68, $3);
  label$49 : {
   if (!($3 > Math_fround($1963($0_1 + 48 | 0, 0) - $1963($0_1, 40)))) {
    $1_1 = $4_1;
    break label$49;
   }
   if (($9 | 0) <= 1) {
    $1_1 = $4_1;
    break label$49;
   }
   if (($1944($0_1, 12) & 144) != 128) {
    $1_1 = $4_1;
    break label$49;
   }
   $1_1 = $1944(0, 73568);
   $5_1 = $1963($1_1 + 5480 | 0, 0);
   $11_1 = $1944($1_1, 7080);
   $21_1 = $1959($11_1, 208);
   $25_1 = i64toi32_i32$HIGH_BITS;
   $10_1 = $1963($1_1, 6468);
   $2_1 = $8 + 96 | 0;
   $1983($2_1 + 8 | 0, 0, $1959($1_1 + 5624 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1983($8, 96, $1959($1_1 + 5616 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1986($8, 108, Math_fround($1963($8, 108) * Math_fround(.5)));
   $56(0, $2_1);
   $2_1 = $8 + 80 | 0;
   $1983($2_1 + 8 | 0, 0, 0, 0);
   $1983($8, 80, 0, 0);
   $56(21, $2_1);
   $1_1 = $1_1 + 140 | 0;
   $2_1 = $1959($1_1, 0);
   $6_1 = i64toi32_i32$HIGH_BITS;
   $1982($1_1, 0, 1048576e3, 1045220557);
   $3 = $1963($0_1 + 48 | 0, 0);
   $20_1 = $1963($0_1, 40);
   $7_1 = $11_1 + 212 | 0;
   $9 = $0_1 + 44 | 0;
   $1973($7_1, 0, $1944($9, 0));
   $17_1 = $3;
   $3 = Math_fround($10_1 + Math_fround(-2.0));
   $14 = Math_fround($3 + $3);
   $22_1 = Math_fround($17_1 - $14);
   $20_1 = $20_1 >= $22_1 ? $20_1 : $22_1;
   $1986($11_1, 208, $20_1);
   $5_1 = Math_fround($10_1 + Math_fround($5_1 + $5_1));
   $1986($8, 84, $5_1);
   $1986($8, 80, $3);
   $1983($8, 8, $1960($8, 80), i64toi32_i32$HIGH_BITS);
   $13 = $574(16151, 0, $8 + 8 | 0, 1040);
   $1973($7_1, 0, $1944($9, 0));
   $1986($11_1, 208, Math_fround($3 + $20_1));
   $1986($8, 76, $5_1);
   $1986($8, 72, $3);
   $1983($8, 0, $1960($8, 72), i64toi32_i32$HIGH_BITS);
   $7_1 = $574(16147, 1, $8, 1040);
   $57(2);
   $1982($1_1, 0, $2_1, $6_1);
   $16_1 = $7_1 ? 1 : 0 - $13 | 0;
   label$53 : {
    if (!$16_1) {
     $2_1 = 0;
     break label$53;
    }
    $19 = $1944($0_1, 20);
    label$55 : {
     if ($19) {
      $7_1 = $1944($0_1, 0);
      label$57 : {
       if (($7_1 | 0) <= 0) {
        $6_1 = ($7_1 | 0) > 0;
        break label$57;
       }
       $9 = $1944($0_1, 8);
       if (($1944($9, 0) | 0) == ($19 | 0)) {
        $6_1 = 1;
        $1_1 = $9;
        break label$57;
       }
       $13 = ($9 + Math_imul($7_1, 40) | 0) - 40 | 0;
       $6_1 = 0;
       while (1) {
        label$60 : {
         $6_1 = $6_1 + 1 | 0;
         if (($7_1 | 0) == ($6_1 | 0)) {
          $1_1 = $7_1;
          $2_1 = $13;
          break label$60;
         }
         $1_1 = $6_1;
         $2_1 = $9 + Math_imul($1_1, 40) | 0;
         if (($1944($2_1, 0) | 0) != ($19 | 0)) {
          continue
         }
        }
        break;
       };
       $6_1 = ($1_1 | 0) < ($7_1 | 0);
       $1_1 = $2_1;
      }
      if ($6_1) {
       break label$55
      }
     }
     $1_1 = 0;
    }
    $2_1 = 0;
    if (!$1_1) {
     break label$53
    }
    $9 = $1944($0_1, 8);
    $6_1 = ($1_1 - $9 | 0) / 40 | 0;
    $1_1 = $16_1 + $6_1 | 0;
    while (1) {
     label$64 : {
      if (($1_1 | 0) >= 0) {
       $2_1 = $1_1;
       if (($1944($0_1, 0) | 0) > ($1_1 | 0)) {
        break label$64
       }
      }
      $2_1 = $6_1;
     }
     $7_1 = $9 + Math_imul($2_1, 40) | 0;
     if ($1937($7_1 + 6 | 0, 0) & 32) {
      $6_1 = $6_1 + $16_1 | 0;
      $1_1 = $1_1 + $16_1 | 0;
      label$68 : {
       if (($1_1 | 0) < 0) {
        break label$68
       }
       if (($1944($0_1, 0) | 0) <= ($1_1 | 0)) {
        break label$68
       }
       $7_1 = 0;
      }
     }
     $2_1 = $7_1;
     if (!$2_1) {
      continue
     }
     break;
    };
   }
   $1982($11_1, 208, $21_1, $25_1);
   $1986($0_1, 48, Math_fround($1963($0_1, 48) - Math_fround($14 + Math_fround(1.0))));
   $1_1 = $4_1;
   if (!$2_1) {
    break label$49
   }
   $1_1 = $1944($2_1, 0);
   if (!($1937($2_1 + 6 | 0, 0) & 32)) {
    $1973($0_1, 20, $1_1)
   }
  }
  $2_1 = $1_1;
  $20_1 = $1963($8, 52);
  $3 = $1963($8, 36);
  $22_1 = $1963($8, 40);
  $5_1 = Math_fround($3 + $22_1);
  $10_1 = Math_fround($1963($8 + 60 | 0, 0) + $1963($8 - -64 | 0, 0));
  $14 = Math_fround($5_1 + $10_1);
  $3 = Math_fround($1963($0_1, 48) - $1963($0_1, 40));
  $4_1 = $14 < $3;
  label$71 : {
   if ($4_1) {
    $3 = Math_fround(Math_fround($20_1 + $1963($8 + 48 | 0, 0)) - Math_fround(Math_fround($3 - $5_1) - $10_1));
    $3 = $3 >= Math_fround(0.0) ? $3 : Math_fround(0.0);
    break label$71;
   }
   $3 = Math_fround($14 - $3);
  }
  label$73 : {
   if (!($3 > Math_fround(0.0))) {
    break label$73
   }
   if ($4_1) {
    if (!($1944($0_1, 12) & 64)) {
     break label$73
    }
   }
   $13 = $15_1 + 8168 | 0;
   $9 = $1944($13, 0);
   $6_1 = $1944($8, 56) + $1944($8, 32) | 0;
   $1_1 = $4_1 ? $6_1 : 0;
   $9 = $9 + ($1_1 << 3) | 0;
   __inlined_func$595 : {
    label$2 : {
     label$32 : {
      label$45 : {
       $7_1 = (wasm2js_i32$0 = $1944($8, 44), wasm2js_i32$1 = $6_1, wasm2js_i32$2 = $4_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
       switch ($7_1 | 0) {
       case 0:
        break label$2;
       case 1:
        break label$45;
       default:
        break label$32;
       };
      }
      $5_1 = $1963($9, 4);
      if (!($5_1 >= Math_fround(0.0))) {
       break __inlined_func$595
      }
      $3 = Math_fround($5_1 - $3);
      $1986($9, 4, $3 >= Math_fround(1.0) ? $3 : Math_fround(1.0));
      break __inlined_func$595;
     }
     $1685($9, $7_1, 8, 21);
    }
    $4_1 = 1;
    while (1) {
     if (!(!($3 > Math_fround(0.0)) | ($4_1 | 0) >= ($7_1 | 0))) {
      $5_1 = $1963($9, 4);
      label$77 : {
       label$8 : {
        label$98 : {
         label$109 : {
          while (1) {
           $10_1 = $1963(($4_1 << 3) + $9 | 0, 4);
           if (!($10_1 >= $5_1)) {
            break label$109
           }
           $4_1 = $4_1 + 1 | 0;
           if (($4_1 | 0) != ($7_1 | 0)) {
            continue
           }
           break;
          };
          $4_1 = $7_1;
          break label$98;
         }
         if ($10_1 >= Math_fround(0.0)) {
          break label$8
         }
        }
        $5_1 = Math_fround($1963($9, 4) + Math_fround(-1.0));
        break label$77;
       }
       $5_1 = Math_fround($5_1 - $10_1);
      }
      $6_1 = $4_1;
      $11_1 = $5_1 <= Math_fround(0.0);
      if (!$11_1) {
       $10_1 = Math_fround($6_1 | 0);
       $14 = Math_fround($3 / $10_1);
       $5_1 = $5_1 > $14 ? $14 : $5_1;
       $4_1 = 0;
       if (($6_1 | 0) > 0) {
        while (1) {
         $16_1 = ($4_1 << 3) + $9 | 0;
         $1986($16_1, 4, Math_fround($1963($16_1, 4) - $5_1));
         $4_1 = $4_1 + 1 | 0;
         if (($6_1 | 0) != ($4_1 | 0)) {
          continue
         }
         break;
        }
       }
       $3 = Math_fround($3 - Math_fround($5_1 * $10_1));
      }
      $4_1 = $6_1;
      if (!$11_1) {
       continue
      }
     }
     break;
    };
    $3 = Math_fround(0.0);
    if (($7_1 | 0) > 0) {
     $4_1 = 0;
     while (1) {
      $6_1 = ($4_1 << 3) + $9 | 0;
      $5_1 = $1963($6_1, 4);
      label$1811 : {
       if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
        $11_1 = ~~$5_1;
        break label$1811;
       }
       $11_1 = -2147483648;
      }
      $10_1 = Math_fround($11_1 | 0);
      $1986($6_1, 4, $10_1);
      $3 = Math_fround($3 + Math_fround($5_1 - $10_1));
      $4_1 = $4_1 + 1 | 0;
      if (($4_1 | 0) != ($7_1 | 0)) {
       continue
      }
      break;
     };
    }
    if (!($3 > Math_fround(0.0)) | ($7_1 | 0) <= 0) {
     break __inlined_func$595
    }
    $3 = Math_fround($3 + Math_fround(.009999999776482582));
    label$2012 : {
     if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
      $4_1 = 0;
      $11_1 = ~~$3;
      break label$2012;
     }
     $4_1 = 0;
     $11_1 = -2147483648;
    }
    while (1) {
     $6_1 = ($4_1 << 3) + $9 | 0;
     if (($1944($6_1, 0) | 0) < ($11_1 | 0)) {
      $1986($6_1, 4, Math_fround($1963($6_1, 4) + Math_fround(1.0)))
     }
     $4_1 = $4_1 + 1 | 0;
     if (($4_1 | 0) != ($7_1 | 0)) {
      continue
     }
     break;
    };
   }
   if (($7_1 | 0) <= 0) {
    break label$73
   }
   $6_1 = $1_1 + $7_1 | 0;
   $7_1 = $1944($13, 0);
   while (1) {
    $4_1 = $7_1 + ($1_1 << 3) | 0;
    $3 = $1963($4_1, 4);
    label$76 : {
     if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
      $9 = ~~$3;
      break label$76;
     }
     $9 = -2147483648;
    }
    if (($9 | 0) >= 0) {
     $4_1 = $1944($0_1, 8) + Math_imul($1944($4_1, 0), 40) | 0;
     $13 = $1944($4_1, 4);
     $13 = ($8 + 32 | 0) + Math_imul($13 & 64 ? 0 : $13 & 128 ? 2 : 1, 12) | 0;
     $3 = $1963($13, 4);
     $5_1 = $3;
     $3 = Math_fround($9 | 0);
     $1986($13, 4, Math_fround($5_1 - Math_fround($1963($4_1, 20) - $3)));
     $1986($4_1, 20, $3);
    }
    $1_1 = $1_1 + 1 | 0;
    if (($6_1 | 0) > ($1_1 | 0)) {
     continue
    }
    break;
   };
  }
  $1973($0_1, 64, 0);
  $1_1 = 0;
  $3 = Math_fround(0.0);
  $6_1 = 0;
  $5_1 = Math_fround(0.0);
  while (1) {
   $7_1 = ($8 + 32 | 0) + Math_imul($1_1, 12) | 0;
   if (($1_1 | 0) == 2) {
    $10_1 = Math_fround(Math_fround($1963($0_1, 48) - $1963($0_1, 40)) - $1963($7_1, 4));
    $10_1 = $10_1 <= Math_fround(0.0) ? Math_fround(0.0) : $10_1;
    $3 = $3 > $10_1 ? $10_1 : $3;
   }
   $10_1 = $5_1;
   $4_1 = $1_1;
   $9 = $1944($7_1, 0);
   label$82 : {
    if (($9 | 0) <= 0) {
     $5_1 = $3;
     break label$82;
    }
    $13 = $9 - 1 | 0;
    $11_1 = $1944($0_1, 8);
    $1_1 = 0;
    while (1) {
     $16_1 = $11_1 + Math_imul($1_1 + $6_1 | 0, 40) | 0;
     $1986($16_1, 16, $3);
     $17_1 = $1963($16_1, 20);
     if (($1_1 | 0) < ($13 | 0)) {
      $5_1 = $1963($15_1, 5500)
     } else {
      $5_1 = Math_fround(0.0)
     }
     $3 = Math_fround($3 + Math_fround($17_1 + $5_1));
     $5_1 = $3;
     $1_1 = $1_1 + 1 | 0;
     if (($9 | 0) != ($1_1 | 0)) {
      continue
     }
     break;
    };
   }
   $3 = $5_1;
   $5_1 = $1963($7_1, 8);
   $3 = Math_fround($3 + $5_1);
   $6_1 = $6_1 + $9 | 0;
   $5_1 = Math_fround($1963($7_1, 4) + $5_1);
   $5_1 = Math_fround($10_1 + ($5_1 >= Math_fround(0.0) ? $5_1 : Math_fround(0.0)));
   $1_1 = $4_1 + 1 | 0;
   if (($1_1 | 0) != 3) {
    continue
   }
   break;
  };
  $1986($0_1, 64, $5_1);
  if (!($18_1 & 1)) {
   $1973($0_1, 20, 0)
  }
  label$87 : {
   if ($1944($0_1, 20)) {
    $1_1 = $2_1;
    break label$87;
   }
   if ($1944($0_1, 24)) {
    $1_1 = $2_1;
    break label$87;
   }
   $1_1 = $2_1;
   if (!$12_1) {
    break label$87
   }
   $1_1 = $1944($12_1, 0);
   $1973($0_1, 20, $1_1);
  }
  $1968($0_1, 104, 0);
  $1973($0_1, 28, $1944($0_1, 20));
  label$90 : {
   if (!$1_1) {
    break label$90
   }
   $7_1 = $1_1;
   $2_1 = $1944($0_1, 0);
   label$91 : {
    if (($2_1 | 0) <= 0) {
     $2_1 = ($2_1 | 0) > 0;
     break label$91;
    }
    $4_1 = $1944($0_1, 8);
    if (($1944($4_1, 0) | 0) == ($7_1 | 0)) {
     $1_1 = $4_1;
     $2_1 = 1;
     break label$91;
    }
    $9 = ($4_1 + Math_imul($2_1, 40) | 0) - 40 | 0;
    $6_1 = 0;
    while (1) {
     label$94 : {
      $6_1 = $6_1 + 1 | 0;
      if (($2_1 | 0) == ($6_1 | 0)) {
       $6_1 = $2_1;
       $1_1 = $9;
       break label$94;
      }
      $1_1 = $4_1 + Math_imul($6_1, 40) | 0;
      if (($1944($1_1, 0) | 0) != ($7_1 | 0)) {
       continue
      }
     }
     break;
    };
    $2_1 = ($2_1 | 0) > ($6_1 | 0);
   }
   if (!$2_1 | !$1_1) {
    break label$90
   }
   if ($1937($1_1, 4) & 192) {
    break label$90
   }
   $14 = $1963($8 + 52 | 0, 0);
   $24 = $1963($8 + 60 | 0, 0);
   $5_1 = $1963($1_1, 20);
   $17_1 = $1963($1_1, 16);
   $3 = $1963($1944(0, 73568), 6468);
   $2_1 = $1944($8, 56);
   $10_1 = $1963($8, 36);
   $4_1 = $1944($8, 32);
   $1973($0_1, 80, 0);
   $17_1 = Math_fround($17_1 - $10_1);
   $1_1 = ($1_1 - $1944($0_1, 8) | 0) / 40 | 0;
   $5_1 = Math_fround(Math_fround($5_1 + $17_1) + (($1_1 + 1 | 0) < ($1944($0_1, 0) - $2_1 | 0) ? $3 : Math_fround(1.0)));
   label$97 : {
    label$9814 : {
     $3 = Math_fround($17_1 - (($1_1 | 0) < ($4_1 | 0) ? Math_fround(-0.0) : $3));
     $17_1 = $1963($0_1, 76);
     if (!($3 < $17_1)) {
      $14 = Math_fround(Math_fround(Math_fround(Math_fround($1963($0_1 + 48 | 0, 0) - $1963($0_1, 40)) - $10_1) - $24) - $14);
      if (!($14 <= Math_fround($5_1 - $3))) {
       break label$9814
      }
     }
     $14 = $1963($0_1, 72);
     break label$97;
    }
    $10_1 = Math_fround($5_1 - $14);
    if (!($17_1 < $10_1)) {
     break label$90
    }
    $5_1 = $1963($0_1, 72);
    $14 = Math_fround($3 - $14);
    $3 = $10_1;
   }
   $1986($0_1, 76, $3);
   $3 = Math_fround($14 - $5_1);
   $1986($0_1, 80, $3 >= Math_fround(0.0) ? $3 : Math_fround(0.0));
  }
  $5_1 = $1963($0_1, 72);
  $3 = $1963($0_1, 64);
  $14 = $1963($0_1 + 48 | 0, 0);
  $24 = $1963($0_1, 40);
  $3 = Math_fround($3 - Math_fround($14 - $24));
  $5_1 = $3 > $5_1 ? $5_1 : $3;
  $5_1 = $5_1 >= Math_fround(0.0) ? $5_1 : Math_fround(0.0);
  $1986($0_1, 72, $5_1);
  $10_1 = $1963($0_1, 76);
  $3 = $3 > $10_1 ? $10_1 : $3;
  $3 = $3 >= Math_fround(0.0) ? $3 : Math_fround(0.0);
  $1986($0_1, 76, $3);
  label$100 : {
   if ($3 != $5_1) {
    $10_1 = $1963($0_1, 84);
    $17_1 = $1963($15_1, 6468);
    $23_1 = Math_fround($17_1 * Math_fround(70.0));
    $10_1 = $10_1 >= $23_1 ? $10_1 : $23_1;
    $23_1 = Math_fround(Math_fround(Math_abs(Math_fround($3 - $5_1))) / Math_fround(.30000001192092896));
    $10_1 = $10_1 >= $23_1 ? $10_1 : $23_1;
    $1986($0_1, 84, $10_1);
    label$102 : {
     if (($1944($0_1, 36) + 1 | 0) < ($1944($15_1, 6984) | 0)) {
      break label$102
     }
     if ($1963($0_1, 80) > Math_fround($17_1 * Math_fround(10.0))) {
      break label$102
     }
     $10_1 = Math_fround($10_1 * $1963($15_1 + 24 | 0, 0));
     if ($3 > $5_1) {
      $5_1 = Math_fround($5_1 + $10_1);
      $3 = $3 > $5_1 ? $5_1 : $3;
      break label$102;
     }
     if (!($3 < $5_1)) {
      $3 = $5_1;
      break label$102;
     }
     $5_1 = Math_fround($5_1 - $10_1);
     $3 = $3 <= $5_1 ? $5_1 : $3;
    }
    $1986($0_1, 72, $3);
    break label$100;
   }
   $1973($0_1, 84, 0);
  }
  $1986($0_1, 88, Math_fround($22_1 + Math_fround($24 + $1963($8, 36))));
  $1986($0_1, 92, Math_fround(Math_fround($14 - $1963($8, 60)) - $20_1));
  if (!($1937($0_1 + 14 | 0, 0) & 16)) {
   $1_1 = $1944($0_1 + 136 | 0, 0);
   label$108 : {
    if (($1_1 | 0) >= 0) {
     break label$108
    }
    $2_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0;
    $2_1 = ($2_1 | 0) > 0 ? $2_1 : 0;
    if (($1_1 | 0) >= ($2_1 | 0)) {
     break label$108
    }
    $1_1 = $16($2_1);
    $4_1 = $1944($0_1 + 140 | 0, 0);
    if ($4_1) {
     $1602($1_1, $4_1, $1944($0_1, 132));
     $17($1944($0_1, 140));
    }
    $1973($0_1, 136, $2_1);
    $1973($0_1, 140, $1_1);
   }
   $1973($0_1, 132, 0);
  }
  $1_1 = $1944($15_1, 7080);
  $1982($1_1, 208, $1959($0_1, 40), i64toi32_i32$HIGH_BITS);
  $3 = $1963($0_1 + 44 | 0, 0);
  $5_1 = $1963($0_1 + 52 | 0, 0);
  $1986($8, 96, $1963($0_1, 64));
  $1986($8, 100, Math_fround($5_1 - $3));
  $212($8 + 96 | 0, $1963($0_1 + 120 | 0, 0));
  $1_1 = $1_1 + 240 | 0;
  $3 = $1963($1_1, 0);
  $5_1 = Math_fround($1963($0_1, 40) + $1963($0_1, 68));
  $1986($1_1, 0, $3 >= $5_1 ? $3 : $5_1);
  global$0 = $8 + 112 | 0;
 }
 
 function $751($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0;
  $2_1 = $1944($0_1, 4);
  $2_1 = $2_1 & 64 ? 0 : $2_1 & 128 ? 2 : 1;
  $3 = $1944($1_1, 4);
  $3 = $3 & 64 ? 0 : $3 & 128 ? 2 : 1;
  if (($2_1 | 0) != ($3 | 0)) {
   return $2_1 - $3 | 0
  }
  return $1939($0_1, 34) - $1939($1_1, 34) | 0;
 }
 
 function $753($0_1, $1_1, $2_1) {
  $1_1 = $1944($1_1, 0);
  $1970($0_1, 100, $2_1);
  $1973($0_1, 96, $1_1);
 }
 
 function $756($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = 0, $14 = Math_fround(0), $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = 0, $21_1 = 0, $22_1 = Math_fround(0), $23_1 = 0, $24 = 0, $25_1 = 0, $26_1 = Math_fround(0), $27_1 = 0, $28_1 = 0, $29_1 = Math_fround(0), $30 = 0, $31_1 = 0, $32_1 = 0, $33_1 = 0, $34_1 = 0, $35_1 = 0, $36_1 = 0, $37 = 0, $38_1 = 0, $39_1 = 0, $40_1 = 0, $41_1 = 0, $42_1 = 0, $43_1 = 0, $44_1 = 0, wasm2js_f32$0 = Math_fround(0), wasm2js_f32$1 = Math_fround(0), wasm2js_i32$0 = 0;
  $8 = global$0 - 96 | 0;
  global$0 = $8;
  if ($1937($0_1, 103)) {
   $750($0_1)
  }
  $18_1 = $1944(0, 73568);
  $25_1 = $1944($18_1, 7080);
  $4_1 = 0;
  label$2 : {
   if ($1937($25_1, 143)) {
    break label$2
   }
   label$3 : {
    if ($1937($0_1 + 14 | 0, 0) & 16) {
     $16_1 = $23($1_1, 0);
     $79($16_1);
     break label$3;
    }
    $16_1 = $76($25_1, $1_1);
   }
   label$5 : {
    if (!$2_1) {
     break label$5
    }
    if ($1937($2_1, 0)) {
     break label$5
    }
    $1983($8 + 88 | 0, 0, 0, 0);
    $1983($8, 80, 0, 0);
    $213($8 + 80 | 0, $16_1, 0, 24);
    $4_1 = 0;
    break label$2;
   }
   $9 = $1944(0, 73568);
   $68($8 + 80 | 0, $1_1, 0, 1, Math_fround(-1.0));
   $6_1 = $1963($9 + 5476 | 0, 0);
   $11_1 = $1963($8, 80);
   $4_1 = $3 & 1048576;
   $27_1 = $4_1 ? 0 : $2_1;
   if ($27_1) {
    $12_1 = Math_fround($1963($9 + 5500 | 0, 0) + $1963($9, 6468))
   } else {
    $12_1 = Math_fround(1.0)
   }
   $7_1 = $9 + 5480 | 0;
   $5_1 = $2_1 | $4_1;
   $11_1 = Math_fround(Math_fround($11_1 + $6_1) + Math_fround($6_1 + $12_1));
   $12_1 = Math_fround($1963($1944(0, 73568), 6468) * Math_fround(20.0));
   $21_1 = $11_1 < $12_1;
   label$8 : {
    if ($16_1) {
     $15_1 = $1944($0_1, 0);
     label$10 : {
      if (($15_1 | 0) <= 0) {
       $4_1 = ($15_1 | 0) > 0;
       break label$10;
      }
      $9 = $1944($0_1, 8);
      if (($1944($9, 0) | 0) == ($16_1 | 0)) {
       $2_1 = $9;
       $4_1 = 1;
       break label$10;
      }
      $4_1 = ($9 + Math_imul($15_1, 40) | 0) - 40 | 0;
      while (1) {
       label$13 : {
        $13 = $13 + 1 | 0;
        if (($15_1 | 0) == ($13 | 0)) {
         $2_1 = $4_1;
         break label$13;
        }
        $2_1 = $9 + Math_imul($13, 40) | 0;
        if (($1944($2_1, 0) | 0) != ($16_1 | 0)) {
         continue
        }
       }
       break;
      };
      $4_1 = ($13 | 0) < ($15_1 | 0);
     }
     if ($4_1) {
      break label$8
     }
    }
    $2_1 = 0;
   }
   $6_1 = $1963($7_1, 0);
   $14 = $1963($8, 84);
   $11_1 = $21_1 ? $11_1 : $12_1;
   $9 = $2_1;
   if (!$2_1) {
    $4_1 = $1944($0_1, 0);
    $2_1 = $1944($0_1, 4);
    label$17 : {
     if (($4_1 | 0) != ($2_1 | 0)) {
      break label$17
     }
     $15_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
     $4_1 = $4_1 + 1 | 0;
     $4_1 = ($4_1 | 0) < ($15_1 | 0) ? $15_1 : $4_1;
     if (($2_1 | 0) >= ($4_1 | 0)) {
      break label$17
     }
     $2_1 = $16(Math_imul($4_1, 40));
     $15_1 = $1944($0_1, 8);
     if ($15_1) {
      $1602($2_1, $15_1, Math_imul($1944($0_1, 0), 40));
      $17($1944($0_1, 8));
     }
     $1973($0_1, 4, $4_1);
     $1973($0_1, 8, $2_1);
    }
    $2_1 = $1944($0_1, 8) + Math_imul($1944($0_1, 0), 40) | 0;
    $1982($2_1, 16, 0, 0);
    $1982($2_1, 8, -1, -1);
    $1982($2_1, 0, 0, 0);
    $1973($2_1, 36, 0);
    $1982($2_1, 28, -1, -1);
    $1973($2_1 + 24 | 0, 0, 0);
    $2_1 = $1944($0_1, 0);
    $1973($0_1, 0, $2_1 + 1 | 0);
    $2_1 = $1944($0_1, 8) + Math_imul($2_1, 40) | 0;
    $1986($2_1, 20, $11_1);
    $1973($2_1, 0, $16_1);
    $1968($0_1, 105, 1);
   }
   $1970($0_1, 108, ($2_1 - $1944($0_1, 8) | 0) / 40 | 0);
   $1986($2_1, 24, $11_1);
   $4_1 = $1941($0_1, 106);
   $1970($0_1, 106, $4_1 + 1 | 0);
   $1970($2_1, 32, $4_1);
   $15_1 = $1944($0_1, 36);
   $20_1 = $1944($0_1, 12);
   $4_1 = $1944($18_1, 6984);
   $13 = $5_1 ? $3 : $3 | 1048576;
   $1973($2_1, 4, $13);
   $7_1 = $1944($2_1, 8);
   $1973($2_1, 8, $4_1);
   $3 = $1944($0_1, 132);
   $5_1 = $3 - 1 | 0;
   $1973($2_1, 28, $3 >>> 0 >= $5_1 >>> 0 ? $5_1 : 0);
   $39($0_1 + 132 | 0, $1_1, ($1697($1_1) + $1_1 | 0) + 1 | 0);
   $21_1 = $13 & 2097152;
   $3 = $15_1 + 1 | 0;
   $7_1 = $7_1 + 1 | 0;
   $5_1 = ($7_1 | 0) >= ($4_1 | 0);
   label$21 : {
    if ($5_1) {
     break label$21
    }
    if (!($1937($0_1, 12) & 2)) {
     break label$21
    }
    if ($1944($0_1, 24)) {
     break label$21
    }
    label$22 : {
     if (($3 | 0) < ($4_1 | 0)) {
      if (!($1944($0_1, 20) | $21_1)) {
       break label$22
      }
      break label$21;
     }
     if ($21_1) {
      break label$21
     }
    }
    $1973($0_1, 24, $16_1);
   }
   label$24 : {
    if ($21_1 | !($13 & 2)) {
     break label$24
    }
    if (($1944($0_1, 20) | 0) == ($16_1 | 0)) {
     break label$24
    }
    $1973($0_1, 24, $16_1);
   }
   label$25 : {
    if (($1944($0_1, 28) | 0) == ($16_1 | 0)) {
     $1968($0_1, 104, 1);
     $15_1 = 1;
     break label$25;
    }
    $15_1 = 0;
    if ($1944($0_1, 20)) {
     break label$25
    }
    $15_1 = 0;
    if (($3 | 0) >= ($4_1 | 0)) {
     break label$25
    }
    $15_1 = 0;
    if (($1944($0_1, 0) | 0) != 1) {
     break label$25
    }
    $15_1 = !($1937($0_1, 12) & 2);
   }
   if (!(!(!$9 | ($3 | 0) >= ($4_1 | 0)) | $5_1)) {
    $1983($8 + 88 | 0, 0, 0, 0);
    $1983($8, 80, 0, 0);
    $213($8 + 80 | 0, $16_1, 0, 24);
    $4_1 = !$21_1 & $15_1;
    break label$2;
   }
   if (($1944($0_1, 20) | 0) == ($16_1 | 0)) {
    $1973($2_1, 12, $1944($18_1, 6984))
   }
   $12_1 = Math_fround(Math_fround($6_1 + $6_1) + $14);
   $6_1 = $1963($2_1, 16);
   $14 = $1963($2_1, 20);
   $30 = $1959($25_1, 208);
   $31_1 = i64toi32_i32$HIGH_BITS;
   $3 = $1944($2_1, 4) & 192;
   label$31 : {
    if (!$3) {
     $6_1 = Math_fround($6_1 - $1963($0_1, 72));
     label$33 : {
      if (Math_fround(Math_abs($6_1)) < Math_fround(2147483648.0)) {
       $9 = ~~$6_1;
       break label$33;
      }
      $9 = -2147483648;
     }
     $11_1 = Math_fround($9 | 0);
     $6_1 = $1963($0_1, 40);
     break label$31;
    }
    $11_1 = $1963($0_1, 40);
   }
   $22_1 = $1963($0_1 + 44 | 0, 0);
   $6_1 = Math_fround($6_1 + $11_1);
   $1986($25_1, 208, $6_1);
   $11_1 = Math_fround($22_1 + Math_fround(0.0));
   $1986($25_1 + 212 | 0, 0, $11_1);
   $1986($8 + 92 | 0, 0, Math_fround($12_1 + $11_1));
   $1986($8, 88, Math_fround($14 + $6_1));
   $1986($8, 84, $11_1);
   $1986($8, 80, $6_1);
   $9 = 0;
   label$35 : {
    if ($3) {
     break label$35
    }
    $9 = 1;
    if ($1963($8, 80) < $1963($0_1, 88)) {
     break label$35
    }
    $9 = $1963($8, 88) > $1963($0_1, 92);
   }
   $32_1 = $9;
   if ($9) {
    $6_1 = $1963($0_1, 88);
    $1986($8, 76, Math_fround($1963($8, 84) + Math_fround(-1.0)));
    $11_1 = $1963($8, 80);
    $1986($8, 72, $6_1 <= $11_1 ? $11_1 : $6_1);
    $6_1 = $1963($0_1, 92);
    $1986($8, 68, $1963($8 + 92 | 0, 0));
    $1986($8, 64, $6_1);
    $158($8 + 72 | 0, $8 - -64 | 0, 1);
   }
   $3 = $25_1 + 232 | 0;
   $9 = $1959($3, 0);
   $5_1 = i64toi32_i32$HIGH_BITS;
   $1986($8, 76, Math_fround($1963($8 + 92 | 0, 0) - $1963($8, 84)));
   $1986($8, 72, Math_fround($1963($8, 88) - $1963($8, 80)));
   $212($8 + 72 | 0, $1963($18_1 + 5480 | 0, 0));
   $1982($3, 0, $9, $5_1);
   label$37 : {
    if (!$213($8 + 80 | 0, $16_1, 0, 0)) {
     if ($32_1) {
      $159()
     }
     $1982($25_1, 208, $30, $31_1);
     $4_1 = $15_1;
     break label$37;
    }
    $3 = $21_1 ? 4128 : 4112;
    $33_1 = $569($8 + 80 | 0, $16_1, $8 + 72 | 0, $8 - -64 | 0, $1937($18_1, 7876) ? $3 | 512 : $3);
    if (!(!$33_1 | $21_1)) {
     $1973($0_1, 24, $16_1)
    }
    if (($1944($18_1, 7136) | 0) != ($16_1 | 0)) {
     $202()
    }
    label$42 : {
     if (!$1937($8, 64) | ($4_1 | 0) > ($7_1 | 0)) {
      break label$42
     }
     if (!$181(0, Math_fround(-1.0))) {
      break label$42
     }
     if ($1937($18_1, 7876)) {
      break label$42
     }
     if (!($1937($0_1, 12) & 1)) {
      break label$42
     }
     label$43 : {
      label$44 : {
       $6_1 = $1963($18_1 + 880 | 0, 0);
       if (!($6_1 < Math_fround(0.0))) {
        break label$44
       }
       if (!($1963($18_1 + 228 | 0, 0) < $1963($8, 80))) {
        break label$44
       }
       $1983($8, 56, $1959($18_1, 228), i64toi32_i32$HIGH_BITS);
       $3 = $8 + 56 | 0;
       break label$43;
      }
      if (!($6_1 > Math_fround(0.0))) {
       break label$42
      }
      if (!($1963($18_1 + 228 | 0, 0) > $1963($8, 88))) {
       break label$42
      }
      $1983($8, 48, $1959($18_1, 228), i64toi32_i32$HIGH_BITS);
      $3 = $8 + 48 | 0;
     }
     $1983($8, 24, $1959($3, 0), i64toi32_i32$HIGH_BITS);
     $9 = $8 + 24 | 0;
     $6_1 = Math_fround(0.0);
     label$1 : {
      if (!($1937($0_1, 12) & 1)) {
       break label$1
      }
      $10_1 = $1944($2_1, 4);
      if (!($10_1 & 192)) {
       $6_1 = $1963($0_1, 76)
      }
      $23_1 = $1944($0_1, 8);
      $4_1 = $2_1 - $23_1 | 0;
      $7_1 = ($4_1 | 0) / 40 | 0;
      $3 = $7_1;
      label$30 : {
       if (($4_1 | 0) < -39) {
        break label$30
       }
       $17_1 = $1944(0, 73568);
       $14 = Math_fround($1963($0_1, 40) - $6_1);
       $11_1 = Math_fround($14 + $1963($2_1, 16));
       $6_1 = $1963($9, 0);
       $19 = $11_1 > $6_1;
       $24 = $19 ? -1 : 1;
       $28_1 = $1944($0_1, 0);
       $9 = $7_1;
       $4_1 = $7_1;
       while (1) {
        $3 = $9;
        if (($4_1 | 0) >= ($28_1 | 0)) {
         break label$30
        }
        $5_1 = Math_imul($4_1, 40) + $23_1 | 0;
        $9 = $1944($5_1, 4);
        label$6 : {
         if (!($9 & 32 | ($10_1 ^ $9) & 192)) {
          $11_1 = Math_fround($14 + $1963($5_1, 16));
          $12_1 = $1963($17_1, 5500);
          label$81 : {
           if ($19) {
            $3 = $4_1;
            $9 = 0;
            if (!(Math_fround($11_1 - $12_1) < $6_1)) {
             break label$81
            }
            break label$6;
           }
           $3 = $4_1;
           $9 = 0;
           if (Math_fround($12_1 + Math_fround($11_1 + $1963($5_1, 20))) > $6_1) {
            break label$6
           }
          }
          $3 = $4_1;
          $9 = 1;
          break label$6;
         }
         $9 = 0;
        }
        if (!$9) {
         break label$30
        }
        $9 = $3;
        $4_1 = $4_1 + $24 | 0;
        if (($4_1 | 0) >= 0) {
         continue
        }
        break;
       };
      }
      if (($3 | 0) == ($7_1 | 0)) {
       break label$1
      }
      $9 = $1944($2_1, 0);
      $1970($0_1, 100, $3 - $7_1 | 0);
      $1973($0_1, 96, $9);
     }
    }
    $9 = $1944($25_1, 580);
    $3 = $9;
    $23_1 = $8 + 80 | 0;
    $4_1 = $23_1;
    $17_1 = 34;
    label$45 : {
     if ($1937($8, 64) | $1937($8, 72)) {
      break label$45
     }
     $7_1 = $20_1 & 2097152;
     $17_1 = $7_1 ? 35 : 37;
     if ($15_1) {
      break label$45
     }
     $17_1 = $7_1 ? 33 : 36;
    }
    $17_1 = $51($17_1, Math_fround(1.0));
    $7_1 = global$0 - 16 | 0;
    global$0 = $7_1;
    $20_1 = $1944(0, 73568);
    $6_1 = $1963($20_1 + ($13 & 2097152 ? 5484 : 5552) | 0, 0);
    $11_1 = $1963($4_1, 8);
    $12_1 = $1963($4_1, 0);
    $11_1 = Math_fround(Math_fround(Math_fround($11_1 - $12_1) * Math_fround(.5)) + Math_fround(-1.0));
    $6_1 = $6_1 < $11_1 ? $6_1 : $11_1;
    $6_1 = $6_1 <= Math_fround(0.0) ? Math_fround(0.0) : $6_1;
    $14 = Math_fround($1963($4_1, 4) + Math_fround(1.0));
    $11_1 = Math_fround($1963($4_1 + 12 | 0, 0) + Math_fround(-1.0));
    $10_1 = $1944($3, 84);
    $5_1 = $1944($3 + 88 | 0, 0);
    label$11 : {
     if (($10_1 | 0) != ($5_1 | 0)) {
      break label$11
     }
     $19 = $5_1 ? $5_1 + (($5_1 | 0) / 2 | 0) | 0 : 8;
     $10_1 = $10_1 + 1 | 0;
     $10_1 = ($10_1 | 0) < ($19 | 0) ? $19 : $10_1;
     if (($5_1 | 0) >= ($10_1 | 0)) {
      break label$11
     }
     $5_1 = $16($10_1 << 3);
     $19 = $1944($3 + 92 | 0, 0);
     if ($19) {
      $1602($5_1, $19, $1944($3, 84) << 3);
      $17($1944($3, 92));
     }
     $1973($3, 88, $10_1);
     $1973($3, 92, $5_1);
    }
    $5_1 = $1944($3 + 92 | 0, 0) + ($1944($3, 84) << 3) | 0;
    $1986($5_1, 4, $11_1);
    $1986($5_1, 0, $12_1);
    $1973($3, 84, $1944($3, 84) + 1 | 0);
    $22_1 = $1963($4_1, 0);
    $12_1 = Math_fround($14 + $6_1);
    $1986($7_1, 12, $12_1);
    $1986($7_1, 8, Math_fround($6_1 + $22_1));
    $5_1 = $7_1 + 8 | 0;
    $392($3, $5_1, $6_1, 6, 9);
    $14 = $1963($4_1, 8);
    $1986($7_1, 12, $12_1);
    $1986($7_1, 8, Math_fround($14 - $6_1));
    $392($3, $5_1, $6_1, 9, 12);
    $19 = $1944($4_1, 8);
    $10_1 = $1944($3, 84);
    $5_1 = $1944($3, 88);
    label$52 : {
     if (($10_1 | 0) != ($5_1 | 0)) {
      break label$52
     }
     $24 = $5_1 ? $5_1 + (($5_1 | 0) / 2 | 0) | 0 : 8;
     $10_1 = $10_1 + 1 | 0;
     $10_1 = ($10_1 | 0) < ($24 | 0) ? $24 : $10_1;
     if (($5_1 | 0) >= ($10_1 | 0)) {
      break label$52
     }
     $5_1 = $16($10_1 << 3);
     $24 = $1944($3, 92);
     if ($24) {
      $1602($5_1, $24, $1944($3, 84) << 3);
      $17($1944($3, 92));
     }
     $1973($3, 88, $10_1);
     $1973($3, 92, $5_1);
    }
    $5_1 = $1944($3, 92) + ($1944($3, 84) << 3) | 0;
    $1986($5_1, 4, $11_1);
    $1973($5_1, 0, $19);
    $5_1 = $1944($3, 84) + 1 | 0;
    $1973($3, 84, $5_1);
    $389($3, $1944($3, 92), $5_1, $17_1);
    $1973($3, 84, 0);
    if ($1963($20_1 + 5556 | 0, 0) > Math_fround(0.0)) {
     $14 = Math_fround($1963($4_1, 0) + Math_fround(.5));
     if (!$1944($3, 88)) {
      $5_1 = $16(64);
      $10_1 = $1944($3, 92);
      if ($10_1) {
       $1602($5_1, $10_1, $1944($3, 84) << 3);
       $17($1944($3, 92));
      }
      $1973($3, 88, 8);
      $1973($3, 92, $5_1);
     }
     $5_1 = $1944($3, 92) + ($1944($3, 84) << 3) | 0;
     $1986($5_1, 4, $11_1);
     $1986($5_1, 0, $14);
     $1973($3, 84, $1944($3, 84) + 1 | 0);
     $14 = $1963($4_1, 0);
     $12_1 = Math_fround($12_1 + Math_fround(.5));
     $1986($7_1, 12, $12_1);
     $1986($7_1, 8, Math_fround(Math_fround($6_1 + $14) + Math_fround(.5)));
     $5_1 = $7_1 + 8 | 0;
     $392($3, $5_1, $6_1, 6, 9);
     $14 = $1963($4_1, 8);
     $1986($7_1, 12, $12_1);
     $1986($7_1, 8, Math_fround(Math_fround($14 - $6_1) + Math_fround(-.5)));
     $392($3, $5_1, $6_1, 9, 12);
     $6_1 = Math_fround($1963($4_1, 8) + Math_fround(-.5));
     $5_1 = $1944($3, 84);
     $4_1 = $1944($3, 88);
     label$12 : {
      if (($5_1 | 0) != ($4_1 | 0)) {
       break label$12
      }
      $10_1 = $4_1 ? $4_1 + (($4_1 | 0) / 2 | 0) | 0 : 8;
      $5_1 = $5_1 + 1 | 0;
      $5_1 = ($5_1 | 0) < ($10_1 | 0) ? $10_1 : $5_1;
      if (($4_1 | 0) >= ($5_1 | 0)) {
       break label$12
      }
      $4_1 = $16($5_1 << 3);
      $10_1 = $1944($3, 92);
      if ($10_1) {
       $1602($4_1, $10_1, $1944($3, 84) << 3);
       $17($1944($3, 92));
      }
      $1973($3, 88, $5_1);
      $1973($3, 92, $4_1);
     }
     $4_1 = $1944($3, 92) + ($1944($3, 84) << 3) | 0;
     $1986($4_1, 4, $11_1);
     $1986($4_1, 0, $6_1);
     $1973($3, 84, $1944($3, 84) + 1 | 0);
     $4_1 = $51(5, Math_fround(1.0));
     $388($3, $1944($3, 92), $1944($3, 84), $4_1, 0, $1963($20_1, 5556));
     $1973($3, 84, 0);
    }
    global$0 = $7_1 + 16 | 0;
    $73($23_1, $16_1, 1);
    label$47 : {
     if (!$89(32)) {
      break label$47
     }
     label$48 : {
      if (!$176(1, 0)) {
       $3 = $177(1);
       if ($21_1) {
        break label$47
       }
       if ($3) {
        break label$48
       }
       break label$47;
      }
      if ($21_1) {
       break label$47
      }
     }
     $1973($0_1, 24, $16_1);
    }
    $4_1 = $13 | $1944($0_1, 12) >>> 1 & 4;
    if ($27_1) {
     $3 = $268($16_1)
    } else {
     $3 = 0
    }
    $13 = $1959($0_1, 116);
    $7_1 = i64toi32_i32$HIGH_BITS;
    $1983($8, 16, $13, $7_1);
    $1983($8, 32, $13, $7_1);
    $20_1 = $8 + 80 | 0;
    $10_1 = $8 + 16 | 0;
    $13 = $8 + 46 | 0;
    $7_1 = global$0 - 112 | 0;
    global$0 = $7_1;
    $5_1 = $1944(0, 73568);
    $68($7_1 + 104 | 0, $1_1, 0, 1, Math_fround(-1.0));
    $23_1 = $8 + 47 | 0;
    if ($23_1) {
     $1968($23_1, 0, 0)
    }
    if ($13) {
     $1968($13, 0, 0)
    }
    $26_1 = $1963($20_1, 8);
    $14 = $1963($20_1, 0);
    $29_1 = Math_fround($26_1 - $14);
    label$32 : {
     if ($29_1 <= Math_fround(1.0)) {
      break label$32
     }
     $6_1 = $1963($10_1, 4);
     $22_1 = $1963($20_1, 4);
     $12_1 = $1963($10_1, 0);
     $1986($7_1, 100, $1963($20_1 + 12 | 0, 0));
     $11_1 = Math_fround($26_1 - $12_1);
     $1986($7_1, 96, $11_1);
     $1986($7_1, 92, Math_fround($22_1 + $6_1));
     $6_1 = Math_fround($14 + $12_1);
     $1986($7_1, 88, $6_1);
     if ($13) {
      $1968($13, 0, Math_fround($6_1 + $1963($7_1, 104)) > $11_1)
     }
     $6_1 = $1963($5_1, 6468);
     $1986($7_1, 84, $22_1);
     $12_1 = Math_fround(Math_fround($26_1 - Math_fround($12_1 + $12_1)) - $6_1);
     $12_1 = $12_1 <= $14 ? $14 : $12_1;
     $1986($7_1, 80, $12_1);
     $17_1 = 0;
     label$53 : {
      if (!$3) {
       break label$53
      }
      label$7 : {
       if ($15_1) {
        break label$7
       }
       $14 = $1963($5_1 + 5560 | 0, 0);
       if (($6_1 >= $14 ? $6_1 : $14) <= $29_1) {
        break label$7
       }
       $17_1 = 0;
       break label$53;
      }
      $13 = $1944($5_1, 7116);
      label$84 : {
       if (($13 | 0) == ($16_1 | 0) | ($3 | 0) == ($13 | 0)) {
        break label$84
       }
       $13 = $1944($5_1, 7136);
       if (($13 | 0) == ($16_1 | 0)) {
        break label$84
       }
       $17_1 = 0;
       if (($3 | 0) != ($13 | 0)) {
        break label$53
       }
      }
      $17_1 = 1;
     }
     $14 = Math_fround($6_1 + $12_1);
     $13 = $1963($20_1, 8) >= $14 & $4_1;
     label$9 : {
      if ($17_1) {
       $19 = $7_1 + 72 | 0;
       $24 = $5_1 + 7296 | 0;
       $1973($19, 0, $1944($24, 0));
       $28_1 = $7_1 - -64 | 0;
       $34_1 = $5_1 + 7288 | 0;
       $1983($28_1, 0, $1959($34_1, 0), i64toi32_i32$HIGH_BITS);
       $35_1 = $7_1 + 56 | 0;
       $36_1 = $5_1 + 7280 | 0;
       $1983($35_1, 0, $1959($36_1, 0), i64toi32_i32$HIGH_BITS);
       $37 = $7_1 + 48 | 0;
       $38_1 = $5_1 + 7272 | 0;
       $1983($37, 0, $1959($38_1, 0), i64toi32_i32$HIGH_BITS);
       $39_1 = $7_1 + 40 | 0;
       $40_1 = $5_1 + 7264 | 0;
       $1983($39_1, 0, $1959($40_1, 0), i64toi32_i32$HIGH_BITS);
       $41_1 = $7_1 + 32 | 0;
       $42_1 = $5_1 + 7256 | 0;
       $1983($41_1, 0, $1959($42_1, 0), i64toi32_i32$HIGH_BITS);
       $43_1 = $7_1 + 24 | 0;
       $44_1 = $5_1 + 7248 | 0;
       $1983($43_1, 0, $1959($44_1, 0), i64toi32_i32$HIGH_BITS);
       $1983($7_1, 16, $1959($5_1, 7240), i64toi32_i32$HIGH_BITS);
       $59(11, $10_1);
       $10_1 = $576($3, $7_1 + 80 | 0);
       $60(1);
       $1973($24, 0, $1944($19, 0));
       $1982($34_1, 0, $1960($28_1, 0), i64toi32_i32$HIGH_BITS);
       $1982($36_1, 0, $1960($35_1, 0), i64toi32_i32$HIGH_BITS);
       $1982($38_1, 0, $1960($37, 0), i64toi32_i32$HIGH_BITS);
       $1982($40_1, 0, $1960($39_1, 0), i64toi32_i32$HIGH_BITS);
       $1982($42_1, 0, $1960($41_1, 0), i64toi32_i32$HIGH_BITS);
       $1982($44_1, 0, $1960($43_1, 0), i64toi32_i32$HIGH_BITS);
       $1982($5_1, 7240, $1960($7_1, 16), i64toi32_i32$HIGH_BITS);
       if (!($4_1 & 4)) {
        $10_1 = $176(2, 0) ? 1 : $10_1
       }
       $3 = 1;
       break label$9;
      }
      $10_1 = 0;
      $3 = $13;
      if (!$3) {
       break label$9
      }
      $12_1 = $1963($5_1 + 5476 | 0, 0);
      $26_1 = $1963($7_1, 84);
      $29_1 = Math_fround($22_1 + $6_1);
      $22_1 = $1963($5_1 + 5480 | 0, 0);
      $1986($7_1, 12, Math_fround(Math_fround($26_1 + Math_fround($29_1 + Math_fround($22_1 + $22_1))) * Math_fround(.5)));
      $1986($7_1, 8, Math_fround(Math_fround($1963($7_1, 80) + Math_fround($14 + Math_fround($12_1 + $12_1))) * Math_fround(.5)));
      $4_1 = $51(0, Math_fround(1.0));
      $1983($7_1, 0, $1959($7_1, 8), i64toi32_i32$HIGH_BITS);
      $477($9, $7_1, $4_1);
     }
     label$135 : {
      if (!$3) {
       $6_1 = (wasm2js_f32$0 = $11_1, wasm2js_f32$1 = Math_fround($1963($20_1, 8) + Math_fround(-1.0)), wasm2js_i32$0 = $17_1, wasm2js_i32$0 ? wasm2js_f32$0 : wasm2js_f32$1);
       break label$135;
      }
      $12_1 = Math_fround($6_1 * Math_fround(.800000011920929));
      $1986($7_1, 96, Math_fround($1963($7_1, 96) - ($13 ? $12_1 : Math_fround(0.0))));
      $6_1 = Math_fround($11_1 - ($17_1 ? $6_1 : $12_1));
      $11_1 = $6_1;
     }
     $70($9, $7_1 + 88 | 0, $7_1 + 96 | 0, $11_1, $6_1, $1_1, 0, $7_1 + 104 | 0);
     if (!$23_1) {
      break label$32
     }
     $1968($23_1, 0, $10_1);
    }
    global$0 = $7_1 + 112 | 0;
    label$523 : {
     if (!$27_1) {
      break label$523
     }
     if (!($1937($8, 47) & 255)) {
      break label$523
     }
     $1968($27_1, 0, 0);
     if (!($1937($2_1, 4) & 1)) {
      $1968($2_1, 36, 1);
      if (($1944($0_1, 28) | 0) != ($1944($2_1, 0) | 0)) {
       break label$523
      }
      $1973($2_1, 8, -1);
      $1982($0_1, 20, 0, 0);
      break label$523;
     }
     $4_1 = $1944($0_1, 28);
     $3 = $1944($2_1, 0);
     if (($4_1 | 0) == ($3 | 0)) {
      break label$523
     }
     $1973($0_1, 24, $3);
    }
    if ($32_1) {
     $159()
    }
    $1982($25_1, 208, $30, $31_1);
    label$55 : {
     if (!$1937($8, 46)) {
      break label$55
     }
     if (($1944($18_1, 7116) | 0) != ($16_1 | 0)) {
      break label$55
     }
     if ($1937($8, 64) & 255) {
      break label$55
     }
     if (!($1963($18_1, 7132) > $1963($18_1, 12080))) {
      break label$55
     }
     if (!$89(0)) {
      break label$55
     }
     if ($1937($0_1, 12) & 32) {
      break label$55
     }
     if ($1937($2_1, 4) & 16) {
      break label$55
     }
     $0_1 = $62($1_1);
     $1973($8, 4, $1_1);
     $1973($8, 0, $0_1 - $1_1 | 0);
     $162(5445, $8);
    }
    $4_1 = $21_1 ? $33_1 : $15_1;
   }
  }
  $0_1 = $4_1;
  global$0 = $8 + 96 | 0;
  return $0_1;
 }
 
 function $759() {
  var $0_1 = 0;
  label$1 : {
   $0_1 = $1944(0, 73568);
   if ($1937($1944($0_1, 7080), 143)) {
    break label$1
   }
   $0_1 = $1944($0_1, 8112);
   if (!$0_1) {
    break label$1
   }
   if ($1937($1944($0_1, 8) + Math_imul($1939($0_1, 108), 40) | 0, 4) & 8) {
    break label$1
   }
   $269();
  }
 }
 
 function $762($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0;
  $1_1 = global$0 - 48 | 0;
  global$0 = $1_1;
  $2_1 = global$0 - 16 | 0;
  $1982($1_1, 0, 0, 0);
  $1982($1_1 + 32 | 0, 0, 0, 0);
  $1982($1_1 + 24 | 0, 0, 0, 0);
  $1982($1_1 + 16 | 0, 0, 0, 0);
  $1982($1_1 + 8 | 0, 0, 0, 0);
  if (!$1944(0, 97608)) {
   $1982(0, 97620, -1, -1);
   $1982(0, 97612, 4096, 4096);
   $1973(0, 97608, $2_1 + 12 & -16 ^ 1431655768);
   $1973(0, 97628, 0);
   $1973(0, 97580, 0);
  }
  $11_1 = $1944(0, 97160);
  if ($11_1) {
   $5_1 = 97584;
   $9 = 1;
   $12_1 = $1944(0, 97148);
   $6_1 = $12_1 + 40 | 0;
   $8 = $6_1;
   while (1) {
    $7_1 = $1944($5_1, 0);
    $4_1 = $7_1 + ($7_1 + 8 & 7 ? -8 - $7_1 & 7 : 0) | 0;
    $3 = $1944($5_1, 4) + $7_1 | 0;
    while (1) {
     label$4 : {
      if (($4_1 | 0) == ($11_1 | 0) | $3 >>> 0 <= $4_1 >>> 0) {
       break label$4
      }
      $2_1 = $1944($4_1, 4);
      if (($2_1 | 0) == 7) {
       break label$4
      }
      $10_1 = $2_1 & -8;
      $2_1 = ($2_1 & 3) == 1;
      $8 = ($2_1 ? $10_1 : 0) + $8 | 0;
      $6_1 = $6_1 + $10_1 | 0;
      $9 = $2_1 + $9 | 0;
      $4_1 = $4_1 + $10_1 | 0;
      if ($7_1 >>> 0 <= $4_1 >>> 0) {
       continue
      }
     }
     break;
    };
    $5_1 = $1944($5_1, 8);
    if ($5_1) {
     continue
    }
    break;
   };
   $1973($1_1, 4, $9);
   $1973($1_1, 0, $6_1);
   $3 = $1944(0, 97568);
   $1973($1_1, 16, $3 - $6_1 | 0);
   $2_1 = $1944(0, 97572);
   $1973($1_1, 36, $12_1);
   $1973($1_1, 32, $8);
   $1973($1_1, 28, $3 - $8 | 0);
   $1973($1_1, 20, $2_1);
  }
  $3 = fimport$0() | 0;
  $1973($0_1, 0, $3);
  $1973($1_1, 40, $1944($1_1, 0));
  $2_1 = fimport$1(72724, $1_1 + 40 | 0) | 0;
  $0_1 = fimport$2(13892) | 0;
  fimport$3($3 | 0, $0_1 | 0, $2_1 | 0);
  fimport$4($0_1 | 0);
  fimport$4($2_1 | 0);
  $1973($1_1, 40, $1944($1_1, 4));
  $2_1 = fimport$1(72724, $1_1 + 40 | 0) | 0;
  $0_1 = fimport$2(4824) | 0;
  fimport$3($3 | 0, $0_1 | 0, $2_1 | 0);
  fimport$4($0_1 | 0);
  fimport$4($2_1 | 0);
  $1973($1_1, 40, $1944($1_1, 8));
  $2_1 = fimport$1(72724, $1_1 + 40 | 0) | 0;
  $0_1 = fimport$2(4801) | 0;
  fimport$3($3 | 0, $0_1 | 0, $2_1 | 0);
  fimport$4($0_1 | 0);
  fimport$4($2_1 | 0);
  $1973($1_1, 40, $1944($1_1, 12));
  $2_1 = fimport$1(72724, $1_1 + 40 | 0) | 0;
  $0_1 = fimport$2(4808) | 0;
  fimport$3($3 | 0, $0_1 | 0, $2_1 | 0);
  fimport$4($0_1 | 0);
  fimport$4($2_1 | 0);
  $1973($1_1, 40, $1944($1_1, 16));
  $2_1 = fimport$1(72724, $1_1 + 40 | 0) | 0;
  $0_1 = fimport$2(11919) | 0;
  fimport$3($3 | 0, $0_1 | 0, $2_1 | 0);
  fimport$4($0_1 | 0);
  fimport$4($2_1 | 0);
  $1973($1_1, 40, $1944($1_1, 20));
  $2_1 = fimport$1(72724, $1_1 + 40 | 0) | 0;
  $0_1 = fimport$2(4792) | 0;
  fimport$3($3 | 0, $0_1 | 0, $2_1 | 0);
  fimport$4($0_1 | 0);
  fimport$4($2_1 | 0);
  $1973($1_1, 40, $1944($1_1, 24));
  $2_1 = fimport$1(72724, $1_1 + 40 | 0) | 0;
  $0_1 = fimport$2(4800) | 0;
  fimport$3($3 | 0, $0_1 | 0, $2_1 | 0);
  fimport$4($0_1 | 0);
  fimport$4($2_1 | 0);
  $1973($1_1, 40, $1944($1_1, 28));
  $2_1 = fimport$1(72724, $1_1 + 40 | 0) | 0;
  $0_1 = fimport$2(4814) | 0;
  fimport$3($3 | 0, $0_1 | 0, $2_1 | 0);
  fimport$4($0_1 | 0);
  fimport$4($2_1 | 0);
  $1973($1_1, 40, $1944($1_1, 32));
  $2_1 = fimport$1(72724, $1_1 + 40 | 0) | 0;
  $0_1 = fimport$2(4823) | 0;
  fimport$3($3 | 0, $0_1 | 0, $2_1 | 0);
  fimport$4($0_1 | 0);
  fimport$4($2_1 | 0);
  $1973($1_1, 40, $1944($1_1, 36));
  $2_1 = fimport$1(72724, $1_1 + 40 | 0) | 0;
  $0_1 = fimport$2(2193) | 0;
  fimport$3($3 | 0, $0_1 | 0, $2_1 | 0);
  fimport$4($0_1 | 0);
  fimport$4($2_1 | 0);
  global$0 = $1_1 + 48 | 0;
 }
 
 function $763($0_1, $1_1) {
  var $2_1 = Math_fround(0), $3 = 0, $4_1 = 0.0, $5_1 = 0, $6_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $3 = $1944($0_1, 0);
  $6_1 = fimport$2(1643) | 0;
  $3 = fimport$7($3 | 0, $6_1 | 0) | 0;
  fimport$4($6_1 | 0);
  $4_1 = +fimport$5($3 | 0, 72808, $5_1 + 8 | 0);
  fimport$6($1944($5_1, 8) | 0);
  $2_1 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($4_1 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $2_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($4_1 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $2_1 = Math_fround($4_1);
  }
  $1986($1_1, 0, $2_1);
  fimport$4($3 | 0);
  $0_1 = $1944($0_1, 0);
  $3 = fimport$2(1245) | 0;
  $0_1 = fimport$7($0_1 | 0, $3 | 0) | 0;
  fimport$4($3 | 0);
  $4_1 = +fimport$5($0_1 | 0, 72808, $5_1 + 12 | 0);
  fimport$6($1944($5_1, 12) | 0);
  $2_1 = Math_fround(3402823466385288598117041.0e14);
  label$2 : {
   if ($4_1 >= 3402823466385288598117041.0e14) {
    break label$2
   }
   $2_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($4_1 <= -3402823466385288598117041.0e14) {
    break label$2
   }
   $2_1 = Math_fround($4_1);
  }
  $1986($1_1, 4, $2_1);
  fimport$4($0_1 | 0);
  global$0 = $5_1 + 16 | 0;
  return $1_1;
 }
 
 function $764($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1986($3, 8, $1963($1_1, 0));
  $4_1 = fimport$1(72796, $3 + 8 | 0) | 0;
  $6_1 = $1944($2_1, 0);
  $5_1 = fimport$2(1643) | 0;
  fimport$3($6_1 | 0, $5_1 | 0, $4_1 | 0);
  fimport$4($5_1 | 0);
  fimport$4($4_1 | 0);
  $1986($3, 8, $1963($1_1, 4));
  $1_1 = fimport$1(72796, $3 + 8 | 0) | 0;
  $5_1 = $1944($2_1, 0);
  $4_1 = fimport$2(1245) | 0;
  fimport$3($5_1 | 0, $4_1 | 0, $1_1 | 0);
  fimport$4($4_1 | 0);
  fimport$4($1_1 | 0);
  $1973($0_1, 0, $1944($2_1, 0));
  $1973($2_1, 0, 0);
  global$0 = $3 + 16 | 0;
 }
 
 function $765($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0;
  $5_1 = $1944($1_1, 0);
  $4_1 = fimport$2(1643) | 0;
  fimport$3($5_1 | 0, $4_1 | 0, $1944($2_1, 0) | 0);
  fimport$4($4_1 | 0);
  $4_1 = $1944($1_1, 0);
  $2_1 = fimport$2(1245) | 0;
  fimport$3($4_1 | 0, $2_1 | 0, $1944($3, 0) | 0);
  fimport$4($2_1 | 0);
  $1973($0_1, 0, $1944($1_1, 0));
  $1973($1_1, 0, 0);
 }
 
 function $766($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0;
  $3 = $1944($2_1, 0);
  $4_1 = fimport$2(1643) | 0;
  $3 = fimport$7($3 | 0, $4_1 | 0) | 0;
  fimport$4($4_1 | 0);
  $5_1 = $1944($1_1, 0);
  $4_1 = fimport$2(1643) | 0;
  fimport$3($5_1 | 0, $4_1 | 0, $3 | 0);
  fimport$4($4_1 | 0);
  fimport$4($3 | 0);
  $2_1 = $1944($2_1, 0);
  $3 = fimport$2(1245) | 0;
  $2_1 = fimport$7($2_1 | 0, $3 | 0) | 0;
  fimport$4($3 | 0);
  $4_1 = $1944($1_1, 0);
  $3 = fimport$2(1245) | 0;
  fimport$3($4_1 | 0, $3 | 0, $2_1 | 0);
  fimport$4($3 | 0);
  fimport$4($2_1 | 0);
  $1973($0_1, 0, $1944($1_1, 0));
  $1973($1_1, 0, 0);
 }
 
 function $767($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = $1944($0_1, 0);
  $3 = fimport$2(1643) | 0;
  $2_1 = fimport$7($2_1 | 0, $3 | 0) | 0;
  fimport$4($3 | 0);
  $3 = $1944($1_1, 0);
  $4_1 = fimport$2(1643) | 0;
  $3 = fimport$7($3 | 0, $4_1 | 0) | 0;
  fimport$4($4_1 | 0);
  $4_1 = fimport$8($2_1 | 0, $3 | 0) | 0;
  fimport$4($3 | 0);
  fimport$4($2_1 | 0);
  $2_1 = 0;
  if ($4_1) {
   $0_1 = $1944($0_1, 0);
   $2_1 = fimport$2(1245) | 0;
   $0_1 = fimport$7($0_1 | 0, $2_1 | 0) | 0;
   fimport$4($2_1 | 0);
   $1_1 = $1944($1_1, 0);
   $2_1 = fimport$2(1245) | 0;
   $1_1 = fimport$7($1_1 | 0, $2_1 | 0) | 0;
   fimport$4($2_1 | 0);
   $2_1 = fimport$8($0_1 | 0, $1_1 | 0) | 0;
   fimport$4($1_1 | 0);
   fimport$4($0_1 | 0);
  }
  return $2_1 | 0;
 }
 
 function $768($0_1, $1_1) {
  var $2_1 = Math_fround(0), $3 = 0, $4_1 = 0.0, $5_1 = 0, $6_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $3 = $1944($0_1, 0);
  $6_1 = fimport$2(1643) | 0;
  $3 = fimport$7($3 | 0, $6_1 | 0) | 0;
  fimport$4($6_1 | 0);
  $4_1 = +fimport$5($3 | 0, 72808, $5_1 + 12 | 0);
  fimport$6($1944($5_1, 12) | 0);
  $2_1 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($4_1 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $2_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($4_1 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $2_1 = Math_fround($4_1);
  }
  $1986($1_1, 0, $2_1);
  fimport$4($3 | 0);
  $3 = $1944($0_1, 0);
  $6_1 = fimport$2(1245) | 0;
  $3 = fimport$7($3 | 0, $6_1 | 0) | 0;
  fimport$4($6_1 | 0);
  $4_1 = +fimport$5($3 | 0, 72808, $5_1 + 12 | 0);
  fimport$6($1944($5_1, 12) | 0);
  $2_1 = Math_fround(3402823466385288598117041.0e14);
  label$2 : {
   if ($4_1 >= 3402823466385288598117041.0e14) {
    break label$2
   }
   $2_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($4_1 <= -3402823466385288598117041.0e14) {
    break label$2
   }
   $2_1 = Math_fround($4_1);
  }
  $1986($1_1, 4, $2_1);
  fimport$4($3 | 0);
  $3 = $1944($0_1, 0);
  $6_1 = fimport$2(1063) | 0;
  $3 = fimport$7($3 | 0, $6_1 | 0) | 0;
  fimport$4($6_1 | 0);
  $4_1 = +fimport$5($3 | 0, 72808, $5_1 + 12 | 0);
  fimport$6($1944($5_1, 12) | 0);
  $2_1 = Math_fround(3402823466385288598117041.0e14);
  label$3 : {
   if ($4_1 >= 3402823466385288598117041.0e14) {
    break label$3
   }
   $2_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($4_1 <= -3402823466385288598117041.0e14) {
    break label$3
   }
   $2_1 = Math_fround($4_1);
  }
  $1986($1_1, 8, $2_1);
  fimport$4($3 | 0);
  $0_1 = $1944($0_1, 0);
  $3 = fimport$2(1857) | 0;
  $0_1 = fimport$7($0_1 | 0, $3 | 0) | 0;
  fimport$4($3 | 0);
  $4_1 = +fimport$5($0_1 | 0, 72808, $5_1 + 12 | 0);
  fimport$6($1944($5_1, 12) | 0);
  $2_1 = Math_fround(3402823466385288598117041.0e14);
  label$4 : {
   if ($4_1 >= 3402823466385288598117041.0e14) {
    break label$4
   }
   $2_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($4_1 <= -3402823466385288598117041.0e14) {
    break label$4
   }
   $2_1 = Math_fround($4_1);
  }
  $1986($1_1, 12, $2_1);
  fimport$4($0_1 | 0);
  global$0 = $5_1 + 16 | 0;
  return $1_1;
 }
 
 function $770($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0;
  $7_1 = $1944($1_1, 0);
  $6_1 = fimport$2(1643) | 0;
  fimport$3($7_1 | 0, $6_1 | 0, $1944($2_1, 0) | 0);
  fimport$4($6_1 | 0);
  $6_1 = $1944($1_1, 0);
  $2_1 = fimport$2(1245) | 0;
  fimport$3($6_1 | 0, $2_1 | 0, $1944($3, 0) | 0);
  fimport$4($2_1 | 0);
  $3 = $1944($1_1, 0);
  $2_1 = fimport$2(1063) | 0;
  fimport$3($3 | 0, $2_1 | 0, $1944($4_1, 0) | 0);
  fimport$4($2_1 | 0);
  $3 = $1944($1_1, 0);
  $2_1 = fimport$2(1857) | 0;
  fimport$3($3 | 0, $2_1 | 0, $1944($5_1, 0) | 0);
  fimport$4($2_1 | 0);
  $1973($0_1, 0, $1944($1_1, 0));
  $1973($1_1, 0, 0);
 }
 
 function $771($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0;
  $3 = $1944($2_1, 0);
  $4_1 = fimport$2(1643) | 0;
  $3 = fimport$7($3 | 0, $4_1 | 0) | 0;
  fimport$4($4_1 | 0);
  $5_1 = $1944($1_1, 0);
  $4_1 = fimport$2(1643) | 0;
  fimport$3($5_1 | 0, $4_1 | 0, $3 | 0);
  fimport$4($4_1 | 0);
  fimport$4($3 | 0);
  $3 = $1944($2_1, 0);
  $4_1 = fimport$2(1245) | 0;
  $3 = fimport$7($3 | 0, $4_1 | 0) | 0;
  fimport$4($4_1 | 0);
  $5_1 = $1944($1_1, 0);
  $4_1 = fimport$2(1245) | 0;
  fimport$3($5_1 | 0, $4_1 | 0, $3 | 0);
  fimport$4($4_1 | 0);
  fimport$4($3 | 0);
  $3 = $1944($2_1, 0);
  $4_1 = fimport$2(1063) | 0;
  $3 = fimport$7($3 | 0, $4_1 | 0) | 0;
  fimport$4($4_1 | 0);
  $5_1 = $1944($1_1, 0);
  $4_1 = fimport$2(1063) | 0;
  fimport$3($5_1 | 0, $4_1 | 0, $3 | 0);
  fimport$4($4_1 | 0);
  fimport$4($3 | 0);
  $2_1 = $1944($2_1, 0);
  $3 = fimport$2(1857) | 0;
  $2_1 = fimport$7($2_1 | 0, $3 | 0) | 0;
  fimport$4($3 | 0);
  $4_1 = $1944($1_1, 0);
  $3 = fimport$2(1857) | 0;
  fimport$3($4_1 | 0, $3 | 0, $2_1 | 0);
  fimport$4($3 | 0);
  fimport$4($2_1 | 0);
  $1973($0_1, 0, $1944($1_1, 0));
  $1973($1_1, 0, 0);
 }
 
 function $772($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = $1944($0_1, 0);
  $3 = fimport$2(1643) | 0;
  $2_1 = fimport$7($2_1 | 0, $3 | 0) | 0;
  fimport$4($3 | 0);
  $3 = $1944($1_1, 0);
  $4_1 = fimport$2(1643) | 0;
  $3 = fimport$7($3 | 0, $4_1 | 0) | 0;
  fimport$4($4_1 | 0);
  $4_1 = fimport$8($2_1 | 0, $3 | 0) | 0;
  fimport$4($3 | 0);
  fimport$4($2_1 | 0);
  if (!$4_1) {
   return 0
  }
  $2_1 = $1944($0_1, 0);
  $3 = fimport$2(1245) | 0;
  $2_1 = fimport$7($2_1 | 0, $3 | 0) | 0;
  fimport$4($3 | 0);
  $3 = $1944($1_1, 0);
  $4_1 = fimport$2(1245) | 0;
  $3 = fimport$7($3 | 0, $4_1 | 0) | 0;
  fimport$4($4_1 | 0);
  $4_1 = fimport$8($2_1 | 0, $3 | 0) | 0;
  fimport$4($3 | 0);
  fimport$4($2_1 | 0);
  if (!$4_1) {
   return 0
  }
  $2_1 = $1944($0_1, 0);
  $3 = fimport$2(1063) | 0;
  $2_1 = fimport$7($2_1 | 0, $3 | 0) | 0;
  fimport$4($3 | 0);
  $3 = $1944($1_1, 0);
  $4_1 = fimport$2(1063) | 0;
  $3 = fimport$7($3 | 0, $4_1 | 0) | 0;
  fimport$4($4_1 | 0);
  $4_1 = fimport$8($2_1 | 0, $3 | 0) | 0;
  fimport$4($3 | 0);
  fimport$4($2_1 | 0);
  $2_1 = 0;
  if ($4_1) {
   $0_1 = $1944($0_1, 0);
   $2_1 = fimport$2(1857) | 0;
   $0_1 = fimport$7($0_1 | 0, $2_1 | 0) | 0;
   fimport$4($2_1 | 0);
   $1_1 = $1944($1_1, 0);
   $2_1 = fimport$2(1857) | 0;
   $1_1 = fimport$7($1_1 | 0, $2_1 | 0) | 0;
   fimport$4($2_1 | 0);
   $2_1 = fimport$8($0_1 | 0, $1_1 | 0) | 0;
   fimport$4($1_1 | 0);
   fimport$4($0_1 | 0);
  }
  return $2_1 | 0;
 }
 
 function $773($0_1, $1_1) {
  var $2_1 = 0.0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0.0, $12_1 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $7_1 = $426($0_1);
  $8 = $1944($1_1, 0);
  $0_1 = fimport$2(13688) | 0;
  $10_1 = fimport$7($8 | 0, $0_1 | 0) | 0;
  fimport$4($0_1 | 0);
  label$1 : {
   if (($10_1 | 0) == 2) {
    $1982($7_1, 0, 0, 0);
    break label$1;
   }
   $0_1 = fimport$2(6308) | 0;
   $4_1 = fimport$7($10_1 | 0, $0_1 | 0) | 0;
   fimport$4($0_1 | 0);
   $5_1 = fimport$2(3533) | 0;
   $0_1 = fimport$7($10_1 | 0, $5_1 | 0) | 0;
   fimport$4($5_1 | 0);
   $2_1 = +fimport$5($0_1 | 0, 72760, $3 + 16 | 0);
   fimport$6($1944($3, 16) | 0);
   fimport$4($0_1 | 0);
   $5_1 = fimport$2(8631) | 0;
   $0_1 = fimport$7($10_1 | 0, $5_1 | 0) | 0;
   fimport$4($5_1 | 0);
   $11_1 = +fimport$5($0_1 | 0, 72760, $3 + 16 | 0);
   fimport$6($1944($3, 16) | 0);
   fimport$4($0_1 | 0);
   $1982($7_1, 0, 0, 0);
   $1973($3, 4, $11_1 < 4294967296.0 & $11_1 >= 0.0 ? ~~$11_1 >>> 0 : 0);
   $1973($3, 0, $2_1 < 4294967296.0 & $2_1 >= 0.0 ? ~~$2_1 >>> 0 : 0);
   $1675(19156, $3);
   fimport$4($4_1 | 0);
  }
  $0_1 = $1944($1_1, 0);
  $4_1 = fimport$2(5409) | 0;
  $0_1 = fimport$7($0_1 | 0, $4_1 | 0) | 0;
  fimport$4($4_1 | 0);
  $8 = $3 + 16 | 0;
  $4_1 = $8;
  $2_1 = +fimport$5($0_1 | 0, 72652, $4_1 | 0);
  fimport$6($1944($3, 16) | 0);
  $1968($7_1, 8, $2_1 != 0.0);
  fimport$4($0_1 | 0);
  $0_1 = $1944($1_1, 0);
  $5_1 = fimport$2(7123) | 0;
  $0_1 = fimport$7($0_1 | 0, $5_1 | 0) | 0;
  fimport$4($5_1 | 0);
  $2_1 = +fimport$5($0_1 | 0, 72724, $4_1 | 0);
  fimport$6($1944($3, 16) | 0);
  $1973($7_1, 12, Math_abs($2_1) < 2147483648.0 ? ~~$2_1 : -2147483648);
  fimport$4($0_1 | 0);
  $0_1 = $1944($1_1, 0);
  $4_1 = fimport$2(4774) | 0;
  $0_1 = fimport$7($0_1 | 0, $4_1 | 0) | 0;
  fimport$4($4_1 | 0);
  $2_1 = +fimport$5($0_1 | 0, 72808, $8 | 0);
  fimport$6($1944($3, 16) | 0);
  $6_1 = Math_fround(3402823466385288598117041.0e14);
  label$9 : {
   if ($2_1 >= 3402823466385288598117041.0e14) {
    break label$9
   }
   $6_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($2_1 <= -3402823466385288598117041.0e14) {
    break label$9
   }
   $6_1 = Math_fround($2_1);
  }
  $1986($7_1, 16, $6_1);
  fimport$4($0_1 | 0);
  $0_1 = $1944($1_1, 0);
  $4_1 = fimport$2(14893) | 0;
  $0_1 = fimport$7($0_1 | 0, $4_1 | 0) | 0;
  fimport$4($4_1 | 0);
  $8 = $3 + 16 | 0;
  $2_1 = +fimport$5($0_1 | 0, 72724, $8 | 0);
  fimport$6($1944($3, 16) | 0);
  $1973($7_1, 20, Math_abs($2_1) < 2147483648.0 ? ~~$2_1 : -2147483648);
  fimport$4($0_1 | 0);
  $0_1 = $1944($1_1, 0);
  $4_1 = fimport$2(14751) | 0;
  $0_1 = fimport$7($0_1 | 0, $4_1 | 0) | 0;
  fimport$4($4_1 | 0);
  $2_1 = +fimport$5($0_1 | 0, 72724, $3 + 16 | 0);
  fimport$6($1944($3, 16) | 0);
  $1973($7_1, 24, Math_abs($2_1) < 2147483648.0 ? ~~$2_1 : -2147483648);
  fimport$4($0_1 | 0);
  $0_1 = $1944($1_1, 0);
  $4_1 = fimport$2(14882) | 0;
  $0_1 = fimport$7($0_1 | 0, $4_1 | 0) | 0;
  fimport$4($4_1 | 0);
  $4_1 = $8;
  $2_1 = +fimport$5($0_1 | 0, 72652, $4_1 | 0);
  fimport$6($1944($3, 16) | 0);
  $1968($7_1, 28, $2_1 != 0.0);
  fimport$4($0_1 | 0);
  $9 = $1944($1_1, 0);
  $0_1 = fimport$2(9411) | 0;
  $5_1 = fimport$7($9 | 0, $0_1 | 0) | 0;
  $1973($3, 28, $5_1);
  fimport$4($0_1 | 0);
  $1983($3, 16, 0, 0);
  $9 = $3 + 28 | 0;
  $1982($7_1, 32, $1960($763($9, $4_1), 0), i64toi32_i32$HIGH_BITS);
  fimport$4($5_1 | 0);
  $4_1 = $1944($1_1, 0);
  $0_1 = fimport$2(3521) | 0;
  $4_1 = fimport$7($4_1 | 0, $0_1 | 0) | 0;
  $1973($3, 28, $4_1);
  fimport$4($0_1 | 0);
  $1983($3, 16, 0, 0);
  $1982($7_1, 40, $1960($763($9, $8), 0), i64toi32_i32$HIGH_BITS);
  fimport$4($4_1 | 0);
  $8 = $1944($1_1, 0);
  $0_1 = fimport$2(5204) | 0;
  $4_1 = fimport$7($8 | 0, $0_1 | 0) | 0;
  fimport$4($0_1 | 0);
  if (($4_1 | 0) == 2) {
   $0_1 = 0
  } else {
   $2_1 = +fimport$5($4_1 | 0, 72748, $3 + 16 | 0);
   fimport$6($1944($3, 16) | 0);
   $0_1 = Math_abs($2_1) < 2147483648.0 ? ~~$2_1 : -2147483648;
  }
  $1973($7_1, 48, $0_1);
  $0_1 = $1944($1_1, 0);
  $5_1 = fimport$2(14322) | 0;
  $0_1 = fimport$7($0_1 | 0, $5_1 | 0) | 0;
  fimport$4($5_1 | 0);
  $2_1 = +fimport$5($0_1 | 0, 72808, $3 + 16 | 0);
  fimport$6($1944($3, 16) | 0);
  $6_1 = Math_fround(3402823466385288598117041.0e14);
  label$18 : {
   if ($2_1 >= 3402823466385288598117041.0e14) {
    break label$18
   }
   $6_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($2_1 <= -3402823466385288598117041.0e14) {
    break label$18
   }
   $6_1 = Math_fround($2_1);
  }
  $1986($7_1, 52, $6_1);
  fimport$4($0_1 | 0);
  $0_1 = $1944($1_1, 0);
  $5_1 = fimport$2(14305) | 0;
  $0_1 = fimport$7($0_1 | 0, $5_1 | 0) | 0;
  fimport$4($5_1 | 0);
  $2_1 = +fimport$5($0_1 | 0, 72808, $3 + 16 | 0);
  fimport$6($1944($3, 16) | 0);
  $6_1 = Math_fround(3402823466385288598117041.0e14);
  label$19 : {
   if ($2_1 >= 3402823466385288598117041.0e14) {
    break label$19
   }
   $6_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($2_1 <= -3402823466385288598117041.0e14) {
    break label$19
   }
   $6_1 = Math_fround($2_1);
  }
  $1986($7_1, 56, $6_1);
  fimport$4($0_1 | 0);
  $0_1 = $1944($1_1, 0);
  $5_1 = fimport$2(11606) | 0;
  $0_1 = fimport$7($0_1 | 0, $5_1 | 0) | 0;
  fimport$4($5_1 | 0);
  $9 = $3 + 16 | 0;
  $5_1 = $9;
  $2_1 = +fimport$5($0_1 | 0, 72652, $5_1 | 0);
  fimport$6($1944($3, 16) | 0);
  $1968($7_1, 60, $2_1 != 0.0);
  fimport$4($0_1 | 0);
  $0_1 = $1944($1_1, 0);
  $8 = fimport$2(4895) | 0;
  $0_1 = fimport$7($0_1 | 0, $8 | 0) | 0;
  fimport$4($8 | 0);
  $2_1 = +fimport$5($0_1 | 0, 72736, $5_1 | 0);
  fimport$6($1944($3, 16) | 0);
  $1973($7_1, 64, $2_1 < 4294967296.0 & $2_1 >= 0.0 ? ~~$2_1 >>> 0 : 0);
  fimport$4($0_1 | 0);
  $0_1 = $1944($1_1, 0);
  $5_1 = fimport$2(1170) | 0;
  $0_1 = fimport$7($0_1 | 0, $5_1 | 0) | 0;
  fimport$4($5_1 | 0);
  $2_1 = +fimport$5($0_1 | 0, 72808, $9 | 0);
  fimport$6($1944($3, 16) | 0);
  $6_1 = Math_fround(3402823466385288598117041.0e14);
  label$22 : {
   if ($2_1 >= 3402823466385288598117041.0e14) {
    break label$22
   }
   $6_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($2_1 <= -3402823466385288598117041.0e14) {
    break label$22
   }
   $6_1 = Math_fround($2_1);
  }
  $1986($7_1, 68, $6_1);
  fimport$4($0_1 | 0);
  $1_1 = $1944($1_1, 0);
  $0_1 = fimport$2(11255) | 0;
  $5_1 = fimport$7($1_1 | 0, $0_1 | 0) | 0;
  fimport$4($0_1 | 0);
  $2_1 = +fimport$5($5_1 | 0, 49072, $3 + 28 | 0);
  label$23 : {
   if ($2_1 < 4294967296.0 & $2_1 >= 0.0) {
    $8 = ~~$2_1 >>> 0;
    break label$23;
   }
   $8 = 0;
  }
  $1_1 = $1944($8, 0);
  if ($1_1 >>> 0 < 2147483632) {
   $9 = $1944($3, 28);
   label$26 : {
    if ($1_1 >>> 0 <= 10) {
     $1968($3, 27, $1_1);
     $0_1 = $3 + 16 | 0;
     break label$26;
    }
    $12_1 = ($1_1 | 15) + 1 | 0;
    $0_1 = $1783($12_1);
    $1973($3, 24, $12_1 | -2147483648);
    $1973($3, 16, $0_1);
    $1973($3, 20, $1_1);
   }
   if ($1_1) {
    $1602($0_1, $8 + 4 | 0, $1_1)
   }
   $1968($0_1 + $1_1 | 0, 0, 0);
   fimport$6($9 | 0);
   $0_1 = $1944($3, 16);
   $1_1 = $1936($3, 27);
   $1699($7_1 + 74 | 0, ($1_1 | 0) < 0 ? $0_1 : $3 + 16 | 0, 39);
   if (($1_1 | 0) < 0) {
    $1756($0_1)
   }
   fimport$4($5_1 | 0);
   fimport$4($4_1 | 0);
   fimport$4($10_1 | 0);
   global$0 = $3 + 32 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $774() {
  $813(8867);
  wasm2js_trap();
 }
 
 function $775() {
  fimport$9(7023, 1, 48472, 48504, 24, 25, 0);
 }
 
 function $776($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  FUNCTION_TABLE[$0_1 | 0]($1_1 + 12 | 0);
  fimport$10($1944($1_1, 12) | 0);
  $0_1 = $1944($1_1, 12);
  fimport$4($0_1 | 0);
  global$0 = $1_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $777() {
  fimport$11(48528, 48556, 48596, 0, 48504, 26, 48612, 0, 48612, 0, 2017, 48614, 27);
 }
 
 function $778($0_1) {
  $0_1 = $0_1 | 0;
  return 48528;
 }
 
 function $779($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  if ($0_1) {
   $2_1 = $100();
   $101($1944($0_1, 0));
   $3 = $118();
   $1973($3, 208, 0);
   $1983($3, 200, 0, 0);
   $1983($3, 24, 0, 0);
   $101($2_1);
   $3 = $1944($0_1, 0);
   $3 = (wasm2js_i32$0 = $3, wasm2js_i32$1 = $1944(0, 73568), wasm2js_i32$2 = $3, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
   $8 = global$0 - 16 | 0;
   global$0 = $8;
   $2_1 = $1944($3 + 152 | 0, 0);
   label$1 : {
    if (!$2_1) {
     break label$1
    }
    if (!$1937($3, 1)) {
     break label$1
    }
    $1968($2_1, 16, 0);
    $2_1 = $428($2_1);
    $1_1 = $1944(0, 73568);
    if ($1_1) {
     $1_1 = $1_1 + 876 | 0;
     $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
   }
   $1973($3, 152, 0);
   if ($1937($3, 0)) {
    label$4 : {
     if (!$1937($3, 12125)) {
      break label$4
     }
     $2_1 = $1944($3 + 32 | 0, 0);
     if (!$2_1) {
      break label$4
     }
     $1_1 = $1944(0, 73568);
     $1973(0, 73568, $3);
     $1973($3, 12128, 0);
     $1973($8, 12, 0);
     $4_1 = $114($8 + 12 | 0);
     $2_1 = $1622($2_1, 2145);
     if ($2_1) {
      $1633($4_1, $1944($8, 12), $2_1);
      $1609($2_1);
     }
     $1973(0, 73568, $1_1);
    }
    if (($1944($3, 12180) | 0) > 0) {
     $2_1 = 0;
     while (1) {
      $1_1 = $1944($3, 12188) + Math_imul($2_1, 20) | 0;
      if (($1944($1_1, 4) | 0) == 6) {
       FUNCTION_TABLE[$1944($1_1, 12) | 0]($3, $1_1)
      }
      $2_1 = $2_1 + 1 | 0;
      if (($1944($3, 12180) | 0) > ($2_1 | 0)) {
       continue
      }
      break;
     };
    }
    if (($1944($3, 7008) | 0) > 0) {
     $2_1 = 0;
     while (1) {
      $1_1 = $1944($1944($3, 7016) + ($2_1 << 2) | 0, 0);
      if ($1_1) {
       $4_1 = $1944($1_1, 0);
       if ($4_1) {
        $5_1 = $1944(0, 73568);
        if ($5_1) {
         $5_1 = $5_1 + 876 | 0;
         $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
        }
        ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
       }
       if (($1944($1_1, 560) | 0) > 0) {
        $4_1 = 0;
        while (1) {
         $5_1 = $1944($1_1, 568) + Math_imul($4_1, 124) | 0;
         $374($5_1 + 104 | 0);
         $6_1 = $1944($5_1 + 120 | 0, 0);
         if ($6_1) {
          $7_1 = $1944(0, 73568);
          if ($7_1) {
           $7_1 = $7_1 + 876 | 0;
           $1973($7_1, 0, $1944($7_1, 0) - 1 | 0);
          }
          ((wasm2js_i32$1 = $6_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
         }
         $5_1 = $1944($5_1 + 100 | 0, 0);
         if ($5_1) {
          $6_1 = $1944(0, 73568);
          if ($6_1) {
           $6_1 = $6_1 + 876 | 0;
           $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
          }
          ((wasm2js_i32$2 = $5_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
         }
         $4_1 = $4_1 + 1 | 0;
         if (($1944($1_1, 560) | 0) > ($4_1 | 0)) {
          continue
         }
         break;
        };
       }
       $4_1 = $1944($1_1 + 568 | 0, 0);
       if ($4_1) {
        $1982($1_1, 560, 0, 0);
        $5_1 = $1944(0, 73568);
        if ($5_1) {
         $5_1 = $5_1 + 876 | 0;
         $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
        }
        ((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
        $1973($1_1, 568, 0);
       }
       $78($1_1 + 584 | 0);
       $4_1 = $1944($1_1, 568);
       if ($4_1) {
        $5_1 = $1944(0, 73568);
        if ($5_1) {
         $5_1 = $5_1 + 876 | 0;
         $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
        }
        ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
       }
       $4_1 = $1944($1_1 + 556 | 0, 0);
       if ($4_1) {
        $5_1 = $1944(0, 73568);
        if ($5_1) {
         $5_1 = $5_1 + 876 | 0;
         $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
        }
        ((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
       }
       $4_1 = $1944($1_1 + 412 | 0, 0);
       if ($4_1) {
        $5_1 = $1944(0, 73568);
        if ($5_1) {
         $5_1 = $5_1 + 876 | 0;
         $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
        }
        ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
       }
       $4_1 = $1944($1_1 + 400 | 0, 0);
       if ($4_1) {
        $5_1 = $1944(0, 73568);
        if ($5_1) {
         $5_1 = $5_1 + 876 | 0;
         $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
        }
        ((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
       }
       $4_1 = $1944($1_1 + 360 | 0, 0);
       if ($4_1) {
        $5_1 = $1944(0, 73568);
        if ($5_1) {
         $5_1 = $5_1 + 876 | 0;
         $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
        }
        ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
       }
       $4_1 = $1944($1_1 + 204 | 0, 0);
       if ($4_1) {
        $5_1 = $1944(0, 73568);
        if ($5_1) {
         $5_1 = $5_1 + 876 | 0;
         $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
        }
        ((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
       }
       $4_1 = $1944(0, 73568);
       if ($4_1) {
        $4_1 = $4_1 + 876 | 0;
        $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
       }
       ((wasm2js_i32$2 = $1_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      }
      $2_1 = $2_1 + 1 | 0;
      if (($1944($3, 7008) | 0) > ($2_1 | 0)) {
       continue
      }
      break;
     };
    }
    $2_1 = $1944($3 + 7016 | 0, 0);
    if ($2_1) {
     $1982($3, 7008, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     $1973($3, 7016, 0);
    }
    $2_1 = $1944($3 + 7028 | 0, 0);
    if ($2_1) {
     $1982($3, 7020, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     $1973($3, 7028, 0);
    }
    $2_1 = $1944($3 + 7040 | 0, 0);
    if ($2_1) {
     $1982($3, 7032, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     $1973($3, 7040, 0);
    }
    $1973($3, 7080, 0);
    $2_1 = $1944($3 + 7052 | 0, 0);
    if ($2_1) {
     $1982($3, 7044, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     $1973($3, 7052, 0);
    }
    $2_1 = $1944($3 + 7064 | 0, 0);
    if ($2_1) {
     $1982($3, 7056, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     $1973($3, 7064, 0);
    }
    $1973($3, 7508, 0);
    $1973($3, 7204, 0);
    $1982($3, 7084, 0, 0);
    $1973($3, 7184, 0);
    $1973($3, 7092, 0);
    $2_1 = $1944($3 + 7404 | 0, 0);
    if ($2_1) {
     $1982($3, 7396, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     $1973($3, 7404, 0);
    }
    $2_1 = $1944($3 + 7416 | 0, 0);
    if ($2_1) {
     $1982($3, 7408, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     $1973($3, 7416, 0);
    }
    $2_1 = $1944($3 + 7428 | 0, 0);
    if ($2_1) {
     $1982($3, 7420, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     $1973($3, 7428, 0);
    }
    $2_1 = $1944($3 + 7476 | 0, 0);
    if ($2_1) {
     $1982($3, 7468, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     $1973($3, 7476, 0);
    }
    $2_1 = $1944($3 + 7488 | 0, 0);
    if ($2_1) {
     $1982($3, 7480, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     $1973($3, 7488, 0);
    }
    if (($1944($3, 7496) | 0) > 0) {
     $2_1 = 0;
     while (1) {
      $1_1 = $1944($1944($3, 7504) + ($2_1 << 2) | 0, 0);
      if ($1_1) {
       $4_1 = $1944($1_1, 44);
       if ($4_1) {
        $4_1 = $78($4_1);
        $5_1 = $1944(0, 73568);
        if ($5_1) {
         $5_1 = $5_1 + 876 | 0;
         $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
        }
        ((wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
       }
       $4_1 = $1944($1_1 + 48 | 0, 0);
       if ($4_1) {
        $4_1 = $78($4_1);
        $5_1 = $1944(0, 73568);
        if ($5_1) {
         $5_1 = $5_1 + 876 | 0;
         $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
        }
        ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
       }
       $5_1 = $1_1 + 96 | 0;
       $4_1 = $1_1 + 120 | 0;
       while (1) {
        $4_1 = $4_1 - 12 | 0;
        $6_1 = $1944($4_1 + 8 | 0, 0);
        if ($6_1) {
         $7_1 = $1944(0, 73568);
         if ($7_1) {
          $7_1 = $7_1 + 876 | 0;
          $1973($7_1, 0, $1944($7_1, 0) - 1 | 0);
         }
         ((wasm2js_i32$1 = $6_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
        }
        if (($4_1 | 0) != ($5_1 | 0)) {
         continue
        }
        break;
       };
       $4_1 = $1944(0, 73568);
       if ($4_1) {
        $4_1 = $4_1 + 876 | 0;
        $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
       }
       ((wasm2js_i32$2 = $1_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      }
      $2_1 = $2_1 + 1 | 0;
      if (($1944($3, 7496) | 0) > ($2_1 | 0)) {
       continue
      }
      break;
     };
    }
    $2_1 = $1944($3 + 7504 | 0, 0);
    if ($2_1) {
     $1982($3, 7496, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     $1973($3, 7504, 0);
    }
    $116($3 + 8116 | 0);
    $2_1 = $1944($3 + 8156 | 0, 0);
    if ($2_1) {
     $1982($3, 8148, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     $1973($3, 8156, 0);
    }
    $2_1 = $1944($3 + 8168 | 0, 0);
    if ($2_1) {
     $1982($3, 8160, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     $1973($3, 8168, 0);
    }
    if (($1944($3, 8024) | 0) > 0) {
     $2_1 = 0;
     while (1) {
      $1_1 = $1944(($1944($3, 8032) + Math_imul($2_1, 28) | 0) + 24 | 0, 0);
      if ($1_1) {
       $4_1 = $1944(0, 73568);
       if ($4_1) {
        $4_1 = $4_1 + 876 | 0;
        $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
       }
       ((wasm2js_i32$2 = $1_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      }
      $2_1 = $2_1 + 1 | 0;
      if (($1944($3, 8024) | 0) > ($2_1 | 0)) {
       continue
      }
      break;
     };
    }
    $2_1 = $1944($3 + 8032 | 0, 0);
    if ($2_1) {
     $1982($3, 8024, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     $1973($3, 8032, 0);
    }
    $117($3 + 8056 | 0);
    if (($1944($3, 8044) | 0) > 0) {
     $2_1 = 0;
     while (1) {
      $1_1 = $1944($3, 8052) + Math_imul($2_1, 104) | 0;
      $374($1_1 + 16 | 0);
      $1_1 = $1944($1_1 + 32 | 0, 0);
      if ($1_1) {
       $4_1 = $1944(0, 73568);
       if ($4_1) {
        $4_1 = $4_1 + 876 | 0;
        $1973($4_1, 0, $1944($4_1, 0) - 1 | 0);
       }
       ((wasm2js_i32$2 = $1_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      }
      $2_1 = $2_1 + 1 | 0;
      if (($1944($3, 8044) | 0) > ($2_1 | 0)) {
       continue
      }
      break;
     };
    }
    $2_1 = $1944($3 + 8052 | 0, 0);
    if ($2_1) {
     $1982($3, 8044, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     $1973($3, 8052, 0);
    }
    $2_1 = $1944($3 + 8108 | 0, 0);
    if ($2_1) {
     $1982($3, 8100, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     $1973($3, 8108, 0);
    }
    $2_1 = $1944($3 + 12092 | 0, 0);
    if ($2_1) {
     $1982($3, 12084, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     $1973($3, 12092, 0);
    }
    $2_1 = $1944($3 + 12104 | 0, 0);
    if ($2_1) {
     $1982($3, 12096, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     $1973($3, 12104, 0);
    }
    $2_1 = $1944($3 + 8200 | 0, 0);
    if ($2_1) {
     $1982($3 - -8192 | 0, 0, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     $1973($3, 8200, 0);
    }
    $2_1 = $1944($3 + 8212 | 0, 0);
    if ($2_1) {
     $1982($3 + 8204 | 0, 0, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     $1973($3, 8212, 0);
    }
    $2_1 = $1944($3 + 8224 | 0, 0);
    if ($2_1) {
     $1982($3 + 8216 | 0, 0, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     $1973($3, 8224, 0);
    }
    $2_1 = $1944($3 + 12164 | 0, 0);
    if ($2_1) {
     $1982($3, 12156, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     $1973($3, 12164, 0);
    }
    $2_1 = $1944($3 + 12152 | 0, 0);
    if ($2_1) {
     $1982($3, 12144, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     $1973($3, 12152, 0);
    }
    $2_1 = $1944($3, 12204);
    if ($2_1) {
     if (($1944(0, 71168) | 0) != ($2_1 | 0)) {
      $1609($2_1)
     }
     $1973($3, 12204, 0);
    }
    $2_1 = $1944($3 + 12216 | 0, 0);
    if ($2_1) {
     $1982($3, 12208, 0, 0);
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     $1973($3, 12216, 0);
    }
    $1968($3, 0, 0);
   }
   global$0 = $8 + 16 | 0;
   if (($1944(0, 73568) | 0) == ($3 | 0)) {
    $1973(0, 73568, 0)
   }
   if ($3) {
    $2_1 = $1944($3 + 12292 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 12216 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944($3 + 12188 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 12176 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944($3 + 12164 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 12152 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944($3 + 12140 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 12104 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944($3 + 12092 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $471($3 + 11880 | 0);
    $2_1 = $1944($3 + 8224 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944($3 + 8212 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 8200 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944($3 + 8168 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 8156 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $116($3 + 8116 | 0);
    $2_1 = $1944($3 + 8136 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 8124 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944($3 + 8108 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 8096 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $117($3 + 8056 | 0);
    $2_1 = $1944($3 + 8076 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 8064 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944($3 + 8052 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 8032 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944($3 + 8e3 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 7504 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944($3 + 7488 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 7476 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944($3 + 7464 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 7452 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944($3 + 7440 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 7428 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944($3 + 7416 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 7404 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944($3 + 7064 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 7052 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944($3 + 7040 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 7028 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944($3 + 7016 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
    }
    $2_1 = $1944($3 + 5412 | 0, 0);
    if ($2_1) {
     $1_1 = $1944(0, 73568);
     if ($1_1) {
      $1_1 = $1_1 + 876 | 0;
      $1973($1_1, 0, $1944($1_1, 0) - 1 | 0);
     }
     ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
    }
    $2_1 = $1944(0, 73568);
    if ($2_1) {
     $2_1 = $2_1 + 876 | 0;
     $1973($2_1, 0, $1944($2_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$1 = $3, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
   }
   $1973($0_1, 0, 0);
   fimport$4($1944($0_1, 180) | 0);
   fimport$4($1944($0_1, 176) | 0);
   fimport$4($1944($0_1, 172) | 0);
   if (($1936($0_1, 171) | 0) < 0) {
    $1756($1944($0_1, 160))
   }
   fimport$4($1944($0_1, 152) | 0);
   fimport$4($1944($0_1, 148) | 0);
   if (($1936($0_1, 147) | 0) < 0) {
    $1756($1944($0_1, 136))
   }
   fimport$4($1944($0_1, 128) | 0);
   fimport$4($1944($0_1, 124) | 0);
   fimport$4($1944($0_1, 120) | 0);
   if (($1936($0_1, 119) | 0) < 0) {
    $1756($1944($0_1, 108))
   }
   fimport$4($1944($0_1, 100) | 0);
   fimport$4($1944($0_1, 96) | 0);
   fimport$4($1944($0_1, 92) | 0);
   fimport$4($1944($0_1, 88) | 0);
   fimport$4($1944($0_1, 84) | 0);
   fimport$4($1944($0_1, 80) | 0);
   fimport$4($1944($0_1, 76) | 0);
   fimport$4($1944($0_1, 72) | 0);
   fimport$4($1944($0_1, 68) | 0);
   fimport$4($1944($0_1, 64) | 0);
   if (($1936($0_1, 63) | 0) < 0) {
    $1756($1944($0_1, 52))
   }
   fimport$4($1944($0_1, 48) | 0);
   fimport$4($1944($0_1, 44) | 0);
   fimport$4($1944($0_1, 40) | 0);
   fimport$4($1944($0_1, 36) | 0);
   fimport$4($1944($0_1, 32) | 0);
   fimport$4($1944($0_1, 28) | 0);
   if (($1936($0_1, 27) | 0) < 0) {
    $1756($1944($0_1, 16))
   }
   if (($1936($0_1, 15) | 0) < 0) {
    $1756($1944($0_1, 4))
   }
   $1756($0_1);
  }
 }
 
 function $781() {
  var $0_1 = 0, $1_1 = 0;
  fimport$11(48628, 48648, 48676, 0, 48504, 28, 48612, 0, 48612, 0, 16568, 48614, 29);
  $0_1 = $1783(4);
  $1973($0_1, 0, 0);
  $1_1 = $1783(4);
  $1973($1_1, 0, 0);
  fimport$12(48628, 1643, 72796, 48692, 30, $0_1 | 0, 72796, 48696, 31, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 4);
  $1_1 = $1783(4);
  $1973($1_1, 0, 4);
  fimport$12(48628, 1245, 72796, 48692, 30, $0_1 | 0, 72796, 48696, 31, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 32);
  fimport$13(48628, 3608, 4, 48704, 48720, 33, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 34);
  fimport$13(48628, 1159, 3, 48728, 48740, 35, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 36);
  fimport$13(48628, 4785, 3, 48748, 48740, 37, $0_1 | 0, 0, 0);
 }
 
 function $782($0_1) {
  $0_1 = $0_1 | 0;
  return 48628;
 }
 
 function $783($0_1) {
  $0_1 = $0_1 | 0;
  if ($0_1) {
   $1756($0_1)
  }
 }
 
 function $784($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  return Math_fround($1963($1944($0_1, 0) + $1_1 | 0, 0));
 }
 
 function $785($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $1986($1944($0_1, 0) + $1_1 | 0, 0, $2_1);
 }
 
 function $786($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $0_1 = $1944($0_1, 0);
  $1973($4_1, 4, $2_1);
  $1973($4_1, 8, $1_1);
  $1973($4_1, 0, $3);
  FUNCTION_TABLE[$0_1 | 0]($4_1 + 12 | 0, $4_1 + 8 | 0, $4_1 + 4 | 0, $4_1);
  fimport$10($1944($4_1, 12) | 0);
  $0_1 = $1944($4_1, 12);
  fimport$4($0_1 | 0);
  fimport$4($1944($4_1, 0) | 0);
  fimport$4($1944($4_1, 4) | 0);
  fimport$4($1944($4_1, 8) | 0);
  global$0 = $4_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $787($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $0_1 = $1944($0_1, 0);
  $1973($3, 4, $2_1);
  $1973($3, 8, $1_1);
  FUNCTION_TABLE[$0_1 | 0]($3 + 12 | 0, $3 + 8 | 0, $3 + 4 | 0);
  fimport$10($1944($3, 12) | 0);
  $0_1 = $1944($3, 12);
  fimport$4($0_1 | 0);
  fimport$4($1944($3, 4) | 0);
  fimport$4($1944($3, 8) | 0);
  global$0 = $3 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $788($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $0_1 = $1944($0_1, 0);
  $1973($3, 8, $2_1);
  $1973($3, 12, $1_1);
  $0_1 = FUNCTION_TABLE[$0_1 | 0]($3 + 12 | 0, $3 + 8 | 0) | 0;
  fimport$4($1944($3, 8) | 0);
  fimport$4($1944($3, 12) | 0);
  global$0 = $3 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $789() {
  var $0_1 = 0, $1_1 = 0;
  fimport$11(48768, 48788, 48816, 0, 48504, 38, 48612, 0, 48612, 0, 16367, 48614, 39);
  $0_1 = $1783(4);
  $1973($0_1, 0, 0);
  $1_1 = $1783(4);
  $1973($1_1, 0, 0);
  fimport$12(48768, 1643, 72796, 48692, 40, $0_1 | 0, 72796, 48696, 41, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 4);
  $1_1 = $1783(4);
  $1973($1_1, 0, 4);
  fimport$12(48768, 1245, 72796, 48692, 40, $0_1 | 0, 72796, 48696, 41, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 8);
  $1_1 = $1783(4);
  $1973($1_1, 0, 8);
  fimport$12(48768, 1063, 72796, 48692, 40, $0_1 | 0, 72796, 48696, 41, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 12);
  $1_1 = $1783(4);
  $1973($1_1, 0, 12);
  fimport$12(48768, 1857, 72796, 48692, 40, $0_1 | 0, 72796, 48696, 41, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 42);
  fimport$13(48768, 3608, 6, 48832, 48856, 43, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 44);
  fimport$13(48768, 1159, 3, 48728, 48740, 35, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 45);
  fimport$13(48768, 4785, 3, 48748, 48740, 37, $0_1 | 0, 0, 0);
 }
 
 function $790($0_1) {
  $0_1 = $0_1 | 0;
  return 48768;
 }
 
 function $794($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0;
  $6_1 = global$0 - 32 | 0;
  global$0 = $6_1;
  $0_1 = $1944($0_1, 0);
  $1973($6_1, 20, $2_1);
  $1973($6_1, 24, $1_1);
  $1973($6_1, 16, $3);
  $1973($6_1, 12, $4_1);
  $1973($6_1, 8, $5_1);
  FUNCTION_TABLE[$0_1 | 0]($6_1 + 28 | 0, $6_1 + 24 | 0, $6_1 + 20 | 0, $6_1 + 16 | 0, $6_1 + 12 | 0, $6_1 + 8 | 0);
  fimport$10($1944($6_1, 28) | 0);
  $0_1 = $1944($6_1, 28);
  fimport$4($0_1 | 0);
  fimport$4($1944($6_1, 8) | 0);
  fimport$4($1944($6_1, 12) | 0);
  fimport$4($1944($6_1, 16) | 0);
  fimport$4($1944($6_1, 20) | 0);
  fimport$4($1944($6_1, 24) | 0);
  global$0 = $6_1 + 32 | 0;
  return $0_1 | 0;
 }
 
 function $795() {
  var $0_1 = 0, $1_1 = 0;
  fimport$11(48896, 48936, 48984, 0, 48504, 46, 48612, 0, 48612, 0, 13787, 48614, 47);
  $0_1 = $1783(4);
  $1973($0_1, 0, 0);
  $1_1 = $1783(4);
  $1973($1_1, 0, 0);
  fimport$12(48896, 9451, 72724, 49e3, 48, $0_1 | 0, 72724, 49004, 49, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 4);
  $1_1 = $1783(4);
  $1973($1_1, 0, 4);
  fimport$12(48896, 4951, 72724, 49e3, 48, $0_1 | 0, 72724, 49004, 49, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 12);
  $1_1 = $1783(4);
  $1973($1_1, 0, 12);
  fimport$12(48896, 6491, 72712, 49e3, 50, $0_1 | 0, 72712, 49004, 51, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 16);
  $1_1 = $1783(4);
  $1973($1_1, 0, 16);
  fimport$12(48896, 1223, 72724, 49e3, 48, $0_1 | 0, 72724, 49004, 49, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 52);
  $1_1 = $1783(4);
  $1973($1_1, 0, 53);
  fimport$12(48896, 9619, 48496, 49e3, 54, $0_1 | 0, 48496, 49004, 55, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 24);
  $1_1 = $1783(4);
  $1973($1_1, 0, 24);
  fimport$12(48896, 7850, 72724, 49e3, 48, $0_1 | 0, 72724, 49004, 49, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 28);
  $1_1 = $1783(4);
  $1973($1_1, 0, 28);
  fimport$12(48896, 10340, 72724, 49e3, 48, $0_1 | 0, 72724, 49004, 49, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 32);
  $1_1 = $1783(4);
  $1973($1_1, 0, 32);
  fimport$12(48896, 1076, 72652, 49e3, 56, $0_1 | 0, 72652, 49004, 57, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 36);
  $1_1 = $1783(4);
  $1973($1_1, 0, 36);
  fimport$12(48896, 4470, 72724, 49e3, 48, $0_1 | 0, 72724, 49004, 49, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 40);
  $1_1 = $1783(4);
  $1973($1_1, 0, 40);
  fimport$12(48896, 2727, 72724, 49e3, 48, $0_1 | 0, 72724, 49004, 49, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 44);
  $1_1 = $1783(4);
  $1973($1_1, 0, 44);
  fimport$12(48896, 11792, 72724, 49e3, 48, $0_1 | 0, 72724, 49004, 49, $1_1 | 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 58);
  fimport$13(48896, 4355, 4, 49088, 49104, 59, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 60);
  fimport$13(48896, 4343, 4, 49120, 49104, 61, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 62);
  fimport$13(48896, 7473, 2, 49136, 49e3, 63, $0_1 | 0, 0, 0);
 }
 
 function $796($0_1) {
  $0_1 = $0_1 | 0;
  return 48896;
 }
 
 function $798($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  return $1944($1944($0_1, 0) + $1_1 | 0, 0) | 0;
 }
 
 function $799($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $1973($1944($0_1, 0) + $1_1 | 0, 0, $2_1);
 }
 
 function $800($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  return $1941($1944($0_1, 0) + $1_1 | 0, 0) | 0;
 }
 
 function $801($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $1970($1944($0_1, 0) + $1_1 | 0, 0, $2_1);
 }
 
 function $802($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = global$0 - 32 | 0;
  global$0 = $2_1;
  $4_1 = $1944($1_1, 20);
  $3 = $1697($4_1);
  if ($3 >>> 0 < 2147483632) {
   label$2 : {
    if ($3 >>> 0 <= 10) {
     $1968($2_1, 23, $3);
     $1_1 = $2_1 + 12 | 0;
     break label$2;
    }
    $5_1 = ($3 | 15) + 1 | 0;
    $1_1 = $1783($5_1);
    $1973($2_1, 20, $5_1 | -2147483648);
    $1973($2_1, 12, $1_1);
    $1973($2_1, 16, $3);
   }
   if ($3) {
    $1603($1_1, $4_1, $3)
   }
   $1968($1_1 + $3 | 0, 0, 0);
   $3 = $1944($2_1, 16);
   $4_1 = $1936($2_1, 23);
   $1_1 = ($4_1 | 0) < 0;
   $3 = $1_1 ? $3 : $4_1 & 127;
   $4_1 = $1755($3 + 4 | 0);
   $1973($4_1, 0, $3);
   $1602($4_1 + 4 | 0, (wasm2js_i32$0 = $1944($2_1, 12), wasm2js_i32$1 = $2_1 + 12 | 0, wasm2js_i32$2 = $1_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $3);
   $1973($2_1, 24, $4_1);
   $1973($0_1, 0, fimport$1(49072, $2_1 + 24 | 0) | 0);
   if (($1936($2_1, 23) | 0) < 0) {
    $1756($1944($2_1, 12))
   }
   global$0 = $2_1 + 32 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $803($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0.0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $7_1 = $1944($0_1, 20);
  $4_1 = +fimport$5($1944($1_1, 0) | 0, 49072, $2_1 + 12 | 0);
  label$1 : {
   if ($4_1 < 4294967296.0 & $4_1 >= 0.0) {
    $5_1 = ~~$4_1 >>> 0;
    break label$1;
   }
   $5_1 = 0;
  }
  $3 = $1944($5_1, 0);
  if ($3 >>> 0 < 2147483632) {
   $8 = $1944($2_1, 12);
   label$4 : {
    if ($3 >>> 0 <= 10) {
     $1968($2_1, 11, $3);
     $1_1 = $2_1;
     break label$4;
    }
    $6_1 = ($3 | 15) + 1 | 0;
    $1_1 = $1783($6_1);
    $1973($2_1, 8, $6_1 | -2147483648);
    $1973($2_1, 0, $1_1);
    $1973($2_1, 4, $3);
   }
   if ($3) {
    $1602($1_1, $5_1 + 4 | 0, $3)
   }
   $1968($1_1 + $3 | 0, 0, 0);
   fimport$6($8 | 0);
   $1699($7_1, (wasm2js_i32$0 = $1944($2_1, 0), wasm2js_i32$1 = $2_1, wasm2js_i32$2 = ($1936($2_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $1944($0_1, 28) - 1 | 0);
   if (($1936($2_1, 11) | 0) < 0) {
    $1756($1944($2_1, 0))
   }
   global$0 = $2_1 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $804($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  FUNCTION_TABLE[$1944($0_1, 0) | 0]($2_1 + 12 | 0, $1_1);
  fimport$10($1944($2_1, 12) | 0);
  $0_1 = $1944($2_1, 12);
  fimport$4($0_1 | 0);
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $805($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $0_1 = $1944($0_1, 0);
  $1973($3, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $3 + 12 | 0);
  fimport$4($1944($3, 12) | 0);
  global$0 = $3 + 16 | 0;
 }
 
 function $806($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  return $1937($1944($0_1, 0) + $1_1 | 0, 0) | 0;
 }
 
 function $807($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $1968($1944($0_1, 0) + $1_1 | 0, 0, $2_1);
 }
 
 function $808($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0;
  $4_1 = $1944($0_1, 4);
  $1_1 = ($4_1 >> 1) + $1_1 | 0;
  $0_1 = $1944($0_1, 0);
  label$1 : {
   if (!($4_1 & 1)) {
    break label$1
   }
   $0_1 = $1944($1944($1_1, 0) + $0_1 | 0, 0);
  }
  FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1, $3);
 }
 
 function $809($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $6_1 = (wasm2js_i32$0 = $1944($2_1, 0), wasm2js_i32$1 = $2_1, wasm2js_i32$2 = ($1936($2_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $3 = $1944($0_1, 4);
  $2_1 = $1697($6_1);
  $5_1 = $1944($0_1, 24);
  label$3 : {
   if (($2_1 + $5_1 | 0) >= ($1944($0_1, 28) | 0)) {
    if (!($3 & 262144)) {
     break label$3
    }
    $3 = $2_1 << 2;
    $4_1 = ($2_1 | 0) <= 256 ? 256 : $2_1;
    $4_1 = $5_1 + (($2_1 | 0) < 8 ? 32 : ($3 | 0) < ($4_1 | 0) ? $3 : $4_1) | 0;
    $5_1 = $4_1 + 1 | 0;
    $3 = $1944(0, 73568);
    $4_1 = $4_1 + 2 | 0;
    if (($1944($3 + 8208 | 0, 0) | 0) < ($4_1 | 0)) {
     $7_1 = $16($4_1);
     $8 = $1944($3 + 8212 | 0, 0);
     if ($8) {
      $1602($7_1, $8, $1944($3, 8204));
      $17($1944($3, 8212));
     }
     $1973($3, 8208, $4_1);
     $1973($3, 8212, $7_1);
    }
    $1973($0_1, 20, $1944($3, 8212));
    $1973($3 + 8232 | 0, 0, $5_1);
    $1973($0_1, 28, $5_1);
   }
   $3 = $1944($0_1, 24);
   if (($1_1 | 0) != ($3 | 0)) {
    $5_1 = $1944($0_1, 20) + $1_1 | 0;
    $1603($5_1 + $2_1 | 0, $5_1, $3 - $1_1 | 0);
   }
   $1602($1944($0_1, 20) + $1_1 | 0, $6_1, $2_1);
   $1968($1944($0_1, 20) + ($1944($0_1, 24) + $2_1 | 0) | 0, 0, 0);
   $3 = $1944($0_1, 36);
   if (($1_1 | 0) <= ($3 | 0)) {
    $1973($0_1, 36, $2_1 + $3 | 0)
   }
   $1968($0_1, 32, 1);
   $1_1 = $1944($0_1, 36);
   $1973($0_1, 44, $1_1);
   $1973($0_1, 40, $1_1);
   $1973($0_1, 24, $1944($0_1, 24) + $2_1 | 0);
  }
 }
 
 function $810($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $5_1 = $1944($3, 0);
  if ($5_1 >>> 0 < 2147483632) {
   $7_1 = $1944($0_1, 0);
   label$2 : {
    if ($5_1 >>> 0 <= 10) {
     $1968($4_1, 15, $5_1);
     $0_1 = $4_1 + 4 | 0;
     break label$2;
    }
    $6_1 = ($5_1 | 15) + 1 | 0;
    $0_1 = $1783($6_1);
    $1973($4_1, 12, $6_1 | -2147483648);
    $1973($4_1, 4, $0_1);
    $1973($4_1, 8, $5_1);
   }
   if ($5_1) {
    $1602($0_1, $3 + 4 | 0, $5_1)
   }
   $1968($0_1 + $5_1 | 0, 0, 0);
   FUNCTION_TABLE[$7_1 | 0]($1_1, $2_1, $4_1 + 4 | 0);
   if (($1936($4_1, 15) | 0) < 0) {
    $1756($1944($4_1, 4))
   }
   global$0 = $4_1 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $811($0_1) {
  $0_1 = $0_1 | 0;
  return ($1944($0_1, 40) | 0) != ($1944($0_1, 44) | 0) | 0;
 }
 
 function $812($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = $1944($0_1, 4);
  $1_1 = ($2_1 >> 1) + $1_1 | 0;
  $0_1 = $1944($0_1, 0);
  label$1 : {
   if (!($2_1 & 1)) {
    break label$1
   }
   $0_1 = $1944($1944($1_1, 0) + $0_1 | 0, 0);
  }
  return FUNCTION_TABLE[$0_1 | 0]($1_1) | 0;
 }
 
 function $813($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0;
  $1_1 = $1789($1877(8));
  $1973($1_1, 0, 73136);
  $2_1 = $1697($0_1);
  $3 = $1783($2_1 + 13 | 0);
  $1973($3, 8, 0);
  $1973($3, 4, $2_1);
  $1973($3, 0, $2_1);
  $1973($1_1 + 4 | 0, 0, $1602($3 + 12 | 0, $0_1, $2_1 + 1 | 0));
  $1973($1_1, 0, 73184);
  fimport$14($1_1 | 0, 73216, 64);
  wasm2js_trap();
 }
 
 function $815() {
  var $0_1 = 0;
  $0_1 = $1789($1877(4));
  $1973($0_1, 0, 72984);
  $1973($0_1, 0, 73004);
  fimport$14($0_1 | 0, 73116, 65);
  wasm2js_trap();
 }
 
 function $816() {
  var $0_1 = 0;
  fimport$11(49168, 49204, 49248, 0, 48504, 66, 48612, 0, 48612, 0, 13814, 48614, 67);
  $0_1 = $1783(4);
  $1973($0_1, 0, 68);
  fimport$12(49168, 4621, 48496, 49e3, 69, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 70);
  fimport$12(49168, 10184, 48496, 49e3, 69, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 71);
  fimport$12(49168, 10381, 48496, 49e3, 69, $0_1 | 0, 0, 0, 0, 0);
 }
 
 function $817($0_1) {
  $0_1 = $0_1 | 0;
  return 49168;
 }
 
 function $819($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 4 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $821($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 12 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $822($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 20 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $823() {
  var $0_1 = 0, $1_1 = 0;
  fimport$11(49284, 49312, 49352, 0, 48504, 72, 48612, 0, 48612, 0, 6209, 48614, 73);
  fimport$15(49284, 1, 49368, 48504, 74, 75);
  $0_1 = $1783(4);
  $1973($0_1, 0, 0);
  $1_1 = $1783(4);
  $1973($1_1, 0, 0);
  fimport$12(49284, 2714, 72724, 49e3, 76, $0_1 | 0, 72724, 49004, 77, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 4);
  $1_1 = $1783(4);
  $1973($1_1, 0, 4);
  fimport$12(49284, 11781, 72724, 49e3, 76, $0_1 | 0, 72724, 49004, 77, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 8);
  $1_1 = $1783(4);
  $1973($1_1, 0, 8);
  fimport$12(49284, 2848, 72724, 49e3, 76, $0_1 | 0, 72724, 49004, 77, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 12);
  $1_1 = $1783(4);
  $1973($1_1, 0, 12);
  fimport$12(49284, 3341, 72796, 48692, 78, $0_1 | 0, 72796, 48696, 79, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 16);
  $1_1 = $1783(4);
  $1973($1_1, 0, 16);
  fimport$12(49284, 14003, 72796, 48692, 78, $0_1 | 0, 72796, 48696, 79, $1_1 | 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 80);
  fimport$13(49284, 7622, 4, 49376, 49392, 81, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 82);
  fimport$13(49284, 11801, 2, 49400, 49408, 83, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 84);
  fimport$13(49284, 6932, 2, 49412, 49e3, 85, $0_1 | 0, 0, 0);
 }
 
 function $824($0_1) {
  $0_1 = $0_1 | 0;
  return 49284;
 }
 
 function $825($0_1) {
  $0_1 = $0_1 | 0;
  if ($0_1) {
   $1756($43($0_1))
  }
 }
 
 function $826($0_1) {
  $0_1 = $0_1 | 0;
  return FUNCTION_TABLE[$0_1 | 0]() | 0;
 }
 
 function $827() {
  return $42($1783(24)) | 0;
 }
 
 function $832($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = Math_fround($3);
  var $4_1 = 0;
  $4_1 = $1944($0_1, 4);
  $1_1 = ($4_1 >> 1) + $1_1 | 0;
  $0_1 = $1944($0_1, 0);
  label$1 : {
   if (!($4_1 & 1)) {
    break label$1
   }
   $0_1 = $1944($1944($1_1, 0) + $0_1 | 0, 0);
  }
  FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1, $3);
 }
 
 function $833($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = $1944($0_1, 4);
  $1_1 = ($2_1 >> 1) + $1_1 | 0;
  $0_1 = $1944($0_1, 0);
  label$1 : {
   if (!($2_1 & 1)) {
    break label$1
   }
   $0_1 = $1944($1944($1_1, 0) + $0_1 | 0, 0);
  }
  FUNCTION_TABLE[$0_1 | 0]($1_1);
 }
 
 function $835() {
  var $0_1 = 0, $1_1 = 0;
  fimport$11(49448, 49488, 49536, 0, 48504, 86, 48612, 0, 48612, 0, 5383, 48614, 87);
  $0_1 = $1783(4);
  $1973($0_1, 0, 0);
  $1_1 = $1783(4);
  $1973($1_1, 0, 0);
  fimport$12(49448, 15037, 72736, 49e3, 88, $0_1 | 0, 72736, 49004, 89, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 4);
  $1_1 = $1783(4);
  $1973($1_1, 0, 4);
  fimport$12(49448, 1469, 72700, 49e3, 90, $0_1 | 0, 72700, 49004, 91, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 6);
  $1_1 = $1783(4);
  $1973($1_1, 0, 6);
  fimport$12(49448, 6396, 72700, 49e3, 90, $0_1 | 0, 72700, 49004, 91, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 92);
  fimport$12(49448, 7459, 48496, 49e3, 93, $0_1 | 0, 0, 0, 0, 0);
 }
 
 function $836($0_1) {
  $0_1 = $0_1 | 0;
  return 49448;
 }
 
 function $840($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  return $1939($1944($0_1, 0) + $1_1 | 0, 0) | 0;
 }
 
 function $842($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1936($1_1, 8));
  $1973($0_1, 0, fimport$1(72724, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $844() {
  var $0_1 = 0, $1_1 = 0;
  fimport$11(49576, 49608, 49648, 0, 48504, 94, 48612, 0, 48612, 0, 5363, 48614, 95);
  $0_1 = $1783(4);
  $1973($0_1, 0, 96);
  fimport$13(49576, 13511, 3, 49664, 48740, 97, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 4);
  $1_1 = $1783(4);
  $1973($1_1, 0, 4);
  fimport$12(49576, 2859, 72724, 49e3, 98, $0_1 | 0, 72724, 49004, 99, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 8);
  $1_1 = $1783(4);
  $1973($1_1, 0, 8);
  fimport$12(49576, 1065, 72652, 49e3, 100, $0_1 | 0, 72652, 49004, 101, $1_1 | 0);
 }
 
 function $845($0_1) {
  $0_1 = $0_1 | 0;
  return 49576;
 }
 
 function $847($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 8, $1944($1_1, 0) + Math_imul($2_1, 12) | 0);
  $1973($0_1, 0, fimport$1(49536, $3 + 8 | 0) | 0);
  global$0 = $3 + 16 | 0;
 }
 
 function $848($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  FUNCTION_TABLE[$1944($0_1, 0) | 0]($3 + 12 | 0, $1_1, $2_1);
  fimport$10($1944($3, 12) | 0);
  $0_1 = $1944($3, 12);
  fimport$4($0_1 | 0);
  global$0 = $3 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $853() {
  var $0_1 = 0, $1_1 = 0;
  fimport$11(49688, 49708, 49740, 0, 48504, 102, 48612, 0, 48612, 0, 11805, 48614, 103);
  $0_1 = $1783(4);
  $1973($0_1, 0, 28);
  $1_1 = $1783(4);
  $1973($1_1, 0, 28);
  fimport$12(49688, 2890, 72736, 49e3, 104, $0_1 | 0, 72736, 49004, 105, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 106);
  fimport$12(49688, 3722, 48496, 49e3, 107, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 108);
  fimport$12(49688, 12804, 48496, 49e3, 107, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 20);
  $1_1 = $1783(4);
  $1973($1_1, 0, 20);
  fimport$12(49688, 3429, 72736, 49e3, 104, $0_1 | 0, 72736, 49004, 105, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 24);
  $1_1 = $1783(4);
  $1973($1_1, 0, 24);
  fimport$12(49688, 3439, 72736, 49e3, 104, $0_1 | 0, 72736, 49004, 105, $1_1 | 0);
 }
 
 function $854($0_1) {
  $0_1 = $0_1 | 0;
  return 49688;
 }
 
 function $858($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1);
  $1973($0_1, 0, fimport$1(48816, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $860($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1944($1_1, 16));
  $1973($0_1, 0, fimport$1(72724, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $861() {
  var $0_1 = 0, $1_1 = 0;
  fimport$11(49772, 49796, 49828, 0, 48504, 109, 48612, 0, 48612, 0, 2556, 48614, 110);
  $0_1 = $1783(4);
  $1973($0_1, 0, 111);
  fimport$13(49772, 5329, 3, 49844, 49004, 112, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 113);
  fimport$12(49772, 6325, 48496, 49e3, 114, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 115);
  fimport$12(49772, 6315, 48496, 49e3, 114, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 36);
  $1_1 = $1783(4);
  $1973($1_1, 0, 36);
  fimport$12(49772, 4951, 72724, 49e3, 116, $0_1 | 0, 72724, 49004, 117, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 118);
  fimport$13(49772, 3699, 5, 49904, 49924, 119, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 120);
  fimport$13(49772, 7827, 2, 49932, 49408, 121, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 122);
  fimport$13(49772, 3687, 2, 49932, 49408, 121, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 123);
  fimport$13(49772, 15076, 3, 49940, 49004, 124, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 125);
  fimport$13(49772, 15063, 2, 49932, 49408, 121, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 126);
  fimport$13(49772, 7628, 3, 49952, 48740, 127, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 128);
  fimport$13(49772, 1527, 3, 49952, 48740, 127, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 129);
  fimport$13(49772, 11e3, 6, 49968, 49992, 130, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 131);
  fimport$13(49772, 3803, 8, 5e4, 50032, 132, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 133);
  fimport$13(49772, 12491, 7, 50048, 50076, 134, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 135);
  fimport$13(49772, 6113, 8, 50096, 50128, 136, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 137);
  fimport$13(49772, 12728, 8, 50144, 50176, 138, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 139);
  fimport$13(49772, 12553, 7, 50192, 50220, 140, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 141);
  fimport$13(49772, 11302, 7, 50240, 50268, 142, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 143);
  fimport$13(49772, 12519, 6, 50288, 50312, 144, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 145);
  fimport$13(49772, 11326, 7, 50320, 50348, 146, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 147);
  fimport$13(49772, 12537, 6, 50368, 50392, 148, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 149);
  fimport$13(49772, 7575, 7, 50320, 50348, 146, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 150);
  fimport$13(49772, 12505, 6, 50368, 50392, 148, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 151);
  fimport$13(49772, 15377, 5, 50400, 49924, 152, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 153);
  fimport$13(49772, 15170, 9, 50432, 50468, 154, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 155);
  fimport$13(49772, 11589, 8, 50576, 50128, 156, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 157);
  fimport$13(49772, 12715, 12, 50608, 50656, 158, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 159);
  fimport$13(49772, 12690, 10, 50672, 50712, 160, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 161);
  fimport$13(49772, 10952, 7, 50736, 50268, 162, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 163);
  fimport$13(49772, 12471, 5, 50768, 49924, 164, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 165);
  fimport$13(49772, 13496, 9, 50800, 50836, 166, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 167);
  fimport$13(49772, 13435, 8, 50848, 50880, 168, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 169);
  fimport$13(49772, 6538, 2, 49932, 49408, 121, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 170);
  fimport$13(49772, 7102, 3, 49940, 49004, 124, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 171);
  fimport$13(49772, 10702, 3, 49940, 49004, 124, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 172);
  fimport$13(49772, 1391, 3, 50892, 49004, 173, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 174);
  fimport$13(49772, 11525, 5, 50912, 50932, 175, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 176);
  fimport$13(49772, 7113, 7, 50944, 50972, 177, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 178);
  fimport$13(49772, 2655, 6, 50992, 50392, 179, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 180);
  fimport$13(49772, 7079, 6, 51024, 50312, 181, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 182);
  fimport$13(49772, 7052, 5, 51056, 49924, 183, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 184);
  fimport$13(49772, 3774, 6, 51088, 51112, 185, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 186);
  fimport$13(49772, 3216, 3, 51120, 49004, 187, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 188);
  fimport$13(49772, 11536, 2, 49932, 49408, 121, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 189);
  fimport$13(49772, 3050, 3, 51120, 49004, 187, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 190);
  fimport$13(49772, 8528, 4, 51136, 49104, 191, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 192);
  fimport$13(49772, 11815, 2, 49932, 49408, 121, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 193);
  fimport$13(49772, 10464, 4, 51152, 49104, 194, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 195);
  fimport$13(49772, 10450, 4, 51152, 49104, 194, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 196);
  fimport$13(49772, 3749, 5, 51168, 49924, 197, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 198);
  fimport$13(49772, 14763, 7, 50192, 50220, 140, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 199);
  fimport$13(49772, 14774, 11, 51200, 51244, 200, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 201);
  fimport$13(49772, 1255, 5, 51168, 49924, 197, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 202);
  fimport$13(49772, 1508, 3, 51260, 49004, 203, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 204);
  fimport$13(49772, 1247, 5, 51168, 49924, 197, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 205);
  fimport$13(49772, 2790, 3, 51272, 51284, 206, $0_1 | 0, 0, 0);
 }
 
 function $862($0_1) {
  $0_1 = $0_1 | 0;
  return 49772;
 }
 
 function $863($0_1) {
  $0_1 = $0_1 | 0;
  if ($0_1) {
   $1756($78($0_1))
  }
 }
 
 function $864($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  if ($1944($0_1, 0)) {
   $4_1 = $1944($0_1, 8);
   while (1) {
    $1973($2_1, 0, $4_1);
    $3 = fimport$1(49740, $2_1 | 0) | 0;
    $1973($2_1, 0, $6_1);
    $5_1 = fimport$1(72736, $2_1 | 0) | 0;
    fimport$10($3 | 0);
    $1973($2_1, 0, $3);
    fimport$10($5_1 | 0);
    $1973($2_1, 8, $5_1);
    fimport$4(fimport$16($1944($1_1, 0) | 0, 2, 49856, $2_1 | 0) | 0);
    fimport$4($5_1 | 0);
    fimport$4($3 | 0);
    $3 = $4_1;
    $4_1 = $3 + 40 | 0;
    $6_1 = $1944($3, 28) + $6_1 | 0;
    if (($1944($0_1, 8) + Math_imul($1944($0_1, 0), 40) | 0) != ($4_1 | 0)) {
     continue
    }
    break;
   };
  }
  global$0 = $2_1 + 16 | 0;
 }
 
 function $866($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $1944($1_1, 12);
  $1973($2_1, 12, $1944($1_1 + 20 | 0, 0));
  $1973($2_1, 8, $3 << 1);
  $1973($0_1, 0, fimport$1(49896, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $868($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $1944($1_1, 24);
  $1973($2_1, 12, $1944($1_1 + 32 | 0, 0));
  $1973($2_1, 8, Math_imul($3, 20));
  $1973($0_1, 0, fimport$1(49896, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $871($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0;
  $4_1 = global$0 - 32 | 0;
  global$0 = $4_1;
  $1982($4_1, 24, 0, 0);
  $1_1 = $763($1_1, $4_1 + 24 | 0);
  $1982($4_1, 16, 0, 0);
  $2_1 = $763($2_1, $4_1 + 16 | 0);
  $1983($4_1, 8, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
  $1983($4_1, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
  $378($0_1, $4_1 + 8 | 0, $4_1, $3);
  global$0 = $4_1 + 32 | 0;
 }
 
 function $872($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  var $5_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $0_1 = $1944($0_1, 0);
  $1973($5_1, 8, $3);
  $1973($5_1, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $5_1 + 12 | 0, $5_1 + 8 | 0, $4_1);
  fimport$4($1944($5_1, 8) | 0);
  fimport$4($1944($5_1, 12) | 0);
  global$0 = $5_1 + 16 | 0;
 }
 
 function $874($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0.0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = +fimport$5($1944($1_1, 0) | 0, 72724, $2_1 + 12 | 0);
  fimport$6($1944($2_1, 12) | 0);
  if (Math_abs($3) < 2147483648.0) {
   $1_1 = ~~$3
  } else {
   $1_1 = -2147483648
  }
  $381($0_1, $1_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $876($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1982($3, 8, $1959((($1944($1_1, 60) << 4) + $1944($1_1 + 68 | 0, 0) | 0) - 16 | 0, 0), i64toi32_i32$HIGH_BITS);
  $1_1 = $1944($2_1, 0);
  $1973($3, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $3 + 8 | 0, $3 + 4 | 0);
  fimport$4($1944($3, 4) | 0);
  global$0 = $3 + 16 | 0;
 }
 
 function $877($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $0_1 = $1944($0_1, 0);
  $1973($3, 8, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($3 + 12 | 0, $1_1, $3 + 8 | 0);
  fimport$10($1944($3, 12) | 0);
  $0_1 = $1944($3, 12);
  fimport$4($0_1 | 0);
  fimport$4($1944($3, 8) | 0);
  global$0 = $3 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $878($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1982($3, 8, $1959((($1944($1_1, 60) << 4) + $1944($1_1 + 68 | 0, 0) | 0) - 8 | 0, 0), i64toi32_i32$HIGH_BITS);
  $1_1 = $1944($2_1, 0);
  $1973($3, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $3 + 8 | 0, $3 + 4 | 0);
  fimport$4($1944($3, 4) | 0);
  global$0 = $3 + 16 | 0;
 }
 
 function $879($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = Math_fround($4_1);
  var $5_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $1982($5_1, 8, 0, 0);
  $1_1 = $763($1_1, $5_1 + 8 | 0);
  $1982($5_1, 0, 0, 0);
  $399($0_1, $1_1, $763($2_1, $5_1), $3, $4_1);
  global$0 = $5_1 + 16 | 0;
 }
 
 function $880($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = Math_fround($5_1);
  var $6_1 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $0_1 = $1944($0_1, 0);
  $1973($6_1, 8, $3);
  $1973($6_1, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $6_1 + 12 | 0, $6_1 + 8 | 0, $4_1, $5_1);
  fimport$4($1944($6_1, 8) | 0);
  fimport$4($1944($6_1, 12) | 0);
  global$0 = $6_1 + 16 | 0;
 }
 
 function $881($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = Math_fround($4_1);
  $5_1 = $5_1 | 0;
  $6_1 = Math_fround($6_1);
  var $7_1 = 0;
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $1982($7_1, 8, 0, 0);
  $1_1 = $763($1_1, $7_1 + 8 | 0);
  $1982($7_1, 0, 0, 0);
  $400($0_1, $1_1, $763($2_1, $7_1), $3, $4_1, $5_1, $6_1);
  global$0 = $7_1 + 16 | 0;
 }
 
 function $882($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = Math_fround($5_1);
  $6_1 = $6_1 | 0;
  $7_1 = Math_fround($7_1);
  var $8 = 0;
  $8 = global$0 - 16 | 0;
  global$0 = $8;
  $0_1 = $1944($0_1, 0);
  $1973($8, 8, $3);
  $1973($8, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $8 + 12 | 0, $8 + 8 | 0, $4_1, $5_1, $6_1, $7_1);
  fimport$4($1944($8, 8) | 0);
  fimport$4($1944($8, 12) | 0);
  global$0 = $8 + 16 | 0;
 }
 
 function $883($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = Math_fround($4_1);
  $5_1 = $5_1 | 0;
  var $6_1 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $1982($6_1, 8, 0, 0);
  $1_1 = $763($1_1, $6_1 + 8 | 0);
  $1982($6_1, 0, 0, 0);
  $401($0_1, $1_1, $763($2_1, $6_1), $3, $4_1, $5_1);
  global$0 = $6_1 + 16 | 0;
 }
 
 function $884($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = Math_fround($5_1);
  $6_1 = $6_1 | 0;
  var $7_1 = 0;
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $0_1 = $1944($0_1, 0);
  $1973($7_1, 8, $3);
  $1973($7_1, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $7_1 + 12 | 0, $7_1 + 8 | 0, $4_1, $5_1, $6_1);
  fimport$4($1944($7_1, 8) | 0);
  fimport$4($1944($7_1, 12) | 0);
  global$0 = $7_1 + 16 | 0;
 }
 
 function $885($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0;
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $1982($7_1, 8, 0, 0);
  $1_1 = $763($1_1, $7_1 + 8 | 0);
  $1982($7_1, 0, 0, 0);
  $402($0_1, $1_1, $763($2_1, $7_1), $3, $4_1, $5_1, $6_1);
  global$0 = $7_1 + 16 | 0;
 }
 
 function $886($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  var $8 = 0;
  $8 = global$0 - 16 | 0;
  global$0 = $8;
  $0_1 = $1944($0_1, 0);
  $1973($8, 8, $3);
  $1973($8, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $8 + 12 | 0, $8 + 8 | 0, $4_1, $5_1, $6_1, $7_1);
  fimport$4($1944($8, 8) | 0);
  fimport$4($1944($8, 12) | 0);
  global$0 = $8 + 16 | 0;
 }
 
 function $887($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = Math_fround($6_1);
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0;
  $8 = global$0 - 32 | 0;
  global$0 = $8;
  $1982($8, 24, 0, 0);
  $1_1 = $763($1_1, $8 + 24 | 0);
  $1982($8, 16, 0, 0);
  $2_1 = $763($2_1, $8 + 16 | 0);
  $1982($8, 8, 0, 0);
  $3 = $763($3, $8 + 8 | 0);
  $1982($8, 0, 0, 0);
  $10_1 = $763($4_1, $8);
  if ($5_1 >>> 0 >= 16777216) {
   $7_1 = $1944($0_1, 84);
   $4_1 = $1944($0_1 + 88 | 0, 0);
   label$2 : {
    if (($7_1 | 0) != ($4_1 | 0)) {
     break label$2
    }
    $9 = $4_1 ? $4_1 + (($4_1 | 0) / 2 | 0) | 0 : 8;
    $7_1 = $7_1 + 1 | 0;
    $7_1 = ($7_1 | 0) < ($9 | 0) ? $9 : $7_1;
    if (($4_1 | 0) >= ($7_1 | 0)) {
     break label$2
    }
    $4_1 = $16($7_1 << 3);
    $9 = $1944($0_1 + 92 | 0, 0);
    if ($9) {
     $1602($4_1, $9, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $7_1);
    $1973($0_1, 92, $4_1);
   }
   $1982($1944($0_1 + 92 | 0, 0) + ($1944($0_1, 84) << 3) | 0, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
   $4_1 = $1944($0_1, 84);
   $7_1 = $4_1 + 1 | 0;
   $1973($0_1, 84, $7_1);
   $1_1 = $1944($0_1, 88);
   label$6 : {
    if (($7_1 | 0) != ($1_1 | 0)) {
     break label$6
    }
    $7_1 = $1_1 ? $1_1 + (($1_1 | 0) / 2 | 0) | 0 : 8;
    $4_1 = $4_1 + 2 | 0;
    $4_1 = ($4_1 | 0) < ($7_1 | 0) ? $7_1 : $4_1;
    if (($1_1 | 0) >= ($4_1 | 0)) {
     break label$6
    }
    $1_1 = $16($4_1 << 3);
    $7_1 = $1944($0_1, 92);
    if ($7_1) {
     $1602($1_1, $7_1, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $4_1);
    $1973($0_1, 92, $1_1);
   }
   $1982($1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
   $2_1 = $1944($0_1, 84);
   $4_1 = $2_1 + 1 | 0;
   $1973($0_1, 84, $4_1);
   $1_1 = $1944($0_1, 88);
   label$10 : {
    if (($4_1 | 0) != ($1_1 | 0)) {
     break label$10
    }
    $4_1 = $1_1 ? $1_1 + (($1_1 | 0) / 2 | 0) | 0 : 8;
    $2_1 = $2_1 + 2 | 0;
    $2_1 = ($2_1 | 0) < ($4_1 | 0) ? $4_1 : $2_1;
    if (($1_1 | 0) >= ($2_1 | 0)) {
     break label$10
    }
    $1_1 = $16($2_1 << 3);
    $4_1 = $1944($0_1, 92);
    if ($4_1) {
     $1602($1_1, $4_1, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $2_1);
    $1973($0_1, 92, $1_1);
   }
   $1982($1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0, 0, $1959($3, 0), i64toi32_i32$HIGH_BITS);
   $2_1 = $1944($0_1, 84);
   $3 = $2_1 + 1 | 0;
   $1973($0_1, 84, $3);
   $1_1 = $1944($0_1, 88);
   label$14 : {
    if (($3 | 0) != ($1_1 | 0)) {
     break label$14
    }
    $3 = $1_1;
    $1_1 = $1_1 ? $1_1 + (($1_1 | 0) / 2 | 0) | 0 : 8;
    $2_1 = $2_1 + 2 | 0;
    $1_1 = ($1_1 | 0) > ($2_1 | 0) ? $1_1 : $2_1;
    if (($3 | 0) >= ($1_1 | 0)) {
     break label$14
    }
    $2_1 = $16($1_1 << 3);
    $3 = $1944($0_1, 92);
    if ($3) {
     $1602($2_1, $3, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $1_1);
    $1973($0_1, 92, $2_1);
   }
   $1982($1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0, 0, $1959($10_1, 0), i64toi32_i32$HIGH_BITS);
   $1_1 = $1944($0_1, 84) + 1 | 0;
   $1973($0_1, 84, $1_1);
   $388($0_1, $1944($0_1, 92), $1_1, $5_1, 1, $6_1);
   $1973($0_1, 84, 0);
  }
  global$0 = $8 + 32 | 0;
 }
 
 function $888($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = Math_fround($7_1);
  var $8 = 0;
  $8 = global$0 - 16 | 0;
  global$0 = $8;
  $0_1 = $1944($0_1, 0);
  $1973($8, 8, $3);
  $1973($8, 12, $2_1);
  $1973($8, 4, $4_1);
  $1973($8, 0, $5_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $8 + 12 | 0, $8 + 8 | 0, $8 + 4 | 0, $8, $6_1, $7_1);
  fimport$4($1944($8, 0) | 0);
  fimport$4($1944($8, 4) | 0);
  fimport$4($1944($8, 8) | 0);
  fimport$4($1944($8, 12) | 0);
  global$0 = $8 + 16 | 0;
 }
 
 function $889($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  $7_1 = global$0 - 32 | 0;
  global$0 = $7_1;
  $1982($7_1, 24, 0, 0);
  $1_1 = $763($1_1, $7_1 + 24 | 0);
  $1982($7_1, 16, 0, 0);
  $2_1 = $763($2_1, $7_1 + 16 | 0);
  $1982($7_1, 8, 0, 0);
  $3 = $763($3, $7_1 + 8 | 0);
  $1982($7_1, 0, 0, 0);
  $9 = $763($4_1, $7_1);
  if ($5_1 >>> 0 >= 16777216) {
   $6_1 = $1944($0_1, 84);
   $4_1 = $1944($0_1 + 88 | 0, 0);
   label$2 : {
    if (($6_1 | 0) != ($4_1 | 0)) {
     break label$2
    }
    $8 = $4_1 ? $4_1 + (($4_1 | 0) / 2 | 0) | 0 : 8;
    $6_1 = $6_1 + 1 | 0;
    $6_1 = ($6_1 | 0) < ($8 | 0) ? $8 : $6_1;
    if (($4_1 | 0) >= ($6_1 | 0)) {
     break label$2
    }
    $4_1 = $16($6_1 << 3);
    $8 = $1944($0_1 + 92 | 0, 0);
    if ($8) {
     $1602($4_1, $8, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $6_1);
    $1973($0_1, 92, $4_1);
   }
   $1982($1944($0_1 + 92 | 0, 0) + ($1944($0_1, 84) << 3) | 0, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
   $4_1 = $1944($0_1, 84);
   $6_1 = $4_1 + 1 | 0;
   $1973($0_1, 84, $6_1);
   $1_1 = $1944($0_1, 88);
   label$6 : {
    if (($6_1 | 0) != ($1_1 | 0)) {
     break label$6
    }
    $6_1 = $1_1 ? $1_1 + (($1_1 | 0) / 2 | 0) | 0 : 8;
    $4_1 = $4_1 + 2 | 0;
    $4_1 = ($4_1 | 0) < ($6_1 | 0) ? $6_1 : $4_1;
    if (($1_1 | 0) >= ($4_1 | 0)) {
     break label$6
    }
    $1_1 = $16($4_1 << 3);
    $6_1 = $1944($0_1, 92);
    if ($6_1) {
     $1602($1_1, $6_1, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $4_1);
    $1973($0_1, 92, $1_1);
   }
   $1982($1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
   $2_1 = $1944($0_1, 84);
   $4_1 = $2_1 + 1 | 0;
   $1973($0_1, 84, $4_1);
   $1_1 = $1944($0_1, 88);
   label$10 : {
    if (($4_1 | 0) != ($1_1 | 0)) {
     break label$10
    }
    $4_1 = $1_1 ? $1_1 + (($1_1 | 0) / 2 | 0) | 0 : 8;
    $2_1 = $2_1 + 2 | 0;
    $2_1 = ($2_1 | 0) < ($4_1 | 0) ? $4_1 : $2_1;
    if (($1_1 | 0) >= ($2_1 | 0)) {
     break label$10
    }
    $1_1 = $16($2_1 << 3);
    $4_1 = $1944($0_1, 92);
    if ($4_1) {
     $1602($1_1, $4_1, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $2_1);
    $1973($0_1, 92, $1_1);
   }
   $1982($1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0, 0, $1959($3, 0), i64toi32_i32$HIGH_BITS);
   $2_1 = $1944($0_1, 84);
   $3 = $2_1 + 1 | 0;
   $1973($0_1, 84, $3);
   $1_1 = $1944($0_1, 88);
   label$14 : {
    if (($3 | 0) != ($1_1 | 0)) {
     break label$14
    }
    $3 = $1_1;
    $1_1 = $1_1 ? $1_1 + (($1_1 | 0) / 2 | 0) | 0 : 8;
    $2_1 = $2_1 + 2 | 0;
    $1_1 = ($1_1 | 0) > ($2_1 | 0) ? $1_1 : $2_1;
    if (($3 | 0) >= ($1_1 | 0)) {
     break label$14
    }
    $2_1 = $16($1_1 << 3);
    $3 = $1944($0_1, 92);
    if ($3) {
     $1602($2_1, $3, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $1_1);
    $1973($0_1, 92, $2_1);
   }
   $1982($1944($0_1, 92) + ($1944($0_1, 84) << 3) | 0, 0, $1959($9, 0), i64toi32_i32$HIGH_BITS);
   $1_1 = $1944($0_1, 84) + 1 | 0;
   $1973($0_1, 84, $1_1);
   $389($0_1, $1944($0_1, 92), $1_1, $5_1);
   $1973($0_1, 84, 0);
  }
  global$0 = $7_1 + 32 | 0;
 }
 
 function $890($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0;
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $0_1 = $1944($0_1, 0);
  $1973($7_1, 8, $3);
  $1973($7_1, 12, $2_1);
  $1973($7_1, 4, $4_1);
  $1973($7_1, 0, $5_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $7_1 + 12 | 0, $7_1 + 8 | 0, $7_1 + 4 | 0, $7_1, $6_1);
  fimport$4($1944($7_1, 0) | 0);
  fimport$4($1944($7_1, 4) | 0);
  fimport$4($1944($7_1, 8) | 0);
  fimport$4($1944($7_1, 12) | 0);
  global$0 = $7_1 + 16 | 0;
 }
 
 function $891($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = Math_fround($5_1);
  var $6_1 = 0;
  $6_1 = global$0 - 32 | 0;
  global$0 = $6_1;
  $1982($6_1, 24, 0, 0);
  $1_1 = $763($1_1, $6_1 + 24 | 0);
  $1982($6_1, 16, 0, 0);
  $2_1 = $763($2_1, $6_1 + 16 | 0);
  $1982($6_1, 8, 0, 0);
  $405($0_1, $1_1, $2_1, $763($3, $6_1 + 8 | 0), $4_1, $5_1);
  global$0 = $6_1 + 32 | 0;
 }
 
 function $892($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = Math_fround($6_1);
  var $7_1 = 0;
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $0_1 = $1944($0_1, 0);
  $1973($7_1, 8, $3);
  $1973($7_1, 12, $2_1);
  $1973($7_1, 4, $4_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $7_1 + 12 | 0, $7_1 + 8 | 0, $7_1 + 4 | 0, $5_1, $6_1);
  fimport$4($1944($7_1, 4) | 0);
  fimport$4($1944($7_1, 8) | 0);
  fimport$4($1944($7_1, 12) | 0);
  global$0 = $7_1 + 16 | 0;
 }
 
 function $893($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  var $5_1 = 0;
  $5_1 = global$0 - 32 | 0;
  global$0 = $5_1;
  $1982($5_1, 24, 0, 0);
  $1_1 = $763($1_1, $5_1 + 24 | 0);
  $1982($5_1, 16, 0, 0);
  $2_1 = $763($2_1, $5_1 + 16 | 0);
  $1982($5_1, 8, 0, 0);
  $406($0_1, $1_1, $2_1, $763($3, $5_1 + 8 | 0), $4_1);
  global$0 = $5_1 + 32 | 0;
 }
 
 function $894($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $0_1 = $1944($0_1, 0);
  $1973($6_1, 8, $3);
  $1973($6_1, 12, $2_1);
  $1973($6_1, 4, $4_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $6_1 + 12 | 0, $6_1 + 8 | 0, $6_1 + 4 | 0, $5_1);
  fimport$4($1944($6_1, 4) | 0);
  fimport$4($1944($6_1, 8) | 0);
  fimport$4($1944($6_1, 12) | 0);
  global$0 = $6_1 + 16 | 0;
 }
 
 function $895($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = Math_fround($5_1);
  var $6_1 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $1982($6_1, 8, 0, 0);
  $407($0_1, $763($1_1, $6_1 + 8 | 0), $2_1, $3, $4_1, $5_1);
  global$0 = $6_1 + 16 | 0;
 }
 
 function $896($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = Math_fround($3);
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = Math_fround($6_1);
  var $7_1 = 0;
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $0_1 = $1944($0_1, 0);
  $1973($7_1, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $7_1 + 12 | 0, $3, $4_1, $5_1, $6_1);
  fimport$4($1944($7_1, 12) | 0);
  global$0 = $7_1 + 16 | 0;
 }
 
 function $897($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  var $5_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $1982($5_1, 8, 0, 0);
  $408($0_1, $763($1_1, $5_1 + 8 | 0), $2_1, $3, $4_1);
  global$0 = $5_1 + 16 | 0;
 }
 
 function $898($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = Math_fround($3);
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $0_1 = $1944($0_1, 0);
  $1973($6_1, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $6_1 + 12 | 0, $3, $4_1, $5_1);
  fimport$4($1944($6_1, 12) | 0);
  global$0 = $6_1 + 16 | 0;
 }
 
 function $899($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = Math_fround($5_1);
  var $6_1 = 0, $7_1 = Math_fround(0);
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $1982($6_1, 8, 0, 0);
  $1_1 = $763($1_1, $6_1 + 8 | 0);
  if (!(($4_1 | 0) < 3 | $3 >>> 0 < 16777216)) {
   $7_1 = Math_fround($2_1 + Math_fround(-.5));
   $2_1 = Math_fround($4_1 | 0);
   $393($0_1, $1_1, $7_1, Math_fround(0.0), Math_fround(Math_fround(Math_fround($2_1 + Math_fround(-1.0)) * Math_fround(6.2831854820251465)) / $2_1), $4_1 - 1 | 0);
   $388($0_1, $1944($0_1 + 92 | 0, 0), $1944($0_1, 84), $3, 1, $5_1);
   $1973($0_1, 84, 0);
  }
  global$0 = $6_1 + 16 | 0;
 }
 
 function $900($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  var $5_1 = 0, $6_1 = Math_fround(0);
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $1982($5_1, 8, 0, 0);
  $1_1 = $763($1_1, $5_1 + 8 | 0);
  if (!(($4_1 | 0) < 3 | $3 >>> 0 < 16777216)) {
   $6_1 = $2_1;
   $2_1 = Math_fround($4_1 | 0);
   $393($0_1, $1_1, $6_1, Math_fround(0.0), Math_fround(Math_fround(Math_fround($2_1 + Math_fround(-1.0)) * Math_fround(6.2831854820251465)) / $2_1), $4_1 - 1 | 0);
   $389($0_1, $1944($0_1 + 92 | 0, 0), $1944($0_1, 84), $3);
   $1973($0_1, 84, 0);
  }
  global$0 = $5_1 + 16 | 0;
 }
 
 function $901($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1982($4_1, 8, 0, 0);
  $416($0_1, $763($1_1, $4_1 + 8 | 0), $2_1, (wasm2js_i32$0 = $1944($3, 0), wasm2js_i32$1 = $3, wasm2js_i32$2 = ($1936($3, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
  global$0 = $4_1 + 16 | 0;
 }
 
 function $902($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  var $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $7_1 = $1944($0_1, 0);
  $1973($5_1, 12, $2_1);
  $0_1 = $1944($4_1, 0);
  if ($0_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($0_1 >>> 0 <= 10) {
     $1968($5_1, 11, $0_1);
     $2_1 = $5_1;
     break label$2;
    }
    $6_1 = ($0_1 | 15) + 1 | 0;
    $2_1 = $1783($6_1);
    $1973($5_1, 8, $6_1 | -2147483648);
    $1973($5_1, 0, $2_1);
    $1973($5_1, 4, $0_1);
   }
   if ($0_1) {
    $1602($2_1, $4_1 + 4 | 0, $0_1)
   }
   $1968($0_1 + $2_1 | 0, 0, 0);
   FUNCTION_TABLE[$7_1 | 0]($1_1, $5_1 + 12 | 0, $3, $5_1);
   if (($1936($5_1, 11) | 0) < 0) {
    $1756($1944($5_1, 0))
   }
   fimport$4($1944($5_1, 12) | 0);
   global$0 = $5_1 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $903($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = Math_fround($6_1);
  $7_1 = $7_1 | 0;
  var $8 = 0, $9 = 0.0, $10_1 = 0, $11_1 = 0, $12_1 = 0;
  $8 = global$0 - 48 | 0;
  global$0 = $8;
  $9 = +fimport$5($1944($1_1, 0) | 0, 50504, $8 | 0);
  fimport$6($1944($8, 0) | 0);
  $1982($8, 24, 0, 0);
  $3 = $763($3, $8 + 24 | 0);
  $11_1 = $1944($5_1, 0);
  $12_1 = $1936($5_1, 11);
  $1982($8 + 12 | 0, 0, 0, 0);
  $1982($8, 4, 0, 0);
  $1973($8, 0, 50528);
  $1973($8, 20, $7_1);
  $1_1 = $8 + 4 | 0;
  if (($1944($7_1, 0) | 0) != 2) {
   $10_1 = $8 + 32 | 0;
   $1983($10_1 + 8 | 0, 0, 0, 0);
   $1983($8, 32, 0, 0);
   $7_1 = $768($7_1, $10_1);
   $1982($1_1, 0, $1959($7_1, 0), i64toi32_i32$HIGH_BITS);
   $1982($1_1 + 8 | 0, 0, $1959($7_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
  }
  $5_1 = ($12_1 | 0) < 0 ? $11_1 : $5_1;
  $7_1 = ($1944($1944($8, 20), 0) | 0) != 2 ? $1_1 : 0;
  if ($9 < 4294967296.0 & $9 >= 0.0) {
   $1_1 = ~~$9 >>> 0
  } else {
   $1_1 = 0
  }
  $413($0_1, $1_1, $2_1, $3, $4_1, $5_1, 0, $6_1, $7_1);
  global$0 = $8 + 48 | 0;
 }
 
 function $904($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = Math_fround($3);
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = Math_fround($7_1);
  $8 = $8 | 0;
  var $9 = 0, $10_1 = 0;
  $9 = global$0 - 32 | 0;
  global$0 = $9;
  $10_1 = $1944($0_1, 0);
  $1973($9, 24, $4_1);
  $1973($9, 28, $2_1);
  $0_1 = $1944($6_1, 0);
  if ($0_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($0_1 >>> 0 <= 10) {
     $1968($9, 23, $0_1);
     $4_1 = $9 + 12 | 0;
     break label$2;
    }
    $2_1 = ($0_1 | 15) + 1 | 0;
    $4_1 = $1783($2_1);
    $1973($9, 20, $2_1 | -2147483648);
    $1973($9, 12, $4_1);
    $1973($9, 16, $0_1);
   }
   if ($0_1) {
    $1602($4_1, $6_1 + 4 | 0, $0_1)
   }
   $1968($0_1 + $4_1 | 0, 0, 0);
   $1973($9, 8, $8);
   FUNCTION_TABLE[$10_1 | 0]($1_1, $9 + 28 | 0, $3, $9 + 24 | 0, $5_1, $9 + 12 | 0, $7_1, $9 + 8 | 0);
   fimport$4($1944($9, 8) | 0);
   if (($1936($9, 23) | 0) < 0) {
    $1756($1944($9, 12))
   }
   fimport$4($1944($9, 24) | 0);
   fimport$4($1944($9, 28) | 0);
   global$0 = $9 + 32 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $905($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = 0.0, $9 = 0;
  $7_1 = global$0 - 32 | 0;
  global$0 = $7_1;
  $9 = $1944($1_1, 0);
  $1_1 = $7_1 + 24 | 0;
  $8 = +fimport$5($9 | 0, 72724, $1_1 | 0);
  fimport$6($1944($7_1, 24) | 0);
  $1982($7_1, 24, 0, 0);
  $1_1 = $763($2_1, $1_1);
  $1982($7_1, 16, 0, 0);
  $2_1 = $763($3, $7_1 + 16 | 0);
  $1982($7_1, 8, 0, 0);
  $3 = $763($4_1, $7_1 + 8 | 0);
  $1982($7_1, 0, 0, 0);
  if (Math_abs($8) < 2147483648.0) {
   $4_1 = ~~$8
  } else {
   $4_1 = -2147483648
  }
  $417($0_1, $4_1, $1_1, $2_1, $3, $763($5_1, $7_1), $6_1);
  global$0 = $7_1 + 32 | 0;
 }
 
 function $906($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  var $8 = 0;
  $8 = global$0 - 32 | 0;
  global$0 = $8;
  $0_1 = $1944($0_1, 0);
  $1973($8, 24, $3);
  $1973($8, 28, $2_1);
  $1973($8, 20, $4_1);
  $1973($8, 16, $5_1);
  $1973($8, 12, $6_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $8 + 28 | 0, $8 + 24 | 0, $8 + 20 | 0, $8 + 16 | 0, $8 + 12 | 0, $7_1);
  fimport$4($1944($8, 12) | 0);
  fimport$4($1944($8, 16) | 0);
  fimport$4($1944($8, 20) | 0);
  fimport$4($1944($8, 24) | 0);
  fimport$4($1944($8, 28) | 0);
  global$0 = $8 + 32 | 0;
 }
 
 function $907($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8, $9, $10_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  $8 = $8 | 0;
  $9 = $9 | 0;
  $10_1 = $10_1 | 0;
  var $11_1 = 0, $12_1 = 0, $13 = 0.0, $14 = 0;
  $11_1 = global$0 + -64 | 0;
  global$0 = $11_1;
  $12_1 = $1944($1_1, 0);
  $1_1 = $11_1 + 56 | 0;
  $13 = +fimport$5($12_1 | 0, 72724, $1_1 | 0);
  fimport$6($1944($11_1, 56) | 0);
  $1982($11_1, 56, 0, 0);
  $1_1 = $763($2_1, $1_1);
  $1982($11_1, 48, 0, 0);
  $2_1 = $763($3, $11_1 + 48 | 0);
  $1982($11_1, 40, 0, 0);
  $3 = $763($4_1, $11_1 + 40 | 0);
  $1982($11_1, 32, 0, 0);
  $4_1 = $763($5_1, $11_1 + 32 | 0);
  $1982($11_1, 24, 0, 0);
  $5_1 = $763($6_1, $11_1 + 24 | 0);
  $1982($11_1, 16, 0, 0);
  $6_1 = $763($7_1, $11_1 + 16 | 0);
  $1982($11_1, 8, 0, 0);
  $7_1 = $763($8, $11_1 + 8 | 0);
  $1982($11_1, 0, 0, 0);
  $14 = $763($9, $11_1);
  if ($10_1 >>> 0 >= 16777216) {
   __inlined_func$418 : {
    $8 = Math_abs($13) < 2147483648.0 ? ~~$13 : -2147483648;
    if (($1944($0_1 + 112 | 0, 0) | 0) != ($8 | 0)) {
     $381($0_1, $8);
     $383($0_1, 6, 4);
     $8 = $1944($0_1, 56);
     $9 = $1941($0_1, 40);
     $1970($8, 6, $9);
     $1970($8, 0, $9);
     $1970($8, 10, $9 + 3 | 0);
     $12_1 = $9 + 2 | 0;
     $1970($8, 8, $12_1);
     $1970($8, 4, $12_1);
     $1970($8, 2, $9 + 1 | 0);
     $1982($1944($0_1, 52), 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
     $1982($1944($0_1, 52), 8, $1959($5_1, 0), i64toi32_i32$HIGH_BITS);
     $1_1 = $1944($0_1, 52);
     $1973($1_1, 16, $10_1);
     $1982($1_1, 20, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
     $1982($1944($0_1, 52) + 28 | 0, 0, $1959($6_1, 0), i64toi32_i32$HIGH_BITS);
     $1_1 = $1944($0_1, 52);
     $1973($1_1 + 36 | 0, 0, $10_1);
     $1982($1_1, 40, $1959($3, 0), i64toi32_i32$HIGH_BITS);
     $1982($1944($0_1, 52) + 48 | 0, 0, $1959($7_1, 0), i64toi32_i32$HIGH_BITS);
     $1_1 = $1944($0_1, 52);
     $1973($1_1 + 56 | 0, 0, $10_1);
     $1982($1_1, 60, $1959($4_1, 0), i64toi32_i32$HIGH_BITS);
     $1982($1944($0_1, 52) + 68 | 0, 0, $1959($14, 0), i64toi32_i32$HIGH_BITS);
     $1_1 = $1944($0_1, 52);
     $1973($1_1 + 76 | 0, 0, $10_1);
     $1973($0_1, 52, $1_1 + 80 | 0);
     $1973($0_1, 40, $1944($0_1, 40) + 4 | 0);
     $1973($0_1, 56, $1944($0_1, 56) + 12 | 0);
     $1_1 = $1944($0_1, 72);
     $2_1 = $1_1 - 1 | 0;
     $1973($0_1, 72, $2_1);
     if ($2_1) {
      $1_1 = $1944(($1944($0_1 + 80 | 0, 0) + ($1_1 << 2) | 0) - 8 | 0, 0)
     } else {
      $1_1 = 0
     }
     $1973($0_1, 112, $1_1);
     $2_1 = $1944($0_1, 8);
     label$5 : {
      $5_1 = $1944($0_1, 0);
      $3 = $5_1 - 1 | 0;
      $4_1 = $2_1 + Math_imul($3, 40) | 0;
      $6_1 = $1944($4_1, 28);
      if (!$6_1) {
       break label$5
      }
      if (($1944($4_1, 16) | 0) == ($1_1 | 0)) {
       break label$5
      }
      $375($0_1);
      break __inlined_func$418;
     }
     label$6 : {
      if (($5_1 | 0) < 2 | $6_1) {
       break label$6
      }
      $4_1 = $4_1 - 40 | 0;
      if ($1645($0_1 + 96 | 0, $4_1, 24)) {
       break label$6
      }
      if ($1944($4_1, 32)) {
       break label$6
      }
      $1973($0_1, 0, $3);
      break __inlined_func$418;
     }
     $1973($2_1 + Math_imul($3, 40) | 0, 16, $1_1);
     break __inlined_func$418;
    }
    $383($0_1, 6, 4);
    $8 = $1944($0_1, 56);
    $9 = $1941($0_1, 40);
    $1970($8, 6, $9);
    $1970($8, 0, $9);
    $1970($8, 10, $9 + 3 | 0);
    $12_1 = $9 + 2 | 0;
    $1970($8, 8, $12_1);
    $1970($8, 4, $12_1);
    $1970($8, 2, $9 + 1 | 0);
    $1982($1944($0_1, 52), 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
    $1982($1944($0_1, 52), 8, $1959($5_1, 0), i64toi32_i32$HIGH_BITS);
    $1_1 = $1944($0_1, 52);
    $1973($1_1, 16, $10_1);
    $1982($1_1, 20, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
    $1982($1944($0_1, 52) + 28 | 0, 0, $1959($6_1, 0), i64toi32_i32$HIGH_BITS);
    $1_1 = $1944($0_1, 52);
    $1973($1_1 + 36 | 0, 0, $10_1);
    $1982($1_1, 40, $1959($3, 0), i64toi32_i32$HIGH_BITS);
    $1982($1944($0_1, 52) + 48 | 0, 0, $1959($7_1, 0), i64toi32_i32$HIGH_BITS);
    $1_1 = $1944($0_1, 52);
    $1973($1_1 + 56 | 0, 0, $10_1);
    $1982($1_1, 60, $1959($4_1, 0), i64toi32_i32$HIGH_BITS);
    $1982($1944($0_1, 52) + 68 | 0, 0, $1959($14, 0), i64toi32_i32$HIGH_BITS);
    $1_1 = $1944($0_1, 52);
    $1973($1_1 + 76 | 0, 0, $10_1);
    $1973($0_1, 52, $1_1 + 80 | 0);
    $1973($0_1, 40, $1944($0_1, 40) + 4 | 0);
    $1973($0_1, 56, $1944($0_1, 56) + 12 | 0);
   }
  }
  global$0 = $11_1 - -64 | 0;
 }
 
 function $908($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8, $9, $10_1, $11_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  $8 = $8 | 0;
  $9 = $9 | 0;
  $10_1 = $10_1 | 0;
  $11_1 = $11_1 | 0;
  var $12_1 = 0;
  $12_1 = global$0 - 48 | 0;
  global$0 = $12_1;
  $0_1 = $1944($0_1, 0);
  $1973($12_1, 40, $3);
  $1973($12_1, 44, $2_1);
  $1973($12_1, 36, $4_1);
  $1973($12_1, 32, $5_1);
  $1973($12_1, 28, $6_1);
  $1973($12_1, 24, $7_1);
  $1973($12_1, 20, $8);
  $1973($12_1, 16, $9);
  $1973($12_1, 12, $10_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $12_1 + 44 | 0, $12_1 + 40 | 0, $12_1 + 36 | 0, $12_1 + 32 | 0, $12_1 + 28 | 0, $12_1 + 24 | 0, $12_1 + 20 | 0, $12_1 + 16 | 0, $12_1 + 12 | 0, $11_1);
  fimport$4($1944($12_1, 12) | 0);
  fimport$4($1944($12_1, 16) | 0);
  fimport$4($1944($12_1, 20) | 0);
  fimport$4($1944($12_1, 24) | 0);
  fimport$4($1944($12_1, 28) | 0);
  fimport$4($1944($12_1, 32) | 0);
  fimport$4($1944($12_1, 36) | 0);
  fimport$4($1944($12_1, 40) | 0);
  fimport$4($1944($12_1, 44) | 0);
  global$0 = $12_1 + 48 | 0;
 }
 
 function $909($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = Math_fround($7_1);
  $8 = $8 | 0;
  var $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = 0, $13 = Math_fround(0), $14 = 0, $15_1 = Math_fround(0), $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = Math_fround(0), $19 = 0.0;
  $12_1 = global$0 - 32 | 0;
  global$0 = $12_1;
  $14 = $1944($1_1, 0);
  $1_1 = $12_1 + 24 | 0;
  $19 = +fimport$5($14 | 0, 72724, $1_1 | 0);
  fimport$6($1944($12_1, 24) | 0);
  $1982($12_1, 24, 0, 0);
  $1_1 = $763($2_1, $1_1);
  $1982($12_1, 16, 0, 0);
  $3 = $763($3, $12_1 + 16 | 0);
  $1982($12_1, 8, 0, 0);
  $2_1 = $763($4_1, $12_1 + 8 | 0);
  $1982($12_1, 0, 0, 0);
  $14 = Math_abs($19) < 2147483648.0 ? ~~$19 : -2147483648;
  $4_1 = $763($5_1, $12_1);
  __inlined_func$419 : {
   if ($6_1 >>> 0 < 16777216) {
    break __inlined_func$419
   }
   label$2 : {
    if (!($7_1 <= Math_fround(0.0))) {
     $5_1 = $8 & 496 ? $8 : $8 | 240;
     if (($5_1 & 496) != 256) {
      break label$2
     }
    }
    $417($0_1, $14, $1_1, $3, $2_1, $4_1, $6_1);
    break __inlined_func$419;
   }
   if (($1944($0_1 + 112 | 0, 0) | 0) != ($14 | 0)) {
    $381($0_1, $14);
    $8 = $1944($0_1, 24);
    $398($0_1, $1_1, $3, $7_1, $5_1);
    $389($0_1, $1944($0_1 + 92 | 0, 0), $1944($0_1, 84), $6_1);
    $1973($0_1, 84, 0);
    $5_1 = $1944($0_1, 24);
    if (($8 | 0) < ($5_1 | 0)) {
     $7_1 = $1963($4_1, 4);
     $10_1 = $1963($2_1, 4);
     $9 = Math_fround($1963($3, 4) - $1963($1_1, 4));
     $16_1 = $9 != Math_fround(0.0) ? Math_fround(Math_fround($7_1 - $10_1) / $9) : Math_fround(0.0);
     $9 = $1963($4_1, 0);
     $11_1 = $1963($2_1, 0);
     $13 = Math_fround($1963($3, 0) - $1963($1_1, 0));
     $17_1 = $13 != Math_fround(0.0) ? Math_fround(Math_fround($9 - $11_1) / $13) : Math_fround(0.0);
     $3 = $1944($0_1 + 32 | 0, 0);
     $4_1 = $3 + Math_imul($5_1, 20) | 0;
     $13 = $7_1 <= $10_1 ? $10_1 : $7_1;
     $15_1 = $9 <= $11_1 ? $11_1 : $9;
     $7_1 = $7_1 > $10_1 ? $10_1 : $7_1;
     $10_1 = $9 > $11_1 ? $11_1 : $9;
     $3 = $3 + Math_imul($8, 20) | 0;
     while (1) {
      $11_1 = $1963($2_1, 0);
      $18_1 = $1963($1_1, 0);
      $9 = Math_fround($1963($2_1, 4) + Math_fround($16_1 * Math_fround($1963($3, 4) - $1963($1_1, 4))));
      $1986($3 + 12 | 0, 0, $7_1 > $9 ? $7_1 : $9 > $13 ? $13 : $9);
      $9 = Math_fround($11_1 + Math_fround($17_1 * Math_fround($1963($3, 0) - $18_1)));
      $1986($3, 8, $9 < $10_1 ? $10_1 : $9 > $15_1 ? $15_1 : $9);
      $3 = $3 + 20 | 0;
      if ($4_1 >>> 0 > $3 >>> 0) {
       continue
      }
      break;
     };
    }
    $1_1 = $1944($0_1, 72);
    $2_1 = $1_1 - 1 | 0;
    $1973($0_1, 72, $2_1);
    $3 = 0;
    if ($2_1) {
     $3 = $1944(($1944($0_1 + 80 | 0, 0) + ($1_1 << 2) | 0) - 8 | 0, 0)
    }
    $1973($0_1, 112, $3);
    $1_1 = $1944($0_1, 8);
    label$8 : {
     $5_1 = $1944($0_1, 0);
     $2_1 = $5_1 - 1 | 0;
     $4_1 = $1_1 + Math_imul($2_1, 40) | 0;
     $6_1 = $1944($4_1, 28);
     if (!$6_1) {
      break label$8
     }
     if (($1944($4_1, 16) | 0) == ($3 | 0)) {
      break label$8
     }
     $375($0_1);
     break __inlined_func$419;
    }
    label$9 : {
     if (($5_1 | 0) < 2 | $6_1) {
      break label$9
     }
     $4_1 = $4_1 - 40 | 0;
     if ($1645($0_1 + 96 | 0, $4_1, 24)) {
      break label$9
     }
     if ($1944($4_1, 32)) {
      break label$9
     }
     $1973($0_1, 0, $2_1);
     break __inlined_func$419;
    }
    $1973($1_1 + Math_imul($2_1, 40) | 0, 16, $3);
    break __inlined_func$419;
   }
   $8 = $1944($0_1, 24);
   $398($0_1, $1_1, $3, $7_1, $5_1);
   $389($0_1, $1944($0_1 + 92 | 0, 0), $1944($0_1, 84), $6_1);
   $1973($0_1, 84, 0);
   $5_1 = $1944($0_1, 24);
   if (($5_1 | 0) <= ($8 | 0)) {
    break __inlined_func$419
   }
   $7_1 = $1963($4_1, 4);
   $10_1 = $1963($2_1, 4);
   $9 = Math_fround($1963($3, 4) - $1963($1_1, 4));
   $16_1 = $9 != Math_fround(0.0) ? Math_fround(Math_fround($7_1 - $10_1) / $9) : Math_fround(0.0);
   $9 = $1963($4_1, 0);
   $11_1 = $1963($2_1, 0);
   $13 = Math_fround($1963($3, 0) - $1963($1_1, 0));
   $17_1 = $13 != Math_fround(0.0) ? Math_fround(Math_fround($9 - $11_1) / $13) : Math_fround(0.0);
   $0_1 = $1944($0_1 + 32 | 0, 0);
   $4_1 = $0_1 + Math_imul($5_1, 20) | 0;
   $13 = $7_1 <= $10_1 ? $10_1 : $7_1;
   $15_1 = $9 <= $11_1 ? $11_1 : $9;
   $7_1 = $7_1 > $10_1 ? $10_1 : $7_1;
   $10_1 = $9 > $11_1 ? $11_1 : $9;
   $3 = $0_1 + Math_imul($8, 20) | 0;
   while (1) {
    $11_1 = $1963($2_1, 0);
    $18_1 = $1963($1_1, 0);
    $9 = Math_fround($1963($2_1, 4) + Math_fround($16_1 * Math_fround($1963($3, 4) - $1963($1_1, 4))));
    $1986($3 + 12 | 0, 0, $7_1 > $9 ? $7_1 : $9 > $13 ? $13 : $9);
    $9 = Math_fround($11_1 + Math_fround($17_1 * Math_fround($1963($3, 0) - $18_1)));
    $1986($3, 8, $9 < $10_1 ? $10_1 : $9 > $15_1 ? $15_1 : $9);
    $3 = $3 + 20 | 0;
    if ($4_1 >>> 0 > $3 >>> 0) {
     continue
    }
    break;
   };
  }
  global$0 = $12_1 + 32 | 0;
 }
 
 function $910($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8, $9) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  $8 = Math_fround($8);
  $9 = $9 | 0;
  var $10_1 = 0;
  $10_1 = global$0 - 32 | 0;
  global$0 = $10_1;
  $0_1 = $1944($0_1, 0);
  $1973($10_1, 24, $3);
  $1973($10_1, 28, $2_1);
  $1973($10_1, 20, $4_1);
  $1973($10_1, 16, $5_1);
  $1973($10_1, 12, $6_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $10_1 + 28 | 0, $10_1 + 24 | 0, $10_1 + 20 | 0, $10_1 + 16 | 0, $10_1 + 12 | 0, $7_1, $8, $9);
  fimport$4($1944($10_1, 12) | 0);
  fimport$4($1944($10_1, 16) | 0);
  fimport$4($1944($10_1, 20) | 0);
  fimport$4($1944($10_1, 24) | 0);
  fimport$4($1944($10_1, 28) | 0);
  global$0 = $10_1 + 32 | 0;
 }
 
 function $911($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = Math_fround($5_1);
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $7_1 = $2_1 << 3;
  $8 = $6_1 - ($7_1 + 15 & -16) | 0;
  global$0 = $8;
  if ($2_1) {
   $1604($8, 0, $7_1)
  }
  if (($2_1 | 0) > 0) {
   $7_1 = 0;
   while (1) {
    $9 = $1944($1_1, 0);
    $1973($6_1, 8, $7_1);
    $10_1 = $9;
    $9 = $6_1 + 8 | 0;
    $11_1 = fimport$1(72724, $9 | 0) | 0;
    $10_1 = fimport$7($10_1 | 0, $11_1 | 0) | 0;
    $1973($6_1, 4, $10_1);
    fimport$4($11_1 | 0);
    $1983($6_1, 8, 0, 0);
    $1983(($7_1 << 3) + $8 | 0, 0, $1960($763($6_1 + 4 | 0, $9), 0), i64toi32_i32$HIGH_BITS);
    fimport$4($10_1 | 0);
    $7_1 = $7_1 + 1 | 0;
    if (($7_1 | 0) != ($2_1 | 0)) {
     continue
    }
    break;
   };
  }
  $388($0_1, $8, $2_1, $3, $4_1, $5_1);
  global$0 = $6_1 + 16 | 0;
 }
 
 function $912($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = Math_fround($6_1);
  var $7_1 = 0;
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $0_1 = $1944($0_1, 0);
  $1973($7_1, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $7_1 + 12 | 0, $3, $4_1, $5_1, $6_1);
  fimport$4($1944($7_1, 12) | 0);
  global$0 = $7_1 + 16 | 0;
 }
 
 function $913($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $5_1 = $2_1 << 3;
  $6_1 = $4_1 - ($5_1 + 15 & -16) | 0;
  global$0 = $6_1;
  if ($2_1) {
   $1604($6_1, 0, $5_1)
  }
  if (($2_1 | 0) > 0) {
   $5_1 = 0;
   while (1) {
    $7_1 = $1944($1_1, 0);
    $1973($4_1, 8, $5_1);
    $8 = $7_1;
    $7_1 = $4_1 + 8 | 0;
    $9 = fimport$1(72724, $7_1 | 0) | 0;
    $8 = fimport$7($8 | 0, $9 | 0) | 0;
    $1973($4_1, 4, $8);
    fimport$4($9 | 0);
    $1983($4_1, 8, 0, 0);
    $1983(($5_1 << 3) + $6_1 | 0, 0, $1960($763($4_1 + 4 | 0, $7_1), 0), i64toi32_i32$HIGH_BITS);
    fimport$4($8 | 0);
    $5_1 = $5_1 + 1 | 0;
    if (($5_1 | 0) != ($2_1 | 0)) {
     continue
    }
    break;
   };
  }
  $389($0_1, $6_1, $2_1, $3);
  global$0 = $4_1 + 16 | 0;
 }
 
 function $914($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  var $5_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $0_1 = $1944($0_1, 0);
  $1973($5_1, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $5_1 + 12 | 0, $3, $4_1);
  fimport$4($1944($5_1, 12) | 0);
  global$0 = $5_1 + 16 | 0;
 }
 
 function $915($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = Math_fround($6_1);
  $7_1 = $7_1 | 0;
  var $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0;
  $8 = global$0 - 32 | 0;
  global$0 = $8;
  $1982($8, 24, 0, 0);
  $1_1 = $763($1_1, $8 + 24 | 0);
  $1982($8, 16, 0, 0);
  $2_1 = $763($2_1, $8 + 16 | 0);
  $1982($8, 8, 0, 0);
  $3 = $763($3, $8 + 8 | 0);
  $1982($8, 0, 0, 0);
  $11_1 = $763($4_1, $8);
  if ($5_1 >>> 0 >= 16777216) {
   $9 = $1944($0_1, 84);
   $4_1 = $1944($0_1 + 88 | 0, 0);
   label$2 : {
    if (($9 | 0) != ($4_1 | 0)) {
     break label$2
    }
    $10_1 = $4_1 ? $4_1 + (($4_1 | 0) / 2 | 0) | 0 : 8;
    $9 = $9 + 1 | 0;
    $9 = ($9 | 0) < ($10_1 | 0) ? $10_1 : $9;
    if (($4_1 | 0) >= ($9 | 0)) {
     break label$2
    }
    $4_1 = $16($9 << 3);
    $10_1 = $1944($0_1 + 92 | 0, 0);
    if ($10_1) {
     $1602($4_1, $10_1, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $9);
    $1973($0_1, 92, $4_1);
   }
   $4_1 = $0_1 + 92 | 0;
   $1982($1944($4_1, 0) + ($1944($0_1, 84) << 3) | 0, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
   $1973($0_1, 84, $1944($0_1, 84) + 1 | 0);
   $394($0_1, $2_1, $3, $11_1, $7_1);
   $388($0_1, $1944($4_1, 0), $1944($0_1, 84), $5_1, 0, $6_1);
   $1973($0_1, 84, 0);
  }
  global$0 = $8 + 32 | 0;
 }
 
 function $916($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = Math_fround($7_1);
  $8 = $8 | 0;
  var $9 = 0;
  $9 = global$0 - 16 | 0;
  global$0 = $9;
  $0_1 = $1944($0_1, 0);
  $1973($9, 8, $3);
  $1973($9, 12, $2_1);
  $1973($9, 4, $4_1);
  $1973($9, 0, $5_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $9 + 12 | 0, $9 + 8 | 0, $9 + 4 | 0, $9, $6_1, $7_1, $8);
  fimport$4($1944($9, 0) | 0);
  fimport$4($1944($9, 4) | 0);
  fimport$4($1944($9, 8) | 0);
  fimport$4($1944($9, 12) | 0);
  global$0 = $9 + 16 | 0;
 }
 
 function $917($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = Math_fround($5_1);
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0;
  $8 = global$0 - 32 | 0;
  global$0 = $8;
  $1982($8, 24, 0, 0);
  $1_1 = $763($1_1, $8 + 24 | 0);
  $1982($8, 16, 0, 0);
  $2_1 = $763($2_1, $8 + 16 | 0);
  $1982($8, 8, 0, 0);
  $10_1 = $763($3, $8 + 8 | 0);
  if ($4_1 >>> 0 >= 16777216) {
   $7_1 = $1944($0_1, 84);
   $3 = $1944($0_1 + 88 | 0, 0);
   label$2 : {
    if (($7_1 | 0) != ($3 | 0)) {
     break label$2
    }
    $9 = $3 ? $3 + (($3 | 0) / 2 | 0) | 0 : 8;
    $7_1 = $7_1 + 1 | 0;
    $7_1 = ($7_1 | 0) < ($9 | 0) ? $9 : $7_1;
    if (($3 | 0) >= ($7_1 | 0)) {
     break label$2
    }
    $3 = $16($7_1 << 3);
    $9 = $1944($0_1 + 92 | 0, 0);
    if ($9) {
     $1602($3, $9, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $7_1);
    $1973($0_1, 92, $3);
   }
   $3 = $0_1 + 92 | 0;
   $1982($1944($3, 0) + ($1944($0_1, 84) << 3) | 0, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
   $1973($0_1, 84, $1944($0_1, 84) + 1 | 0);
   $396($0_1, $2_1, $10_1, $6_1);
   $388($0_1, $1944($3, 0), $1944($0_1, 84), $4_1, 0, $5_1);
   $1973($0_1, 84, 0);
  }
  global$0 = $8 + 32 | 0;
 }
 
 function $918($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = Math_fround($6_1);
  $7_1 = $7_1 | 0;
  var $8 = 0;
  $8 = global$0 - 16 | 0;
  global$0 = $8;
  $0_1 = $1944($0_1, 0);
  $1973($8, 8, $3);
  $1973($8, 12, $2_1);
  $1973($8, 4, $4_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $8 + 12 | 0, $8 + 8 | 0, $8 + 4 | 0, $5_1, $6_1, $7_1);
  fimport$4($1944($8, 4) | 0);
  fimport$4($1944($8, 8) | 0);
  fimport$4($1944($8, 12) | 0);
  global$0 = $8 + 16 | 0;
 }
 
 function $919($0_1) {
  $0_1 = $0_1 | 0;
  $1973($0_1, 84, 0);
 }
 
 function $920($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1983($4_1, 8, 0, 0);
  $5_1 = $763($1_1, $4_1 + 8 | 0);
  $2_1 = $1944($0_1, 84);
  $1_1 = $1944($0_1 + 88 | 0, 0);
  label$1 : {
   if (($2_1 | 0) != ($1_1 | 0)) {
    break label$1
   }
   $3 = $2_1 + 1 | 0;
   $6_1 = $1_1;
   if ($1_1) {
    $2_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0
   } else {
    $2_1 = 8
   }
   $1_1 = ($2_1 | 0) > ($3 | 0) ? $2_1 : $3;
   if (($6_1 | 0) >= ($1_1 | 0)) {
    break label$1
   }
   $2_1 = $16($1_1 << 3);
   $3 = $1944($0_1 + 92 | 0, 0);
   if ($3) {
    $1602($2_1, $3, $1944($0_1, 84) << 3);
    $17($1944($0_1, 92));
   }
   $1973($0_1, 88, $1_1);
   $1973($0_1, 92, $2_1);
  }
  $1982($1944($0_1 + 92 | 0, 0) + ($1944($0_1, 84) << 3) | 0, 0, $1960($5_1, 0), i64toi32_i32$HIGH_BITS);
  $1973($0_1, 84, $1944($0_1, 84) + 1 | 0);
  global$0 = $4_1 + 16 | 0;
 }
 
 function $921($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1983($4_1, 8, 0, 0);
  $5_1 = $763($1_1, $4_1 + 8 | 0);
  $2_1 = $1944($0_1, 84);
  label$1 : {
   if ($2_1) {
    $1_1 = $1957(($1944($0_1 + 92 | 0, 0) + ($2_1 << 3) | 0) - 8 | 0);
    $3 = i64toi32_i32$HIGH_BITS;
    if (($1957($5_1) | 0) == ($1_1 | 0) & (i64toi32_i32$HIGH_BITS | 0) == ($3 | 0)) {
     break label$1
    }
   }
   $1_1 = $1944($0_1 + 88 | 0, 0);
   label$3 : {
    if (($1_1 | 0) != ($2_1 | 0)) {
     break label$3
    }
    $3 = $2_1 + 1 | 0;
    $6_1 = $1_1;
    if ($1_1) {
     $2_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0
    } else {
     $2_1 = 8
    }
    $1_1 = ($2_1 | 0) > ($3 | 0) ? $2_1 : $3;
    if (($6_1 | 0) >= ($1_1 | 0)) {
     break label$3
    }
    $2_1 = $16($1_1 << 3);
    $3 = $1944($0_1 + 92 | 0, 0);
    if ($3) {
     $1602($2_1, $3, $1944($0_1, 84) << 3);
     $17($1944($0_1, 92));
    }
    $1973($0_1, 88, $1_1);
    $1973($0_1, 92, $2_1);
   }
   $1982($1944($0_1 + 92 | 0, 0) + ($1944($0_1, 84) << 3) | 0, 0, $1960($5_1, 0), i64toi32_i32$HIGH_BITS);
   $1973($0_1, 84, $1944($0_1, 84) + 1 | 0);
  }
  global$0 = $4_1 + 16 | 0;
 }
 
 function $922($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $389($0_1, $1944($0_1 + 92 | 0, 0), $1944($0_1, 84), $1_1);
  $1973($0_1, 84, 0);
 }
 
 function $923($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  FUNCTION_TABLE[$1944($0_1, 0) | 0]($1_1, $2_1);
 }
 
 function $924($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = Math_fround($3);
  $388($0_1, $1944($0_1 + 92 | 0, 0), $1944($0_1, 84), $1_1, $2_1, $3);
  $1973($0_1, 84, 0);
 }
 
 function $925($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = Math_fround($4_1);
  FUNCTION_TABLE[$1944($0_1, 0) | 0]($1_1, $2_1, $3, $4_1);
 }
 
 function $926($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $3 = Math_fround($3);
  $4_1 = Math_fround($4_1);
  $5_1 = $5_1 | 0;
  var $6_1 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $1982($6_1, 8, 0, 0);
  $393($0_1, $763($1_1, $6_1 + 8 | 0), $2_1, $3, $4_1, $5_1);
  global$0 = $6_1 + 16 | 0;
 }
 
 function $927($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = Math_fround($3);
  $4_1 = Math_fround($4_1);
  $5_1 = Math_fround($5_1);
  $6_1 = $6_1 | 0;
  var $7_1 = 0;
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $0_1 = $1944($0_1, 0);
  $1973($7_1, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $7_1 + 12 | 0, $3, $4_1, $5_1, $6_1);
  fimport$4($1944($7_1, 12) | 0);
  global$0 = $7_1 + 16 | 0;
 }
 
 function $928($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  var $5_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $1982($5_1, 8, 0, 0);
  $392($0_1, $763($1_1, $5_1 + 8 | 0), $2_1, $3, $4_1);
  global$0 = $5_1 + 16 | 0;
 }
 
 function $930($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  var $5_1 = 0;
  $5_1 = global$0 - 32 | 0;
  global$0 = $5_1;
  $1982($5_1, 24, 0, 0);
  $1_1 = $763($1_1, $5_1 + 24 | 0);
  $1982($5_1, 16, 0, 0);
  $2_1 = $763($2_1, $5_1 + 16 | 0);
  $1982($5_1, 8, 0, 0);
  $394($0_1, $1_1, $2_1, $763($3, $5_1 + 8 | 0), $4_1);
  global$0 = $5_1 + 32 | 0;
 }
 
 function $932($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1982($4_1, 8, 0, 0);
  $1_1 = $763($1_1, $4_1 + 8 | 0);
  $1982($4_1, 0, 0, 0);
  $396($0_1, $1_1, $763($2_1, $4_1), $3);
  global$0 = $4_1 + 16 | 0;
 }
 
 function $934($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = Math_fround($3);
  $4_1 = $4_1 | 0;
  var $5_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $1982($5_1, 8, 0, 0);
  $1_1 = $763($1_1, $5_1 + 8 | 0);
  $1982($5_1, 0, 0, 0);
  $398($0_1, $1_1, $763($2_1, $5_1), $3, $4_1);
  global$0 = $5_1 + 16 | 0;
 }
 
 function $935($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = Math_fround($4_1);
  $5_1 = $5_1 | 0;
  var $6_1 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $0_1 = $1944($0_1, 0);
  $1973($6_1, 8, $3);
  $1973($6_1, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $6_1 + 12 | 0, $6_1 + 8 | 0, $4_1, $5_1);
  fimport$4($1944($6_1, 8) | 0);
  fimport$4($1944($6_1, 12) | 0);
  global$0 = $6_1 + 16 | 0;
 }
 
 function $936($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $420($0_1 + 120 | 0, $0_1, $1_1);
 }
 
 function $937($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = $1944($0_1, 4);
  $1_1 = ($3 >> 1) + $1_1 | 0;
  $0_1 = $1944($0_1, 0);
  label$1 : {
   if (!($3 & 1)) {
    break label$1
   }
   $0_1 = $1944($1944($1_1, 0) + $0_1 | 0, 0);
  }
  FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1);
 }
 
 function $938($0_1) {
  $0_1 = $0_1 | 0;
  $421($0_1 + 120 | 0, $0_1);
 }
 
 function $939($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $422($0_1 + 120 | 0, $0_1, $1_1);
 }
 
 function $940($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
 }
 
 function $941($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $0_1 = $1944($0_1, 0);
  $1973($4_1, 8, $3);
  $1973($4_1, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $4_1 + 12 | 0, $4_1 + 8 | 0);
  fimport$4($1944($4_1, 8) | 0);
  fimport$4($1944($4_1, 12) | 0);
  global$0 = $4_1 + 16 | 0;
 }
 
 function $943($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1982($4_1, 8, 0, 0);
  $1_1 = $763($1_1, $4_1 + 8 | 0);
  $1982($4_1, 0, 0, 0);
  $8 = $763($2_1, $4_1);
  $10_1 = $1944($8, 4);
  $11_1 = $1944($1_1, 0);
  $12_1 = $1944($1_1, 4);
  $13 = $1944($8, 0);
  $6_1 = $1959($1944($0_1, 44), 0);
  $7_1 = i64toi32_i32$HIGH_BITS;
  $2_1 = $1944($0_1, 56);
  $5_1 = $1941($0_1, 40);
  $1970($2_1, 10, $5_1 + 3 | 0);
  $9 = $5_1 + 2 | 0;
  $1970($2_1, 8, $9);
  $1970($2_1, 6, $5_1);
  $1970($2_1, 4, $9);
  $1970($2_1, 2, $5_1 + 1 | 0);
  $1970($2_1, 0, $5_1);
  $1982($1944($0_1, 52), 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($1944($0_1, 52), 8, $6_1, $7_1);
  $1_1 = $1944($0_1, 52);
  $1973($1_1, 20, $13);
  $1973($1_1, 16, $3);
  $1973($1_1 + 24 | 0, 0, $12_1);
  $1982($1944($0_1, 52) + 28 | 0, 0, $6_1, $7_1);
  $1_1 = $1944($0_1, 52);
  $1973($1_1 + 36 | 0, 0, $3);
  $1982($1_1, 40, $1959($8, 0), i64toi32_i32$HIGH_BITS);
  $1982($1944($0_1, 52) + 48 | 0, 0, $6_1, $7_1);
  $1_1 = $1944($0_1, 52);
  $1973($1_1, 60, $11_1);
  $1973($1_1 - -64 | 0, 0, $10_1);
  $1973($1_1 + 56 | 0, 0, $3);
  $1982($1944($0_1, 52) + 68 | 0, 0, $6_1, $7_1);
  $1_1 = $1944($0_1, 52);
  $1973($1_1 + 76 | 0, 0, $3);
  $1973($0_1, 52, $1_1 + 80 | 0);
  $1973($0_1, 40, $1944($0_1, 40) + 4 | 0);
  $1973($0_1, 56, $1944($0_1, 56) + 12 | 0);
  global$0 = $4_1 + 16 | 0;
 }
 
 function $945($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0;
  $6_1 = global$0 - 32 | 0;
  global$0 = $6_1;
  $1982($6_1, 24, 0, 0);
  $9 = $763($1_1, $6_1 + 24 | 0);
  $1982($6_1, 16, 0, 0);
  $2_1 = $763($2_1, $6_1 + 16 | 0);
  $1982($6_1, 8, 0, 0);
  $1_1 = $763($3, $6_1 + 8 | 0);
  $1982($6_1, 0, 0, 0);
  $10_1 = $763($4_1, $6_1);
  $11_1 = $1944($1_1, 0);
  $12_1 = $1944($10_1, 4);
  $13 = $1944($2_1, 4);
  $14 = $1944($9, 0);
  $15_1 = $1944($10_1, 0);
  $16_1 = $1944($1_1, 4);
  $17_1 = $1944($9, 4);
  $4_1 = $1944($2_1, 0);
  $7_1 = $1944($0_1, 56);
  $8 = $1941($0_1, 40);
  $1970($7_1, 6, $8);
  $1970($7_1, 0, $8);
  $1970($7_1, 10, $8 + 3 | 0);
  $3 = $8 + 2 | 0;
  $1970($7_1, 8, $3);
  $1970($7_1, 4, $3);
  $1970($7_1, 2, $8 + 1 | 0);
  $1982($1944($0_1, 52), 0, $1959($9, 0), i64toi32_i32$HIGH_BITS);
  $1982($1944($0_1, 52), 8, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
  $1_1 = $1944($0_1, 52);
  $1973($1_1, 20, $4_1);
  $1973($1_1, 16, $5_1);
  $1973($1_1 + 24 | 0, 0, $17_1);
  $1_1 = $1944($0_1, 52);
  $1973($1_1 + 32 | 0, 0, $16_1);
  $1973($1_1 + 28 | 0, 0, $15_1);
  $1_1 = $1944($0_1, 52);
  $1973($1_1 + 36 | 0, 0, $5_1);
  $1982($1_1, 40, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($1944($0_1, 52) + 48 | 0, 0, $1959($10_1, 0), i64toi32_i32$HIGH_BITS);
  $1_1 = $1944($0_1, 52);
  $1973($1_1, 60, $14);
  $1973($1_1 - -64 | 0, 0, $13);
  $1973($1_1 + 56 | 0, 0, $5_1);
  $1_1 = $1944($0_1, 52);
  $1973($1_1 + 72 | 0, 0, $12_1);
  $1973($1_1 + 68 | 0, 0, $11_1);
  $1_1 = $1944($0_1, 52);
  $1973($1_1 + 76 | 0, 0, $5_1);
  $1973($0_1, 52, $1_1 + 80 | 0);
  $1973($0_1, 40, $1944($0_1, 40) + 4 | 0);
  $1973($0_1, 56, $1944($0_1, 56) + 12 | 0);
  global$0 = $6_1 + 32 | 0;
 }
 
 function $946($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8, $9) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  $8 = $8 | 0;
  $9 = $9 | 0;
  var $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0;
  $10_1 = global$0 + -64 | 0;
  global$0 = $10_1;
  $1982($10_1, 56, 0, 0);
  $12_1 = $763($1_1, $10_1 + 56 | 0);
  $1982($10_1, 48, 0, 0);
  $13 = $763($2_1, $10_1 + 48 | 0);
  $1982($10_1, 40, 0, 0);
  $3 = $763($3, $10_1 + 40 | 0);
  $1982($10_1, 32, 0, 0);
  $4_1 = $763($4_1, $10_1 + 32 | 0);
  $1982($10_1, 24, 0, 0);
  $5_1 = $763($5_1, $10_1 + 24 | 0);
  $1982($10_1, 16, 0, 0);
  $6_1 = $763($6_1, $10_1 + 16 | 0);
  $1982($10_1, 8, 0, 0);
  $7_1 = $763($7_1, $10_1 + 8 | 0);
  $1982($10_1, 0, 0, 0);
  $8 = $763($8, $10_1);
  $1_1 = $1944($0_1, 56);
  $2_1 = $1941($0_1, 40);
  $1970($1_1, 6, $2_1);
  $1970($1_1, 0, $2_1);
  $1970($1_1, 10, $2_1 + 3 | 0);
  $11_1 = $2_1 + 2 | 0;
  $1970($1_1, 8, $11_1);
  $1970($1_1, 4, $11_1);
  $1970($1_1, 2, $2_1 + 1 | 0);
  $1982($1944($0_1, 52), 0, $1959($12_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($1944($0_1, 52), 8, $1959($5_1, 0), i64toi32_i32$HIGH_BITS);
  $1_1 = $1944($0_1, 52);
  $1973($1_1, 16, $9);
  $1982($1_1, 20, $1959($13, 0), i64toi32_i32$HIGH_BITS);
  $1982($1944($0_1, 52) + 28 | 0, 0, $1959($6_1, 0), i64toi32_i32$HIGH_BITS);
  $1_1 = $1944($0_1, 52);
  $1973($1_1 + 36 | 0, 0, $9);
  $1982($1_1, 40, $1959($3, 0), i64toi32_i32$HIGH_BITS);
  $1982($1944($0_1, 52) + 48 | 0, 0, $1959($7_1, 0), i64toi32_i32$HIGH_BITS);
  $1_1 = $1944($0_1, 52);
  $1973($1_1 + 56 | 0, 0, $9);
  $1982($1_1, 60, $1959($4_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($1944($0_1, 52) + 68 | 0, 0, $1959($8, 0), i64toi32_i32$HIGH_BITS);
  $1_1 = $1944($0_1, 52);
  $1973($1_1 + 76 | 0, 0, $9);
  $1973($0_1, 52, $1_1 + 80 | 0);
  $1973($0_1, 40, $1944($0_1, 40) + 4 | 0);
  $1973($0_1, 56, $1944($0_1, 56) + 12 | 0);
  global$0 = $10_1 - -64 | 0;
 }
 
 function $947($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8, $9, $10_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  $8 = $8 | 0;
  $9 = $9 | 0;
  $10_1 = $10_1 | 0;
  var $11_1 = 0;
  $11_1 = global$0 - 32 | 0;
  global$0 = $11_1;
  $0_1 = $1944($0_1, 0);
  $1973($11_1, 24, $3);
  $1973($11_1, 28, $2_1);
  $1973($11_1, 20, $4_1);
  $1973($11_1, 16, $5_1);
  $1973($11_1, 12, $6_1);
  $1973($11_1, 8, $7_1);
  $1973($11_1, 4, $8);
  $1973($11_1, 0, $9);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $11_1 + 28 | 0, $11_1 + 24 | 0, $11_1 + 20 | 0, $11_1 + 16 | 0, $11_1 + 12 | 0, $11_1 + 8 | 0, $11_1 + 4 | 0, $11_1, $10_1);
  fimport$4($1944($11_1, 0) | 0);
  fimport$4($1944($11_1, 4) | 0);
  fimport$4($1944($11_1, 8) | 0);
  fimport$4($1944($11_1, 12) | 0);
  fimport$4($1944($11_1, 16) | 0);
  fimport$4($1944($11_1, 20) | 0);
  fimport$4($1944($11_1, 24) | 0);
  fimport$4($1944($11_1, 28) | 0);
  global$0 = $11_1 + 32 | 0;
 }
 
 function $948($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1983($4_1, 8, 0, 0);
  $1_1 = $763($1_1, $4_1 + 8 | 0);
  $1983($4_1, 0, 0, 0);
  $2_1 = $763($2_1, $4_1);
  $1982($1944($0_1, 52), 0, $1960($1_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($1944($0_1, 52), 8, $1960($2_1, 0), i64toi32_i32$HIGH_BITS);
  $1_1 = $1944($0_1, 52);
  $1973($1_1, 16, $3);
  $1973($0_1, 52, $1_1 + 20 | 0);
  $1973($0_1, 40, $1944($0_1, 40) + 1 | 0);
  global$0 = $4_1 + 16 | 0;
 }
 
 function $949($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = $1944($0_1, 56);
  $1970($2_1, 0, $1_1);
  $1973($0_1, 56, $2_1 + 2 | 0);
 }
 
 function $951($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1983($4_1, 8, 0, 0);
  $1_1 = $763($1_1, $4_1 + 8 | 0);
  $1983($4_1, 0, 0, 0);
  $2_1 = $763($2_1, $4_1);
  $5_1 = $1944($0_1, 56);
  $1970($5_1, 0, $1944($0_1, 40));
  $1973($0_1, 56, $5_1 + 2 | 0);
  $1982($1944($0_1, 52), 0, $1960($1_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($1944($0_1, 52), 8, $1960($2_1, 0), i64toi32_i32$HIGH_BITS);
  $1_1 = $1944($0_1, 52);
  $1973($1_1, 16, $3);
  $1973($0_1, 52, $1_1 + 20 | 0);
  $1973($0_1, 40, $1944($0_1, 40) + 1 | 0);
  global$0 = $4_1 + 16 | 0;
 }
 
 function $952($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  var $3 = 0;
  $3 = $1944($0_1, 4);
  $1_1 = ($3 >> 1) + $1_1 | 0;
  $0_1 = $1944($0_1, 0);
  label$1 : {
   if (!($3 & 1)) {
    break label$1
   }
   $0_1 = $1944($1944($1_1, 0) + $0_1 | 0, 0);
  }
  return FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1) | 0;
 }
 
 function $953($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = $1944($0_1, 20);
  $1983($1_1 + 8 | 0, 0, 0, 0);
  $1983($1_1, 0, 0, 0);
  $2_1 = $768($2_1, $1_1);
  $1982($0_1, 4, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
  $1982($0_1 + 12 | 0, 0, $1959($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $956() {
  var $0_1 = 0, $1_1 = 0;
  fimport$11(51304, 51328, 51360, 0, 48504, 207, 48612, 0, 48612, 0, 13646, 48614, 208);
  $0_1 = $1783(4);
  $1973($0_1, 0, 209);
  fimport$13(51304, 4142, 3, 51376, 49004, 210, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 0);
  $1_1 = $1783(4);
  $1973($1_1, 0, 0);
  fimport$12(51304, 11913, 72652, 49e3, 211, $0_1 | 0, 72652, 49004, 212, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 4);
  $1_1 = $1783(4);
  $1973($1_1, 0, 4);
  fimport$12(51304, 2818, 72724, 49e3, 213, $0_1 | 0, 72724, 49004, 214, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 8);
  $1_1 = $1783(4);
  $1973($1_1, 0, 8);
  fimport$12(51304, 2776, 72724, 49e3, 213, $0_1 | 0, 72724, 49004, 214, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 12);
  $1_1 = $1783(4);
  $1973($1_1, 0, 12);
  fimport$12(51304, 2762, 72724, 49e3, 213, $0_1 | 0, 72724, 49004, 214, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 215);
  fimport$12(51304, 4382, 48496, 49e3, 216, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 217);
  fimport$12(51304, 10047, 48496, 49e3, 216, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 218);
  fimport$12(51304, 11492, 48496, 49e3, 216, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 219);
  fimport$13(51304, 4325, 2, 51388, 49408, 220, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 221);
  fimport$13(51304, 4222, 3, 51396, 49004, 222, $0_1 | 0, 0, 0);
 }
 
 function $957($0_1) {
  $0_1 = $0_1 | 0;
  return 51304;
 }
 
 function $959($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  if (($1944($0_1, 4) | 0) > 0) {
   while (1) {
    $1973($2_1, 8, $1944($1944($0_1, 16) + ($3 << 2) | 0, 0));
    $5_1 = $2_1 + 8 | 0;
    $4_1 = fimport$1(49828, $5_1 | 0) | 0;
    fimport$10($4_1 | 0);
    $1973($2_1, 8, $4_1);
    fimport$4(fimport$16($1944($1_1, 0) | 0, 1, 48472, $5_1 | 0) | 0);
    fimport$4($4_1 | 0);
    $3 = $3 + 1 | 0;
    if (($1944($0_1, 4) | 0) > ($3 | 0)) {
     continue
    }
    break;
   }
  }
  global$0 = $2_1 + 16 | 0;
 }
 
 function $967($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 28 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $968($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 36 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $970($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1982($3, 8, 0, 0);
  $5_1 = $763($1_1, $3 + 8 | 0);
  $1_1 = 0;
  if (($1944($0_1, 4) | 0) > 0) {
   while (1) {
    $8 = $1_1;
    $4_1 = $1944($1944($0_1, 16) + ($1_1 << 2) | 0, 0);
    if (($1944($4_1, 0) | 0) > 0) {
     $1_1 = 0;
     while (1) {
      $6_1 = $1963($5_1, 0);
      $2_1 = $1944($4_1, 8) + Math_imul($1_1, 40) | 0;
      $7_1 = $1963($5_1, 4);
      $1986($2_1, 12, Math_fround($7_1 * $1963($2_1, 12)));
      $1986($2_1, 8, Math_fround($6_1 * $1963($2_1, 8)));
      $1986($2_1, 4, Math_fround($7_1 * $1963($2_1, 4)));
      $1986($2_1, 0, Math_fround($6_1 * $1963($2_1, 0)));
      $1_1 = $1_1 + 1 | 0;
      if (($1944($4_1, 0) | 0) > ($1_1 | 0)) {
       continue
      }
      break;
     };
    }
    $1_1 = $8 + 1 | 0;
    if (($1944($0_1, 4) | 0) > ($1_1 | 0)) {
     continue
    }
    break;
   }
  }
  global$0 = $3 + 16 | 0;
 }
 
 function $972() {
  var $0_1 = 0, $1_1 = 0;
  fimport$11(51424, 51448, 51480, 0, 48504, 223, 48612, 0, 48612, 0, 8786, 48614, 224);
  $0_1 = $1783(4);
  $1973($0_1, 0, 225);
  fimport$12(51424, 12239, 48496, 49e3, 226, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 227);
  fimport$12(51424, 11372, 48496, 49e3, 226, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 228);
  fimport$12(51424, 2991, 48496, 49e3, 226, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 4);
  $1_1 = $1783(4);
  $1973($1_1, 0, 4);
  fimport$12(51424, 14347, 72796, 48692, 229, $0_1 | 0, 72796, 48696, 230, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 8);
  $1_1 = $1783(4);
  $1973($1_1, 0, 8);
  fimport$12(51424, 16647, 72796, 48692, 229, $0_1 | 0, 72796, 48696, 230, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 12);
  $1_1 = $1783(4);
  $1973($1_1, 0, 12);
  fimport$12(51424, 16644, 72796, 48692, 229, $0_1 | 0, 72796, 48696, 230, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 16);
  $1_1 = $1783(4);
  $1973($1_1, 0, 16);
  fimport$12(51424, 16625, 72796, 48692, 229, $0_1 | 0, 72796, 48696, 230, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 20);
  $1_1 = $1783(4);
  $1973($1_1, 0, 20);
  fimport$12(51424, 16622, 72796, 48692, 229, $0_1 | 0, 72796, 48696, 230, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 24);
  $1_1 = $1783(4);
  $1973($1_1, 0, 24);
  fimport$12(51424, 16653, 72796, 48692, 229, $0_1 | 0, 72796, 48696, 230, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 28);
  $1_1 = $1783(4);
  $1973($1_1, 0, 28);
  fimport$12(51424, 16650, 72796, 48692, 229, $0_1 | 0, 72796, 48696, 230, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 32);
  $1_1 = $1783(4);
  $1973($1_1, 0, 32);
  fimport$12(51424, 16631, 72796, 48692, 229, $0_1 | 0, 72796, 48696, 230, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 36);
  $1_1 = $1783(4);
  $1973($1_1, 0, 36);
  fimport$12(51424, 16628, 72796, 48692, 229, $0_1 | 0, 72796, 48696, 230, $1_1 | 0);
 }
 
 function $973($0_1) {
  $0_1 = $0_1 | 0;
  return 51424;
 }
 
 function $975($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1944($1_1, 0) & 1);
  $1973($0_1, 0, fimport$1(72652, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $977($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1944($1_1, 0) >>> 1 & 1);
  $1973($0_1, 0, fimport$1(72652, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $978($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1944($1_1, 0) >>> 2 | 0);
  $1973($0_1, 0, fimport$1(72736, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $981() {
  var $0_1 = 0, $1_1 = 0;
  fimport$11(51512, 51536, 51572, 0, 48504, 231, 48612, 0, 48612, 0, 9429, 48614, 232);
  $0_1 = $1783(4);
  $1973($0_1, 0, 233);
  $1_1 = $1783(4);
  $1973($1_1, 0, 234);
  fimport$12(51512, 13688, 48496, 49e3, 235, $0_1 | 0, 48496, 49004, 236, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 8);
  $1_1 = $1783(4);
  $1973($1_1, 0, 8);
  fimport$12(51512, 5409, 72652, 49e3, 237, $0_1 | 0, 72652, 49004, 238, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 12);
  $1_1 = $1783(4);
  $1973($1_1, 0, 12);
  fimport$12(51512, 7123, 72724, 49e3, 239, $0_1 | 0, 72724, 49004, 240, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 16);
  $1_1 = $1783(4);
  $1973($1_1, 0, 16);
  fimport$12(51512, 4774, 72796, 48692, 241, $0_1 | 0, 72796, 48696, 242, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 20);
  $1_1 = $1783(4);
  $1973($1_1, 0, 20);
  fimport$12(51512, 14893, 72724, 49e3, 239, $0_1 | 0, 72724, 49004, 240, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 24);
  $1_1 = $1783(4);
  $1973($1_1, 0, 24);
  fimport$12(51512, 14751, 72724, 49e3, 239, $0_1 | 0, 72724, 49004, 240, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 28);
  $1_1 = $1783(4);
  $1973($1_1, 0, 28);
  fimport$12(51512, 14882, 72652, 49e3, 237, $0_1 | 0, 72652, 49004, 238, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 243);
  fimport$12(51512, 9411, 48496, 49e3, 235, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 244);
  fimport$12(51512, 3521, 48496, 49e3, 235, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 245);
  fimport$12(51512, 5204, 48496, 49e3, 235, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 52);
  $1_1 = $1783(4);
  $1973($1_1, 0, 52);
  fimport$12(51512, 14322, 72796, 48692, 241, $0_1 | 0, 72796, 48696, 242, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 56);
  $1_1 = $1783(4);
  $1973($1_1, 0, 56);
  fimport$12(51512, 14305, 72796, 48692, 241, $0_1 | 0, 72796, 48696, 242, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 60);
  $1_1 = $1783(4);
  $1973($1_1, 0, 60);
  fimport$12(51512, 11606, 72652, 49e3, 237, $0_1 | 0, 72652, 49004, 238, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 64);
  $1_1 = $1783(4);
  $1973($1_1, 0, 64);
  fimport$12(51512, 4895, 72736, 49e3, 246, $0_1 | 0, 72736, 49004, 247, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 68);
  $1_1 = $1783(4);
  $1973($1_1, 0, 68);
  fimport$12(51512, 1170, 72796, 48692, 241, $0_1 | 0, 72796, 48696, 242, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 248);
  $1_1 = $1783(4);
  $1973($1_1, 0, 249);
  fimport$12(51512, 11255, 48496, 49e3, 235, $0_1 | 0, 48496, 49004, 236, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 250);
  fimport$12(51512, 2951, 48496, 49e3, 235, $0_1 | 0, 0, 0, 0, 0);
 }
 
 function $982($0_1) {
  $0_1 = $0_1 | 0;
  return 51512;
 }
 
 function $984($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 0, 2447);
  $1675(19180, $1_1);
  $1973($0_1, 0, 2);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $985($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $0_1 = global$0 - 16 | 0;
  global$0 = $0_1;
  $1973($0_1, 0, 2281);
  $1675(19180, $0_1);
  global$0 = $0_1 + 16 | 0;
 }
 
 function $994($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 32 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $995($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 40 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $996($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = $1944($1_1, 48);
  label$1 : {
   if (!$1_1) {
    $1973($0_1, 0, 2);
    break label$1;
   }
   $1973($2_1, 8, $1_1);
   $1973($0_1, 0, fimport$1(72748, $2_1 + 8 | 0) | 0);
  }
  global$0 = $2_1 + 16 | 0;
 }
 
 function $999($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = global$0 - 32 | 0;
  global$0 = $2_1;
  $4_1 = $1_1 + 74 | 0;
  $3 = $1697($4_1);
  if ($3 >>> 0 < 2147483632) {
   label$2 : {
    if ($3 >>> 0 <= 10) {
     $1968($2_1, 23, $3);
     $1_1 = $2_1 + 12 | 0;
     break label$2;
    }
    $5_1 = ($3 | 15) + 1 | 0;
    $1_1 = $1783($5_1);
    $1973($2_1, 20, $5_1 | -2147483648);
    $1973($2_1, 12, $1_1);
    $1973($2_1, 16, $3);
   }
   if ($3) {
    $1602($1_1, $4_1, $3)
   }
   $1968($1_1 + $3 | 0, 0, 0);
   $3 = $1944($2_1, 16);
   $4_1 = $1936($2_1, 23);
   $1_1 = ($4_1 | 0) < 0;
   $3 = $1_1 ? $3 : $4_1 & 127;
   $4_1 = $1755($3 + 4 | 0);
   $1973($4_1, 0, $3);
   $1602($4_1 + 4 | 0, (wasm2js_i32$0 = $1944($2_1, 12), wasm2js_i32$1 = $2_1 + 12 | 0, wasm2js_i32$2 = $1_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $3);
   $1973($2_1, 24, $4_1);
   $1973($0_1, 0, fimport$1(49072, $2_1 + 24 | 0) | 0);
   if (($1936($2_1, 23) | 0) < 0) {
    $1756($1944($2_1, 12))
   }
   global$0 = $2_1 + 32 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1000($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0.0, $6_1 = 0, $7_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $5_1 = +fimport$5($1944($1_1, 0) | 0, 49072, $2_1 + 12 | 0);
  label$1 : {
   if ($5_1 < 4294967296.0 & $5_1 >= 0.0) {
    $4_1 = ~~$5_1 >>> 0;
    break label$1;
   }
   $4_1 = 0;
  }
  $3 = $1944($4_1, 0);
  if ($3 >>> 0 < 2147483632) {
   $7_1 = $1944($2_1, 12);
   label$4 : {
    if ($3 >>> 0 <= 10) {
     $1968($2_1, 11, $3);
     $1_1 = $2_1;
     break label$4;
    }
    $6_1 = ($3 | 15) + 1 | 0;
    $1_1 = $1783($6_1);
    $1973($2_1, 8, $6_1 | -2147483648);
    $1973($2_1, 0, $1_1);
    $1973($2_1, 4, $3);
   }
   if ($3) {
    $1602($1_1, $4_1 + 4 | 0, $3)
   }
   $1968($1_1 + $3 | 0, 0, 0);
   fimport$6($7_1 | 0);
   $4_1 = $0_1 + 74 | 0;
   $0_1 = $1944($2_1, 0);
   $1_1 = $1936($2_1, 11);
   $1699($4_1, ($1_1 | 0) < 0 ? $0_1 : $2_1, 39);
   if (($1_1 | 0) < 0) {
    $1756($0_1)
   }
   global$0 = $2_1 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1001($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = $1944($1_1, 116);
  label$1 : {
   if (!$1_1) {
    $1973($0_1, 0, 2);
    break label$1;
   }
   $1973($2_1, 8, $1_1);
   $1973($0_1, 0, fimport$1(50504, $2_1 + 8 | 0) | 0);
  }
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1002() {
  var $0_1 = 0, $1_1 = 0;
  fimport$11(50496, 50504, 51600, 0, 48504, 251, 48612, 0, 48612, 0, 2975, 48614, 252);
  $0_1 = $1783(4);
  $1973($0_1, 0, 16);
  $1_1 = $1783(4);
  $1973($1_1, 0, 16);
  fimport$12(50496, 10150, 72796, 48692, 253, $0_1 | 0, 72796, 48696, 254, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 68);
  $1_1 = $1783(4);
  $1973($1_1, 0, 68);
  fimport$12(50496, 11519, 72796, 48692, 253, $0_1 | 0, 72796, 48696, 254, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 255);
  fimport$13(50496, 4832, 3, 51616, 49004, 256, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 257);
  $1_1 = $1783(4);
  $1973($1_1, 0, 258);
  fimport$12(50496, 8798, 48496, 49e3, 259, $0_1 | 0, 48496, 49004, 260, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 12);
  $1_1 = $1783(4);
  $1973($1_1, 0, 12);
  fimport$12(50496, 14339, 72796, 48692, 253, $0_1 | 0, 72796, 48696, 254, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 58);
  $1_1 = $1783(4);
  $1973($1_1, 0, 58);
  fimport$12(50496, 6525, 72712, 49e3, 261, $0_1 | 0, 72712, 49004, 262, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 60);
  $1_1 = $1783(4);
  $1973($1_1, 0, 60);
  fimport$12(50496, 6501, 72712, 49e3, 261, $0_1 | 0, 72712, 49004, 262, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 62);
  $1_1 = $1783(4);
  $1973($1_1, 0, 62);
  fimport$12(50496, 6483, 72712, 49e3, 261, $0_1 | 0, 72712, 49004, 262, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 56);
  $1_1 = $1783(4);
  $1973($1_1, 0, 56);
  fimport$12(50496, 2935, 72700, 49e3, 263, $0_1 | 0, 72700, 49004, 264, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 265);
  fimport$13(50496, 13852, 3, 51616, 49004, 256, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 72);
  $1_1 = $1783(4);
  $1973($1_1, 0, 72);
  fimport$12(50496, 3093, 72796, 48692, 253, $0_1 | 0, 72796, 48696, 254, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 76);
  $1_1 = $1783(4);
  $1973($1_1, 0, 76);
  fimport$12(50496, 3085, 72796, 48692, 253, $0_1 | 0, 72796, 48696, 254, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 80);
  $1_1 = $1783(4);
  $1973($1_1, 0, 80);
  fimport$12(50496, 11683, 72724, 49e3, 266, $0_1 | 0, 72724, 49004, 267, $1_1 | 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 268);
  fimport$13(50496, 13657, 2, 51628, 49408, 269, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 270);
  fimport$13(50496, 11401, 2, 51628, 49408, 269, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 271);
  fimport$13(50496, 8812, 3, 51636, 48740, 272, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 273);
  fimport$13(50496, 8508, 3, 51636, 48740, 272, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 274);
  fimport$13(50496, 11668, 3, 51648, 51660, 275, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 276);
  fimport$13(50496, 12706, 2, 51668, 49e3, 277, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 278);
  fimport$13(50496, 11247, 2, 51676, 49e3, 279, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 280);
  fimport$13(50496, 15340, 8, 51696, 51728, 281, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 282);
  fimport$13(50496, 15318, 5, 51744, 51764, 283, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 284);
  fimport$13(50496, 6514, 7, 51776, 51804, 285, $0_1 | 0, 0, 0);
 }
 
 function $1003($0_1) {
  $0_1 = $0_1 | 0;
  return 50496;
 }
 
 function $1004($0_1) {
  $0_1 = $0_1 | 0;
  if ($0_1) {
   $1756($471($0_1))
  }
 }
 
 function $1007($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  if (($1944($0_1, 32) | 0) > 0) {
   while (1) {
    $1973($2_1, 8, $1944($0_1, 40) + Math_imul($3, 40) | 0);
    $5_1 = $2_1 + 8 | 0;
    $4_1 = fimport$1(51448, $5_1 | 0) | 0;
    fimport$10($4_1 | 0);
    $1973($2_1, 8, $4_1);
    fimport$4(fimport$16($1944($1_1, 0) | 0, 1, 48472, $5_1 | 0) | 0);
    fimport$4($4_1 | 0);
    $3 = $3 + 1 | 0;
    if (($1944($0_1, 32) | 0) > ($3 | 0)) {
     continue
    }
    break;
   }
  }
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1009($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = $1944($1_1, 44);
  label$1 : {
   if (!$1_1) {
    $1973($0_1, 0, 2);
    break label$1;
   }
   $1973($2_1, 8, $1_1);
   $1973($0_1, 0, fimport$1(51480, $2_1 + 8 | 0) | 0);
  }
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1010($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0.0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = $1944($1_1, 0);
  if (($1_1 | 0) == 2) {
   $1_1 = 0
  } else {
   $3 = +fimport$5($1_1 | 0, 51480, $2_1 + 12 | 0);
   fimport$6($1944($2_1, 12) | 0);
   if ($3 < 4294967296.0 & $3 >= 0.0) {
    $1_1 = ~~$3 >>> 0
   } else {
    $1_1 = 0
   }
  }
  $1973($0_1, 44, $1_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1017($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  if (($1939($0_1, 56) | 0) > 0) {
   while (1) {
    $1973($2_1, 8, $1944($0_1, 52) + Math_imul($3, 120) | 0);
    $5_1 = $2_1 + 8 | 0;
    $4_1 = fimport$1(51572, $5_1 | 0) | 0;
    fimport$10($4_1 | 0);
    $1973($2_1, 8, $4_1);
    fimport$4(fimport$16($1944($1_1, 0) | 0, 1, 48472, $5_1 | 0) | 0);
    fimport$4($4_1 | 0);
    $3 = $3 + 1 | 0;
    if (($1939($0_1, 56) | 0) > ($3 | 0)) {
     continue
    }
    break;
   }
  }
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1021($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1_1 = $472($1_1, $2_1);
  label$1 : {
   if (!$1_1) {
    $1973($0_1, 0, 2);
    break label$1;
   }
   $1973($3, 8, $1_1);
   $1973($0_1, 0, fimport$1(51480, $3 + 8 | 0) | 0);
  }
  global$0 = $3 + 16 | 0;
 }
 
 function $1023($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  if ($1944($1_1, 20) >>> 0 > $2_1 >>> 0) {
   $4_1 = $1944($1_1 + 40 | 0, 0);
   $1_1 = $1941($1944($1_1 + 28 | 0, 0) + ($2_1 << 1) | 0, 0);
   $1_1 = ($1_1 | 0) != 65535 ? $4_1 + Math_imul($1_1, 40) | 0 : 0;
  } else {
   $1_1 = 0
  }
  label$1 : {
   if (!$1_1) {
    $1973($0_1, 0, 2);
    break label$1;
   }
   $1973($3, 8, $1_1);
   $1973($0_1, 0, fimport$1(51480, $3 + 8 | 0) | 0);
  }
  global$0 = $3 + 16 | 0;
 }
 
 function $1024($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  return Math_fround($1963((wasm2js_i32$0 = $1944($0_1, 8) + ($1_1 << 2) | 0, wasm2js_i32$1 = $0_1 + 12 | 0, wasm2js_i32$2 = ($1944($0_1, 0) | 0) > ($1_1 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0));
 }
 
 function $1025($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = $1944($0_1, 4);
  $1_1 = ($3 >> 1) + $1_1 | 0;
  $0_1 = $1944($0_1, 0);
  label$1 : {
   if (!($3 & 1)) {
    break label$1
   }
   $0_1 = $1944($1944($1_1, 0) + $0_1 | 0, 0);
  }
  return Math_fround(Math_fround(FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1)));
 }
 
 function $1026($0_1) {
  $0_1 = $0_1 | 0;
  return ($1944($0_1, 48) | 0) != 0 | 0;
 }
 
 function $1028($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  $1_1 = $1944($1_1, 52);
  $3 = $1_1 ? $1_1 + 74 | 0 : 16019;
  $2_1 = $1697($3);
  if ($2_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($2_1 >>> 0 <= 10) {
     $1968($0_1, 11, $2_1);
     break label$2;
    }
    $4_1 = ($2_1 | 15) + 1 | 0;
    $1_1 = $1783($4_1);
    $1973($0_1, 8, $4_1 | -2147483648);
    $1973($0_1, 0, $1_1);
    $1973($0_1, 4, $2_1);
    $0_1 = $1_1;
   }
   $1_1 = $0_1 + $2_1 | 0;
   if ($2_1) {
    $1603($0_1, $3, $2_1)
   }
   $1968($1_1, 0, 0);
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1029($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $4_1 = $2_1 + 4 | 0;
  FUNCTION_TABLE[$1944($0_1, 0) | 0]($4_1, $1_1);
  $1_1 = $1944($2_1, 8);
  $3 = $1937($2_1, 15);
  $5_1 = $3 << 24 >> 24;
  $0_1 = ($5_1 | 0) < 0;
  $1_1 = $0_1 ? $1_1 : $3 & 127;
  $3 = $1755($1_1 + 4 | 0);
  $1973($3, 0, $1_1);
  $6_1 = $1944($2_1, 4);
  $1602($3 + 4 | 0, $0_1 ? $6_1 : $4_1, $1_1);
  if (($5_1 | 0) < 0) {
   $1756($6_1)
  }
  global$0 = $2_1 + 16 | 0;
  return $3 | 0;
 }
 
 function $1030($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $3 = Math_fround($3);
  $4_1 = Math_fround($4_1);
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  var $8 = 0, $9 = 0, $10_1 = 0;
  $8 = global$0 - 32 | 0;
  global$0 = $8;
  $9 = $1944($5_1, 0);
  $10_1 = $1936($5_1, 11);
  $1973($8, 20, 0);
  $5_1 = ($10_1 | 0) < 0 ? $9 : $5_1;
  $474($8 + 12 | 0, $1_1, $2_1, $3, $4_1, $5_1, 0, $8 + 20 | 0);
  $6_1 = $1944($6_1, 0);
  if (($6_1 | 0) != 2) {
   $9 = $1944($8, 20);
   $1973($8, 24, 0);
   $1_1 = fimport$1(72724, $8 + 24 | 0) | 0;
   $1973($8, 24, $9 - $5_1 | 0);
   $5_1 = fimport$1(72724, $8 + 24 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($5_1 | 0);
   fimport$4($1_1 | 0);
  }
  $1_1 = $1944($7_1, 0);
  $1973($8, 24, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $8 + 12 | 0, $8 + 24 | 0);
  fimport$4($1944($8, 24) | 0);
  global$0 = $8 + 32 | 0;
 }
 
 function $1031($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $3 = Math_fround($3);
  $4_1 = Math_fround($4_1);
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  var $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0;
  $8 = global$0 - 32 | 0;
  global$0 = $8;
  $9 = $1944($5_1, 0);
  if ($9 >>> 0 < 2147483632) {
   $11_1 = $1944($0_1, 0);
   label$2 : {
    if ($9 >>> 0 <= 10) {
     $1968($8, 27, $9);
     $0_1 = $8 + 16 | 0;
     break label$2;
    }
    $10_1 = ($9 | 15) + 1 | 0;
    $0_1 = $1783($10_1);
    $1973($8, 24, $10_1 | -2147483648);
    $1973($8, 16, $0_1);
    $1973($8, 20, $9);
   }
   if ($9) {
    $1602($0_1, $5_1 + 4 | 0, $9)
   }
   $1968($0_1 + $9 | 0, 0, 0);
   $1973($8, 8, $7_1);
   $1973($8, 12, $6_1);
   FUNCTION_TABLE[$11_1 | 0]($8 + 28 | 0, $1_1, $2_1, $3, $4_1, $8 + 16 | 0, $8 + 12 | 0, $8 + 8 | 0);
   fimport$10($1944($8, 28) | 0);
   $0_1 = $1944($8, 28);
   fimport$4($0_1 | 0);
   fimport$4($1944($8, 8) | 0);
   fimport$4($1944($8, 12) | 0);
   if (($1936($8, 27) | 0) < 0) {
    $1756($1944($8, 16))
   }
   global$0 = $8 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1032($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = Math_fround($1_1);
  $2_1 = $2_1 | 0;
  $3 = Math_fround($3);
  var $4_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $4_1 = $0_1;
  $0_1 = (wasm2js_i32$0 = $1944($2_1, 0), wasm2js_i32$1 = $2_1, wasm2js_i32$2 = ($1936($2_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  return $415($4_1, $1_1, $0_1, 0, $3) - $0_1 | 0;
 }
 
 function $1033($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $3 = $3 | 0;
  $4_1 = Math_fround($4_1);
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $6_1 = $1944($3, 0);
  if ($6_1 >>> 0 < 2147483632) {
   $8 = $1944($0_1, 0);
   label$2 : {
    if ($6_1 >>> 0 <= 10) {
     $1968($5_1, 15, $6_1);
     $0_1 = $5_1 + 4 | 0;
     break label$2;
    }
    $7_1 = ($6_1 | 15) + 1 | 0;
    $0_1 = $1783($7_1);
    $1973($5_1, 12, $7_1 | -2147483648);
    $1973($5_1, 4, $0_1);
    $1973($5_1, 8, $6_1);
   }
   if ($6_1) {
    $1602($0_1, $3 + 4 | 0, $6_1)
   }
   $1968($0_1 + $6_1 | 0, 0, 0);
   $0_1 = FUNCTION_TABLE[$8 | 0]($1_1, $2_1, $5_1 + 4 | 0, $4_1) | 0;
   if (($1936($5_1, 15) | 0) < 0) {
    $1756($1944($5_1, 4))
   }
   global$0 = $5_1 + 16 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1034($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0.0;
  $6_1 = global$0 - 32 | 0;
  global$0 = $6_1;
  $7_1 = +fimport$5($1944($1_1, 0) | 0, 49796, $6_1 + 28 | 0);
  fimport$6($1944($6_1, 28) | 0);
  $1982($6_1, 20, 0, 0);
  $1983($6_1, 8, $1959($763($3, $6_1 + 20 | 0), 0), i64toi32_i32$HIGH_BITS);
  if ($7_1 < 4294967296.0 & $7_1 >= 0.0) {
   $1_1 = ~~$7_1 >>> 0
  } else {
   $1_1 = 0
  }
  $475($0_1, $1_1, $2_1, $6_1 + 8 | 0, $4_1, $5_1);
  global$0 = $6_1 + 32 | 0;
 }
 
 function $1035($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = Math_fround($3);
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0;
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $0_1 = $1944($0_1, 0);
  $1973($7_1, 8, $4_1);
  $1973($7_1, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $7_1 + 12 | 0, $3, $7_1 + 8 | 0, $5_1, $6_1);
  fimport$4($1944($7_1, 8) | 0);
  fimport$4($1944($7_1, 12) | 0);
  global$0 = $7_1 + 16 | 0;
 }
 
 function $1036() {
  var $0_1 = 0, $1_1 = 0;
  fimport$11(51828, 51852, 51884, 0, 48504, 286, 48612, 0, 48612, 0, 5430, 48614, 287);
  $0_1 = $1783(4);
  $1973($0_1, 0, 288);
  fimport$13(51828, 3135, 3, 51900, 48740, 289, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 290);
  fimport$13(51828, 14935, 6, 51920, 51944, 291, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 292);
  fimport$13(51828, 13621, 2, 52e3, 49408, 293, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 294);
  fimport$13(51828, 13673, 2, 52e3, 49408, 293, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 295);
  fimport$13(51828, 4169, 2, 52e3, 49408, 293, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 296);
  fimport$13(51828, 6542, 2, 52e3, 49408, 293, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 297);
  fimport$13(51828, 11850, 2, 52008, 49e3, 298, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 299);
  fimport$13(51828, 3187, 2, 52016, 49e3, 300, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 301);
  fimport$13(51828, 16167, 2, 52024, 49e3, 302, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 303);
  fimport$13(51828, 16603, 2, 52024, 49e3, 302, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 304);
  fimport$13(51828, 3150, 2, 52024, 49e3, 302, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 305);
  fimport$13(51828, 7865, 2, 52024, 49e3, 302, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 306);
  fimport$13(51828, 10811, 2, 52024, 49e3, 302, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 307);
  fimport$13(51828, 8143, 2, 52024, 49e3, 302, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 308);
  fimport$13(51828, 7361, 2, 52024, 49e3, 302, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 309);
  fimport$13(51828, 13473, 2, 52024, 49e3, 302, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 310);
  fimport$13(51828, 8556, 2, 52024, 49e3, 302, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 311);
  fimport$13(51828, 10834, 2, 52024, 49e3, 302, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 16);
  $1_1 = $1783(4);
  $1973($1_1, 0, 16);
  fimport$12(51828, 12628, 72652, 49e3, 312, $0_1 | 0, 72652, 49004, 313, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 0);
  $1_1 = $1783(4);
  $1973($1_1, 0, 0);
  fimport$12(51828, 4951, 72724, 49e3, 314, $0_1 | 0, 72724, 49004, 315, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 316);
  $1_1 = $1783(4);
  $1973($1_1, 0, 317);
  fimport$12(51828, 15025, 48496, 49e3, 318, $0_1 | 0, 48496, 49004, 319, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 8);
  $1_1 = $1783(4);
  $1973($1_1, 0, 8);
  fimport$12(51828, 8760, 72724, 49e3, 314, $0_1 | 0, 72724, 49004, 315, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 12);
  $1_1 = $1783(4);
  $1973($1_1, 0, 12);
  fimport$12(51828, 9188, 72724, 49e3, 314, $0_1 | 0, 72724, 49004, 315, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 28);
  $1_1 = $1783(4);
  $1973($1_1, 0, 28);
  fimport$12(51828, 8648, 72724, 49e3, 314, $0_1 | 0, 72724, 49004, 315, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 32);
  $1_1 = $1783(4);
  $1973($1_1, 0, 32);
  fimport$12(51828, 3315, 72724, 49e3, 314, $0_1 | 0, 72724, 49004, 315, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 320);
  fimport$12(51828, 11438, 48496, 49e3, 318, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 321);
  fimport$12(51828, 8302, 48496, 49e3, 318, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 322);
  fimport$13(51828, 4180, 3, 52032, 49004, 323, $0_1 | 0, 0, 0);
 }
 
 function $1037($0_1) {
  $0_1 = $0_1 | 0;
  return 51828;
 }
 
 function $1038($0_1) {
  $0_1 = $0_1 | 0;
  if ($0_1) {
   $1756($428($0_1))
  }
 }
 
 function $1039($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = Math_fround(0);
  $4_1 = global$0 - 144 | 0;
  global$0 = $4_1;
  $3 = $1944($2_1, 0);
  label$1 : {
   if (($3 | 0) == 2) {
    $426($4_1 + 16 | 0);
    break label$1;
   }
   $1973($4_1, 12, $3);
   fimport$10($3 | 0);
   $773($4_1 + 16 | 0, $4_1 + 12 | 0);
  }
  if (($3 | 0) != 2) {
   fimport$4($1944($4_1, 12) | 0)
  }
  $3 = ($1944($2_1, 0) | 0) != 2 ? $4_1 + 16 | 0 : 0;
  $2_1 = global$0 - 128 | 0;
  global$0 = $2_1;
  label$10 : {
   if ($3) {
    $1602($2_1 + 8 | 0, $3, 120);
    break label$10;
   }
   $426($2_1 + 8 | 0);
  }
  if (!$3) {
   $1968($2_1, 36, 1);
   $1982($2_1, 28, 1, 1);
  }
  if ($1963($2_1, 24) <= Math_fround(0.0)) {
   $1973($2_1, 24, 1095761920)
  }
  if (!$1937($2_1, 82)) {
   $3 = $2_1 + 82 | 0;
   $5_1 = $1963($2_1, 24);
   label$6 : {
    if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
     $6_1 = ~~$5_1;
     break label$6;
    }
    $6_1 = -2147483648;
   }
   $1973($2_1, 0, $6_1);
   $21($3, 40, 1268, $2_1);
  }
  $6_1 = $2_1 + 52 | 0;
  $5_1 = $1963($2_1, 24);
  $7_1 = Math_fround($5_1 / Math_fround(13.0));
  label$8 : {
   if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
    $3 = ~~$7_1;
    break label$8;
   }
   $3 = -2147483648;
  }
  $1986($6_1, 0, Math_fround($3 | 0));
  $1970($2_1, 80, 133);
  $3 = $1_1;
  $1_1 = $1944($2_1, 56);
  $1_1 = $435($3, $5_1, $2_1 + 8 | 0, $1_1 ? $1_1 : 21640);
  global$0 = $2_1 + 128 | 0;
  $1973($4_1, 136, $1_1);
  $1973($0_1, 0, fimport$1(50504, $4_1 + 136 | 0) | 0);
  global$0 = $4_1 + 144 | 0;
 }
 
 function $1041($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = Math_fround($3);
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0.0, $10_1 = 0, $11_1 = 0, wasm2js_f32$0 = Math_fround(0), wasm2js_f32$1 = Math_fround(0), wasm2js_i32$0 = 0;
  $6_1 = global$0 - 160 | 0;
  global$0 = $6_1;
  $1973($6_1, 148, 0);
  $1982($6_1, 140, 0, 0);
  $8 = $1944($2_1, 0);
  $7_1 = fimport$2(8624) | 0;
  $8 = fimport$7($8 | 0, $7_1 | 0) | 0;
  fimport$4($7_1 | 0);
  $9 = +fimport$5($8 | 0, 72760, $6_1 + 16 | 0);
  fimport$6($1944($6_1, 16) | 0);
  $7_1 = $1944($6_1, 144);
  $11_1 = $1944($6_1, 140);
  $10_1 = $7_1 - $11_1 | 0;
  $7_1 = $9 < 4294967296.0 & $9 >= 0.0 ? ~~$9 >>> 0 : 0;
  label$3 : {
   if ($10_1 >>> 0 < $7_1 >>> 0) {
    $1070($6_1 + 140 | 0, $7_1 - $10_1 | 0);
    break label$3;
   }
   if ($7_1 >>> 0 >= $10_1 >>> 0) {
    break label$3
   }
   $1973($6_1, 144, $7_1 + $11_1 | 0);
  }
  fimport$4($8 | 0);
  $7_1 = $1944($6_1, 144);
  $8 = $1944($6_1, 140);
  $1973($6_1, 20, $8);
  $1973($6_1, 16, $7_1 - $8 | 0);
  $7_1 = fimport$1(51984, $6_1 + 16 | 0) | 0;
  if (!($1937(0, 95820) & 1)) {
   $8 = fimport$17(2, 51992) | 0;
   $1968(0, 95820, 1);
   $1973(0, 95816, $8);
  }
  $8 = $1944(0, 95816);
  fimport$10($1944($2_1, 0) | 0);
  $1973($6_1, 16, $1944($2_1, 0));
  fimport$18($8 | 0, $7_1 | 0, 3559, $6_1 + 16 | 0);
  fimport$4($7_1 | 0);
  $7_1 = $1944($6_1, 144) - $1944($6_1, 140) | 0;
  $8 = $1602($16($7_1), $1944($6_1, 140), $7_1);
  $2_1 = $1944($4_1, 0);
  label$6 : {
   if (($2_1 | 0) == 2) {
    $426($6_1 + 16 | 0);
    break label$6;
   }
   $1973($6_1, 12, $2_1);
   fimport$10($2_1 | 0);
   $773($6_1 + 16 | 0, $6_1 + 12 | 0);
  }
  if (($2_1 | 0) != 2) {
   fimport$4($1944($6_1, 12) | 0)
  }
  $2_1 = 0;
  $5_1 = $1944($5_1, 0);
  if (($5_1 | 0) != 2) {
   $9 = +fimport$5($5_1 | 0, 72748, $6_1 + 152 | 0);
   fimport$6($1944($6_1, 152) | 0);
   $2_1 = Math_abs($9) < 2147483648.0 ? ~~$9 : -2147483648;
  }
  $5_1 = ($1944($4_1, 0) | 0) != 2 ? $6_1 + 16 | 0 : 0;
  $4_1 = global$0 - 128 | 0;
  global$0 = $4_1;
  label$1 : {
   if ($5_1) {
    $1602($4_1 + 8 | 0, $5_1, 120);
    break label$1;
   }
   $426($4_1 + 8 | 0);
  }
  $1973($4_1, 12, $7_1);
  $1973($4_1, 8, $8);
  $1986($4_1, 24, (wasm2js_f32$0 = $3, wasm2js_f32$1 = $1963($4_1, 24), wasm2js_i32$0 = $3 > Math_fround(0.0), wasm2js_i32$0 ? wasm2js_f32$0 : wasm2js_f32$1));
  if ($2_1) {
   $1973($4_1, 56, $2_1)
  }
  $1_1 = $438($1_1, $4_1 + 8 | 0);
  global$0 = $4_1 + 128 | 0;
  $1973($6_1, 152, $1_1);
  $1973($0_1, 0, fimport$1(50504, $6_1 + 152 | 0) | 0);
  $0_1 = $1944($6_1, 140);
  if ($0_1) {
   $1973($6_1, 144, $0_1);
   $1756($0_1);
  }
  global$0 = $6_1 + 160 | 0;
 }
 
 function $1042($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = Math_fround($3);
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $0_1 = $1944($0_1, 0);
  $1973($6_1, 4, $4_1);
  $1973($6_1, 8, $2_1);
  $1973($6_1, 0, $5_1);
  FUNCTION_TABLE[$0_1 | 0]($6_1 + 12 | 0, $1_1, $6_1 + 8 | 0, $3, $6_1 + 4 | 0, $6_1);
  fimport$10($1944($6_1, 12) | 0);
  $0_1 = $1944($6_1, 12);
  fimport$4($0_1 | 0);
  fimport$4($1944($6_1, 0) | 0);
  fimport$4($1944($6_1, 4) | 0);
  fimport$4($1944($6_1, 8) | 0);
  global$0 = $6_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1045($0_1) {
  $0_1 = $0_1 | 0;
  return ($1944($0_1, 52) | 0) > 0 & ($1937($0_1, 17) | 0) != 0;
 }
 
 function $1047($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 32 | 0;
  global$0 = $2_1;
  $1973($2_1, 20, 0);
  $1973($2_1, 16, -1);
  $1973($2_1, 12, -1);
  $1973($2_1, 8, -1);
  $6_1 = $2_1 + 20 | 0;
  $3 = $2_1 + 16 | 0;
  $4_1 = $2_1 + 12 | 0;
  $5_1 = $2_1 + 8 | 0;
  if (!$1944($1_1, 20)) {
   $434($1_1)
  }
  $1973($6_1, 0, $1944($1_1, 20));
  if ($3) {
   $1973($3, 0, $1944($1_1, 28))
  }
  if ($4_1) {
   $1973($4_1, 0, $1944($1_1, 32))
  }
  if ($5_1) {
   $1973($5_1, 0, 1)
  }
  $1_1 = $0_1;
  $0_1 = fimport$0() | 0;
  $1973($1_1, 0, $0_1);
  $1_1 = fimport$2(4767) | 0;
  $3 = $1944($2_1, 8);
  $4_1 = $1944($2_1, 12);
  $5_1 = $1944($2_1, 16);
  $1973($2_1, 28, $1944($2_1, 20));
  $1973($2_1, 24, Math_imul($3, Math_imul($4_1, $5_1)));
  $5_1 = $2_1 + 24 | 0;
  $3 = $5_1;
  $4_1 = fimport$1(51984, $3 | 0) | 0;
  fimport$3($0_1 | 0, $1_1 | 0, $4_1 | 0);
  fimport$4($4_1 | 0);
  fimport$4($1_1 | 0);
  $1_1 = fimport$2(8642) | 0;
  $1973($2_1, 24, $1944($2_1, 16));
  $3 = fimport$1(72724, $3 | 0) | 0;
  fimport$3($0_1 | 0, $1_1 | 0, $3 | 0);
  fimport$4($3 | 0);
  fimport$4($1_1 | 0);
  $1_1 = fimport$2(3301) | 0;
  $1973($2_1, 24, $1944($2_1, 12));
  $3 = fimport$1(72724, $5_1 | 0) | 0;
  fimport$3($0_1 | 0, $1_1 | 0, $3 | 0);
  fimport$4($3 | 0);
  fimport$4($1_1 | 0);
  $1_1 = fimport$2(8279) | 0;
  $1973($2_1, 24, $1944($2_1, 8));
  $3 = $0_1;
  $0_1 = fimport$1(72724, $2_1 + 24 | 0) | 0;
  fimport$3($3 | 0, $1_1 | 0, $0_1 | 0);
  fimport$4($0_1 | 0);
  fimport$4($1_1 | 0);
  global$0 = $2_1 + 32 | 0;
 }
 
 function $1049($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0;
  $2_1 = global$0 - 32 | 0;
  global$0 = $2_1;
  $1973($2_1, 20, 0);
  $1973($2_1, 16, -1);
  $1973($2_1, 12, -1);
  $1973($2_1, 8, -1);
  $10_1 = $2_1 + 20 | 0;
  $7_1 = $2_1 + 16 | 0;
  $8 = $2_1 + 12 | 0;
  $9 = $2_1 + 8 | 0;
  label$1 : {
   if ($1944($1_1, 24)) {
    break label$1
   }
   if (!$1944($1_1, 20)) {
    $434($1_1)
   }
   $4_1 = $1944($1_1, 20);
   if (!$4_1) {
    break label$1
   }
   $6_1 = $16(Math_imul($1944($1_1, 28), $1944($1_1, 32)) << 2);
   $1973($1_1, 24, $6_1);
   $3 = Math_imul($1944($1_1, 32), $1944($1_1, 28));
   if (($3 | 0) <= 0) {
    break label$1
   }
   while (1) {
    $1973($6_1, 0, $1937($4_1, 0) << 24 | 16777215);
    $5_1 = $3;
    $3 = $3 - 1 | 0;
    $6_1 = $6_1 + 4 | 0;
    $4_1 = $4_1 + 1 | 0;
    if (($5_1 | 0) > 1) {
     continue
    }
    break;
   };
  }
  $1973($10_1, 0, $1944($1_1, 24));
  if ($7_1) {
   $1973($7_1, 0, $1944($1_1, 28))
  }
  if ($8) {
   $1973($8, 0, $1944($1_1, 32))
  }
  if ($9) {
   $1973($9, 0, 4)
  }
  $1_1 = $0_1;
  $0_1 = fimport$0() | 0;
  $1973($1_1, 0, $0_1);
  $1_1 = fimport$2(4767) | 0;
  $3 = $1944($2_1, 8);
  $5_1 = $1944($2_1, 12);
  $4_1 = $1944($2_1, 16);
  $1973($2_1, 28, $1944($2_1, 20));
  $1973($2_1, 24, Math_imul($3, Math_imul($4_1, $5_1)));
  $4_1 = $2_1 + 24 | 0;
  $3 = $4_1;
  $5_1 = fimport$1(51984, $3 | 0) | 0;
  fimport$3($0_1 | 0, $1_1 | 0, $5_1 | 0);
  fimport$4($5_1 | 0);
  fimport$4($1_1 | 0);
  $1_1 = fimport$2(8642) | 0;
  $1973($2_1, 24, $1944($2_1, 16));
  $3 = fimport$1(72724, $3 | 0) | 0;
  fimport$3($0_1 | 0, $1_1 | 0, $3 | 0);
  fimport$4($3 | 0);
  fimport$4($1_1 | 0);
  $1_1 = fimport$2(3301) | 0;
  $1973($2_1, 24, $1944($2_1, 12));
  $3 = fimport$1(72724, $4_1 | 0) | 0;
  fimport$3($0_1 | 0, $1_1 | 0, $3 | 0);
  fimport$4($3 | 0);
  fimport$4($1_1 | 0);
  $1_1 = fimport$2(8279) | 0;
  $1973($2_1, 24, $1944($2_1, 8));
  $3 = $0_1;
  $0_1 = fimport$1(72724, $2_1 + 24 | 0) | 0;
  fimport$3($3 | 0, $1_1 | 0, $0_1 | 0);
  fimport$4($0_1 | 0);
  fimport$4($1_1 | 0);
  global$0 = $2_1 + 32 | 0;
 }
 
 function $1050($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, 21640);
  $1973($0_1, 0, fimport$1(72748, $1_1 + 8 | 0) | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1051($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, 21648);
  $1973($0_1, 0, fimport$1(72748, $1_1 + 8 | 0) | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1052($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  if (!$1941(0, 83616)) {
   $1973(0, 83632, $1944(0, 32768));
   $1983(0, 83624, $1960(0, 32760), i64toi32_i32$HIGH_BITS);
   $1983(0, 83616, $1960(0, 32752), i64toi32_i32$HIGH_BITS);
   $1_1 = 83636;
   $3 = 19968;
   while (1) {
    $3 = $1941(($4_1 << 1) + 26752 | 0, 0) + $3 | 0;
    $1970($1_1, 0, $3);
    $1970($1_1, 2, $3);
    $1_1 = $1_1 + 4 | 0;
    $4_1 = $4_1 + 1 | 0;
    if (($4_1 | 0) != 2999) {
     continue
    }
    break;
   };
   $1970($1_1, 0, 0);
  }
  $1973($2_1, 8, 83616);
  $1973($0_1, 0, fimport$1(72748, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1053($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, 21680);
  $1973($0_1, 0, fimport$1(72748, $1_1 + 8 | 0) | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1054($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  if (!$1941(0, 73584)) {
   $1983(0, 73600, $1960(0, 26736), i64toi32_i32$HIGH_BITS);
   $1983(0, 73592, $1960(0, 26728), i64toi32_i32$HIGH_BITS);
   $1983(0, 73584, $1960(0, 26720), i64toi32_i32$HIGH_BITS);
   $1_1 = 73608;
   $3 = 19968;
   while (1) {
    $3 = $1941(($4_1 << 1) + 21712 | 0, 0) + $3 | 0;
    $1970($1_1, 0, $3);
    $1970($1_1, 2, $3);
    $1_1 = $1_1 + 4 | 0;
    $4_1 = $4_1 + 1 | 0;
    if (($4_1 | 0) != 2500) {
     continue
    }
    break;
   };
   $1970($1_1, 0, 0);
  }
  $1973($2_1, 8, 73584);
  $1973($0_1, 0, fimport$1(72748, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1055($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, 32784);
  $1973($0_1, 0, fimport$1(72748, $1_1 + 8 | 0) | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1056($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, 32802);
  $1973($0_1, 0, fimport$1(72748, $1_1 + 8 | 0) | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1057($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, 32816);
  $1973($0_1, 0, fimport$1(72748, $1_1 + 8 | 0) | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1062($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1944($1_1, 4));
  $1973($0_1, 0, fimport$1(72724, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1063($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0.0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = +fimport$5($1944($1_1, 0) | 0, 72724, $2_1 + 12 | 0);
  fimport$6($1944($2_1, 12) | 0);
  if (Math_abs($3) < 2147483648.0) {
   $1_1 = ~~$3
  } else {
   $1_1 = -2147483648
  }
  $1973($0_1, 4, $1_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1067($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 44 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1068($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  if (($1944($0_1, 52) | 0) > 0) {
   while (1) {
    $1973($2_1, 8, $1944($1944($0_1, 60) + ($3 << 2) | 0, 0));
    $5_1 = $2_1 + 8 | 0;
    $4_1 = fimport$1(50504, $5_1 | 0) | 0;
    fimport$10($4_1 | 0);
    $1973($2_1, 8, $4_1);
    fimport$4(fimport$16($1944($1_1, 0) | 0, 1, 48472, $5_1 | 0) | 0);
    fimport$4($4_1 | 0);
    $3 = $3 + 1 | 0;
    if (($1944($0_1, 52) | 0) > ($3 | 0)) {
     continue
    }
    break;
   }
  }
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1070($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $4_1 = $1944($0_1, 8);
  $2_1 = $1944($0_1, 4);
  if ($1_1 >>> 0 <= $4_1 - $2_1 >>> 0) {
   if ($1_1) {
    $2_1 = $1604($2_1, 0, $1_1) + $1_1 | 0
   }
   $1973($0_1, 4, $2_1);
   return;
  }
  $3 = $2_1;
  $2_1 = $1944($0_1, 0);
  $5_1 = $3 - $2_1 | 0;
  $3 = $5_1 + $1_1 | 0;
  if (($3 | 0) >= 0) {
   $4_1 = $4_1 - $2_1 | 0;
   $6_1 = $4_1 << 1;
   $3 = $4_1 >>> 0 >= 1073741823 ? 2147483647 : $3 >>> 0 < $6_1 >>> 0 ? $6_1 : $3;
   label$5 : {
    if (!$3) {
     $3 = 0;
     $4_1 = 0;
     break label$5;
    }
    $4_1 = $1783($3);
   }
   $6_1 = $1604($4_1 + $5_1 | 0, 0, $1_1);
   $5_1 = $1603($4_1, $2_1, $5_1);
   $1973($0_1, 8, $3 + $5_1 | 0);
   $1973($0_1, 4, $1_1 + $6_1 | 0);
   $1973($0_1, 0, $5_1);
   if ($2_1) {
    $1756($2_1)
   }
   return;
  }
  $1071();
  wasm2js_trap();
 }
 
 function $1071() {
  $813(5988);
  wasm2js_trap();
 }
 
 function $1072() {
  var $0_1 = 0, $1_1 = 0;
  fimport$11(52060, 52088, 52124, 0, 48504, 324, 48612, 0, 48612, 0, 2685, 48614, 325);
  $0_1 = $1783(4);
  $1973($0_1, 0, 0);
  $1_1 = $1783(4);
  $1973($1_1, 0, 0);
  fimport$12(52060, 4951, 72724, 49e3, 326, $0_1 | 0, 72724, 49004, 327, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 328);
  fimport$12(52060, 4621, 48496, 49e3, 329, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 330);
  fimport$12(52060, 10422, 48496, 49e3, 329, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 331);
  fimport$12(52060, 4549, 48496, 49e3, 329, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 332);
  fimport$12(52060, 10331, 48496, 49e3, 329, $0_1 | 0, 0, 0, 0, 0);
 }
 
 function $1073($0_1) {
  $0_1 = $0_1 | 0;
  return 52060;
 }
 
 function $1082() {
  var $0_1 = 0, $1_1 = 0;
  fimport$11(52152, 52172, 52200, 0, 48504, 333, 48612, 0, 48612, 0, 14828, 48614, 334);
  $0_1 = $1783(4);
  $1973($0_1, 0, 0);
  $1_1 = $1783(4);
  $1973($1_1, 0, 0);
  fimport$12(52152, 4932, 72724, 49e3, 335, $0_1 | 0, 72724, 49004, 336, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 4);
  $1_1 = $1783(4);
  $1973($1_1, 0, 4);
  fimport$12(52152, 4944, 72724, 49e3, 335, $0_1 | 0, 72724, 49004, 336, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 337);
  fimport$12(52152, 10047, 48496, 49e3, 338, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 16);
  $1_1 = $1783(4);
  $1973($1_1, 0, 16);
  fimport$12(52152, 11066, 72796, 48692, 339, $0_1 | 0, 72796, 48696, 340, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 20);
  $1_1 = $1783(4);
  $1973($1_1, 0, 20);
  fimport$12(52152, 10741, 72796, 48692, 339, $0_1 | 0, 72796, 48696, 340, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 341);
  $1_1 = $1783(4);
  $1973($1_1, 0, 342);
  fimport$12(52152, 11124, 48496, 49e3, 338, $0_1 | 0, 48496, 49004, 343, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 344);
  $1_1 = $1783(4);
  $1973($1_1, 0, 345);
  fimport$12(52152, 11136, 48496, 49e3, 338, $0_1 | 0, 48496, 49004, 343, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 32);
  $1_1 = $1783(4);
  $1973($1_1, 0, 32);
  fimport$12(52152, 11045, 72796, 48692, 339, $0_1 | 0, 72796, 48696, 340, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 36);
  $1_1 = $1783(4);
  $1973($1_1, 0, 36);
  fimport$12(52152, 2631, 72796, 48692, 339, $0_1 | 0, 72796, 48696, 340, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 40);
  $1_1 = $1783(4);
  $1973($1_1, 0, 40);
  fimport$12(52152, 11826, 72796, 48692, 339, $0_1 | 0, 72796, 48696, 340, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 346);
  fimport$13(52152, 6971, 3, 52216, 48740, 347, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 348);
  fimport$13(52152, 6957, 4, 52240, 48720, 349, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 132);
  $1_1 = $1783(4);
  $1973($1_1, 0, 132);
  fimport$12(52152, 1232, 72796, 48692, 339, $0_1 | 0, 72796, 48696, 340, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 136);
  $1_1 = $1783(4);
  $1973($1_1, 0, 136);
  fimport$12(52152, 10727, 72796, 48692, 339, $0_1 | 0, 72796, 48696, 340, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 350);
  $1_1 = $1783(4);
  $1973($1_1, 0, 351);
  fimport$12(52152, 13778, 48496, 49e3, 338, $0_1 | 0, 48496, 49004, 343, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 352);
  fimport$12(52152, 4187, 48496, 49e3, 338, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 148);
  $1_1 = $1783(4);
  $1973($1_1, 0, 148);
  fimport$12(52152, 11509, 72796, 48692, 339, $0_1 | 0, 72796, 48696, 340, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 152);
  $1_1 = $1783(4);
  $1973($1_1, 0, 152);
  fimport$12(52152, 9018, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 355);
  $1_1 = $1783(4);
  $1973($1_1, 0, 356);
  fimport$12(52152, 3138, 48496, 49e3, 338, $0_1 | 0, 48496, 49004, 343, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 357);
  fimport$12(52152, 11485, 48496, 49e3, 338, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 168);
  $1_1 = $1783(4);
  $1973($1_1, 0, 168);
  fimport$12(52152, 6040, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 169);
  $1_1 = $1783(4);
  $1973($1_1, 0, 169);
  fimport$12(52152, 4265, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 170);
  $1_1 = $1783(4);
  $1973($1_1, 0, 170);
  fimport$12(52152, 8460, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 171);
  $1_1 = $1783(4);
  $1973($1_1, 0, 171);
  fimport$12(52152, 2048, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 172);
  $1_1 = $1783(4);
  $1973($1_1, 0, 172);
  fimport$12(52152, 5216, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 173);
  $1_1 = $1783(4);
  $1973($1_1, 0, 173);
  fimport$12(52152, 1189, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 176);
  $1_1 = $1783(4);
  $1973($1_1, 0, 176);
  fimport$12(52152, 6226, 72796, 48692, 339, $0_1 | 0, 72796, 48696, 340, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 358);
  $1_1 = $1783(4);
  $1973($1_1, 0, 359);
  fimport$12(52152, 11227, 48496, 49e3, 338, $0_1 | 0, 48496, 49004, 343, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 360);
  $1_1 = $1783(4);
  $1973($1_1, 0, 361);
  fimport$12(52152, 11188, 48496, 49e3, 338, $0_1 | 0, 48496, 49004, 343, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 362);
  $1_1 = $1783(4);
  $1973($1_1, 0, 363);
  fimport$12(52152, 13721, 48496, 49e3, 338, $0_1 | 0, 48496, 49004, 343, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 364);
  $1_1 = $1783(4);
  $1973($1_1, 0, 365);
  fimport$12(52152, 13697, 48496, 49e3, 338, $0_1 | 0, 48496, 49004, 343, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 366);
  $1_1 = $1783(4);
  $1973($1_1, 0, 367);
  fimport$12(52152, 13745, 48496, 49e3, 338, $0_1 | 0, 48496, 49004, 343, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 368);
  $1_1 = $1783(4);
  $1973($1_1, 0, 369);
  fimport$12(52152, 7905, 48496, 49e3, 338, $0_1 | 0, 48496, 49004, 343, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 370);
  $1_1 = $1783(4);
  $1973($1_1, 0, 371);
  fimport$12(52152, 7886, 48496, 49e3, 338, $0_1 | 0, 48496, 49004, 343, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 372);
  $1_1 = $1783(4);
  $1973($1_1, 0, 373);
  fimport$12(52152, 13769, 48496, 49e3, 338, $0_1 | 0, 48496, 49004, 343, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 374);
  fimport$12(52152, 4576, 48496, 49e3, 338, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 375);
  fimport$13(52152, 7224, 3, 52256, 48740, 376, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 377);
  fimport$13(52152, 7207, 4, 52272, 48720, 378, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 236);
  $1_1 = $1783(4);
  $1973($1_1, 0, 236);
  fimport$12(52152, 8318, 72796, 48692, 339, $0_1 | 0, 72796, 48696, 340, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 244);
  $1_1 = $1783(4);
  $1973($1_1, 0, 244);
  fimport$12(52152, 8071, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 245);
  $1_1 = $1783(4);
  $1973($1_1, 0, 245);
  fimport$12(52152, 3420, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 246);
  $1_1 = $1783(4);
  $1973($1_1, 0, 246);
  fimport$12(52152, 3195, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 247);
  $1_1 = $1783(4);
  $1973($1_1, 0, 247);
  fimport$12(52152, 6200, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 379);
  fimport$13(52152, 7164, 3, 52256, 48740, 376, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 380);
  fimport$13(52152, 7148, 4, 52272, 48720, 378, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 381);
  fimport$13(52152, 4111, 3, 52288, 51660, 382, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 383);
  fimport$13(52152, 4094, 4, 52304, 52320, 384, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 385);
  fimport$13(52152, 6182, 3, 52328, 49004, 386, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 387);
  fimport$13(52152, 16192, 3, 52340, 49004, 388, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 389);
  fimport$13(52152, 16192, 3, 52352, 49004, 390, $0_1 | 0, 0, 0);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 391);
  fimport$13(52152, 4287, 2, 52364, 49408, 392, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 840);
  $1_1 = $1783(4);
  $1973($1_1, 0, 840);
  fimport$12(52152, 10755, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 841);
  $1_1 = $1783(4);
  $1973($1_1, 0, 841);
  fimport$12(52152, 11703, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 842);
  $1_1 = $1783(4);
  $1973($1_1, 0, 842);
  fimport$12(52152, 2148, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 843);
  $1_1 = $1783(4);
  $1973($1_1, 0, 843);
  fimport$12(52152, 4557, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 844);
  $1_1 = $1783(4);
  $1973($1_1, 0, 844);
  fimport$12(52152, 4861, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 845);
  $1_1 = $1783(4);
  $1973($1_1, 0, 845);
  fimport$12(52152, 10476, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 846);
  $1_1 = $1783(4);
  $1973($1_1, 0, 846);
  fimport$12(52152, 11355, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 848);
  $1_1 = $1783(4);
  $1973($1_1, 0, 848);
  fimport$12(52152, 10692, 72796, 48692, 339, $0_1 | 0, 72796, 48696, 340, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 852);
  $1_1 = $1783(4);
  $1973($1_1, 0, 852);
  fimport$12(52152, 5245, 72724, 49e3, 335, $0_1 | 0, 72724, 49004, 336, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 856);
  $1_1 = $1783(4);
  $1973($1_1, 0, 856);
  fimport$12(52152, 5267, 72724, 49e3, 335, $0_1 | 0, 72724, 49004, 336, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 860);
  $1_1 = $1783(4);
  $1973($1_1, 0, 860);
  fimport$12(52152, 3909, 72724, 49e3, 335, $0_1 | 0, 72724, 49004, 336, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 864);
  $1_1 = $1783(4);
  $1973($1_1, 0, 864);
  fimport$12(52152, 3930, 72724, 49e3, 335, $0_1 | 0, 72724, 49004, 336, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 868);
  $1_1 = $1783(4);
  $1973($1_1, 0, 868);
  fimport$12(52152, 4720, 72724, 49e3, 335, $0_1 | 0, 72724, 49004, 336, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 393);
  fimport$12(52152, 13610, 48496, 49e3, 338, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 880);
  $1_1 = $1783(4);
  $1973($1_1, 0, 880);
  fimport$12(52152, 10772, 72652, 49e3, 353, $0_1 | 0, 72652, 49004, 354, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 394);
  fimport$13(52152, 4602, 3, 52372, 48740, 395, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 396);
  fimport$13(52152, 7539, 3, 52288, 51660, 382, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 397);
  fimport$13(52152, 7486, 3, 52288, 51660, 382, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 398);
  fimport$13(52152, 7510, 3, 52288, 51660, 382, $0_1 | 0, 0, 0);
 }
 
 function $1083($0_1) {
  $0_1 = $0_1 | 0;
  return 52152;
 }
 
 function $1084($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  if ($0_1) {
   $1_1 = $1944($0_1 + 5404 | 0, 0);
   if ($1_1) {
    $17($1_1)
   }
   $1756($0_1);
  }
 }
 
 function $1087($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 8 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1091($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = $1944($1_1, 24);
  if ($1_1) {
   $1_1 = fimport$2($1_1 | 0) | 0
  } else {
   $1_1 = 2
  }
  $1973($0_1, 0, $1_1);
 }
 
 function $1092($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0.0, $7_1 = 0, $8 = 0, $9 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $5_1 = $1944(0, 95660);
  $6_1 = +fimport$5($1944($1_1, 0) | 0, 49072, $2_1 + 12 | 0);
  label$1 : {
   if ($6_1 < 4294967296.0 & $6_1 >= 0.0) {
    $7_1 = ~~$6_1 >>> 0;
    break label$1;
   }
   $7_1 = 0;
  }
  $4_1 = $1944($7_1, 0);
  if ($4_1 >>> 0 < 2147483632) {
   $9 = $1944($2_1, 12);
   label$4 : {
    if ($4_1 >>> 0 <= 10) {
     $1968($2_1, 11, $4_1);
     $3 = $2_1;
     break label$4;
    }
    $8 = ($4_1 | 15) + 1 | 0;
    $3 = $1783($8);
    $1973($2_1, 8, $8 | -2147483648);
    $1973($2_1, 0, $3);
    $1973($2_1, 4, $4_1);
   }
   if ($4_1) {
    $1602($3, $7_1 + 4 | 0, $4_1)
   }
   $1968($3 + $4_1 | 0, 0, 0);
   fimport$6($9 | 0);
   $3 = $5_1 + 4 | 0;
   if (($1936($5_1, 15) | 0) < 0) {
    $1756($1944($3, 0))
   }
   $1982($3, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
   $1973($3 + 8 | 0, 0, $1944($2_1 + 8 | 0, 0));
   if (($1944($1_1, 0) | 0) != 2) {
    $1_1 = (wasm2js_i32$0 = $1944($5_1, 4), wasm2js_i32$1 = $3, wasm2js_i32$2 = ($1936($5_1, 15) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1)
   } else {
    $1_1 = 0
   }
   $1973($0_1, 24, $1_1);
   global$0 = $2_1 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1094($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = $1944($1_1, 28);
  if ($1_1) {
   $1_1 = fimport$2($1_1 | 0) | 0
  } else {
   $1_1 = 2
  }
  $1973($0_1, 0, $1_1);
 }
 
 function $1095($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0.0, $7_1 = 0, $8 = 0, $9 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $5_1 = $1944(0, 95660);
  $6_1 = +fimport$5($1944($1_1, 0) | 0, 49072, $2_1 + 12 | 0);
  label$1 : {
   if ($6_1 < 4294967296.0 & $6_1 >= 0.0) {
    $7_1 = ~~$6_1 >>> 0;
    break label$1;
   }
   $7_1 = 0;
  }
  $4_1 = $1944($7_1, 0);
  if ($4_1 >>> 0 < 2147483632) {
   $9 = $1944($2_1, 12);
   label$4 : {
    if ($4_1 >>> 0 <= 10) {
     $1968($2_1, 11, $4_1);
     $3 = $2_1;
     break label$4;
    }
    $8 = ($4_1 | 15) + 1 | 0;
    $3 = $1783($8);
    $1973($2_1, 8, $8 | -2147483648);
    $1973($2_1, 0, $3);
    $1973($2_1, 4, $4_1);
   }
   if ($4_1) {
    $1602($3, $7_1 + 4 | 0, $4_1)
   }
   $1968($3 + $4_1 | 0, 0, 0);
   fimport$6($9 | 0);
   $3 = $5_1 + 16 | 0;
   if (($1936($5_1, 27) | 0) < 0) {
    $1756($1944($3, 0))
   }
   $1982($3, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
   $1973($3 + 8 | 0, 0, $1944($2_1 + 8 | 0, 0));
   if (($1944($1_1, 0) | 0) != 2) {
    $1_1 = (wasm2js_i32$0 = $1944($5_1, 16), wasm2js_i32$1 = $3, wasm2js_i32$2 = ($1936($5_1, 27) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1)
   } else {
    $1_1 = 0
   }
   $1973($0_1, 28, $1_1);
   global$0 = $2_1 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1096($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = -1;
  if ($1_1 >>> 0 <= 21) {
   $2_1 = $1944((($1_1 << 2) + $0_1 | 0) + 44 | 0, 0)
  }
  return $2_1 | 0;
 }
 
 function $1097($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  return FUNCTION_TABLE[$1944($0_1, 0) | 0]($1_1, $2_1) | 0;
 }
 
 function $1098($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  if ($1_1 >>> 0 <= 21) {
   $1973((($1_1 << 2) + $0_1 | 0) + 44 | 0, 0, $2_1)
  }
  return $1_1 >>> 0 < 22 | 0;
 }
 
 function $1099($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  return FUNCTION_TABLE[$1944($0_1, 0) | 0]($1_1, $2_1, $3) | 0;
 }
 
 function $1100($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = $0_1;
  $0_1 = $1944($1944(0, 95660), 28);
  $1973($1_1, 0, $0_1);
  fimport$10($0_1 | 0);
 }
 
 function $1101($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $0_1 = $1944(0, 95660);
  fimport$10($1944($1_1, 0) | 0);
  fimport$4($1944($0_1, 28) | 0);
  $1973($0_1, 28, $1944($1_1, 0));
 }
 
 function $1102($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = $1944($1_1, 144);
  label$1 : {
   if (!$1_1) {
    $1973($0_1, 0, 2);
    break label$1;
   }
   $1973($2_1, 8, $1_1);
   $1973($0_1, 0, fimport$1(51852, $2_1 + 8 | 0) | 0);
  }
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1105($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = $1944($1_1, 156);
  label$1 : {
   if (!$1_1) {
    $1973($0_1, 0, 2);
    break label$1;
   }
   $1973($2_1, 8, $1_1);
   $1973($0_1, 0, fimport$1(50504, $2_1 + 8 | 0) | 0);
  }
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1106($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0.0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = $1944($1_1, 0);
  if (($1_1 | 0) == 2) {
   $1_1 = 0
  } else {
   $3 = +fimport$5($1_1 | 0, 50504, $2_1 + 12 | 0);
   fimport$6($1944($2_1, 12) | 0);
   if ($3 < 4294967296.0 & $3 >= 0.0) {
    $1_1 = ~~$3 >>> 0
   } else {
    $1_1 = 0
   }
  }
  $1973($0_1, 156, $1_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1107($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 160 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1108($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = $0_1;
  $0_1 = $1944($1944(0, 95660), 32);
  $1973($1_1, 0, $0_1);
  fimport$10($0_1 | 0);
 }
 
 function $1109($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $0_1 = $1944(0, 95660);
  fimport$10($1944($1_1, 0) | 0);
  fimport$4($1944($0_1, 32) | 0);
  $1973($0_1, 32, $1944($1_1, 0));
 }
 
 function $1110($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = $0_1;
  $0_1 = $1944($1944(0, 95660), 36);
  $1973($1_1, 0, $0_1);
  fimport$10($0_1 | 0);
 }
 
 function $1111($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $0_1 = $1944(0, 95660);
  fimport$10($1944($1_1, 0) | 0);
  fimport$4($1944($0_1, 36) | 0);
  $1973($0_1, 36, $1944($1_1, 0));
 }
 
 function $1112($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = $0_1;
  $0_1 = $1944($1944(0, 95660), 40);
  $1973($1_1, 0, $0_1);
  fimport$10($0_1 | 0);
 }
 
 function $1113($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $0_1 = $1944(0, 95660);
  fimport$10($1944($1_1, 0) | 0);
  fimport$4($1944($0_1, 40) | 0);
  $1973($0_1, 40, $1944($1_1, 0));
 }
 
 function $1114($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = $0_1;
  $0_1 = $1944($1944(0, 95660), 44);
  $1973($1_1, 0, $0_1);
  fimport$10($0_1 | 0);
 }
 
 function $1115($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $0_1 = $1944(0, 95660);
  fimport$10($1944($1_1, 0) | 0);
  fimport$4($1944($0_1, 44) | 0);
  $1973($0_1, 44, $1944($1_1, 0));
 }
 
 function $1116($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = $0_1;
  $0_1 = $1944($1944(0, 95660), 48);
  $1973($1_1, 0, $0_1);
  fimport$10($0_1 | 0);
 }
 
 function $1117($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $0_1 = $1944(0, 95660);
  fimport$10($1944($1_1, 0) | 0);
  fimport$4($1944($0_1, 48) | 0);
  $1973($0_1, 48, $1944($1_1, 0));
 }
 
 function $1118($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = $0_1;
  $0_1 = $1944($1944(0, 95660), 64);
  $1973($1_1, 0, $0_1);
  fimport$10($0_1 | 0);
 }
 
 function $1119($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $0_1 = $1944(0, 95660);
  fimport$10($1944($1_1, 0) | 0);
  fimport$4($1944($0_1, 64) | 0);
  $1973($0_1, 64, $1944($1_1, 0));
 }
 
 function $1120($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = $0_1;
  $0_1 = $1944($1944(0, 95660), 68);
  $1973($1_1, 0, $0_1);
  fimport$10($0_1 | 0);
 }
 
 function $1121($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $0_1 = $1944(0, 95660);
  fimport$10($1944($1_1, 0) | 0);
  fimport$4($1944($0_1, 68) | 0);
  $1973($0_1, 68, $1944($1_1, 0));
 }
 
 function $1122($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $1_1 = $0_1;
  $0_1 = $1944($1944(0, 95660), 72);
  $1973($1_1, 0, $0_1);
  fimport$10($0_1 | 0);
 }
 
 function $1123($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $0_1 = $1944(0, 95660);
  fimport$10($1944($1_1, 0) | 0);
  fimport$4($1944($0_1, 72) | 0);
  $1973($0_1, 72, $1944($1_1, 0));
 }
 
 function $1124($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 220 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1125($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  if ($1_1 >>> 0 <= 4) {
   $2_1 = ($1937(($0_1 + $1_1 | 0) + 228 | 0, 0) | 0) != 0
  }
  return $2_1 | 0;
 }
 
 function $1127($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  if ($1_1 >>> 0 <= 4) {
   $1968(($0_1 + $1_1 | 0) + 228 | 0, 0, $2_1)
  }
  return $1_1 >>> 0 < 5 | 0;
 }
 
 function $1129($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  if ($1_1 >>> 0 <= 511) {
   $2_1 = ($1937(($0_1 + $1_1 | 0) + 248 | 0, 0) | 0) != 0
  }
  return $2_1 | 0;
 }
 
 function $1130($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  if ($1_1 >>> 0 <= 511) {
   $1968(($0_1 + $1_1 | 0) + 248 | 0, 0, $2_1)
  }
  return $1_1 >>> 0 < 512 | 0;
 }
 
 function $1131($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = Math_fround(0);
  if ($1_1 >>> 0 <= 19) {
   $2_1 = $1963((($1_1 << 2) + $0_1 | 0) + 760 | 0, 0)
  }
  return Math_fround($2_1);
 }
 
 function $1132($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  return Math_fround(Math_fround(FUNCTION_TABLE[$1944($0_1, 0) | 0]($1_1, $2_1)));
 }
 
 function $1133($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  if ($1_1 >>> 0 <= 19) {
   $1986((($1_1 << 2) + $0_1 | 0) + 760 | 0, 0, $2_1)
  }
  return $1_1 >>> 0 < 20 | 0;
 }
 
 function $1134($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = Math_fround($3);
  return FUNCTION_TABLE[$1944($0_1, 0) | 0]($1_1, $2_1, $3) | 0;
 }
 
 function $1136($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = $1_1 & 65535;
  $3 = $0_1;
  $0_1 = $1941($3, 5394);
  if (($1_1 | $0_1) & 65535) {
   __inlined_func$8 : {
    $2_1 = $1_1 & 64512;
    if (($2_1 | 0) == 55296) {
     if ($0_1 & 65535) {
      $2_1 = $1944($3, 5396);
      $0_1 = $1944($3 + 5400 | 0, 0);
      label$4 : {
       if (($2_1 | 0) != ($0_1 | 0)) {
        break label$4
       }
       $4_1 = $0_1;
       $0_1 = $0_1 ? $0_1 + (($0_1 | 0) / 2 | 0) | 0 : 8;
       $2_1 = $2_1 + 1 | 0;
       $0_1 = ($0_1 | 0) > ($2_1 | 0) ? $0_1 : $2_1;
       if (($4_1 | 0) >= ($0_1 | 0)) {
        break label$4
       }
       $2_1 = $1944(0, 73568);
       if ($2_1) {
        $2_1 = $2_1 + 876 | 0;
        $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
       }
       $2_1 = (((wasm2js_i32$1 = $0_1 << 1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
       $4_1 = $1944($3 + 5404 | 0, 0);
       if ($4_1) {
        $1602($2_1, $4_1, $1944($3, 5396) << 1);
        $4_1 = $1944($3, 5404);
        label$9 : {
         if (!$4_1) {
          break label$9
         }
         $5_1 = $1944(0, 73568);
         if (!$5_1) {
          break label$9
         }
         $5_1 = $5_1 + 876 | 0;
         $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
        }
        ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
       }
       $1973($3, 5400, $0_1);
       $1973($3, 5404, $2_1);
      }
      $1970($1944($3 + 5404 | 0, 0) + ($1944($3, 5396) << 1) | 0, 0, 65533);
      $1973($3, 5396, $1944($3, 5396) + 1 | 0);
     }
     $1970($3, 5394, $1_1);
     break __inlined_func$8;
    }
    if ($0_1 & 65535) {
     $0_1 = 65533;
     if (($2_1 | 0) != 56320) {
      $2_1 = $1944($3, 5396);
      $0_1 = $1944($3 + 5400 | 0, 0);
      label$13 : {
       if (($2_1 | 0) != ($0_1 | 0)) {
        break label$13
       }
       $4_1 = $0_1;
       $0_1 = $0_1 ? $0_1 + (($0_1 | 0) / 2 | 0) | 0 : 8;
       $2_1 = $2_1 + 1 | 0;
       $0_1 = ($0_1 | 0) > ($2_1 | 0) ? $0_1 : $2_1;
       if (($4_1 | 0) >= ($0_1 | 0)) {
        break label$13
       }
       $2_1 = $1944(0, 73568);
       if ($2_1) {
        $2_1 = $2_1 + 876 | 0;
        $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
       }
       $2_1 = (((wasm2js_i32$1 = $0_1 << 1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
       $4_1 = $1944($3 + 5404 | 0, 0);
       if ($4_1) {
        $1602($2_1, $4_1, $1944($3, 5396) << 1);
        $4_1 = $1944($3, 5404);
        label$18 : {
         if (!$4_1) {
          break label$18
         }
         $5_1 = $1944(0, 73568);
         if (!$5_1) {
          break label$18
         }
         $5_1 = $5_1 + 876 | 0;
         $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
        }
        ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
       }
       $1973($3, 5400, $0_1);
       $1973($3, 5404, $2_1);
      }
      $1970($1944($3 + 5404 | 0, 0) + ($1944($3, 5396) << 1) | 0, 0, 65533);
      $1973($3, 5396, $1944($3, 5396) + 1 | 0);
      $0_1 = $1_1;
     }
     $1970($3, 5394, 0);
     $1_1 = $0_1;
    }
    $2_1 = $1944($3, 5396);
    $0_1 = $1944($3 + 5400 | 0, 0);
    label$19 : {
     if (($2_1 | 0) != ($0_1 | 0)) {
      break label$19
     }
     $4_1 = $0_1;
     $0_1 = $0_1 ? $0_1 + (($0_1 | 0) / 2 | 0) | 0 : 8;
     $2_1 = $2_1 + 1 | 0;
     $0_1 = ($0_1 | 0) > ($2_1 | 0) ? $0_1 : $2_1;
     if (($4_1 | 0) >= ($0_1 | 0)) {
      break label$19
     }
     $2_1 = $1944(0, 73568);
     if ($2_1) {
      $2_1 = $2_1 + 876 | 0;
      $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
     }
     $2_1 = (((wasm2js_i32$1 = $0_1 << 1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
     $4_1 = $1944($3 + 5404 | 0, 0);
     if ($4_1) {
      $1602($2_1, $4_1, $1944($3, 5396) << 1);
      $4_1 = $1944($3, 5404);
      label$24 : {
       if (!$4_1) {
        break label$24
       }
       $5_1 = $1944(0, 73568);
       if (!$5_1) {
        break label$24
       }
       $5_1 = $5_1 + 876 | 0;
       $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
      }
      ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     }
     $1973($3, 5400, $0_1);
     $1973($3, 5404, $2_1);
    }
    $1970($1944($3 + 5404 | 0, 0) + ($1944($3, 5396) << 1) | 0, 0, $1_1);
    $1973($3, 5396, $1944($3, 5396) + 1 | 0);
   }
  }
 }
 
 function $1138($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = (wasm2js_i32$0 = $1944($1_1, 0), wasm2js_i32$1 = $1_1, wasm2js_i32$2 = ($1936($1_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  if ($1937($1_1, 0)) {
   while (1) {
    $1973($5_1, 12, 0);
    $1_1 = $10($5_1 + 12 | 0, $1_1, 0) + $1_1 | 0;
    $7_1 = $1944($5_1, 12);
    if ($7_1) {
     $3 = $1944($0_1, 5396);
     $2_1 = $1944($0_1, 5400);
     label$4 : {
      if (($3 | 0) != ($2_1 | 0)) {
       break label$4
      }
      $4_1 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
      $3 = $3 + 1 | 0;
      $3 = ($3 | 0) < ($4_1 | 0) ? $4_1 : $3;
      if (($2_1 | 0) >= ($3 | 0)) {
       break label$4
      }
      $2_1 = $1944(0, 73568);
      if ($2_1) {
       $2_1 = $2_1 + 876 | 0;
       $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
      }
      $2_1 = (((wasm2js_i32$1 = $3 << 1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
      $4_1 = $1944($0_1, 5404);
      if ($4_1) {
       $1602($2_1, $4_1, $1944($0_1, 5396) << 1);
       $4_1 = $1944($0_1, 5404);
       label$9 : {
        if (!$4_1) {
         break label$9
        }
        $6_1 = $1944(0, 73568);
        if (!$6_1) {
         break label$9
        }
        $6_1 = $6_1 + 876 | 0;
        $1973($6_1, 0, $1944($6_1, 0) - 1 | 0);
       }
       ((wasm2js_i32$2 = $4_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      }
      $1973($0_1, 5400, $3);
      $1973($0_1, 5404, $2_1);
     }
     $1970($1944($0_1, 5404) + ($1944($0_1, 5396) << 1) | 0, 0, $7_1);
     $1973($0_1, 5396, $1944($0_1, 5396) + 1 | 0);
    }
    if ($1937($1_1, 0)) {
     continue
    }
    break;
   }
  }
  global$0 = $5_1 + 16 | 0;
 }
 
 function $1139($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $4_1 = $1944($2_1, 0);
  if ($4_1 >>> 0 < 2147483632) {
   $6_1 = $1944($0_1, 0);
   label$2 : {
    if ($4_1 >>> 0 <= 10) {
     $1968($3, 15, $4_1);
     $0_1 = $3 + 4 | 0;
     break label$2;
    }
    $5_1 = ($4_1 | 15) + 1 | 0;
    $0_1 = $1783($5_1);
    $1973($3, 12, $5_1 | -2147483648);
    $1973($3, 4, $0_1);
    $1973($3, 8, $4_1);
   }
   if ($4_1) {
    $1602($0_1, $2_1 + 4 | 0, $4_1)
   }
   $1968($0_1 + $4_1 | 0, 0, 0);
   FUNCTION_TABLE[$6_1 | 0]($1_1, $3 + 4 | 0);
   if (($1936($3, 15) | 0) < 0) {
    $1756($1944($3, 4))
   }
   global$0 = $3 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1141($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 872 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1142($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  label$1 : {
   if ($2_1 >>> 0 <= 4) {
    $1973($3, 8, (($2_1 << 3) + $1_1 | 0) + 900 | 0);
    $1973($0_1, 0, fimport$1(48676, $3 + 8 | 0) | 0);
    break label$1;
   }
   $1973($0_1, 0, 1);
  }
  global$0 = $3 + 16 | 0;
 }
 
 function $1144($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = Math_fround(0);
  $2_1 = Math_fround(-1.0);
  if ($1_1 >>> 0 <= 4) {
   $2_1 = $1963((($1_1 << 2) + $0_1 | 0) + 1032 | 0, 0)
  }
  return Math_fround($2_1);
 }
 
 function $1145($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = Math_fround(0);
  $2_1 = Math_fround(-1.0);
  if ($1_1 >>> 0 <= 511) {
   $2_1 = $1963((($1_1 << 2) + $0_1 | 0) + 1132 | 0, 0)
  }
  return Math_fround($2_1);
 }
 
 function $1146($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = Math_fround(0);
  $2_1 = Math_fround(-1.0);
  if ($1_1 >>> 0 <= 19) {
   $2_1 = $1963((($1_1 << 2) + $0_1 | 0) + 5228 | 0, 0)
  }
  return Math_fround($2_1);
 }
 
 function $1147() {
  var $0_1 = 0, $1_1 = 0;
  fimport$11(52400, 52424, 52456, 0, 48504, 399, 48612, 0, 48612, 0, 11269, 48614, 400);
  $0_1 = $1783(4);
  $1973($0_1, 0, 0);
  $1_1 = $1783(4);
  $1973($1_1, 0, 0);
  fimport$12(52400, 13933, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 4);
  $1_1 = $1783(4);
  $1973($1_1, 0, 4);
  fimport$12(52400, 13925, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 403);
  fimport$12(52400, 9162, 48496, 49e3, 404, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 16);
  $1_1 = $1783(4);
  $1973($1_1, 0, 16);
  fimport$12(52400, 9055, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 20);
  $1_1 = $1783(4);
  $1973($1_1, 0, 20);
  fimport$12(52400, 10212, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 405);
  fimport$12(52400, 10305, 48496, 49e3, 404, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 406);
  fimport$12(52400, 7720, 48496, 49e3, 404, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 40);
  $1_1 = $1783(4);
  $1973($1_1, 0, 40);
  fimport$12(52400, 7414, 72724, 49e3, 407, $0_1 | 0, 72724, 49004, 408, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 44);
  $1_1 = $1783(4);
  $1973($1_1, 0, 44);
  fimport$12(52400, 9116, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 48);
  $1_1 = $1783(4);
  $1973($1_1, 0, 48);
  fimport$12(52400, 10261, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 52);
  $1_1 = $1783(4);
  $1973($1_1, 0, 52);
  fimport$12(52400, 9088, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 56);
  $1_1 = $1783(4);
  $1973($1_1, 0, 56);
  fimport$12(52400, 10229, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 409);
  fimport$12(52400, 9215, 48496, 49e3, 404, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 68);
  $1_1 = $1783(4);
  $1973($1_1, 0, 68);
  fimport$12(52400, 9102, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 72);
  $1_1 = $1783(4);
  $1973($1_1, 0, 72);
  fimport$12(52400, 10245, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 410);
  fimport$12(52400, 9318, 48496, 49e3, 404, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 411);
  fimport$12(52400, 9283, 48496, 49e3, 404, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 412);
  fimport$12(52400, 9176, 48496, 49e3, 404, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 413);
  fimport$12(52400, 9228, 48496, 49e3, 404, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 108);
  $1_1 = $1783(4);
  $1973($1_1, 0, 108);
  fimport$12(52400, 9269, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 112);
  $1_1 = $1783(4);
  $1973($1_1, 0, 112);
  fimport$12(52400, 9300, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 116);
  $1_1 = $1783(4);
  $1973($1_1, 0, 116);
  fimport$12(52400, 10291, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 120);
  $1_1 = $1783(4);
  $1973($1_1, 0, 120);
  fimport$12(52400, 9070, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 124);
  $1_1 = $1783(4);
  $1973($1_1, 0, 124);
  fimport$12(52400, 10319, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 128);
  $1_1 = $1783(4);
  $1973($1_1, 0, 128);
  fimport$12(52400, 9130, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 132);
  $1_1 = $1783(4);
  $1973($1_1, 0, 132);
  fimport$12(52400, 10929, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 136);
  $1_1 = $1783(4);
  $1973($1_1, 0, 136);
  fimport$12(52400, 9143, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 140);
  $1_1 = $1783(4);
  $1973($1_1, 0, 140);
  fimport$12(52400, 10277, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 144);
  $1_1 = $1783(4);
  $1973($1_1, 0, 144);
  fimport$12(52400, 7307, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 148);
  $1_1 = $1783(4);
  $1973($1_1, 0, 148);
  fimport$12(52400, 7439, 72724, 49e3, 407, $0_1 | 0, 72724, 49004, 408, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 414);
  fimport$12(52400, 7684, 48496, 49e3, 404, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 415);
  fimport$12(52400, 7700, 48496, 49e3, 404, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 416);
  fimport$12(52400, 9155, 48496, 49e3, 404, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 417);
  fimport$12(52400, 9246, 48496, 49e3, 404, $0_1 | 0, 0, 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 184);
  $1_1 = $1783(4);
  $1973($1_1, 0, 184);
  fimport$12(52400, 11468, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 188);
  $1_1 = $1783(4);
  $1973($1_1, 0, 188);
  fimport$12(52400, 5125, 72652, 49e3, 418, $0_1 | 0, 72652, 49004, 419, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 189);
  $1_1 = $1783(4);
  $1973($1_1, 0, 189);
  fimport$12(52400, 1481, 72652, 49e3, 418, $0_1 | 0, 72652, 49004, 419, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 190);
  $1_1 = $1783(4);
  $1973($1_1, 0, 190);
  fimport$12(52400, 8169, 72652, 49e3, 418, $0_1 | 0, 72652, 49004, 419, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 192);
  $1_1 = $1783(4);
  $1973($1_1, 0, 192);
  fimport$12(52400, 8122, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 196);
  $1_1 = $1783(4);
  $1973($1_1, 0, 196);
  fimport$12(52400, 6086, 72796, 48692, 401, $0_1 | 0, 72796, 48696, 402, $1_1 | 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 420);
  fimport$13(52400, 4251, 3, 52472, 48740, 421, $0_1 | 0, 0, 0);
  $0_1 = $1783(4);
  $1973($0_1, 0, 422);
  fimport$13(52400, 4237, 4, 52496, 48720, 423, $0_1 | 0, 0, 0);
  fimport$15(52400, 1, 52512, 48504, 424, 425);
  $0_1 = $1783(8);
  $1973($0_1, 4, 0);
  $1973($0_1, 0, 426);
  fimport$13(52400, 4957, 3, 52516, 48696, 427, $0_1 | 0, 0, 0);
 }
 
 function $1148($0_1) {
  $0_1 = $0_1 | 0;
  return 52400;
 }
 
 function $1154($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 24 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1158($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 60 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1159($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 76 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1160($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 84 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1161($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 92 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1162($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 100 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1163($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 152 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1165($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 168 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1166($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1 + 176 | 0);
  $1973($0_1, 0, fimport$1(48676, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1169($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  label$1 : {
   if ($2_1 >>> 0 <= 52) {
    $1973($3, 8, (($2_1 << 4) + $1_1 | 0) + 200 | 0);
    $1973($0_1, 0, fimport$1(48788, $3 + 8 | 0) | 0);
    break label$1;
   }
   $1973($0_1, 0, 1);
  }
  global$0 = $3 + 16 | 0;
 }
 
 function $1171($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  if ($1_1 >>> 0 <= 52) {
   $1983($3 + 8 | 0, 0, 0, 0);
   $1983($3, 0, 0, 0);
   $0_1 = ($1_1 << 4) + $0_1 | 0;
   $2_1 = $768($2_1, $3);
   $1982($0_1 + 200 | 0, 0, $1959($2_1, 0), i64toi32_i32$HIGH_BITS);
   $1982($0_1 + 208 | 0, 0, $1959($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
  }
  global$0 = $3 + 16 | 0;
  return $1_1 >>> 0 < 53 | 0;
 }
 
 function $1172($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $0_1 = $1944($0_1, 0);
  $1973($4_1, 12, $3);
  $0_1 = FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1, $4_1 + 12 | 0) | 0;
  fimport$4($1944($4_1, 12) | 0);
  global$0 = $4_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1174() {
  return $1($1783(1048)) | 0;
 }
 
 function $1175($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  var $3 = 0;
  $3 = $1944($0_1, 4);
  $1_1 = ($3 >> 1) + $1_1 | 0;
  $0_1 = $1944($0_1, 0);
  label$1 : {
   if (!($3 & 1)) {
    break label$1
   }
   $0_1 = $1944($1944($1_1, 0) + $0_1 | 0, 0);
  }
  FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1);
 }
 
 function $1176() {
  var $0_1 = 0, $1_1 = 0;
  $0_1 = global$0 - 16 | 0;
  global$0 = $0_1;
  $1968($0_1, 8, 0);
  $1973($0_1, 4, 909651505);
  $1968($0_1, 15, 4);
  $1_1 = $1755(8);
  $1973($1_1, 0, 4);
  $1602($1_1 + 4 | 0, $0_1 + 4 | 0, 4);
  fimport$19(14836, 49072, +($1_1 >>> 0));
  if (($1936($0_1, 15) | 0) < 0) {
   $1756($1944($0_1, 4))
  }
  fimport$9(14850, 1, 52528, 48504, 428, 429, 0);
  fimport$19(10393, 72760, 5408.0);
  fimport$19(10366, 72760, 1048.0);
  fimport$19(10416, 72760, 8.0);
  fimport$19(10405, 72760, 16.0);
  fimport$19(10132, 72760, 20.0);
  fimport$19(10059, 72760, 2.0);
  fimport$19(3449, 72760, 0.0);
  fimport$19(3544, 72760, 8.0);
  fimport$19(3501, 72760, 16.0);
  fimport$9(2034, 2, 52532, 49e3, 430, 431, 0);
  fimport$9(1966, 2, 52552, 49408, 432, 433, 0);
  fimport$9(1999, 1, 52560, 48504, 434, 435, 0);
  fimport$9(1981, 2, 52552, 49408, 432, 436, 0);
  fimport$9(14822, 1, 48472, 48504, 24, 437, 0);
  fimport$9(11260, 1, 48472, 48504, 24, 438, 0);
  fimport$9(11076, 1, 52564, 48614, 439, 440, 0);
  fimport$9(11085, 1, 52564, 48614, 439, 441, 0);
  fimport$9(6406, 1, 52564, 48614, 439, 442, 0);
  fimport$9(13634, 1, 48472, 48504, 24, 443, 0);
  fimport$9(1727, 2, 52568, 49408, 444, 445, 0);
  fimport$9(1709, 2, 52568, 49408, 444, 446, 0);
  fimport$9(1760, 2, 52568, 49408, 444, 447, 0);
  fimport$9(1669, 2, 52568, 49408, 444, 448, 0);
  fimport$9(5972, 2, 52568, 49408, 444, 449, 0);
  fimport$9(6012, 2, 52644, 49408, 450, 451, 0);
  fimport$9(5995, 2, 52644, 49408, 450, 452, 0);
  fimport$9(11616, 1, 52564, 48614, 439, 453, 0);
  fimport$9(7564, 1, 52652, 48504, 454, 455, 0);
  fimport$9(8444, 2, 52656, 49408, 456, 457, 0);
  fimport$9(3386, 2, 52656, 49408, 456, 458, 0);
  fimport$9(13454, 2, 52656, 49408, 456, 459, 0);
  fimport$9(7622, 4, 52672, 48720, 460, 461, 0);
  fimport$9(11801, 1, 52564, 48614, 439, 462, 0);
  fimport$9(11856, 5, 52688, 52708, 463, 464, 0);
  fimport$9(11867, 1, 52564, 48614, 439, 465, 0);
  fimport$9(9e3, 1, 52528, 48504, 428, 466, 0);
  fimport$9(12104, 1, 52528, 48504, 428, 467, 0);
  fimport$9(12002, 2, 52716, 49e3, 468, 469, 0);
  fimport$9(12247, 2, 52716, 49e3, 468, 470, 0);
  fimport$9(2538, 1, 48472, 48504, 24, 471, 0);
  fimport$9(4423, 2, 49856, 49e3, 472, 473, 0);
  fimport$9(10105, 2, 49856, 49e3, 472, 474, 0);
  fimport$9(8657, 1, 52724, 52728, 475, 476, 0);
  fimport$9(3325, 1, 52724, 52728, 475, 477, 0);
  fimport$9(4393, 4, 52736, 49104, 478, 479, 0);
  fimport$9(10073, 3, 52752, 49004, 480, 481, 0);
  fimport$9(4193, 5, 52768, 49924, 482, 483, 0);
  fimport$9(10159, 2, 52568, 49408, 444, 484, 0);
  fimport$9(12062, 3, 52788, 49004, 485, 486, 0);
  fimport$9(3964, 1, 52564, 48614, 439, 487, 0);
  fimport$9(13904, 2, 52800, 52808, 488, 489, 0);
  fimport$9(4410, 3, 52752, 49004, 480, 490, 0);
  fimport$9(10091, 3, 52752, 49004, 480, 491, 0);
  fimport$9(12085, 3, 52788, 49004, 485, 492, 0);
  fimport$9(3983, 1, 52564, 48614, 439, 493, 0);
  fimport$9(11449, 2, 52800, 52808, 488, 494, 0);
  fimport$9(4585, 4, 52816, 49104, 495, 496, 0);
  fimport$9(10348, 4, 52816, 49104, 495, 497, 0);
  fimport$9(12139, 4, 52832, 49104, 498, 499, 0);
  fimport$9(4018, 2, 52644, 49408, 450, 500, 0);
  fimport$9(8257, 2, 49856, 49e3, 472, 501, 0);
  fimport$9(1583, 2, 49856, 49e3, 472, 502, 0);
  fimport$9(7658, 2, 49856, 49e3, 472, 503, 0);
  fimport$9(1557, 2, 49856, 49e3, 472, 504, 0);
  fimport$9(14200, 1, 52724, 52728, 475, 505, 0);
  fimport$9(14070, 1, 52724, 52728, 475, 506, 0);
  fimport$9(14189, 2, 52800, 52808, 488, 507, 0);
  fimport$9(14059, 2, 52800, 52808, 488, 508, 0);
  fimport$9(14129, 1, 52724, 52728, 475, 509, 0);
  fimport$9(13989, 1, 52724, 52728, 475, 510, 0);
  fimport$9(14290, 2, 52800, 52808, 488, 511, 0);
  fimport$9(14081, 2, 52800, 52808, 488, 512, 0);
  fimport$9(14171, 3, 52848, 52860, 513, 514, 0);
  fimport$9(14041, 3, 52848, 52860, 513, 515, 0);
  fimport$9(2982, 2, 52568, 49408, 444, 516, 0);
  fimport$9(2967, 1, 52564, 48614, 439, 517, 0);
  fimport$9(6167, 3, 52868, 49004, 518, 519, 0);
  fimport$9(6153, 2, 52880, 49408, 520, 521, 0);
  fimport$9(6570, 3, 52868, 49004, 518, 522, 0);
  fimport$9(6558, 2, 52880, 49408, 520, 523, 0);
  fimport$9(4059, 2, 52888, 49408, 524, 525, 0);
  fimport$9(4037, 1, 52564, 48614, 439, 526, 0);
  fimport$9(3867, 2, 52888, 49408, 524, 527, 0);
  fimport$9(3851, 1, 52564, 48614, 439, 528, 0);
  fimport$9(8732, 2, 52800, 52808, 488, 529, 0);
  fimport$9(8719, 1, 52564, 48614, 439, 530, 0);
  fimport$9(8702, 2, 52800, 52808, 488, 531, 0);
  fimport$9(8746, 1, 52724, 52728, 475, 532, 0);
  fimport$9(4495, 2, 52800, 52808, 488, 533, 0);
  fimport$9(4480, 1, 52564, 48614, 439, 534, 0);
  fimport$9(2959, 1, 48472, 48504, 24, 535, 0);
  fimport$9(10147, 1, 52724, 52728, 475, 536, 0);
  fimport$9(8295, 2, 49856, 49e3, 472, 537, 0);
  fimport$9(15490, 3, 52896, 48740, 538, 539, 0);
  fimport$9(15283, 2, 52908, 49e3, 540, 541, 0);
  fimport$9(15133, 2, 52916, 49e3, 542, 543, 0);
  fimport$9(16349, 2, 52924, 49e3, 544, 545, 0);
  fimport$9(6030, 1, 52564, 48614, 439, 546, 0);
  fimport$9(10991, 3, 52848, 52860, 513, 547, 0);
  fimport$9(10983, 1, 52564, 48614, 439, 548, 0);
  fimport$9(9421, 1, 52564, 48614, 439, 549, 0);
  fimport$9(1164, 2, 52568, 49408, 444, 550, 0);
  fimport$9(3078, 2, 52800, 52808, 488, 551, 0);
  fimport$9(3069, 2, 52800, 52808, 488, 552, 0);
  fimport$9(6791, 1, 52564, 48614, 439, 553, 0);
  fimport$9(6802, 1, 52564, 48614, 439, 554, 0);
  fimport$9(4467, 2, 49856, 49e3, 472, 555, 0);
  fimport$9(14157, 1, 52724, 52728, 475, 556, 0);
  fimport$9(14027, 1, 52724, 52728, 475, 557, 0);
  fimport$9(4454, 2, 52568, 49408, 444, 558, 0);
  fimport$9(14143, 2, 52800, 52808, 488, 559, 0);
  fimport$9(14013, 2, 52800, 52808, 488, 560, 0);
  fimport$9(4436, 2, 49856, 49e3, 472, 561, 0);
  fimport$9(4530, 2, 49856, 49e3, 472, 562, 0);
  fimport$9(4511, 2, 52568, 49408, 444, 563, 0);
  fimport$9(9204, 1, 52564, 48614, 439, 564, 0);
  fimport$9(3353, 1, 52724, 52728, 475, 565, 0);
  fimport$9(9356, 1, 52724, 52728, 475, 566, 0);
  fimport$9(3371, 1, 52724, 52728, 475, 567, 0);
  fimport$9(9385, 1, 52724, 52728, 475, 568, 0);
  fimport$9(15056, 2, 52568, 49408, 444, 569, 0);
  fimport$9(15050, 1, 52564, 48614, 439, 570, 0);
  fimport$9(15031, 2, 52908, 49e3, 540, 571, 0);
  fimport$9(11926, 2, 52644, 49408, 450, 572, 0);
  fimport$9(2140, 2, 52644, 49408, 450, 573, 0);
  fimport$9(12235, 3, 52932, 49004, 574, 575, 0);
  fimport$9(12567, 2, 52644, 49408, 450, 576, 0);
  fimport$9(12459, 2, 52644, 49408, 450, 577, 0);
  fimport$9(2086, 3, 52944, 49004, 578, 579, 0);
  fimport$9(2075, 2, 52644, 49408, 450, 580, 0);
  fimport$9(7354, 3, 52956, 48740, 581, 582, 0);
  fimport$9(7295, 2, 52968, 49e3, 583, 584, 0);
  fimport$9(7333, 4, 52672, 48720, 460, 585, 0);
  fimport$9(7255, 3, 52976, 48740, 586, 587, 0);
  fimport$9(11592, 7, 52992, 50220, 588, 589, 0);
  fimport$9(7349, 8, 53024, 53056, 590, 591, 0);
  fimport$9(1358, 3, 52956, 48740, 581, 592, 0);
  fimport$9(4881, 4, 53136, 48720, 593, 594, 0);
  fimport$9(15406, 3, 53208, 48740, 595, 596, 0);
  fimport$9(15199, 4, 52672, 48720, 460, 597, 0);
  fimport$9(6653, 4, 53280, 53296, 598, 599, 0);
  fimport$9(3563, 1, 52564, 48614, 439, 600, 0);
  fimport$9(7032, 4, 52672, 48720, 460, 601, 0);
  fimport$9(7043, 1, 52564, 48614, 439, 602, 0);
  fimport$9(7046, 7, 53472, 53500, 603, 604, 0);
  fimport$9(3841, 8, 53536, 53056, 605, 606, 0);
  fimport$9(16527, 8, 53536, 53056, 605, 607, 0);
  fimport$9(16448, 8, 53536, 53056, 605, 608, 0);
  fimport$9(16325, 8, 53536, 53056, 605, 609, 0);
  fimport$9(16552, 10, 53792, 53832, 610, 611, 0);
  fimport$9(3120, 8, 53856, 53056, 612, 613, 0);
  fimport$9(16493, 8, 53856, 53056, 612, 614, 0);
  fimport$9(16403, 8, 53856, 53056, 612, 615, 0);
  fimport$9(16256, 8, 53856, 53056, 612, 616, 0);
  fimport$9(16538, 10, 53792, 53832, 610, 617, 0);
  fimport$9(6458, 9, 54064, 54100, 618, 619, 0);
  fimport$9(3829, 7, 54880, 53500, 620, 621, 0);
  fimport$9(16514, 7, 54880, 53500, 620, 622, 0);
  fimport$9(16435, 7, 54880, 53500, 620, 623, 0);
  fimport$9(16288, 7, 54880, 53500, 620, 624, 0);
  fimport$9(11314, 7, 54880, 53500, 620, 625, 0);
  fimport$9(3110, 7, 54912, 53500, 626, 627, 0);
  fimport$9(16482, 7, 54912, 53500, 626, 628, 0);
  fimport$9(16392, 7, 54912, 53500, 626, 629, 0);
  fimport$9(16245, 7, 54912, 53500, 626, 630, 0);
  fimport$9(6445, 8, 54944, 53056, 631, 632, 0);
  fimport$9(3828, 8, 53536, 53056, 605, 633, 0);
  fimport$9(3109, 8, 53856, 53056, 612, 634, 0);
  fimport$9(6444, 9, 54976, 54100, 635, 636, 0);
  fimport$9(2065, 7, 55024, 53500, 637, 638, 0);
  fimport$9(10964, 8, 55056, 53056, 639, 640, 0);
  fimport$9(3001, 8, 55088, 53056, 641, 642, 0);
  fimport$9(3817, 7, 54880, 53500, 620, 643, 0);
  fimport$9(16502, 5, 55120, 52708, 644, 645, 0);
  fimport$9(16423, 5, 55120, 52708, 644, 646, 0);
  fimport$9(16276, 5, 55120, 52708, 644, 647, 0);
  fimport$9(3100, 6, 55152, 48856, 648, 649, 0);
  fimport$9(16472, 4, 52672, 48720, 460, 650, 0);
  fimport$9(16382, 4, 52672, 48720, 460, 651, 0);
  fimport$9(16235, 4, 52672, 48720, 460, 652, 0);
  fimport$9(11343, 7, 55184, 55212, 653, 654, 0);
  fimport$9(6432, 8, 54944, 53056, 631, 655, 0);
  fimport$9(16412, 4, 52672, 48720, 460, 656, 0);
  fimport$9(16265, 4, 52672, 48720, 460, 657, 0);
  fimport$9(16459, 4, 52672, 48720, 460, 658, 0);
  fimport$9(16336, 5, 55280, 52708, 659, 660, 0);
  fimport$9(7269, 5, 55280, 52708, 659, 661, 0);
  fimport$9(4636, 2, 52880, 49408, 520, 662, 0);
  fimport$9(15479, 2, 52968, 49e3, 583, 663, 0);
  fimport$9(15272, 3, 55368, 48740, 664, 665, 0);
  fimport$9(15122, 3, 55380, 48740, 666, 667, 0);
  fimport$9(15364, 3, 52976, 48740, 586, 668, 0);
  fimport$9(15157, 4, 55392, 48720, 669, 670, 0);
  fimport$9(15101, 4, 55408, 48720, 671, 672, 0);
  fimport$9(15431, 2, 52644, 49408, 450, 673, 0);
  fimport$9(15224, 2, 52880, 49408, 520, 674, 0);
  fimport$9(6878, 1, 52564, 48614, 439, 675, 0);
  fimport$9(9330, 1, 52724, 52728, 475, 676, 0);
  fimport$9(15387, 3, 52976, 48740, 586, 677, 0);
  fimport$9(15180, 4, 52672, 48720, 460, 678, 0);
  fimport$9(7793, 3, 52788, 49004, 485, 679, 0);
  fimport$9(15466, 5, 55424, 52708, 680, 681, 0);
  fimport$9(15259, 5, 55280, 52708, 659, 682, 0);
  fimport$9(1367, 3, 52956, 48740, 581, 683, 0);
  fimport$9(1380, 1, 52564, 48614, 439, 684, 0);
  fimport$9(15354, 6, 55456, 48856, 685, 686, 0);
  fimport$9(15147, 7, 53472, 53500, 603, 687, 0);
  fimport$9(5115, 10, 55488, 55528, 688, 689, 0);
  fimport$9(8057, 10, 55488, 55528, 688, 690, 0);
  fimport$9(15442, 3, 55548, 49004, 691, 692, 0);
  fimport$9(15235, 3, 55560, 49004, 693, 694, 0);
  fimport$9(15114, 3, 55572, 49004, 695, 696, 0);
  fimport$9(15017, 4, 55584, 55600, 697, 698, 0);
  fimport$9(6583, 1, 52528, 48504, 428, 699, 0);
  fimport$9(6642, 1, 52564, 48614, 439, 700, 0);
  fimport$9(6596, 1, 52528, 48504, 428, 701, 0);
  fimport$9(6613, 1, 52564, 48614, 439, 702, 0);
  fimport$9(1887, 3, 53208, 48740, 595, 703, 0);
  fimport$9(1897, 1, 52564, 48614, 439, 704, 0);
  fimport$9(15420, 5, 55616, 52708, 705, 706, 0);
  fimport$9(15213, 5, 55648, 52708, 707, 708, 0);
  fimport$9(6897, 1, 52564, 48614, 439, 709, 0);
  fimport$9(6910, 1, 52564, 48614, 439, 710, 0);
  fimport$9(6886, 2, 52644, 49408, 450, 711, 0);
  fimport$9(6761, 3, 52976, 48740, 586, 712, 0);
  fimport$9(8405, 4, 52672, 48720, 460, 713, 0);
  fimport$9(6782, 1, 52564, 48614, 439, 714, 0);
  fimport$9(6772, 3, 55560, 49004, 693, 715, 0);
  fimport$9(8487, 3, 52752, 49004, 480, 716, 0);
  fimport$9(6730, 1, 52564, 48614, 439, 717, 0);
  fimport$9(8011, 3, 55668, 48740, 718, 719, 0);
  fimport$9(1645, 3, 55668, 48740, 718, 720, 0);
  fimport$9(11881, 3, 55668, 48740, 718, 721, 0);
  fimport$9(7781, 3, 52976, 48740, 586, 722, 0);
  fimport$9(11418, 6, 55680, 55704, 723, 724, 0);
  fimport$9(11429, 1, 52564, 48614, 439, 725, 0);
  fimport$9(1820, 3, 55712, 48696, 726, 727, 0);
  fimport$9(7583, 1, 52528, 48504, 428, 728, 0);
  fimport$9(1441, 2, 52716, 49e3, 468, 729, 0);
  fimport$9(7599, 5, 55728, 55748, 730, 731, 0);
  fimport$9(10427, 3, 55756, 49004, 732, 733, 0);
  fimport$9(1833, 1, 52564, 48614, 439, 734, 0);
  fimport$9(6413, 2, 52644, 49408, 450, 735, 0);
  fimport$9(5345, 1, 48472, 48504, 24, 736, 0);
  fimport$9(2870, 1, 55768, 48504, 737, 738, 0);
  fimport$9(1461, 1, 55768, 48504, 737, 739, 0);
  fimport$9(1424, 1, 55768, 48504, 737, 740, 0);
  fimport$9(11208, 2, 55772, 49e3, 741, 742, 0);
  fimport$9(4912, 2, 55780, 49e3, 743, 744, 0);
  fimport$9(12606, 3, 55788, 49004, 745, 746, 0);
  fimport$9(6137, 4, 55808, 49104, 747, 748, 0);
  fimport$9(4753, 4, 55824, 49104, 749, 750, 0);
  fimport$9(7588, 1, 52564, 48614, 439, 751, 0);
  fimport$9(1466, 1, 55768, 48504, 737, 752, 0);
  fimport$9(8687, 2, 55840, 48692, 753, 754, 0);
  fimport$9(8672, 3, 55712, 48696, 726, 755, 0);
  fimport$9(3485, 2, 55840, 48692, 753, 756, 0);
  fimport$9(3469, 3, 55712, 48696, 726, 757, 0);
  fimport$9(2832, 1, 55768, 48504, 737, 758, 0);
  fimport$9(6665, 3, 52976, 48740, 586, 759, 0);
  fimport$9(6677, 1, 52564, 48614, 439, 760, 0);
  fimport$9(8033, 4, 52672, 48720, 460, 761, 0);
  fimport$9(8046, 1, 52564, 48614, 439, 762, 0);
  fimport$9(7281, 3, 52976, 48740, 586, 763, 0);
  fimport$9(12162, 2, 52644, 49408, 450, 764, 0);
  fimport$9(14096, 2, 52880, 49408, 520, 765, 0);
  fimport$9(11280, 3, 52868, 49004, 518, 766, 0);
  fimport$9(11723, 2, 52880, 49408, 520, 767, 0);
  fimport$9(8776, 1, 52564, 48614, 439, 768, 0);
  fimport$9(4625, 1, 52564, 48614, 439, 769, 0);
  fimport$9(2096, 2, 52644, 49408, 450, 770, 0);
  fimport$9(11630, 2, 52716, 49e3, 468, 771, 0);
  fimport$9(12766, 5, 55856, 52708, 772, 773, 0);
  fimport$9(11650, 1, 52564, 48614, 439, 774, 0);
  fimport$9(3570, 1, 52528, 48504, 428, 775, 0);
  fimport$9(12744, 3, 52976, 48740, 586, 776, 0);
  fimport$9(3590, 1, 52564, 48614, 439, 777, 0);
  fimport$9(12785, 1, 48472, 48504, 24, 778, 0);
  fimport$9(12580, 2, 52888, 49408, 524, 779, 0);
  fimport$9(12594, 1, 52564, 48614, 439, 780, 0);
  fimport$9(3699, 4, 55888, 49104, 781, 782, 0);
  fimport$9(3687, 1, 52564, 48614, 439, 783, 0);
  fimport$9(3998, 1, 52564, 48614, 439, 784, 0);
  fimport$9(10859, 2, 52880, 49408, 520, 785, 0);
  fimport$9(12360, 2, 52716, 49e3, 468, 786, 0);
  fimport$9(10561, 1, 52528, 48504, 428, 787, 0);
  fimport$9(12035, 1, 52528, 48504, 428, 788, 0);
  fimport$9(12635, 2, 52716, 49e3, 468, 789, 0);
  fimport$9(11366, 1, 52528, 48504, 428, 790, 0);
  fimport$9(11942, 1, 52528, 48504, 428, 791, 0);
  fimport$9(11973, 1, 52528, 48504, 428, 792, 0);
  fimport$9(11955, 1, 52528, 48504, 428, 793, 0);
  fimport$9(3230, 1, 52528, 48504, 428, 794, 0);
  fimport$9(7809, 1, 52528, 48504, 428, 795, 0);
  fimport$9(12343, 1, 52528, 48504, 428, 796, 0);
  fimport$9(10545, 1, 52528, 48504, 428, 797, 0);
  fimport$9(12018, 1, 52528, 48504, 428, 798, 0);
  fimport$9(7643, 2, 49856, 49e3, 472, 799, 0);
  fimport$9(1542, 2, 49856, 49e3, 472, 800, 0);
  fimport$9(10196, 2, 49856, 49e3, 472, 801, 0);
  fimport$9(6937, 1, 52564, 48614, 439, 802, 0);
  fimport$9(2669, 1, 48472, 48504, 24, 803, 0);
  fimport$9(15450, 2, 55904, 49e3, 804, 805, 0);
  fimport$9(15243, 3, 48748, 48740, 806, 807, 0);
  fimport$9(11037, 1, 55912, 55916, 808, 809, 0);
  fimport$9(2900, 1, 55768, 48504, 737, 810, 0);
  fimport$9(2567, 1, 48472, 48504, 24, 811, 0);
  fimport$9(2589, 1, 48472, 48504, 24, 812, 0);
  fimport$9(13870, 1, 48472, 48504, 24, 813, 0);
  fimport$9(11170, 2, 55772, 49e3, 741, 814, 0);
  fimport$9(11550, 2, 52568, 49408, 444, 815, 0);
  fimport$9(11566, 1, 48472, 48504, 24, 816, 0);
  fimport$9(11094, 4, 56e3, 48720, 817, 818, 0);
  fimport$9(11110, 1, 52564, 48614, 439, 819, 0);
  fimport$9(10119, 5, 56016, 56036, 820, 821, 0);
  fimport$9(16301, 3, 56044, 48740, 822, 823, 0);
  fimport$9(16575, 2, 52908, 49e3, 540, 824, 0);
  fimport$9(14785, 7, 56064, 56092, 825, 826, 0);
  fimport$9(15297, 7, 56064, 56092, 825, 827, 0);
  fimport$9(1412, 2, 55780, 49e3, 743, 828, 0);
  fimport$9(7138, 2, 52716, 49e3, 468, 829, 0);
  fimport$9(12049, 3, 56104, 48740, 830, 831, 0);
  fimport$9(12179, 2, 52716, 49e3, 468, 832, 0);
  fimport$9(2742, 4, 56128, 56144, 833, 834, 0);
  fimport$9(6843, 2, 52888, 49408, 524, 835, 0);
  fimport$9(7195, 2, 52716, 49e3, 468, 836, 0);
  fimport$9(12649, 3, 56104, 48740, 830, 837, 0);
  fimport$9(12193, 2, 52716, 49e3, 468, 838, 0);
  fimport$9(12664, 2, 52716, 49e3, 468, 839, 0);
  fimport$9(2914, 2, 55780, 49e3, 743, 840, 0);
  fimport$9(3783, 4, 56160, 48720, 841, 842, 0);
  fimport$9(11903, 2, 55904, 49e3, 804, 843, 0);
  fimport$9(7180, 1, 52528, 48504, 428, 844, 0);
  fimport$9(4573, 2, 49856, 49e3, 472, 845, 0);
  fimport$9(6697, 2, 49856, 49e3, 472, 846, 0);
  fimport$9(9039, 3, 56232, 51284, 847, 848, 0);
  fimport$9(13592, 4, 56256, 56272, 849, 850, 0);
  fimport$9(13572, 2, 52880, 49408, 520, 851, 0);
  fimport$9(6071, 1, 55768, 48504, 737, 852, 0);
  fimport$9(6056, 2, 52880, 49408, 520, 853, 0);
  fimport$9(6823, 2, 52888, 49408, 524, 854, 0);
  fimport$9(2121, 1, 52652, 48504, 454, 855, 0);
  fimport$9(2104, 2, 52568, 49408, 444, 856, 0);
  fimport$9(1133, 2, 52644, 49408, 450, 857, 0);
  fimport$9(1109, 1, 52652, 48504, 454, 858, 0);
  fimport$9(2162, 8, 56288, 53056, 859, 860, 0);
  fimport$9(4656, 4, 56320, 49104, 861, 862, 0);
  fimport$9(13426, 2, 56344, 49e3, 863, 864, 0);
  fimport$9(11598, 2, 52568, 49408, 444, 865, 0);
  global$0 = $0_1 + 16 | 0;
 }
 
 function $1178() {
  return $274(16215, 5408, 1048, 8, 16, 20, 2) | 0;
 }
 
 function $1179($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  return FUNCTION_TABLE[$0_1 | 0]($1_1) | 0;
 }
 
 function $1180($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $5_1 = $1783(184);
  $2_1 = $1944(0, 73568);
  if ($2_1) {
   $2_1 = $2_1 + 876 | 0;
   $1973($2_1, 0, $1944($2_1, 0) + 1 | 0);
  }
  $1_1 = (((wasm2js_i32$1 = 15880, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
  $2_1 = $1_1 + 8 | 0;
  $1983($2_1, 8, 0, 0);
  $1983($2_1, 160, 0, 0);
  $1982($2_1, 220, 0, 0);
  $1982($2_1, 892, 0, 0);
  $1983($2_1, 872, 0, 0);
  $1982($2_1 + 900 | 0, 0, 0, 0);
  $1982($2_1 + 908 | 0, 0, 0, 0);
  $1982($2_1 + 916 | 0, 0, 0, 0);
  $1982($2_1 + 924 | 0, 0, 0, 0);
  $1982($2_1 + 932 | 0, 0, 0, 0);
  $1983($2_1 + 1072 | 0, 0, 0, 0);
  $1983($2_1 + 1080 | 0, 0, 0, 0);
  $1983($2_1 + 1088 | 0, 0, 0, 0);
  $1983($2_1 + 1096 | 0, 0, 0, 0);
  $1983($2_1 + 1104 | 0, 0, 0, 0);
  $3 = $1604($2_1, 0, 5408);
  $1983($3, 32, 1050253722, 1086324736);
  $1973($3, 28, 1924);
  $1973($3, 24, 8540);
  $1983($3, 16, 1015580809, 1084227584);
  $1983($3, 8, -1082130432, -1082130432);
  $1604($3 + 44 | 0, 255, 88);
  $1973($3, 156, 0);
  $1973($3, 148, 1065353216);
  $1982($3, 140, 0, 0);
  $1982($3, 132, 1049414861, 1028443341);
  $1982($3, 180, 0, 0);
  $1973($3, 176, 1114636288);
  $1970($3, 172, 1);
  $1968($3, 170, 1);
  $1970($3, 168, 0);
  $1983($3, 160, 1065353216, 1065353216);
  $1968($3, 152, 0);
  $1982($3 + 188 | 0, 0, 0, 0);
  $1973($3 + 196 | 0, 0, 0);
  $1982($3, 892, -8388609, -8388609);
  $1973($3 + 224 | 0, 0, -8388609);
  $1983($3, 216, 0, -8388609);
  $1973($3, 212, 1);
  $1973($3, 208, 0);
  $1973($3, 204, 2);
  $1973($3, 200, 3);
  $1973($3, 40, 1086324736);
  while (1) {
   $2_1 = $3 + ($4_1 << 2) | 0;
   $1973($2_1 + 1032 | 0, 0, -1082130432);
   $1973($2_1 + 1052 | 0, 0, -1082130432);
   $4_1 = $4_1 + 1 | 0;
   if (($4_1 | 0) != 5) {
    continue
   }
   break;
  };
  $4_1 = 0;
  while (1) {
   $2_1 = $3 + ($4_1 << 2) | 0;
   $1973($2_1 + 1132 | 0, 0, -1082130432);
   $1973($2_1 + 3180 | 0, 0, -1082130432);
   $4_1 = $4_1 + 1 | 0;
   if (($4_1 | 0) != 512) {
    continue
   }
   break;
  };
  $4_1 = 0;
  while (1) {
   $1973(($3 + ($4_1 << 2) | 0) + 5228 | 0, 0, -1082130432);
   $4_1 = $4_1 + 1 | 0;
   if (($4_1 | 0) != 20) {
    continue
   }
   break;
  };
  $1($1_1 + 5416 | 0);
  $2_1 = $1_1 + 6476 | 0;
  $1982($2_1, 24, 0, 0);
  $1982($2_1, 0, 0, 0);
  $1982($2_1 + 32 | 0, 0, 0, 0);
  $1604($2_1 + 44 | 0, 0, 384);
  $3 = $1604($2_1, 0, 500);
  $4_1 = 0;
  while (1) {
   $2_1 = ($4_1 << 3) + $3 | 0;
   $7_1 = Math_fround($4_1 | 0);
   $7_1 = Math_fround(Math_fround(Math_fround($7_1 + $7_1) * Math_fround(3.1415927410125732)) / Math_fround(48.0));
   $1986($2_1 + 48 | 0, 0, $1688($7_1));
   $1986($2_1 + 44 | 0, 0, $1601($7_1));
   $4_1 = $4_1 + 1 | 0;
   if (($4_1 | 0) != 48) {
    continue
   }
   break;
  };
  $1986($3, 428, Math_fround($1963($3, 20) / Math_fround(2.1410584449768066e-03)));
  $1983($1_1, 7072, 0, 0);
  $1982($1_1, 7100, 0, 0);
  $1983($1_1, 7176, 0, 0);
  $1982($1_1, 7580, 0, 0);
  $1973($1_1 + 7504 | 0, 0, 0);
  $1983($1_1, 7496, 0, 0);
  $1982($1_1 + 7588 | 0, 0, 0, 0);
  $1982($1_1, 7668, 0, 0);
  $1982($1_1 + 7676 | 0, 0, 0, 0);
  $1982($1_1 + 7684 | 0, 0, 0, 0);
  $1982($1_1 + 7692 | 0, 0, 0, 0);
  $1983($1_1, 7008, 0, 0);
  $1983($1_1 + 7016 | 0, 0, 0, 0);
  $1983($1_1 + 7024 | 0, 0, 0, 0);
  $1983($1_1 + 7032 | 0, 0, 0, 0);
  $1983($1_1 + 7040 | 0, 0, 0, 0);
  $1983($1_1 + 7048 | 0, 0, 0, 0);
  $1983($1_1 + 7056 | 0, 0, 0, 0);
  $1973($1_1 + 7064 | 0, 0, 0);
  $1604($1_1 + 7220 | 0, 0, 272);
  $1983($1_1 + 7648 | 0, 0, 0, 0);
  $1983($1_1 + 7640 | 0, 0, 0, 0);
  $1983($1_1 + 7632 | 0, 0, 0, 0);
  $1983($1_1, 7624, 0, 0);
  $1973($1_1 + 7708 | 0, 0, 2139095039);
  $1983($1_1, 7712, 0, 0);
  $1982($1_1 + 7700 | 0, 0, 2139095039, 2139095039);
  $1983($1_1 + 7720 | 0, 0, 0, 0);
  $1983($1_1 + 7728 | 0, 0, 0, 0);
  $1983($1_1 + 7736 | 0, 0, 0, 0);
  $1973($1_1 + 7752 | 0, 0, 2139095039);
  $1982($1_1, 7756, 0, 0);
  $1983($1_1 + 7744 | 0, 0, 2139095039, 2139095039);
  $1982($1_1 + 7764 | 0, 0, 0, 0);
  $1982($1_1 + 7772 | 0, 0, 0, 0);
  $1982($1_1 + 7780 | 0, 0, 0, 0);
  $1983($1_1 + 7792 | 0, 0, 2139095039, 2139095039);
  $1973($1_1 + 7788 | 0, 0, 2139095039);
  $1983($1_1 + 7824 | 0, 0, 0, 0);
  $1983($1_1 + 7816 | 0, 0, 0, 0);
  $1983($1_1 + 7808 | 0, 0, 0, 0);
  $1983($1_1, 7800, 0, 0);
  $1982($1_1 + 7836 | 0, 0, 2139095039, 2139095039);
  $1973($1_1 + 7832 | 0, 0, 2139095039);
  $1983($1_1 + 7912 | 0, 0, 0, 0);
  $1983($1_1 + 7920 | 0, 0, 0, 0);
  $1983($1_1 + 7928 | 0, 0, 0, 0);
  $1983($1_1 + 7936 | 0, 0, 0, 0);
  $1970($1_1 + 7944 | 0, 0, 0);
  $1982($1_1, 7892, 0, 0);
  $1982($1_1 + 7900 | 0, 0, 0, 0);
  $1973($1_1 + 7908 | 0, 0, -1);
  $1968($1_1 + 7946 | 0, 0, 0);
  $1982($1_1, 7948, 0, 0);
  $1982($1_1 + 7956 | 0, 0, 0, 0);
  $1973($1_1 + 7996 | 0, 0, 0);
  $1982($1_1 + 8028 | 0, 0, 0, 0);
  $1973($1_1 + 8e3 | 0, 0, 0);
  $1973($1_1, 7992, 0);
  $1973($1_1, 8024, 0);
  $1604($1_1 + 8044 | 0, 0, 68);
  $1604($1_1 + 8116 | 0, 0, 3764);
  $470($1_1 + 11880 | 0);
  $1973($1_1, 12256, 0);
  $1973($1_1 + 12216 | 0, 0, 0);
  $1983($1_1, 12208, 0, 0);
  $1982($1_1, 11988, 0, 0);
  $1982($1_1 + 11996 | 0, 0, 0, 0);
  $1982($1_1 + 12004 | 0, 0, 0, 0);
  $1982($1_1 + 12012 | 0, 0, 0, 0);
  $1982($1_1 + 12020 | 0, 0, 0, 0);
  $1982($1_1 + 12028 | 0, 0, 0, 0);
  $1982($1_1 + 12036 | 0, 0, 0, 0);
  $1982($1_1 + 12044 | 0, 0, 0, 0);
  $1982($1_1, 12084, 0, 0);
  $1982($1_1 + 12092 | 0, 0, 0, 0);
  $1982($1_1 + 12100 | 0, 0, 0, 0);
  $1982($1_1 + 12108 | 0, 0, 0, 0);
  $1982($1_1 + 12116 | 0, 0, 0, 0);
  $1982($1_1, 12132, 0, 0);
  $1982($1_1 + 12140 | 0, 0, 0, 0);
  $1982($1_1 + 12148 | 0, 0, 0, 0);
  $1982($1_1 + 12156 | 0, 0, 0, 0);
  $1982($1_1 + 12164 | 0, 0, 0, 0);
  $1982($1_1 + 12172 | 0, 0, 0, 0);
  $1982($1_1 + 12180 | 0, 0, 0, 0);
  $1973($1_1 + 12188 | 0, 0, 0);
  $1983($1_1 + 12264 | 0, 0, -1, -1);
  $1970($1_1 + 12260 | 0, 0, 257);
  $1983($1_1, 12272, 0, 0);
  $1983($1_1 + 12280 | 0, 0, 0, 0);
  $1983($1_1 + 12288 | 0, 0, 0, 0);
  $1973($1_1, 6464, 0);
  $1968($1_1, 1, !$0_1);
  $1968($1_1, 0, 0);
  $1982($1_1, 6468, 0, 0);
  if (!$0_1) {
   $0_1 = $1944(0, 73568);
   if ($0_1) {
    $0_1 = $0_1 + 876 | 0;
    $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
   }
   $0_1 = (((wasm2js_i32$2 = 1128, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0) | 0);
   $1604($0_1 + 36 | 0, 0, 1076);
   $0_1 = $1604($0_1, 0, 1128);
   $1973($0_1, 12, 1);
   $1982($0_1, 1120, -1, -1);
  }
  $1983($1_1, 6976, 0, 0);
  $1983($1_1, 7168, 0, 0);
  $1982($1_1, 7156, 0, 0);
  $1973($1_1, 7068, 0);
  $1973($1_1, 7004, 0);
  $1983($1_1, 6984, 0, -1);
  $1983($1_1, 6992, -1, 0);
  $1983($1_1, 7080, 0, 0);
  $1982($1_1, 7108, 0, 0);
  $1973($1_1 + 152 | 0, 0, $0_1);
  $1968($1_1 + 7e3 | 0, 0, 0);
  $1983($1_1 + 7088 | 0, 0, 0, 0);
  $1973($1_1 + 7096 | 0, 0, 0);
  $1982($1_1 + 7116 | 0, 0, 0, 0);
  $1982($1_1 + 7124 | 0, 0, 0, 0);
  $1982($1_1 + 7132 | 0, 0, 0, 0);
  $1982($1_1 + 7140 | 0, 0, 0, 0);
  $1980($1_1 + 7147 | 0, 0, 0);
  $1973($1_1, 7492, 0);
  $1970($1_1, 7200, 0);
  $1983($1_1, 7192, -1, 0);
  $1983($1_1, 7184, 0, 0);
  $1983($1_1, 7176, -1082130432, -1082130432);
  $1982($1_1, 7204, 0, 0);
  $1982($1_1 + 7212 | 0, 0, 0, 0);
  $1982($1_1, 7508, 0, 0);
  $1982($1_1 + 7516 | 0, 0, 0, 0);
  $1982($1_1 + 7524 | 0, 0, 0, 0);
  $1982($1_1 + 7532 | 0, 0, 0, 0);
  $1982($1_1 + 7540 | 0, 0, 0, 0);
  $1982($1_1 + 7548 | 0, 0, 0, 0);
  $1982($1_1 + 7556 | 0, 0, 0, 0);
  $1981($1_1 + 7562 | 0, 0);
  $1973($1_1, 7576, 0);
  $1973($1_1, 7608, 0);
  $1983($1_1, 7600, 0, 0);
  $1970($1_1, 7596, 0);
  $1968($1_1, 7598, 0);
  $1968($1_1, 7570, 1);
  $1973($1_1, 7620, -1);
  $1971($1_1, 7571, 0);
  $1983($1_1, 7656, 0, 0);
  $1973($1_1, 7880, 0);
  $1973($1_1, 7664, 0);
  $1982($1_1, 7612, -1, -1);
  $1980($1_1 + 7857 | 0, 0, 0);
  $1982($1_1 + 7852 | 0, 0, 0, 0);
  $1982($1_1, 7844, 0, 0);
  $1971($1_1 + 7875 | 0, 0, 0);
  $1982($1_1, 7868, 0, 0);
  $1973($1_1 + 7980 | 0, 0, 0);
  $1982($1_1, 7884, -1, -1);
  $1982($1_1 + 7972 | 0, 0, 0, 0);
  $1982($1_1, 7964, 0, 0);
  $1973($1_1, 8112, 0);
  $1973($1_1, 11968, 0);
  $1983($1_1, 7984, -1, 0);
  $1982($1_1, 8036, 0, 0);
  $1973($1_1 + 8020 | 0, 0, 0);
  $1982($1_1 + 8012 | 0, 0, 0, 0);
  $1982($1_1, 8004, 0, 0);
  $1973($1_1, 11980, 0);
  $1973($1_1, 11972, 177209344);
  $1982($1_1, 12060, 0, 1008981770);
  $1970($1_1, 12056, 0);
  $1973($1_1, 12052, 0);
  $1973($1_1, 11984, 0);
  $1973($1_1, 11976, 0);
  $1973($1_1 + 12076 | 0, 0, 0);
  $1982($1_1, 12068, 0, 0);
  $1982($1_1, 12116, 2139095039, 2139095039);
  $1973($1_1, 12080, 1056964608);
  $1973($1_1, 12224, 0);
  $1973($1_1, 12200, 0);
  $1968($1_1, 12196, 0);
  $1973($1_1, 12192, 0);
  $1973($1_1, 12128, 0);
  $1970($1_1, 12124, 46);
  $1982($1_1, 12108, 2139095039, 2139095039);
  $1973($1_1, 12220, 0);
  $1973($1_1, 12244, 2);
  $1973($1_1, 12236, 0);
  $1968($1_1, 12232, 0);
  $1973($1_1, 12228, 2139095039);
  $1973($1_1, 12204, 0);
  $1973($1_1, 12252, 0);
  $1968($1_1, 12248, 0);
  $1973($1_1, 12240, 2);
  $1604($1_1 + 12296 | 0, 0, 492);
  $1973($1_1, 12796, -1);
  $1982($1_1, 12788, -1, -1);
  $1604($1_1 + 12800 | 0, 0, 3073);
  if (!$1944(0, 73568)) {
   $1973(0, 73568, $1_1)
  }
  $2_1 = 1800;
  $4_1 = -1;
  while (1) {
   $0_1 = $2_1;
   $2_1 = $0_1 + 1 | 0;
   $3 = $1937($0_1, 0);
   if ($3) {
    label$4 : {
     if (($3 | 0) != 35) {
      break label$4
     }
     if (($1937($2_1, 0) | 0) != 35) {
      break label$4
     }
     $4_1 = ($1937($0_1, 2) | 0) == 35 ? -1 : $4_1;
    }
    $4_1 = $1944((($3 ^ $4_1 & 255) << 2) + 19360 | 0, 0) ^ $4_1 >>> 8;
   }
   if (($0_1 | 0) != 1806) {
    continue
   }
   break;
  };
  $3 = $4_1 ^ -1;
  $0_1 = $1944($1_1, 12144);
  $4_1 = $1944($1_1 + 12148 | 0, 0);
  label$7 : {
   if (($0_1 | 0) != ($4_1 | 0)) {
    break label$7
   }
   $2_1 = $4_1 ? $4_1 + (($4_1 | 0) / 2 | 0) | 0 : 8;
   $0_1 = $0_1 + 1 | 0;
   $6_1 = ($0_1 | 0) < ($2_1 | 0) ? $2_1 : $0_1;
   if (($4_1 | 0) >= ($6_1 | 0)) {
    break label$7
   }
   $0_1 = $1944(0, 73568);
   if ($0_1) {
    $0_1 = $0_1 + 876 | 0;
    $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
   }
   $4_1 = (((wasm2js_i32$1 = Math_imul($6_1, 36), wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
   $0_1 = $1944($1_1 + 12152 | 0, 0);
   if ($0_1) {
    $1602($4_1, $0_1, Math_imul($1944($1_1, 12144), 36));
    $2_1 = $1944($1_1, 12152);
    label$12 : {
     if (!$2_1) {
      break label$12
     }
     $0_1 = $1944(0, 73568);
     if (!$0_1) {
      break label$12
     }
     $0_1 = $0_1 + 876 | 0;
     $1973($0_1, 0, $1944($0_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
   }
   $1973($1_1, 12148, $6_1);
   $1973($1_1, 12152, $4_1);
  }
  $0_1 = $1944($1_1 + 12152 | 0, 0) + Math_imul($1944($1_1, 12144), 36) | 0;
  $1973($0_1, 32, 0);
  $1973($0_1, 28, 4);
  $1973($0_1, 24, 5);
  $1973($0_1, 20, 6);
  $1973($0_1, 16, 7);
  $1973($0_1, 12, 0);
  $1973($0_1, 8, 8);
  $1973($0_1, 4, $3);
  $1973($0_1, 0, 1800);
  $1973($1_1, 12144, $1944($1_1, 12144) + 1 | 0);
  $3 = $23(11432, 0);
  $0_1 = $1944($1_1, 12144);
  $6_1 = $1944($1_1 + 12148 | 0, 0);
  label$11 : {
   if (($0_1 | 0) != ($6_1 | 0)) {
    break label$11
   }
   $2_1 = $6_1 ? $6_1 + (($6_1 | 0) / 2 | 0) | 0 : 8;
   $0_1 = $0_1 + 1 | 0;
   $4_1 = ($0_1 | 0) < ($2_1 | 0) ? $2_1 : $0_1;
   if (($6_1 | 0) >= ($4_1 | 0)) {
    break label$11
   }
   $2_1 = $16(Math_imul($4_1, 36));
   $0_1 = $1944($1_1 + 12152 | 0, 0);
   if ($0_1) {
    $1602($2_1, $0_1, Math_imul($1944($1_1, 12144), 36));
    $17($1944($1_1, 12152));
   }
   $1973($1_1, 12148, $4_1);
   $1973($1_1, 12152, $2_1);
  }
  $0_1 = $1944($1_1 + 12152 | 0, 0) + Math_imul($1944($1_1, 12144), 36) | 0;
  $1973($0_1, 32, 0);
  $1973($0_1, 28, 16);
  $1973($0_1, 24, 17);
  $1973($0_1, 20, 18);
  $1973($0_1, 16, 19);
  $1973($0_1, 12, 0);
  $1973($0_1, 8, 20);
  $1973($0_1, 4, $3);
  $1973($0_1, 0, 11432);
  $1973($1_1, 12144, $1944($1_1, 12144) + 1 | 0);
  $0_1 = $1944(0, 73568);
  if ($0_1) {
   $0_1 = $0_1 + 876 | 0;
   $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
  }
  $6_1 = (((wasm2js_i32$1 = 152, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
  $1982($6_1, 0, 0, 0);
  $1973($6_1 + 32 | 0, 0, 0);
  $1982($6_1 + 24 | 0, 0, 0, 0);
  $1982($6_1 + 16 | 0, 0, 0, 0);
  $1982($6_1 + 8 | 0, 0, 0, 0);
  $1604($6_1 + 52 | 0, 0, 100);
  $1973($6_1 + 48 | 0, 0, 0);
  $1973($6_1, 36, -1);
  $1982($6_1 + 40 | 0, 0, -1, 0);
  $0_1 = $1944($1_1, 7496);
  $3 = $1944($1_1 + 7500 | 0, 0);
  label$14 : {
   if (($0_1 | 0) != ($3 | 0)) {
    break label$14
   }
   $2_1 = $3 ? $3 + (($3 | 0) / 2 | 0) | 0 : 8;
   $0_1 = $0_1 + 1 | 0;
   $4_1 = ($0_1 | 0) < ($2_1 | 0) ? $2_1 : $0_1;
   if (($3 | 0) >= ($4_1 | 0)) {
    break label$14
   }
   $0_1 = $1944(0, 73568);
   if ($0_1) {
    $0_1 = $0_1 + 876 | 0;
    $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
   }
   $3 = (((wasm2js_i32$2 = $4_1 << 2, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0) | 0);
   $0_1 = $1944($1_1 + 7504 | 0, 0);
   if ($0_1) {
    $1602($3, $0_1, $1944($1_1, 7496) << 2);
    $2_1 = $1944($1_1, 7504);
    label$18 : {
     if (!$2_1) {
      break label$18
     }
     $0_1 = $1944(0, 73568);
     if (!$0_1) {
      break label$18
     }
     $0_1 = $0_1 + 876 | 0;
     $1973($0_1, 0, $1944($0_1, 0) - 1 | 0);
    }
    ((wasm2js_i32$1 = $2_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
   }
   $1973($1_1, 7500, $4_1);
   $1973($1_1, 7504, $3);
  }
  $1973($1944($1_1 + 7504 | 0, 0) + ($1944($1_1, 7496) << 2) | 0, 0, $6_1);
  $1968($1_1, 0, 1);
  $1973($1_1, 7496, $1944($1_1, 7496) + 1 | 0);
  $1973($5_1, 0, $1_1);
  $1968($5_1, 27, 0);
  $1968($5_1, 4, 0);
  $1968($5_1, 63, 0);
  $1982($5_1, 44, 2, 2);
  $1982($5_1, 36, 2, 2);
  $1982($5_1, 28, 2, 2);
  $1969($5_1, 15, 0);
  $1968($5_1, 119, 0);
  $1973($5_1, 104, 0);
  $1982($5_1, 96, 1, 1);
  $1982($5_1, 88, 1, 1);
  $1982($5_1, 80, 1, 1);
  $1982($5_1, 72, 2, 1);
  $1982($5_1, 64, 2, 2);
  $1968($5_1, 52, 0);
  $1982($5_1, 128, 1, 0);
  $1982($5_1, 120, 1, 1);
  $1968($5_1, 147, 0);
  $1968($5_1, 108, 0);
  $1968($5_1, 171, 0);
  $1973($5_1, 156, 0);
  $1982($5_1, 148, 1, 1);
  $1968($5_1, 136, 0);
  $1973($5_1, 180, 1);
  $1982($5_1, 172, 1, 1);
  $1968($5_1, 160, 0);
  $0_1 = $100();
  $101($1944($5_1, 0));
  $2_1 = $118();
  $1973($2_1, 208, 0);
  $1973($2_1, 204, 877);
  $1973($2_1, 200, 878);
  $1983($2_1, 24, 0, 0);
  $101($0_1);
  return $5_1 | 0;
 }
 
 function $1181($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  FUNCTION_TABLE[$0_1 | 0]($1_1);
 }
 
 function $1184() {
  return $1944(0, 95660) | 0;
 }
 
 function $1185($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1973(0, 95660, $0_1);
  if ($0_1) {
   $1_1 = $1944($0_1, 0)
  }
  $101($1_1);
 }
 
 function $1186($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, $118());
  $1973($0_1, 0, fimport$1(52172, $1_1 + 8 | 0) | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1187($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, $50());
  $1973($0_1, 0, fimport$1(52424, $1_1 + 8 | 0) | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1188($0_1) {
  $0_1 = $0_1 | 0;
  FUNCTION_TABLE[$0_1 | 0]();
 }
 
 function $1189($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = $1944($1944($1944(0, 73568) + 7504 | 0, 0), 0);
  $1973($1_1, 8, $1937($2_1, 52) ? $2_1 + 52 | 0 : 0);
  $1973($0_1, 0, fimport$1(51328, $1_1 + 8 | 0) | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1190($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 12, $1_1);
  FUNCTION_TABLE[$0_1 | 0]($2_1 + 12 | 0);
  fimport$4($1944($2_1, 12) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1191($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = global$0 - 32 | 0;
  global$0 = $2_1;
  $0_1 = $1488($2_1 + 12 | 0, $0_1);
  $1944($1944($0_1, 8), 0);
  $1973($0_1, 0, 52584);
  $1_1 = $1944($0_1, 8);
  if (($1944($1_1, 0) | 0) != 2) {
   $1973($2_1, 24, $1937($0_1, 4));
   $3 = $2_1 + 24 | 0;
   $0_1 = fimport$1(72652, $3 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 24, 0);
   $4_1 = $1_1;
   $1_1 = fimport$1(72760, $3 | 0) | 0;
   fimport$3($4_1 | 0, $1_1 | 0, $0_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($0_1 | 0);
  }
  global$0 = $2_1 + 32 | 0;
 }
 
 function $1192($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = 0, $13 = Math_fround(0), $14 = 0, $15_1 = 0, $16_1 = Math_fround(0), $17_1 = 0, $18_1 = Math_fround(0), $19 = 0, $20_1 = 0, $21_1 = 0, $22_1 = Math_fround(0), $23_1 = Math_fround(0), $24 = 0, $25_1 = 0, $26_1 = 0, $27_1 = Math_fround(0), $28_1 = Math_fround(0), $29_1 = Math_fround(0), $30 = 0, $31_1 = Math_fround(0), $32_1 = Math_fround(0), $33_1 = Math_fround(0), $34_1 = 0, $35_1 = 0, $36_1 = 0, $37 = 0, $38_1 = Math_fround(0), $39_1 = Math_fround(0), $40_1 = Math_fround(0), $41_1 = Math_fround(0), $42_1 = 0, $43_1 = 0, $44_1 = 0.0, $45_1 = 0.0, $46_1 = 0.0, $47_1 = 0.0, $48_1 = Math_fround(0), $49 = Math_fround(0), $50_1 = 0, $51_1 = 0, $52_1 = 0, $53_1 = 0, $54_1 = 0, $55_1 = 0, $56_1 = 0, $57_1 = 0, $58_1 = 0, $59_1 = 0, $60_1 = 0, $61 = 0, $62_1 = 0, $63_1 = 0, $64_1 = 0, $65_1 = 0, $66 = 0, $67_1 = 0, $68_1 = 0, $69_1 = 0, $70_1 = 0, $71_1 = 0, $72_1 = 0, $73_1 = 0, $74 = 0, $75_1 = 0, $76_1 = 0, $77 = 0.0, $78_1 = 0.0, $79_1 = 0, $80_1 = 0, $81_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $30 = global$0 - 32 | 0;
  global$0 = $30;
  $34_1 = $1488($30 + 12 | 0, $0_1);
  $1_1 = ($1944($1944($34_1, 8), 0) | 0) != 2 ? $34_1 + 4 | 0 : 0;
  $4_1 = global$0 - 1184 | 0;
  global$0 = $4_1;
  $6_1 = $1944(0, 73568);
  $0_1 = $6_1 + 12256 | 0;
  if ($1937($6_1, 12256)) {
   $349($0_1)
  }
  label$2 : {
   if (!$143(6280, $1_1, 0)) {
    break label$2
   }
   $1_1 = $1944($1944(0, 73568), 7080);
   $1968($1_1, 140, 1);
   if (($1939($1_1, 150) | 0) >= 2) {
    break label$2
   }
   $1973($4_1, 912, 16215);
   $557(5689, $4_1 + 912 | 0);
   $7_1 = $1963($6_1 + 856 | 0, 0);
   $1990($4_1, 904, +$7_1);
   $1990($4_1, 896, +Math_fround(Math_fround(1.0e3) / $7_1));
   $557(18577, $4_1 + 896 | 0);
   $1_1 = $1944($6_1 + 860 | 0, 0);
   $2_1 = $1944($6_1 + 864 | 0, 0);
   $1973($4_1, 884, $2_1);
   $1973($4_1, 880, $1_1);
   $1973($4_1, 888, ($2_1 | 0) / 3 | 0);
   $557(17880, $4_1 + 880 | 0);
   $1_1 = $1944($6_1 + 868 | 0, 0);
   $1973($4_1, 868, $1944($6_1 + 876 | 0, 0));
   $1973($4_1, 864, $1_1);
   $557(4678, $4_1 + 864 | 0);
   $594();
   $1_1 = $4_1 + 1152 | 0;
   $1983($1_1 + 24 | 0, 0, $1960(0, 20808), i64toi32_i32$HIGH_BITS);
   $1983($1_1 + 16 | 0, 0, $1960(0, 20800), i64toi32_i32$HIGH_BITS);
   $1983($4_1, 1160, $1960(0, 20792), i64toi32_i32$HIGH_BITS);
   $1983($4_1, 1152, $1960(0, 20784), i64toi32_i32$HIGH_BITS);
   $1973($4_1 + 1136 | 0, 0, $1944(0, 20864));
   $1983($4_1 + 1128 | 0, 0, $1960(0, 20856), i64toi32_i32$HIGH_BITS);
   $1983($4_1 + 1120 | 0, 0, $1960(0, 20848), i64toi32_i32$HIGH_BITS);
   $1_1 = $4_1 + 1088 | 0;
   $1983($1_1 + 24 | 0, 0, $1960(0, 20840), i64toi32_i32$HIGH_BITS);
   $1983($1_1 + 16 | 0, 0, $1960(0, 20832), i64toi32_i32$HIGH_BITS);
   $1983($4_1, 1096, $1960(0, 20824), i64toi32_i32$HIGH_BITS);
   $1983($4_1, 1088, $1960(0, 20816), i64toi32_i32$HIGH_BITS);
   $37 = $6_1 + 12264 | 0;
   if (($1944($37, 0) | 0) < 0) {
    $1973($37, 0, 4)
   }
   $35_1 = $6_1 + 12268 | 0;
   if (($1944($35_1, 0) | 0) < 0) {
    $1973($35_1, 0, 2)
   }
   if ($709(4761)) {
    $583(8079, $0_1);
    $1_1 = $1944(0, 73568);
    $0_1 = $1944($1_1, 7080);
    $1968($0_1, 140, 1);
    if (!$1937($0_1, 143)) {
     $7_1 = $1963($1_1 + 5492 | 0, 0);
     $1986($0_1 + 212 | 0, 0, $1963($0_1 + 220 | 0, 0));
     $1982($0_1 + 248 | 0, 0, $1959($0_1 + 256 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1986($0_1 + 264 | 0, 0, $1963($0_1 + 268 | 0, 0));
     $1986($0_1, 208, Math_fround($7_1 + $1963($0_1 + 216 | 0, 0)));
    }
    $350(17167);
    $583(6371, $6_1 + 12258 | 0);
    $2_1 = $6_1 + 12257 | 0;
    $583(5142, $2_1);
    $1_1 = $1944(0, 73568);
    $0_1 = $1944($1_1, 7080);
    $1968($0_1, 140, 1);
    if (!$1937($0_1, 143)) {
     $7_1 = $1963($1_1 + 5492 | 0, 0);
     $1986($0_1 + 212 | 0, 0, $1963($0_1 + 220 | 0, 0));
     $1982($0_1 + 248 | 0, 0, $1959($0_1 + 256 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1986($0_1 + 264 | 0, 0, $1963($0_1 + 268 | 0, 0));
     $1986($0_1, 208, Math_fround($7_1 + $1963($0_1 + 216 | 0, 0)));
    }
    $1986($1_1 + 7224 | 0, 0, Math_fround($1963($1_1, 6468) * Math_fround(12.0)));
    $1973($1_1, 7220, $1944($1_1, 7220) | 1);
    $0_1 = $602(10880, $37, $4_1 + 1152 | 0, 8, 8) | $1937($2_1, 0);
    $1968($2_1, 0, $0_1);
    label$8 : {
     if (!($0_1 & 255)) {
      break label$8
     }
     $0_1 = $1944($6_1, 7508);
     if (!$0_1) {
      break label$8
     }
     $1973($4_1, 848, $1944($0_1, 0));
     $567(16161, $4_1 + 848 | 0);
     $1_1 = $1944(0, 73568);
     $0_1 = $1944($1_1, 7080);
     $1968($0_1, 140, 1);
     $10_1 = $1963($1_1 + 5524 | 0, 0);
     $1_1 = $0_1 + 272 | 0;
     $7_1 = Math_fround($10_1 + $1963($1_1, 0));
     $1986($1_1, 0, $7_1);
     $1986($0_1, 208, Math_fround(Math_fround($7_1 + $1963($0_1, 12)) + $1963($0_1 + 276 | 0, 0)));
     $0_1 = $4_1 + 784 | 0;
     $2_1 = $0_1 + 16 | 0;
     $5_1 = $0_1 + 24 | 0;
     $8 = $4_1 + 816 | 0;
     $9 = $0_1 + 40 | 0;
     $14 = $0_1 + 48 | 0;
     $1_1 = 0;
     while (1) {
      $0_1 = $1944($6_1, 7508);
      $11_1 = Math_fround(0.0);
      $7_1 = Math_fround(0.0);
      $10_1 = Math_fround(0.0);
      $16_1 = Math_fround(0.0);
      label$10 : {
       label$11 : {
        switch ($1_1 | 0) {
        case 0:
         $10_1 = $1963($0_1 + 16 | 0, 0);
         $11_1 = Math_fround($10_1 + $1963($0_1 + 24 | 0, 0));
         $16_1 = $1963($0_1, 12);
         $7_1 = Math_fround($16_1 + $1963($0_1, 20));
         break label$10;
        case 1:
         $11_1 = $1963($0_1 + 428 | 0, 0);
         $7_1 = $1963($0_1 + 424 | 0, 0);
         $10_1 = $1963($0_1 + 420 | 0, 0);
         $16_1 = $1963($0_1, 416);
         break label$10;
        case 2:
         $11_1 = $1963($0_1 + 444 | 0, 0);
         $7_1 = $1963($0_1 + 440 | 0, 0);
         $10_1 = $1963($0_1 + 436 | 0, 0);
         $16_1 = $1963($0_1, 432);
         break label$10;
        case 3:
         $11_1 = $1963($0_1 + 460 | 0, 0);
         $7_1 = $1963($0_1 + 456 | 0, 0);
         $10_1 = $1963($0_1 + 452 | 0, 0);
         $16_1 = $1963($0_1, 448);
         break label$10;
        case 4:
         $11_1 = $1963($0_1 + 476 | 0, 0);
         $7_1 = $1963($0_1 + 472 | 0, 0);
         $10_1 = $1963($0_1 + 468 | 0, 0);
         $16_1 = $1963($0_1, 464);
         break label$10;
        case 5:
         $10_1 = Math_fround(Math_fround($1963($0_1 + 436 | 0, 0) - $1963($0_1 + 92 | 0, 0)) + $1963($0_1 - -64 | 0, 0));
         $11_1 = Math_fround($10_1 + $1963($0_1 + 40 | 0, 0));
         $16_1 = Math_fround(Math_fround($1963($0_1, 432) - $1963($0_1, 88)) + $1963($0_1, 60));
         $7_1 = Math_fround($16_1 + $1963($0_1, 36));
         break label$10;
        case 6:
         $10_1 = Math_fround(Math_fround($1963($0_1 + 436 | 0, 0) - $1963($0_1 + 92 | 0, 0)) + $1963($0_1 - -64 | 0, 0));
         $11_1 = Math_fround($10_1 + $1963($0_1 + 48 | 0, 0));
         $16_1 = Math_fround(Math_fround($1963($0_1, 432) - $1963($0_1, 88)) + $1963($0_1, 60));
         $7_1 = Math_fround($16_1 + $1963($0_1, 44));
         break label$10;
        case 7:
         break label$11;
        default:
         break label$10;
        };
       }
       $11_1 = $1963($0_1 + 524 | 0, 0);
       $7_1 = $1963($0_1 + 520 | 0, 0);
       $10_1 = $1963($0_1 + 516 | 0, 0);
       $16_1 = $1963($0_1, 512);
      }
      $1990($2_1, 0, +$7_1);
      $1990($5_1, 0, +$11_1);
      $1990($8, 0, +Math_fround($7_1 - $16_1));
      $1990($9, 0, +Math_fround($11_1 - $10_1));
      $1973($14, 0, $1944(($4_1 + 1152 | 0) + ($1_1 << 2) | 0, 0));
      $1990($4_1, 784, +$16_1);
      $1990($4_1, 792, +$10_1);
      $557(5903, $4_1 + 784 | 0);
      $0_1 = $1_1 + 1 | 0;
      $1_1 = $0_1;
      if (($1_1 | 0) != 8) {
       continue
      }
      break;
     };
     $1_1 = $1944(0, 73568);
     $0_1 = $1944($1_1, 7080);
     $1968($0_1, 140, 1);
     $2_1 = $0_1 + 272 | 0;
     $7_1 = Math_fround($1963($2_1, 0) - $1963($1_1 + 5524 | 0, 0));
     $1986($2_1, 0, $7_1);
     $1986($0_1, 208, Math_fround(Math_fround($7_1 + $1963($0_1, 12)) + $1963($0_1 + 276 | 0, 0)));
    }
    $2_1 = $6_1 + 12259 | 0;
    $583(5166, $2_1);
    $1_1 = $1944(0, 73568);
    $0_1 = $1944($1_1, 7080);
    $1968($0_1, 140, 1);
    if (!$1937($0_1, 143)) {
     $7_1 = $1963($1_1 + 5492 | 0, 0);
     $1986($0_1 + 212 | 0, 0, $1963($0_1 + 220 | 0, 0));
     $1982($0_1 + 248 | 0, 0, $1959($0_1 + 256 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1986($0_1 + 264 | 0, 0, $1963($0_1 + 268 | 0, 0));
     $1986($0_1, 208, Math_fround($7_1 + $1963($0_1 + 216 | 0, 0)));
    }
    $1986($1_1 + 7224 | 0, 0, Math_fround($1963($1_1, 6468) * Math_fround(12.0)));
    $1973($1_1, 7220, $1944($1_1, 7220) | 1);
    $0_1 = $602(10905, $35_1, $4_1 + 1088 | 0, 13, 13) | $1937($2_1, 0);
    $1968($2_1, 0, $0_1);
    label$20 : {
     if (!($0_1 & 255)) {
      break label$20
     }
     if (!$1944($6_1, 7508)) {
      break label$20
     }
     if (($1944($6_1 + 8068 | 0, 0) | 0) <= 0) {
      break label$20
     }
     $0_1 = $4_1 + 640 | 0;
     $9 = $0_1 + 48 | 0;
     $14 = $4_1 + 692 | 0;
     $15_1 = $0_1 + 16 | 0;
     $19 = $0_1 + 24 | 0;
     $20_1 = $0_1 + 32 | 0;
     $24 = $0_1 + 40 | 0;
     $0_1 = 0;
     while (1) {
      $2_1 = $0_1;
      $0_1 = $1944($1944($6_1, 8076) + ($0_1 << 3) | 0, 4);
      label$22 : {
       if (($0_1 | 0) == -1) {
        break label$22
       }
       $1_1 = $1944($6_1, 8064);
       if (!$1_1) {
        break label$22
       }
       $5_1 = $1_1 + Math_imul($0_1, 456) | 0;
       if (($1944($5_1, 80) | 0) < ($1944($6_1, 6984) - 1 | 0)) {
        break label$22
       }
       $0_1 = $1944($5_1, 356);
       $1_1 = $1944($6_1, 7508);
       if (($0_1 | 0) != ($1_1 | 0)) {
        if (($1944($5_1, 360) | 0) != ($1_1 | 0)) {
         break label$22
        }
       }
       $1_1 = $1944($5_1, 84);
       $8 = $1944($5_1, 0);
       $1973($4_1, 776, $1944($0_1, 0));
       $1973($4_1, 772, $1_1);
       $1973($4_1, 768, $8);
       $567(18663, $4_1 + 768 | 0);
       if ($89(0)) {
        $0_1 = $92($1944($1944($1944(0, 73568) + 7504 | 0, 0), 0), 1, 11768);
        $7_1 = $1963($5_1, 212);
        $1986($4_1, 964, Math_fround($1963($5_1 + 216 | 0, 0) + Math_fround(-1.0)));
        $1986($4_1, 960, Math_fround($7_1 + Math_fround(-1.0)));
        $7_1 = $1963($5_1 + 220 | 0, 0);
        $1986($4_1, 948, Math_fround($1963($5_1 + 224 | 0, 0) + Math_fround(1.0)));
        $1986($4_1, 944, Math_fround($7_1 + Math_fround(1.0)));
        $400($0_1, $4_1 + 960 | 0, $4_1 + 944 | 0, -16711681, Math_fround(0.0), 0, Math_fround(2.0));
       }
       $8 = $5_1 + 84 | 0;
       $1_1 = $1944(0, 73568);
       $0_1 = $1944($1_1, 7080);
       $1968($0_1, 140, 1);
       $10_1 = $1963($1_1 + 5524 | 0, 0);
       $1_1 = $0_1 + 272 | 0;
       $7_1 = Math_fround($10_1 + $1963($1_1, 0));
       $1986($1_1, 0, $7_1);
       $1986($0_1, 208, Math_fround(Math_fround($7_1 + $1963($0_1, 12)) + $1963($0_1 + 276 | 0, 0)));
       $0_1 = 0;
       while (1) {
        $1_1 = $0_1;
        label$26 : {
         if ($1_1 >>> 0 >= 6) {
          label$28 : {
           switch ($1_1 - 6 | 0) {
           case 0:
           case 2:
            break label$28;
           default:
            break label$26;
           };
          }
          if (($1944($8, 0) | 0) <= 0) {
           break label$26
          }
          $25_1 = ($4_1 + 1088 | 0) + ($1_1 << 2) | 0;
          $0_1 = 0;
          while (1) {
           $351($4_1 + 944 | 0, $5_1, $1_1, $0_1);
           $26_1 = $1944($25_1, 0);
           $1973($9, 0, $0_1);
           $1973($14, 0, $26_1);
           $7_1 = $1963($4_1, 952);
           $1990($15_1, 0, +$7_1);
           $10_1 = $1963($4_1, 956);
           $1990($19, 0, +$10_1);
           $11_1 = $1963($4_1, 944);
           $1990($20_1, 0, +Math_fround($7_1 - $11_1));
           $3 = $10_1;
           $10_1 = $1963($4_1, 948);
           $1990($24, 0, +Math_fround($3 - $10_1));
           $1990($4_1, 640, +$11_1);
           $1990($4_1, 648, +$10_1);
           $26_1 = $4_1 + 960 | 0;
           $21($26_1, 128, 5703, $4_1 + 640 | 0);
           $1982($4_1, 936, 0, 0);
           $601($26_1, 0, 0, $4_1 + 936 | 0);
           if ($89(0)) {
            $26_1 = $92($1944($1944($1944(0, 73568) + 7504 | 0, 0), 0), 1, 11768);
            $1986($4_1, 940, Math_fround($10_1 + Math_fround(-1.0)));
            $1986($4_1, 936, Math_fround($11_1 + Math_fround(-1.0)));
            $1986($4_1, 932, Math_fround($1963($4_1, 956) + Math_fround(1.0)));
            $1986($4_1, 928, Math_fround($7_1 + Math_fround(1.0)));
            $400($26_1, $4_1 + 936 | 0, $4_1 + 928 | 0, -16711681, Math_fround(0.0), 0, Math_fround(2.0));
           }
           $0_1 = $0_1 + 1 | 0;
           if (($1944($8, 0) | 0) > ($0_1 | 0)) {
            continue
           }
           break;
          };
          break label$26;
         }
         $351($4_1 + 944 | 0, $5_1, $1_1, -1);
         $0_1 = $4_1 + 704 | 0;
         $7_1 = $1963($4_1, 952);
         $1990($0_1 + 16 | 0, 0, +$7_1);
         $10_1 = $1963($4_1, 956);
         $1990($0_1 + 24 | 0, 0, +$10_1);
         $1973($0_1 + 48 | 0, 0, $1944(($4_1 + 1088 | 0) + ($1_1 << 2) | 0, 0));
         $11_1 = $1963($4_1, 944);
         $1990($0_1 + 32 | 0, 0, +Math_fround($7_1 - $11_1));
         $3 = $10_1;
         $10_1 = $1963($4_1, 948);
         $1990($0_1 + 40 | 0, 0, +Math_fround($3 - $10_1));
         $1990($4_1, 704, +$11_1);
         $1990($4_1, 712, +$10_1);
         $25_1 = $4_1 + 960 | 0;
         $21($25_1, 128, 5903, $0_1);
         $1982($4_1, 936, 0, 0);
         $601($25_1, 0, 0, $4_1 + 936 | 0);
         if (!$89(0)) {
          break label$26
         }
         $0_1 = $92($1944($1944($1944(0, 73568) + 7504 | 0, 0), 0), 1, 11768);
         $1986($4_1, 940, Math_fround($10_1 + Math_fround(-1.0)));
         $1986($4_1, 936, Math_fround($11_1 + Math_fround(-1.0)));
         $1986($4_1, 932, Math_fround($1963($4_1, 956) + Math_fround(1.0)));
         $1986($4_1, 928, Math_fround($7_1 + Math_fround(1.0)));
         $400($0_1, $4_1 + 936 | 0, $4_1 + 928 | 0, -16711681, Math_fround(0.0), 0, Math_fround(2.0));
        }
        $0_1 = $1_1 + 1 | 0;
        if (($0_1 | 0) != 13) {
         continue
        }
        break;
       };
       $1_1 = $1944(0, 73568);
       $0_1 = $1944($1_1, 7080);
       $1968($0_1, 140, 1);
       $5_1 = $0_1 + 272 | 0;
       $7_1 = Math_fround($1963($5_1, 0) - $1963($1_1 + 5524 | 0, 0));
       $1986($5_1, 0, $7_1);
       $1986($0_1, 208, Math_fround(Math_fround($7_1 + $1963($0_1, 12)) + $1963($0_1 + 276 | 0, 0)));
      }
      $0_1 = $2_1 + 1 | 0;
      if (($1944($6_1, 8068) | 0) > ($0_1 | 0)) {
       continue
      }
      break;
     };
    }
    $1982($4_1, 960, 0, 0);
    if ($571(17668, $4_1 + 960 | 0)) {
     $1968($1944(0, 73568), 12248, 1)
    }
    $1_1 = $1944(0, 73568);
    $0_1 = $1944($1_1, 7080);
    $1968($0_1, 140, 1);
    if (!$1937($0_1, 143)) {
     $7_1 = $1963($1_1 + 5492 | 0, 0);
     $1986($0_1 + 212 | 0, 0, $1963($0_1 + 220 | 0, 0));
     $1982($0_1 + 248 | 0, 0, $1959($0_1 + 256 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1986($0_1 + 264 | 0, 0, $1963($0_1 + 268 | 0, 0));
     $1986($0_1, 208, Math_fround($7_1 + $1963($0_1 + 216 | 0, 0)));
    }
    $350(17006);
    $716();
   }
   $1973($4_1, 624, $1944($6_1, 7008));
   if ($706(3956, 18413, $4_1 + 624 | 0)) {
    $1973($4_1, 612, $1944($6_1, 7008));
    $1973($4_1, 608, 6342);
    if ($706(6342, 18512, $4_1 + 608 | 0)) {
     $0_1 = $1944($6_1, 7008);
     if (($0_1 | 0) > 0) {
      while (1) {
       $1_1 = $0_1;
       $0_1 = $1_1 - 1 | 0;
       $2_1 = $0_1 << 2;
       $265($1944($1944($6_1, 7016) + $2_1 | 0, 0));
       $352($1944($1944($6_1, 7016) + $2_1 | 0, 0), 1800);
       $2_1 = $1944($1944(0, 73568), 7080);
       $1973($2_1, 196, $1944($2_1, 196) - 1 | 0);
       if (($1_1 | 0) > 1) {
        continue
       }
       break;
      }
     }
     $716();
    }
    $1973($4_1, 596, $1944($6_1, 7020));
    $1973($4_1, 592, 17764);
    if ($706(17764, 18512, $4_1 + 592 | 0)) {
     $0_1 = $1944($6_1, 7020);
     if (($0_1 | 0) > 0) {
      while (1) {
       $1_1 = $0_1;
       $0_1 = $1_1 - 1 | 0;
       $2_1 = $0_1 << 2;
       $265($1944($1944($6_1, 7028) + $2_1 | 0, 0));
       $352($1944($1944($6_1, 7028) + $2_1 | 0, 0), 1800);
       $2_1 = $1944($1944(0, 73568), 7080);
       $1973($2_1, 196, $1944($2_1, 196) - 1 | 0);
       if (($1_1 | 0) > 1) {
        continue
       }
       break;
      }
     }
     $716();
    }
    if ($709(17975)) {
     $0_1 = $1944($6_1 + 7036 | 0, 0);
     label$41 : {
      if (($0_1 | 0) >= 0) {
       break label$41
      }
      $1_1 = $0_1 + (($0_1 | 0) / 2 | 0) | 0;
      $1_1 = ($1_1 | 0) > 0 ? $1_1 : 0;
      if (($0_1 | 0) >= ($1_1 | 0)) {
       break label$41
      }
      $0_1 = $1944(0, 73568);
      if ($0_1) {
       $0_1 = $0_1 + 876 | 0;
       $1973($0_1, 0, $1944($0_1, 0) + 1 | 0);
      }
      $0_1 = (((wasm2js_i32$1 = $1_1 << 2, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
      $2_1 = $1944($6_1 + 7040 | 0, 0);
      if ($2_1) {
       $1602($0_1, $2_1, $1944($6_1, 7032) << 2);
       $2_1 = $1944($6_1, 7040);
       label$44 : {
        if (!$2_1) {
         break label$44
        }
        $5_1 = $1944(0, 73568);
        if (!$5_1) {
         break label$44
        }
        $5_1 = $5_1 + 876 | 0;
        $1973($5_1, 0, $1944($5_1, 0) - 1 | 0);
       }
       ((wasm2js_i32$2 = $2_1, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
      }
      $1973($6_1, 7036, $1_1);
      $1973($6_1, 7040, $0_1);
     }
     $1973($6_1, 7032, 0);
     if (($1944($6_1, 7008) | 0) > 0) {
      $0_1 = 0;
      while (1) {
       $5_1 = $1944($6_1, 7016) + ($0_1 << 2) | 0;
       if (($1944($1944($5_1, 0), 536) + 1 | 0) >= ($1944($6_1, 6984) | 0)) {
        $2_1 = $1944($6_1, 7032);
        $1_1 = $1944($6_1, 7036);
        label$48 : {
         if (($2_1 | 0) != ($1_1 | 0)) {
          break label$48
         }
         $8 = $1_1 ? $1_1 + (($1_1 | 0) / 2 | 0) | 0 : 8;
         $2_1 = $2_1 + 1 | 0;
         $2_1 = ($2_1 | 0) < ($8 | 0) ? $8 : $2_1;
         if (($1_1 | 0) >= ($2_1 | 0)) {
          break label$48
         }
         $1_1 = $1944(0, 73568);
         if ($1_1) {
          $1_1 = $1_1 + 876 | 0;
          $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
         }
         $1_1 = (((wasm2js_i32$1 = $2_1 << 2, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73256) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0) | 0);
         $8 = $1944($6_1, 7040);
         if ($8) {
          $1602($1_1, $8, $1944($6_1, 7032) << 2);
          $8 = $1944($6_1, 7040);
          label$53 : {
           if (!$8) {
            break label$53
           }
           $9 = $1944(0, 73568);
           if (!$9) {
            break label$53
           }
           $9 = $9 + 876 | 0;
           $1973($9, 0, $1944($9, 0) - 1 | 0);
          }
          ((wasm2js_i32$2 = $8, wasm2js_i32$1 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
         }
         $1973($6_1, 7036, $2_1);
         $1973($6_1, 7040, $1_1);
        }
        $1973($1944($6_1, 7040) + ($1944($6_1, 7032) << 2) | 0, 0, $1944($5_1, 0));
        $1973($6_1, 7032, $1944($6_1, 7032) + 1 | 0);
       }
       $0_1 = $0_1 + 1 | 0;
       if (($1944($6_1, 7008) | 0) > ($0_1 | 0)) {
        continue
       }
       break;
      };
     }
     $0_1 = $1944($6_1, 7032);
     if ($0_1 >>> 0 >= 2) {
      $1685($1944($6_1, 7040), $0_1, 4, 10)
     }
     $354($1944($6_1, 7040), $1944($6_1, 7032), 0);
     $716();
    }
    $716();
   }
   $9 = $1944($6_1, 7496);
   label$55 : {
    if (($9 | 0) <= 0) {
     $0_1 = 0;
     break label$55;
    }
    $14 = $1944($6_1 + 7504 | 0, 0);
    $0_1 = 0;
    $1_1 = 0;
    while (1) {
     $5_1 = $1_1;
     $15_1 = $1944($14 + ($1_1 << 2) | 0, 0) + 96 | 0;
     $1_1 = 0;
     $8 = 0;
     while (1) {
      $2_1 = $1_1;
      $1_1 = $1_1 + 1 | 0;
      $8 = $1944($15_1 + Math_imul($2_1, 12) | 0, 0) + $8 | 0;
      if (!$2_1) {
       continue
      }
      break;
     };
     $0_1 = $0_1 + $8 | 0;
     $1_1 = $5_1 + 1 | 0;
     if (($9 | 0) != ($1_1 | 0)) {
      continue
     }
     break;
    };
   }
   $1973($4_1, 576, $0_1);
   if ($706(4149, 18426, $4_1 + 576 | 0)) {
    $583(8966, $6_1 + 12260 | 0);
    $583(8922, $6_1 + 12261 | 0);
    if (($1944($6_1, 7496) | 0) > 0) {
     $0_1 = 0;
     while (1) {
      $2_1 = $0_1;
      $8 = $1944($1944($6_1, 7504) + ($0_1 << 2) | 0, 0) + 96 | 0;
      $0_1 = 0;
      while (1) {
       $1_1 = $0_1;
       $5_1 = $8 + Math_imul($1_1, 12) | 0;
       if (($1944($5_1, 0) | 0) > 0) {
        $9 = $5_1 + 8 | 0;
        $0_1 = 0;
        while (1) {
         $355(0, $1944($1944($9, 0) + ($0_1 << 2) | 0, 0));
         $0_1 = $0_1 + 1 | 0;
         if (($1944($5_1, 0) | 0) > ($0_1 | 0)) {
          continue
         }
         break;
        };
       }
       $0_1 = $1_1 + 1 | 0;
       if (!$1_1) {
        continue
       }
       break;
      };
      $0_1 = $2_1 + 1 | 0;
      if (($1944($6_1, 7496) | 0) > ($0_1 | 0)) {
       continue
      }
      break;
     };
    }
    $716();
   }
   $1973($4_1, 560, $1944($6_1, 7496));
   if ($706(4159, 18441, $4_1 + 560 | 0)) {
    $7_1 = $717();
    $19 = $1944(0, 73568);
    $15_1 = $1944($19, 7080);
    $1968($15_1, 140, 1);
    if ($7_1 == Math_fround(0.0)) {
     $7_1 = $1963($19 + 5524 | 0, 0)
    }
    $0_1 = $15_1 + 272 | 0;
    $7_1 = Math_fround($7_1 + $1963($0_1, 0));
    $1986($0_1, 0, $7_1);
    $18_1 = Math_fround(Math_fround($7_1 + $1963($15_1, 12)) + $1963($15_1 + 276 | 0, 0));
    $1986($15_1, 208, $18_1);
    $2_1 = $1944($19, 7496);
    label$67 : {
     if (($2_1 | 0) <= 0) {
      $7_1 = Math_fround(3402823466385288598117041.0e14);
      $11_1 = Math_fround(3402823466385288598117041.0e14);
      $16_1 = Math_fround(-3402823466385288598117041.0e14);
      $10_1 = Math_fround(-3402823466385288598117041.0e14);
      break label$67;
     }
     $5_1 = $1944($19 + 7504 | 0, 0);
     $0_1 = 0;
     $10_1 = Math_fround(-3402823466385288598117041.0e14);
     $16_1 = Math_fround(-3402823466385288598117041.0e14);
     $11_1 = Math_fround(3402823466385288598117041.0e14);
     $7_1 = Math_fround(3402823466385288598117041.0e14);
     while (1) {
      $1_1 = $1944($5_1 + ($0_1 << 2) | 0, 0);
      $3 = $1963($1_1, 4);
      $7_1 = $3 < $7_1 ? $3 : $7_1;
      $13 = $1963($1_1 + 8 | 0, 0);
      $11_1 = $11_1 > $13 ? $13 : $11_1;
      $3 = Math_fround($3 + $1963($1_1, 12));
      $16_1 = $3 > $16_1 ? $3 : $16_1;
      $3 = Math_fround($13 + $1963($1_1 + 16 | 0, 0));
      $10_1 = $3 > $10_1 ? $3 : $10_1;
      $0_1 = $0_1 + 1 | 0;
      if (($2_1 | 0) != ($0_1 | 0)) {
       continue
      }
      break;
     };
    }
    if (($2_1 | 0) > 0) {
     $48_1 = Math_fround($1963($15_1 + 212 | 0, 0) - Math_fround($11_1 * Math_fround(.125)));
     $49 = Math_fround($18_1 - Math_fround($7_1 * Math_fround(.125)));
     $0_1 = 0;
     while (1) {
      $1_1 = $1944($1944($19, 7504) + ($0_1 << 2) | 0, 0);
      $13 = $1963($1_1, 12);
      $18_1 = $1963($1_1 + 16 | 0, 0);
      $3 = $1963($1_1, 4);
      $22_1 = $1963($1_1 + 8 | 0, 0);
      $1986($4_1, 964, Math_fround($48_1 + Math_fround($22_1 * Math_fround(.125))));
      $1986($4_1, 960, Math_fround($49 + Math_fround($3 * Math_fround(.125))));
      $1986($4_1, 972, Math_fround($48_1 + Math_fround(Math_fround($22_1 + $18_1) * Math_fround(.125))));
      $1986($4_1, 968, Math_fround($49 + Math_fround(Math_fround($3 + $13) * Math_fround(.125))));
      $25_1 = $1944($15_1, 580);
      $14 = $4_1 + 960 | 0;
      $8 = global$0 - 32 | 0;
      global$0 = $8;
      $9 = $1944(0, 73568);
      $3 = Math_fround($1963($9 + 5708 | 0, 0) * Math_fround($1963($9, 5416) * Math_fround(.4000000059604645)));
      $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
      label$1 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $2_1 = ~~$3;
        break label$1;
       }
       $2_1 = -2147483648;
      }
      $3 = $1963($9 + 5700 | 0, 0);
      $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
      label$3 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $12_1 = ~~$3;
        break label$3;
       }
       $12_1 = -2147483648;
      }
      $5_1 = $12_1 << 8;
      $2_1 = $2_1 << 24;
      $3 = $1963($9 + 5696 | 0, 0);
      $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
      label$5 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $12_1 = ~~$3;
        break label$5;
       }
       $12_1 = -2147483648;
      }
      $5_1 = $12_1 | $5_1;
      $3 = $1963($9 + 5704 | 0, 0);
      $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
      label$7 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $24 = ~~$3;
        break label$7;
       }
       $24 = -2147483648;
      }
      $18_1 = $1963($1_1 + 8 | 0, 0);
      $22_1 = $1963($1_1 + 16 | 0, 0);
      $28_1 = $1963($14 + 12 | 0, 0);
      $23_1 = $1963($1_1, 4);
      $31_1 = $1963($1_1, 12);
      $3 = $1963($14, 0);
      $27_1 = $1963($14, 8);
      $13 = $1963($14, 4);
      $20_1 = $1944($9, 7080);
      $26_1 = $14 + 8 | 0;
      $401($1944($20_1, 580), $14, $26_1, $2_1 | ($5_1 | $24 << 16), Math_fround(0.0), 0);
      if ($1944($9, 7008)) {
       $32_1 = Math_fround(Math_fround($28_1 - $13) / $22_1);
       $41_1 = Math_fround($13 - Math_fround($32_1 * $18_1));
       $22_1 = Math_fround(Math_fround($27_1 - $3) / $31_1);
       $28_1 = Math_fround($3 - Math_fround($22_1 * $23_1));
       $42_1 = $8 + 8 | 0;
       $24 = $8 + 24 | 0;
       $1_1 = 0;
       while (1) {
        $5_1 = $1_1;
        $1_1 = $1944($1944($9, 7016) + ($1_1 << 2) | 0, 0);
        label$111 : {
         if (!$1937($1_1, 139)) {
          break label$111
         }
         if ($1937($1_1 + 11 | 0, 0) & 1) {
          break label$111
         }
         $18_1 = $1963($1_1 + 24 | 0, 0);
         $3 = $1963($1_1 + 16 | 0, 0);
         $13 = $1963($1_1, 12);
         $29_1 = Math_fround($13 + $1963($1_1, 20));
         $1986($8, 24, $29_1);
         $1986($8, 20, $3);
         $1986($8, 16, $13);
         $1986($8, 28, Math_fround($3 + $18_1));
         if (!($1937($1_1, 8) & 1)) {
          $1944($1_1, 728)
         }
         $18_1 = $1963($1_1, 28);
         $33_1 = $1963($1_1, 12);
         $1983($8, 0, $1959($1_1, 12), i64toi32_i32$HIGH_BITS);
         $23_1 = Math_fround($41_1 + Math_fround($32_1 * $1963($8, 4)));
         label$132 : {
          if (Math_fround(Math_abs($23_1)) < Math_fround(2147483648.0)) {
           $2_1 = ~~$23_1;
           break label$132;
          }
          $2_1 = -2147483648;
         }
         $23_1 = Math_fround($2_1 | 0);
         $1986($8, 4, $23_1);
         $31_1 = Math_fround($23_1 + Math_fround(5.0));
         $1986($8, 12, $31_1);
         $27_1 = Math_fround($41_1 + Math_fround($32_1 * $1963($8, 28)));
         label$153 : {
          if (Math_fround(Math_abs($27_1)) < Math_fround(2147483648.0)) {
           $2_1 = ~~$27_1;
           break label$153;
          }
          $2_1 = -2147483648;
         }
         $27_1 = Math_fround($2_1 | 0);
         $1986($8, 28, $27_1);
         $3 = Math_fround($41_1 + Math_fround($32_1 * $3));
         label$174 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $2_1 = ~~$3;
           break label$174;
          }
          $2_1 = -2147483648;
         }
         $38_1 = Math_fround($2_1 | 0);
         $1986($8, 20, $38_1);
         $3 = Math_fround($28_1 + Math_fround($22_1 * Math_fround($33_1 + $18_1)));
         label$19 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $2_1 = ~~$3;
           break label$19;
          }
          $2_1 = -2147483648;
         }
         $33_1 = Math_fround($2_1 | 0);
         $1986($8, 8, $33_1);
         $3 = Math_fround($28_1 + Math_fround($22_1 * $1963($8, 0)));
         label$215 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $2_1 = ~~$3;
           break label$215;
          }
          $2_1 = -2147483648;
         }
         $39_1 = Math_fround($2_1 | 0);
         $1986($8, 0, $39_1);
         $3 = Math_fround($28_1 + Math_fround($22_1 * $29_1));
         label$23 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $2_1 = ~~$3;
           break label$23;
          }
          $2_1 = -2147483648;
         }
         $29_1 = Math_fround($2_1 | 0);
         $1986($8, 24, $29_1);
         $3 = Math_fround($28_1 + Math_fround($22_1 * $13));
         label$256 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $2_1 = ~~$3;
           break label$256;
          }
          $2_1 = -2147483648;
         }
         $40_1 = Math_fround($2_1 | 0);
         $1986($8, 16, $40_1);
         $3 = $1963($14, 4);
         $13 = $1963($14, 0);
         $2_1 = $1959($14, 8);
         $12_1 = i64toi32_i32$HIGH_BITS;
         $18_1 = (wasm2js_scratch_store_i32(2, $2_1), wasm2js_scratch_load_f32());
         $1986($8, 16, $13 > $40_1 ? $13 : $18_1 < $40_1 ? $18_1 : $40_1);
         $1986($8, 24, $13 > $29_1 ? $13 : $18_1 < $29_1 ? $18_1 : $29_1);
         $1986($8, 0, $13 > $39_1 ? $13 : $18_1 < $39_1 ? $18_1 : $39_1);
         $1986($8, 8, $13 > $33_1 ? $13 : $18_1 < $33_1 ? $18_1 : $33_1);
         $13 = (wasm2js_scratch_store_i32(2, $12_1), wasm2js_scratch_load_f32());
         $1986($8, 20, $3 > $38_1 ? $3 : $13 < $38_1 ? $13 : $38_1);
         $1986($8, 28, $3 > $27_1 ? $3 : $13 < $27_1 ? $13 : $27_1);
         $1986($8, 4, $3 > $23_1 ? $3 : $13 < $23_1 ? $13 : $23_1);
         $1986($8, 12, $3 > $31_1 ? $3 : $13 < $31_1 ? $13 : $31_1);
         $2_1 = $1944($9, 7508);
         if ($2_1) {
          $12_1 = ($1944($1_1, 744) | 0) == ($1944($2_1, 744) | 0)
         } else {
          $12_1 = 0
         }
         $2_1 = $1944(0, 73568);
         $3 = $1963($2_1 + 5652 | 0, 0);
         $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
         label$297 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $17_1 = ~~$3;
           break label$297;
          }
          $17_1 = -2147483648;
         }
         $17_1 = $17_1 << 8;
         $3 = $1963($2_1 + 5648 | 0, 0);
         $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
         label$31 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $21_1 = ~~$3;
           break label$31;
          }
          $21_1 = -2147483648;
         }
         $17_1 = $21_1 | $17_1;
         $3 = $1963($2_1 + 5656 | 0, 0);
         $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
         label$33 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $21_1 = ~~$3;
           break label$33;
          }
          $21_1 = -2147483648;
         }
         $17_1 = $17_1 | $21_1 << 16;
         $3 = Math_fround($1963($2_1 + 5660 | 0, 0) * $1963($2_1, 5416));
         $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
         label$35 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $2_1 = ~~$3;
           break label$35;
          }
          $2_1 = -2147483648;
         }
         $401($1944($20_1, 580), $8 + 16 | 0, $24, $17_1 | $2_1 << 24, Math_fround(0.0), 0);
         $17_1 = $1944(0, 73568);
         $2_1 = ($17_1 + 5416 | 0) + ($12_1 ? 176 : 160) | 0;
         $3 = $1963($2_1 + 204 | 0, 0);
         $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
         label$37 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $12_1 = ~~$3;
           break label$37;
          }
          $12_1 = -2147483648;
         }
         $12_1 = $12_1 << 8;
         $3 = $1963($2_1 + 200 | 0, 0);
         $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
         label$398 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $21_1 = ~~$3;
           break label$398;
          }
          $21_1 = -2147483648;
         }
         $12_1 = $21_1 | $12_1;
         $3 = $1963($2_1 + 208 | 0, 0);
         $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
         label$419 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $21_1 = ~~$3;
           break label$419;
          }
          $21_1 = -2147483648;
         }
         $12_1 = $12_1 | $21_1 << 16;
         $3 = Math_fround($1963($2_1 + 212 | 0, 0) * $1963($17_1, 5416));
         $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
         label$43 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $2_1 = ~~$3;
           break label$43;
          }
          $2_1 = -2147483648;
         }
         $401($1944($20_1, 580), $8, $42_1, $12_1 | $2_1 << 24, Math_fround(0.0), 0);
         $2_1 = $1944(0, 73568);
         $3 = $1963($2_1 + 5700 | 0, 0);
         $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
         label$45 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $12_1 = ~~$3;
           break label$45;
          }
          $12_1 = -2147483648;
         }
         $12_1 = $12_1 << 8;
         $3 = $1963($2_1 + 5696 | 0, 0);
         $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
         label$47 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $17_1 = ~~$3;
           break label$47;
          }
          $17_1 = -2147483648;
         }
         $12_1 = $17_1 | $12_1;
         $3 = $1963($2_1 + 5704 | 0, 0);
         $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
         label$49 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $17_1 = ~~$3;
           break label$49;
          }
          $17_1 = -2147483648;
         }
         $12_1 = $12_1 | $17_1 << 16;
         $3 = Math_fround($1963($2_1 + 5708 | 0, 0) * $1963($2_1, 5416));
         $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
         label$51 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $2_1 = ~~$3;
           break label$51;
          }
          $2_1 = -2147483648;
         }
         $400($1944($20_1, 580), $8 + 16 | 0, $24, $12_1 | $2_1 << 24, Math_fround(0.0), 0, Math_fround(1.0));
         $2_1 = $1944(0, 73568);
         $3 = $1963($2_1 + 5620 | 0, 0);
         $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
         label$5310 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $12_1 = ~~$3;
           break label$5310;
          }
          $12_1 = -2147483648;
         }
         $12_1 = $12_1 << 8;
         $3 = $1963($2_1 + 5616 | 0, 0);
         $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
         label$5511 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $17_1 = ~~$3;
           break label$5511;
          }
          $17_1 = -2147483648;
         }
         $12_1 = $17_1 | $12_1;
         $3 = $1963($2_1 + 5624 | 0, 0);
         $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
         label$5712 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $17_1 = ~~$3;
           break label$5712;
          }
          $17_1 = -2147483648;
         }
         $12_1 = $12_1 | $17_1 << 16;
         $3 = Math_fround($1963($2_1 + 5628 | 0, 0) * $1963($2_1, 5416));
         $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
         label$59 : {
          if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
           $2_1 = ~~$3;
           break label$59;
          }
          $2_1 = -2147483648;
         }
         $12_1 = $12_1 | $2_1 << 24;
         $3 = $1963($9, 6468);
         $17_1 = $1944($9, 6464);
         $43_1 = $1944($20_1, 580);
         $21_1 = $1944($1_1, 0);
         $1_1 = $21_1;
         $2_1 = $1_1;
         label$6113 : {
          if (($1_1 | 0) == -1) {
           break label$6113
          }
          while (1) {
           label$63 : {
            $2_1 = $1937($1_1, 0);
            if (($2_1 | 0) != 35) {
             if ($2_1) {
              break label$63
             }
             $2_1 = $1_1;
             break label$6113;
            }
            if (($1937($1_1, 1) | 0) != 35) {
             break label$63
            }
            $2_1 = $1_1;
            break label$6113;
           }
           $2_1 = -1;
           $1_1 = $1_1 + 1 | 0;
           if (($1_1 | 0) != -1) {
            continue
           }
           break;
          };
         }
         $413($43_1, $17_1, $3, $8, $12_1, $21_1, $2_1, Math_fround(0.0), 0);
        }
        $1_1 = $5_1 + 1 | 0;
        if (($1944($9, 7008) | 0) != ($1_1 | 0)) {
         continue
        }
        break;
       };
      }
      $1_1 = $1944(0, 73568);
      $3 = $1963($1_1 + 5700 | 0, 0);
      $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
      label$65 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $2_1 = ~~$3;
        break label$65;
       }
       $2_1 = -2147483648;
      }
      $2_1 = $2_1 << 8;
      $3 = $1963($1_1 + 5696 | 0, 0);
      $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
      label$6715 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $12_1 = ~~$3;
        break label$6715;
       }
       $12_1 = -2147483648;
      }
      $2_1 = $12_1 | $2_1;
      $3 = $1963($1_1 + 5704 | 0, 0);
      $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
      label$6916 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $12_1 = ~~$3;
        break label$6916;
       }
       $12_1 = -2147483648;
      }
      $2_1 = $2_1 | $12_1 << 16;
      $3 = Math_fround($1963($1_1 + 5708 | 0, 0) * $1963($1_1, 5416));
      $3 = Math_fround(Math_fround(($3 < Math_fround(0.0) ? Math_fround(0.0) : $3 > Math_fround(1.0) ? Math_fround(1.0) : $3) * Math_fround(255.0)) + Math_fround(.5));
      label$7117 : {
       if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
        $1_1 = ~~$3;
        break label$7117;
       }
       $1_1 = -2147483648;
      }
      $400($25_1, $14, $26_1, $2_1 | $1_1 << 24, Math_fround(0.0), 0, Math_fround(1.0));
      global$0 = $8 + 32 | 0;
      $0_1 = $0_1 + 1 | 0;
      if (($1944($19, 7496) | 0) > ($0_1 | 0)) {
       continue
      }
      break;
     };
    }
    $1986($4_1, 964, Math_fround(Math_fround($10_1 - $11_1) * Math_fround(.125)));
    $1986($4_1, 960, Math_fround(Math_fround($16_1 - $7_1) * Math_fround(.125)));
    $590($4_1 + 960 | 0);
    $7_1 = $717();
    $1_1 = $1944(0, 73568);
    $0_1 = $1944($1_1, 7080);
    $1968($0_1, 140, 1);
    if ($7_1 == Math_fround(0.0)) {
     $7_1 = $1963($1_1 + 5524 | 0, 0)
    }
    $1_1 = $0_1 + 272 | 0;
    $7_1 = Math_fround($1963($1_1, 0) - $7_1);
    $1986($1_1, 0, $7_1);
    $1986($0_1, 208, Math_fround(Math_fround($7_1 + $1963($0_1, 12)) + $1963($0_1 + 276 | 0, 0)));
    if (($1944($6_1, 7496) | 0) > 0) {
     $0_1 = 0;
     while (1) {
      $1_1 = $1944($1944($6_1, 7504) + ($0_1 << 2) | 0, 0);
      $5_1 = global$0 - 96 | 0;
      global$0 = $5_1;
      $718(1, 2);
      $1973($5_1, 80, 0);
      if ($706(16634, 13e3, $5_1 + 80 | 0)) {
       $7_1 = $1963($1_1 + 8 | 0, 0);
       $11_1 = $1963($1_1 + 16 | 0, 0);
       $10_1 = $1963($1_1 + 124 | 0, 0);
       $16_1 = $1963($1_1 + 132 | 0, 0);
       $2_1 = $1944($1_1, 0);
       $3 = $1963($1_1, 4);
       $13 = $1963($1_1, 12);
       $18_1 = $1963($1_1, 120);
       $1990($5_1 - -64 | 0, 0, +$1963($1_1, 128));
       $1990($5_1 + 48 | 0, 0, +$18_1);
       $8 = $5_1 + 16 | 0;
       $1990($8 + 16 | 0, 0, +$13);
       $1990($5_1 + 72 | 0, 0, +$16_1);
       $1990($5_1 + 56 | 0, 0, +$10_1);
       $1990($5_1 + 40 | 0, 0, +$11_1);
       $1990($5_1, 16, +$3);
       $1990($5_1, 24, +$7_1);
       $567(9913, $8);
       $8 = $1944($1_1, 0);
       $1973($5_1, 12, $2_1 & 4 ? 6811 : 19354);
       $1973($5_1, 8, $2_1 & 2 ? 5953 : 19354);
       $1973($5_1, 4, $2_1 & 1 ? 1742 : 19354);
       $1973($5_1, 0, $8);
       $567(5450, $5_1);
       $9 = $1_1 + 96 | 0;
       $2_1 = 0;
       while (1) {
        $1_1 = $2_1;
        $8 = Math_imul($1_1, 12) + $9 | 0;
        if (($1944($8, 0) | 0) > 0) {
         $14 = $8 + 8 | 0;
         $2_1 = 0;
         while (1) {
          $355(0, $1944($1944($14, 0) + ($2_1 << 2) | 0, 0));
          $2_1 = $2_1 + 1 | 0;
          if (($1944($8, 0) | 0) > ($2_1 | 0)) {
           continue
          }
          break;
         };
        }
        $2_1 = $1_1 + 1 | 0;
        if (!$1_1) {
         continue
        }
        break;
       };
       $716();
      }
      global$0 = $5_1 + 96 | 0;
      $0_1 = $0_1 + 1 | 0;
      if (($1944($6_1, 7496) | 0) > ($0_1 | 0)) {
       continue
      }
      break;
     };
    }
    $716();
   }
   $1973($4_1, 544, $1944($6_1, 7468));
   if ($706(4375, 18488, $4_1 + 544 | 0)) {
    if (($1944($6_1, 7468) | 0) > 0) {
     $0_1 = 0;
     while (1) {
      $5_1 = $1944($6_1, 7476) + Math_imul($0_1, 36) | 0;
      $2_1 = $1944($5_1, 4);
      if ($2_1) {
       $8 = $1944($2_1, 0)
      } else {
       $8 = 14877
      }
      $1_1 = 0;
      if ($2_1) {
       $1_1 = $1937($2_1 + 11 | 0, 0) & 1
      }
      $5_1 = $1944($5_1, 0);
      $9 = $1_1 ? 1780 : 19354;
      $1_1 = 0;
      if ($2_1) {
       $1_1 = ($1937($2_1 + 11 | 0, 0) & 16) >>> 4 | 0
      }
      $1973($4_1, 536, $9);
      $1973($4_1, 532, $8);
      $1973($4_1, 528, $5_1);
      $1973($4_1, 540, $1_1 ? 1905 : 19354);
      $567(5517, $4_1 + 528 | 0);
      $0_1 = $0_1 + 1 | 0;
      if (($1944($6_1, 7468) | 0) > ($0_1 | 0)) {
       continue
      }
      break;
     };
    }
    $716();
   }
   $1973($4_1, 512, $1944($6_1 + 8144 | 0, 0));
   if ($706(4367, 18474, $4_1 + 512 | 0)) {
    if (($1944($6_1 + 8128 | 0, 0) | 0) > 0) {
     $0_1 = 0;
     while (1) {
      $1_1 = $1944($1944($6_1, 8136) + ($0_1 << 3) | 0, 4);
      label$85 : {
       if (($1_1 | 0) == -1) {
        break label$85
       }
       $2_1 = $1944($6_1, 8124);
       if (!$2_1) {
        break label$85
       }
       $5_1 = $2_1 + Math_imul($1_1, 144) | 0;
       $265($5_1);
       $1_1 = global$0 - 368 | 0;
       global$0 = $1_1;
       $14 = $1944($5_1, 36);
       $2_1 = $1944($1944(0, 73568), 6984);
       $8 = $1944($5_1, 0);
       $9 = $1944($5_1, 16);
       $1973($1_1, 80, 6680);
       $1973($1_1, 84, $9);
       $1973($1_1, 88, $8);
       $19 = $2_1 - 2 | 0;
       $20_1 = ($19 | 0) > ($14 | 0);
       $1973($1_1, 92, $20_1 ? 17707 : 19354);
       $2_1 = $1_1 + 112 | 0;
       $8 = $21($2_1, 256, 5620, $1_1 + 80 | 0);
       $9 = $2_1 + $8 | 0;
       $9 = $21($9, 256 - $8 | 0, 19041, 0) + $9 | 0;
       $15_1 = $2_1 + 256 | 0;
       $2_1 = $1944($5_1, 0);
       if (($2_1 | 0) > 0) {
        $8 = 0;
        while (1) {
         $2_1 = $8 ? 19147 : 19354;
         $24 = $15_1 - $9 | 0;
         $25_1 = $1944($1944($5_1, 8) + Math_imul($8, 40) | 0, 28);
         if (($25_1 | 0) == -1) {
          $12_1 = 15508
         } else {
          $12_1 = $1944($5_1, 140) + $25_1 | 0
         }
         $1973($1_1, 68, $12_1);
         $1973($1_1, 64, $2_1);
         $9 = $21($9, $24, 18702, $1_1 - -64 | 0) + $9 | 0;
         $8 = $8 + 1 | 0;
         $2_1 = $1944($5_1, 0);
         if (($8 | 0) < ((($2_1 | 0) >= 3 ? 3 : $2_1) | 0)) {
          continue
         }
         break;
        };
       }
       $21($9, $15_1 - $9 | 0, ($2_1 | 0) > 3 ? 1051 : 19037, 0);
       if ($20_1) {
        $56(0, $1944(0, 73568) + 5632 | 0)
       }
       $1973($1_1, 48, $1_1 + 112 | 0);
       $9 = $706(6680, 5950, $1_1 + 48 | 0);
       label$72 : {
        if (($14 | 0) < ($19 | 0)) {
         $2_1 = $1944(0, 73568);
         $8 = (Math_imul($1944($2_1, 7396), 20) + $1944($2_1 + 7404 | 0, 0) | 0) - 20 | 0;
         $14 = ($1944($8, 0) << 4) + $2_1 | 0;
         $1982($14 + 5624 | 0, 0, $1959($8 + 12 | 0, 0), i64toi32_i32$HIGH_BITS);
         $1982($14 + 5616 | 0, 0, $1959($8, 4), i64toi32_i32$HIGH_BITS);
         $1973($2_1, 7396, $1944($2_1, 7396) - 1 | 0);
         break label$72;
        }
        if (!$89(0)) {
         break label$72
        }
        $2_1 = $92($1944($1944($1944(0, 73568) + 7504 | 0, 0), 0), 1, 11768);
        $400($2_1, $5_1 + 40 | 0, $5_1 + 48 | 0, -16711681, Math_fround(0.0), 0, Math_fround(1.0));
        $7_1 = $1963($5_1, 88);
        $8 = $5_1 + 44 | 0;
        $1986($1_1, 108, $1963($8, 0));
        $1986($1_1, 104, $7_1);
        $14 = $5_1 + 52 | 0;
        $1986($1_1, 100, $1963($14, 0));
        $1986($1_1, 96, $7_1);
        $15_1 = $1_1 + 104 | 0;
        $19 = $1_1 + 96 | 0;
        $399($2_1, $15_1, $19, -16711936, Math_fround(1.0));
        $7_1 = $1963($5_1, 92);
        $1986($1_1, 108, $1963($8, 0));
        $1986($1_1, 104, $7_1);
        $1986($1_1, 100, $1963($14, 0));
        $1986($1_1, 96, $7_1);
        $399($2_1, $15_1, $19, -16711936, Math_fround(1.0));
       }
       if ($9) {
        if (($1944($5_1, 0) | 0) > 0) {
         $14 = $1_1 + 24 | 0;
         $15_1 = $1_1 + 16 | 0;
         $8 = 0;
         while (1) {
          $9 = $1944($5_1, 8) + Math_imul($8, 40) | 0;
          $265($9);
          if ($572(16153)) {
           $753($5_1, $9, -1)
          }
          $2_1 = $1944($1944(0, 73568), 7080);
          $1968($2_1, 140, 1);
          if (!$1937($2_1, 143)) {
           $1986($2_1 + 212 | 0, 0, $1963($2_1 + 220 | 0, 0));
           $1982($2_1 + 248 | 0, 0, $1959($2_1 + 256 | 0, 0), i64toi32_i32$HIGH_BITS);
           $1986($2_1 + 264 | 0, 0, $1963($2_1 + 268 | 0, 0));
           $1986($2_1, 208, Math_fround($1963($2_1 + 216 | 0, 0) + Math_fround(2.0)));
          }
          if ($572(16149)) {
           $753($5_1, $9, 1)
          }
          $19 = $1944(0, 73568);
          $2_1 = $1944($19, 7080);
          $1968($2_1, 140, 1);
          if (!$1937($2_1, 143)) {
           $7_1 = $1963($19 + 5492 | 0, 0);
           $1986($2_1 + 212 | 0, 0, $1963($2_1 + 220 | 0, 0));
           $1982($2_1 + 248 | 0, 0, $1959($2_1 + 256 | 0, 0), i64toi32_i32$HIGH_BITS);
           $1986($2_1 + 264 | 0, 0, $1963($2_1 + 268 | 0, 0));
           $1986($2_1, 208, Math_fround($7_1 + $1963($2_1 + 216 | 0, 0)));
          }
          $2_1 = $1944($9, 0);
          $19 = ($1944($5_1, 20) | 0) == ($2_1 | 0) ? 42 : 32;
          $20_1 = $1944($9, 28);
          if (($20_1 | 0) == -1) {
           $20_1 = 15508
          } else {
           $20_1 = $1944($5_1, 140) + $20_1 | 0
          }
          $7_1 = $1963($9, 16);
          $11_1 = $1963($9, 20);
          $1990($1_1 + 32 | 0, 0, +$1963($9, 24));
          $1990($14, 0, +$11_1);
          $1990($15_1, 0, +$7_1);
          $1973($1_1, 12, $20_1);
          $1973($1_1, 8, $2_1);
          $1973($1_1, 4, $19);
          $1973($1_1, 0, $8);
          $557(9794, $1_1);
          $2_1 = $1944($1944(0, 73568), 7080);
          $1973($2_1, 196, $1944($2_1, 196) - 1 | 0);
          $2_1 = $8 + 1 | 0;
          $8 = $2_1;
          if (($1944($5_1, 0) | 0) > ($2_1 | 0)) {
           continue
          }
          break;
         };
        }
        $716();
       }
       global$0 = $1_1 + 368 | 0;
       $1_1 = $1944($1944(0, 73568), 7080);
       $1973($1_1, 196, $1944($1_1, 196) - 1 | 0);
      }
      $0_1 = $0_1 + 1 | 0;
      if (($1944($6_1, 8128) | 0) > ($0_1 | 0)) {
       continue
      }
      break;
     };
    }
    $716();
   }
   $1973($4_1, 496, $1944($6_1 + 8084 | 0, 0));
   if ($706(5197, 18500, $4_1 + 496 | 0)) {
    if (($1944($6_1 + 8068 | 0, 0) | 0) > 0) {
     $0_1 = 0;
     while (1) {
      $2_1 = $1944($1944($6_1, 8076) + ($0_1 << 3) | 0, 4);
      label$89 : {
       if (($2_1 | 0) == -1) {
        break label$89
       }
       $5_1 = $1944($6_1, 8064);
       if (!$5_1) {
        break label$89
       }
       $1_1 = global$0 - 944 | 0;
       global$0 = $1_1;
       $5_1 = $5_1 + Math_imul($2_1, 456) | 0;
       $2_1 = $1944($5_1, 80);
       $8 = $121();
       $9 = $1944($5_1, 0);
       $14 = $1944($5_1, 84);
       $1973($1_1, 392, $1944($1944($5_1, 356), 0));
       $1973($1_1, 388, $14);
       $1973($1_1, 384, $9);
       $8 = $8 - 2 | 0;
       $1973($1_1, 396, ($8 | 0) > ($2_1 | 0) ? 17707 : 19354);
       $21($1_1 + 432 | 0, 512, 5642, $1_1 + 384 | 0);
       $2_1 = ($2_1 | 0) >= ($8 | 0);
       if (!$2_1) {
        $56(0, $53(1))
       }
       $1973($1_1, 368, $1_1 + 432 | 0);
       $8 = $708($5_1, 5950, $1_1 + 368 | 0);
       if (!$2_1) {
        $57(1)
       }
       if ($89(0)) {
        $400($94(), $5_1 + 212 | 0, $5_1 + 220 | 0, -16711681, Math_fround(0.0), 0, Math_fround(1.0))
       }
       label$40 : {
        if (!$200()) {
         break label$40
        }
        if (($1937($5_1, 420) | 0) == 255) {
         break label$40
        }
        $2_1 = $94();
        $9 = $1_1 + 408 | 0;
        $204($9);
        $14 = $1_1 + 424 | 0;
        $205($14);
        $400($2_1, $9, $14, -16711681, Math_fround(0.0), 0, Math_fround(1.0));
       }
       if ($8) {
        $14 = $572(4846);
        $10_1 = $1963($5_1 + 224 | 0, 0);
        $7_1 = $1963($5_1 + 216 | 0, 0);
        $44_1 = +Math_fround($10_1 - $7_1);
        $45_1 = +$7_1;
        $10_1 = $1963($5_1 + 220 | 0, 0);
        $7_1 = $1963($5_1, 212);
        $46_1 = +Math_fround($10_1 - $7_1);
        $47_1 = +$7_1;
        $8 = $1_1 + 352 | 0;
        $2_1 = ($1944($5_1, 4) & 57344) + -8192 | 0;
        if ($2_1 >>> 0 <= 32767) {
         $2_1 = $1944(($2_1 >>> 11 | 0) + 48144 | 0, 0)
        } else {
         $2_1 = 15504
        }
        $1973($8, 0, $2_1);
        $2_1 = $1_1 + 320 | 0;
        $1990($2_1 + 24 | 0, 0, $44_1);
        $1990($2_1 + 16 | 0, 0, $46_1);
        $1990($1_1, 328, $45_1);
        $1990($1_1, 320, $47_1);
        $567(18854, $2_1);
        $7_1 = $1963($5_1, 192);
        $11_1 = $1963($5_1, 196);
        $2_1 = $1_1 + 288 | 0;
        $10_1 = $1963($5_1, 188);
        $1990($2_1 + 16 | 0, 0, +$10_1);
        $1973($2_1 + 24 | 0, 0, $10_1 == Math_fround(0.0) ? 17950 : 19354);
        $1990($1_1, 296, +$11_1);
        $1990($1_1, 288, +$7_1);
        $567(5549, $2_1);
        $7_1 = $1963($5_1, 164);
        $11_1 = $1963($5_1, 172);
        $10_1 = $1963($5_1, 176);
        $2_1 = $1_1 + 256 | 0;
        $1990($2_1 + 24 | 0, 0, +$1963($5_1, 160));
        $1990($2_1 + 16 | 0, 0, +$10_1);
        $1990($1_1, 264, +$11_1);
        $1990($1_1, 256, +$7_1);
        $567(9848, $2_1);
        $2_1 = $1936($5_1, 420);
        $1973($1_1, 244, $1936($5_1, 421));
        $1973($1_1, 240, $2_1);
        $567(13224, $1_1 + 240 | 0);
        $2_1 = $1936($5_1, 423);
        $8 = $1936($5_1, 426);
        $1973($1_1, 232, $1936($5_1, 425));
        $1973($1_1, 228, $8);
        $1973($1_1, 224, $2_1);
        $567(13318, $1_1 + 224 | 0);
        $11_1 = Math_fround(0.0);
        $2_1 = $1944($5_1, 84);
        if (($2_1 | 0) > 0) {
         $9 = $1944($5_1, 16);
         $8 = 0;
         while (1) {
          $15_1 = $9 + Math_imul($8, 104) | 0;
          if ($1937($15_1, 0) & 8) {
           $11_1 = Math_fround($11_1 + $1963($15_1, 24))
          }
          $8 = $8 + 1 | 0;
          if (($2_1 | 0) != ($8 | 0)) {
           continue
          }
          break;
         };
        }
        $2_1 = $1944($5_1, 84);
        if (($2_1 | 0) > 0) {
         $15_1 = $1_1 + 416 | 0;
         $19 = $1_1 + 208 | 0;
         $20_1 = $1_1 + 204 | 0;
         $24 = $1_1 + 200 | 0;
         $25_1 = $1_1 + 196 | 0;
         $26_1 = $1_1 + 192 | 0;
         $42_1 = $1_1 + 184 | 0;
         $12_1 = $1_1 + 128 | 0;
         $17_1 = $1_1 + 120 | 0;
         $43_1 = $1_1 + 112 | 0;
         $21_1 = $1_1 + 96 | 0;
         $50_1 = $1_1 + 88 | 0;
         $51_1 = $1_1 + 80 | 0;
         $52_1 = $1_1 + 72 | 0;
         $53_1 = $1_1 - -64 | 0;
         $54_1 = $1_1 + 60 | 0;
         $55_1 = $1_1 + 56 | 0;
         $56_1 = $1_1 + 52 | 0;
         $57_1 = $1_1 + 48 | 0;
         $58_1 = $1_1 + 44 | 0;
         $59_1 = $1_1 + 36 | 0;
         $60_1 = $1_1 + 24 | 0;
         $61 = $1_1 + 176 | 0;
         $62_1 = $1_1 + 168 | 0;
         $63_1 = $1_1 + 160 | 0;
         $64_1 = $1_1 + 152 | 0;
         $65_1 = $1_1 + 136 | 0;
         $66 = $1_1 + 144 | 0;
         $67_1 = $1_1 + 188 | 0;
         $8 = 0;
         while (1) {
          $2_1 = $1944($5_1, 16) + Math_imul($8, 104) | 0;
          label$133 : {
           if (!$1937($5_1, 441)) {
            $36_1 = 19354;
            if (($1936($5_1, 419) | 0) <= ($8 | 0)) {
             break label$133
            }
           }
           $9 = $1939($2_1, 80);
           $36_1 = 19354;
           if (($9 | 0) == -1) {
            break label$133
           }
           $36_1 = $1944($5_1, 372) + $9 | 0;
          }
          $68_1 = ($1936($5_1, 435) | 0) > ($8 | 0) ? 17958 : 19354;
          $69_1 = $1937($2_1, 89);
          $70_1 = $1937($2_1, 88);
          $71_1 = $1937($2_1, 96);
          $72_1 = $1937($2_1, 95);
          $73_1 = $1937($2_1, 94);
          $74 = $1937($2_1, 93);
          $75_1 = $1937($2_1, 90);
          $76_1 = $1936($2_1, 82);
          $10_1 = $1963($2_1, 24);
          $44_1 = +$10_1;
          $45_1 = +$1963($2_1, 20);
          $46_1 = +$1963($2_1, 16);
          $47_1 = +$1963($2_1, 4);
          $16_1 = $1963($2_1, 12);
          $7_1 = $1963($5_1, 244);
          $77 = +Math_fround($16_1 - $7_1);
          $3 = $1963($2_1, 8);
          $78_1 = +Math_fround($3 - $7_1);
          $79_1 = $1937($2_1, 101);
          $13 = $1963($2_1 + 40 | 0, 0);
          $22_1 = $1963($2_1, 64);
          $28_1 = $1963($2_1, 68);
          $23_1 = $1963($2_1, 72);
          $32_1 = $1963($2_1, 76);
          $7_1 = $1963($2_1, 52);
          $18_1 = $1963($2_1, 32);
          $80_1 = $1936($2_1, 86);
          $81_1 = $1944($2_1, 48);
          $9 = $1944($2_1, 0);
          $1973($19, 0, $9 & 32 ? 19118 : 19354);
          $1973($20_1, 0, $9 & 16 ? 19135 : 19354);
          $1973($24, 0, $9 & 8 ? 19104 : 19354);
          $1973($25_1, 0, $9);
          $1973($26_1, 0, $81_1);
          $1973($42_1, 0, $80_1);
          $1990($12_1, 0, +$18_1);
          $1990($17_1, 0, +Math_fround($16_1 - $3));
          $1990($43_1, 0, +$16_1);
          $1990($1_1 + 104 | 0, 0, +$3);
          $1990($21_1, 0, +($10_1 > Math_fround(0.0) ? Math_fround(Math_fround($10_1 / $11_1) * Math_fround(100.0)) : Math_fround(0.0)));
          $1990($50_1, 0, $44_1);
          $1990($51_1, 0, $45_1);
          $1990($52_1, 0, $46_1);
          $1990($53_1, 0, $47_1);
          $1973($54_1, 0, $69_1);
          $1973($55_1, 0, $70_1);
          $1973($56_1, 0, $71_1);
          $1973($57_1, 0, $72_1);
          $1973($58_1, 0, $73_1);
          $1973($1_1 + 40 | 0, 0, $74);
          $1973($59_1, 0, $75_1);
          $1973($1_1 + 32 | 0, 0, $68_1);
          $1990($60_1, 0, $77);
          $1990($1_1 + 16 | 0, 0, $78_1);
          $1990($61, 0, +Math_fround($32_1 - $7_1));
          $1990($62_1, 0, +Math_fround($23_1 - $7_1));
          $1990($63_1, 0, +Math_fround($28_1 - $7_1));
          $1990($64_1, 0, +Math_fround($22_1 - $7_1));
          $1990($65_1, 0, +$13);
          $1990($66, 0, +Math_fround($13 - $18_1));
          $9 = $79_1 & 3;
          $1973($67_1, 0, ($9 | 0) == 1 ? 18570 : ($9 | 0) == 2 ? 17919 : 19354);
          $1973($1_1, 8, $36_1);
          $1973($1_1, 4, $76_1);
          $1973($1_1, 0, $8);
          $9 = $1_1 + 432 | 0;
          $21($9, 512, 17293, $1_1);
          $588();
          $1982($1_1, 408, 0, 0);
          $601($9, 0, 0, $1_1 + 408 | 0);
          if ($89(0)) {
           $7_1 = $1963($2_1 + 8 | 0, 0);
           $10_1 = $1963($5_1, 216);
           $16_1 = $1963($2_1 + 12 | 0, 0);
           $1986($1_1, 420, $1963($5_1, 224));
           $1986($1_1, 416, $16_1);
           $1986($1_1, 412, $10_1);
           $1986($1_1, 408, $7_1);
           $400($94(), $1_1 + 408 | 0, $15_1, -16711681, Math_fround(0.0), 0, Math_fround(1.0));
          }
          $8 = $8 + 1 | 0;
          $2_1 = $1944($5_1, 84);
          if (($8 | 0) < ($2_1 | 0)) {
           continue
          }
          break;
         };
        }
        $8 = $1944($5_1, 76);
        label$184 : {
         if (($8 | 0) == -1) {
          $8 = 0;
          break label$184;
         }
         $8 = $1944($1944(0, 73568) + 12176 | 0, 0) + $8 | 0;
         if (($1936($8, 13) | 0) >= ($2_1 | 0)) {
          break label$184
         }
         $1973($8, 0, 0);
         $8 = 0;
        }
        if ($8) {
         $540($8)
        }
        if ($14) {
         $1968($5_1, 450, 1)
        }
        $716();
       }
       global$0 = $1_1 + 944 | 0;
      }
      $0_1 = $0_1 + 1 | 0;
      if (($1944($6_1, 8068) | 0) > ($0_1 | 0)) {
       continue
      }
      break;
     };
    }
    $716();
   }
   if ($709(4872)) {
    label$91 : {
     if (!$572(6542)) {
      break label$91
     }
     $0_1 = $1944(0, 73568);
     $1_1 = $1944($0_1 + 12140 | 0, 0);
     if ($1_1) {
      $1982($0_1, 12132, 0, 0);
      if ($0_1) {
       $2_1 = $0_1 + 876 | 0;
       $1973($2_1, 0, $1944($2_1, 0) - 1 | 0);
      }
      ((wasm2js_i32$1 = $1_1, wasm2js_i32$2 = $1944(0, 73576)), wasm2js_i32$0 = $1944(0, 73260) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
      $1973($0_1, 12140, 0);
     }
     if (($1944($0_1, 12144) | 0) <= 0) {
      break label$91
     }
     $1_1 = 0;
     while (1) {
      $2_1 = $1944($0_1, 12152) + Math_imul($1_1, 36) | 0;
      $5_1 = $1944($2_1, 8);
      if ($5_1) {
       FUNCTION_TABLE[$5_1 | 0]($0_1, $2_1)
      }
      $1_1 = $1_1 + 1 | 0;
      if (($1944($0_1, 12144) | 0) > ($1_1 | 0)) {
       continue
      }
      break;
     };
    }
    $1_1 = $1944(0, 73568);
    $0_1 = $1944($1_1, 7080);
    $1968($0_1, 140, 1);
    if (!$1937($0_1, 143)) {
     $7_1 = $1963($1_1 + 5492 | 0, 0);
     $1986($0_1 + 212 | 0, 0, $1963($0_1 + 220 | 0, 0));
     $1982($0_1 + 248 | 0, 0, $1959($0_1 + 256 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1986($0_1 + 264 | 0, 0, $1963($0_1 + 268 | 0, 0));
     $1986($0_1, 208, Math_fround($7_1 + $1963($0_1 + 216 | 0, 0)));
    }
    if ($572(1094)) {
     $114(0)
    }
    $1_1 = $1944(0, 73568);
    $0_1 = $1944($1_1, 7080);
    $1968($0_1, 140, 1);
    if (!$1937($0_1, 143)) {
     $7_1 = $1963($1_1 + 5492 | 0, 0);
     $1986($0_1 + 212 | 0, 0, $1963($0_1 + 220 | 0, 0));
     $1982($0_1 + 248 | 0, 0, $1959($0_1 + 256 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1986($0_1 + 264 | 0, 0, $1963($0_1 + 268 | 0, 0));
     $1986($0_1, 208, Math_fround($7_1 + $1963($0_1 + 216 | 0, 0)));
    }
    label$99 : {
     if (!$572(8421)) {
      break label$99
     }
     $0_1 = $1944($6_1 + 32 | 0, 0);
     $1973($1944(0, 73568), 12128, 0);
     if (!$0_1) {
      break label$99
     }
     $1973($4_1, 960, 0);
     $1_1 = $114($4_1 + 960 | 0);
     $0_1 = $1622($0_1, 2145);
     if (!$0_1) {
      break label$99
     }
     $1633($1_1, $1944($4_1, 960), $0_1);
     $1609($0_1);
    }
    $1_1 = $1944(0, 73568);
    $0_1 = $1944($1_1, 7080);
    $1968($0_1, 140, 1);
    if (!$1937($0_1, 143)) {
     $7_1 = $1963($1_1 + 5492 | 0, 0);
     $1986($0_1 + 212 | 0, 0, $1963($0_1 + 220 | 0, 0));
     $1982($0_1 + 248 | 0, 0, $1959($0_1 + 256 | 0, 0), i64toi32_i32$HIGH_BITS);
     $1986($0_1 + 264 | 0, 0, $1963($0_1 + 268 | 0, 0));
     $1986($0_1, 208, Math_fround($7_1 + $1963($0_1 + 216 | 0, 0)));
    }
    $0_1 = $1944($6_1 + 32 | 0, 0);
    label$101 : {
     if ($0_1) {
      $1973($4_1, 480, $0_1);
      $557(18931, $4_1 + 480 | 0);
      break label$101;
     }
     $556(16140);
    }
    $1990($4_1, 464, +$1963($6_1, 12128));
    $557(9770, $4_1 + 464 | 0);
    $1973($4_1, 448, $1944($6_1, 12144));
    if ($706(4308, 18520, $4_1 + 448 | 0)) {
     if (($1944($6_1, 12144) | 0) > 0) {
      $0_1 = 0;
      while (1) {
       $1973($4_1, 432, $1944($1944($6_1, 12152) + Math_imul($0_1, 36) | 0, 0));
       $567(5950, $4_1 + 432 | 0);
       $0_1 = $0_1 + 1 | 0;
       if (($1944($6_1, 12144) | 0) > ($0_1 | 0)) {
        continue
       }
       break;
      };
     }
     $716();
    }
    $1973($4_1, 416, $1944($6_1, 12156));
    if ($706(3893, 4971, $4_1 + 416 | 0)) {
     $0_1 = $1944($6_1 + 12164 | 0, 0);
     if ($0_1) {
      $1_1 = $4_1 + 408 | 0;
      $2_1 = $4_1 + 404 | 0;
      $0_1 = $0_1 + 4 | 0;
      while (1) {
       $5_1 = $1939($0_1 + 6 | 0, 0);
       $8 = $1939($0_1 + 10 | 0, 0);
       $9 = $1944($0_1, 0);
       $14 = $1939($0_1, 4);
       $15_1 = $1939($0_1, 8);
       $1973($1_1, 0, $1937($0_1, 12));
       $1973($2_1, 0, $8);
       $8 = $4_1 + 384 | 0;
       $1973($8 + 16 | 0, 0, $15_1);
       $1973($4_1, 396, $5_1);
       $1973($4_1, 392, $14);
       $1973($4_1, 388, $0_1 + 16 | 0);
       $1973($4_1, 384, $9);
       $557(12940, $8);
       $0_1 = $1944($0_1 - 4 | 0, 0) + $0_1 | 0;
       $5_1 = ($0_1 | 0) == (($1944($6_1, 12164) + $1944($6_1, 12156) | 0) + 4 | 0);
       $0_1 = $5_1 ? 0 : $0_1;
       if (!$5_1) {
        continue
       }
       break;
      };
     }
     $716();
    }
    $1973($4_1, 368, $1944($6_1, 12168));
    if ($706(5189, 5011, $4_1 + 368 | 0)) {
     $0_1 = $1944($6_1 + 12176 | 0, 0);
     if ($0_1) {
      $0_1 = $0_1 + 4 | 0;
      while (1) {
       $540($0_1);
       $0_1 = $1944($0_1 - 4 | 0, 0) + $0_1 | 0;
       $0_1 = ($0_1 | 0) != (($1944($6_1, 12176) + $1944($6_1, 12168) | 0) + 4 | 0) ? $0_1 : 0;
       if ($0_1) {
        continue
       }
       break;
      };
     }
     $716();
    }
    $0_1 = $1944($6_1, 12132);
    $1_1 = $0_1 - 1 | 0;
    $1973($4_1, 352, $0_1 >>> 0 >= $1_1 >>> 0 ? $1_1 : 0);
    if ($706(13836, 5050, $4_1 + 352 | 0)) {
     $0_1 = $1944($6_1 + 12140 | 0, 0);
     $1_1 = $1944($6_1, 12132);
     $7_1 = $1963($1944(0, 73568), 6468);
     $1973($4_1, 960, -2139095040);
     $1986($4_1, 964, Math_fround($7_1 * Math_fround(20.0)));
     $689(8550, $0_1 ? $0_1 : 73572, $1_1, $4_1 + 960 | 0, 16384, 0);
     $716();
    }
    $716();
   }
   if ($709(10677)) {
    $557(14905, 0);
    $1_1 = $1944(0, 73568);
    $0_1 = $1944($1_1, 7080);
    $1968($0_1, 140, 1);
    $10_1 = $1963($1_1 + 5524 | 0, 0);
    $1_1 = $0_1 + 272 | 0;
    $7_1 = Math_fround($10_1 + $1963($1_1, 0));
    $1986($1_1, 0, $7_1);
    $1986($0_1, 208, Math_fround(Math_fround($7_1 + $1963($0_1, 12)) + $1963($0_1 + 276 | 0, 0)));
    $0_1 = $1944($6_1, 7084);
    if ($0_1) {
     $0_1 = $1944($0_1, 0)
    } else {
     $0_1 = 14877
    }
    $1973($4_1, 336, $0_1);
    $557(18762, $4_1 + 336 | 0);
    $0_1 = $1944($6_1, 7084);
    if ($0_1) {
     $0_1 = $1944($1944($0_1, 736), 0)
    } else {
     $0_1 = 14877
    }
    $1973($4_1, 320, $0_1);
    $557(18803, $4_1 + 320 | 0);
    $0_1 = $1944($6_1, 7088);
    if ($0_1) {
     $0_1 = $1944($0_1, 0)
    } else {
     $0_1 = 14877
    }
    $1973($4_1, 304, $0_1);
    $557(18725, $4_1 + 304 | 0);
    $0_1 = $1944($6_1, 7092);
    if ($0_1) {
     $0_1 = $1944($0_1, 0)
    } else {
     $0_1 = 14877
    }
    $1973($4_1, 288, $0_1);
    $557(18743, $4_1 + 288 | 0);
    $1_1 = $1944(0, 73568);
    $0_1 = $1944($1_1, 7080);
    $1968($0_1, 140, 1);
    $2_1 = $0_1 + 272 | 0;
    $7_1 = Math_fround($1963($2_1, 0) - $1963($1_1 + 5524 | 0, 0));
    $1986($2_1, 0, $7_1);
    $1986($0_1, 208, Math_fround(Math_fround($7_1 + $1963($0_1, 12)) + $1963($0_1 + 276 | 0, 0)));
    $557(14816, 0);
    $1_1 = $1944(0, 73568);
    $0_1 = $1944($1_1, 7080);
    $1968($0_1, 140, 1);
    $10_1 = $1963($1_1 + 5524 | 0, 0);
    $1_1 = $0_1 + 272 | 0;
    $7_1 = Math_fround($10_1 + $1963($1_1, 0));
    $1986($1_1, 0, $7_1);
    $1986($0_1, 208, Math_fround(Math_fround($7_1 + $1963($0_1, 12)) + $1963($0_1 + 276 | 0, 0)));
    $7_1 = $1963($6_1, 7144);
    $0_1 = $1944($6_1, 7136);
    $1_1 = $1944($6_1, 7196);
    $2_1 = $1944($6_1, 7188);
    $5_1 = $4_1 + 256 | 0;
    $1973($5_1 + 16 | 0, 0, $1937($6_1, 7149));
    $1973($4_1 + 276 | 0, 0, $1944(($2_1 << 2) + 20880 | 0, 0));
    $1973($4_1, 260, $1_1);
    $1973($4_1, 256, $0_1);
    $1990($4_1, 264, +$7_1);
    $557(5838, $5_1);
    $0_1 = $1944($6_1, 7184);
    if ($0_1) {
     $0_1 = $1944($0_1, 0)
    } else {
     $0_1 = 14877
    }
    $1973($4_1, 240, $0_1);
    $557(18782, $4_1 + 240 | 0);
    $0_1 = $1937($6_1, 7154);
    $1_1 = $1959($6_1, 7156);
    $2_1 = i64toi32_i32$HIGH_BITS;
    $5_1 = $4_1 + 208 | 0;
    $1983($5_1 + 16 | 0, 0, $1960($6_1, 7168), i64toi32_i32$HIGH_BITS);
    $1982($4_1, 212, $1_1, $2_1);
    $1973($4_1, 208, $0_1);
    $557(14211, $5_1);
    $7_1 = $1963($6_1, 7128);
    $0_1 = $1944($6_1, 7120);
    $1_1 = $4_1 + 176 | 0;
    $1973($1_1 + 16 | 0, 0, $1937($6_1, 7124));
    $1973($4_1, 176, $0_1);
    $1990($4_1, 184, +$7_1);
    $557(13271, $1_1);
    $0_1 = $1944($6_1 + 7900 | 0, 0);
    $1_1 = $1937($6_1, 7876);
    $1973($4_1, 172, $1944($6_1 + 7896 | 0, 0));
    $1973($4_1, 168, $6_1 + 7912 | 0);
    $1973($4_1, 164, $0_1);
    $1973($4_1, 160, $1_1);
    $557(17823, $4_1 + 160 | 0);
    $1_1 = $1944(0, 73568);
    $0_1 = $1944($1_1, 7080);
    $1968($0_1, 140, 1);
    $2_1 = $0_1 + 272 | 0;
    $7_1 = Math_fround($1963($2_1, 0) - $1963($1_1 + 5524 | 0, 0));
    $1986($2_1, 0, $7_1);
    $1986($0_1, 208, Math_fround(Math_fround($7_1 + $1963($0_1, 12)) + $1963($0_1 + 276 | 0, 0)));
    $557(14806, 0);
    $1_1 = $1944(0, 73568);
    $0_1 = $1944($1_1, 7080);
    $1968($0_1, 140, 1);
    $10_1 = $1963($1_1 + 5524 | 0, 0);
    $1_1 = $0_1 + 272 | 0;
    $7_1 = Math_fround($10_1 + $1963($1_1, 0));
    $1986($1_1, 0, $7_1);
    $1986($0_1, 208, Math_fround(Math_fround($7_1 + $1963($0_1, 12)) + $1963($0_1 + 276 | 0, 0)));
    $0_1 = $1944($6_1, 7508);
    if ($0_1) {
     $0_1 = $1944($0_1, 0)
    } else {
     $0_1 = 14877
    }
    $1973($4_1, 144, $0_1);
    $557(18709, $4_1 + 144 | 0);
    $0_1 = $1944($6_1, 7512);
    $1973($4_1, 132, $1944($6_1, 7564));
    $1973($4_1, 128, $0_1);
    $557(13146, $4_1 + 128 | 0);
    $1973($4_1, 112, $1944(($1944($6_1, 7560) << 2) + 20880 | 0, 0));
    $557(5819, $4_1 + 112 | 0);
    $0_1 = $1937($6_1 + 853 | 0, 0);
    $1973($4_1, 100, $1937($6_1 + 854 | 0, 0));
    $1973($4_1, 96, $0_1);
    $557(13377, $4_1 + 96 | 0);
    $0_1 = $1960($6_1, 7520);
    $1_1 = i64toi32_i32$HIGH_BITS;
    $1983($4_1, 88, $1960($6_1, 7528), i64toi32_i32$HIGH_BITS);
    $1983($4_1, 80, $0_1, $1_1);
    $557(14583, $4_1 + 80 | 0);
    $1973($4_1, 64, $1944($6_1, 7536));
    $557(14688, $4_1 - -64 | 0);
    $0_1 = $1937($6_1, 7570);
    $1973($4_1, 52, $1937($6_1, 7571));
    $1973($4_1, 48, $0_1);
    $557(13174, $4_1 + 48 | 0);
    $1973($4_1, 32, $1944($6_1, 7516));
    $557(14430, $4_1 + 32 | 0);
    $0_1 = $1944($6_1, 7844);
    if ($0_1) {
     $0_1 = $1944($0_1, 0)
    } else {
     $0_1 = 14877
    }
    $1973($4_1, 16, $0_1);
    $557(18829, $4_1 + 16 | 0);
    $1_1 = $1944(0, 73568);
    $0_1 = $1944($1_1, 7080);
    $1968($0_1, 140, 1);
    $2_1 = $0_1 + 272 | 0;
    $7_1 = Math_fround($1963($2_1, 0) - $1963($1_1 + 5524 | 0, 0));
    $1986($2_1, 0, $7_1);
    $1986($0_1, 208, Math_fround(Math_fround($7_1 + $1963($0_1, 12)) + $1963($0_1 + 276 | 0, 0)));
    $716();
   }
   label$1225 : {
    if (!$1937($6_1 + 12257 | 0, 0)) {
     if (!$1937($6_1 + 12258 | 0, 0)) {
      break label$1225
     }
    }
    if (($1944($6_1, 7008) | 0) <= 0) {
     break label$1225
    }
    $2_1 = $4_1 + 968 | 0;
    $0_1 = 0;
    while (1) {
     $1_1 = $1944($1944($6_1, 7016) + ($0_1 << 2) | 0, 0);
     label$125 : {
      if (!$1937($1_1, 139)) {
       break label$125
      }
      $5_1 = $92($1944($1944($1944(0, 73568) + 7504 | 0, 0), 0), 1, 11768);
      if ($1937($6_1, 12257)) {
       label$127 : {
        label$128 : {
         switch ($1944($37, 0) | 0) {
         case 0:
          $11_1 = $1963($1_1 + 24 | 0, 0);
          $7_1 = $1963($1_1 + 16 | 0, 0);
          $10_1 = $1963($1_1, 12);
          $1986($4_1, 968, Math_fround($10_1 + $1963($1_1, 20)));
          $1986($4_1, 964, $7_1);
          $1986($4_1, 960, $10_1);
          $1986($4_1, 972, Math_fround($7_1 + $11_1));
          break label$127;
         case 1:
          $1983($2_1, 0, $1959($1_1 + 424 | 0, 0), i64toi32_i32$HIGH_BITS);
          $1983($4_1, 960, $1959($1_1, 416), i64toi32_i32$HIGH_BITS);
          break label$127;
         case 2:
          $1983($2_1, 0, $1959($1_1 + 440 | 0, 0), i64toi32_i32$HIGH_BITS);
          $1983($4_1, 960, $1959($1_1, 432), i64toi32_i32$HIGH_BITS);
          break label$127;
         case 3:
          $1983($2_1, 0, $1959($1_1 + 456 | 0, 0), i64toi32_i32$HIGH_BITS);
          $1983($4_1, 960, $1959($1_1, 448), i64toi32_i32$HIGH_BITS);
          break label$127;
         case 4:
          $1983($2_1, 0, $1959($1_1 + 472 | 0, 0), i64toi32_i32$HIGH_BITS);
          $1983($4_1, 960, $1959($1_1, 464), i64toi32_i32$HIGH_BITS);
          break label$127;
         case 5:
          $7_1 = $1963($1_1 + 40 | 0, 0);
          $11_1 = $1963($1_1 - -64 | 0, 0);
          $10_1 = $1963($1_1 + 92 | 0, 0);
          $16_1 = $1963($1_1 + 436 | 0, 0);
          $3 = $1963($1_1, 36);
          $13 = Math_fround(Math_fround($1963($1_1, 432) - $1963($1_1, 88)) + $1963($1_1, 60));
          $1986($4_1, 960, $13);
          $1986($4_1, 968, Math_fround($13 + $3));
          $11_1 = Math_fround($11_1 + Math_fround($16_1 - $10_1));
          $1986($4_1, 964, $11_1);
          $1986($4_1, 972, Math_fround($11_1 + $7_1));
          break label$127;
         case 6:
          $7_1 = $1963($1_1 + 48 | 0, 0);
          $11_1 = $1963($1_1 - -64 | 0, 0);
          $10_1 = $1963($1_1 + 92 | 0, 0);
          $16_1 = $1963($1_1 + 436 | 0, 0);
          $3 = $1963($1_1, 44);
          $13 = Math_fround(Math_fround($1963($1_1, 432) - $1963($1_1, 88)) + $1963($1_1, 60));
          $1986($4_1, 960, $13);
          $1986($4_1, 968, Math_fround($13 + $3));
          $11_1 = Math_fround($11_1 + Math_fround($16_1 - $10_1));
          $1986($4_1, 964, $11_1);
          $1986($4_1, 972, Math_fround($11_1 + $7_1));
          break label$127;
         case 7:
          $1983($2_1, 0, $1959($1_1 + 520 | 0, 0), i64toi32_i32$HIGH_BITS);
          $1983($4_1, 960, $1959($1_1, 512), i64toi32_i32$HIGH_BITS);
          break label$127;
         default:
          break label$128;
         };
        }
        $1983($2_1, 0, 0, 0);
        $1983($4_1, 960, 0, 0);
       }
       $400($5_1, $4_1 + 960 | 0, $2_1, -8388353, Math_fround(0.0), 0, Math_fround(1.0));
      }
      if (!$1937($6_1, 12258)) {
       break label$125
      }
      if ($1937($1_1 + 11 | 0, 0) & 1) {
       break label$125
      }
      $1973($4_1, 0, $1939($1_1, 154));
      $8 = $4_1 + 960 | 0;
      $21($8, 32, 13404, $4_1);
      $7_1 = $1963($1_1, 12);
      $11_1 = $1963($1944(0, 73568), 6468);
      $1986($4_1, 948, Math_fround($11_1 + $1963($1_1 + 16 | 0, 0)));
      $1986($4_1, 944, Math_fround($11_1 + $7_1));
      $1_1 = $1_1 + 12 | 0;
      $401($5_1, $1_1, $4_1 + 944 | 0, -10197816, Math_fround(0.0), 0);
      $416($5_1, $1_1, -1, $8);
     }
     $0_1 = $0_1 + 1 | 0;
     if (($1944($6_1, 7008) | 0) > ($0_1 | 0)) {
      continue
     }
     break;
    };
   }
   if (!$1937($6_1 + 12259 | 0, 0)) {
    break label$2
   }
   if (($1944($6_1 + 8068 | 0, 0) | 0) <= 0) {
    break label$2
   }
   $5_1 = $4_1 + 968 | 0;
   $0_1 = 0;
   while (1) {
    $1_1 = $0_1;
    $0_1 = $1944($1944($6_1, 8076) + ($1_1 << 3) | 0, 4);
    label$138 : {
     if (($0_1 | 0) == -1) {
      break label$138
     }
     $2_1 = $1944($6_1, 8064);
     if (!$2_1) {
      break label$138
     }
     $2_1 = $2_1 + Math_imul($0_1, 456) | 0;
     if (($1944($2_1, 80) | 0) < ($1944($6_1, 6984) - 1 | 0)) {
      break label$138
     }
     $8 = $92($1944($1944($1944(0, 73568) + 7504 | 0, 0), 0), 1, 11768);
     $0_1 = $1944($35_1, 0);
     if (($0_1 | 0) >= 6) {
      if (($1944($2_1, 84) | 0) <= 0) {
       break label$138
      }
      $9 = $2_1 + 84 | 0;
      $14 = $2_1 + 420 | 0;
      $0_1 = 0;
      while (1) {
       $15_1 = $4_1 + 960 | 0;
       $351($15_1, $2_1, $1944($35_1, 0), $0_1);
       $12_1 = $15_1;
       $15_1 = ($1936($14, 0) | 0) == ($0_1 | 0);
       $400($8, $12_1, $5_1, $15_1 ? -8323073 : -8388353, Math_fround(0.0), 0, $15_1 ? Math_fround(3.0) : Math_fround(1.0));
       $0_1 = $0_1 + 1 | 0;
       if (($1944($9, 0) | 0) > ($0_1 | 0)) {
        continue
       }
       break;
      };
      break label$138;
     }
     $9 = $4_1 + 960 | 0;
     $351($9, $2_1, $0_1, -1);
     $400($8, $9, $5_1, -8388353, Math_fround(0.0), 0, Math_fround(1.0));
    }
    $0_1 = $1_1 + 1 | 0;
    if (($1944($6_1, 8068) | 0) > ($0_1 | 0)) {
     continue
    }
    break;
   };
  }
  $142();
  global$0 = $4_1 + 1184 | 0;
  $1973($34_1, 0, 52584);
  $1_1 = $1944($34_1, 8);
  if (($1944($1_1, 0) | 0) != 2) {
   $1973($30, 24, $1937($34_1, 4));
   $2_1 = $30 + 24 | 0;
   $0_1 = fimport$1(72652, $2_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($30, 24, 0);
   $8 = $1_1;
   $1_1 = fimport$1(72760, $2_1 | 0) | 0;
   fimport$3($8 | 0, $1_1 | 0, $0_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($0_1 | 0);
  }
  global$0 = $30 + 32 | 0;
 }
 
 function $1193($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = global$0 - 32 | 0;
  global$0 = $2_1;
  $0_1 = $1488($2_1 + 12 | 0, $0_1);
  $349(($1944($1944($0_1, 8), 0) | 0) != 2 ? $0_1 + 4 | 0 : 0);
  $1973($0_1, 0, 52584);
  $1_1 = $1944($0_1, 8);
  if (($1944($1_1, 0) | 0) != 2) {
   $1973($2_1, 24, $1937($0_1, 4));
   $3 = $2_1 + 24 | 0;
   $0_1 = fimport$1(72652, $3 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 24, 0);
   $4_1 = $1_1;
   $1_1 = fimport$1(72760, $3 | 0) | 0;
   fimport$3($4_1 | 0, $1_1 | 0, $0_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($0_1 | 0);
  }
  global$0 = $2_1 + 32 | 0;
 }
 
 function $1195($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $0_1 = $1944($0_1, 0);
  if (!(($0_1 | 0) == 2)) {
   +fimport$5($0_1 | 0, 52424, $1_1 + 12 | 0);
   fimport$6($1944($1_1, 12) | 0);
  }
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1196($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $1944($1_1, 0);
  if ($3 >>> 0 < 2147483632) {
   label$2 : {
    if ($3 >>> 0 <= 10) {
     $1968($2_1, 15, $3);
     $4_1 = $2_1 + 4 | 0;
     break label$2;
    }
    $5_1 = ($3 | 15) + 1 | 0;
    $4_1 = $1783($5_1);
    $1973($2_1, 12, $5_1 | -2147483648);
    $1973($2_1, 4, $4_1);
    $1973($2_1, 8, $3);
   }
   if ($3) {
    $1602($4_1, $1_1 + 4 | 0, $3)
   }
   $1968($3 + $4_1 | 0, 0, 0);
   FUNCTION_TABLE[$0_1 | 0]($2_1 + 4 | 0);
   if (($1936($2_1, 15) | 0) < 0) {
    $1756($1944($2_1, 4))
   }
   global$0 = $2_1 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1199($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $4_1 = $1_1 + 4 | 0;
  FUNCTION_TABLE[$0_1 | 0]($4_1);
  $3 = $1944($1_1, 8);
  $2_1 = $1937($1_1, 15);
  $5_1 = $2_1 << 24 >> 24;
  $0_1 = ($5_1 | 0) < 0;
  $3 = $0_1 ? $3 : $2_1 & 127;
  $2_1 = $1755($3 + 4 | 0);
  $1973($2_1, 0, $3);
  $6_1 = $1944($1_1, 4);
  $1602($2_1 + 4 | 0, $0_1 ? $6_1 : $4_1, $3);
  if (($5_1 | 0) < 0) {
   $1756($6_1)
  }
  global$0 = $1_1 + 16 | 0;
  return $2_1 | 0;
 }
 
 function $1200($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0;
  $1_1 = $1697(16215);
  if ($1_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($1_1 >>> 0 <= 10) {
     $1968($0_1, 11, $1_1);
     break label$2;
    }
    $2_1 = ($1_1 | 15) + 1 | 0;
    $3 = $1783($2_1);
    $1973($0_1, 8, $2_1 | -2147483648);
    $1973($0_1, 0, $3);
    $1973($0_1, 4, $1_1);
    $0_1 = $3;
   }
   if ($1_1) {
    $1603($0_1, 16215, $1_1)
   }
   $1968($0_1 + $1_1 | 0, 0, 0);
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1202($0_1) {
  $0_1 = $0_1 | 0;
  $367($0_1);
 }
 
 function $1203($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = Math_fround(0), $2_1 = Math_fround(0), $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = Math_fround(0);
  if (!$0_1) {
   $0_1 = $50()
  }
  $1982($0_1, 200, 0, 0);
  $1982($0_1 + 248 | 0, 0, 0, 0);
  $1982($0_1 + 240 | 0, 0, 1064346583, 1065353216);
  $1982($0_1 + 232 | 0, 0, 1064346583, 1064346583);
  $1982($0_1 + 224 | 0, 0, 1058642330, 1065353216);
  $1982($0_1 + 216 | 0, 0, 1058642330, 1058642330);
  $1982($0_1 + 208 | 0, 0, 0, 1065353216);
  $1982($0_1 + 256 | 0, 0, 0, 0);
  $1982($0_1 + 288 | 0, 0, 0, 1050253722);
  $1982($0_1 + 280 | 0, 0, 0, 0);
  $1982($0_1 + 272 | 0, 0, 1065353216, 1065017672);
  $1982($0_1 + 264 | 0, 0, 1065353216, 1065353216);
  $1982($0_1 + 296 | 0, 0, 0, 0);
  $1982($0_1 + 304 | 0, 0, 0, 0);
  $1982($0_1 + 312 | 0, 0, 1065353216, 1065353216);
  $1982($0_1 + 320 | 0, 0, 1065353216, 1065353216);
  $1982($0_1 + 328 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 336 | 0, 0, 1065017672, 1053609165);
  $1982($0_1 + 344 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 352 | 0, 0, 1065017672, 1059816735);
  $10_1 = $0_1 + 360 | 0;
  $1982($10_1, 0, 1064682127, 1064682127);
  $11_1 = $0_1 + 368 | 0;
  $1982($11_1, 0, 1064682127, 1065353216);
  $1982($0_1 + 376 | 0, 0, 1062333317, 1062333317);
  $12_1 = $0_1 + 384 | 0;
  $1982($12_1, 0, 1062333317, 1065353216);
  $1982($0_1 + 392 | 0, 0, 1065353216, 1065353216);
  $1982($0_1 + 400 | 0, 0, 1065353216, 1057132380);
  $1982($0_1 + 408 | 0, 0, 1063004406, 1063004406);
  $1982($0_1 + 416 | 0, 0, 1063004406, 1065353216);
  $1982($0_1 + 424 | 0, 0, 1065017672, 1065017672);
  $1982($0_1 + 432 | 0, 0, 1065017672, 1057467924);
  $1982($0_1 + 440 | 0, 0, 1060152279, 1060152279);
  $1982($0_1 + 448 | 0, 0, 1060152279, 1061997773);
  $1982($0_1 + 456 | 0, 0, 1056629064, 1056629064);
  $1982($0_1 + 464 | 0, 0, 1056629064, 1061997773);
  $1982($0_1 + 472 | 0, 0, 1056629064, 1056629064);
  $1982($0_1 + 480 | 0, 0, 1056629064, 1065353216);
  $1982($0_1 + 488 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 496 | 0, 0, 1065017672, 1065353216);
  $1982($0_1 + 504 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 512 | 0, 0, 1065017672, 1061662228);
  $1982($0_1 + 520 | 0, 0, 1055622431, 1057635697);
  $1982($0_1 + 528 | 0, 0, 1061997773, 1058642330);
  $1982($0_1 + 536 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 544 | 0, 0, 1065017672, 1053609165);
  $1982($0_1 + 552 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 560 | 0, 0, 1065017672, 1065353216);
  $1982($0_1 + 568 | 0, 0, 1031127695, 1057467924);
  $1982($0_1 + 576 | 0, 0, 1065017672, 1065353216);
  $1982($0_1 + 584 | 0, 0, 1048911544, 1058474557);
  $13 = $0_1 + 592 | 0;
  $1982($13, 0, 1065017672, 1050589266);
  $8 = $0_1 + 600 | 0;
  $1982($8, 0, 1048911544, 1058474557);
  $9 = $0_1 + 608 | 0;
  $1982($9, 0, 1065017672, 1061997773);
  $1982($0_1 + 616 | 0, 0, 1048911544, 1058474557);
  $14 = $0_1 + 624 | 0;
  $1982($14, 0, 1065017672, 1065353216);
  $1982($0_1 + 632 | 0, 0, 1053273620, 1053273620);
  $1982($0_1 + 640 | 0, 0, 1053273620, 1058977874);
  $1982($0_1 + 648 | 0, 0, 1041194025, 1054951342);
  $1982($0_1 + 656 | 0, 0, 1061997773, 1061662228);
  $1982($0_1 + 664 | 0, 0, 1041194025, 1054951342);
  $1982($0_1 + 672 | 0, 0, 1061997773, 1065353216);
  $1982($0_1 + 680 | 0, 0, 1051931443, 1051931443);
  $1982($0_1 + 688 | 0, 0, 1051931443, 1043207291);
  $1982($0_1 + 696 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 704 | 0, 0, 1065017672, 1059816735);
  $1982($0_1 + 712 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 720 | 0, 0, 1065017672, 1064514355);
  $1973($0_1 + 728 | 0, 0, 1061393793);
  $1973($0_1 + 760 | 0, 0, 1058575221);
  $1982($0_1 + 752 | 0, 0, $1959($9, 0), i64toi32_i32$HIGH_BITS);
  $1982($0_1 + 744 | 0, 0, $1959($8, 0), i64toi32_i32$HIGH_BITS);
  $1_1 = $1963($0_1 + 388 | 0, 0);
  $7_1 = $1963($0_1 + 596 | 0, 0);
  $7_1 = Math_fround(Math_fround(Math_fround($1_1 - $7_1) * Math_fround(.8999999761581421)) + $7_1);
  $1986($0_1 + 740 | 0, 0, $7_1);
  $2_1 = $1963($12_1, 0);
  $3 = $1963($13, 0);
  $3 = Math_fround(Math_fround(Math_fround($2_1 - $3) * Math_fround(.8999999761581421)) + $3);
  $1986($0_1 + 736 | 0, 0, $3);
  $4_1 = $1963($0_1 + 380 | 0, 0);
  $5_1 = $1963($0_1 + 588 | 0, 0);
  $5_1 = Math_fround(Math_fround(Math_fround($4_1 - $5_1) * Math_fround(.8999999761581421)) + $5_1);
  $1986($0_1 + 732 | 0, 0, $5_1);
  $6_1 = $1_1;
  $1_1 = $1963($0_1 + 628 | 0, 0);
  $1_1 = Math_fround(Math_fround(Math_fround($6_1 - $1_1) * Math_fround(.6000000238418579)) + $1_1);
  $1986($0_1 + 772 | 0, 0, $1_1);
  $6_1 = $2_1;
  $2_1 = $1963($14, 0);
  $2_1 = Math_fround(Math_fround(Math_fround($6_1 - $2_1) * Math_fround(.6000000238418579)) + $2_1);
  $1986($0_1 + 768 | 0, 0, $2_1);
  $6_1 = $4_1;
  $4_1 = $1963($0_1 + 620 | 0, 0);
  $4_1 = Math_fround(Math_fround(Math_fround($6_1 - $4_1) * Math_fround(.6000000238418579)) + $4_1);
  $1986($0_1 + 764 | 0, 0, $4_1);
  $1982($0_1 + 808 | 0, 0, 1053273620, 1053273620);
  $1982($0_1 + 816 | 0, 0, 1053273620, 1065353216);
  $1982($0_1 + 824 | 0, 0, 1065353216, 1054615798);
  $1982($0_1 + 832 | 0, 0, 1051931443, 1065353216);
  $1982($0_1 + 840 | 0, 0, 1063675494, 1060320051);
  $1982($0_1 + 848 | 0, 0, 0, 1065353216);
  $1982($0_1 + 856 | 0, 0, 1065353216, 1055286886);
  $1982($0_1 + 864 | 0, 0, 0, 1065353216);
  $1982($0_1 + 872 | 0, 0, 1061662228, 1063172178);
  $1982($0_1 + 880 | 0, 0, 1065017672, 1065353216);
  $1982($0_1 + 888 | 0, 0, 1058139013, 1058139013);
  $1982($0_1 + 896 | 0, 0, 1059313418, 1065353216);
  $1982($0_1 + 904 | 0, 0, 1059984507, 1059984507);
  $1982($0_1 + 912 | 0, 0, 1060991140, 1065353216);
  $6_1 = $1963($10_1, 0);
  $1986($0_1 + 776 | 0, 0, Math_fround(Math_fround(Math_fround($6_1 + Math_fround(-.7639999985694885)) * Math_fround(.800000011920929)) + Math_fround(.7639999985694885)));
  $15_1 = $1963($0_1 + 364 | 0, 0);
  $1986($0_1 + 780 | 0, 0, Math_fround(Math_fround(Math_fround($15_1 - $5_1) * Math_fround(.800000011920929)) + $5_1));
  $5_1 = $1963($11_1, 0);
  $1986($0_1 + 784 | 0, 0, Math_fround(Math_fround(Math_fround($5_1 - $3) * Math_fround(.800000011920929)) + $3));
  $3 = $1963($0_1 + 372 | 0, 0);
  $1986($0_1 + 788 | 0, 0, Math_fround(Math_fround(Math_fround($3 - $7_1) * Math_fround(.800000011920929)) + $7_1));
  $1986($0_1 + 792 | 0, 0, Math_fround(Math_fround(Math_fround($6_1 + Math_fround(-.5960000157356262)) * Math_fround(.4000000059604645)) + Math_fround(.5960000157356262)));
  $1986($0_1 + 796 | 0, 0, Math_fround(Math_fround(Math_fround($15_1 - $4_1) * Math_fround(.4000000059604645)) + $4_1));
  $1986($0_1 + 800 | 0, 0, Math_fround(Math_fround(Math_fround($5_1 - $2_1) * Math_fround(.4000000059604645)) + $2_1));
  $1986($0_1 + 804 | 0, 0, Math_fround(Math_fround(Math_fround($3 - $1_1) * Math_fround(.4000000059604645)) + $1_1));
  $1982($0_1 + 928 | 0, 0, 0, 0);
  $1982($0_1 + 920 | 0, 0, 0, 0);
  $1982($0_1 + 976 | 0, 0, 1065017672, 1064514355);
  $1982($0_1 + 968 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 960 | 0, 0, 1065017672, 1051931443);
  $1982($0_1 + 952 | 0, 0, 1048911544, 1058474557);
  $1982($0_1 + 944 | 0, 0, 1050253722, 1035489772);
  $1982($0_1 + 936 | 0, 0, 1050253722, 1050253722);
  $1982($0_1 + 1e3 | 0, 0, 1060320051, 1060320051);
  $1982($0_1 + 1008 | 0, 0, 1060320051, 1060320051);
  $1982($0_1 + 1016 | 0, 0, 1045220557, 1045220557);
  $1982($0_1 + 1024 | 0, 0, 1045220557, 1045220557);
  $1982($0_1 + 1032 | 0, 0, 1045220557, 1045220557);
  $1982($0_1 + 1040 | 0, 0, 1045220557, 1051931443);
  $1982($0_1 + 992 | 0, 0, $1959($9, 0), i64toi32_i32$HIGH_BITS);
  $1982($0_1 + 984 | 0, 0, $1959($8, 0), i64toi32_i32$HIGH_BITS);
 }
 
 function $1204($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = Math_fround(0), $2_1 = Math_fround(0), $3 = Math_fround(0), $4_1 = Math_fround(0), $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = Math_fround(0);
  if (!$0_1) {
   $0_1 = $50()
  }
  $1982($0_1, 200, 1063675494, 1063675494);
  $1982($0_1 + 248 | 0, 0, 0, 0);
  $1982($0_1 + 240 | 0, 0, 0, 1062836634);
  $1982($0_1 + 232 | 0, 0, 0, 0);
  $1982($0_1 + 224 | 0, 0, 1058642330, 1065353216);
  $1982($0_1 + 216 | 0, 0, 1058642330, 1058642330);
  $1982($0_1 + 208 | 0, 0, 1063675494, 1065353216);
  $1982($0_1 + 256 | 0, 0, 0, 0);
  $1982($0_1 + 288 | 0, 0, 1056964608, 1056964608);
  $1982($0_1 + 280 | 0, 0, 1056964608, 1056964608);
  $1982($0_1 + 272 | 0, 0, 1041194025, 1064011039);
  $1982($0_1 + 264 | 0, 0, 1038174126, 1038174126);
  $1982($0_1 + 296 | 0, 0, 0, 0);
  $1982($0_1 + 304 | 0, 0, 0, 0);
  $1982($0_1 + 312 | 0, 0, 1054615798, 1054615798);
  $1982($0_1 + 320 | 0, 0, 1054615798, 1053273620);
  $1982($0_1 + 328 | 0, 0, 1055957975, 1055957975);
  $1982($0_1 + 336 | 0, 0, 1060152279, 1053609165);
  $1982($0_1 + 344 | 0, 0, 1054280253, 1053944709);
  $1982($0_1 + 352 | 0, 0, 1059313418, 1060152279);
  $10_1 = $0_1 + 360 | 0;
  $1982($10_1, 0, 1049247089, 1049247089);
  $11_1 = $0_1 + 368 | 0;
  $1982($11_1, 0, 1057635697, 1062501089);
  $1982($0_1 + 376 | 0, 0, 1050924810, 1050924810);
  $12_1 = $0_1 + 384 | 0;
  $1982($12_1, 0, 1059145646, 1063172178);
  $1982($0_1 + 392 | 0, 0, 1053609165, 1053609165);
  $1982($0_1 + 400 | 0, 0, 1061997773, 1045220557);
  $1982($0_1 + 408 | 0, 0, 1053609165, 1053609165);
  $1982($0_1 + 416 | 0, 0, 1057803469, 1061997773);
  $1982($0_1 + 424 | 0, 0, 1045220557, 1048576e3);
  $1982($0_1 + 432 | 0, 0, 1050253722, 1058642330);
  $1982($0_1 + 440 | 0, 0, 1053609165, 1053609165);
  $1982($0_1 + 448 | 0, 0, 1061997773, 1050253722);
  $1982($0_1 + 456 | 0, 0, 1053609165, 1053609165);
  $1982($0_1 + 464 | 0, 0, 1061997773, 1053609165);
  $1982($0_1 + 472 | 0, 0, 1053944709, 1053273620);
  $1982($0_1 + 480 | 0, 0, 1061997773, 1058642330);
  $1982($0_1 + 488 | 0, 0, 1063675494, 1063675494);
  $1982($0_1 + 496 | 0, 0, 1063675494, 1056964608);
  $1982($0_1 + 504 | 0, 0, 1065353216, 1065353216);
  $1982($0_1 + 512 | 0, 0, 1065353216, 1050253722);
  $1982($0_1 + 520 | 0, 0, 1053944709, 1053273620);
  $1982($0_1 + 528 | 0, 0, 1061997773, 1058642330);
  $1982($0_1 + 536 | 0, 0, 1051931443, 1053609165);
  $1982($0_1 + 544 | 0, 0, 1058810102, 1058977874);
  $1982($0_1 + 552 | 0, 0, 1053609165, 1056293519);
  $1982($0_1 + 560 | 0, 0, 1060487823, 1061830001);
  $1982($0_1 + 568 | 0, 0, 1055622431, 1057635697);
  $1982($0_1 + 576 | 0, 0, 1061997773, 1065353216);
  $1982($0_1 + 584 | 0, 0, 1053609165, 1053609165);
  $13 = $0_1 + 592 | 0;
  $1982($13, 0, 1063675494, 1055286886);
  $8 = $0_1 + 600 | 0;
  $1982($8, 0, 1055286886, 1055286886);
  $9 = $0_1 + 608 | 0;
  $1982($9, 0, 1063675494, 1061997773);
  $1982($0_1 + 616 | 0, 0, 1057467924, 1057467924);
  $14 = $0_1 + 624 | 0;
  $1982($14, 0, 1063172178, 1061997773);
  $1982($0_1 + 632 | 0, 0, 1056964608, 1056964608);
  $1982($0_1 + 640 | 0, 0, 1056964608, 1058642330);
  $1982($0_1 + 648 | 0, 0, 1058642330, 1058642330);
  $1982($0_1 + 656 | 0, 0, 1060320051, 1065353216);
  $1982($0_1 + 664 | 0, 0, 1060320051, 1060320051);
  $1982($0_1 + 672 | 0, 0, 1063675494, 1065353216);
  $1982($0_1 + 680 | 0, 0, 1065353216, 1065353216);
  $1982($0_1 + 688 | 0, 0, 1065353216, 1036831949);
  $1982($0_1 + 696 | 0, 0, 1061662228, 1062333317);
  $1982($0_1 + 704 | 0, 0, 1065353216, 1058642330);
  $1982($0_1 + 712 | 0, 0, 1061662228, 1062333317);
  $1982($0_1 + 720 | 0, 0, 1065353216, 1063675494);
  $1973($0_1 + 728 | 0, 0, 1051461681);
  $1973($0_1 + 760 | 0, 0, 1053743382);
  $1982($0_1 + 752 | 0, 0, $1959($9, 0), i64toi32_i32$HIGH_BITS);
  $1982($0_1 + 744 | 0, 0, $1959($8, 0), i64toi32_i32$HIGH_BITS);
  $1_1 = $1963($0_1 + 388 | 0, 0);
  $7_1 = $1963($0_1 + 596 | 0, 0);
  $7_1 = Math_fround(Math_fround(Math_fround($1_1 - $7_1) * Math_fround(.800000011920929)) + $7_1);
  $1986($0_1 + 740 | 0, 0, $7_1);
  $2_1 = $1963($12_1, 0);
  $3 = $1963($13, 0);
  $3 = Math_fround(Math_fround(Math_fround($2_1 - $3) * Math_fround(.800000011920929)) + $3);
  $1986($0_1 + 736 | 0, 0, $3);
  $4_1 = $1963($0_1 + 380 | 0, 0);
  $5_1 = $1963($0_1 + 588 | 0, 0);
  $5_1 = Math_fround(Math_fround(Math_fround($4_1 - $5_1) * Math_fround(.800000011920929)) + $5_1);
  $1986($0_1 + 732 | 0, 0, $5_1);
  $6_1 = $1_1;
  $1_1 = $1963($0_1 + 628 | 0, 0);
  $1_1 = Math_fround(Math_fround(Math_fround($6_1 - $1_1) * Math_fround(.6000000238418579)) + $1_1);
  $1986($0_1 + 772 | 0, 0, $1_1);
  $6_1 = $2_1;
  $2_1 = $1963($14, 0);
  $2_1 = Math_fround(Math_fround(Math_fround($6_1 - $2_1) * Math_fround(.6000000238418579)) + $2_1);
  $1986($0_1 + 768 | 0, 0, $2_1);
  $6_1 = $4_1;
  $4_1 = $1963($0_1 + 620 | 0, 0);
  $4_1 = Math_fround(Math_fround(Math_fround($6_1 - $4_1) * Math_fround(.6000000238418579)) + $4_1);
  $1986($0_1 + 764 | 0, 0, $4_1);
  $1982($0_1 + 808 | 0, 0, 1065353216, 1065353216);
  $1982($0_1 + 816 | 0, 0, 1065353216, 1065353216);
  $1982($0_1 + 824 | 0, 0, 1063675494, 1060320051);
  $1982($0_1 + 832 | 0, 0, 0, 1065353216);
  $1982($0_1 + 840 | 0, 0, 1063675494, 1060320051);
  $1982($0_1 + 848 | 0, 0, 0, 1065353216);
  $1982($0_1 + 856 | 0, 0, 1065353216, 1058642330);
  $1982($0_1 + 864 | 0, 0, 0, 1065353216);
  $1982($0_1 + 872 | 0, 0, 1049247089, 1049247089);
  $1982($0_1 + 880 | 0, 0, 1052938076, 1065353216);
  $1982($0_1 + 888 | 0, 0, 1050589266, 1050589266);
  $1982($0_1 + 896 | 0, 0, 1055286886, 1065353216);
  $1982($0_1 + 904 | 0, 0, 1048911544, 1048911544);
  $1982($0_1 + 912 | 0, 0, 1049582633, 1065353216);
  $6_1 = $1963($10_1, 0);
  $1986($0_1 + 776 | 0, 0, Math_fround(Math_fround(Math_fround($6_1 + Math_fround(-.335999995470047)) * Math_fround(.800000011920929)) + Math_fround(.335999995470047)));
  $15_1 = $1963($0_1 + 364 | 0, 0);
  $1986($0_1 + 780 | 0, 0, Math_fround(Math_fround(Math_fround($15_1 - $5_1) * Math_fround(.800000011920929)) + $5_1));
  $5_1 = $1963($11_1, 0);
  $1986($0_1 + 784 | 0, 0, Math_fround(Math_fround(Math_fround($5_1 - $3) * Math_fround(.800000011920929)) + $3));
  $3 = $1963($0_1 + 372 | 0, 0);
  $1986($0_1 + 788 | 0, 0, Math_fround(Math_fround(Math_fround($3 - $7_1) * Math_fround(.800000011920929)) + $7_1));
  $1986($0_1 + 792 | 0, 0, Math_fround(Math_fround(Math_fround($6_1 + Math_fround(-.4039999842643738)) * Math_fround(.4000000059604645)) + Math_fround(.4039999842643738)));
  $1986($0_1 + 796 | 0, 0, Math_fround(Math_fround(Math_fround($15_1 - $4_1) * Math_fround(.4000000059604645)) + $4_1));
  $1986($0_1 + 800 | 0, 0, Math_fround(Math_fround(Math_fround($5_1 - $2_1) * Math_fround(.4000000059604645)) + $2_1));
  $1986($0_1 + 804 | 0, 0, Math_fround(Math_fround(Math_fround($3 - $1_1) * Math_fround(.4000000059604645)) + $1_1));
  $1982($0_1 + 928 | 0, 0, 0, 0);
  $1982($0_1 + 920 | 0, 0, 0, 0);
  $1982($0_1 + 976 | 0, 0, 0, 1063675494);
  $1982($0_1 + 968 | 0, 0, 1065353216, 1065353216);
  $1982($0_1 + 960 | 0, 0, 1065353216, 1051931443);
  $1982($0_1 + 952 | 0, 0, 0, 0);
  $1982($0_1 + 944 | 0, 0, 1065353216, 1032805417);
  $1982($0_1 + 936 | 0, 0, 1065353216, 1065353216);
  $1982($0_1 + 1e3 | 0, 0, 1065353216, 1065353216);
  $1982($0_1 + 1008 | 0, 0, 1065353216, 1060320051);
  $1982($0_1 + 1016 | 0, 0, 1061997773, 1061997773);
  $1982($0_1 + 1024 | 0, 0, 1061997773, 1045220557);
  $1982($0_1 + 1032 | 0, 0, 1045220557, 1045220557);
  $1982($0_1 + 1040 | 0, 0, 1045220557, 1051931443);
  $1982($0_1 + 992 | 0, 0, $1959($9, 0), i64toi32_i32$HIGH_BITS);
  $1982($0_1 + 984 | 0, 0, $1959($8, 0), i64toi32_i32$HIGH_BITS);
 }
 
 function $1205($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $5_1 = $1944($1_1, 0);
  if ($5_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($5_1 >>> 0 <= 10) {
     $1968($4_1, 15, $5_1);
     $6_1 = $4_1 + 4 | 0;
     break label$2;
    }
    $7_1 = ($5_1 | 15) + 1 | 0;
    $6_1 = $1783($7_1);
    $1973($4_1, 12, $7_1 | -2147483648);
    $1973($4_1, 4, $6_1);
    $1973($4_1, 8, $5_1);
   }
   if ($5_1) {
    $1602($6_1, $1_1 + 4 | 0, $5_1)
   }
   $1968($5_1 + $6_1 | 0, 0, 0);
   $1973($4_1, 0, $2_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($4_1 + 4 | 0, $4_1, $3) | 0;
   fimport$4($1944($4_1, 0) | 0);
   if (($1936($4_1, 15) | 0) < 0) {
    $1756($1944($4_1, 4))
   }
   global$0 = $4_1 + 16 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1206($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $4_1 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $0_1 = $1488($3 + 12 | 0, $1_1);
  $1_1 = $143($4_1, ($1944($1944($0_1, 8), 0) | 0) != 2 ? $0_1 + 4 | 0 : 0, $2_1);
  $1973($0_1, 0, 52584);
  $2_1 = $1944($0_1, 8);
  if (($1944($2_1, 0) | 0) != 2) {
   $1973($3, 24, $1937($0_1, 4));
   $5_1 = $3 + 24 | 0;
   $0_1 = fimport$1(72652, $5_1 | 0) | 0;
   $2_1 = $1944($2_1, 0);
   $1973($3, 24, 0);
   $4_1 = $2_1;
   $2_1 = fimport$1(72760, $5_1 | 0) | 0;
   fimport$3($4_1 | 0, $2_1 | 0, $0_1 | 0);
   fimport$4($2_1 | 0);
   fimport$4($0_1 | 0);
  }
  global$0 = $3 + 32 | 0;
  return $1_1 | 0;
 }
 
 function $1207($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  var $5_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $1973($5_1, 8, $2_1);
  $1973($5_1, 12, $1_1);
  $0_1 = FUNCTION_TABLE[$0_1 | 0]($5_1 + 12 | 0, $5_1 + 8 | 0, $3, $4_1) | 0;
  fimport$4($1944($5_1, 8) | 0);
  fimport$4($1944($5_1, 12) | 0);
  global$0 = $5_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1208($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0.0, $9 = 0, $10_1 = 0, $11_1 = 0;
  $5_1 = global$0 - 32 | 0;
  global$0 = $5_1;
  $4_1 = fimport$20($1944($0_1, 0) | 0) | 0;
  $6_1 = fimport$2(8915) | 0;
  $7_1 = fimport$8($4_1 | 0, $6_1 | 0) | 0;
  fimport$4($6_1 | 0);
  fimport$4($4_1 | 0);
  label$1 : {
   label$2 : {
    if ($7_1) {
     $8 = +fimport$5($1944($0_1, 0) | 0, 49072, $5_1 + 12 | 0);
     label$4 : {
      if ($8 < 4294967296.0 & $8 >= 0.0) {
       $6_1 = ~~$8 >>> 0;
       break label$4;
      }
      $6_1 = 0;
     }
     $4_1 = $1944($6_1, 0);
     if ($4_1 >>> 0 >= 2147483632) {
      break label$1
     }
     $7_1 = $1944($5_1, 12);
     label$6 : {
      if ($4_1 >>> 0 <= 10) {
       $1968($5_1, 31, $4_1);
       $0_1 = $5_1 + 20 | 0;
       break label$6;
      }
      $9 = ($4_1 | 15) + 1 | 0;
      $0_1 = $1783($9);
      $1973($5_1, 28, $9 | -2147483648);
      $1973($5_1, 20, $0_1);
      $1973($5_1, 24, $4_1);
     }
     if ($4_1) {
      $1602($0_1, $6_1 + 4 | 0, $4_1)
     }
     $1968($0_1 + $4_1 | 0, 0, 0);
     fimport$6($7_1 | 0);
     $0_1 = $1944($5_1, 20);
     $4_1 = $1936($5_1, 31);
     $1982($5_1, 12, 0, 0);
     $11_1 = $763($1_1, $5_1 + 12 | 0);
     $6_1 = $1944(0, 73568);
     $1_1 = $1944($6_1, 7080);
     $1968($1_1, 140, 1);
     $9 = ($4_1 | 0) < 0 ? $0_1 : $5_1 + 20 | 0;
     $0_1 = $9;
     $10_1 = $1944((($1944($1_1, 196) << 2) + $1944($1_1 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
     $4_1 = $10_1;
     while (1) {
      $1_1 = $0_1;
      $0_1 = $0_1 + 1 | 0;
      $7_1 = $1937($1_1, 0);
      if ($7_1) {
       label$41 : {
        if (($7_1 | 0) != 35) {
         break label$41
        }
        if (($1937($0_1, 0) | 0) != 35) {
         break label$41
        }
        $4_1 = ($1937($1_1, 2) | 0) == 35 ? $10_1 : $4_1;
       }
       $4_1 = $1944((($7_1 ^ $4_1 & 255) << 2) + 19360 | 0, 0) ^ $4_1 >>> 8;
      }
      if ($7_1) {
       continue
      }
      break;
     };
     $0_1 = $4_1 ^ -1;
     if (($1944($6_1, 7136) | 0) == ($0_1 | 0)) {
      $1973($6_1, 7140, $0_1)
     }
     if (($1944($6_1, 7196) | 0) == ($0_1 | 0)) {
      $1968($6_1, 7200, 1)
     }
     if (($1944($6_1, 7112) | 0) == ($0_1 | 0)) {
      $75($0_1, 11, $9)
     }
     $0_1 = $207($9, $0_1, $11_1, $2_1, $3);
     if (($1936($5_1, 31) | 0) < 0) {
      $1756($1944($5_1, 20))
     }
     break label$2;
    }
    $4_1 = $1944($0_1, 0);
    $0_1 = $5_1 + 20 | 0;
    $8 = +fimport$5($4_1 | 0, 72736, $0_1 | 0);
    fimport$6($1944($5_1, 20) | 0);
    $1982($5_1, 20, 0, 0);
    $0_1 = $207(0, $8 < 4294967296.0 & $8 >= 0.0 ? ~~$8 >>> 0 : 0, $763($1_1, $0_1), $2_1, $3);
   }
   global$0 = $5_1 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1210($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = $1944($1944(0, 73568), 7080);
  $1968($2_1, 140, 1);
  $1973($1_1, 8, $1944($2_1, 580));
  $1973($0_1, 0, fimport$1(49796, $1_1 + 8 | 0) | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1211($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $1_1);
  FUNCTION_TABLE[$0_1 | 0]($2_1 + 12 | 0, $2_1 + 8 | 0);
  fimport$10($1944($2_1, 12) | 0);
  $0_1 = $1944($2_1, 12);
  fimport$4($0_1 | 0);
  fimport$4($1944($2_1, 8) | 0);
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1212($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $2_1 + 8 | 0;
  $1982($3, 0, $1959($1944($1944(0, 73568), 7080), 12), i64toi32_i32$HIGH_BITS);
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $3, $2_1 + 4 | 0);
  fimport$4($1944($2_1, 4) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1213($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $2_1 + 8 | 0;
  $1982($3, 0, $1959($1944($1944(0, 73568), 7080), 20), i64toi32_i32$HIGH_BITS);
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $3, $2_1 + 4 | 0);
  fimport$4($1944($2_1, 4) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1214($0_1) {
  $0_1 = $0_1 | 0;
  return Math_fround(Math_fround(FUNCTION_TABLE[$0_1 | 0]()));
 }
 
 function $1215($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1973($4_1, 8, $3);
  $1973($4_1, 12, $1_1);
  FUNCTION_TABLE[$0_1 | 0]($4_1 + 12 | 0, $2_1, $4_1 + 8 | 0);
  fimport$4($1944($4_1, 8) | 0);
  fimport$4($1944($4_1, 12) | 0);
  global$0 = $4_1 + 16 | 0;
 }
 
 function $1216($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1982($3, 8, 0, 0);
  $0_1 = $763($0_1, $3 + 8 | 0);
  $1982($3, 0, 0, 0);
  $250($0_1, $1_1, $763($2_1, $3));
  global$0 = $3 + 16 | 0;
 }
 
 function $1217($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 12, $1_1);
  FUNCTION_TABLE[$0_1 | 0]($3 + 12 | 0, $2_1);
  fimport$4($1944($3, 12) | 0);
  global$0 = $3 + 16 | 0;
 }
 
 function $1218($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1982($2_1, 8, 0, 0);
  $145($763($0_1, $2_1 + 8 | 0), $1_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1219($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  var $5_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $1973($5_1, 8, $2_1);
  $1973($5_1, 12, $1_1);
  $1973($5_1, 4, $3);
  $1973($5_1, 0, $4_1);
  FUNCTION_TABLE[$0_1 | 0]($5_1 + 12 | 0, $5_1 + 8 | 0, $5_1 + 4 | 0, $5_1);
  fimport$4($1944($5_1, 0) | 0);
  fimport$4($1944($5_1, 4) | 0);
  fimport$4($1944($5_1, 8) | 0);
  fimport$4($1944($5_1, 12) | 0);
  global$0 = $5_1 + 16 | 0;
 }
 
 function $1220($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $4_1 = $1944($2_1, 0);
  label$1 : {
   if (($4_1 | 0) != 2) {
    $5_1 = $1944(0, 95660);
    fimport$10($4_1 | 0);
    fimport$4($1944($5_1, 76) | 0);
    $1973($5_1, 76, $1944($2_1, 0));
    $1982($3, 8, 0, 0);
    $0_1 = $763($0_1, $3 + 8 | 0);
    $1982($3, 0, 0, 0);
    $251($0_1, $763($1_1, $3), 866);
    break label$1;
   }
   $1982($3, 8, 0, 0);
   $0_1 = $763($0_1, $3 + 8 | 0);
   $1982($3, 0, 0, 0);
   $251($0_1, $763($1_1, $3), 0);
  }
  global$0 = $3 + 16 | 0;
 }
 
 function $1221($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1982($1_1, 8, 0, 0);
  $252($763($0_1, $1_1 + 8 | 0));
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1222($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1);
 }
 
 function $1223($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = Math_fround($1_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1);
 }
 
 function $1224($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = Math_fround(0), $3 = Math_fround(0), $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = Math_fround(0);
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $1982($6_1, 8, 0, 0);
  $4_1 = $763($0_1, $6_1 + 8 | 0);
  $0_1 = $1944($1944(0, 73568), 7080);
  label$1 : {
   if ($1_1) {
    if (!($1936($0_1, 176) & $1_1)) {
     break label$1
    }
   }
   $1982($0_1, 180, 2139095039, 2139095039);
   $1973($0_1, 176, $1944($0_1, 176) & -15);
   $1_1 = $0_1 + 16 | 0;
   $3 = $1963($1_1, 0);
   $2_1 = $1963($4_1, 0);
   $5_1 = $1963($4_1, 4);
   label$3 : {
    if (Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0)) {
     $4_1 = ~~$5_1;
     break label$3;
    }
    $4_1 = -2147483648;
   }
   $5_1 = Math_fround($4_1 | 0);
   $1986($1_1, 0, $5_1);
   $7_1 = $1963($0_1, 12);
   $2_1 = Math_fround((Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0) ? ~~$2_1 : -2147483648) | 0);
   $1986($0_1, 12, $2_1);
   $2_1 = Math_fround($2_1 - $7_1);
   $1986($0_1, 208, Math_fround($2_1 + $1963($0_1, 208)));
   $1_1 = $0_1 + 212 | 0;
   $3 = Math_fround($5_1 - $3);
   $1986($1_1, 0, Math_fround($3 + $1963($1_1, 0)));
   $1_1 = $0_1 + 232 | 0;
   $1986($1_1, 0, Math_fround($2_1 + $1963($1_1, 0)));
   $1_1 = $0_1 + 236 | 0;
   $1986($1_1, 0, Math_fround($3 + $1963($1_1, 0)));
   $1_1 = $0_1 + 240 | 0;
   $1986($1_1, 0, Math_fround($2_1 + $1963($1_1, 0)));
   $1_1 = $0_1 + 244 | 0;
   $1986($1_1, 0, Math_fround($3 + $1963($1_1, 0)));
   $1_1 = $0_1 + 224 | 0;
   $1986($1_1, 0, Math_fround($2_1 + $1963($1_1, 0)));
   $0_1 = $0_1 + 228 | 0;
   $1986($0_1, 0, Math_fround($3 + $1963($0_1, 0)));
  }
  global$0 = $6_1 + 16 | 0;
 }
 
 function $1225($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = Math_fround(0), $3 = 0, $4_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1982($3, 8, 0, 0);
  $4_1 = $763($0_1, $3 + 8 | 0);
  $0_1 = $1944($1944(0, 73568), 7080);
  __inlined_func$242 : {
   if ($1_1) {
    if (!($1944($0_1, 176) << 16 >> 24 & $1_1)) {
     break __inlined_func$242
    }
   }
   $1973($0_1, 176, $1944($0_1, 176) & -3585);
   $2_1 = $1963($4_1, 0);
   label$3 : {
    if ($2_1 > Math_fround(0.0)) {
     $1968($0_1, 164, 0);
     $1986($0_1, 28, Math_fround((Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0) ? ~~$2_1 : -2147483648) | 0));
     break label$3;
    }
    $1968($0_1, 167, 0);
    $1968($0_1, 164, 2);
   }
   $2_1 = $1963($4_1, 4);
   if ($2_1 > Math_fround(0.0)) {
    $1968($0_1, 165, 0);
    $1986($0_1 + 32 | 0, 0, Math_fround((Math_fround(Math_abs($2_1)) < Math_fround(2147483648.0) ? ~~$2_1 : -2147483648) | 0));
    break __inlined_func$242;
   }
   $1968($0_1, 167, 0);
   $1968($0_1, 165, 2);
  }
  global$0 = $3 + 16 | 0;
 }
 
 function $1226($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = $1944($1944(0, 73568), 7080);
  label$1 : {
   if ($1_1) {
    if (!($1944($2_1, 176) << 8 >> 24 & $1_1)) {
     break label$1
    }
   }
   $1968($2_1, 141, $0_1);
   $1973($2_1, 176, $1944($2_1, 176) & -917505);
  }
 }
 
 function $1227() {
  $125($1944($1944(0, 73568), 7080));
 }
 
 function $1228($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $5_1 = $1944($1_1, 0);
  if ($5_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($5_1 >>> 0 <= 10) {
     $1968($4_1, 15, $5_1);
     $6_1 = $4_1 + 4 | 0;
     break label$2;
    }
    $7_1 = ($5_1 | 15) + 1 | 0;
    $6_1 = $1783($7_1);
    $1973($4_1, 12, $7_1 | -2147483648);
    $1973($4_1, 4, $6_1);
    $1973($4_1, 8, $5_1);
   }
   if ($5_1) {
    $1602($6_1, $1_1 + 4 | 0, $5_1)
   }
   $1968($5_1 + $6_1 | 0, 0, 0);
   $1973($4_1, 0, $2_1);
   FUNCTION_TABLE[$0_1 | 0]($4_1 + 4 | 0, $4_1, $3);
   fimport$4($1944($4_1, 0) | 0);
   if (($1936($4_1, 15) | 0) < 0) {
    $1756($1944($4_1, 4))
   }
   global$0 = $4_1 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1229($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = Math_fround(0), $5_1 = 0, $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = Math_fround(0);
  $8 = global$0 - 16 | 0;
  global$0 = $8;
  $3 = $1944($0_1, 0);
  $5_1 = $1936($0_1, 11);
  $1982($8, 8, 0, 0);
  $10_1 = $763($1_1, $8 + 8 | 0);
  $0_1 = ($5_1 | 0) < 0 ? $3 : $0_1;
  $3 = -1;
  while (1) {
   $1_1 = $0_1;
   $0_1 = $0_1 + 1 | 0;
   $5_1 = $1937($1_1, 0);
   if ($5_1) {
    label$4 : {
     if (($5_1 | 0) != 35) {
      break label$4
     }
     if (($1937($0_1, 0) | 0) != 35) {
      break label$4
     }
     $3 = ($1937($1_1, 2) | 0) == 35 ? -1 : $3;
    }
    $3 = $1944((($5_1 ^ $3 & 255) << 2) + 19360 | 0, 0) ^ $3 >>> 8;
   }
   if ($5_1) {
    continue
   }
   break;
  };
  $5_1 = $3 ^ -1;
  $1_1 = $1944(0, 73568);
  $11_1 = $1944($1_1 + 7064 | 0, 0);
  $0_1 = $11_1;
  $3 = $1944($1_1, 7056);
  if ($3) {
   $1_1 = $3;
   while (1) {
    $9 = $1_1 >>> 1 | 0;
    $12_1 = ($9 << 3) + $0_1 | 0;
    $13 = $1944($12_1, 0) >>> 0 < $5_1 >>> 0;
    $0_1 = $13 ? $12_1 + 8 | 0 : $0_1;
    $1_1 = $13 ? $1_1 + ($9 ^ -1) | 0 : $9;
    if ($1_1) {
     continue
    }
    break;
   };
  }
  $1_1 = 0;
  label$9 : {
   if ((($3 << 3) + $11_1 | 0) == ($0_1 | 0)) {
    break label$9
   }
   $1_1 = 0;
   if (($1944($0_1, 0) | 0) != ($5_1 | 0)) {
    break label$9
   }
   $1_1 = $1944($0_1, 4);
  }
  $0_1 = $1_1;
  label$11 : {
   if (!$0_1) {
    break label$11
   }
   if ($2_1) {
    if (!($1936($0_1, 176) & $2_1)) {
     break label$11
    }
   }
   $1982($0_1, 180, 2139095039, 2139095039);
   $1973($0_1, 176, $1944($0_1, 176) & -15);
   $1_1 = $0_1 + 16 | 0;
   $6_1 = $1963($1_1, 0);
   $4_1 = $1963($10_1, 0);
   $7_1 = $1963($10_1, 4);
   label$13 : {
    if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
     $2_1 = ~~$7_1;
     break label$13;
    }
    $2_1 = -2147483648;
   }
   $7_1 = Math_fround($2_1 | 0);
   $1986($1_1, 0, $7_1);
   $14 = $1963($0_1, 12);
   $4_1 = Math_fround((Math_fround(Math_abs($4_1)) < Math_fround(2147483648.0) ? ~~$4_1 : -2147483648) | 0);
   $1986($0_1, 12, $4_1);
   $4_1 = Math_fround($4_1 - $14);
   $1986($0_1, 208, Math_fround($4_1 + $1963($0_1, 208)));
   $1_1 = $0_1 + 212 | 0;
   $6_1 = Math_fround($7_1 - $6_1);
   $1986($1_1, 0, Math_fround($6_1 + $1963($1_1, 0)));
   $1_1 = $0_1 + 232 | 0;
   $1986($1_1, 0, Math_fround($4_1 + $1963($1_1, 0)));
   $1_1 = $0_1 + 236 | 0;
   $1986($1_1, 0, Math_fround($6_1 + $1963($1_1, 0)));
   $1_1 = $0_1 + 240 | 0;
   $1986($1_1, 0, Math_fround($4_1 + $1963($1_1, 0)));
   $1_1 = $0_1 + 244 | 0;
   $1986($1_1, 0, Math_fround($6_1 + $1963($1_1, 0)));
   $1_1 = $0_1 + 224 | 0;
   $1986($1_1, 0, Math_fround($4_1 + $1963($1_1, 0)));
   $0_1 = $0_1 + 228 | 0;
   $1986($0_1, 0, Math_fround($6_1 + $1963($0_1, 0)));
  }
  global$0 = $8 + 16 | 0;
 }
 
 function $1230($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $4_1 = $1944($0_1, 0);
  $3 = $1936($0_1, 11);
  $1982($6_1, 8, 0, 0);
  $8 = $763($1_1, $6_1 + 8 | 0);
  $0_1 = ($3 | 0) < 0 ? $4_1 : $0_1;
  $1_1 = -1;
  while (1) {
   $4_1 = $0_1;
   $0_1 = $0_1 + 1 | 0;
   $3 = $1937($4_1, 0);
   if ($3) {
    label$4 : {
     if (($3 | 0) != 35) {
      break label$4
     }
     if (($1937($0_1, 0) | 0) != 35) {
      break label$4
     }
     $1_1 = ($1937($4_1, 2) | 0) == 35 ? -1 : $1_1;
    }
    $1_1 = $1944((($3 ^ $1_1 & 255) << 2) + 19360 | 0, 0) ^ $1_1 >>> 8;
   }
   if ($3) {
    continue
   }
   break;
  };
  $3 = $1_1 ^ -1;
  $1_1 = $1944(0, 73568);
  $9 = $1944($1_1 + 7064 | 0, 0);
  $0_1 = $9;
  $4_1 = $1944($1_1, 7056);
  if ($4_1) {
   $1_1 = $4_1;
   while (1) {
    $7_1 = $1_1 >>> 1 | 0;
    $10_1 = ($7_1 << 3) + $0_1 | 0;
    $11_1 = $1944($10_1, 0) >>> 0 < $3 >>> 0;
    $0_1 = $11_1 ? $10_1 + 8 | 0 : $0_1;
    $1_1 = $11_1 ? $1_1 + ($7_1 ^ -1) | 0 : $7_1;
    if ($1_1) {
     continue
    }
    break;
   };
  }
  $1_1 = 0;
  label$9 : {
   if ((($4_1 << 3) + $9 | 0) == ($0_1 | 0)) {
    break label$9
   }
   $1_1 = 0;
   if (($1944($0_1, 0) | 0) != ($3 | 0)) {
    break label$9
   }
   $1_1 = $1944($0_1, 4);
  }
  $0_1 = $1_1;
  __inlined_func$243 : {
   if (!$0_1) {
    break __inlined_func$243
   }
   if ($2_1) {
    if (!($1944($0_1, 176) << 16 >> 24 & $2_1)) {
     break __inlined_func$243
    }
   }
   $1973($0_1, 176, $1944($0_1, 176) & -3585);
   $5_1 = $1963($8, 0);
   label$13 : {
    if ($5_1 > Math_fround(0.0)) {
     $1968($0_1, 164, 0);
     $1986($0_1, 28, Math_fround((Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0) ? ~~$5_1 : -2147483648) | 0));
     break label$13;
    }
    $1968($0_1, 167, 0);
    $1968($0_1, 164, 2);
   }
   $5_1 = $1963($8, 4);
   if ($5_1 > Math_fround(0.0)) {
    $1968($0_1, 165, 0);
    $1986($0_1 + 32 | 0, 0, Math_fround((Math_fround(Math_abs($5_1)) < Math_fround(2147483648.0) ? ~~$5_1 : -2147483648) | 0));
    break __inlined_func$243;
   }
   $1968($0_1, 167, 0);
   $1968($0_1, 165, 2);
  }
  global$0 = $6_1 + 16 | 0;
 }
 
 function $1231($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $5_1 = $1944($1_1, 0);
  if ($5_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($5_1 >>> 0 <= 10) {
     $1968($4_1, 15, $5_1);
     $6_1 = $4_1 + 4 | 0;
     break label$2;
    }
    $7_1 = ($5_1 | 15) + 1 | 0;
    $6_1 = $1783($7_1);
    $1973($4_1, 12, $7_1 | -2147483648);
    $1973($4_1, 4, $6_1);
    $1973($4_1, 8, $5_1);
   }
   if ($5_1) {
    $1602($6_1, $1_1 + 4 | 0, $5_1)
   }
   $1968($5_1 + $6_1 | 0, 0, 0);
   FUNCTION_TABLE[$0_1 | 0]($4_1 + 4 | 0, $2_1, $3);
   if (($1936($4_1, 15) | 0) < 0) {
    $1756($1944($4_1, 4))
   }
   global$0 = $4_1 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1232($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $9 = $1_1;
  $0_1 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = -1;
  while (1) {
   $4_1 = $0_1;
   $0_1 = $0_1 + 1 | 0;
   $3 = $1937($4_1, 0);
   if ($3) {
    label$4 : {
     if (($3 | 0) != 35) {
      break label$4
     }
     if (($1937($0_1, 0) | 0) != 35) {
      break label$4
     }
     $1_1 = ($1937($4_1, 2) | 0) == 35 ? -1 : $1_1;
    }
    $1_1 = $1944((($3 ^ $1_1 & 255) << 2) + 19360 | 0, 0) ^ $1_1 >>> 8;
   }
   if ($3) {
    continue
   }
   break;
  };
  $3 = $1_1 ^ -1;
  $1_1 = $1944(0, 73568);
  $6_1 = $1944($1_1 + 7064 | 0, 0);
  $0_1 = $6_1;
  $4_1 = $1944($1_1, 7056);
  if ($4_1) {
   $1_1 = $4_1;
   while (1) {
    $5_1 = $1_1 >>> 1 | 0;
    $7_1 = ($5_1 << 3) + $0_1 | 0;
    $8 = $1944($7_1, 0) >>> 0 < $3 >>> 0;
    $0_1 = $8 ? $7_1 + 8 | 0 : $0_1;
    $1_1 = $8 ? $1_1 + ($5_1 ^ -1) | 0 : $5_1;
    if ($1_1) {
     continue
    }
    break;
   };
  }
  $1_1 = 0;
  label$9 : {
   if (($0_1 | 0) == (($4_1 << 3) + $6_1 | 0)) {
    break label$9
   }
   $1_1 = 0;
   if (($1944($0_1, 0) | 0) != ($3 | 0)) {
    break label$9
   }
   $1_1 = $1944($0_1, 4);
  }
  $0_1 = $1_1;
  label$11 : {
   if (!$0_1) {
    break label$11
   }
   if ($2_1) {
    if (!($1944($0_1, 176) << 8 >> 24 & $2_1)) {
     break label$11
    }
   }
   $1968($0_1, 141, $9);
   $1973($0_1, 176, $1944($0_1, 176) & -917505);
  }
 }
 
 function $1233($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  __inlined_func$249 : {
   $0_1 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
   if ($0_1) {
    $1_1 = -1;
    while (1) {
     $3 = $0_1;
     $0_1 = $0_1 + 1 | 0;
     $2_1 = $1937($3, 0);
     if ($2_1) {
      label$6 : {
       if (($2_1 | 0) != 35) {
        break label$6
       }
       if (($1937($0_1, 0) | 0) != 35) {
        break label$6
       }
       $1_1 = ($1937($3, 2) | 0) == 35 ? -1 : $1_1;
      }
      $1_1 = $1944((($2_1 ^ $1_1 & 255) << 2) + 19360 | 0, 0) ^ $1_1 >>> 8;
     }
     if ($2_1) {
      continue
     }
     break;
    };
    $2_1 = $1_1 ^ -1;
    $1_1 = $1944(0, 73568);
    $5_1 = $1944($1_1 + 7064 | 0, 0);
    $0_1 = $5_1;
    $3 = $1944($1_1, 7056);
    if ($3) {
     $1_1 = $3;
     while (1) {
      $4_1 = $1_1 >>> 1 | 0;
      $6_1 = ($4_1 << 3) + $0_1 | 0;
      $7_1 = $1944($6_1, 0) >>> 0 < $2_1 >>> 0;
      $0_1 = $7_1 ? $6_1 + 8 | 0 : $0_1;
      $1_1 = $7_1 ? $1_1 + ($4_1 ^ -1) | 0 : $4_1;
      if ($1_1) {
       continue
      }
      break;
     };
    }
    $1_1 = 0;
    label$11 : {
     if (($0_1 | 0) == (($3 << 3) + $5_1 | 0)) {
      break label$11
     }
     $1_1 = 0;
     if (($1944($0_1, 0) | 0) != ($2_1 | 0)) {
      break label$11
     }
     $1_1 = $1944($0_1, 4);
    }
    $0_1 = $1_1;
    if (!$0_1) {
     break __inlined_func$249
    }
    $125($0_1);
    break __inlined_func$249;
   }
   $125(0);
  }
 }
 
 function $1234($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $2_1 + 8 | 0;
  $208($3);
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $3, $2_1 + 4 | 0);
  fimport$4($1944($2_1, 4) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1235($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0), $7_1 = Math_fround(0);
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $5_1 = $1944(0, 73568);
  $3 = $1944($5_1, 7080);
  $7_1 = $1963($3 + 520 | 0, 0);
  $6_1 = $1963($3, 12);
  $4_1 = $2_1 + 8 | 0;
  $1986($4_1, 4, Math_fround($1963($3 + 524 | 0, 0) - $1963($3 + 16 | 0, 0)));
  $1986($4_1, 0, Math_fround($7_1 - $6_1));
  label$1 : {
   if (!$1944($3 + 368 | 0, 0)) {
    if (!$1944($5_1, 8036)) {
     break label$1
    }
   }
   $1986($4_1, 0, Math_fround($1963($3 + 472 | 0, 0) - $6_1));
  }
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $4_1, $2_1 + 4 | 0);
  fimport$4($1944($2_1, 4) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1236($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0);
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $1944($1944(0, 73568), 7080);
  $5_1 = $1963($3 + 16 | 0, 0);
  $6_1 = $1963($3 + 516 | 0, 0);
  $4_1 = $2_1 + 8 | 0;
  $1986($4_1, 0, Math_fround($1963($3, 512) - $1963($3, 12)));
  $1986($4_1, 4, Math_fround($6_1 - $5_1));
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $4_1, $2_1 + 4 | 0);
  fimport$4($1944($2_1, 4) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1237($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0);
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $1944($1944(0, 73568), 7080);
  $5_1 = $1963($3 + 520 | 0, 0);
  $6_1 = $1963($3, 12);
  $4_1 = $2_1 + 8 | 0;
  $1986($4_1, 4, Math_fround($1963($3 + 524 | 0, 0) - $1963($3 + 16 | 0, 0)));
  $1986($4_1, 0, Math_fround($5_1 - $6_1));
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $4_1, $2_1 + 4 | 0);
  fimport$4($1944($2_1, 4) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1238($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = Math_fround($1_1);
  $2_1 = Math_fround($2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1);
 }
 
 function $1239($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0.0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $0_1 = $1944($0_1, 0);
  if (($0_1 | 0) == 2) {
   $0_1 = 0
  } else {
   $2_1 = +fimport$5($0_1 | 0, 50504, $1_1 + 12 | 0);
   fimport$6($1944($1_1, 12) | 0);
   if ($2_1 < 4294967296.0 & $2_1 >= 0.0) {
    $0_1 = ~~$2_1 >>> 0
   } else {
    $0_1 = 0
   }
  }
  $222($0_1);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1240($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $3 + 12 | 0);
  fimport$4($1944($3, 12) | 0);
  global$0 = $3 + 16 | 0;
 }
 
 function $1241($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0.0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $4_1 = fimport$20($1944($1_1, 0) | 0) | 0;
  $5_1 = fimport$2(6425) | 0;
  $6_1 = fimport$8($4_1 | 0, $5_1 | 0) | 0;
  fimport$4($5_1 | 0);
  fimport$4($4_1 | 0);
  label$1 : {
   if ($6_1) {
    $3 = +fimport$5($1944($1_1, 0) | 0, 72736, $2_1 | 0);
    fimport$6($1944($2_1, 0) | 0);
    if ($3 < 4294967296.0 & $3 >= 0.0) {
     $1_1 = ~~$3 >>> 0
    } else {
     $1_1 = 0
    }
    $55($0_1, $1_1);
    break label$1;
   }
   $1983($2_1 + 8 | 0, 0, 0, 0);
   $1983($2_1, 0, 0, 0);
   $56($0_1, $768($1_1, $2_1));
  }
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1243($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = 0.0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $5_1 = fimport$20($1944($1_1, 0) | 0) | 0;
  $6_1 = fimport$2(6425) | 0;
  $7_1 = fimport$8($5_1 | 0, $6_1 | 0) | 0;
  fimport$4($6_1 | 0);
  fimport$4($5_1 | 0);
  label$1 : {
   if ($7_1) {
    $4_1 = +fimport$5($1944($1_1, 0) | 0, 72808, $2_1 + 12 | 0);
    fimport$6($1944($2_1, 12) | 0);
    $3 = Math_fround(3402823466385288598117041.0e14);
    label$3 : {
     if ($4_1 >= 3402823466385288598117041.0e14) {
      break label$3
     }
     $3 = Math_fround(-3402823466385288598117041.0e14);
     if ($4_1 <= -3402823466385288598117041.0e14) {
      break label$3
     }
     $3 = Math_fround($4_1);
    }
    $58($0_1, $3);
    break label$1;
   }
   $1982($2_1, 4, 0, 0);
   $59($0_1, $763($1_1, $2_1 + 4 | 0));
  }
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1245($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, $1944($1944(0, 73568), 6464));
  $1973($0_1, 0, fimport$1(50504, $1_1 + 8 | 0) | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1246($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $2_1 + 8 | 0;
  $260($3);
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $3, $2_1 + 4 | 0);
  fimport$4($1944($2_1, 4) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1247($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 12, $2_1);
  $0_1 = FUNCTION_TABLE[$0_1 | 0]($1_1, $3 + 12 | 0) | 0;
  fimport$4($1944($3, 12) | 0);
  global$0 = $3 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1248($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = Math_fround(0), $3 = 0, $4_1 = 0.0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $4_1 = +fimport$5($1944($1_1, 0) | 0, 72808, $3 + 12 | 0);
  fimport$6($1944($3, 12) | 0);
  $2_1 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($4_1 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $2_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($4_1 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $2_1 = Math_fround($4_1);
  }
  $0_1 = $51($0_1, $2_1);
  global$0 = $3 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1249($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 12, $1_1);
  $0_1 = FUNCTION_TABLE[$0_1 | 0]($2_1 + 12 | 0) | 0;
  fimport$4($1944($2_1, 12) | 0);
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1250($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1983($1_1 + 8 | 0, 0, 0, 0);
  $1983($1_1, 0, 0, 0);
  $0_1 = $52($768($0_1, $1_1));
  global$0 = $1_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1252($0_1) {
  $0_1 = $0_1 | 0;
  return $54($0_1) | 0;
 }
 
 function $1253($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  FUNCTION_TABLE[$0_1 | 0]($2_1 + 12 | 0, $1_1);
  fimport$10($1944($2_1, 12) | 0);
  $0_1 = $1944($2_1, 12);
  fimport$4($0_1 | 0);
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1254($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $53($1_1));
  $1973($0_1, 0, fimport$1(48816, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1255($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1982($1_1, 8, 0, 0);
  $590($763($0_1, $1_1 + 8 | 0));
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1256($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0);
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $1944($1944(0, 73568), 7080);
  $5_1 = $1963($3 + 92 | 0, 0);
  $6_1 = $1963($3 + 16 | 0, 0);
  $7_1 = $1963($3 + 212 | 0, 0);
  $4_1 = $2_1 + 8 | 0;
  $1986($4_1, 0, Math_fround(Math_fround($1963($3, 208) - $1963($3, 12)) + $1963($3, 88)));
  $1986($4_1, 4, Math_fround($5_1 + Math_fround($7_1 - $6_1)));
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $4_1, $2_1 + 4 | 0);
  fimport$4($1944($2_1, 4) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1257($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = Math_fround(0), $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, $5_1 = Math_fround(0);
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1982($4_1, 8, 0, 0);
  $2_1 = $763($0_1, $4_1 + 8 | 0);
  $0_1 = $1944($1944(0, 73568), 7080);
  $1968($0_1, 140, 1);
  $3 = $1963($2_1, 4);
  $1_1 = Math_fround(Math_fround($1963($0_1, 12) - $1963($0_1, 88)) + $1963($2_1, 0));
  $1986($0_1, 208, $1_1);
  $3 = Math_fround($3 + Math_fround($1963($0_1 + 16 | 0, 0) - $1963($0_1 + 92 | 0, 0)));
  $1986($0_1 + 212 | 0, 0, $3);
  $2_1 = $0_1 + 232 | 0;
  $5_1 = $1963($2_1, 0);
  $1986($2_1, 0, $1_1 <= $5_1 ? $5_1 : $1_1);
  $0_1 = $0_1 + 236 | 0;
  $1_1 = $1963($0_1, 0);
  $1986($0_1, 0, $1_1 >= $3 ? $1_1 : $3);
  global$0 = $4_1 + 16 | 0;
 }
 
 function $1258($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0);
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $1944($1944(0, 73568), 7080);
  $5_1 = $1963($3 + 224 | 0, 0);
  $6_1 = $1963($3, 12);
  $4_1 = $2_1 + 8 | 0;
  $1986($4_1, 4, Math_fround($1963($3 + 228 | 0, 0) - $1963($3 + 16 | 0, 0)));
  $1986($4_1, 0, Math_fround($5_1 - $6_1));
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $4_1, $2_1 + 4 | 0);
  fimport$4($1944($2_1, 4) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1259($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $2_1 + 8 | 0;
  $278($3);
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $3, $2_1 + 4 | 0);
  fimport$4($1944($2_1, 4) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1260($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1982($1_1, 8, 0, 0);
  $279($763($0_1, $1_1 + 8 | 0));
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1261($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0.0, $5_1 = 0, $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = fimport$20($1944($0_1, 0) | 0) | 0;
  $3 = fimport$2(6425) | 0;
  $5_1 = fimport$8($2_1 | 0, $3 | 0) | 0;
  fimport$4($3 | 0);
  fimport$4($2_1 | 0);
  label$1 : {
   label$2 : {
    if ($5_1) {
     $4_1 = +fimport$5($1944($0_1, 0) | 0, 72724, $1_1 | 0);
     fimport$6($1944($1_1, 0) | 0);
     $266(Math_abs($4_1) < 2147483648.0 ? ~~$4_1 : -2147483648);
     break label$2;
    }
    $4_1 = +fimport$5($1944($0_1, 0) | 0, 49072, $1_1 + 12 | 0);
    label$6 : {
     if ($4_1 < 4294967296.0 & $4_1 >= 0.0) {
      $3 = ~~$4_1 >>> 0;
      break label$6;
     }
     $3 = 0;
    }
    $2_1 = $1944($3, 0);
    if ($2_1 >>> 0 >= 2147483632) {
     break label$1
    }
    $5_1 = $1944($1_1, 12);
    label$8 : {
     if ($2_1 >>> 0 <= 10) {
      $1968($1_1, 11, $2_1);
      $0_1 = $1_1;
      break label$8;
     }
     $6_1 = ($2_1 | 15) + 1 | 0;
     $0_1 = $1783($6_1);
     $1973($1_1, 8, $6_1 | -2147483648);
     $1973($1_1, 0, $0_1);
     $1973($1_1, 4, $2_1);
    }
    if ($2_1) {
     $1602($0_1, $3 + 4 | 0, $2_1)
    }
    $1968($0_1 + $2_1 | 0, 0, 0);
    fimport$6($5_1 | 0);
    $153((wasm2js_i32$0 = $1944($1_1, 0), wasm2js_i32$1 = $1_1, wasm2js_i32$2 = ($1936($1_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
    if (($1936($1_1, 11) | 0) >= 0) {
     break label$2
    }
    $1756($1944($1_1, 0));
   }
   global$0 = $1_1 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1262($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0.0, $6_1 = 0, $7_1 = 0, $8 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = fimport$20($1944($0_1, 0) | 0) | 0;
  $3 = fimport$2(6425) | 0;
  $4_1 = fimport$8($1_1 | 0, $3 | 0) | 0;
  fimport$4($3 | 0);
  fimport$4($1_1 | 0);
  label$1 : {
   label$2 : {
    if ($4_1) {
     $5_1 = +fimport$5($1944($0_1, 0) | 0, 72724, $2_1 | 0);
     fimport$6($1944($2_1, 0) | 0);
     $4_1 = global$0 - 16 | 0;
     global$0 = $4_1;
     $3 = $1944(0, 73568);
     $1_1 = $1944($3, 7080);
     $8 = Math_abs($5_1) < 2147483648.0 ? ~~$5_1 : -2147483648;
     $1973($4_1, 12, $8);
     $7_1 = 4;
     $0_1 = $4_1 + 12 | 0;
     $6_1 = $1944((($1944($1_1, 196) << 2) + $1944($1_1 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
     while (1) {
      $1_1 = $0_1;
      $0_1 = $1_1 + 1 | 0;
      $1_1 = $1944((($1937($1_1, 0) ^ $6_1 & 255) << 2) + 19360 | 0, 0) ^ $6_1 >>> 8;
      $6_1 = $1_1;
      $7_1 = $7_1 - 1 | 0;
      if ($7_1) {
       continue
      }
      break;
     };
     $0_1 = $1_1 ^ -1;
     if (($1944($3, 7136) | 0) == ($0_1 | 0)) {
      $1973($3, 7140, $0_1)
     }
     if (($1944($3, 7196) | 0) == ($0_1 | 0)) {
      $1968($3, 7200, 1)
     }
     if (($1944($3, 7112) | 0) == ($0_1 | 0)) {
      $75($0_1, 12, $8)
     }
     global$0 = $4_1 + 16 | 0;
     break label$2;
    }
    $5_1 = +fimport$5($1944($0_1, 0) | 0, 49072, $2_1 + 12 | 0);
    label$6 : {
     if ($5_1 < 4294967296.0 & $5_1 >= 0.0) {
      $3 = ~~$5_1 >>> 0;
      break label$6;
     }
     $3 = 0;
    }
    $1_1 = $1944($3, 0);
    if ($1_1 >>> 0 >= 2147483632) {
     break label$1
    }
    $4_1 = $1944($2_1, 12);
    label$8 : {
     if ($1_1 >>> 0 <= 10) {
      $1968($2_1, 11, $1_1);
      $0_1 = $2_1;
      break label$8;
     }
     $6_1 = ($1_1 | 15) + 1 | 0;
     $0_1 = $1783($6_1);
     $1973($2_1, 8, $6_1 | -2147483648);
     $1973($2_1, 0, $0_1);
     $1973($2_1, 4, $1_1);
    }
    if ($1_1) {
     $1602($0_1, $3 + 4 | 0, $1_1)
    }
    $1968($0_1 + $1_1 | 0, 0, 0);
    fimport$6($4_1 | 0);
    $0_1 = $270((wasm2js_i32$0 = $1944($2_1, 0), wasm2js_i32$1 = $2_1, wasm2js_i32$2 = ($1936($2_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
    if (($1936($2_1, 11) | 0) < 0) {
     $1756($1944($2_1, 0))
    }
   }
   global$0 = $2_1 + 16 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1263($0_1) {
  $0_1 = $0_1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $556((wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
 }
 
 function $1264($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 0, (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
  $557(5950, $1_1);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1265($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 12, $1_1);
  $4_1 = $1944($2_1, 0);
  if ($4_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($4_1 >>> 0 <= 10) {
     $1968($3, 11, $4_1);
     $1_1 = $3;
     break label$2;
    }
    $5_1 = ($4_1 | 15) + 1 | 0;
    $1_1 = $1783($5_1);
    $1973($3, 8, $5_1 | -2147483648);
    $1973($3, 0, $1_1);
    $1973($3, 4, $4_1);
   }
   if ($4_1) {
    $1602($1_1, $2_1 + 4 | 0, $4_1)
   }
   $1968($1_1 + $4_1 | 0, 0, 0);
   FUNCTION_TABLE[$0_1 | 0]($3 + 12 | 0, $3);
   if (($1936($3, 11) | 0) < 0) {
    $1756($1944($3, 0))
   }
   fimport$4($1944($3, 12) | 0);
   global$0 = $3 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1266($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = global$0 - 32 | 0;
  global$0 = $2_1;
  $1983($2_1 + 24 | 0, 0, 0, 0);
  $1983($2_1, 16, 0, 0);
  $0_1 = $768($0_1, $2_1 + 16 | 0);
  $1973($2_1, 0, (wasm2js_i32$0 = $1944($1_1, 0), wasm2js_i32$1 = $1_1, wasm2js_i32$2 = ($1936($1_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
  $559($0_1, 5950, $2_1);
  global$0 = $2_1 + 32 | 0;
 }
 
 function $1267($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 0, (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
  $561(5950, $1_1);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1268($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = Math_fround(0), $4_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 0, (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
  $0_1 = global$0 - 16 | 0;
  global$0 = $0_1;
  $1973($0_1, 12, $1_1);
  $3 = $1963($1944($1944(0, 73568), 7080) + 388 | 0, 0);
  if ($3 < Math_fround(0.0)) {
   $232(Math_fround(0.0))
  }
  label$2 : {
   label$3 : {
    if (($1937(5950, 0) | 0) != 37) {
     break label$3
    }
    if (($1937(5950, 1) | 0) != 115) {
     break label$3
    }
    if ($1937(5950, 2)) {
     break label$3
    }
    $555($1944($1_1, 0), 0, 1);
    break label$2;
   }
   $2_1 = $1944(0, 73568);
   $4_1 = $1944($2_1, 7080);
   $1968($4_1, 140, 1);
   if ($1937($4_1, 143)) {
    break label$2
   }
   $2_1 = $2_1 + 12800 | 0;
   $555($2_1, $22($2_1, 5950, $1_1) + $2_1 | 0, 1);
  }
  if ($3 < Math_fround(0.0)) {
   $233()
  }
  global$0 = $0_1 + 16 | 0;
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1269($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  label$1 : {
   $4_1 = $1944($1_1, 0);
   if ($4_1 >>> 0 < 2147483632) {
    label$3 : {
     if ($4_1 >>> 0 <= 10) {
      $1968($3, 31, $4_1);
      $5_1 = $3 + 20 | 0;
      break label$3;
     }
     $6_1 = ($4_1 | 15) + 1 | 0;
     $5_1 = $1783($6_1);
     $1973($3, 28, $6_1 | -2147483648);
     $1973($3, 20, $5_1);
     $1973($3, 24, $4_1);
    }
    if ($4_1) {
     $1602($5_1, $1_1 + 4 | 0, $4_1)
    }
    $1968($4_1 + $5_1 | 0, 0, 0);
    $4_1 = $1944($2_1, 0);
    if ($4_1 >>> 0 >= 2147483632) {
     break label$1
    }
    label$6 : {
     if ($4_1 >>> 0 <= 10) {
      $1968($3, 19, $4_1);
      $1_1 = $3 + 8 | 0;
      break label$6;
     }
     $5_1 = ($4_1 | 15) + 1 | 0;
     $1_1 = $1783($5_1);
     $1973($3, 16, $5_1 | -2147483648);
     $1973($3, 8, $1_1);
     $1973($3, 12, $4_1);
    }
    if ($4_1) {
     $1602($1_1, $2_1 + 4 | 0, $4_1)
    }
    $1968($1_1 + $4_1 | 0, 0, 0);
    FUNCTION_TABLE[$0_1 | 0]($3 + 20 | 0, $3 + 8 | 0);
    if (($1936($3, 19) | 0) < 0) {
     $1756($1944($3, 8))
    }
    if (($1936($3, 31) | 0) < 0) {
     $1756($1944($3, 20))
    }
    global$0 = $3 + 32 | 0;
    return;
   }
   $774();
   wasm2js_trap();
  }
  $774();
  wasm2js_trap();
 }
 
 function $1270($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0), $7_1 = Math_fround(0), $8 = 0, $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = 0, $13 = 0, $14 = Math_fround(0), $15_1 = 0, $16_1 = Math_fround(0), $17_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $2_1 = $1944($0_1, 0);
  $3 = $1936($0_1, 11);
  $1973($4_1, 0, (wasm2js_i32$0 = $1944($1_1, 0), wasm2js_i32$1 = $1_1, wasm2js_i32$2 = ($1936($1_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
  $13 = ($3 | 0) < 0 ? $2_1 : $0_1;
  $8 = global$0 - 16 | 0;
  global$0 = $8;
  $1973($8, 12, $4_1);
  $0_1 = global$0 - 80 | 0;
  global$0 = $0_1;
  $1_1 = $1944(0, 73568);
  $2_1 = $1944($1_1, 7080);
  $1968($2_1, 140, 1);
  label$1 : {
   if ($1937($2_1, 143)) {
    break label$1
   }
   $14 = $292();
   $3 = $1_1 + 12800 | 0;
   $15_1 = $3 + $22($3, 5950, $4_1) | 0;
   $68($0_1 + 72 | 0, $3, $15_1, 0, Math_fround(-1.0));
   $68($0_1 - -64 | 0, $13, 0, 1, Math_fround(-1.0));
   $9 = $1944($2_1, 208);
   $10_1 = $1963($1_1 + 5480 | 0, 0);
   $5_1 = Math_fround($10_1 + $10_1);
   $11_1 = $1963($0_1, 76);
   $2_1 = $1944($2_1 + 212 | 0, 0);
   $16_1 = (wasm2js_scratch_store_i32(2, $2_1), wasm2js_scratch_load_f32());
   $1986($0_1 + 60 | 0, 0, Math_fround(Math_fround($5_1 + $11_1) + $16_1));
   $17_1 = (wasm2js_scratch_store_i32(2, $9), wasm2js_scratch_load_f32());
   $1986($0_1, 56, Math_fround($14 + $17_1));
   $1973($0_1, 52, $2_1);
   $1973($0_1, 48, $9);
   $7_1 = $1963($0_1, 64);
   if ($7_1 > Math_fround(0.0)) {
    $6_1 = Math_fround($7_1 + $1963($1_1 + 5500 | 0, 0))
   }
   $12_1 = $0_1 + 32 | 0;
   $7_1 = $5_1;
   $5_1 = $1963($0_1, 68);
   $1986($12_1 + 12 | 0, 0, Math_fround(Math_fround($7_1 + ($5_1 <= $11_1 ? $11_1 : $5_1)) + $16_1));
   $1973($0_1, 36, $2_1);
   $1973($0_1, 32, $9);
   $1986($0_1, 40, Math_fround(Math_fround($14 + $6_1) + $17_1));
   $277($12_1, $10_1);
   if (!$213($12_1, 0, 0, 0)) {
    break label$1
   }
   $6_1 = $1963($1_1 + 5480 | 0, 0);
   $1986($0_1, 24, Math_fround($1963($0_1, 48) + $1963($1_1, 5476)));
   $1986($0_1, 28, Math_fround($6_1 + $1963($0_1, 52)));
   $1982($0_1, 16, 0, 0);
   $69($0_1 + 24 | 0, $0_1 + 56 | 0, $3, $15_1, $0_1 + 72 | 0, $0_1 + 16 | 0, 0);
   if (!($1963($0_1, 64) > Math_fround(0.0))) {
    break label$1
   }
   $6_1 = $1963($1_1 + 5500 | 0, 0);
   $1986($0_1, 12, Math_fround($1963($0_1, 52) + $1963($1_1, 5480)));
   $1986($0_1, 8, Math_fround($6_1 + $1963($0_1, 56)));
   $1983($0_1, 0, $1959($0_1, 8), i64toi32_i32$HIGH_BITS);
   $63($0_1, $13, 0, 1);
  }
  global$0 = $0_1 + 80 | 0;
  global$0 = $8 + 16 | 0;
  global$0 = $4_1 + 16 | 0;
 }
 
 function $1271($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 0, (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
  $567(5950, $1_1);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1272($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $4_1 = $1944($1_1, 0);
  if ($4_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($4_1 >>> 0 <= 10) {
     $1968($3, 15, $4_1);
     $5_1 = $3 + 4 | 0;
     break label$2;
    }
    $6_1 = ($4_1 | 15) + 1 | 0;
    $5_1 = $1783($6_1);
    $1973($3, 12, $6_1 | -2147483648);
    $1973($3, 4, $5_1);
    $1973($3, 8, $4_1);
   }
   if ($4_1) {
    $1602($5_1, $1_1 + 4 | 0, $4_1)
   }
   $1968($4_1 + $5_1 | 0, 0, 0);
   $1973($3, 0, $2_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($3 + 4 | 0, $3) | 0;
   fimport$4($1944($3, 0) | 0);
   if (($1936($3, 15) | 0) < 0) {
    $1756($1944($3, 4))
   }
   global$0 = $3 + 16 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1273($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $1944($0_1, 0);
  $4_1 = $1936($0_1, 11);
  $1982($2_1, 8, 0, 0);
  $0_1 = $571(($4_1 | 0) < 0 ? $3 : $0_1, $763($1_1, $2_1 + 8 | 0));
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1274($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $1944($1_1, 0);
  if ($3 >>> 0 < 2147483632) {
   label$2 : {
    if ($3 >>> 0 <= 10) {
     $1968($2_1, 15, $3);
     $4_1 = $2_1 + 4 | 0;
     break label$2;
    }
    $5_1 = ($3 | 15) + 1 | 0;
    $4_1 = $1783($5_1);
    $1973($2_1, 12, $5_1 | -2147483648);
    $1973($2_1, 4, $4_1);
    $1973($2_1, 8, $3);
   }
   if ($3) {
    $1602($4_1, $1_1 + 4 | 0, $3)
   }
   $1968($3 + $4_1 | 0, 0, 0);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($2_1 + 4 | 0) | 0;
   if (($1936($2_1, 15) | 0) < 0) {
    $1756($1944($2_1, 4))
   }
   global$0 = $2_1 + 16 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1275($0_1) {
  $0_1 = $0_1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  return $572((wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1)) | 0;
 }
 
 function $1276($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $4_1 = $1944($0_1, 0);
  $5_1 = $1936($0_1, 11);
  $1982($3, 8, 0, 0);
  $0_1 = $573(($5_1 | 0) < 0 ? $4_1 : $0_1, $763($1_1, $3 + 8 | 0), $2_1);
  global$0 = $3 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1277($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $4_1 = $1944($1_1, 0);
  if ($4_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($4_1 >>> 0 <= 10) {
     $1968($3, 15, $4_1);
     $5_1 = $3 + 4 | 0;
     break label$2;
    }
    $6_1 = ($4_1 | 15) + 1 | 0;
    $5_1 = $1783($6_1);
    $1973($3, 12, $6_1 | -2147483648);
    $1973($3, 4, $5_1);
    $1973($3, 8, $4_1);
   }
   if ($4_1) {
    $1602($5_1, $1_1 + 4 | 0, $4_1)
   }
   $1968($4_1 + $5_1 | 0, 0, 0);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($3 + 4 | 0, $2_1) | 0;
   if (($1936($3, 15) | 0) < 0) {
    $1756($1944($3, 4))
   }
   global$0 = $3 + 16 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1278($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = Math_fround(0), $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $3 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $0_1 = global$0 - 16 | 0;
  global$0 = $0_1;
  $2_1 = $296();
  $1986($0_1, 12, $2_1);
  $1986($0_1, 8, $2_1);
  $1983($0_1, 0, $1959($0_1, 8), i64toi32_i32$HIGH_BITS);
  $1_1 = $574($3, $1_1, $0_1, 0);
  global$0 = $0_1 + 16 | 0;
  return $1_1 | 0;
 }
 
 function $1279($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0;
  $7_1 = global$0 - 32 | 0;
  global$0 = $7_1;
  $1973($7_1, 24, $2_1);
  $1973($7_1, 28, $1_1);
  $1973($7_1, 20, $3);
  $1973($7_1, 16, $4_1);
  $1973($7_1, 12, $5_1);
  $1973($7_1, 8, $6_1);
  FUNCTION_TABLE[$0_1 | 0]($7_1 + 28 | 0, $7_1 + 24 | 0, $7_1 + 20 | 0, $7_1 + 16 | 0, $7_1 + 12 | 0, $7_1 + 8 | 0);
  fimport$4($1944($7_1, 8) | 0);
  fimport$4($1944($7_1, 12) | 0);
  fimport$4($1944($7_1, 16) | 0);
  fimport$4($1944($7_1, 20) | 0);
  fimport$4($1944($7_1, 24) | 0);
  fimport$4($1944($7_1, 28) | 0);
  global$0 = $7_1 + 32 | 0;
 }
 
 function $1280($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0.0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = Math_fround(0), $14 = Math_fround(0);
  $6_1 = global$0 + -64 | 0;
  global$0 = $6_1;
  $7_1 = $6_1 + 24 | 0;
  $9 = +fimport$5($1944($0_1, 0) | 0, 72724, $7_1 | 0);
  fimport$6($1944($6_1, 24) | 0);
  $1982($6_1, 56, 0, 0);
  $0_1 = $763($1_1, $6_1 + 56 | 0);
  $1982($6_1, 48, 0, 0);
  $1_1 = $763($2_1, $6_1 + 48 | 0);
  $1982($6_1, 40, 0, 0);
  $2_1 = $763($3, $6_1 + 40 | 0);
  $1983($7_1 + 8 | 0, 0, 0, 0);
  $1983($6_1, 24, 0, 0);
  $3 = $768($4_1, $7_1);
  $1983($6_1 + 16 | 0, 0, 0, 0);
  $1983($6_1, 8, 0, 0);
  $10_1 = Math_abs($9) < 2147483648.0 ? ~~$9 : -2147483648;
  $7_1 = $768($5_1, $6_1 + 8 | 0);
  $4_1 = global$0 - 32 | 0;
  global$0 = $4_1;
  $5_1 = $1944($1944(0, 73568), 7080);
  $1968($5_1, 140, 1);
  label$1 : {
   if ($1937($5_1, 143)) {
    break label$1
   }
   $11_1 = $1959($5_1, 208);
   $12_1 = i64toi32_i32$HIGH_BITS;
   $13 = $1963($0_1, 0);
   $14 = $1963($5_1, 208);
   $8 = $4_1 + 28 | 0;
   $1986($8, 0, Math_fround($1963($5_1 + 212 | 0, 0) + $1963($0_1, 4)));
   $1986($4_1, 24, Math_fround($14 + $13));
   $1983($4_1, 16, $11_1, $12_1);
   if ($1963($7_1, 12) > Math_fround(0.0)) {
    $1986($8, 0, Math_fround($1963($8, 0) + Math_fround(2.0)));
    $1986($4_1, 24, Math_fround($1963($4_1, 24) + Math_fround(2.0)));
   }
   $0_1 = $4_1 + 16 | 0;
   $277($0_1, Math_fround(-1.0));
   if (!$213($0_1, 0, 0, 0)) {
    break label$1
   }
   $0_1 = $4_1 + 24 | 0;
   $8 = $1944($5_1, 580);
   if ($1963($7_1, 12) > Math_fround(0.0)) {
    $400($8, $4_1 + 16 | 0, $0_1, $52($7_1), Math_fround(0.0), 0, Math_fround(1.0));
    $0_1 = $1944($5_1, 580);
    $1986($4_1, 12, Math_fround($1963($4_1, 20) + Math_fround(1.0)));
    $1986($4_1, 8, Math_fround($1963($4_1, 16) + Math_fround(1.0)));
    $1986($4_1, 4, Math_fround($1963($4_1 + 28 | 0, 0) + Math_fround(-1.0)));
    $1986($4_1, 0, Math_fround($1963($4_1, 24) + Math_fround(-1.0)));
    $417($0_1, $10_1, $4_1 + 8 | 0, $4_1, $1_1, $2_1, $52($3));
    break label$1;
   }
   $417($8, $10_1, $4_1 + 16 | 0, $0_1, $1_1, $2_1, $52($3));
  }
  global$0 = $4_1 + 32 | 0;
  global$0 = $6_1 - -64 | 0;
 }
 
 function $1281($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  var $8 = 0;
  $8 = global$0 - 32 | 0;
  global$0 = $8;
  $1973($8, 24, $2_1);
  $1973($8, 28, $1_1);
  $1973($8, 20, $3);
  $1973($8, 16, $4_1);
  $1973($8, 12, $6_1);
  $1973($8, 8, $7_1);
  $0_1 = FUNCTION_TABLE[$0_1 | 0]($8 + 28 | 0, $8 + 24 | 0, $8 + 20 | 0, $8 + 16 | 0, $5_1, $8 + 12 | 0, $8 + 8 | 0) | 0;
  fimport$4($1944($8, 8) | 0);
  fimport$4($1944($8, 12) | 0);
  fimport$4($1944($8, 16) | 0);
  fimport$4($1944($8, 20) | 0);
  fimport$4($1944($8, 24) | 0);
  fimport$4($1944($8, 28) | 0);
  global$0 = $8 + 32 | 0;
  return $0_1 | 0;
 }
 
 function $1282($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0), $11_1 = 0, $12_1 = Math_fround(0), $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0.0, $19 = 0, $20_1 = 0, $21_1 = Math_fround(0), $22_1 = 0, $23_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $9 = global$0 + -64 | 0;
  global$0 = $9;
  $15_1 = $9 + 24 | 0;
  $18_1 = +fimport$5($1944($0_1, 0) | 0, 72724, $15_1 | 0);
  fimport$6($1944($9, 24) | 0);
  $1982($9, 56, 0, 0);
  $16_1 = $763($1_1, $9 + 56 | 0);
  $1982($9, 48, 0, 0);
  $1_1 = $763($2_1, $9 + 48 | 0);
  $1982($9, 40, 0, 0);
  $0_1 = $763($3, $9 + 40 | 0);
  $1983($15_1 + 8 | 0, 0, 0, 0);
  $1983($9, 24, 0, 0);
  $2_1 = $768($5_1, $15_1);
  $1983($9 + 16 | 0, 0, 0, 0);
  $1983($9, 8, 0, 0);
  $19 = Math_abs($18_1) < 2147483648.0 ? ~~$18_1 : -2147483648;
  $3 = $2_1;
  $22_1 = $768($6_1, $9 + 8 | 0);
  $2_1 = 0;
  $14 = global$0 - 16 | 0;
  global$0 = $14;
  $6_1 = $1944(0, 73568);
  $5_1 = $1944($6_1, 7080);
  if (!$1937($5_1, 143)) {
   $265($19);
   $17_1 = $76($5_1, 11582);
   $269();
   label$2 : {
    if (($4_1 | 0) >= 0) {
     $8 = Math_fround($4_1 | 0);
     $1986($14, 12, $8);
     $1986($14, 8, $8);
     break label$2;
    }
    $1983($14, 8, $1959($6_1 + 5476 | 0, 0), i64toi32_i32$HIGH_BITS);
   }
   $7_1 = global$0 - 80 | 0;
   global$0 = $7_1;
   $20_1 = $1944(0, 73568);
   $13 = $1944($20_1, 7080);
   $1968($13, 140, 1);
   if (!$1937($13, 143)) {
    $11_1 = $14 + 8 | 0;
    $21_1 = $1963($11_1, 0);
    $12_1 = $1963($16_1, 0);
    $10_1 = $1963($13, 208);
    $5_1 = $1959($13, 208);
    $4_1 = i64toi32_i32$HIGH_BITS;
    $23_1 = Math_fround($1963($13 + 212 | 0, 0) + $1963($16_1, 4));
    $8 = $1963($11_1, 4);
    $1986($7_1 + 76 | 0, 0, Math_fround($23_1 + Math_fround($8 + $8)));
    $1983($7_1, 64, $5_1, $4_1);
    $1986($7_1, 72, Math_fround(Math_fround($10_1 + $12_1) + Math_fround($21_1 + $21_1)));
    $4_1 = $7_1 - -64 | 0;
    $277($4_1, Math_fround(-1.0));
    if ($213($4_1, $17_1, 0, 0)) {
     $4_1 = $7_1 - -64 | 0;
     $2_1 = $569($4_1, $17_1, $7_1 + 63 | 0, $7_1 + 62 | 0, 0);
     $15_1 = $51((wasm2js_i32$0 = $1937($7_1, 62) ? 23 : 22, wasm2js_i32$1 = 21, wasm2js_i32$2 = $1937($7_1, 63), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), Math_fround(1.0));
     $73($4_1, $17_1, 1);
     $16_1 = $1960($7_1, 64);
     $6_1 = i64toi32_i32$HIGH_BITS;
     $1983($7_1, 48, $16_1, $6_1);
     $5_1 = $1960($7_1, 72);
     $4_1 = i64toi32_i32$HIGH_BITS;
     $1983($7_1, 40, $5_1, $4_1);
     $12_1 = $1963($20_1 + 5484 | 0, 0);
     $10_1 = $1963($11_1, 0);
     $8 = $1963($11_1, 4);
     $1983($7_1, 8, $5_1, $4_1);
     $1983($7_1, 16, $16_1, $6_1);
     $8 = $8 > $10_1 ? $10_1 : $8;
     $71($7_1 + 16 | 0, $7_1 + 8 | 0, $15_1, 1, $8 < Math_fround(0.0) ? Math_fround(0.0) : $8 > $12_1 ? $12_1 : $8);
     if ($1963($3, 12) > Math_fround(0.0)) {
      $4_1 = $1944($13, 580);
      $10_1 = $1963($11_1, 0);
      $12_1 = $1963($7_1, 68);
      $8 = $1963($11_1, 4);
      $1986($7_1, 36, Math_fround($12_1 + $8));
      $1986($7_1, 32, Math_fround($10_1 + $1963($7_1, 64)));
      $1986($7_1, 28, Math_fround($1963($7_1 + 76 | 0, 0) - $8));
      $1986($7_1, 24, Math_fround($1963($7_1, 72) - $10_1));
      $401($4_1, $7_1 + 32 | 0, $7_1 + 24 | 0, $52($3), Math_fround(0.0), 0);
     }
     $3 = $1944($13, 580);
     $10_1 = $1963($11_1, 0);
     $12_1 = $1963($7_1, 68);
     $8 = $1963($11_1, 4);
     $1986($7_1, 36, Math_fround($12_1 + $8));
     $1986($7_1, 32, Math_fround($10_1 + $1963($7_1, 64)));
     $1986($7_1, 28, Math_fround($1963($7_1 + 76 | 0, 0) - $8));
     $1986($7_1, 24, Math_fround($1963($7_1, 72) - $10_1));
     $417($3, $19, $7_1 + 32 | 0, $7_1 + 24 | 0, $1_1, $0_1, $52($22_1));
    }
   }
   global$0 = $7_1 + 80 | 0;
  }
  global$0 = $14 + 16 | 0;
  global$0 = $9 - -64 | 0;
  return $2_1 | 0;
 }
 
 function $1283($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0.0;
  $2_1 = global$0 - 32 | 0;
  global$0 = $2_1;
  $3 = $1944($0_1, 0);
  $6_1 = $1936($0_1, 11);
  $1973($2_1, 12, 53076);
  $1973($2_1, 20, $1_1);
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 24, 0);
  $4_1 = $2_1 + 24 | 0;
  $5_1 = fimport$1(72760, $4_1 | 0) | 0;
  $1_1 = fimport$7($1_1 | 0, $5_1 | 0) | 0;
  fimport$4($5_1 | 0);
  $7_1 = +fimport$5($1_1 | 0, 72652, $4_1 | 0);
  fimport$6($1944($2_1, 24) | 0);
  $1968($2_1, 16, $7_1 != 0.0);
  fimport$4($1_1 | 0);
  $1_1 = $583(($6_1 | 0) < 0 ? $3 : $0_1, $2_1 + 16 | 0);
  $1973($2_1, 12, 53076);
  $3 = $1944($2_1, 20);
  $1973($2_1, 24, $1937($2_1, 16));
  $0_1 = fimport$1(72652, $4_1 | 0) | 0;
  $3 = $1944($3, 0);
  $1973($2_1, 24, 0);
  $4_1 = $3;
  $3 = fimport$1(72760, $2_1 + 24 | 0) | 0;
  fimport$3($4_1 | 0, $3 | 0, $0_1 | 0);
  fimport$4($3 | 0);
  fimport$4($0_1 | 0);
  global$0 = $2_1 + 32 | 0;
  return $1_1 | 0;
 }
 
 function $1285($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0.0, $8 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $5_1 = $1944($0_1, 0);
  $4_1 = $1936($0_1, 11);
  $1973($3, 12, 53160);
  $1973($3, 20, $1_1);
  $1_1 = $1944($1_1, 0);
  $1973($3, 24, 0);
  $6_1 = $3 + 24 | 0;
  $8 = fimport$1(72760, $6_1 | 0) | 0;
  $1_1 = fimport$7($1_1 | 0, $8 | 0) | 0;
  fimport$4($8 | 0);
  $7_1 = +fimport$5($1_1 | 0, 72736, $6_1 | 0);
  fimport$6($1944($3, 24) | 0);
  $1973($3, 16, $7_1 < 4294967296.0 & $7_1 >= 0.0 ? ~~$7_1 >>> 0 : 0);
  fimport$4($1_1 | 0);
  $5_1 = ($4_1 | 0) < 0 ? $5_1 : $0_1;
  $0_1 = global$0 - 16 | 0;
  global$0 = $0_1;
  $1_1 = $3 + 16 | 0;
  $4_1 = $1944($1_1, 0) & $2_1;
  $6_1 = ($4_1 | 0) == ($2_1 | 0);
  $1968($0_1, 15, $6_1);
  label$1 : {
   if (!(!$4_1 | $6_1)) {
    $4_1 = $1944(0, 73568);
    $6_1 = $1944($4_1, 7216);
    $1973($4_1, 7216, $6_1 | 64);
    $5_1 = $583($5_1, $0_1 + 15 | 0);
    $1973($4_1, 7216, $6_1);
    break label$1;
   }
   $5_1 = $583($5_1, $0_1 + 15 | 0);
  }
  if ($5_1) {
   label$4 : {
    if ($1937($0_1, 15)) {
     $2_1 = $1944($1_1, 0) | $2_1;
     break label$4;
    }
    $2_1 = $1944($1_1, 0) & ($2_1 ^ -1);
   }
   $1973($1_1, 0, $2_1);
  }
  global$0 = $0_1 + 16 | 0;
  $1973($3, 12, 53160);
  $1_1 = $1944($3, 20);
  $1973($3, 24, $1944($3, 16));
  $2_1 = $3 + 24 | 0;
  $0_1 = fimport$1(72736, $2_1 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($3, 24, 0);
  $4_1 = $1_1;
  $1_1 = fimport$1(72760, $2_1 | 0) | 0;
  fimport$3($4_1 | 0, $1_1 | 0, $0_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $3 + 32 | 0;
  return $5_1 | 0;
 }
 
 function $1287($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  return $585((wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $1_1) | 0;
 }
 
 function $1288($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0.0, $8 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $4_1 = $1944($0_1, 0);
  $8 = $1936($0_1, 11);
  $1973($3, 12, 53228);
  $1973($3, 20, $1_1);
  $1_1 = $1944($1_1, 0);
  $1973($3, 24, 0);
  $5_1 = $3 + 24 | 0;
  $6_1 = fimport$1(72760, $5_1 | 0) | 0;
  $1_1 = fimport$7($1_1 | 0, $6_1 | 0) | 0;
  fimport$4($6_1 | 0);
  $7_1 = +fimport$5($1_1 | 0, 72724, $5_1 | 0);
  fimport$6($1944($3, 24) | 0);
  $1973($3, 16, Math_abs($7_1) < 2147483648.0 ? ~~$7_1 : -2147483648);
  fimport$4($1_1 | 0);
  $1_1 = ($8 | 0) < 0 ? $4_1 : $0_1;
  $0_1 = $3 + 16 | 0;
  $1_1 = $585($1_1, ($1944($0_1, 0) | 0) == ($2_1 | 0));
  if ($1_1) {
   $1973($0_1, 0, $2_1)
  }
  $1973($3, 12, 53228);
  $2_1 = $1944($3, 20);
  $1973($3, 24, $1944($3, 16));
  $4_1 = $3 + 24 | 0;
  $0_1 = fimport$1(72724, $4_1 | 0) | 0;
  $2_1 = $1944($2_1, 0);
  $1973($3, 24, 0);
  $5_1 = $2_1;
  $2_1 = fimport$1(72760, $4_1 | 0) | 0;
  fimport$3($5_1 | 0, $2_1 | 0, $0_1 | 0);
  fimport$4($2_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $3 + 32 | 0;
  return $1_1 | 0;
 }
 
 function $1289($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = Math_fround($1_1);
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1973($4_1, 8, $3);
  $1973($4_1, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $4_1 + 12 | 0, $4_1 + 8 | 0);
  fimport$4($1944($4_1, 8) | 0);
  fimport$4($1944($4_1, 12) | 0);
  global$0 = $4_1 + 16 | 0;
 }
 
 function $1290($0_1, $1_1, $2_1) {
  $0_1 = Math_fround($0_1);
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = 0, $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = 0, $15_1 = Math_fround(0), $16_1 = 0, $17_1 = Math_fround(0), $18_1 = 0, $19 = 0, $20_1 = Math_fround(0), $21_1 = Math_fround(0), $22_1 = Math_fround(0), $23_1 = Math_fround(0), $24 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $14 = global$0 - 32 | 0;
  global$0 = $14;
  $1982($14, 24, 0, 0);
  $1_1 = $763($1_1, $14 + 24 | 0);
  $1973($14 + 16 | 0, 0, 0);
  $1982($14, 8, 0, 0);
  $1973($14, 4, 53464);
  $1973($14, 20, $2_1);
  if (($1944($2_1, 0) | 0) != 2) {
   $1506($14 + 4 | 0)
  }
  $1973($14, 4, 53312);
  $19 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($14, 8), wasm2js_i32$4 = $14 + 8 | 0, wasm2js_i32$5 = ($1936($14, 19) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($14, 20), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $2_1 = global$0 - 144 | 0;
  global$0 = $2_1;
  $18_1 = $1944(0, 73568);
  $6_1 = $1944($18_1, 7080);
  $1968($6_1, 140, 1);
  label$1 : {
   if ($1937($6_1, 143)) {
    break label$1
   }
   $3 = $1944($6_1 + 212 | 0, 0);
   $16_1 = $1944($6_1, 208);
   $1983($2_1, 128, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
   $13 = $292();
   $4_1 = $18_1 + 5480 | 0;
   $10_1 = $1963($4_1, 0);
   $12_1 = $1963($18_1, 6468);
   $1983($2_1, 32, $1960($2_1, 128), i64toi32_i32$HIGH_BITS);
   $5_1 = $2_1 + 136 | 0;
   $293($5_1, $2_1 + 32 | 0, $13, Math_fround($12_1 + Math_fround($10_1 + $10_1)));
   $1_1 = $2_1 + 124 | 0;
   $1986($1_1, 0, Math_fround($1963($2_1, 140) + (wasm2js_scratch_store_i32(2, $3), wasm2js_scratch_load_f32())));
   $1973($2_1, 116, $3);
   $1973($2_1, 112, $16_1);
   $1986($2_1, 120, Math_fround($1963($2_1, 136) + (wasm2js_scratch_store_i32(2, $16_1), wasm2js_scratch_load_f32())));
   $212($5_1, $1963($4_1, 0));
   if (!$213($2_1 + 112 | 0, 0, 0, 0)) {
    break label$1
   }
   $1983($2_1, 104, $1960($2_1, 112), i64toi32_i32$HIGH_BITS);
   $1983($2_1, 96, $1960($2_1, 120), i64toi32_i32$HIGH_BITS);
   $3 = $51(7, Math_fround(1.0));
   $4_1 = $18_1 + 5484 | 0;
   $10_1 = $1963($4_1, 0);
   $1983($2_1, 24, $1960($2_1, 104), i64toi32_i32$HIGH_BITS);
   $1983($2_1, 16, $1960($2_1, 96), i64toi32_i32$HIGH_BITS);
   $71($2_1 + 24 | 0, $2_1 + 16 | 0, $3, 1, $10_1);
   $7_1 = $1963($1_1, 0);
   $10_1 = $1963($18_1 + 5488 | 0, 0);
   $1986($1_1, 0, Math_fround($7_1 - $10_1));
   $1986($2_1, 116, Math_fround($10_1 + $1963($2_1, 116)));
   $21_1 = Math_fround($10_1 + $1963($2_1, 112));
   $1986($2_1, 112, $21_1);
   $23_1 = Math_fround($1963($2_1, 120) - $10_1);
   $1986($2_1, 120, $23_1);
   $1_1 = $1944($6_1, 580);
   $3 = $2_1 + 112 | 0;
   $16_1 = $51(40, Math_fround(1.0));
   $7_1 = $1963($4_1, 0);
   $6_1 = global$0 - 16 | 0;
   global$0 = $6_1;
   $22_1 = $0_1 < Math_fround(0.0) ? Math_fround(0.0) : $0_1 > Math_fround(1.0) ? Math_fround(1.0) : $0_1;
   $0_1 = $22_1;
   label$10 : {
    if ($0_1 == Math_fround(0.0)) {
     break label$10
    }
    $15_1 = $1963($3, 8);
    $8 = $1963($3, 0);
    $9 = Math_fround($15_1 - $8);
    $4_1 = $0_1 < Math_fround(0.0);
    $12_1 = Math_fround(Math_fround($9 * ($4_1 ? Math_fround(0.0) : $0_1)) + $8);
    $15_1 = Math_fround(Math_fround($9 * ($4_1 ? $0_1 : Math_fround(0.0))) + $8);
    $10_1 = $1963($3 + 12 | 0, 0);
    $13 = $1963($3, 4);
    if ($7_1 == Math_fround(0.0)) {
     if ($16_1 >>> 0 < 16777216) {
      break label$10
     }
     $383($1_1, 6, 4);
     $4_1 = $1959($1944($1_1, 44), 0);
     $5_1 = i64toi32_i32$HIGH_BITS;
     $3 = $1944($1_1, 56);
     $11_1 = $1941($1_1, 40);
     $1970($3, 10, $11_1 + 3 | 0);
     $24 = $11_1 + 2 | 0;
     $1970($3, 8, $24);
     $1970($3, 6, $11_1);
     $1970($3, 4, $24);
     $1970($3, 2, $11_1 + 1 | 0);
     $1970($3, 0, $11_1);
     $3 = $1944($1_1, 52);
     $1986($3, 4, $13);
     $1986($3, 0, $15_1);
     $1982($1944($1_1, 52), 8, $4_1, $5_1);
     $3 = $1944($1_1, 52);
     $1986($3, 20, $12_1);
     $1973($3, 16, $16_1);
     $1986($3 + 24 | 0, 0, $13);
     $1982($1944($1_1, 52) + 28 | 0, 0, $4_1, $5_1);
     $3 = $1944($1_1, 52);
     $1986($3, 40, $12_1);
     $1986($3 + 44 | 0, 0, $10_1);
     $1973($3 + 36 | 0, 0, $16_1);
     $1982($1944($1_1, 52) + 48 | 0, 0, $4_1, $5_1);
     $3 = $1944($1_1, 52);
     $1986($3, 60, $15_1);
     $1986($3 - -64 | 0, 0, $10_1);
     $1973($3 + 56 | 0, 0, $16_1);
     $1982($1944($1_1, 52) + 68 | 0, 0, $4_1, $5_1);
     $3 = $1944($1_1, 52);
     $1973($3 + 76 | 0, 0, $16_1);
     $1973($1_1, 52, $3 + 80 | 0);
     $1973($1_1, 40, $1944($1_1, 40) + 4 | 0);
     $1973($1_1, 56, $1944($1_1, 56) + 12 | 0);
     break label$10;
    }
    $0_1 = Math_fround($9 * Math_fround(.5));
    $9 = Math_fround(Math_fround($10_1 - $13) * Math_fround(.5));
    $0_1 = Math_fround(($0_1 < $9 ? $0_1 : $9) + Math_fround(-1.0));
    $0_1 = $0_1 < Math_fround(0.0) ? Math_fround(0.0) : $0_1 > $7_1 ? $7_1 : $0_1;
    $20_1 = Math_fround(Math_fround(1.0) / $0_1);
    $7_1 = Math_fround(Math_fround(1.0) - Math_fround(Math_fround($15_1 - $8) * $20_1));
    $9 = Math_fround(1.5707963705062866);
    label$3 : {
     if ($7_1 <= Math_fround(0.0)) {
      break label$3
     }
     $9 = Math_fround(0.0);
     if ($7_1 >= Math_fround(1.0)) {
      break label$3
     }
     $9 = $1590($7_1);
    }
    $7_1 = Math_fround($8 + $0_1);
    $7_1 = $7_1 <= $15_1 ? $15_1 : $7_1;
    $8 = Math_fround(Math_fround(1.0) - Math_fround(Math_fround($12_1 - $8) * $20_1));
    $17_1 = Math_fround(1.5707963705062866);
    label$4 : {
     if ($8 <= Math_fround(0.0)) {
      break label$4
     }
     $17_1 = Math_fround(0.0);
     if ($8 >= Math_fround(1.0)) {
      break label$4
     }
     $17_1 = $1590($8);
    }
    $8 = $17_1;
    label$5 : {
     if ($8 == $9) {
      $5_1 = $1944($1_1, 84);
      $4_1 = $1944($1_1 + 88 | 0, 0);
      label$7 : {
       if (($5_1 | 0) != ($4_1 | 0)) {
        break label$7
       }
       $11_1 = $4_1 ? $4_1 + (($4_1 | 0) / 2 | 0) | 0 : 8;
       $5_1 = $5_1 + 1 | 0;
       $5_1 = ($5_1 | 0) < ($11_1 | 0) ? $11_1 : $5_1;
       if (($4_1 | 0) >= ($5_1 | 0)) {
        break label$7
       }
       $4_1 = $16($5_1 << 3);
       $11_1 = $1944($1_1 + 92 | 0, 0);
       if ($11_1) {
        $1602($4_1, $11_1, $1944($1_1, 84) << 3);
        $17($1944($1_1, 92));
       }
       $1973($1_1, 88, $5_1);
       $1973($1_1, 92, $4_1);
      }
      $4_1 = $1944($1_1 + 92 | 0, 0) + ($1944($1_1, 84) << 3) | 0;
      $1986($4_1, 4, $10_1);
      $1986($4_1, 0, $7_1);
      $5_1 = $1944($1_1, 84);
      $11_1 = $5_1 + 1 | 0;
      $1973($1_1, 84, $11_1);
      $4_1 = $1944($1_1, 88);
      label$11 : {
       if (($11_1 | 0) != ($4_1 | 0)) {
        break label$11
       }
       $11_1 = $4_1 ? $4_1 + (($4_1 | 0) / 2 | 0) | 0 : 8;
       $5_1 = $5_1 + 2 | 0;
       $5_1 = ($5_1 | 0) < ($11_1 | 0) ? $11_1 : $5_1;
       if (($4_1 | 0) >= ($5_1 | 0)) {
        break label$11
       }
       $4_1 = $16($5_1 << 3);
       $11_1 = $1944($1_1, 92);
       if ($11_1) {
        $1602($4_1, $11_1, $1944($1_1, 84) << 3);
        $17($1944($1_1, 92));
       }
       $1973($1_1, 88, $5_1);
       $1973($1_1, 92, $4_1);
      }
      $4_1 = $1944($1_1, 92) + ($1944($1_1, 84) << 3) | 0;
      $1986($4_1, 4, $13);
      $1986($4_1, 0, $7_1);
      $1973($1_1, 84, $1944($1_1, 84) + 1 | 0);
      break label$5;
     }
     $17_1 = Math_fround($10_1 - $0_1);
     if (!($9 != Math_fround(0.0) | $8 != Math_fround(1.5707963705062866))) {
      $1986($6_1, 12, $17_1);
      $1986($6_1, 8, $7_1);
      $4_1 = $6_1 + 8 | 0;
      $392($1_1, $4_1, $0_1, 3, 6);
      $1986($6_1, 12, Math_fround($13 + $0_1));
      $1986($6_1, 8, $7_1);
      $392($1_1, $4_1, $0_1, 6, 9);
      break label$5;
     }
     $1986($6_1, 12, $17_1);
     $1986($6_1, 8, $7_1);
     $4_1 = $6_1 + 8 | 0;
     $393($1_1, $4_1, $0_1, Math_fround(Math_fround(3.1415927410125732) - $8), Math_fround(Math_fround(3.1415927410125732) - $9), 3);
     $1986($6_1, 12, Math_fround($13 + $0_1));
     $1986($6_1, 8, $7_1);
     $393($1_1, $4_1, $0_1, Math_fround($9 + Math_fround(3.1415927410125732)), Math_fround($8 + Math_fround(3.1415927410125732)), 3);
    }
    label$16 : {
     if (!($12_1 > Math_fround($0_1 + $1963($3, 0)))) {
      break label$16
     }
     $8 = $1963($3, 8);
     $7_1 = Math_fround(Math_fround(1.0) - Math_fround(Math_fround($8 - $12_1) * $20_1));
     $9 = Math_fround(1.5707963705062866);
     label$17 : {
      if ($7_1 <= Math_fround(0.0)) {
       break label$17
      }
      $9 = Math_fround(0.0);
      if ($7_1 >= Math_fround(1.0)) {
       break label$17
      }
      $9 = $1590($7_1);
     }
     $7_1 = $9;
     $9 = Math_fround($8 - $0_1);
     $12_1 = $12_1 < $9 ? $12_1 : $9;
     $15_1 = Math_fround(Math_fround(1.0) - Math_fround(Math_fround($8 - $15_1) * $20_1));
     $8 = Math_fround(1.5707963705062866);
     label$18 : {
      if ($15_1 <= Math_fround(0.0)) {
       break label$18
      }
      $8 = Math_fround(0.0);
      if ($15_1 >= Math_fround(1.0)) {
       break label$18
      }
      $8 = $1590($15_1);
     }
     $15_1 = $8;
     if ($15_1 == $7_1) {
      $4_1 = $1944($1_1, 84);
      $3 = $1944($1_1 + 88 | 0, 0);
      label$20 : {
       if (($4_1 | 0) != ($3 | 0)) {
        break label$20
       }
       $5_1 = $3 ? $3 + (($3 | 0) / 2 | 0) | 0 : 8;
       $4_1 = $4_1 + 1 | 0;
       $4_1 = ($4_1 | 0) < ($5_1 | 0) ? $5_1 : $4_1;
       if (($3 | 0) >= ($4_1 | 0)) {
        break label$20
       }
       $3 = $16($4_1 << 3);
       $5_1 = $1944($1_1 + 92 | 0, 0);
       if ($5_1) {
        $1602($3, $5_1, $1944($1_1, 84) << 3);
        $17($1944($1_1, 92));
       }
       $1973($1_1, 88, $4_1);
       $1973($1_1, 92, $3);
      }
      $3 = $1944($1_1 + 92 | 0, 0) + ($1944($1_1, 84) << 3) | 0;
      $1986($3, 4, $13);
      $1986($3, 0, $12_1);
      $4_1 = $1944($1_1, 84);
      $5_1 = $4_1 + 1 | 0;
      $1973($1_1, 84, $5_1);
      $3 = $1944($1_1, 88);
      label$24 : {
       if (($5_1 | 0) != ($3 | 0)) {
        break label$24
       }
       $5_1 = $3 ? $3 + (($3 | 0) / 2 | 0) | 0 : 8;
       $4_1 = $4_1 + 2 | 0;
       $4_1 = ($4_1 | 0) < ($5_1 | 0) ? $5_1 : $4_1;
       if (($3 | 0) >= ($4_1 | 0)) {
        break label$24
       }
       $3 = $16($4_1 << 3);
       $5_1 = $1944($1_1, 92);
       if ($5_1) {
        $1602($3, $5_1, $1944($1_1, 84) << 3);
        $17($1944($1_1, 92));
       }
       $1973($1_1, 88, $4_1);
       $1973($1_1, 92, $3);
      }
      $3 = $1944($1_1, 92) + ($1944($1_1, 84) << 3) | 0;
      $1986($3, 4, $10_1);
      $1986($3, 0, $12_1);
      $1973($1_1, 84, $1944($1_1, 84) + 1 | 0);
      break label$16;
     }
     $13 = Math_fround($13 + $0_1);
     if (!($7_1 != Math_fround(0.0) | $15_1 != Math_fround(1.5707963705062866))) {
      $1986($6_1, 12, $13);
      $1986($6_1, 8, $12_1);
      $3 = $6_1 + 8 | 0;
      $392($1_1, $3, $0_1, 9, 12);
      $1986($6_1, 12, Math_fround($10_1 - $0_1));
      $1986($6_1, 8, $12_1);
      $392($1_1, $3, $0_1, 0, 3);
      break label$16;
     }
     $1986($6_1, 12, $13);
     $1986($6_1, 8, $12_1);
     $3 = $6_1 + 8 | 0;
     $393($1_1, $3, $0_1, Math_fround(-$15_1), Math_fround(-$7_1), 3);
     $1986($6_1, 12, Math_fround($10_1 - $0_1));
     $1986($6_1, 8, $12_1);
     $393($1_1, $3, $0_1, $7_1, $15_1, 3);
    }
    $389($1_1, $1944($1_1 + 92 | 0, 0), $1944($1_1, 84), $16_1);
    $1973($1_1, 84, 0);
   }
   global$0 = $6_1 + 16 | 0;
   if (!$19) {
    $1990($2_1, 0, +Math_fround(Math_fround($22_1 * Math_fround(100.0)) + Math_fround(.009999999776482582)));
    $19 = $2_1 - -64 | 0;
    $21($19, 32, 18913, $2_1);
   }
   $68($2_1 + 56 | 0, $19, 0, 0, Math_fround(-1.0));
   $0_1 = $1963($2_1, 56);
   if (!($0_1 > Math_fround(0.0))) {
    break label$1
   }
   $10_1 = $1963($18_1 + 5492 | 0, 0);
   $13 = $1963($18_1 + 5500 | 0, 0);
   $1986($2_1, 52, $1963($2_1, 116));
   $12_1 = $1963($2_1, 112);
   $13 = Math_fround(Math_fround($1963($2_1, 120) - $0_1) - $13);
   $0_1 = Math_fround($10_1 + Math_fround(Math_fround(Math_fround($23_1 - $21_1) * $22_1) + $21_1));
   $1986($2_1, 48, $0_1 < $12_1 ? $12_1 : $0_1 > $13 ? $13 : $0_1);
   $1982($2_1, 40, 0, 1056964608);
   $69($2_1 + 48 | 0, $2_1 + 120 | 0, $19, 0, $2_1 + 56 | 0, $2_1 + 40 | 0, $2_1 + 112 | 0);
  }
  global$0 = $2_1 + 144 | 0;
  $1973($14, 4, 53464);
  if (($1936($14, 19) | 0) < 0) {
   $1756($1944($14, 8))
  }
  global$0 = $14 + 32 | 0;
 }
 
 function $1291($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $4_1 = $1944($0_1, 0);
  $5_1 = $1936($0_1, 11);
  $1973($3 + 24 | 0, 0, 0);
  $1982($3, 16, 0, 0);
  $1973($3, 12, 53464);
  $1973($3, 28, $1_1);
  if (($1944($1_1, 0) | 0) != 2) {
   $1506($3 + 12 | 0)
  }
  $1973($3, 12, 53312);
  $0_1 = $597(($5_1 | 0) < 0 ? $4_1 : $0_1, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($3, 16), wasm2js_i32$4 = $3 + 16 | 0, wasm2js_i32$5 = ($1936($3, 27) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($3, 28), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $2_1);
  $1973($3, 12, 53464);
  if (($1936($3, 27) | 0) < 0) {
   $1756($1944($3, 16))
  }
  global$0 = $3 + 32 | 0;
  return $0_1 | 0;
 }
 
 function $1292($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0;
  $7_1 = global$0 - 32 | 0;
  global$0 = $7_1;
  $8 = $1944($1_1, 0);
  if ($8 >>> 0 < 2147483632) {
   label$2 : {
    if ($8 >>> 0 <= 10) {
     $1968($7_1, 31, $8);
     $9 = $7_1 + 20 | 0;
     break label$2;
    }
    $10_1 = ($8 | 15) + 1 | 0;
    $9 = $1783($10_1);
    $1973($7_1, 28, $10_1 | -2147483648);
    $1973($7_1, 20, $9);
    $1973($7_1, 24, $8);
   }
   if ($8) {
    $1602($9, $1_1 + 4 | 0, $8)
   }
   $1968($8 + $9 | 0, 0, 0);
   $1973($7_1, 12, $3);
   $1973($7_1, 16, $2_1);
   $1973($7_1, 8, $4_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($7_1 + 20 | 0, $7_1 + 16 | 0, $7_1 + 12 | 0, $7_1 + 8 | 0, $5_1, $6_1) | 0;
   fimport$4($1944($7_1, 8) | 0);
   fimport$4($1944($7_1, 12) | 0);
   fimport$4($1944($7_1, 16) | 0);
   if (($1936($7_1, 31) | 0) < 0) {
    $1756($1944($7_1, 20))
   }
   global$0 = $7_1 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1293($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = Math_fround(0), $9 = 0, $10_1 = 0.0, $11_1 = Math_fround(0), $12_1 = Math_fround(0);
  $6_1 = global$0 - 32 | 0;
  global$0 = $6_1;
  $7_1 = $1944(0, 95660);
  fimport$10($1944($2_1, 0) | 0);
  fimport$4($1944($7_1, 96) | 0);
  $1973($7_1, 96, $1944($2_1, 0));
  fimport$10($1944($3, 0) | 0);
  fimport$4($1944($7_1, 100) | 0);
  $2_1 = $1944($3, 0);
  $1973($7_1, 104, $4_1);
  $1973($7_1, 100, $2_1);
  $2_1 = $1944($0_1, 0);
  $3 = $1936($0_1, 11);
  $1973($6_1, 12, 53228);
  $1973($6_1, 20, $1_1);
  $1_1 = $1944($1_1, 0);
  $1973($6_1, 24, 0);
  $7_1 = $6_1 + 24 | 0;
  $9 = fimport$1(72760, $7_1 | 0) | 0;
  $1_1 = fimport$7($1_1 | 0, $9 | 0) | 0;
  fimport$4($9 | 0);
  $10_1 = +fimport$5($1_1 | 0, 72724, $7_1 | 0);
  fimport$6($1944($6_1, 24) | 0);
  $1973($6_1, 16, Math_abs($10_1) < 2147483648.0 ? ~~$10_1 : -2147483648);
  fimport$4($1_1 | 0);
  $1_1 = ($3 | 0) < 0 ? $2_1 : $0_1;
  $2_1 = global$0 - 32 | 0;
  global$0 = $2_1;
  $3 = $1944(0, 73568);
  $1973($2_1, 28, 0);
  $7_1 = $6_1 + 16 | 0;
  $0_1 = $1944($7_1, 0);
  if (!(($0_1 | 0) < 0 | ($0_1 | 0) >= ($4_1 | 0))) {
   FUNCTION_TABLE[867](0, $0_1, $2_1 + 28 | 0) | 0
  }
  label$2 : {
   if (($5_1 | 0) == -1) {
    break label$2
   }
   if ($1937($3, 7300) & 16) {
    break label$2
   }
   $1982($2_1, 20, 0, 0);
   if (($5_1 | 0) <= 0) {
    $8 = Math_fround(3402823466385288598117041.0e14)
   } else {
    $0_1 = $1944(0, 73568);
    $8 = $1963($0_1 + 5428 | 0, 0);
    $11_1 = Math_fround($8 + $8);
    $12_1 = $1963($0_1, 6468);
    $8 = $1963($0_1 + 5496 | 0, 0);
    $8 = Math_fround($11_1 + Math_fround(Math_fround(Math_fround($12_1 + $8) * Math_fround($5_1 | 0)) - $8));
   }
   $1986($2_1, 16, $8);
   $1973($2_1, 12, 2139095039);
   $251($2_1 + 20 | 0, $2_1 + 12 | 0, 0);
  }
  $0_1 = 0;
  if ($597($1_1, $1944($2_1, 28), 0)) {
   label$6 : {
    if (($4_1 | 0) <= 0) {
     $1_1 = 0;
     break label$6;
    }
    $1_1 = 0;
    while (1) {
     $266($0_1);
     $5_1 = $1944($7_1, 0);
     if (!(FUNCTION_TABLE[867](0, $0_1, $2_1 + 12 | 0) | 0)) {
      $1973($2_1, 12, 17692)
     }
     $9 = $1944($2_1, 12);
     $1982($2_1, 20, 0, 0);
     if ($601($9, ($0_1 | 0) == ($5_1 | 0), 0, $2_1 + 20 | 0)) {
      $1973($7_1, 0, $0_1);
      $1_1 = 1;
     }
     if (($0_1 | 0) == ($5_1 | 0)) {
      $263()
     }
     $269();
     $0_1 = $0_1 + 1 | 0;
     if (($0_1 | 0) != ($4_1 | 0)) {
      continue
     }
     break;
    };
   }
   $321();
   $0_1 = $1_1;
   if ($0_1) {
    $88($1944($3, 7240))
   }
  }
  global$0 = $2_1 + 32 | 0;
  $1_1 = $0_1 & 1;
  $1973($6_1, 12, 53228);
  $2_1 = $1944($6_1, 20);
  $1973($6_1, 24, $1944($6_1, 16));
  $3 = $6_1 + 24 | 0;
  $0_1 = fimport$1(72724, $3 | 0) | 0;
  $2_1 = $1944($2_1, 0);
  $1973($6_1, 24, 0);
  $4_1 = $2_1;
  $2_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($4_1 | 0, $2_1 | 0, $0_1 | 0);
  fimport$4($2_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $6_1 + 32 | 0;
  return $1_1 | 0;
 }
 
 function $1294($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  var $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0;
  $8 = global$0 - 32 | 0;
  global$0 = $8;
  $9 = $1944($1_1, 0);
  if ($9 >>> 0 < 2147483632) {
   label$2 : {
    if ($9 >>> 0 <= 10) {
     $1968($8, 31, $9);
     $10_1 = $8 + 20 | 0;
     break label$2;
    }
    $11_1 = ($9 | 15) + 1 | 0;
    $10_1 = $1783($11_1);
    $1973($8, 28, $11_1 | -2147483648);
    $1973($8, 20, $10_1);
    $1973($8, 24, $9);
   }
   if ($9) {
    $1602($10_1, $1_1 + 4 | 0, $9)
   }
   $1968($9 + $10_1 | 0, 0, 0);
   $1973($8, 12, $3);
   $1973($8, 16, $2_1);
   $1973($8, 8, $4_1);
   $1973($8, 4, $5_1);
   $1973($8, 0, $6_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($8 + 20 | 0, $8 + 16 | 0, $8 + 12 | 0, $8 + 8 | 0, $8 + 4 | 0, $8, $7_1) | 0;
   fimport$4($1944($8, 0) | 0);
   fimport$4($1944($8, 4) | 0);
   fimport$4($1944($8, 8) | 0);
   fimport$4($1944($8, 12) | 0);
   fimport$4($1944($8, 16) | 0);
   if (($1936($8, 31) | 0) < 0) {
    $1756($1944($8, 20))
   }
   global$0 = $8 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1295($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = 0.0, $12_1 = 0.0, $13 = 0.0, $14 = 0, $15_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $7_1 = global$0 - 32 | 0;
  global$0 = $7_1;
  $14 = $1944($0_1, 0);
  $15_1 = $1936($0_1, 11);
  $1973($7_1, 28, $1_1);
  $1973($7_1, 20, 53576);
  $1508($7_1 + 20 | 0);
  $11_1 = +fimport$5($1944($2_1, 0) | 0, 72808, $7_1 | 0);
  fimport$6($1944($7_1, 0) | 0);
  $12_1 = +fimport$5($1944($3, 0) | 0, 72808, $7_1 | 0);
  fimport$6($1944($7_1, 0) | 0);
  $13 = +fimport$5($1944($4_1, 0) | 0, 72808, $7_1 | 0);
  fimport$6($1944($7_1, 0) | 0);
  $1973($7_1 + 12 | 0, 0, 0);
  $1982($7_1, 4, 0, 0);
  $1973($7_1, 0, 53464);
  $1973($7_1, 16, $5_1);
  if (($1944($5_1, 0) | 0) != 2) {
   $1506($7_1)
  }
  $8 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($11_1 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $8 = Math_fround(-3402823466385288598117041.0e14);
   if ($11_1 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $8 = Math_fround($11_1);
  }
  $9 = Math_fround(3402823466385288598117041.0e14);
  label$2 : {
   if ($12_1 >= 3402823466385288598117041.0e14) {
    break label$2
   }
   $9 = Math_fround(-3402823466385288598117041.0e14);
   if ($12_1 <= -3402823466385288598117041.0e14) {
    break label$2
   }
   $9 = Math_fround($12_1);
  }
  $2_1 = ($15_1 | 0) < 0;
  $1973($7_1, 0, 53312);
  $3 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 4), wasm2js_i32$4 = $7_1 + 4 | 0, wasm2js_i32$5 = ($1936($7_1, 15) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 16), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $10_1 = Math_fround(3402823466385288598117041.0e14);
  label$3 : {
   if ($13 >= 3402823466385288598117041.0e14) {
    break label$3
   }
   $10_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($13 <= -3402823466385288598117041.0e14) {
    break label$3
   }
   $10_1 = Math_fround($13);
  }
  $1986($1_1, 8, $10_1);
  $1986($1_1, 12, $9);
  $0_1 = $630($2_1 ? $14 : $0_1, 8, $7_1 + 24 | 0, $8, $1_1 + 12 | 0, $1_1 + 8 | 0, $3, $6_1);
  global$0 = $1_1 + 16 | 0;
  $1_1 = $0_1;
  $1973($7_1, 0, 53464);
  if (($1936($7_1, 15) | 0) < 0) {
   $1756($1944($7_1, 4))
  }
  $1973($7_1, 20, 53576);
  $2_1 = $1944($7_1, 28);
  $1986($7_1, 0, $1963($7_1, 24));
  $0_1 = fimport$1(72796, $7_1 | 0) | 0;
  $2_1 = $1944($2_1, 0);
  $1973($7_1, 0, 0);
  $3 = $2_1;
  $2_1 = fimport$1(72760, $7_1 | 0) | 0;
  fimport$3($3 | 0, $2_1 | 0, $0_1 | 0);
  fimport$4($2_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $7_1 + 32 | 0;
  return $1_1 | 0;
 }
 
 function $1296($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = 0.0, $12_1 = 0.0, $13 = 0.0, $14 = 0, $15_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $7_1 = global$0 - 48 | 0;
  global$0 = $7_1;
  $14 = $1944($0_1, 0);
  $15_1 = $1936($0_1, 11);
  $1973($7_1, 44, $1_1);
  $1973($7_1, 32, 53632);
  $1512($7_1 + 32 | 0);
  $1_1 = $7_1 + 8 | 0;
  $11_1 = +fimport$5($1944($2_1, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($7_1, 8) | 0);
  $12_1 = +fimport$5($1944($3, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($7_1, 8) | 0);
  $13 = +fimport$5($1944($4_1, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($7_1, 8) | 0);
  $1973($7_1 + 20 | 0, 0, 0);
  $1982($7_1, 12, 0, 0);
  $1973($7_1, 8, 53464);
  $1973($7_1, 24, $5_1);
  if (($1944($5_1, 0) | 0) != 2) {
   $1506($7_1 + 8 | 0)
  }
  $8 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($11_1 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $8 = Math_fround(-3402823466385288598117041.0e14);
   if ($11_1 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $8 = Math_fround($11_1);
  }
  $9 = Math_fround(3402823466385288598117041.0e14);
  label$2 : {
   if ($12_1 >= 3402823466385288598117041.0e14) {
    break label$2
   }
   $9 = Math_fround(-3402823466385288598117041.0e14);
   if ($12_1 <= -3402823466385288598117041.0e14) {
    break label$2
   }
   $9 = Math_fround($12_1);
  }
  $2_1 = ($15_1 | 0) < 0;
  $1973($7_1, 8, 53312);
  $3 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 12), wasm2js_i32$4 = $7_1 + 12 | 0, wasm2js_i32$5 = ($1936($7_1, 23) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 24), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $10_1 = Math_fround(3402823466385288598117041.0e14);
  label$3 : {
   if ($13 >= 3402823466385288598117041.0e14) {
    break label$3
   }
   $10_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($13 <= -3402823466385288598117041.0e14) {
    break label$3
   }
   $10_1 = Math_fround($13);
  }
  $1986($1_1, 8, $10_1);
  $1986($1_1, 12, $9);
  $0_1 = $634($2_1 ? $14 : $0_1, 8, $7_1 + 36 | 0, 2, $8, $1_1 + 12 | 0, $1_1 + 8 | 0, $3, $6_1);
  global$0 = $1_1 + 16 | 0;
  $2_1 = $0_1;
  $1973($7_1, 8, 53464);
  if (($1936($7_1, 23) | 0) < 0) {
   $1756($1944($7_1, 12))
  }
  $1973($7_1, 32, 53632);
  $0_1 = 0;
  while (1) {
   $3 = $1944($7_1, 44);
   $1986($7_1, 8, $1963(($7_1 + ($0_1 << 2) | 0) + 36 | 0, 0));
   $4_1 = $7_1 + 8 | 0;
   $1_1 = fimport$1(72796, $4_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($7_1, 8, $0_1);
   $5_1 = $3;
   $3 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($5_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 2) {
    continue
   }
   break;
  };
  global$0 = $7_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1297($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = 0.0, $12_1 = 0.0, $13 = 0.0, $14 = 0, $15_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $7_1 = global$0 - 48 | 0;
  global$0 = $7_1;
  $14 = $1944($0_1, 0);
  $15_1 = $1936($0_1, 11);
  $1973($7_1, 44, $1_1);
  $1973($7_1, 28, 53688);
  $1516($7_1 + 28 | 0);
  $1_1 = $7_1 + 8 | 0;
  $11_1 = +fimport$5($1944($2_1, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($7_1, 8) | 0);
  $12_1 = +fimport$5($1944($3, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($7_1, 8) | 0);
  $13 = +fimport$5($1944($4_1, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($7_1, 8) | 0);
  $1973($7_1 + 20 | 0, 0, 0);
  $1982($7_1, 12, 0, 0);
  $1973($7_1, 8, 53464);
  $1973($7_1, 24, $5_1);
  if (($1944($5_1, 0) | 0) != 2) {
   $1506($7_1 + 8 | 0)
  }
  $8 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($11_1 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $8 = Math_fround(-3402823466385288598117041.0e14);
   if ($11_1 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $8 = Math_fround($11_1);
  }
  $9 = Math_fround(3402823466385288598117041.0e14);
  label$2 : {
   if ($12_1 >= 3402823466385288598117041.0e14) {
    break label$2
   }
   $9 = Math_fround(-3402823466385288598117041.0e14);
   if ($12_1 <= -3402823466385288598117041.0e14) {
    break label$2
   }
   $9 = Math_fround($12_1);
  }
  $2_1 = ($15_1 | 0) < 0;
  $1973($7_1, 8, 53312);
  $3 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 12), wasm2js_i32$4 = $7_1 + 12 | 0, wasm2js_i32$5 = ($1936($7_1, 23) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 24), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $10_1 = Math_fround(3402823466385288598117041.0e14);
  label$3 : {
   if ($13 >= 3402823466385288598117041.0e14) {
    break label$3
   }
   $10_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($13 <= -3402823466385288598117041.0e14) {
    break label$3
   }
   $10_1 = Math_fround($13);
  }
  $1986($1_1, 8, $10_1);
  $1986($1_1, 12, $9);
  $0_1 = $634($2_1 ? $14 : $0_1, 8, $7_1 + 32 | 0, 3, $8, $1_1 + 12 | 0, $1_1 + 8 | 0, $3, $6_1);
  global$0 = $1_1 + 16 | 0;
  $2_1 = $0_1;
  $1973($7_1, 8, 53464);
  if (($1936($7_1, 23) | 0) < 0) {
   $1756($1944($7_1, 12))
  }
  $1973($7_1, 28, 53688);
  $0_1 = 0;
  while (1) {
   $3 = $1944($7_1, 44);
   $1986($7_1, 8, $1963(($7_1 + ($0_1 << 2) | 0) + 32 | 0, 0));
   $4_1 = $7_1 + 8 | 0;
   $1_1 = fimport$1(72796, $4_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($7_1, 8, $0_1);
   $5_1 = $3;
   $3 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($5_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 3) {
    continue
   }
   break;
  };
  global$0 = $7_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1298($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = 0.0, $12_1 = 0.0, $13 = 0.0, $14 = 0, $15_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $7_1 = global$0 - 48 | 0;
  global$0 = $7_1;
  $14 = $1944($0_1, 0);
  $15_1 = $1936($0_1, 11);
  $1973($7_1, 44, $1_1);
  $1973($7_1, 24, 53744);
  $1520($7_1 + 24 | 0);
  $11_1 = +fimport$5($1944($2_1, 0) | 0, 72808, $7_1 | 0);
  fimport$6($1944($7_1, 0) | 0);
  $12_1 = +fimport$5($1944($3, 0) | 0, 72808, $7_1 | 0);
  fimport$6($1944($7_1, 0) | 0);
  $13 = +fimport$5($1944($4_1, 0) | 0, 72808, $7_1 | 0);
  fimport$6($1944($7_1, 0) | 0);
  $1973($7_1 + 12 | 0, 0, 0);
  $1982($7_1, 4, 0, 0);
  $1973($7_1, 0, 53464);
  $1973($7_1, 16, $5_1);
  if (($1944($5_1, 0) | 0) != 2) {
   $1506($7_1)
  }
  $8 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($11_1 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $8 = Math_fround(-3402823466385288598117041.0e14);
   if ($11_1 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $8 = Math_fround($11_1);
  }
  $9 = Math_fround(3402823466385288598117041.0e14);
  label$2 : {
   if ($12_1 >= 3402823466385288598117041.0e14) {
    break label$2
   }
   $9 = Math_fround(-3402823466385288598117041.0e14);
   if ($12_1 <= -3402823466385288598117041.0e14) {
    break label$2
   }
   $9 = Math_fround($12_1);
  }
  $2_1 = ($15_1 | 0) < 0;
  $1973($7_1, 0, 53312);
  $3 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 4), wasm2js_i32$4 = $7_1 + 4 | 0, wasm2js_i32$5 = ($1936($7_1, 15) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 16), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $10_1 = Math_fround(3402823466385288598117041.0e14);
  label$3 : {
   if ($13 >= 3402823466385288598117041.0e14) {
    break label$3
   }
   $10_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($13 <= -3402823466385288598117041.0e14) {
    break label$3
   }
   $10_1 = Math_fround($13);
  }
  $1986($1_1, 8, $10_1);
  $1986($1_1, 12, $9);
  $0_1 = $634($2_1 ? $14 : $0_1, 8, $7_1 + 28 | 0, 4, $8, $1_1 + 12 | 0, $1_1 + 8 | 0, $3, $6_1);
  global$0 = $1_1 + 16 | 0;
  $2_1 = $0_1;
  $1973($7_1, 0, 53464);
  if (($1936($7_1, 15) | 0) < 0) {
   $1756($1944($7_1, 4))
  }
  $1973($7_1, 24, 53744);
  $0_1 = 0;
  while (1) {
   $3 = $1944($7_1, 44);
   $1986($7_1, 0, $1963(($7_1 + ($0_1 << 2) | 0) + 28 | 0, 0));
   $1_1 = fimport$1(72796, $7_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($7_1, 0, $0_1);
   $4_1 = $3;
   $3 = fimport$1(72760, $7_1 | 0) | 0;
   fimport$3($4_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 4) {
    continue
   }
   break;
  };
  global$0 = $7_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1299($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8, $9) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  $8 = $8 | 0;
  $9 = $9 | 0;
  var $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0;
  $10_1 = global$0 - 48 | 0;
  global$0 = $10_1;
  $11_1 = $1944($1_1, 0);
  if ($11_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($11_1 >>> 0 <= 10) {
     $1968($10_1, 47, $11_1);
     $12_1 = $10_1 + 36 | 0;
     break label$2;
    }
    $13 = ($11_1 | 15) + 1 | 0;
    $12_1 = $1783($13);
    $1973($10_1, 44, $13 | -2147483648);
    $1973($10_1, 36, $12_1);
    $1973($10_1, 40, $11_1);
   }
   if ($11_1) {
    $1602($12_1, $1_1 + 4 | 0, $11_1)
   }
   $1968($11_1 + $12_1 | 0, 0, 0);
   $1973($10_1, 28, $3);
   $1973($10_1, 32, $2_1);
   $1973($10_1, 24, $4_1);
   $1973($10_1, 20, $5_1);
   $1973($10_1, 16, $6_1);
   $1973($10_1, 12, $7_1);
   $1973($10_1, 8, $8);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($10_1 + 36 | 0, $10_1 + 32 | 0, $10_1 + 28 | 0, $10_1 + 24 | 0, $10_1 + 20 | 0, $10_1 + 16 | 0, $10_1 + 12 | 0, $10_1 + 8 | 0, $9) | 0;
   fimport$4($1944($10_1, 8) | 0);
   fimport$4($1944($10_1, 12) | 0);
   fimport$4($1944($10_1, 16) | 0);
   fimport$4($1944($10_1, 20) | 0);
   fimport$4($1944($10_1, 24) | 0);
   fimport$4($1944($10_1, 28) | 0);
   fimport$4($1944($10_1, 32) | 0);
   if (($1936($10_1, 47) | 0) < 0) {
    $1756($1944($10_1, 36))
   }
   global$0 = $10_1 + 48 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1300($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  $8 = $8 | 0;
  var $9 = 0, $10_1 = Math_fround(0), $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = 0, $15_1 = Math_fround(0), $16_1 = 0.0, $17_1 = 0.0, $18_1 = 0.0, $19 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $9 = global$0 - 80 | 0;
  global$0 = $9;
  $19 = $1944($0_1, 0);
  $14 = $1936($0_1, 11);
  $1973($9, 76, $1_1);
  $1973($9, 68, 53576);
  $1508($9 + 68 | 0);
  $1973($9, 64, $2_1);
  $1973($9, 56, 53576);
  $1508($9 + 56 | 0);
  $1_1 = $9 + 32 | 0;
  $16_1 = +fimport$5($1944($3, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($9, 32) | 0);
  $17_1 = +fimport$5($1944($4_1, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($9, 32) | 0);
  $18_1 = +fimport$5($1944($5_1, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($9, 32) | 0);
  $5_1 = $1_1;
  $1973($1_1 + 12 | 0, 0, 0);
  $1982($9, 36, 0, 0);
  $1973($9, 32, 53464);
  $1973($9, 48, $6_1);
  if (($1944($6_1, 0) | 0) != 2) {
   $1506($9 + 32 | 0)
  }
  $1973($9, 32, 53312);
  $4_1 = $1944($1944($9, 48), 0);
  $3 = $1944($9, 36);
  $2_1 = $1936($9, 47);
  $1_1 = $9 + 12 | 0;
  $1973($1_1 + 12 | 0, 0, 0);
  $1982($9, 16, 0, 0);
  $1973($9, 12, 53464);
  $1973($9, 28, $7_1);
  if (($1944($7_1, 0) | 0) != 2) {
   $1506($9 + 12 | 0)
  }
  $1973($9, 12, 53312);
  $14 = ($14 | 0) < 0 ? $19 : $0_1;
  $7_1 = $9 + 72 | 0;
  $6_1 = $9 + 60 | 0;
  $13 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($16_1 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $13 = Math_fround(-3402823466385288598117041.0e14);
   if ($16_1 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $13 = Math_fround($16_1);
  }
  $11_1 = Math_fround(3402823466385288598117041.0e14);
  label$2 : {
   if ($17_1 >= 3402823466385288598117041.0e14) {
    break label$2
   }
   $11_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($17_1 <= -3402823466385288598117041.0e14) {
    break label$2
   }
   $11_1 = Math_fround($17_1);
  }
  $12_1 = Math_fround(3402823466385288598117041.0e14);
  label$3 : {
   if ($18_1 >= 3402823466385288598117041.0e14) {
    break label$3
   }
   $12_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($18_1 <= -3402823466385288598117041.0e14) {
    break label$3
   }
   $12_1 = Math_fround($18_1);
  }
  $4_1 = ($4_1 | 0) != 2 ? (($2_1 | 0) < 0 ? $3 : $5_1 + 4 | 0) : 0;
  $3 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($9, 16), wasm2js_i32$4 = $1_1 + 4 | 0, wasm2js_i32$5 = ($1936($9, 27) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($9, 28), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $2_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $1_1 = $1944(0, 73568);
  $0_1 = $1944($1_1, 7080);
  $1968($0_1, 140, 1);
  if (!$1937($0_1, 143)) {
   $153($14);
   $301();
   $290(2, $292());
   $0_1 = $11_1 >= $12_1;
   $15_1 = $0_1 ? Math_fround(-3402823466385288598117041.0e14) : $11_1;
   $1986($5_1, 12, $15_1);
   $10_1 = $1963($6_1, 0);
   $10_1 = $0_1 ? $10_1 : $10_1 > $12_1 ? $12_1 : $10_1;
   $1986($5_1, 8, $10_1);
   $2_1 = $630(7616, 8, $7_1, $13, $5_1 + 12 | 0, $5_1 + 8 | 0, $4_1, ($10_1 == $15_1) << 21 | $8);
   $291();
   $1_1 = $1_1 + 5500 | 0;
   $276(Math_fround(0.0), $1963($1_1, 0));
   $10_1 = $1963($7_1, 0);
   $15_1 = $0_1 ? $10_1 : $10_1 <= $11_1 ? $11_1 : $10_1;
   $1986($5_1, 4, $15_1);
   $10_1 = $0_1 ? Math_fround(3402823466385288598117041.0e14) : $12_1;
   $1986($5_1, 0, $10_1);
   $0_1 = $630(1521, 8, $6_1, $13, $5_1 + 4 | 0, $5_1, $3 ? $3 : $4_1, ($10_1 == $15_1) << 21 | $8);
   $291();
   $276(Math_fround(0.0), $1963($1_1, 0));
   $555($14, $62($14), 0);
   $275();
   $269();
   $2_1 = $0_1 | $2_1;
  }
  global$0 = $5_1 + 16 | 0;
  $1973($9, 12, 53464);
  if (($1936($9, 27) | 0) < 0) {
   $1756($1944($9, 16))
  }
  $1973($9, 32, 53464);
  if (($1936($9, 47) | 0) < 0) {
   $1756($1944($9, 36))
  }
  $1973($9, 56, 53576);
  $0_1 = $1944($9, 64);
  $1986($9, 32, $1963($9, 60));
  $4_1 = $9 + 32 | 0;
  $1_1 = $4_1;
  $3 = fimport$1(72796, $1_1 | 0) | 0;
  $0_1 = $1944($0_1, 0);
  $1973($9, 32, 0);
  $5_1 = $0_1;
  $0_1 = fimport$1(72760, $1_1 | 0) | 0;
  fimport$3($5_1 | 0, $0_1 | 0, $3 | 0);
  fimport$4($0_1 | 0);
  fimport$4($3 | 0);
  $1973($9, 68, 53576);
  $0_1 = $1944($9, 76);
  $1986($9, 32, $1963($9, 72));
  $1_1 = fimport$1(72796, $1_1 | 0) | 0;
  $0_1 = $1944($0_1, 0);
  $1973($9, 32, 0);
  $3 = $0_1;
  $0_1 = fimport$1(72760, $4_1 | 0) | 0;
  fimport$3($3 | 0, $0_1 | 0, $1_1 | 0);
  fimport$4($0_1 | 0);
  fimport$4($1_1 | 0);
  global$0 = $9 + 80 | 0;
  return $2_1 | 0;
 }
 
 function $1301($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  var $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0;
  $8 = global$0 - 32 | 0;
  global$0 = $8;
  $9 = $1944($1_1, 0);
  if ($9 >>> 0 < 2147483632) {
   label$2 : {
    if ($9 >>> 0 <= 10) {
     $1968($8, 31, $9);
     $10_1 = $8 + 20 | 0;
     break label$2;
    }
    $11_1 = ($9 | 15) + 1 | 0;
    $10_1 = $1783($11_1);
    $1973($8, 28, $11_1 | -2147483648);
    $1973($8, 20, $10_1);
    $1973($8, 24, $9);
   }
   if ($9) {
    $1602($10_1, $1_1 + 4 | 0, $9)
   }
   $1968($9 + $10_1 | 0, 0, 0);
   $1973($8, 12, $3);
   $1973($8, 16, $2_1);
   $1973($8, 8, $6_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($8 + 20 | 0, $8 + 16 | 0, $8 + 12 | 0, $4_1, $5_1, $8 + 8 | 0, $7_1) | 0;
   fimport$4($1944($8, 8) | 0);
   fimport$4($1944($8, 12) | 0);
   fimport$4($1944($8, 16) | 0);
   if (($1936($8, 31) | 0) < 0) {
    $1756($1944($8, 20))
   }
   global$0 = $8 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1302($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = 0.0, $9 = Math_fround(0), $10_1 = 0, $11_1 = 0, $12_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $7_1 = global$0 - 32 | 0;
  global$0 = $7_1;
  $11_1 = $1944($0_1, 0);
  $12_1 = $1936($0_1, 11);
  $1973($7_1, 20, 53228);
  $1973($7_1, 28, $1_1);
  $1_1 = $1944($1_1, 0);
  $1973($7_1, 0, 0);
  $10_1 = fimport$1(72760, $7_1 | 0) | 0;
  $1_1 = fimport$7($1_1 | 0, $10_1 | 0) | 0;
  fimport$4($10_1 | 0);
  $8 = +fimport$5($1_1 | 0, 72724, $7_1 | 0);
  fimport$6($1944($7_1, 0) | 0);
  $1973($7_1, 24, Math_abs($8) < 2147483648.0 ? ~~$8 : -2147483648);
  fimport$4($1_1 | 0);
  $8 = +fimport$5($1944($2_1, 0) | 0, 72808, $7_1 | 0);
  fimport$6($1944($7_1, 0) | 0);
  $1973($7_1 + 12 | 0, 0, 0);
  $1982($7_1, 4, 0, 0);
  $1973($7_1, 0, 53464);
  $1973($7_1, 16, $5_1);
  if (($1944($5_1, 0) | 0) != 2) {
   $1506($7_1)
  }
  $1973($7_1, 0, 53312);
  $2_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 4), wasm2js_i32$4 = $7_1 + 4 | 0, wasm2js_i32$5 = ($1936($7_1, 15) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 16), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, $4_1);
  $1973($1_1, 12, $3);
  $0_1 = ($12_1 | 0) < 0 ? $11_1 : $0_1;
  $3 = $7_1 + 24 | 0;
  $9 = Math_fround(3402823466385288598117041.0e14);
  label$3 : {
   if ($8 >= 3402823466385288598117041.0e14) {
    break label$3
   }
   $9 = Math_fround(-3402823466385288598117041.0e14);
   if ($8 <= -3402823466385288598117041.0e14) {
    break label$3
   }
   $9 = Math_fround($8);
  }
  $0_1 = $630($0_1, 4, $3, $9, $1_1 + 12 | 0, $1_1 + 8 | 0, $2_1, $6_1);
  global$0 = $1_1 + 16 | 0;
  $1_1 = $0_1;
  $1973($7_1, 0, 53464);
  if (($1936($7_1, 15) | 0) < 0) {
   $1756($1944($7_1, 4))
  }
  $1973($7_1, 20, 53228);
  $2_1 = $1944($7_1, 28);
  $1973($7_1, 0, $1944($7_1, 24));
  $0_1 = fimport$1(72724, $7_1 | 0) | 0;
  $2_1 = $1944($2_1, 0);
  $1973($7_1, 0, 0);
  $3 = $2_1;
  $2_1 = fimport$1(72760, $7_1 | 0) | 0;
  fimport$3($3 | 0, $2_1 | 0, $0_1 | 0);
  fimport$4($2_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $7_1 + 32 | 0;
  return $1_1 | 0;
 }
 
 function $1303($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = Math_fround(0), $9 = 0.0, $10_1 = 0, $11_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $7_1 = global$0 - 48 | 0;
  global$0 = $7_1;
  $10_1 = $1944($0_1, 0);
  $11_1 = $1936($0_1, 11);
  $1973($7_1, 44, $1_1);
  $1973($7_1, 32, 53896);
  $1524($7_1 + 32 | 0);
  $9 = +fimport$5($1944($2_1, 0) | 0, 72808, $7_1 + 8 | 0);
  fimport$6($1944($7_1, 8) | 0);
  $1973($7_1 + 20 | 0, 0, 0);
  $1982($7_1, 12, 0, 0);
  $1973($7_1, 8, 53464);
  $1973($7_1, 24, $5_1);
  if (($1944($5_1, 0) | 0) != 2) {
   $1506($7_1 + 8 | 0)
  }
  $1973($7_1, 8, 53312);
  $2_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 12), wasm2js_i32$4 = $7_1 + 12 | 0, wasm2js_i32$5 = ($1936($7_1, 23) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 24), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, $4_1);
  $1973($1_1, 12, $3);
  $0_1 = ($11_1 | 0) < 0 ? $10_1 : $0_1;
  $3 = $7_1 + 36 | 0;
  $8 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($9 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $8 = Math_fround(-3402823466385288598117041.0e14);
   if ($9 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $8 = Math_fround($9);
  }
  $0_1 = $634($0_1, 4, $3, 2, $8, $1_1 + 12 | 0, $1_1 + 8 | 0, $2_1, $6_1);
  global$0 = $1_1 + 16 | 0;
  $2_1 = $0_1;
  $1973($7_1, 8, 53464);
  if (($1936($7_1, 23) | 0) < 0) {
   $1756($1944($7_1, 12))
  }
  $1973($7_1, 32, 53896);
  $0_1 = 0;
  while (1) {
   $3 = $1944($7_1, 44);
   $1973($7_1, 8, $1944(($7_1 + ($0_1 << 2) | 0) + 36 | 0, 0));
   $4_1 = $7_1 + 8 | 0;
   $1_1 = fimport$1(72724, $4_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($7_1, 8, $0_1);
   $5_1 = $3;
   $3 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($5_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 2) {
    continue
   }
   break;
  };
  global$0 = $7_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1304($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = Math_fround(0), $9 = 0.0, $10_1 = 0, $11_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $7_1 = global$0 - 48 | 0;
  global$0 = $7_1;
  $10_1 = $1944($0_1, 0);
  $11_1 = $1936($0_1, 11);
  $1973($7_1, 44, $1_1);
  $1973($7_1, 28, 53952);
  $1528($7_1 + 28 | 0);
  $9 = +fimport$5($1944($2_1, 0) | 0, 72808, $7_1 + 8 | 0);
  fimport$6($1944($7_1, 8) | 0);
  $1973($7_1 + 20 | 0, 0, 0);
  $1982($7_1, 12, 0, 0);
  $1973($7_1, 8, 53464);
  $1973($7_1, 24, $5_1);
  if (($1944($5_1, 0) | 0) != 2) {
   $1506($7_1 + 8 | 0)
  }
  $1973($7_1, 8, 53312);
  $2_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 12), wasm2js_i32$4 = $7_1 + 12 | 0, wasm2js_i32$5 = ($1936($7_1, 23) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 24), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, $4_1);
  $1973($1_1, 12, $3);
  $0_1 = ($11_1 | 0) < 0 ? $10_1 : $0_1;
  $3 = $7_1 + 32 | 0;
  $8 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($9 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $8 = Math_fround(-3402823466385288598117041.0e14);
   if ($9 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $8 = Math_fround($9);
  }
  $0_1 = $634($0_1, 4, $3, 3, $8, $1_1 + 12 | 0, $1_1 + 8 | 0, $2_1, $6_1);
  global$0 = $1_1 + 16 | 0;
  $2_1 = $0_1;
  $1973($7_1, 8, 53464);
  if (($1936($7_1, 23) | 0) < 0) {
   $1756($1944($7_1, 12))
  }
  $1973($7_1, 28, 53952);
  $0_1 = 0;
  while (1) {
   $3 = $1944($7_1, 44);
   $1973($7_1, 8, $1944(($7_1 + ($0_1 << 2) | 0) + 32 | 0, 0));
   $4_1 = $7_1 + 8 | 0;
   $1_1 = fimport$1(72724, $4_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($7_1, 8, $0_1);
   $5_1 = $3;
   $3 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($5_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 3) {
    continue
   }
   break;
  };
  global$0 = $7_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1305($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = Math_fround(0), $9 = 0.0, $10_1 = 0, $11_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $7_1 = global$0 - 48 | 0;
  global$0 = $7_1;
  $10_1 = $1944($0_1, 0);
  $11_1 = $1936($0_1, 11);
  $1973($7_1, 44, $1_1);
  $1973($7_1, 24, 54008);
  $1532($7_1 + 24 | 0);
  $9 = +fimport$5($1944($2_1, 0) | 0, 72808, $7_1 | 0);
  fimport$6($1944($7_1, 0) | 0);
  $1973($7_1 + 12 | 0, 0, 0);
  $1982($7_1, 4, 0, 0);
  $1973($7_1, 0, 53464);
  $1973($7_1, 16, $5_1);
  if (($1944($5_1, 0) | 0) != 2) {
   $1506($7_1)
  }
  $1973($7_1, 0, 53312);
  $2_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 4), wasm2js_i32$4 = $7_1 + 4 | 0, wasm2js_i32$5 = ($1936($7_1, 15) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 16), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, $4_1);
  $1973($1_1, 12, $3);
  $0_1 = ($11_1 | 0) < 0 ? $10_1 : $0_1;
  $3 = $7_1 + 28 | 0;
  $8 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($9 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $8 = Math_fround(-3402823466385288598117041.0e14);
   if ($9 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $8 = Math_fround($9);
  }
  $0_1 = $634($0_1, 4, $3, 4, $8, $1_1 + 12 | 0, $1_1 + 8 | 0, $2_1, $6_1);
  global$0 = $1_1 + 16 | 0;
  $2_1 = $0_1;
  $1973($7_1, 0, 53464);
  if (($1936($7_1, 15) | 0) < 0) {
   $1756($1944($7_1, 4))
  }
  $1973($7_1, 24, 54008);
  $0_1 = 0;
  while (1) {
   $3 = $1944($7_1, 44);
   $1973($7_1, 0, $1944(($7_1 + ($0_1 << 2) | 0) + 28 | 0, 0));
   $1_1 = fimport$1(72724, $7_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($7_1, 0, $0_1);
   $4_1 = $3;
   $3 = fimport$1(72760, $7_1 | 0) | 0;
   fimport$3($4_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 4) {
    continue
   }
   break;
  };
  global$0 = $7_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1306($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  $8 = $8 | 0;
  var $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = 0, $13 = 0.0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0.0, $19 = 0, $20_1 = 0.0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $9 = global$0 - 80 | 0;
  global$0 = $9;
  $15_1 = $1944($0_1, 0);
  $16_1 = $1936($0_1, 11);
  $1973($9, 68, 53228);
  $1973($9, 76, $1_1);
  $1_1 = $1944($1_1, 0);
  $1973($9, 32, 0);
  $10_1 = $1_1;
  $12_1 = $9 + 32 | 0;
  $1_1 = fimport$1(72760, $12_1 | 0) | 0;
  $14 = fimport$7($10_1 | 0, $1_1 | 0) | 0;
  fimport$4($1_1 | 0);
  $13 = +fimport$5($14 | 0, 72724, $12_1 | 0);
  fimport$6($1944($9, 32) | 0);
  $1973($9, 72, Math_abs($13) < 2147483648.0 ? ~~$13 : -2147483648);
  fimport$4($14 | 0);
  $1973($9, 56, 53228);
  $1973($9, 64, $2_1);
  $1_1 = $1944($2_1, 0);
  $1973($9, 32, 0);
  $10_1 = $1_1;
  $2_1 = $12_1;
  $1_1 = fimport$1(72760, $2_1 | 0) | 0;
  $12_1 = fimport$7($10_1 | 0, $1_1 | 0) | 0;
  fimport$4($1_1 | 0);
  $13 = +fimport$5($12_1 | 0, 72724, $2_1 | 0);
  fimport$6($1944($9, 32) | 0);
  $1973($9, 60, Math_abs($13) < 2147483648.0 ? ~~$13 : -2147483648);
  fimport$4($12_1 | 0);
  $18_1 = +fimport$5($1944($3, 0) | 0, 72808, $2_1 | 0);
  fimport$6($1944($9, 32) | 0);
  $1_1 = $2_1;
  $20_1 = +fimport$5($1944($4_1, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($9, 32) | 0);
  $13 = +fimport$5($1944($5_1, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($9, 32) | 0);
  $1973($9 + 44 | 0, 0, 0);
  $1982($9, 36, 0, 0);
  $1973($9, 32, 53464);
  $1973($9, 48, $6_1);
  $1_1 = $1944($6_1, 0);
  $11_1 = Math_fround($20_1);
  label$6 : {
   if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
    $2_1 = ~~$11_1;
    break label$6;
   }
   $2_1 = -2147483648;
  }
  $3 = ($1_1 | 0) == 2;
  $11_1 = Math_fround($13);
  label$8 : {
   if (Math_fround(Math_abs($11_1)) < Math_fround(2147483648.0)) {
    $1_1 = ~~$11_1;
    break label$8;
   }
   $1_1 = -2147483648;
  }
  if (!$3) {
   $1506($9 + 32 | 0)
  }
  $1973($9, 32, 53312);
  $5_1 = $1944($1944($9, 48), 0);
  $4_1 = $1944($9, 36);
  $3 = $1936($9, 47);
  $1973($9 + 24 | 0, 0, 0);
  $1982($9, 16, 0, 0);
  $1973($9, 12, 53464);
  $1973($9, 28, $7_1);
  if (($1944($7_1, 0) | 0) != 2) {
   $1506($9 + 12 | 0)
  }
  $1973($9, 12, 53312);
  $19 = ($16_1 | 0) < 0 ? $15_1 : $0_1;
  $14 = $9 + 72 | 0;
  $15_1 = $9 + 60 | 0;
  $11_1 = Math_fround(3402823466385288598117041.0e14);
  label$5 : {
   if ($18_1 >= 3402823466385288598117041.0e14) {
    break label$5
   }
   $11_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($18_1 <= -3402823466385288598117041.0e14) {
    break label$5
   }
   $11_1 = Math_fround($18_1);
  }
  $16_1 = ($5_1 | 0) != 2 ? (($3 | 0) < 0 ? $4_1 : $9 + 36 | 0) : 0;
  $12_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($9, 16), wasm2js_i32$4 = $9 + 16 | 0, wasm2js_i32$5 = ($1936($9, 27) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($9, 28), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $3 = 0;
  $10_1 = global$0 - 16 | 0;
  global$0 = $10_1;
  $7_1 = $1944(0, 73568);
  $0_1 = $1944($7_1, 7080);
  $1968($0_1, 140, 1);
  if (!$1937($0_1, 143)) {
   $153($19);
   $301();
   $290(2, $292());
   $0_1 = $1944($15_1, 0);
   $17_1 = ($1_1 | 0) > ($2_1 | 0);
   $3 = $17_1 ? (($0_1 | 0) > ($1_1 | 0) ? $1_1 : $0_1) : $0_1;
   $1973($10_1, 8, $3);
   $0_1 = $17_1 ? $2_1 : -2147483648;
   $1973($10_1, 12, $0_1);
   $6_1 = $10_1 + 12 | 0;
   $5_1 = $10_1 + 8 | 0;
   $4_1 = $630(7616, 4, $14, $11_1, $6_1, $5_1, $16_1, (($0_1 | 0) == ($3 | 0)) << 21 | $8);
   $291();
   $3 = $7_1 + 5500 | 0;
   $276(Math_fround(0.0), $1963($3, 0));
   $0_1 = $1944($14, 0);
   $2_1 = $17_1 ? (($0_1 | 0) < ($2_1 | 0) ? $2_1 : $0_1) : $0_1;
   $1973($10_1, 12, $2_1);
   $0_1 = $17_1 ? $1_1 : 2147483647;
   $1973($10_1, 8, $0_1);
   $0_1 = $630(1521, 4, $15_1, $11_1, $6_1, $5_1, $12_1 ? $12_1 : $16_1, (($0_1 | 0) == ($2_1 | 0)) << 21 | $8);
   $291();
   $276(Math_fround(0.0), $1963($3, 0));
   $555($19, $62($19), 0);
   $275();
   $269();
   $3 = $0_1 | $4_1;
  }
  global$0 = $10_1 + 16 | 0;
  $2_1 = $3;
  $1973($9, 12, 53464);
  if (($1936($9, 27) | 0) < 0) {
   $1756($1944($9, 16))
  }
  $1973($9, 32, 53464);
  if (($1936($9, 47) | 0) < 0) {
   $1756($1944($9, 36))
  }
  $1973($9, 56, 53228);
  $0_1 = $1944($9, 64);
  $1973($9, 32, $1944($9, 60));
  $4_1 = $9 + 32 | 0;
  $1_1 = $4_1;
  $3 = fimport$1(72724, $1_1 | 0) | 0;
  $0_1 = $1944($0_1, 0);
  $1973($9, 32, 0);
  $5_1 = $0_1;
  $0_1 = fimport$1(72760, $1_1 | 0) | 0;
  fimport$3($5_1 | 0, $0_1 | 0, $3 | 0);
  fimport$4($0_1 | 0);
  fimport$4($3 | 0);
  $1973($9, 68, 53228);
  $0_1 = $1944($9, 76);
  $1973($9, 32, $1944($9, 72));
  $1_1 = fimport$1(72724, $1_1 | 0) | 0;
  $0_1 = $1944($0_1, 0);
  $1973($9, 32, 0);
  $3 = $0_1;
  $0_1 = fimport$1(72760, $4_1 | 0) | 0;
  fimport$3($3 | 0, $0_1 | 0, $1_1 | 0);
  fimport$4($0_1 | 0);
  fimport$4($1_1 | 0);
  global$0 = $9 + 80 | 0;
  return $2_1 | 0;
 }
 
 function $1307($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  $8 = $8 | 0;
  var $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0;
  $9 = global$0 - 32 | 0;
  global$0 = $9;
  $10_1 = $1944($1_1, 0);
  if ($10_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($10_1 >>> 0 <= 10) {
     $1968($9, 31, $10_1);
     $11_1 = $9 + 20 | 0;
     break label$2;
    }
    $12_1 = ($10_1 | 15) + 1 | 0;
    $11_1 = $1783($12_1);
    $1973($9, 28, $12_1 | -2147483648);
    $1973($9, 20, $11_1);
    $1973($9, 24, $10_1);
   }
   if ($10_1) {
    $1602($11_1, $1_1 + 4 | 0, $10_1)
   }
   $1968($10_1 + $11_1 | 0, 0, 0);
   $1973($9, 12, $4_1);
   $1973($9, 16, $3);
   $1973($9, 8, $5_1);
   $1973($9, 4, $6_1);
   $1973($9, 0, $7_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($9 + 20 | 0, $2_1, $9 + 16 | 0, $9 + 12 | 0, $9 + 8 | 0, $9 + 4 | 0, $9, $8) | 0;
   fimport$4($1944($9, 0) | 0);
   fimport$4($1944($9, 4) | 0);
   fimport$4($1944($9, 8) | 0);
   fimport$4($1944($9, 12) | 0);
   fimport$4($1944($9, 16) | 0);
   if (($1936($9, 31) | 0) < 0) {
    $1756($1944($9, 20))
   }
   global$0 = $9 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1308($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  var $8 = 0, $9 = Math_fround(0), $10_1 = 0.0, $11_1 = 0.0, $12_1 = 0, $13 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $8 = global$0 - 96 | 0;
  global$0 = $8;
  label$1 : {
   label$2 : {
    switch ($1_1 | 0) {
    case 0:
     $12_1 = $1944($0_1, 0);
     $13 = $1936($0_1, 11);
     $1_1 = $1536($8 + 32 | 0, $2_1);
     $11_1 = +fimport$5($1944($3, 0) | 0, 72808, $8 + 56 | 0);
     fimport$6($1944($8, 56) | 0);
     $1973($8, 12, 54160);
     $1973($8, 20, $4_1);
     $2_1 = $1944($4_1, 0);
     if (($2_1 | 0) != 2) {
      $10_1 = +fimport$5($2_1 | 0, 72688, $8 + 56 | 0);
      fimport$6($1944($8, 56) | 0);
      $1968($8, 16, Math_abs($10_1) < 2147483648.0 ? ~~$10_1 : -2147483648);
     }
     $2_1 = $1944($1944($8, 20), 0);
     $1973($8, 80, 54160);
     $1973($8, 88, $5_1);
     $3 = $1944($5_1, 0);
     if (($3 | 0) != 2) {
      $10_1 = +fimport$5($3 | 0, 72688, $8 + 56 | 0);
      fimport$6($1944($8, 56) | 0);
      $1968($8, 84, Math_abs($10_1) < 2147483648.0 ? ~~$10_1 : -2147483648);
     }
     $3 = $1944($1944($8, 88), 0);
     $1973($8 + 68 | 0, 0, 0);
     $1982($8, 60, 0, 0);
     $1973($8, 56, 53464);
     $1973($8, 72, $6_1);
     if (($1944($6_1, 0) | 0) != 2) {
      $1506($8 + 56 | 0)
     }
     $1973($8, 56, 53312);
     $4_1 = ($13 | 0) < 0 ? $12_1 : $0_1;
     $0_1 = $1944($1_1, 0);
     $5_1 = $1944($1_1, 4) - $0_1 | 0;
     $9 = Math_fround(3402823466385288598117041.0e14);
     label$10 : {
      if ($11_1 >= 3402823466385288598117041.0e14) {
       break label$10
      }
      $9 = Math_fround(-3402823466385288598117041.0e14);
      if ($11_1 <= -3402823466385288598117041.0e14) {
       break label$10
      }
      $9 = Math_fround($11_1);
     }
     $12_1 = $634($4_1, 0, $0_1, $5_1, $9, ($2_1 | 0) != 2 ? $8 + 16 | 0 : 0, ($3 | 0) != 2 ? $8 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 60), wasm2js_i32$4 = $8 + 60 | 0, wasm2js_i32$5 = ($1936($8, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $7_1);
     $1973($8, 56, 53464);
     if (($1936($8, 71) | 0) < 0) {
      $1756($1944($8, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 | 0;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95828) & 1)) {
      $4_1 = fimport$17(2, 54204) | 0;
      $1968(0, 95828, 1);
      $1973(0, 95824, $4_1);
     }
     $4_1 = $1944(0, 95824);
     $1973($8, 60, $0_1);
     $1973($8, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $8 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 1:
     $12_1 = $1944($0_1, 0);
     $13 = $1936($0_1, 11);
     $1_1 = $1537($8 + 32 | 0, $2_1);
     $11_1 = +fimport$5($1944($3, 0) | 0, 72808, $8 + 56 | 0);
     fimport$6($1944($8, 56) | 0);
     $1973($8, 12, 54220);
     $1973($8, 20, $4_1);
     $2_1 = $1944($4_1, 0);
     if (($2_1 | 0) != 2) {
      $10_1 = +fimport$5($2_1 | 0, 72676, $8 + 56 | 0);
      fimport$6($1944($8, 56) | 0);
      $1968($8, 16, $10_1 < 4294967296.0 & $10_1 >= 0.0 ? ~~$10_1 >>> 0 : 0);
     }
     $2_1 = $1944($1944($8, 20), 0);
     $1973($8, 80, 54220);
     $1973($8, 88, $5_1);
     $3 = $1944($5_1, 0);
     if (($3 | 0) != 2) {
      $10_1 = +fimport$5($3 | 0, 72676, $8 + 56 | 0);
      fimport$6($1944($8, 56) | 0);
      $1968($8, 84, $10_1 < 4294967296.0 & $10_1 >= 0.0 ? ~~$10_1 >>> 0 : 0);
     }
     $3 = $1944($1944($8, 88), 0);
     $1973($8 + 68 | 0, 0, 0);
     $1982($8, 60, 0, 0);
     $1973($8, 56, 53464);
     $1973($8, 72, $6_1);
     if (($1944($6_1, 0) | 0) != 2) {
      $1506($8 + 56 | 0)
     }
     $1973($8, 56, 53312);
     $4_1 = ($13 | 0) < 0 ? $12_1 : $0_1;
     $0_1 = $1944($1_1, 0);
     $5_1 = $1944($1_1, 4) - $0_1 | 0;
     $9 = Math_fround(3402823466385288598117041.0e14);
     label$21 : {
      if ($11_1 >= 3402823466385288598117041.0e14) {
       break label$21
      }
      $9 = Math_fround(-3402823466385288598117041.0e14);
      if ($11_1 <= -3402823466385288598117041.0e14) {
       break label$21
      }
      $9 = Math_fround($11_1);
     }
     $12_1 = $634($4_1, 1, $0_1, $5_1, $9, ($2_1 | 0) != 2 ? $8 + 16 | 0 : 0, ($3 | 0) != 2 ? $8 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 60), wasm2js_i32$4 = $8 + 60 | 0, wasm2js_i32$5 = ($1936($8, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $7_1);
     $1973($8, 56, 53464);
     if (($1936($8, 71) | 0) < 0) {
      $1756($1944($8, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 | 0;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95836) & 1)) {
      $4_1 = fimport$17(2, 54264) | 0;
      $1968(0, 95836, 1);
      $1973(0, 95832, $4_1);
     }
     $4_1 = $1944(0, 95832);
     $1973($8, 60, $0_1);
     $1973($8, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $8 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 2:
     $12_1 = $1944($0_1, 0);
     $13 = $1936($0_1, 11);
     $1_1 = $1538($8 + 32 | 0, $2_1);
     $11_1 = +fimport$5($1944($3, 0) | 0, 72808, $8 + 56 | 0);
     fimport$6($1944($8, 56) | 0);
     $1973($8, 12, 54320);
     $1973($8, 20, $4_1);
     $2_1 = $1944($4_1, 0);
     if (($2_1 | 0) != 2) {
      $10_1 = +fimport$5($2_1 | 0, 72700, $8 + 56 | 0);
      fimport$6($1944($8, 56) | 0);
      $1970($8, 16, Math_abs($10_1) < 2147483648.0 ? ~~$10_1 : -2147483648);
     }
     $2_1 = $1944($1944($8, 20), 0);
     $1973($8, 80, 54320);
     $1973($8, 88, $5_1);
     $3 = $1944($5_1, 0);
     if (($3 | 0) != 2) {
      $10_1 = +fimport$5($3 | 0, 72700, $8 + 56 | 0);
      fimport$6($1944($8, 56) | 0);
      $1970($8, 84, Math_abs($10_1) < 2147483648.0 ? ~~$10_1 : -2147483648);
     }
     $3 = $1944($1944($8, 88), 0);
     $1973($8 + 68 | 0, 0, 0);
     $1982($8, 60, 0, 0);
     $1973($8, 56, 53464);
     $1973($8, 72, $6_1);
     if (($1944($6_1, 0) | 0) != 2) {
      $1506($8 + 56 | 0)
     }
     $1973($8, 56, 53312);
     $4_1 = ($13 | 0) < 0 ? $12_1 : $0_1;
     $0_1 = $1944($1_1, 0);
     $5_1 = $1944($1_1, 4) - $0_1 >> 1;
     $9 = Math_fround(3402823466385288598117041.0e14);
     label$32 : {
      if ($11_1 >= 3402823466385288598117041.0e14) {
       break label$32
      }
      $9 = Math_fround(-3402823466385288598117041.0e14);
      if ($11_1 <= -3402823466385288598117041.0e14) {
       break label$32
      }
      $9 = Math_fround($11_1);
     }
     $12_1 = $634($4_1, 2, $0_1, $5_1, $9, ($2_1 | 0) != 2 ? $8 + 16 | 0 : 0, ($3 | 0) != 2 ? $8 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 60), wasm2js_i32$4 = $8 + 60 | 0, wasm2js_i32$5 = ($1936($8, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $7_1);
     $1973($8, 56, 53464);
     if (($1936($8, 71) | 0) < 0) {
      $1756($1944($8, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 1;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95844) & 1)) {
      $4_1 = fimport$17(2, 54364) | 0;
      $1968(0, 95844, 1);
      $1973(0, 95840, $4_1);
     }
     $4_1 = $1944(0, 95840);
     $1973($8, 60, $0_1);
     $1973($8, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $8 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 3:
     $12_1 = $1944($0_1, 0);
     $13 = $1936($0_1, 11);
     $1_1 = $1539($8 + 32 | 0, $2_1);
     $11_1 = +fimport$5($1944($3, 0) | 0, 72808, $8 + 56 | 0);
     fimport$6($1944($8, 56) | 0);
     $1973($8, 12, 54420);
     $1973($8, 20, $4_1);
     $2_1 = $1944($4_1, 0);
     if (($2_1 | 0) != 2) {
      $10_1 = +fimport$5($2_1 | 0, 72712, $8 + 56 | 0);
      fimport$6($1944($8, 56) | 0);
      $1970($8, 16, $10_1 < 4294967296.0 & $10_1 >= 0.0 ? ~~$10_1 >>> 0 : 0);
     }
     $2_1 = $1944($1944($8, 20), 0);
     $1973($8, 80, 54420);
     $1973($8, 88, $5_1);
     $3 = $1944($5_1, 0);
     if (($3 | 0) != 2) {
      $10_1 = +fimport$5($3 | 0, 72712, $8 + 56 | 0);
      fimport$6($1944($8, 56) | 0);
      $1970($8, 84, $10_1 < 4294967296.0 & $10_1 >= 0.0 ? ~~$10_1 >>> 0 : 0);
     }
     $3 = $1944($1944($8, 88), 0);
     $1973($8 + 68 | 0, 0, 0);
     $1982($8, 60, 0, 0);
     $1973($8, 56, 53464);
     $1973($8, 72, $6_1);
     if (($1944($6_1, 0) | 0) != 2) {
      $1506($8 + 56 | 0)
     }
     $1973($8, 56, 53312);
     $4_1 = ($13 | 0) < 0 ? $12_1 : $0_1;
     $0_1 = $1944($1_1, 0);
     $5_1 = $1944($1_1, 4) - $0_1 >> 1;
     $9 = Math_fround(3402823466385288598117041.0e14);
     label$43 : {
      if ($11_1 >= 3402823466385288598117041.0e14) {
       break label$43
      }
      $9 = Math_fround(-3402823466385288598117041.0e14);
      if ($11_1 <= -3402823466385288598117041.0e14) {
       break label$43
      }
      $9 = Math_fround($11_1);
     }
     $12_1 = $634($4_1, 3, $0_1, $5_1, $9, ($2_1 | 0) != 2 ? $8 + 16 | 0 : 0, ($3 | 0) != 2 ? $8 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 60), wasm2js_i32$4 = $8 + 60 | 0, wasm2js_i32$5 = ($1936($8, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $7_1);
     $1973($8, 56, 53464);
     if (($1936($8, 71) | 0) < 0) {
      $1756($1944($8, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 1;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95852) & 1)) {
      $4_1 = fimport$17(2, 54464) | 0;
      $1968(0, 95852, 1);
      $1973(0, 95848, $4_1);
     }
     $4_1 = $1944(0, 95848);
     $1973($8, 60, $0_1);
     $1973($8, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $8 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 4:
     $12_1 = $1944($0_1, 0);
     $13 = $1936($0_1, 11);
     $1_1 = $1540($8 + 32 | 0, $2_1);
     $11_1 = +fimport$5($1944($3, 0) | 0, 72808, $8 + 56 | 0);
     fimport$6($1944($8, 56) | 0);
     $1973($8, 12, 54520);
     $1973($8, 20, $4_1);
     $2_1 = $1944($4_1, 0);
     if (($2_1 | 0) != 2) {
      $10_1 = +fimport$5($2_1 | 0, 72724, $8 + 56 | 0);
      fimport$6($1944($8, 56) | 0);
      $1973($8, 16, Math_abs($10_1) < 2147483648.0 ? ~~$10_1 : -2147483648);
     }
     $2_1 = $1944($1944($8, 20), 0);
     $1973($8, 80, 54520);
     $1973($8, 88, $5_1);
     $3 = $1944($5_1, 0);
     if (($3 | 0) != 2) {
      $10_1 = +fimport$5($3 | 0, 72724, $8 + 56 | 0);
      fimport$6($1944($8, 56) | 0);
      $1973($8, 84, Math_abs($10_1) < 2147483648.0 ? ~~$10_1 : -2147483648);
     }
     $3 = $1944($1944($8, 88), 0);
     $1973($8 + 68 | 0, 0, 0);
     $1982($8, 60, 0, 0);
     $1973($8, 56, 53464);
     $1973($8, 72, $6_1);
     if (($1944($6_1, 0) | 0) != 2) {
      $1506($8 + 56 | 0)
     }
     $1973($8, 56, 53312);
     $4_1 = ($13 | 0) < 0 ? $12_1 : $0_1;
     $0_1 = $1944($1_1, 0);
     $5_1 = $1944($1_1, 4) - $0_1 >> 2;
     $9 = Math_fround(3402823466385288598117041.0e14);
     label$54 : {
      if ($11_1 >= 3402823466385288598117041.0e14) {
       break label$54
      }
      $9 = Math_fround(-3402823466385288598117041.0e14);
      if ($11_1 <= -3402823466385288598117041.0e14) {
       break label$54
      }
      $9 = Math_fround($11_1);
     }
     $12_1 = $634($4_1, 4, $0_1, $5_1, $9, ($2_1 | 0) != 2 ? $8 + 16 | 0 : 0, ($3 | 0) != 2 ? $8 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 60), wasm2js_i32$4 = $8 + 60 | 0, wasm2js_i32$5 = ($1936($8, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $7_1);
     $1973($8, 56, 53464);
     if (($1936($8, 71) | 0) < 0) {
      $1756($1944($8, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 2;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95860) & 1)) {
      $4_1 = fimport$17(2, 54564) | 0;
      $1968(0, 95860, 1);
      $1973(0, 95856, $4_1);
     }
     $4_1 = $1944(0, 95856);
     $1973($8, 60, $0_1);
     $1973($8, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $8 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 5:
     $12_1 = $1944($0_1, 0);
     $13 = $1936($0_1, 11);
     $1_1 = $1541($8 + 32 | 0, $2_1);
     $11_1 = +fimport$5($1944($3, 0) | 0, 72808, $8 + 56 | 0);
     fimport$6($1944($8, 56) | 0);
     $1973($8, 12, 54620);
     $1973($8, 20, $4_1);
     $2_1 = $1944($4_1, 0);
     if (($2_1 | 0) != 2) {
      $10_1 = +fimport$5($2_1 | 0, 72736, $8 + 56 | 0);
      fimport$6($1944($8, 56) | 0);
      $1973($8, 16, $10_1 < 4294967296.0 & $10_1 >= 0.0 ? ~~$10_1 >>> 0 : 0);
     }
     $2_1 = $1944($1944($8, 20), 0);
     $1973($8, 80, 54620);
     $1973($8, 88, $5_1);
     $3 = $1944($5_1, 0);
     if (($3 | 0) != 2) {
      $10_1 = +fimport$5($3 | 0, 72736, $8 + 56 | 0);
      fimport$6($1944($8, 56) | 0);
      $1973($8, 84, $10_1 < 4294967296.0 & $10_1 >= 0.0 ? ~~$10_1 >>> 0 : 0);
     }
     $3 = $1944($1944($8, 88), 0);
     $1973($8 + 68 | 0, 0, 0);
     $1982($8, 60, 0, 0);
     $1973($8, 56, 53464);
     $1973($8, 72, $6_1);
     if (($1944($6_1, 0) | 0) != 2) {
      $1506($8 + 56 | 0)
     }
     $1973($8, 56, 53312);
     $4_1 = ($13 | 0) < 0 ? $12_1 : $0_1;
     $0_1 = $1944($1_1, 0);
     $5_1 = $1944($1_1, 4) - $0_1 >> 2;
     $9 = Math_fround(3402823466385288598117041.0e14);
     label$65 : {
      if ($11_1 >= 3402823466385288598117041.0e14) {
       break label$65
      }
      $9 = Math_fround(-3402823466385288598117041.0e14);
      if ($11_1 <= -3402823466385288598117041.0e14) {
       break label$65
      }
      $9 = Math_fround($11_1);
     }
     $12_1 = $634($4_1, 5, $0_1, $5_1, $9, ($2_1 | 0) != 2 ? $8 + 16 | 0 : 0, ($3 | 0) != 2 ? $8 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 60), wasm2js_i32$4 = $8 + 60 | 0, wasm2js_i32$5 = ($1936($8, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $7_1);
     $1973($8, 56, 53464);
     if (($1936($8, 71) | 0) < 0) {
      $1756($1944($8, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 2;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95868) & 1)) {
      $4_1 = fimport$17(2, 54664) | 0;
      $1968(0, 95868, 1);
      $1973(0, 95864, $4_1);
     }
     $4_1 = $1944(0, 95864);
     $1973($8, 60, $0_1);
     $1973($8, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $8 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 8:
     $12_1 = $1944($0_1, 0);
     $13 = $1936($0_1, 11);
     $1_1 = $1542($8 + 32 | 0, $2_1);
     $11_1 = +fimport$5($1944($3, 0) | 0, 72808, $8 + 56 | 0);
     fimport$6($1944($8, 56) | 0);
     $1973($8, 12, 54720);
     $1973($8, 20, $4_1);
     $2_1 = $1944($4_1, 0);
     if (($2_1 | 0) != 2) {
      $10_1 = +fimport$5($2_1 | 0, 72808, $8 + 56 | 0);
      fimport$6($1944($8, 56) | 0);
      $9 = Math_fround(3402823466385288598117041.0e14);
      label$78 : {
       if ($10_1 >= 3402823466385288598117041.0e14) {
        break label$78
       }
       $9 = Math_fround(-3402823466385288598117041.0e14);
       if ($10_1 <= -3402823466385288598117041.0e14) {
        break label$78
       }
       $9 = Math_fround($10_1);
      }
      $1986($8, 16, $9);
     }
     $2_1 = $1944($1944($8, 20), 0);
     $1973($8, 80, 54720);
     $1973($8, 88, $5_1);
     $3 = $1944($5_1, 0);
     if (($3 | 0) != 2) {
      $10_1 = +fimport$5($3 | 0, 72808, $8 + 56 | 0);
      fimport$6($1944($8, 56) | 0);
      $9 = Math_fround(3402823466385288598117041.0e14);
      label$80 : {
       if ($10_1 >= 3402823466385288598117041.0e14) {
        break label$80
       }
       $9 = Math_fround(-3402823466385288598117041.0e14);
       if ($10_1 <= -3402823466385288598117041.0e14) {
        break label$80
       }
       $9 = Math_fround($10_1);
      }
      $1986($8, 84, $9);
     }
     $3 = $1944($1944($8, 88), 0);
     $1973($8 + 68 | 0, 0, 0);
     $1982($8, 60, 0, 0);
     $1973($8, 56, 53464);
     $1973($8, 72, $6_1);
     if (($1944($6_1, 0) | 0) != 2) {
      $1506($8 + 56 | 0)
     }
     $1973($8, 56, 53312);
     $4_1 = ($13 | 0) < 0 ? $12_1 : $0_1;
     $0_1 = $1944($1_1, 0);
     $5_1 = $1944($1_1, 4) - $0_1 >> 2;
     $9 = Math_fround(3402823466385288598117041.0e14);
     label$76 : {
      if ($11_1 >= 3402823466385288598117041.0e14) {
       break label$76
      }
      $9 = Math_fround(-3402823466385288598117041.0e14);
      if ($11_1 <= -3402823466385288598117041.0e14) {
       break label$76
      }
      $9 = Math_fround($11_1);
     }
     $12_1 = $634($4_1, 8, $0_1, $5_1, $9, ($2_1 | 0) != 2 ? $8 + 16 | 0 : 0, ($3 | 0) != 2 ? $8 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 60), wasm2js_i32$4 = $8 + 60 | 0, wasm2js_i32$5 = ($1936($8, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $7_1);
     $1973($8, 56, 53464);
     if (($1936($8, 71) | 0) < 0) {
      $1756($1944($8, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 2;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95876) & 1)) {
      $4_1 = fimport$17(2, 54764) | 0;
      $1968(0, 95876, 1);
      $1973(0, 95872, $4_1);
     }
     $4_1 = $1944(0, 95872);
     $1973($8, 60, $0_1);
     $1973($8, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $8 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 9:
     break label$2;
    default:
     break label$1;
    };
   }
   $12_1 = $1944($0_1, 0);
   $13 = $1936($0_1, 11);
   $1_1 = $1543($8 + 80 | 0, $2_1);
   $11_1 = +fimport$5($1944($3, 0) | 0, 72808, $8 + 56 | 0);
   fimport$6($1944($8, 56) | 0);
   $1973($8, 56, 54820);
   $1973($8, 72, $4_1);
   $2_1 = $1944($4_1, 0);
   if (($2_1 | 0) != 2) {
    $10_1 = +fimport$5($2_1 | 0, 72808, $8 + 32 | 0);
    fimport$6($1944($8, 32) | 0);
    $1990($8, 64, $10_1);
   }
   $2_1 = $1944($1944($8, 72), 0);
   $1973($8, 32, 54820);
   $1973($8, 48, $5_1);
   $3 = $1944($5_1, 0);
   if (($3 | 0) != 2) {
    $10_1 = +fimport$5($3 | 0, 72808, $8 + 12 | 0);
    fimport$6($1944($8, 12) | 0);
    $1990($8, 40, $10_1);
   }
   $3 = $1944($1944($8, 48), 0);
   $1973($8 + 24 | 0, 0, 0);
   $1982($8, 16, 0, 0);
   $1973($8, 12, 53464);
   $1973($8, 28, $6_1);
   if (($1944($6_1, 0) | 0) != 2) {
    $1506($8 + 12 | 0)
   }
   $1973($8, 12, 53312);
   $4_1 = ($13 | 0) < 0 ? $12_1 : $0_1;
   $0_1 = $1944($1_1, 0);
   $5_1 = $1944($1_1, 4) - $0_1 >> 3;
   $9 = Math_fround(3402823466385288598117041.0e14);
   label$85 : {
    if ($11_1 >= 3402823466385288598117041.0e14) {
     break label$85
    }
    $9 = Math_fround(-3402823466385288598117041.0e14);
    if ($11_1 <= -3402823466385288598117041.0e14) {
     break label$85
    }
    $9 = Math_fround($11_1);
   }
   $12_1 = $634($4_1, 9, $0_1, $5_1, $9, ($2_1 | 0) != 2 ? $8 - -64 | 0 : 0, ($3 | 0) != 2 ? $8 + 40 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 16), wasm2js_i32$4 = $8 + 16 | 0, wasm2js_i32$5 = ($1936($8, 27) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 28), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $7_1);
   $1973($8, 12, 53464);
   if (($1936($8, 27) | 0) < 0) {
    $1756($1944($8, 16))
   }
   $2_1 = $1944($1_1, 4);
   $0_1 = $1944($1_1, 0);
   $2_1 = $2_1 - $0_1 >> 3;
   $3 = $1944($1944($1_1, 12), 0);
   if (!($1937(0, 95884) & 1)) {
    $4_1 = fimport$17(2, 54864) | 0;
    $1968(0, 95884, 1);
    $1973(0, 95880, $4_1);
   }
   $4_1 = $1944(0, 95880);
   $1973($8, 60, $0_1);
   $1973($8, 56, $2_1);
   fimport$18($4_1 | 0, $3 | 0, 3559, $8 + 56 | 0);
   $0_1 = $1944($1_1, 0);
   if ($0_1) {
    $1973($1_1, 4, $0_1);
    $1756($0_1);
   }
  }
  global$0 = $8 + 96 | 0;
  return $12_1 | 0;
 }
 
 function $1309($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0;
  $7_1 = global$0 - 32 | 0;
  global$0 = $7_1;
  $8 = $1944($1_1, 0);
  if ($8 >>> 0 < 2147483632) {
   label$2 : {
    if ($8 >>> 0 <= 10) {
     $1968($7_1, 31, $8);
     $9 = $7_1 + 20 | 0;
     break label$2;
    }
    $10_1 = ($8 | 15) + 1 | 0;
    $9 = $1783($10_1);
    $1973($7_1, 28, $10_1 | -2147483648);
    $1973($7_1, 20, $9);
    $1973($7_1, 24, $8);
   }
   if ($8) {
    $1602($9, $1_1 + 4 | 0, $8)
   }
   $1968($8 + $9 | 0, 0, 0);
   $1973($7_1, 12, $3);
   $1973($7_1, 16, $2_1);
   $1973($7_1, 8, $4_1);
   $1973($7_1, 4, $5_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($7_1 + 20 | 0, $7_1 + 16 | 0, $7_1 + 12 | 0, $7_1 + 8 | 0, $7_1 + 4 | 0, $6_1) | 0;
   fimport$4($1944($7_1, 4) | 0);
   fimport$4($1944($7_1, 8) | 0);
   fimport$4($1944($7_1, 12) | 0);
   fimport$4($1944($7_1, 16) | 0);
   if (($1936($7_1, 31) | 0) < 0) {
    $1756($1944($7_1, 20))
   }
   global$0 = $7_1 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1310($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = 0.0, $10_1 = 0.0, $11_1 = 0, $12_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $6_1 = global$0 - 32 | 0;
  global$0 = $6_1;
  $11_1 = $1944($0_1, 0);
  $12_1 = $1936($0_1, 11);
  $1973($6_1, 28, $1_1);
  $1973($6_1, 20, 53576);
  $1508($6_1 + 20 | 0);
  $9 = +fimport$5($1944($2_1, 0) | 0, 72808, $6_1 | 0);
  fimport$6($1944($6_1, 0) | 0);
  $10_1 = +fimport$5($1944($3, 0) | 0, 72808, $6_1 | 0);
  fimport$6($1944($6_1, 0) | 0);
  $1973($6_1 + 12 | 0, 0, 0);
  $1982($6_1, 4, 0, 0);
  $1973($6_1, 0, 53464);
  $1973($6_1, 16, $4_1);
  if (($1944($4_1, 0) | 0) != 2) {
   $1506($6_1)
  }
  $7_1 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($9 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $7_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($9 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $7_1 = Math_fround($9);
  }
  $2_1 = ($12_1 | 0) < 0;
  $1973($6_1, 0, 53312);
  $3 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($6_1, 4), wasm2js_i32$4 = $6_1 + 4 | 0, wasm2js_i32$5 = ($1936($6_1, 15) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($6_1, 16), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $8 = Math_fround(3402823466385288598117041.0e14);
  label$2 : {
   if ($10_1 >= 3402823466385288598117041.0e14) {
    break label$2
   }
   $8 = Math_fround(-3402823466385288598117041.0e14);
   if ($10_1 <= -3402823466385288598117041.0e14) {
    break label$2
   }
   $8 = Math_fround($10_1);
  }
  $1986($1_1, 8, $8);
  $1986($1_1, 12, $7_1);
  $0_1 = $652($2_1 ? $11_1 : $0_1, 8, $6_1 + 24 | 0, $1_1 + 12 | 0, $1_1 + 8 | 0, $3, $5_1);
  global$0 = $1_1 + 16 | 0;
  $1_1 = $0_1;
  $1973($6_1, 0, 53464);
  if (($1936($6_1, 15) | 0) < 0) {
   $1756($1944($6_1, 4))
  }
  $1973($6_1, 20, 53576);
  $2_1 = $1944($6_1, 28);
  $1986($6_1, 0, $1963($6_1, 24));
  $0_1 = fimport$1(72796, $6_1 | 0) | 0;
  $2_1 = $1944($2_1, 0);
  $1973($6_1, 0, 0);
  $3 = $2_1;
  $2_1 = fimport$1(72760, $6_1 | 0) | 0;
  fimport$3($3 | 0, $2_1 | 0, $0_1 | 0);
  fimport$4($2_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $6_1 + 32 | 0;
  return $1_1 | 0;
 }
 
 function $1311($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = 0.0, $10_1 = 0.0, $11_1 = 0, $12_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $6_1 = global$0 - 48 | 0;
  global$0 = $6_1;
  $11_1 = $1944($0_1, 0);
  $12_1 = $1936($0_1, 11);
  $1973($6_1, 44, $1_1);
  $1973($6_1, 32, 53632);
  $1512($6_1 + 32 | 0);
  $1_1 = $6_1 + 8 | 0;
  $9 = +fimport$5($1944($2_1, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($6_1, 8) | 0);
  $10_1 = +fimport$5($1944($3, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($6_1, 8) | 0);
  $1973($6_1 + 20 | 0, 0, 0);
  $1982($6_1, 12, 0, 0);
  $1973($6_1, 8, 53464);
  $1973($6_1, 24, $4_1);
  if (($1944($4_1, 0) | 0) != 2) {
   $1506($6_1 + 8 | 0)
  }
  $7_1 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($9 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $7_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($9 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $7_1 = Math_fround($9);
  }
  $2_1 = ($12_1 | 0) < 0;
  $1973($6_1, 8, 53312);
  $3 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($6_1, 12), wasm2js_i32$4 = $6_1 + 12 | 0, wasm2js_i32$5 = ($1936($6_1, 23) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($6_1, 24), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $8 = Math_fround(3402823466385288598117041.0e14);
  label$2 : {
   if ($10_1 >= 3402823466385288598117041.0e14) {
    break label$2
   }
   $8 = Math_fround(-3402823466385288598117041.0e14);
   if ($10_1 <= -3402823466385288598117041.0e14) {
    break label$2
   }
   $8 = Math_fround($10_1);
  }
  $1986($1_1, 8, $8);
  $1986($1_1, 12, $7_1);
  $0_1 = $653($2_1 ? $11_1 : $0_1, 8, $6_1 + 36 | 0, 2, $1_1 + 12 | 0, $1_1 + 8 | 0, $3, $5_1);
  global$0 = $1_1 + 16 | 0;
  $2_1 = $0_1;
  $1973($6_1, 8, 53464);
  if (($1936($6_1, 23) | 0) < 0) {
   $1756($1944($6_1, 12))
  }
  $1973($6_1, 32, 53632);
  $0_1 = 0;
  while (1) {
   $3 = $1944($6_1, 44);
   $1986($6_1, 8, $1963(($6_1 + ($0_1 << 2) | 0) + 36 | 0, 0));
   $4_1 = $6_1 + 8 | 0;
   $1_1 = fimport$1(72796, $4_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($6_1, 8, $0_1);
   $5_1 = $3;
   $3 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($5_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 2) {
    continue
   }
   break;
  };
  global$0 = $6_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1312($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = 0.0, $10_1 = 0.0, $11_1 = 0, $12_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $6_1 = global$0 - 48 | 0;
  global$0 = $6_1;
  $11_1 = $1944($0_1, 0);
  $12_1 = $1936($0_1, 11);
  $1973($6_1, 44, $1_1);
  $1973($6_1, 28, 53688);
  $1516($6_1 + 28 | 0);
  $1_1 = $6_1 + 8 | 0;
  $9 = +fimport$5($1944($2_1, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($6_1, 8) | 0);
  $10_1 = +fimport$5($1944($3, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($6_1, 8) | 0);
  $1973($6_1 + 20 | 0, 0, 0);
  $1982($6_1, 12, 0, 0);
  $1973($6_1, 8, 53464);
  $1973($6_1, 24, $4_1);
  if (($1944($4_1, 0) | 0) != 2) {
   $1506($6_1 + 8 | 0)
  }
  $7_1 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($9 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $7_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($9 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $7_1 = Math_fround($9);
  }
  $2_1 = ($12_1 | 0) < 0;
  $1973($6_1, 8, 53312);
  $3 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($6_1, 12), wasm2js_i32$4 = $6_1 + 12 | 0, wasm2js_i32$5 = ($1936($6_1, 23) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($6_1, 24), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $8 = Math_fround(3402823466385288598117041.0e14);
  label$2 : {
   if ($10_1 >= 3402823466385288598117041.0e14) {
    break label$2
   }
   $8 = Math_fround(-3402823466385288598117041.0e14);
   if ($10_1 <= -3402823466385288598117041.0e14) {
    break label$2
   }
   $8 = Math_fround($10_1);
  }
  $1986($1_1, 8, $8);
  $1986($1_1, 12, $7_1);
  $0_1 = $653($2_1 ? $11_1 : $0_1, 8, $6_1 + 32 | 0, 3, $1_1 + 12 | 0, $1_1 + 8 | 0, $3, $5_1);
  global$0 = $1_1 + 16 | 0;
  $2_1 = $0_1;
  $1973($6_1, 8, 53464);
  if (($1936($6_1, 23) | 0) < 0) {
   $1756($1944($6_1, 12))
  }
  $1973($6_1, 28, 53688);
  $0_1 = 0;
  while (1) {
   $3 = $1944($6_1, 44);
   $1986($6_1, 8, $1963(($6_1 + ($0_1 << 2) | 0) + 32 | 0, 0));
   $4_1 = $6_1 + 8 | 0;
   $1_1 = fimport$1(72796, $4_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($6_1, 8, $0_1);
   $5_1 = $3;
   $3 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($5_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 3) {
    continue
   }
   break;
  };
  global$0 = $6_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1313($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = 0.0, $10_1 = 0.0, $11_1 = 0, $12_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $6_1 = global$0 - 48 | 0;
  global$0 = $6_1;
  $11_1 = $1944($0_1, 0);
  $12_1 = $1936($0_1, 11);
  $1973($6_1, 44, $1_1);
  $1973($6_1, 24, 53744);
  $1520($6_1 + 24 | 0);
  $9 = +fimport$5($1944($2_1, 0) | 0, 72808, $6_1 | 0);
  fimport$6($1944($6_1, 0) | 0);
  $10_1 = +fimport$5($1944($3, 0) | 0, 72808, $6_1 | 0);
  fimport$6($1944($6_1, 0) | 0);
  $1973($6_1 + 12 | 0, 0, 0);
  $1982($6_1, 4, 0, 0);
  $1973($6_1, 0, 53464);
  $1973($6_1, 16, $4_1);
  if (($1944($4_1, 0) | 0) != 2) {
   $1506($6_1)
  }
  $7_1 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($9 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $7_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($9 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $7_1 = Math_fround($9);
  }
  $2_1 = ($12_1 | 0) < 0;
  $1973($6_1, 0, 53312);
  $3 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($6_1, 4), wasm2js_i32$4 = $6_1 + 4 | 0, wasm2js_i32$5 = ($1936($6_1, 15) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($6_1, 16), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $8 = Math_fround(3402823466385288598117041.0e14);
  label$2 : {
   if ($10_1 >= 3402823466385288598117041.0e14) {
    break label$2
   }
   $8 = Math_fround(-3402823466385288598117041.0e14);
   if ($10_1 <= -3402823466385288598117041.0e14) {
    break label$2
   }
   $8 = Math_fround($10_1);
  }
  $1986($1_1, 8, $8);
  $1986($1_1, 12, $7_1);
  $0_1 = $653($2_1 ? $11_1 : $0_1, 8, $6_1 + 28 | 0, 4, $1_1 + 12 | 0, $1_1 + 8 | 0, $3, $5_1);
  global$0 = $1_1 + 16 | 0;
  $2_1 = $0_1;
  $1973($6_1, 0, 53464);
  if (($1936($6_1, 15) | 0) < 0) {
   $1756($1944($6_1, 4))
  }
  $1973($6_1, 24, 53744);
  $0_1 = 0;
  while (1) {
   $3 = $1944($6_1, 44);
   $1986($6_1, 0, $1963(($6_1 + ($0_1 << 2) | 0) + 28 | 0, 0));
   $1_1 = fimport$1(72796, $6_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($6_1, 0, $0_1);
   $4_1 = $3;
   $3 = fimport$1(72760, $6_1 | 0) | 0;
   fimport$3($4_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 4) {
    continue
   }
   break;
  };
  global$0 = $6_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1314($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = Math_fround(0), $8 = 0.0, $9 = 0.0, $10_1 = 0, $11_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $6_1 = global$0 - 32 | 0;
  global$0 = $6_1;
  $10_1 = $1944($0_1, 0);
  $11_1 = $1936($0_1, 11);
  $1973($6_1, 28, $1_1);
  $1973($6_1, 20, 53576);
  $1508($6_1 + 20 | 0);
  $8 = +fimport$5($1944($2_1, 0) | 0, 72808, $6_1 | 0);
  fimport$6($1944($6_1, 0) | 0);
  $9 = +fimport$5($1944($3, 0) | 0, 72808, $6_1 | 0);
  fimport$6($1944($6_1, 0) | 0);
  $1973($6_1 + 12 | 0, 0, 0);
  $1982($6_1, 4, 0, 0);
  $1973($6_1, 0, 53464);
  $1973($6_1, 16, $4_1);
  if (($1944($4_1, 0) | 0) != 2) {
   $1506($6_1)
  }
  $3 = ($11_1 | 0) < 0;
  $1973($6_1, 0, 53312);
  $2_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($6_1, 4), wasm2js_i32$4 = $6_1 + 4 | 0, wasm2js_i32$5 = ($1936($6_1, 15) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($6_1, 16), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $4_1 = $6_1 + 24 | 0;
  $1986($1_1, 4, Math_fround(Math_fround($1963($4_1, 0) * Math_fround(360.0)) / Math_fround(6.2831854820251465)));
  $7_1 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($8 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $7_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($8 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $7_1 = Math_fround($8);
  }
  $1986($1_1, 12, $7_1);
  $7_1 = Math_fround(3402823466385288598117041.0e14);
  label$2 : {
   if ($9 >= 3402823466385288598117041.0e14) {
    break label$2
   }
   $7_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($9 <= -3402823466385288598117041.0e14) {
    break label$2
   }
   $7_1 = Math_fround($9);
  }
  $1986($1_1, 8, $7_1);
  $0_1 = $652($3 ? $10_1 : $0_1, 8, $1_1 + 4 | 0, $1_1 + 12 | 0, $1_1 + 8 | 0, $2_1 ? $2_1 : 9442, $5_1);
  $1986($4_1, 0, Math_fround(Math_fround($1963($1_1, 4) * Math_fround(6.2831854820251465)) / Math_fround(360.0)));
  global$0 = $1_1 + 16 | 0;
  $1_1 = $0_1;
  $1973($6_1, 0, 53464);
  if (($1936($6_1, 15) | 0) < 0) {
   $1756($1944($6_1, 4))
  }
  $1973($6_1, 20, 53576);
  $2_1 = $1944($6_1, 28);
  $1986($6_1, 0, $1963($6_1, 24));
  $0_1 = fimport$1(72796, $6_1 | 0) | 0;
  $2_1 = $1944($2_1, 0);
  $1973($6_1, 0, 0);
  $3 = $2_1;
  $2_1 = fimport$1(72760, $6_1 | 0) | 0;
  fimport$3($3 | 0, $2_1 | 0, $0_1 | 0);
  fimport$4($2_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $6_1 + 32 | 0;
  return $1_1 | 0;
 }
 
 function $1315($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0;
  $7_1 = global$0 - 32 | 0;
  global$0 = $7_1;
  $8 = $1944($1_1, 0);
  if ($8 >>> 0 < 2147483632) {
   label$2 : {
    if ($8 >>> 0 <= 10) {
     $1968($7_1, 31, $8);
     $9 = $7_1 + 20 | 0;
     break label$2;
    }
    $10_1 = ($8 | 15) + 1 | 0;
    $9 = $1783($10_1);
    $1973($7_1, 28, $10_1 | -2147483648);
    $1973($7_1, 20, $9);
    $1973($7_1, 24, $8);
   }
   if ($8) {
    $1602($9, $1_1 + 4 | 0, $8)
   }
   $1968($8 + $9 | 0, 0, 0);
   $1973($7_1, 12, $5_1);
   $1973($7_1, 16, $2_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($7_1 + 20 | 0, $7_1 + 16 | 0, $3, $4_1, $7_1 + 12 | 0, $6_1) | 0;
   fimport$4($1944($7_1, 12) | 0);
   fimport$4($1944($7_1, 16) | 0);
   if (($1936($7_1, 31) | 0) < 0) {
    $1756($1944($7_1, 20))
   }
   global$0 = $7_1 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1316($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = 0.0, $9 = 0, $10_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $6_1 = global$0 - 32 | 0;
  global$0 = $6_1;
  $9 = $1944($0_1, 0);
  $10_1 = $1936($0_1, 11);
  $1973($6_1, 20, 53228);
  $1973($6_1, 28, $1_1);
  $1_1 = $1944($1_1, 0);
  $1973($6_1, 0, 0);
  $7_1 = fimport$1(72760, $6_1 | 0) | 0;
  $1_1 = fimport$7($1_1 | 0, $7_1 | 0) | 0;
  fimport$4($7_1 | 0);
  $8 = +fimport$5($1_1 | 0, 72724, $6_1 | 0);
  fimport$6($1944($6_1, 0) | 0);
  $1973($6_1, 24, Math_abs($8) < 2147483648.0 ? ~~$8 : -2147483648);
  fimport$4($1_1 | 0);
  $1973($6_1 + 12 | 0, 0, 0);
  $1982($6_1, 4, 0, 0);
  $1973($6_1, 0, 53464);
  $1973($6_1, 16, $4_1);
  if (($1944($4_1, 0) | 0) != 2) {
   $1506($6_1)
  }
  $1973($6_1, 0, 53312);
  $1_1 = $659(($10_1 | 0) < 0 ? $9 : $0_1, $6_1 + 24 | 0, $2_1, $3, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($6_1, 4), wasm2js_i32$4 = $6_1 + 4 | 0, wasm2js_i32$5 = ($1936($6_1, 15) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($6_1, 16), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $5_1);
  $1973($6_1, 0, 53464);
  if (($1936($6_1, 15) | 0) < 0) {
   $1756($1944($6_1, 4))
  }
  $1973($6_1, 20, 53228);
  $2_1 = $1944($6_1, 28);
  $1973($6_1, 0, $1944($6_1, 24));
  $0_1 = fimport$1(72724, $6_1 | 0) | 0;
  $2_1 = $1944($2_1, 0);
  $1973($6_1, 0, 0);
  $3 = $2_1;
  $2_1 = fimport$1(72760, $6_1 | 0) | 0;
  fimport$3($3 | 0, $2_1 | 0, $0_1 | 0);
  fimport$4($2_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $6_1 + 32 | 0;
  return $1_1 | 0;
 }
 
 function $1317($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $6_1 = global$0 - 48 | 0;
  global$0 = $6_1;
  $8 = $1944($0_1, 0);
  $9 = $1936($0_1, 11);
  $1973($6_1, 44, $1_1);
  $1973($6_1, 32, 53896);
  $7_1 = $6_1 + 32 | 0;
  $1524($7_1);
  $1973($6_1 + 20 | 0, 0, 0);
  $1982($6_1, 12, 0, 0);
  $1973($6_1, 8, 53464);
  $1973($6_1, 24, $4_1);
  if (($1944($4_1, 0) | 0) != 2) {
   $1506($6_1 + 8 | 0)
  }
  $1973($6_1, 8, 53312);
  $4_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($6_1, 12), wasm2js_i32$4 = $6_1 + 12 | 0, wasm2js_i32$5 = ($1936($6_1, 23) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($6_1, 24), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, $3);
  $1973($1_1, 12, $2_1);
  $0_1 = $653(($9 | 0) < 0 ? $8 : $0_1, 4, $7_1 + 4 | 0, 2, $1_1 + 12 | 0, $1_1 + 8 | 0, $4_1, $5_1);
  global$0 = $1_1 + 16 | 0;
  $2_1 = $0_1;
  $1973($6_1, 8, 53464);
  if (($1936($6_1, 23) | 0) < 0) {
   $1756($1944($6_1, 12))
  }
  $1973($6_1, 32, 53896);
  $0_1 = 0;
  while (1) {
   $3 = $1944($6_1, 44);
   $1973($6_1, 8, $1944(($6_1 + ($0_1 << 2) | 0) + 36 | 0, 0));
   $4_1 = $6_1 + 8 | 0;
   $1_1 = fimport$1(72724, $4_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($6_1, 8, $0_1);
   $5_1 = $3;
   $3 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($5_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 2) {
    continue
   }
   break;
  };
  global$0 = $6_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1318($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $6_1 = global$0 - 48 | 0;
  global$0 = $6_1;
  $8 = $1944($0_1, 0);
  $9 = $1936($0_1, 11);
  $1973($6_1, 44, $1_1);
  $1973($6_1, 28, 53952);
  $7_1 = $6_1 + 28 | 0;
  $1528($7_1);
  $1973($6_1 + 20 | 0, 0, 0);
  $1982($6_1, 12, 0, 0);
  $1973($6_1, 8, 53464);
  $1973($6_1, 24, $4_1);
  if (($1944($4_1, 0) | 0) != 2) {
   $1506($6_1 + 8 | 0)
  }
  $1973($6_1, 8, 53312);
  $4_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($6_1, 12), wasm2js_i32$4 = $6_1 + 12 | 0, wasm2js_i32$5 = ($1936($6_1, 23) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($6_1, 24), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, $3);
  $1973($1_1, 12, $2_1);
  $0_1 = $653(($9 | 0) < 0 ? $8 : $0_1, 4, $7_1 + 4 | 0, 3, $1_1 + 12 | 0, $1_1 + 8 | 0, $4_1, $5_1);
  global$0 = $1_1 + 16 | 0;
  $2_1 = $0_1;
  $1973($6_1, 8, 53464);
  if (($1936($6_1, 23) | 0) < 0) {
   $1756($1944($6_1, 12))
  }
  $1973($6_1, 28, 53952);
  $0_1 = 0;
  while (1) {
   $3 = $1944($6_1, 44);
   $1973($6_1, 8, $1944(($6_1 + ($0_1 << 2) | 0) + 32 | 0, 0));
   $4_1 = $6_1 + 8 | 0;
   $1_1 = fimport$1(72724, $4_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($6_1, 8, $0_1);
   $5_1 = $3;
   $3 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($5_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 3) {
    continue
   }
   break;
  };
  global$0 = $6_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1319($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $6_1 = global$0 - 48 | 0;
  global$0 = $6_1;
  $8 = $1944($0_1, 0);
  $9 = $1936($0_1, 11);
  $1973($6_1, 44, $1_1);
  $1973($6_1, 24, 54008);
  $7_1 = $6_1 + 24 | 0;
  $1532($7_1);
  $1973($6_1 + 12 | 0, 0, 0);
  $1982($6_1, 4, 0, 0);
  $1973($6_1, 0, 53464);
  $1973($6_1, 16, $4_1);
  if (($1944($4_1, 0) | 0) != 2) {
   $1506($6_1)
  }
  $1973($6_1, 0, 53312);
  $4_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($6_1, 4), wasm2js_i32$4 = $6_1 + 4 | 0, wasm2js_i32$5 = ($1936($6_1, 15) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($6_1, 16), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, $3);
  $1973($1_1, 12, $2_1);
  $0_1 = $653(($9 | 0) < 0 ? $8 : $0_1, 4, $7_1 + 4 | 0, 4, $1_1 + 12 | 0, $1_1 + 8 | 0, $4_1, $5_1);
  global$0 = $1_1 + 16 | 0;
  $2_1 = $0_1;
  $1973($6_1, 0, 53464);
  if (($1936($6_1, 15) | 0) < 0) {
   $1756($1944($6_1, 4))
  }
  $1973($6_1, 24, 54008);
  $0_1 = 0;
  while (1) {
   $3 = $1944($6_1, 44);
   $1973($6_1, 0, $1944(($6_1 + ($0_1 << 2) | 0) + 28 | 0, 0));
   $1_1 = fimport$1(72724, $6_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($6_1, 0, $0_1);
   $4_1 = $3;
   $3 = fimport$1(72760, $6_1 | 0) | 0;
   fimport$3($4_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 4) {
    continue
   }
   break;
  };
  global$0 = $6_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1320($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  var $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0;
  $8 = global$0 - 32 | 0;
  global$0 = $8;
  $9 = $1944($1_1, 0);
  if ($9 >>> 0 < 2147483632) {
   label$2 : {
    if ($9 >>> 0 <= 10) {
     $1968($8, 31, $9);
     $10_1 = $8 + 20 | 0;
     break label$2;
    }
    $11_1 = ($9 | 15) + 1 | 0;
    $10_1 = $1783($11_1);
    $1973($8, 28, $11_1 | -2147483648);
    $1973($8, 20, $10_1);
    $1973($8, 24, $9);
   }
   if ($9) {
    $1602($10_1, $1_1 + 4 | 0, $9)
   }
   $1968($9 + $10_1 | 0, 0, 0);
   $1973($8, 12, $4_1);
   $1973($8, 16, $3);
   $1973($8, 8, $5_1);
   $1973($8, 4, $6_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($8 + 20 | 0, $2_1, $8 + 16 | 0, $8 + 12 | 0, $8 + 8 | 0, $8 + 4 | 0, $7_1) | 0;
   fimport$4($1944($8, 4) | 0);
   fimport$4($1944($8, 8) | 0);
   fimport$4($1944($8, 12) | 0);
   fimport$4($1944($8, 16) | 0);
   if (($1936($8, 31) | 0) < 0) {
    $1756($1944($8, 20))
   }
   global$0 = $8 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1321($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = 0.0, $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $7_1 = global$0 - 96 | 0;
  global$0 = $7_1;
  label$1 : {
   label$2 : {
    switch ($1_1 | 0) {
    case 0:
     $9 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1_1 = $1536($7_1 + 32 | 0, $2_1);
     $1973($7_1, 12, 54160);
     $1973($7_1, 20, $3);
     $2_1 = $1944($3, 0);
     if (($2_1 | 0) != 2) {
      $8 = +fimport$5($2_1 | 0, 72688, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1968($7_1, 16, Math_abs($8) < 2147483648.0 ? ~~$8 : -2147483648);
     }
     $2_1 = $1944($1944($7_1, 20), 0);
     $1973($7_1, 80, 54160);
     $1973($7_1, 88, $4_1);
     $3 = $1944($4_1, 0);
     if (($3 | 0) != 2) {
      $8 = +fimport$5($3 | 0, 72688, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1968($7_1, 84, Math_abs($8) < 2147483648.0 ? ~~$8 : -2147483648);
     }
     $3 = $1944($1944($7_1, 88), 0);
     $1973($7_1 + 68 | 0, 0, 0);
     $1982($7_1, 60, 0, 0);
     $1973($7_1, 56, 53464);
     $1973($7_1, 72, $5_1);
     if (($1944($5_1, 0) | 0) != 2) {
      $1506($7_1 + 56 | 0)
     }
     $1973($7_1, 56, 53312);
     $4_1 = ($10_1 | 0) < 0 ? $9 : $0_1;
     $0_1 = $1944($1_1, 0);
     $9 = $653($4_1, 0, $0_1, $1944($1_1, 4) - $0_1 | 0, ($2_1 | 0) != 2 ? $7_1 + 16 | 0 : 0, ($3 | 0) != 2 ? $7_1 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 60), wasm2js_i32$4 = $7_1 + 60 | 0, wasm2js_i32$5 = ($1936($7_1, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $6_1);
     $1973($7_1, 56, 53464);
     if (($1936($7_1, 71) | 0) < 0) {
      $1756($1944($7_1, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 | 0;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95828) & 1)) {
      $4_1 = fimport$17(2, 54204) | 0;
      $1968(0, 95828, 1);
      $1973(0, 95824, $4_1);
     }
     $4_1 = $1944(0, 95824);
     $1973($7_1, 60, $0_1);
     $1973($7_1, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $7_1 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 1:
     $9 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1_1 = $1537($7_1 + 32 | 0, $2_1);
     $1973($7_1, 12, 54220);
     $1973($7_1, 20, $3);
     $2_1 = $1944($3, 0);
     if (($2_1 | 0) != 2) {
      $8 = +fimport$5($2_1 | 0, 72676, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1968($7_1, 16, $8 < 4294967296.0 & $8 >= 0.0 ? ~~$8 >>> 0 : 0);
     }
     $2_1 = $1944($1944($7_1, 20), 0);
     $1973($7_1, 80, 54220);
     $1973($7_1, 88, $4_1);
     $3 = $1944($4_1, 0);
     if (($3 | 0) != 2) {
      $8 = +fimport$5($3 | 0, 72676, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1968($7_1, 84, $8 < 4294967296.0 & $8 >= 0.0 ? ~~$8 >>> 0 : 0);
     }
     $3 = $1944($1944($7_1, 88), 0);
     $1973($7_1 + 68 | 0, 0, 0);
     $1982($7_1, 60, 0, 0);
     $1973($7_1, 56, 53464);
     $1973($7_1, 72, $5_1);
     if (($1944($5_1, 0) | 0) != 2) {
      $1506($7_1 + 56 | 0)
     }
     $1973($7_1, 56, 53312);
     $4_1 = ($10_1 | 0) < 0 ? $9 : $0_1;
     $0_1 = $1944($1_1, 0);
     $9 = $653($4_1, 1, $0_1, $1944($1_1, 4) - $0_1 | 0, ($2_1 | 0) != 2 ? $7_1 + 16 | 0 : 0, ($3 | 0) != 2 ? $7_1 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 60), wasm2js_i32$4 = $7_1 + 60 | 0, wasm2js_i32$5 = ($1936($7_1, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $6_1);
     $1973($7_1, 56, 53464);
     if (($1936($7_1, 71) | 0) < 0) {
      $1756($1944($7_1, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 | 0;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95836) & 1)) {
      $4_1 = fimport$17(2, 54264) | 0;
      $1968(0, 95836, 1);
      $1973(0, 95832, $4_1);
     }
     $4_1 = $1944(0, 95832);
     $1973($7_1, 60, $0_1);
     $1973($7_1, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $7_1 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 2:
     $9 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1_1 = $1538($7_1 + 32 | 0, $2_1);
     $1973($7_1, 12, 54320);
     $1973($7_1, 20, $3);
     $2_1 = $1944($3, 0);
     if (($2_1 | 0) != 2) {
      $8 = +fimport$5($2_1 | 0, 72700, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1970($7_1, 16, Math_abs($8) < 2147483648.0 ? ~~$8 : -2147483648);
     }
     $2_1 = $1944($1944($7_1, 20), 0);
     $1973($7_1, 80, 54320);
     $1973($7_1, 88, $4_1);
     $3 = $1944($4_1, 0);
     if (($3 | 0) != 2) {
      $8 = +fimport$5($3 | 0, 72700, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1970($7_1, 84, Math_abs($8) < 2147483648.0 ? ~~$8 : -2147483648);
     }
     $3 = $1944($1944($7_1, 88), 0);
     $1973($7_1 + 68 | 0, 0, 0);
     $1982($7_1, 60, 0, 0);
     $1973($7_1, 56, 53464);
     $1973($7_1, 72, $5_1);
     if (($1944($5_1, 0) | 0) != 2) {
      $1506($7_1 + 56 | 0)
     }
     $1973($7_1, 56, 53312);
     $4_1 = ($10_1 | 0) < 0 ? $9 : $0_1;
     $0_1 = $1944($1_1, 0);
     $9 = $653($4_1, 2, $0_1, $1944($1_1, 4) - $0_1 >> 1, ($2_1 | 0) != 2 ? $7_1 + 16 | 0 : 0, ($3 | 0) != 2 ? $7_1 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 60), wasm2js_i32$4 = $7_1 + 60 | 0, wasm2js_i32$5 = ($1936($7_1, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $6_1);
     $1973($7_1, 56, 53464);
     if (($1936($7_1, 71) | 0) < 0) {
      $1756($1944($7_1, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 1;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95844) & 1)) {
      $4_1 = fimport$17(2, 54364) | 0;
      $1968(0, 95844, 1);
      $1973(0, 95840, $4_1);
     }
     $4_1 = $1944(0, 95840);
     $1973($7_1, 60, $0_1);
     $1973($7_1, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $7_1 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 3:
     $9 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1_1 = $1539($7_1 + 32 | 0, $2_1);
     $1973($7_1, 12, 54420);
     $1973($7_1, 20, $3);
     $2_1 = $1944($3, 0);
     if (($2_1 | 0) != 2) {
      $8 = +fimport$5($2_1 | 0, 72712, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1970($7_1, 16, $8 < 4294967296.0 & $8 >= 0.0 ? ~~$8 >>> 0 : 0);
     }
     $2_1 = $1944($1944($7_1, 20), 0);
     $1973($7_1, 80, 54420);
     $1973($7_1, 88, $4_1);
     $3 = $1944($4_1, 0);
     if (($3 | 0) != 2) {
      $8 = +fimport$5($3 | 0, 72712, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1970($7_1, 84, $8 < 4294967296.0 & $8 >= 0.0 ? ~~$8 >>> 0 : 0);
     }
     $3 = $1944($1944($7_1, 88), 0);
     $1973($7_1 + 68 | 0, 0, 0);
     $1982($7_1, 60, 0, 0);
     $1973($7_1, 56, 53464);
     $1973($7_1, 72, $5_1);
     if (($1944($5_1, 0) | 0) != 2) {
      $1506($7_1 + 56 | 0)
     }
     $1973($7_1, 56, 53312);
     $4_1 = ($10_1 | 0) < 0 ? $9 : $0_1;
     $0_1 = $1944($1_1, 0);
     $9 = $653($4_1, 3, $0_1, $1944($1_1, 4) - $0_1 >> 1, ($2_1 | 0) != 2 ? $7_1 + 16 | 0 : 0, ($3 | 0) != 2 ? $7_1 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 60), wasm2js_i32$4 = $7_1 + 60 | 0, wasm2js_i32$5 = ($1936($7_1, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $6_1);
     $1973($7_1, 56, 53464);
     if (($1936($7_1, 71) | 0) < 0) {
      $1756($1944($7_1, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 1;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95852) & 1)) {
      $4_1 = fimport$17(2, 54464) | 0;
      $1968(0, 95852, 1);
      $1973(0, 95848, $4_1);
     }
     $4_1 = $1944(0, 95848);
     $1973($7_1, 60, $0_1);
     $1973($7_1, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $7_1 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 4:
     $9 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1_1 = $1540($7_1 + 32 | 0, $2_1);
     $1973($7_1, 12, 54520);
     $1973($7_1, 20, $3);
     $2_1 = $1944($3, 0);
     if (($2_1 | 0) != 2) {
      $8 = +fimport$5($2_1 | 0, 72724, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1973($7_1, 16, Math_abs($8) < 2147483648.0 ? ~~$8 : -2147483648);
     }
     $2_1 = $1944($1944($7_1, 20), 0);
     $1973($7_1, 80, 54520);
     $1973($7_1, 88, $4_1);
     $3 = $1944($4_1, 0);
     if (($3 | 0) != 2) {
      $8 = +fimport$5($3 | 0, 72724, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1973($7_1, 84, Math_abs($8) < 2147483648.0 ? ~~$8 : -2147483648);
     }
     $3 = $1944($1944($7_1, 88), 0);
     $1973($7_1 + 68 | 0, 0, 0);
     $1982($7_1, 60, 0, 0);
     $1973($7_1, 56, 53464);
     $1973($7_1, 72, $5_1);
     if (($1944($5_1, 0) | 0) != 2) {
      $1506($7_1 + 56 | 0)
     }
     $1973($7_1, 56, 53312);
     $4_1 = ($10_1 | 0) < 0 ? $9 : $0_1;
     $0_1 = $1944($1_1, 0);
     $9 = $653($4_1, 4, $0_1, $1944($1_1, 4) - $0_1 >> 2, ($2_1 | 0) != 2 ? $7_1 + 16 | 0 : 0, ($3 | 0) != 2 ? $7_1 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 60), wasm2js_i32$4 = $7_1 + 60 | 0, wasm2js_i32$5 = ($1936($7_1, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $6_1);
     $1973($7_1, 56, 53464);
     if (($1936($7_1, 71) | 0) < 0) {
      $1756($1944($7_1, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 2;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95860) & 1)) {
      $4_1 = fimport$17(2, 54564) | 0;
      $1968(0, 95860, 1);
      $1973(0, 95856, $4_1);
     }
     $4_1 = $1944(0, 95856);
     $1973($7_1, 60, $0_1);
     $1973($7_1, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $7_1 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 5:
     $9 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1_1 = $1541($7_1 + 32 | 0, $2_1);
     $1973($7_1, 12, 54620);
     $1973($7_1, 20, $3);
     $2_1 = $1944($3, 0);
     if (($2_1 | 0) != 2) {
      $8 = +fimport$5($2_1 | 0, 72736, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1973($7_1, 16, $8 < 4294967296.0 & $8 >= 0.0 ? ~~$8 >>> 0 : 0);
     }
     $2_1 = $1944($1944($7_1, 20), 0);
     $1973($7_1, 80, 54620);
     $1973($7_1, 88, $4_1);
     $3 = $1944($4_1, 0);
     if (($3 | 0) != 2) {
      $8 = +fimport$5($3 | 0, 72736, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1973($7_1, 84, $8 < 4294967296.0 & $8 >= 0.0 ? ~~$8 >>> 0 : 0);
     }
     $3 = $1944($1944($7_1, 88), 0);
     $1973($7_1 + 68 | 0, 0, 0);
     $1982($7_1, 60, 0, 0);
     $1973($7_1, 56, 53464);
     $1973($7_1, 72, $5_1);
     if (($1944($5_1, 0) | 0) != 2) {
      $1506($7_1 + 56 | 0)
     }
     $1973($7_1, 56, 53312);
     $4_1 = ($10_1 | 0) < 0 ? $9 : $0_1;
     $0_1 = $1944($1_1, 0);
     $9 = $653($4_1, 5, $0_1, $1944($1_1, 4) - $0_1 >> 2, ($2_1 | 0) != 2 ? $7_1 + 16 | 0 : 0, ($3 | 0) != 2 ? $7_1 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 60), wasm2js_i32$4 = $7_1 + 60 | 0, wasm2js_i32$5 = ($1936($7_1, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $6_1);
     $1973($7_1, 56, 53464);
     if (($1936($7_1, 71) | 0) < 0) {
      $1756($1944($7_1, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 2;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95868) & 1)) {
      $4_1 = fimport$17(2, 54664) | 0;
      $1968(0, 95868, 1);
      $1973(0, 95864, $4_1);
     }
     $4_1 = $1944(0, 95864);
     $1973($7_1, 60, $0_1);
     $1973($7_1, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $7_1 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 8:
     $9 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1_1 = $1542($7_1 + 32 | 0, $2_1);
     $1973($7_1, 12, 54720);
     $1973($7_1, 20, $3);
     $2_1 = $1944($3, 0);
     if (($2_1 | 0) != 2) {
      $8 = +fimport$5($2_1 | 0, 72808, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $11_1 = Math_fround(3402823466385288598117041.0e14);
      label$71 : {
       if ($8 >= 3402823466385288598117041.0e14) {
        break label$71
       }
       $11_1 = Math_fround(-3402823466385288598117041.0e14);
       if ($8 <= -3402823466385288598117041.0e14) {
        break label$71
       }
       $11_1 = Math_fround($8);
      }
      $1986($7_1, 16, $11_1);
     }
     $2_1 = $1944($1944($7_1, 20), 0);
     $1973($7_1, 80, 54720);
     $1973($7_1, 88, $4_1);
     $3 = $1944($4_1, 0);
     if (($3 | 0) != 2) {
      $8 = +fimport$5($3 | 0, 72808, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $11_1 = Math_fround(3402823466385288598117041.0e14);
      label$73 : {
       if ($8 >= 3402823466385288598117041.0e14) {
        break label$73
       }
       $11_1 = Math_fround(-3402823466385288598117041.0e14);
       if ($8 <= -3402823466385288598117041.0e14) {
        break label$73
       }
       $11_1 = Math_fround($8);
      }
      $1986($7_1, 84, $11_1);
     }
     $3 = $1944($1944($7_1, 88), 0);
     $1973($7_1 + 68 | 0, 0, 0);
     $1982($7_1, 60, 0, 0);
     $1973($7_1, 56, 53464);
     $1973($7_1, 72, $5_1);
     if (($1944($5_1, 0) | 0) != 2) {
      $1506($7_1 + 56 | 0)
     }
     $1973($7_1, 56, 53312);
     $4_1 = ($10_1 | 0) < 0 ? $9 : $0_1;
     $0_1 = $1944($1_1, 0);
     $9 = $653($4_1, 8, $0_1, $1944($1_1, 4) - $0_1 >> 2, ($2_1 | 0) != 2 ? $7_1 + 16 | 0 : 0, ($3 | 0) != 2 ? $7_1 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 60), wasm2js_i32$4 = $7_1 + 60 | 0, wasm2js_i32$5 = ($1936($7_1, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $6_1);
     $1973($7_1, 56, 53464);
     if (($1936($7_1, 71) | 0) < 0) {
      $1756($1944($7_1, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 2;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95876) & 1)) {
      $4_1 = fimport$17(2, 54764) | 0;
      $1968(0, 95876, 1);
      $1973(0, 95872, $4_1);
     }
     $4_1 = $1944(0, 95872);
     $1973($7_1, 60, $0_1);
     $1973($7_1, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $7_1 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 9:
     break label$2;
    default:
     break label$1;
    };
   }
   $9 = $1944($0_1, 0);
   $10_1 = $1936($0_1, 11);
   $1_1 = $1543($7_1 + 80 | 0, $2_1);
   $1973($7_1, 56, 54820);
   $1973($7_1, 72, $3);
   $2_1 = $1944($3, 0);
   if (($2_1 | 0) != 2) {
    $8 = +fimport$5($2_1 | 0, 72808, $7_1 + 32 | 0);
    fimport$6($1944($7_1, 32) | 0);
    $1990($7_1, 64, $8);
   }
   $2_1 = $1944($1944($7_1, 72), 0);
   $1973($7_1, 32, 54820);
   $1973($7_1, 48, $4_1);
   $3 = $1944($4_1, 0);
   if (($3 | 0) != 2) {
    $8 = +fimport$5($3 | 0, 72808, $7_1 + 12 | 0);
    fimport$6($1944($7_1, 12) | 0);
    $1990($7_1, 40, $8);
   }
   $3 = $1944($1944($7_1, 48), 0);
   $1973($7_1 + 24 | 0, 0, 0);
   $1982($7_1, 16, 0, 0);
   $1973($7_1, 12, 53464);
   $1973($7_1, 28, $5_1);
   if (($1944($5_1, 0) | 0) != 2) {
    $1506($7_1 + 12 | 0)
   }
   $1973($7_1, 12, 53312);
   $4_1 = ($10_1 | 0) < 0 ? $9 : $0_1;
   $0_1 = $1944($1_1, 0);
   $9 = $653($4_1, 9, $0_1, $1944($1_1, 4) - $0_1 >> 3, ($2_1 | 0) != 2 ? $7_1 - -64 | 0 : 0, ($3 | 0) != 2 ? $7_1 + 40 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 16), wasm2js_i32$4 = $7_1 + 16 | 0, wasm2js_i32$5 = ($1936($7_1, 27) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 28), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $6_1);
   $1973($7_1, 12, 53464);
   if (($1936($7_1, 27) | 0) < 0) {
    $1756($1944($7_1, 16))
   }
   $2_1 = $1944($1_1, 4);
   $0_1 = $1944($1_1, 0);
   $2_1 = $2_1 - $0_1 >> 3;
   $3 = $1944($1944($1_1, 12), 0);
   if (!($1937(0, 95884) & 1)) {
    $4_1 = fimport$17(2, 54864) | 0;
    $1968(0, 95884, 1);
    $1973(0, 95880, $4_1);
   }
   $4_1 = $1944(0, 95880);
   $1973($7_1, 60, $0_1);
   $1973($7_1, 56, $2_1);
   fimport$18($4_1 | 0, $3 | 0, 3559, $7_1 + 56 | 0);
   $0_1 = $1944($1_1, 0);
   if ($0_1) {
    $1973($1_1, 4, $0_1);
    $1756($0_1);
   }
  }
  global$0 = $7_1 + 96 | 0;
  return $9 | 0;
 }
 
 function $1322($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = 0.0, $11_1 = 0.0, $12_1 = 0, $13 = 0, $14 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $7_1 = global$0 - 48 | 0;
  global$0 = $7_1;
  $12_1 = $1944($0_1, 0);
  $13 = $1936($0_1, 11);
  $1982($7_1, 40, 0, 0);
  $14 = $763($1_1, $7_1 + 40 | 0);
  $1973($7_1, 36, $2_1);
  $1973($7_1, 28, 53576);
  $1508($7_1 + 28 | 0);
  $1_1 = $7_1 + 8 | 0;
  $10_1 = +fimport$5($1944($3, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($7_1, 8) | 0);
  $11_1 = +fimport$5($1944($4_1, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($7_1, 8) | 0);
  $1973($7_1 + 20 | 0, 0, 0);
  $1982($7_1, 12, 0, 0);
  $1973($7_1, 8, 53464);
  $1973($7_1, 24, $5_1);
  if (($1944($5_1, 0) | 0) != 2) {
   $1506($7_1 + 8 | 0)
  }
  $8 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($10_1 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $8 = Math_fround(-3402823466385288598117041.0e14);
   if ($10_1 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $8 = Math_fround($10_1);
  }
  $2_1 = ($13 | 0) < 0;
  $1973($7_1, 8, 53312);
  $3 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 12), wasm2js_i32$4 = $7_1 + 12 | 0, wasm2js_i32$5 = ($1936($7_1, 23) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 24), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $9 = Math_fround(3402823466385288598117041.0e14);
  label$2 : {
   if ($11_1 >= 3402823466385288598117041.0e14) {
    break label$2
   }
   $9 = Math_fround(-3402823466385288598117041.0e14);
   if ($11_1 <= -3402823466385288598117041.0e14) {
    break label$2
   }
   $9 = Math_fround($11_1);
  }
  $1986($1_1, 8, $9);
  $1986($1_1, 12, $8);
  $0_1 = $663($2_1 ? $12_1 : $0_1, $14, 8, $7_1 + 32 | 0, $1_1 + 12 | 0, $1_1 + 8 | 0, $3, $6_1);
  global$0 = $1_1 + 16 | 0;
  $1_1 = $0_1;
  $1973($7_1, 8, 53464);
  if (($1936($7_1, 23) | 0) < 0) {
   $1756($1944($7_1, 12))
  }
  $1973($7_1, 28, 53576);
  $2_1 = $1944($7_1, 36);
  $1986($7_1, 8, $1963($7_1, 32));
  $3 = $7_1 + 8 | 0;
  $0_1 = fimport$1(72796, $3 | 0) | 0;
  $2_1 = $1944($2_1, 0);
  $1973($7_1, 8, 0);
  $4_1 = $2_1;
  $2_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($4_1 | 0, $2_1 | 0, $0_1 | 0);
  fimport$4($2_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $7_1 + 48 | 0;
  return $1_1 | 0;
 }
 
 function $1323($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = 0, $9 = 0.0, $10_1 = 0, $11_1 = 0, $12_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $7_1 = global$0 - 48 | 0;
  global$0 = $7_1;
  $10_1 = $1944($0_1, 0);
  $11_1 = $1936($0_1, 11);
  $1982($7_1, 40, 0, 0);
  $12_1 = $763($1_1, $7_1 + 40 | 0);
  $1973($7_1, 28, 53228);
  $1973($7_1, 36, $2_1);
  $1_1 = $1944($2_1, 0);
  $1973($7_1, 8, 0);
  $2_1 = $7_1 + 8 | 0;
  $8 = fimport$1(72760, $2_1 | 0) | 0;
  $1_1 = fimport$7($1_1 | 0, $8 | 0) | 0;
  fimport$4($8 | 0);
  $9 = +fimport$5($1_1 | 0, 72724, $2_1 | 0);
  fimport$6($1944($7_1, 8) | 0);
  $1973($7_1, 32, Math_abs($9) < 2147483648.0 ? ~~$9 : -2147483648);
  fimport$4($1_1 | 0);
  $1973($7_1 + 20 | 0, 0, 0);
  $1982($7_1, 12, 0, 0);
  $1973($7_1, 8, 53464);
  $1973($7_1, 24, $5_1);
  if (($1944($5_1, 0) | 0) != 2) {
   $1506($7_1 + 8 | 0)
  }
  $1973($7_1, 8, 53312);
  $2_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 12), wasm2js_i32$4 = $7_1 + 12 | 0, wasm2js_i32$5 = ($1936($7_1, 23) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 24), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, $4_1);
  $1973($1_1, 12, $3);
  $0_1 = $663(($11_1 | 0) < 0 ? $10_1 : $0_1, $12_1, 4, $7_1 + 32 | 0, $1_1 + 12 | 0, $1_1 + 8 | 0, $2_1, $6_1);
  global$0 = $1_1 + 16 | 0;
  $1_1 = $0_1;
  $1973($7_1, 8, 53464);
  if (($1936($7_1, 23) | 0) < 0) {
   $1756($1944($7_1, 12))
  }
  $1973($7_1, 28, 53228);
  $2_1 = $1944($7_1, 36);
  $1973($7_1, 8, $1944($7_1, 32));
  $3 = $7_1 + 8 | 0;
  $0_1 = fimport$1(72724, $3 | 0) | 0;
  $2_1 = $1944($2_1, 0);
  $1973($7_1, 8, 0);
  $4_1 = $2_1;
  $2_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($4_1 | 0, $2_1 | 0, $0_1 | 0);
  fimport$4($2_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $7_1 + 48 | 0;
  return $1_1 | 0;
 }
 
 function $1324($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  $8 = $8 | 0;
  var $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0;
  $9 = global$0 - 32 | 0;
  global$0 = $9;
  $10_1 = $1944($1_1, 0);
  if ($10_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($10_1 >>> 0 <= 10) {
     $1968($9, 31, $10_1);
     $11_1 = $9 + 20 | 0;
     break label$2;
    }
    $12_1 = ($10_1 | 15) + 1 | 0;
    $11_1 = $1783($12_1);
    $1973($9, 28, $12_1 | -2147483648);
    $1973($9, 20, $11_1);
    $1973($9, 24, $10_1);
   }
   if ($10_1) {
    $1602($11_1, $1_1 + 4 | 0, $10_1)
   }
   $1968($10_1 + $11_1 | 0, 0, 0);
   $1973($9, 12, $4_1);
   $1973($9, 16, $2_1);
   $1973($9, 8, $5_1);
   $1973($9, 4, $6_1);
   $1973($9, 0, $7_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($9 + 20 | 0, $9 + 16 | 0, $3, $9 + 12 | 0, $9 + 8 | 0, $9 + 4 | 0, $9, $8) | 0;
   fimport$4($1944($9, 0) | 0);
   fimport$4($1944($9, 4) | 0);
   fimport$4($1944($9, 8) | 0);
   fimport$4($1944($9, 12) | 0);
   fimport$4($1944($9, 16) | 0);
   if (($1936($9, 31) | 0) < 0) {
    $1756($1944($9, 20))
   }
   global$0 = $9 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1325($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  var $8 = 0, $9 = 0.0, $10_1 = 0, $11_1 = 0, $12_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $8 = global$0 - 96 | 0;
  global$0 = $8;
  label$1 : {
   label$2 : {
    switch ($2_1 | 0) {
    case 0:
     $2_1 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1982($8, 88, 0, 0);
     $11_1 = $763($1_1, $8 + 88 | 0);
     $1_1 = $1536($8 + 24 | 0, $3);
     $3 = $1944($1_1, 0);
     $1973($8, 4, 54160);
     $1973($8, 12, $4_1);
     $4_1 = $1944($4_1, 0);
     if (($4_1 | 0) != 2) {
      $9 = +fimport$5($4_1 | 0, 72688, $8 + 48 | 0);
      fimport$6($1944($8, 48) | 0);
      $1968($8, 8, Math_abs($9) < 2147483648.0 ? ~~$9 : -2147483648);
     }
     $4_1 = $1944($1944($8, 12), 0);
     $1973($8, 72, 54160);
     $1973($8, 80, $5_1);
     $5_1 = $1944($5_1, 0);
     if (($5_1 | 0) != 2) {
      $9 = +fimport$5($5_1 | 0, 72688, $8 + 48 | 0);
      fimport$6($1944($8, 48) | 0);
      $1968($8, 76, Math_abs($9) < 2147483648.0 ? ~~$9 : -2147483648);
     }
     $5_1 = $1944($1944($8, 80), 0);
     $1973($8 + 60 | 0, 0, 0);
     $1982($8, 52, 0, 0);
     $1973($8, 48, 53464);
     $1973($8, 64, $6_1);
     if (($1944($6_1, 0) | 0) != 2) {
      $1506($8 + 48 | 0)
     }
     $1973($8, 48, 53312);
     $10_1 = $663(($10_1 | 0) < 0 ? $2_1 : $0_1, $11_1, 0, $3, ($4_1 | 0) != 2 ? $8 + 8 | 0 : 0, ($5_1 | 0) != 2 ? $8 + 76 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 52), wasm2js_i32$4 = $8 + 52 | 0, wasm2js_i32$5 = ($1936($8, 63) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 64), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $7_1);
     $1973($8, 48, 53464);
     if (($1936($8, 63) | 0) < 0) {
      $1756($1944($8, 52))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 | 0;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95828) & 1)) {
      $4_1 = fimport$17(2, 54204) | 0;
      $1968(0, 95828, 1);
      $1973(0, 95824, $4_1);
     }
     $4_1 = $1944(0, 95824);
     $1973($8, 52, $0_1);
     $1973($8, 48, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $8 + 48 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 1:
     $2_1 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1982($8, 88, 0, 0);
     $11_1 = $763($1_1, $8 + 88 | 0);
     $1_1 = $1537($8 + 24 | 0, $3);
     $3 = $1944($1_1, 0);
     $1973($8, 4, 54220);
     $1973($8, 12, $4_1);
     $4_1 = $1944($4_1, 0);
     if (($4_1 | 0) != 2) {
      $9 = +fimport$5($4_1 | 0, 72676, $8 + 48 | 0);
      fimport$6($1944($8, 48) | 0);
      $1968($8, 8, $9 < 4294967296.0 & $9 >= 0.0 ? ~~$9 >>> 0 : 0);
     }
     $4_1 = $1944($1944($8, 12), 0);
     $1973($8, 72, 54220);
     $1973($8, 80, $5_1);
     $5_1 = $1944($5_1, 0);
     if (($5_1 | 0) != 2) {
      $9 = +fimport$5($5_1 | 0, 72676, $8 + 48 | 0);
      fimport$6($1944($8, 48) | 0);
      $1968($8, 76, $9 < 4294967296.0 & $9 >= 0.0 ? ~~$9 >>> 0 : 0);
     }
     $5_1 = $1944($1944($8, 80), 0);
     $1973($8 + 60 | 0, 0, 0);
     $1982($8, 52, 0, 0);
     $1973($8, 48, 53464);
     $1973($8, 64, $6_1);
     if (($1944($6_1, 0) | 0) != 2) {
      $1506($8 + 48 | 0)
     }
     $1973($8, 48, 53312);
     $10_1 = $663(($10_1 | 0) < 0 ? $2_1 : $0_1, $11_1, 1, $3, ($4_1 | 0) != 2 ? $8 + 8 | 0 : 0, ($5_1 | 0) != 2 ? $8 + 76 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 52), wasm2js_i32$4 = $8 + 52 | 0, wasm2js_i32$5 = ($1936($8, 63) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 64), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $7_1);
     $1973($8, 48, 53464);
     if (($1936($8, 63) | 0) < 0) {
      $1756($1944($8, 52))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 | 0;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95836) & 1)) {
      $4_1 = fimport$17(2, 54264) | 0;
      $1968(0, 95836, 1);
      $1973(0, 95832, $4_1);
     }
     $4_1 = $1944(0, 95832);
     $1973($8, 52, $0_1);
     $1973($8, 48, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $8 + 48 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 2:
     $2_1 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1982($8, 88, 0, 0);
     $11_1 = $763($1_1, $8 + 88 | 0);
     $1_1 = $1538($8 + 24 | 0, $3);
     $3 = $1944($1_1, 0);
     $1973($8, 4, 54320);
     $1973($8, 12, $4_1);
     $4_1 = $1944($4_1, 0);
     if (($4_1 | 0) != 2) {
      $9 = +fimport$5($4_1 | 0, 72700, $8 + 48 | 0);
      fimport$6($1944($8, 48) | 0);
      $1970($8, 8, Math_abs($9) < 2147483648.0 ? ~~$9 : -2147483648);
     }
     $4_1 = $1944($1944($8, 12), 0);
     $1973($8, 72, 54320);
     $1973($8, 80, $5_1);
     $5_1 = $1944($5_1, 0);
     if (($5_1 | 0) != 2) {
      $9 = +fimport$5($5_1 | 0, 72700, $8 + 48 | 0);
      fimport$6($1944($8, 48) | 0);
      $1970($8, 76, Math_abs($9) < 2147483648.0 ? ~~$9 : -2147483648);
     }
     $5_1 = $1944($1944($8, 80), 0);
     $1973($8 + 60 | 0, 0, 0);
     $1982($8, 52, 0, 0);
     $1973($8, 48, 53464);
     $1973($8, 64, $6_1);
     if (($1944($6_1, 0) | 0) != 2) {
      $1506($8 + 48 | 0)
     }
     $1973($8, 48, 53312);
     $10_1 = $663(($10_1 | 0) < 0 ? $2_1 : $0_1, $11_1, 2, $3, ($4_1 | 0) != 2 ? $8 + 8 | 0 : 0, ($5_1 | 0) != 2 ? $8 + 76 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 52), wasm2js_i32$4 = $8 + 52 | 0, wasm2js_i32$5 = ($1936($8, 63) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 64), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $7_1);
     $1973($8, 48, 53464);
     if (($1936($8, 63) | 0) < 0) {
      $1756($1944($8, 52))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 1;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95844) & 1)) {
      $4_1 = fimport$17(2, 54364) | 0;
      $1968(0, 95844, 1);
      $1973(0, 95840, $4_1);
     }
     $4_1 = $1944(0, 95840);
     $1973($8, 52, $0_1);
     $1973($8, 48, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $8 + 48 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 3:
     $2_1 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1982($8, 88, 0, 0);
     $11_1 = $763($1_1, $8 + 88 | 0);
     $1_1 = $1539($8 + 24 | 0, $3);
     $3 = $1944($1_1, 0);
     $1973($8, 4, 54420);
     $1973($8, 12, $4_1);
     $4_1 = $1944($4_1, 0);
     if (($4_1 | 0) != 2) {
      $9 = +fimport$5($4_1 | 0, 72712, $8 + 48 | 0);
      fimport$6($1944($8, 48) | 0);
      $1970($8, 8, $9 < 4294967296.0 & $9 >= 0.0 ? ~~$9 >>> 0 : 0);
     }
     $4_1 = $1944($1944($8, 12), 0);
     $1973($8, 72, 54420);
     $1973($8, 80, $5_1);
     $5_1 = $1944($5_1, 0);
     if (($5_1 | 0) != 2) {
      $9 = +fimport$5($5_1 | 0, 72712, $8 + 48 | 0);
      fimport$6($1944($8, 48) | 0);
      $1970($8, 76, $9 < 4294967296.0 & $9 >= 0.0 ? ~~$9 >>> 0 : 0);
     }
     $5_1 = $1944($1944($8, 80), 0);
     $1973($8 + 60 | 0, 0, 0);
     $1982($8, 52, 0, 0);
     $1973($8, 48, 53464);
     $1973($8, 64, $6_1);
     if (($1944($6_1, 0) | 0) != 2) {
      $1506($8 + 48 | 0)
     }
     $1973($8, 48, 53312);
     $10_1 = $663(($10_1 | 0) < 0 ? $2_1 : $0_1, $11_1, 3, $3, ($4_1 | 0) != 2 ? $8 + 8 | 0 : 0, ($5_1 | 0) != 2 ? $8 + 76 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 52), wasm2js_i32$4 = $8 + 52 | 0, wasm2js_i32$5 = ($1936($8, 63) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 64), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $7_1);
     $1973($8, 48, 53464);
     if (($1936($8, 63) | 0) < 0) {
      $1756($1944($8, 52))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 1;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95852) & 1)) {
      $4_1 = fimport$17(2, 54464) | 0;
      $1968(0, 95852, 1);
      $1973(0, 95848, $4_1);
     }
     $4_1 = $1944(0, 95848);
     $1973($8, 52, $0_1);
     $1973($8, 48, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $8 + 48 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 4:
     $2_1 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1982($8, 88, 0, 0);
     $11_1 = $763($1_1, $8 + 88 | 0);
     $1_1 = $1540($8 + 24 | 0, $3);
     $3 = $1944($1_1, 0);
     $1973($8, 4, 54520);
     $1973($8, 12, $4_1);
     $4_1 = $1944($4_1, 0);
     if (($4_1 | 0) != 2) {
      $9 = +fimport$5($4_1 | 0, 72724, $8 + 48 | 0);
      fimport$6($1944($8, 48) | 0);
      $1973($8, 8, Math_abs($9) < 2147483648.0 ? ~~$9 : -2147483648);
     }
     $4_1 = $1944($1944($8, 12), 0);
     $1973($8, 72, 54520);
     $1973($8, 80, $5_1);
     $5_1 = $1944($5_1, 0);
     if (($5_1 | 0) != 2) {
      $9 = +fimport$5($5_1 | 0, 72724, $8 + 48 | 0);
      fimport$6($1944($8, 48) | 0);
      $1973($8, 76, Math_abs($9) < 2147483648.0 ? ~~$9 : -2147483648);
     }
     $5_1 = $1944($1944($8, 80), 0);
     $1973($8 + 60 | 0, 0, 0);
     $1982($8, 52, 0, 0);
     $1973($8, 48, 53464);
     $1973($8, 64, $6_1);
     if (($1944($6_1, 0) | 0) != 2) {
      $1506($8 + 48 | 0)
     }
     $1973($8, 48, 53312);
     $10_1 = $663(($10_1 | 0) < 0 ? $2_1 : $0_1, $11_1, 4, $3, ($4_1 | 0) != 2 ? $8 + 8 | 0 : 0, ($5_1 | 0) != 2 ? $8 + 76 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 52), wasm2js_i32$4 = $8 + 52 | 0, wasm2js_i32$5 = ($1936($8, 63) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 64), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $7_1);
     $1973($8, 48, 53464);
     if (($1936($8, 63) | 0) < 0) {
      $1756($1944($8, 52))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 2;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95860) & 1)) {
      $4_1 = fimport$17(2, 54564) | 0;
      $1968(0, 95860, 1);
      $1973(0, 95856, $4_1);
     }
     $4_1 = $1944(0, 95856);
     $1973($8, 52, $0_1);
     $1973($8, 48, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $8 + 48 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 5:
     $2_1 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1982($8, 88, 0, 0);
     $11_1 = $763($1_1, $8 + 88 | 0);
     $1_1 = $1541($8 + 24 | 0, $3);
     $3 = $1944($1_1, 0);
     $1973($8, 4, 54620);
     $1973($8, 12, $4_1);
     $4_1 = $1944($4_1, 0);
     if (($4_1 | 0) != 2) {
      $9 = +fimport$5($4_1 | 0, 72736, $8 + 48 | 0);
      fimport$6($1944($8, 48) | 0);
      $1973($8, 8, $9 < 4294967296.0 & $9 >= 0.0 ? ~~$9 >>> 0 : 0);
     }
     $4_1 = $1944($1944($8, 12), 0);
     $1973($8, 72, 54620);
     $1973($8, 80, $5_1);
     $5_1 = $1944($5_1, 0);
     if (($5_1 | 0) != 2) {
      $9 = +fimport$5($5_1 | 0, 72736, $8 + 48 | 0);
      fimport$6($1944($8, 48) | 0);
      $1973($8, 76, $9 < 4294967296.0 & $9 >= 0.0 ? ~~$9 >>> 0 : 0);
     }
     $5_1 = $1944($1944($8, 80), 0);
     $1973($8 + 60 | 0, 0, 0);
     $1982($8, 52, 0, 0);
     $1973($8, 48, 53464);
     $1973($8, 64, $6_1);
     if (($1944($6_1, 0) | 0) != 2) {
      $1506($8 + 48 | 0)
     }
     $1973($8, 48, 53312);
     $10_1 = $663(($10_1 | 0) < 0 ? $2_1 : $0_1, $11_1, 5, $3, ($4_1 | 0) != 2 ? $8 + 8 | 0 : 0, ($5_1 | 0) != 2 ? $8 + 76 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 52), wasm2js_i32$4 = $8 + 52 | 0, wasm2js_i32$5 = ($1936($8, 63) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 64), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $7_1);
     $1973($8, 48, 53464);
     if (($1936($8, 63) | 0) < 0) {
      $1756($1944($8, 52))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 2;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95868) & 1)) {
      $4_1 = fimport$17(2, 54664) | 0;
      $1968(0, 95868, 1);
      $1973(0, 95864, $4_1);
     }
     $4_1 = $1944(0, 95864);
     $1973($8, 52, $0_1);
     $1973($8, 48, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $8 + 48 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 8:
     $2_1 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1982($8, 88, 0, 0);
     $11_1 = $763($1_1, $8 + 88 | 0);
     $1_1 = $1542($8 + 24 | 0, $3);
     $3 = $1944($1_1, 0);
     $1973($8, 4, 54720);
     $1973($8, 12, $4_1);
     $4_1 = $1944($4_1, 0);
     if (($4_1 | 0) != 2) {
      $9 = +fimport$5($4_1 | 0, 72808, $8 + 48 | 0);
      fimport$6($1944($8, 48) | 0);
      $12_1 = Math_fround(3402823466385288598117041.0e14);
      label$71 : {
       if ($9 >= 3402823466385288598117041.0e14) {
        break label$71
       }
       $12_1 = Math_fround(-3402823466385288598117041.0e14);
       if ($9 <= -3402823466385288598117041.0e14) {
        break label$71
       }
       $12_1 = Math_fround($9);
      }
      $1986($8, 8, $12_1);
     }
     $4_1 = $1944($1944($8, 12), 0);
     $1973($8, 72, 54720);
     $1973($8, 80, $5_1);
     $5_1 = $1944($5_1, 0);
     if (($5_1 | 0) != 2) {
      $9 = +fimport$5($5_1 | 0, 72808, $8 + 48 | 0);
      fimport$6($1944($8, 48) | 0);
      $12_1 = Math_fround(3402823466385288598117041.0e14);
      label$73 : {
       if ($9 >= 3402823466385288598117041.0e14) {
        break label$73
       }
       $12_1 = Math_fround(-3402823466385288598117041.0e14);
       if ($9 <= -3402823466385288598117041.0e14) {
        break label$73
       }
       $12_1 = Math_fround($9);
      }
      $1986($8, 76, $12_1);
     }
     $5_1 = $1944($1944($8, 80), 0);
     $1973($8 + 60 | 0, 0, 0);
     $1982($8, 52, 0, 0);
     $1973($8, 48, 53464);
     $1973($8, 64, $6_1);
     if (($1944($6_1, 0) | 0) != 2) {
      $1506($8 + 48 | 0)
     }
     $1973($8, 48, 53312);
     $10_1 = $663(($10_1 | 0) < 0 ? $2_1 : $0_1, $11_1, 8, $3, ($4_1 | 0) != 2 ? $8 + 8 | 0 : 0, ($5_1 | 0) != 2 ? $8 + 76 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 52), wasm2js_i32$4 = $8 + 52 | 0, wasm2js_i32$5 = ($1936($8, 63) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 64), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $7_1);
     $1973($8, 48, 53464);
     if (($1936($8, 63) | 0) < 0) {
      $1756($1944($8, 52))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 2;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95876) & 1)) {
      $4_1 = fimport$17(2, 54764) | 0;
      $1968(0, 95876, 1);
      $1973(0, 95872, $4_1);
     }
     $4_1 = $1944(0, 95872);
     $1973($8, 52, $0_1);
     $1973($8, 48, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $8 + 48 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 9:
     break label$2;
    default:
     break label$1;
    };
   }
   $2_1 = $1944($0_1, 0);
   $10_1 = $1936($0_1, 11);
   $1982($8, 88, 0, 0);
   $11_1 = $763($1_1, $8 + 88 | 0);
   $1_1 = $1543($8 + 72 | 0, $3);
   $3 = $1944($1_1, 0);
   $1973($8, 48, 54820);
   $1973($8, 64, $4_1);
   $4_1 = $1944($4_1, 0);
   if (($4_1 | 0) != 2) {
    $9 = +fimport$5($4_1 | 0, 72808, $8 + 24 | 0);
    fimport$6($1944($8, 24) | 0);
    $1990($8, 56, $9);
   }
   $4_1 = $1944($1944($8, 64), 0);
   $1973($8, 24, 54820);
   $1973($8, 40, $5_1);
   $5_1 = $1944($5_1, 0);
   if (($5_1 | 0) != 2) {
    $9 = +fimport$5($5_1 | 0, 72808, $8 + 4 | 0);
    fimport$6($1944($8, 4) | 0);
    $1990($8, 32, $9);
   }
   $5_1 = $1944($1944($8, 40), 0);
   $1973($8 + 16 | 0, 0, 0);
   $1982($8, 8, 0, 0);
   $1973($8, 4, 53464);
   $1973($8, 20, $6_1);
   if (($1944($6_1, 0) | 0) != 2) {
    $1506($8 + 4 | 0)
   }
   $1973($8, 4, 53312);
   $10_1 = $663(($10_1 | 0) < 0 ? $2_1 : $0_1, $11_1, 9, $3, ($4_1 | 0) != 2 ? $8 + 56 | 0 : 0, ($5_1 | 0) != 2 ? $8 + 32 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 8), wasm2js_i32$4 = $8 + 8 | 0, wasm2js_i32$5 = ($1936($8, 19) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 20), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $7_1);
   $1973($8, 4, 53464);
   if (($1936($8, 19) | 0) < 0) {
    $1756($1944($8, 8))
   }
   $2_1 = $1944($1_1, 4);
   $0_1 = $1944($1_1, 0);
   $2_1 = $2_1 - $0_1 >> 3;
   $3 = $1944($1944($1_1, 12), 0);
   if (!($1937(0, 95884) & 1)) {
    $4_1 = fimport$17(2, 54864) | 0;
    $1968(0, 95884, 1);
    $1973(0, 95880, $4_1);
   }
   $4_1 = $1944(0, 95880);
   $1973($8, 52, $0_1);
   $1973($8, 48, $2_1);
   fimport$18($4_1 | 0, $3 | 0, 3559, $8 + 48 | 0);
   $0_1 = $1944($1_1, 0);
   if ($0_1) {
    $1973($1_1, 4, $0_1);
    $1756($0_1);
   }
  }
  global$0 = $8 + 96 | 0;
  return $10_1 | 0;
 }
 
 function $1326($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0;
  $7_1 = global$0 - 32 | 0;
  global$0 = $7_1;
  $8 = $1944($1_1, 0);
  if ($8 >>> 0 < 2147483632) {
   label$2 : {
    if ($8 >>> 0 <= 10) {
     $1968($7_1, 31, $8);
     $9 = $7_1 + 20 | 0;
     break label$2;
    }
    $10_1 = ($8 | 15) + 1 | 0;
    $9 = $1783($10_1);
    $1973($7_1, 28, $10_1 | -2147483648);
    $1973($7_1, 20, $9);
    $1973($7_1, 24, $8);
   }
   if ($8) {
    $1602($9, $1_1 + 4 | 0, $8)
   }
   $1968($8 + $9 | 0, 0, 0);
   $1973($7_1, 12, $5_1);
   $1973($7_1, 16, $2_1);
   $1973($7_1, 8, $6_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($7_1 + 20 | 0, $7_1 + 16 | 0, $3, $4_1, $7_1 + 12 | 0, $7_1 + 8 | 0) | 0;
   fimport$4($1944($7_1, 8) | 0);
   fimport$4($1944($7_1, 12) | 0);
   fimport$4($1944($7_1, 16) | 0);
   if (($1936($7_1, 31) | 0) < 0) {
    $1756($1944($7_1, 20))
   }
   global$0 = $7_1 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1327($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0.0, $10_1 = 0, $11_1 = 0, $12_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $6_1 = global$0 - 48 | 0;
  global$0 = $6_1;
  $5_1 = $1944($1_1, 0);
  $1973($6_1, 24, 0);
  $8 = $5_1;
  $5_1 = fimport$1(72724, $6_1 + 24 | 0) | 0;
  $10_1 = fimport$7($8 | 0, $5_1 | 0) | 0;
  fimport$4($5_1 | 0);
  label$3 : {
   $9 = +fimport$5($10_1 | 0, 49072, $6_1 + 12 | 0);
   label$1 : {
    if ($9 < 4294967296.0 & $9 >= 0.0) {
     $8 = ~~$9 >>> 0;
     break label$1;
    }
    $8 = 0;
   }
   $7_1 = $1944($8, 0);
   if ($7_1 >>> 0 < 2147483632) {
    $12_1 = $1944($6_1, 12);
    label$5 : {
     if ($7_1 >>> 0 <= 10) {
      $1968($6_1, 35, $7_1);
      $5_1 = $6_1 + 24 | 0;
      break label$5;
     }
     $11_1 = ($7_1 | 15) + 1 | 0;
     $5_1 = $1783($11_1);
     $1973($6_1, 32, $11_1 | -2147483648);
     $1973($6_1, 24, $5_1);
     $1973($6_1, 28, $7_1);
    }
    if ($7_1) {
     $1602($5_1, $8 + 4 | 0, $7_1)
    }
    $1968($5_1 + $7_1 | 0, 0, 0);
    fimport$6($12_1 | 0);
    fimport$4($10_1 | 0);
    $1841($6_1 + 24 | 0, $2_1);
    $7_1 = $1944($4_1, 0);
    label$8 : {
     if (($7_1 | 0) != 2) {
      $5_1 = $1944(0, 95660);
      fimport$10($7_1 | 0);
      fimport$4($1944($5_1, 120) | 0);
      $1973($5_1, 120, $1944($4_1, 0));
      $4_1 = $678((wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), (wasm2js_i32$0 = $1944($6_1, 24), wasm2js_i32$1 = $6_1 + 24 | 0, wasm2js_i32$2 = ($1936($6_1, 35) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $2_1, $3, 868);
      break label$8;
     }
     $4_1 = $678((wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), (wasm2js_i32$0 = $1944($6_1, 24), wasm2js_i32$1 = $6_1 + 24 | 0, wasm2js_i32$2 = ($1936($6_1, 35) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $2_1, $3, 0);
    }
    $3 = (wasm2js_i32$0 = $1944($6_1, 24), wasm2js_i32$1 = $6_1 + 24 | 0, wasm2js_i32$2 = ($1936($6_1, 35) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
    $2_1 = $1697($3);
    if ($2_1 >>> 0 >= 2147483632) {
     break label$3
    }
    label$10 : {
     if ($2_1 >>> 0 <= 10) {
      $1968($6_1, 23, $2_1);
      $0_1 = $6_1 + 12 | 0;
      break label$10;
     }
     $5_1 = ($2_1 | 15) + 1 | 0;
     $0_1 = $1783($5_1);
     $1973($6_1, 20, $5_1 | -2147483648);
     $1973($6_1, 12, $0_1);
     $1973($6_1, 16, $2_1);
    }
    if ($2_1) {
     $1603($0_1, $3, $2_1)
    }
    $1968($0_1 + $2_1 | 0, 0, 0);
    $5_1 = $1944($1_1, 0);
    $1973($6_1, 40, 0);
    $7_1 = $6_1 + 40 | 0;
    $0_1 = fimport$1(72724, $7_1 | 0) | 0;
    $2_1 = $1944($6_1, 16);
    $3 = $1936($6_1, 23);
    $1_1 = ($3 | 0) < 0;
    $2_1 = $1_1 ? $2_1 : $3 & 127;
    $3 = $1755($2_1 + 4 | 0);
    $1973($3, 0, $2_1);
    $1602($3 + 4 | 0, (wasm2js_i32$0 = $1944($6_1, 12), wasm2js_i32$1 = $6_1 + 12 | 0, wasm2js_i32$2 = $1_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $2_1);
    $1973($6_1, 40, $3);
    $1_1 = fimport$1(49072, $7_1 | 0) | 0;
    fimport$3($5_1 | 0, $0_1 | 0, $1_1 | 0);
    fimport$4($1_1 | 0);
    fimport$4($0_1 | 0);
    if (($1936($6_1, 23) | 0) < 0) {
     $1756($1944($6_1, 12))
    }
    if (($1936($6_1, 35) | 0) < 0) {
     $1756($1944($6_1, 24))
    }
    global$0 = $6_1 + 48 | 0;
    return $4_1 | 0;
   }
   $774();
   wasm2js_trap();
  }
  $774();
  wasm2js_trap();
 }
 
 function $1328($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  var $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0;
  $8 = global$0 - 32 | 0;
  global$0 = $8;
  $9 = $1944($1_1, 0);
  if ($9 >>> 0 < 2147483632) {
   label$2 : {
    if ($9 >>> 0 <= 10) {
     $1968($8, 31, $9);
     $10_1 = $8 + 20 | 0;
     break label$2;
    }
    $11_1 = ($9 | 15) + 1 | 0;
    $10_1 = $1783($11_1);
    $1973($8, 28, $11_1 | -2147483648);
    $1973($8, 20, $10_1);
    $1973($8, 24, $9);
   }
   if ($9) {
    $1602($10_1, $1_1 + 4 | 0, $9)
   }
   $1968($9 + $10_1 | 0, 0, 0);
   $1973($8, 12, $4_1);
   $1973($8, 16, $2_1);
   $1973($8, 8, $6_1);
   $1973($8, 4, $7_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($8 + 20 | 0, $8 + 16 | 0, $3, $8 + 12 | 0, $5_1, $8 + 8 | 0, $8 + 4 | 0) | 0;
   fimport$4($1944($8, 4) | 0);
   fimport$4($1944($8, 8) | 0);
   fimport$4($1944($8, 12) | 0);
   fimport$4($1944($8, 16) | 0);
   if (($1936($8, 31) | 0) < 0) {
    $1756($1944($8, 20))
   }
   global$0 = $8 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1329($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0.0, $12_1 = 0, $13 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $7_1 = global$0 - 48 | 0;
  global$0 = $7_1;
  $6_1 = $1944($1_1, 0);
  $1973($7_1, 24, 0);
  $10_1 = $6_1;
  $6_1 = fimport$1(72724, $7_1 + 24 | 0) | 0;
  $9 = fimport$7($10_1 | 0, $6_1 | 0) | 0;
  fimport$4($6_1 | 0);
  label$3 : {
   $11_1 = +fimport$5($9 | 0, 49072, $7_1 + 12 | 0);
   label$1 : {
    if ($11_1 < 4294967296.0 & $11_1 >= 0.0) {
     $10_1 = ~~$11_1 >>> 0;
     break label$1;
    }
    $10_1 = 0;
   }
   $8 = $1944($10_1, 0);
   if ($8 >>> 0 < 2147483632) {
    $13 = $1944($7_1, 12);
    label$5 : {
     if ($8 >>> 0 <= 10) {
      $1968($7_1, 35, $8);
      $6_1 = $7_1 + 24 | 0;
      break label$5;
     }
     $12_1 = ($8 | 15) + 1 | 0;
     $6_1 = $1783($12_1);
     $1973($7_1, 32, $12_1 | -2147483648);
     $1973($7_1, 24, $6_1);
     $1973($7_1, 28, $8);
    }
    if ($8) {
     $1602($6_1, $10_1 + 4 | 0, $8)
    }
    $1968($6_1 + $8 | 0, 0, 0);
    fimport$6($13 | 0);
    fimport$4($9 | 0);
    $1841($7_1 + 24 | 0, $2_1);
    $8 = $1944($5_1, 0);
    label$8 : {
     if (($8 | 0) != 2) {
      $6_1 = $1944(0, 95660);
      fimport$10($8 | 0);
      fimport$4($1944($6_1, 124) | 0);
      $1973($6_1, 124, $1944($5_1, 0));
      $5_1 = $1944($0_1, 0);
      $6_1 = $1936($0_1, 11);
      $8 = $1944($7_1, 24);
      $9 = $1936($7_1, 35);
      $1982($7_1, 12, 0, 0);
      $4_1 = $689(($6_1 | 0) < 0 ? $5_1 : $0_1, ($9 | 0) < 0 ? $8 : $7_1 + 24 | 0, $2_1, $763($3, $7_1 + 12 | 0), $4_1, 869);
      break label$8;
     }
     $5_1 = $1944($0_1, 0);
     $6_1 = $1936($0_1, 11);
     $8 = $1944($7_1, 24);
     $9 = $1936($7_1, 35);
     $1982($7_1, 12, 0, 0);
     $4_1 = $689(($6_1 | 0) < 0 ? $5_1 : $0_1, ($9 | 0) < 0 ? $8 : $7_1 + 24 | 0, $2_1, $763($3, $7_1 + 12 | 0), $4_1, 0);
    }
    $3 = (wasm2js_i32$0 = $1944($7_1, 24), wasm2js_i32$1 = $7_1 + 24 | 0, wasm2js_i32$2 = ($1936($7_1, 35) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
    $2_1 = $1697($3);
    if ($2_1 >>> 0 >= 2147483632) {
     break label$3
    }
    label$10 : {
     if ($2_1 >>> 0 <= 10) {
      $1968($7_1, 23, $2_1);
      $0_1 = $7_1 + 12 | 0;
      break label$10;
     }
     $5_1 = ($2_1 | 15) + 1 | 0;
     $0_1 = $1783($5_1);
     $1973($7_1, 20, $5_1 | -2147483648);
     $1973($7_1, 12, $0_1);
     $1973($7_1, 16, $2_1);
    }
    if ($2_1) {
     $1603($0_1, $3, $2_1)
    }
    $1968($0_1 + $2_1 | 0, 0, 0);
    $5_1 = $1944($1_1, 0);
    $1973($7_1, 40, 0);
    $6_1 = $7_1 + 40 | 0;
    $0_1 = fimport$1(72724, $6_1 | 0) | 0;
    $2_1 = $1944($7_1, 16);
    $3 = $1936($7_1, 23);
    $1_1 = ($3 | 0) < 0;
    $2_1 = $1_1 ? $2_1 : $3 & 127;
    $3 = $1755($2_1 + 4 | 0);
    $1973($3, 0, $2_1);
    $1602($3 + 4 | 0, (wasm2js_i32$0 = $1944($7_1, 12), wasm2js_i32$1 = $7_1 + 12 | 0, wasm2js_i32$2 = $1_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $2_1);
    $1973($7_1, 40, $3);
    $1_1 = fimport$1(49072, $6_1 | 0) | 0;
    fimport$3($5_1 | 0, $0_1 | 0, $1_1 | 0);
    fimport$4($1_1 | 0);
    fimport$4($0_1 | 0);
    if (($1936($7_1, 23) | 0) < 0) {
     $1756($1944($7_1, 12))
    }
    if (($1936($7_1, 35) | 0) < 0) {
     $1756($1944($7_1, 24))
    }
    global$0 = $7_1 + 48 | 0;
    return $4_1 | 0;
   }
   $774();
   wasm2js_trap();
  }
  $774();
  wasm2js_trap();
 }
 
 function $1330($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  var $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0;
  $8 = global$0 - 48 | 0;
  global$0 = $8;
  label$1 : {
   $9 = $1944($1_1, 0);
   if ($9 >>> 0 < 2147483632) {
    label$3 : {
     if ($9 >>> 0 <= 10) {
      $1968($8, 47, $9);
      $10_1 = $8 + 36 | 0;
      break label$3;
     }
     $11_1 = ($9 | 15) + 1 | 0;
     $10_1 = $1783($11_1);
     $1973($8, 44, $11_1 | -2147483648);
     $1973($8, 36, $10_1);
     $1973($8, 40, $9);
    }
    if ($9) {
     $1602($10_1, $1_1 + 4 | 0, $9)
    }
    $1968($9 + $10_1 | 0, 0, 0);
    $9 = $1944($2_1, 0);
    if ($9 >>> 0 >= 2147483632) {
     break label$1
    }
    label$6 : {
     if ($9 >>> 0 <= 10) {
      $1968($8, 35, $9);
      $1_1 = $8 + 24 | 0;
      break label$6;
     }
     $10_1 = ($9 | 15) + 1 | 0;
     $1_1 = $1783($10_1);
     $1973($8, 32, $10_1 | -2147483648);
     $1973($8, 24, $1_1);
     $1973($8, 28, $9);
    }
    if ($9) {
     $1602($1_1, $2_1 + 4 | 0, $9)
    }
    $1968($1_1 + $9 | 0, 0, 0);
    $1973($8, 16, $6_1);
    $1973($8, 20, $3);
    $1973($8, 12, $7_1);
    $0_1 = FUNCTION_TABLE[$0_1 | 0]($8 + 36 | 0, $8 + 24 | 0, $8 + 20 | 0, $4_1, $5_1, $8 + 16 | 0, $8 + 12 | 0) | 0;
    fimport$4($1944($8, 12) | 0);
    fimport$4($1944($8, 16) | 0);
    fimport$4($1944($8, 20) | 0);
    if (($1936($8, 35) | 0) < 0) {
     $1756($1944($8, 24))
    }
    if (($1936($8, 47) | 0) < 0) {
     $1756($1944($8, 36))
    }
    global$0 = $8 + 48 | 0;
    return $0_1 | 0;
   }
   $774();
   wasm2js_trap();
  }
  $774();
  wasm2js_trap();
 }
 
 function $1331($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0.0, $11_1 = 0, $12_1 = 0, $13 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $7_1 = global$0 - 48 | 0;
  global$0 = $7_1;
  $6_1 = $1944($2_1, 0);
  $1973($7_1, 24, 0);
  $9 = $6_1;
  $6_1 = fimport$1(72724, $7_1 + 24 | 0) | 0;
  $11_1 = fimport$7($9 | 0, $6_1 | 0) | 0;
  fimport$4($6_1 | 0);
  label$3 : {
   $10_1 = +fimport$5($11_1 | 0, 49072, $7_1 + 12 | 0);
   label$1 : {
    if ($10_1 < 4294967296.0 & $10_1 >= 0.0) {
     $9 = ~~$10_1 >>> 0;
     break label$1;
    }
    $9 = 0;
   }
   $8 = $1944($9, 0);
   if ($8 >>> 0 < 2147483632) {
    $13 = $1944($7_1, 12);
    label$5 : {
     if ($8 >>> 0 <= 10) {
      $1968($7_1, 35, $8);
      $6_1 = $7_1 + 24 | 0;
      break label$5;
     }
     $12_1 = ($8 | 15) + 1 | 0;
     $6_1 = $1783($12_1);
     $1973($7_1, 32, $12_1 | -2147483648);
     $1973($7_1, 24, $6_1);
     $1973($7_1, 28, $8);
    }
    if ($8) {
     $1602($6_1, $9 + 4 | 0, $8)
    }
    $1968($6_1 + $8 | 0, 0, 0);
    fimport$6($13 | 0);
    fimport$4($11_1 | 0);
    $1841($7_1 + 24 | 0, $3);
    $8 = $1944($5_1, 0);
    label$8 : {
     if (($8 | 0) != 2) {
      $6_1 = $1944(0, 95660);
      fimport$10($8 | 0);
      fimport$4($1944($6_1, 120) | 0);
      $1973($6_1, 120, $1944($5_1, 0));
      $4_1 = $690((wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), (wasm2js_i32$0 = $1944($1_1, 0), wasm2js_i32$1 = $1_1, wasm2js_i32$2 = ($1936($1_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), (wasm2js_i32$0 = $1944($7_1, 24), wasm2js_i32$1 = $7_1 + 24 | 0, wasm2js_i32$2 = ($1936($7_1, 35) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $3, $4_1, 870);
      break label$8;
     }
     $4_1 = $690((wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), (wasm2js_i32$0 = $1944($1_1, 0), wasm2js_i32$1 = $1_1, wasm2js_i32$2 = ($1936($1_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), (wasm2js_i32$0 = $1944($7_1, 24), wasm2js_i32$1 = $7_1 + 24 | 0, wasm2js_i32$2 = ($1936($7_1, 35) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $3, $4_1, 0);
    }
    $3 = (wasm2js_i32$0 = $1944($7_1, 24), wasm2js_i32$1 = $7_1 + 24 | 0, wasm2js_i32$2 = ($1936($7_1, 35) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
    $0_1 = $1697($3);
    if ($0_1 >>> 0 >= 2147483632) {
     break label$3
    }
    label$10 : {
     if ($0_1 >>> 0 <= 10) {
      $1968($7_1, 23, $0_1);
      $1_1 = $7_1 + 12 | 0;
      break label$10;
     }
     $5_1 = ($0_1 | 15) + 1 | 0;
     $1_1 = $1783($5_1);
     $1973($7_1, 20, $5_1 | -2147483648);
     $1973($7_1, 12, $1_1);
     $1973($7_1, 16, $0_1);
    }
    if ($0_1) {
     $1603($1_1, $3, $0_1)
    }
    $1968($0_1 + $1_1 | 0, 0, 0);
    $5_1 = $1944($2_1, 0);
    $1973($7_1, 40, 0);
    $6_1 = $7_1 + 40 | 0;
    $0_1 = fimport$1(72724, $6_1 | 0) | 0;
    $2_1 = $1944($7_1, 16);
    $3 = $1936($7_1, 23);
    $1_1 = ($3 | 0) < 0;
    $2_1 = $1_1 ? $2_1 : $3 & 127;
    $3 = $1755($2_1 + 4 | 0);
    $1973($3, 0, $2_1);
    $1602($3 + 4 | 0, (wasm2js_i32$0 = $1944($7_1, 12), wasm2js_i32$1 = $7_1 + 12 | 0, wasm2js_i32$2 = $1_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $2_1);
    $1973($7_1, 40, $3);
    $1_1 = fimport$1(49072, $6_1 | 0) | 0;
    fimport$3($5_1 | 0, $0_1 | 0, $1_1 | 0);
    fimport$4($1_1 | 0);
    fimport$4($0_1 | 0);
    if (($1936($7_1, 23) | 0) < 0) {
     $1756($1944($7_1, 12))
    }
    if (($1936($7_1, 35) | 0) < 0) {
     $1756($1944($7_1, 24))
    }
    global$0 = $7_1 + 48 | 0;
    return $4_1 | 0;
   }
   $774();
   wasm2js_trap();
  }
  $774();
  wasm2js_trap();
 }
 
 function $1332($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = 0.0, $10_1 = 0.0, $11_1 = 0, $12_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $6_1 = global$0 - 32 | 0;
  global$0 = $6_1;
  $11_1 = $1944($0_1, 0);
  $12_1 = $1936($0_1, 11);
  $1973($6_1, 28, $1_1);
  $1973($6_1, 20, 53576);
  $1508($6_1 + 20 | 0);
  $9 = +fimport$5($1944($2_1, 0) | 0, 72808, $6_1 | 0);
  fimport$6($1944($6_1, 0) | 0);
  $10_1 = +fimport$5($1944($3, 0) | 0, 72808, $6_1 | 0);
  fimport$6($1944($6_1, 0) | 0);
  $1973($6_1 + 12 | 0, 0, 0);
  $1982($6_1, 4, 0, 0);
  $1973($6_1, 0, 53464);
  $1973($6_1, 16, $4_1);
  if (($1944($4_1, 0) | 0) != 2) {
   $1506($6_1)
  }
  $2_1 = ($12_1 | 0) < 0;
  $1973($6_1, 0, 53312);
  $7_1 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($9 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $7_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($9 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $7_1 = Math_fround($9);
  }
  $3 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($6_1, 4), wasm2js_i32$4 = $6_1 + 4 | 0, wasm2js_i32$5 = ($1936($6_1, 15) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($6_1, 16), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $8 = Math_fround(3402823466385288598117041.0e14);
  label$2 : {
   if ($10_1 >= 3402823466385288598117041.0e14) {
    break label$2
   }
   $8 = Math_fround(-3402823466385288598117041.0e14);
   if ($10_1 <= -3402823466385288598117041.0e14) {
    break label$2
   }
   $8 = Math_fround($10_1);
  }
  $1986($1_1, 8, $8);
  $1986($1_1, 12, $7_1);
  $0_1 = $677($2_1 ? $11_1 : $0_1, 8, $6_1 + 24 | 0, $7_1 > Math_fround(0.0) ? $1_1 + 12 | 0 : 0, $8 > Math_fround(0.0) ? $1_1 + 8 | 0 : 0, $3, $5_1 | 131072);
  global$0 = $1_1 + 16 | 0;
  $1_1 = $0_1;
  $1973($6_1, 0, 53464);
  if (($1936($6_1, 15) | 0) < 0) {
   $1756($1944($6_1, 4))
  }
  $1973($6_1, 20, 53576);
  $2_1 = $1944($6_1, 28);
  $1986($6_1, 0, $1963($6_1, 24));
  $0_1 = fimport$1(72796, $6_1 | 0) | 0;
  $2_1 = $1944($2_1, 0);
  $1973($6_1, 0, 0);
  $3 = $2_1;
  $2_1 = fimport$1(72760, $6_1 | 0) | 0;
  fimport$3($3 | 0, $2_1 | 0, $0_1 | 0);
  fimport$4($2_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $6_1 + 32 | 0;
  return $1_1 | 0;
 }
 
 function $1333($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $5_1 = global$0 - 32 | 0;
  global$0 = $5_1;
  $6_1 = $1944($1_1, 0);
  if ($6_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($6_1 >>> 0 <= 10) {
     $1968($5_1, 31, $6_1);
     $7_1 = $5_1 + 20 | 0;
     break label$2;
    }
    $8 = ($6_1 | 15) + 1 | 0;
    $7_1 = $1783($8);
    $1973($5_1, 28, $8 | -2147483648);
    $1973($5_1, 20, $7_1);
    $1973($5_1, 24, $6_1);
   }
   if ($6_1) {
    $1602($7_1, $1_1 + 4 | 0, $6_1)
   }
   $1968($6_1 + $7_1 | 0, 0, 0);
   $1973($5_1, 12, $3);
   $1973($5_1, 16, $2_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($5_1 + 20 | 0, $5_1 + 16 | 0, $5_1 + 12 | 0, $4_1) | 0;
   fimport$4($1944($5_1, 12) | 0);
   fimport$4($1944($5_1, 16) | 0);
   if (($1936($5_1, 31) | 0) < 0) {
    $1756($1944($5_1, 20))
   }
   global$0 = $5_1 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1334($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $4_1 = global$0 - 48 | 0;
  global$0 = $4_1;
  $5_1 = $1944($0_1, 0);
  $6_1 = $1936($0_1, 11);
  $1973($4_1, 44, $1_1);
  $1973($4_1, 32, 53632);
  $1_1 = $4_1 + 32 | 0;
  $1512($1_1);
  $1973($4_1 + 20 | 0, 0, 0);
  $1982($4_1, 12, 0, 0);
  $1973($4_1, 8, 53464);
  $1973($4_1, 24, $2_1);
  if (($1944($2_1, 0) | 0) != 2) {
   $1506($4_1 + 8 | 0)
  }
  $1973($4_1, 8, 53312);
  $2_1 = $679(($6_1 | 0) < 0 ? $5_1 : $0_1, 8, $1_1 + 4 | 0, 2, 0, 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($4_1, 12), wasm2js_i32$4 = $4_1 + 12 | 0, wasm2js_i32$5 = ($1936($4_1, 23) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($4_1, 24), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $3);
  $1973($4_1, 8, 53464);
  if (($1936($4_1, 23) | 0) < 0) {
   $1756($1944($4_1, 12))
  }
  $1973($4_1, 32, 53632);
  $0_1 = 0;
  while (1) {
   $3 = $1944($4_1, 44);
   $1986($4_1, 8, $1963(($4_1 + ($0_1 << 2) | 0) + 36 | 0, 0));
   $5_1 = $4_1 + 8 | 0;
   $1_1 = fimport$1(72796, $5_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($4_1, 8, $0_1);
   $6_1 = $3;
   $3 = fimport$1(72760, $5_1 | 0) | 0;
   fimport$3($6_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 2) {
    continue
   }
   break;
  };
  global$0 = $4_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1335($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $4_1 = global$0 - 48 | 0;
  global$0 = $4_1;
  $5_1 = $1944($0_1, 0);
  $6_1 = $1936($0_1, 11);
  $1973($4_1, 44, $1_1);
  $1973($4_1, 28, 53688);
  $1_1 = $4_1 + 28 | 0;
  $1516($1_1);
  $1973($4_1 + 20 | 0, 0, 0);
  $1982($4_1, 12, 0, 0);
  $1973($4_1, 8, 53464);
  $1973($4_1, 24, $2_1);
  if (($1944($2_1, 0) | 0) != 2) {
   $1506($4_1 + 8 | 0)
  }
  $1973($4_1, 8, 53312);
  $2_1 = $679(($6_1 | 0) < 0 ? $5_1 : $0_1, 8, $1_1 + 4 | 0, 3, 0, 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($4_1, 12), wasm2js_i32$4 = $4_1 + 12 | 0, wasm2js_i32$5 = ($1936($4_1, 23) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($4_1, 24), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $3);
  $1973($4_1, 8, 53464);
  if (($1936($4_1, 23) | 0) < 0) {
   $1756($1944($4_1, 12))
  }
  $1973($4_1, 28, 53688);
  $0_1 = 0;
  while (1) {
   $3 = $1944($4_1, 44);
   $1986($4_1, 8, $1963(($4_1 + ($0_1 << 2) | 0) + 32 | 0, 0));
   $5_1 = $4_1 + 8 | 0;
   $1_1 = fimport$1(72796, $5_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($4_1, 8, $0_1);
   $6_1 = $3;
   $3 = fimport$1(72760, $5_1 | 0) | 0;
   fimport$3($6_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 3) {
    continue
   }
   break;
  };
  global$0 = $4_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1336($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $4_1 = global$0 - 48 | 0;
  global$0 = $4_1;
  $5_1 = $1944($0_1, 0);
  $6_1 = $1936($0_1, 11);
  $1973($4_1, 44, $1_1);
  $1973($4_1, 24, 53744);
  $1_1 = $4_1 + 24 | 0;
  $1520($1_1);
  $1973($4_1 + 12 | 0, 0, 0);
  $1982($4_1, 4, 0, 0);
  $1973($4_1, 0, 53464);
  $1973($4_1, 16, $2_1);
  if (($1944($2_1, 0) | 0) != 2) {
   $1506($4_1)
  }
  $1973($4_1, 0, 53312);
  $2_1 = $679(($6_1 | 0) < 0 ? $5_1 : $0_1, 8, $1_1 + 4 | 0, 4, 0, 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($4_1, 4), wasm2js_i32$4 = $4_1 + 4 | 0, wasm2js_i32$5 = ($1936($4_1, 15) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($4_1, 16), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $3);
  $1973($4_1, 0, 53464);
  if (($1936($4_1, 15) | 0) < 0) {
   $1756($1944($4_1, 4))
  }
  $1973($4_1, 24, 53744);
  $0_1 = 0;
  while (1) {
   $3 = $1944($4_1, 44);
   $1986($4_1, 0, $1963(($4_1 + ($0_1 << 2) | 0) + 28 | 0, 0));
   $1_1 = fimport$1(72796, $4_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($4_1, 0, $0_1);
   $5_1 = $3;
   $3 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($5_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 4) {
    continue
   }
   break;
  };
  global$0 = $4_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1337($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $7_1 = $1944($1_1, 0);
  if ($7_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($7_1 >>> 0 <= 10) {
     $1968($6_1, 15, $7_1);
     $8 = $6_1 + 4 | 0;
     break label$2;
    }
    $9 = ($7_1 | 15) + 1 | 0;
    $8 = $1783($9);
    $1973($6_1, 12, $9 | -2147483648);
    $1973($6_1, 4, $8);
    $1973($6_1, 8, $7_1);
   }
   if ($7_1) {
    $1602($8, $1_1 + 4 | 0, $7_1)
   }
   $1968($7_1 + $8 | 0, 0, 0);
   $1973($6_1, 0, $2_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($6_1 + 4 | 0, $6_1, $3, $4_1, $5_1) | 0;
   fimport$4($1944($6_1, 0) | 0);
   if (($1936($6_1, 15) | 0) < 0) {
    $1756($1944($6_1, 4))
   }
   global$0 = $6_1 + 16 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1338($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0.0, $9 = 0, $10_1 = 0;
  $5_1 = global$0 - 32 | 0;
  global$0 = $5_1;
  $9 = $1944($0_1, 0);
  $10_1 = $1936($0_1, 11);
  $1973($5_1, 12, 53228);
  $1973($5_1, 20, $1_1);
  $1_1 = $1944($1_1, 0);
  $1973($5_1, 24, 0);
  $6_1 = $5_1 + 24 | 0;
  $7_1 = fimport$1(72760, $6_1 | 0) | 0;
  $1_1 = fimport$7($1_1 | 0, $7_1 | 0) | 0;
  fimport$4($7_1 | 0);
  $8 = +fimport$5($1_1 | 0, 72724, $6_1 | 0);
  fimport$6($1944($5_1, 24) | 0);
  $1973($5_1, 16, Math_abs($8) < 2147483648.0 ? ~~$8 : -2147483648);
  fimport$4($1_1 | 0);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, $3);
  $1973($1_1, 12, $2_1);
  $2_1 = $677(($10_1 | 0) < 0 ? $9 : $0_1, 4, $5_1 + 16 | 0, ($2_1 | 0) > 0 ? $1_1 + 12 | 0 : 0, ($3 | 0) > 0 ? $1_1 + 8 | 0 : 0, $4_1 & 2 ? 14638 : 13404, $4_1);
  global$0 = $1_1 + 16 | 0;
  $1973($5_1, 12, 53228);
  $1_1 = $1944($5_1, 20);
  $1973($5_1, 24, $1944($5_1, 16));
  $3 = $6_1;
  $0_1 = fimport$1(72724, $3 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($5_1, 24, 0);
  $4_1 = $1_1;
  $1_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($4_1 | 0, $1_1 | 0, $0_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $5_1 + 32 | 0;
  return $2_1 | 0;
 }
 
 function $1339($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $4_1 = $1944($0_1, 0);
  $5_1 = $1936($0_1, 11);
  $1973($3, 20, $1_1);
  $1973($3, 8, 53896);
  $1_1 = $3 + 8 | 0;
  $1524($1_1);
  $2_1 = $679(($5_1 | 0) < 0 ? $4_1 : $0_1, 4, $1_1 + 4 | 0, 2, 0, 0, 13404, $2_1);
  $1973($3, 8, 53896);
  $0_1 = 0;
  while (1) {
   $4_1 = $1944($3, 20);
   $1973($3, 24, $1944(($3 + ($0_1 << 2) | 0) + 12 | 0, 0));
   $5_1 = $3 + 24 | 0;
   $1_1 = fimport$1(72724, $5_1 | 0) | 0;
   $4_1 = $1944($4_1, 0);
   $1973($3, 24, $0_1);
   $6_1 = $4_1;
   $4_1 = fimport$1(72760, $5_1 | 0) | 0;
   fimport$3($6_1 | 0, $4_1 | 0, $1_1 | 0);
   fimport$4($4_1 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 2) {
    continue
   }
   break;
  };
  global$0 = $3 + 32 | 0;
  return $2_1 | 0;
 }
 
 function $1340($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $4_1 = $1944($0_1, 0);
  $5_1 = $1936($0_1, 11);
  $1973($3, 20, $1_1);
  $1973($3, 4, 53952);
  $1_1 = $3 + 4 | 0;
  $1528($1_1);
  $2_1 = $679(($5_1 | 0) < 0 ? $4_1 : $0_1, 4, $1_1 + 4 | 0, 3, 0, 0, 13404, $2_1);
  $1973($3, 4, 53952);
  $0_1 = 0;
  while (1) {
   $4_1 = $1944($3, 20);
   $1973($3, 24, $1944(($3 + ($0_1 << 2) | 0) + 8 | 0, 0));
   $5_1 = $3 + 24 | 0;
   $1_1 = fimport$1(72724, $5_1 | 0) | 0;
   $4_1 = $1944($4_1, 0);
   $1973($3, 24, $0_1);
   $6_1 = $4_1;
   $4_1 = fimport$1(72760, $5_1 | 0) | 0;
   fimport$3($6_1 | 0, $4_1 | 0, $1_1 | 0);
   fimport$4($4_1 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 3) {
    continue
   }
   break;
  };
  global$0 = $3 + 32 | 0;
  return $2_1 | 0;
 }
 
 function $1341($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $4_1 = $1944($0_1, 0);
  $5_1 = $1936($0_1, 11);
  $1973($3, 20, $1_1);
  $1973($3, 0, 54008);
  $1532($3);
  $2_1 = $679(($5_1 | 0) < 0 ? $4_1 : $0_1, 4, $3 + 4 | 0, 4, 0, 0, 13404, $2_1);
  $1973($3, 0, 54008);
  $0_1 = 0;
  while (1) {
   $4_1 = $1944($3, 20);
   $1973($3, 24, $1944((($0_1 << 2) + $3 | 0) + 4 | 0, 0));
   $5_1 = $3 + 24 | 0;
   $1_1 = fimport$1(72724, $5_1 | 0) | 0;
   $4_1 = $1944($4_1, 0);
   $1973($3, 24, $0_1);
   $6_1 = $4_1;
   $4_1 = fimport$1(72760, $5_1 | 0) | 0;
   fimport$3($6_1 | 0, $4_1 | 0, $1_1 | 0);
   fimport$4($4_1 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 4) {
    continue
   }
   break;
  };
  global$0 = $3 + 32 | 0;
  return $2_1 | 0;
 }
 
 function $1342($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = +$3;
  $4_1 = +$4_1;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0;
  $7_1 = global$0 - 32 | 0;
  global$0 = $7_1;
  $8 = $1944($1_1, 0);
  if ($8 >>> 0 < 2147483632) {
   label$2 : {
    if ($8 >>> 0 <= 10) {
     $1968($7_1, 31, $8);
     $9 = $7_1 + 20 | 0;
     break label$2;
    }
    $10_1 = ($8 | 15) + 1 | 0;
    $9 = $1783($10_1);
    $1973($7_1, 28, $10_1 | -2147483648);
    $1973($7_1, 20, $9);
    $1973($7_1, 24, $8);
   }
   if ($8) {
    $1602($9, $1_1 + 4 | 0, $8)
   }
   $1968($8 + $9 | 0, 0, 0);
   $1973($7_1, 12, $5_1);
   $1973($7_1, 16, $2_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($7_1 + 20 | 0, $7_1 + 16 | 0, $3, $4_1, $7_1 + 12 | 0, $6_1) | 0;
   fimport$4($1944($7_1, 12) | 0);
   fimport$4($1944($7_1, 16) | 0);
   if (($1936($7_1, 31) | 0) < 0) {
    $1756($1944($7_1, 20))
   }
   global$0 = $7_1 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1343($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = +$2_1;
  $3 = +$3;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0.0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $6_1 = global$0 - 48 | 0;
  global$0 = $6_1;
  $8 = $1944($0_1, 0);
  $9 = $1936($0_1, 11);
  $1973($6_1, 24, 55232);
  $1973($6_1, 40, $1_1);
  $1_1 = $1944($1_1, 0);
  $1973($6_1, 0, 0);
  $7_1 = fimport$1(72760, $6_1 | 0) | 0;
  $1_1 = fimport$7($1_1 | 0, $7_1 | 0) | 0;
  fimport$4($7_1 | 0);
  $10_1 = +fimport$5($1_1 | 0, 72808, $6_1 | 0);
  fimport$6($1944($6_1, 0) | 0);
  $1990($6_1, 32, $10_1);
  fimport$4($1_1 | 0);
  $1973($6_1 + 12 | 0, 0, 0);
  $1982($6_1, 4, 0, 0);
  $1973($6_1, 0, 53464);
  $1973($6_1, 16, $4_1);
  if (($1944($4_1, 0) | 0) != 2) {
   $1506($6_1)
  }
  $1973($6_1, 0, 53312);
  $4_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($6_1, 4), wasm2js_i32$4 = $6_1 + 4 | 0, wasm2js_i32$5 = ($1936($6_1, 15) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($6_1, 16), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1990($1_1, 0, $3);
  $1990($1_1, 8, $2_1);
  $0_1 = $677(($9 | 0) < 0 ? $8 : $0_1, 9, $6_1 + 32 | 0, $2_1 > 0.0 ? $1_1 + 8 | 0 : 0, $3 > 0.0 ? $1_1 : 0, $4_1, $5_1 | 131072);
  global$0 = $1_1 + 16 | 0;
  $1_1 = $0_1;
  $1973($6_1, 0, 53464);
  if (($1936($6_1, 15) | 0) < 0) {
   $1756($1944($6_1, 4))
  }
  $1973($6_1, 24, 55232);
  $4_1 = $1944($6_1, 40);
  $1990($6_1, 0, $1967($6_1, 32));
  $0_1 = fimport$1(72808, $6_1 | 0) | 0;
  $4_1 = $1944($4_1, 0);
  $1973($6_1, 0, 0);
  $5_1 = $4_1;
  $4_1 = fimport$1(72760, $6_1 | 0) | 0;
  fimport$3($5_1 | 0, $4_1 | 0, $0_1 | 0);
  fimport$4($4_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $6_1 + 48 | 0;
  return $1_1 | 0;
 }
 
 function $1344($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0, $8 = 0.0, $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $7_1 = global$0 - 96 | 0;
  global$0 = $7_1;
  label$1 : {
   label$2 : {
    switch ($1_1 | 0) {
    case 0:
     $9 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1_1 = $1536($7_1 + 32 | 0, $2_1);
     $1973($7_1, 12, 54160);
     $1973($7_1, 20, $3);
     $2_1 = $1944($3, 0);
     if (($2_1 | 0) != 2) {
      $8 = +fimport$5($2_1 | 0, 72688, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1968($7_1, 16, Math_abs($8) < 2147483648.0 ? ~~$8 : -2147483648);
     }
     $2_1 = $1944($1944($7_1, 20), 0);
     $1973($7_1, 80, 54160);
     $1973($7_1, 88, $4_1);
     $3 = $1944($4_1, 0);
     if (($3 | 0) != 2) {
      $8 = +fimport$5($3 | 0, 72688, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1968($7_1, 84, Math_abs($8) < 2147483648.0 ? ~~$8 : -2147483648);
     }
     $3 = $1944($1944($7_1, 88), 0);
     $1973($7_1 + 68 | 0, 0, 0);
     $1982($7_1, 60, 0, 0);
     $1973($7_1, 56, 53464);
     $1973($7_1, 72, $5_1);
     if (($1944($5_1, 0) | 0) != 2) {
      $1506($7_1 + 56 | 0)
     }
     $1973($7_1, 56, 53312);
     $4_1 = ($10_1 | 0) < 0 ? $9 : $0_1;
     $0_1 = $1944($1_1, 0);
     $9 = $679($4_1, 0, $0_1, $1944($1_1, 4) - $0_1 | 0, ($2_1 | 0) != 2 ? $7_1 + 16 | 0 : 0, ($3 | 0) != 2 ? $7_1 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 60), wasm2js_i32$4 = $7_1 + 60 | 0, wasm2js_i32$5 = ($1936($7_1, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $6_1);
     $1973($7_1, 56, 53464);
     if (($1936($7_1, 71) | 0) < 0) {
      $1756($1944($7_1, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 | 0;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95828) & 1)) {
      $4_1 = fimport$17(2, 54204) | 0;
      $1968(0, 95828, 1);
      $1973(0, 95824, $4_1);
     }
     $4_1 = $1944(0, 95824);
     $1973($7_1, 60, $0_1);
     $1973($7_1, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $7_1 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 1:
     $9 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1_1 = $1537($7_1 + 32 | 0, $2_1);
     $1973($7_1, 12, 54220);
     $1973($7_1, 20, $3);
     $2_1 = $1944($3, 0);
     if (($2_1 | 0) != 2) {
      $8 = +fimport$5($2_1 | 0, 72676, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1968($7_1, 16, $8 < 4294967296.0 & $8 >= 0.0 ? ~~$8 >>> 0 : 0);
     }
     $2_1 = $1944($1944($7_1, 20), 0);
     $1973($7_1, 80, 54220);
     $1973($7_1, 88, $4_1);
     $3 = $1944($4_1, 0);
     if (($3 | 0) != 2) {
      $8 = +fimport$5($3 | 0, 72676, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1968($7_1, 84, $8 < 4294967296.0 & $8 >= 0.0 ? ~~$8 >>> 0 : 0);
     }
     $3 = $1944($1944($7_1, 88), 0);
     $1973($7_1 + 68 | 0, 0, 0);
     $1982($7_1, 60, 0, 0);
     $1973($7_1, 56, 53464);
     $1973($7_1, 72, $5_1);
     if (($1944($5_1, 0) | 0) != 2) {
      $1506($7_1 + 56 | 0)
     }
     $1973($7_1, 56, 53312);
     $4_1 = ($10_1 | 0) < 0 ? $9 : $0_1;
     $0_1 = $1944($1_1, 0);
     $9 = $679($4_1, 1, $0_1, $1944($1_1, 4) - $0_1 | 0, ($2_1 | 0) != 2 ? $7_1 + 16 | 0 : 0, ($3 | 0) != 2 ? $7_1 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 60), wasm2js_i32$4 = $7_1 + 60 | 0, wasm2js_i32$5 = ($1936($7_1, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $6_1);
     $1973($7_1, 56, 53464);
     if (($1936($7_1, 71) | 0) < 0) {
      $1756($1944($7_1, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 | 0;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95836) & 1)) {
      $4_1 = fimport$17(2, 54264) | 0;
      $1968(0, 95836, 1);
      $1973(0, 95832, $4_1);
     }
     $4_1 = $1944(0, 95832);
     $1973($7_1, 60, $0_1);
     $1973($7_1, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $7_1 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 2:
     $9 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1_1 = $1538($7_1 + 32 | 0, $2_1);
     $1973($7_1, 12, 54320);
     $1973($7_1, 20, $3);
     $2_1 = $1944($3, 0);
     if (($2_1 | 0) != 2) {
      $8 = +fimport$5($2_1 | 0, 72700, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1970($7_1, 16, Math_abs($8) < 2147483648.0 ? ~~$8 : -2147483648);
     }
     $2_1 = $1944($1944($7_1, 20), 0);
     $1973($7_1, 80, 54320);
     $1973($7_1, 88, $4_1);
     $3 = $1944($4_1, 0);
     if (($3 | 0) != 2) {
      $8 = +fimport$5($3 | 0, 72700, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1970($7_1, 84, Math_abs($8) < 2147483648.0 ? ~~$8 : -2147483648);
     }
     $3 = $1944($1944($7_1, 88), 0);
     $1973($7_1 + 68 | 0, 0, 0);
     $1982($7_1, 60, 0, 0);
     $1973($7_1, 56, 53464);
     $1973($7_1, 72, $5_1);
     if (($1944($5_1, 0) | 0) != 2) {
      $1506($7_1 + 56 | 0)
     }
     $1973($7_1, 56, 53312);
     $4_1 = ($10_1 | 0) < 0 ? $9 : $0_1;
     $0_1 = $1944($1_1, 0);
     $9 = $679($4_1, 2, $0_1, $1944($1_1, 4) - $0_1 >> 1, ($2_1 | 0) != 2 ? $7_1 + 16 | 0 : 0, ($3 | 0) != 2 ? $7_1 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 60), wasm2js_i32$4 = $7_1 + 60 | 0, wasm2js_i32$5 = ($1936($7_1, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $6_1);
     $1973($7_1, 56, 53464);
     if (($1936($7_1, 71) | 0) < 0) {
      $1756($1944($7_1, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 1;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95844) & 1)) {
      $4_1 = fimport$17(2, 54364) | 0;
      $1968(0, 95844, 1);
      $1973(0, 95840, $4_1);
     }
     $4_1 = $1944(0, 95840);
     $1973($7_1, 60, $0_1);
     $1973($7_1, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $7_1 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 3:
     $9 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1_1 = $1539($7_1 + 32 | 0, $2_1);
     $1973($7_1, 12, 54420);
     $1973($7_1, 20, $3);
     $2_1 = $1944($3, 0);
     if (($2_1 | 0) != 2) {
      $8 = +fimport$5($2_1 | 0, 72712, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1970($7_1, 16, $8 < 4294967296.0 & $8 >= 0.0 ? ~~$8 >>> 0 : 0);
     }
     $2_1 = $1944($1944($7_1, 20), 0);
     $1973($7_1, 80, 54420);
     $1973($7_1, 88, $4_1);
     $3 = $1944($4_1, 0);
     if (($3 | 0) != 2) {
      $8 = +fimport$5($3 | 0, 72712, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1970($7_1, 84, $8 < 4294967296.0 & $8 >= 0.0 ? ~~$8 >>> 0 : 0);
     }
     $3 = $1944($1944($7_1, 88), 0);
     $1973($7_1 + 68 | 0, 0, 0);
     $1982($7_1, 60, 0, 0);
     $1973($7_1, 56, 53464);
     $1973($7_1, 72, $5_1);
     if (($1944($5_1, 0) | 0) != 2) {
      $1506($7_1 + 56 | 0)
     }
     $1973($7_1, 56, 53312);
     $4_1 = ($10_1 | 0) < 0 ? $9 : $0_1;
     $0_1 = $1944($1_1, 0);
     $9 = $679($4_1, 3, $0_1, $1944($1_1, 4) - $0_1 >> 1, ($2_1 | 0) != 2 ? $7_1 + 16 | 0 : 0, ($3 | 0) != 2 ? $7_1 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 60), wasm2js_i32$4 = $7_1 + 60 | 0, wasm2js_i32$5 = ($1936($7_1, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $6_1);
     $1973($7_1, 56, 53464);
     if (($1936($7_1, 71) | 0) < 0) {
      $1756($1944($7_1, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 1;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95852) & 1)) {
      $4_1 = fimport$17(2, 54464) | 0;
      $1968(0, 95852, 1);
      $1973(0, 95848, $4_1);
     }
     $4_1 = $1944(0, 95848);
     $1973($7_1, 60, $0_1);
     $1973($7_1, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $7_1 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 4:
     $9 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1_1 = $1540($7_1 + 32 | 0, $2_1);
     $1973($7_1, 12, 54520);
     $1973($7_1, 20, $3);
     $2_1 = $1944($3, 0);
     if (($2_1 | 0) != 2) {
      $8 = +fimport$5($2_1 | 0, 72724, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1973($7_1, 16, Math_abs($8) < 2147483648.0 ? ~~$8 : -2147483648);
     }
     $2_1 = $1944($1944($7_1, 20), 0);
     $1973($7_1, 80, 54520);
     $1973($7_1, 88, $4_1);
     $3 = $1944($4_1, 0);
     if (($3 | 0) != 2) {
      $8 = +fimport$5($3 | 0, 72724, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1973($7_1, 84, Math_abs($8) < 2147483648.0 ? ~~$8 : -2147483648);
     }
     $3 = $1944($1944($7_1, 88), 0);
     $1973($7_1 + 68 | 0, 0, 0);
     $1982($7_1, 60, 0, 0);
     $1973($7_1, 56, 53464);
     $1973($7_1, 72, $5_1);
     if (($1944($5_1, 0) | 0) != 2) {
      $1506($7_1 + 56 | 0)
     }
     $1973($7_1, 56, 53312);
     $4_1 = ($10_1 | 0) < 0 ? $9 : $0_1;
     $0_1 = $1944($1_1, 0);
     $9 = $679($4_1, 4, $0_1, $1944($1_1, 4) - $0_1 >> 2, ($2_1 | 0) != 2 ? $7_1 + 16 | 0 : 0, ($3 | 0) != 2 ? $7_1 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 60), wasm2js_i32$4 = $7_1 + 60 | 0, wasm2js_i32$5 = ($1936($7_1, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $6_1);
     $1973($7_1, 56, 53464);
     if (($1936($7_1, 71) | 0) < 0) {
      $1756($1944($7_1, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 2;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95860) & 1)) {
      $4_1 = fimport$17(2, 54564) | 0;
      $1968(0, 95860, 1);
      $1973(0, 95856, $4_1);
     }
     $4_1 = $1944(0, 95856);
     $1973($7_1, 60, $0_1);
     $1973($7_1, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $7_1 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 5:
     $9 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1_1 = $1541($7_1 + 32 | 0, $2_1);
     $1973($7_1, 12, 54620);
     $1973($7_1, 20, $3);
     $2_1 = $1944($3, 0);
     if (($2_1 | 0) != 2) {
      $8 = +fimport$5($2_1 | 0, 72736, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1973($7_1, 16, $8 < 4294967296.0 & $8 >= 0.0 ? ~~$8 >>> 0 : 0);
     }
     $2_1 = $1944($1944($7_1, 20), 0);
     $1973($7_1, 80, 54620);
     $1973($7_1, 88, $4_1);
     $3 = $1944($4_1, 0);
     if (($3 | 0) != 2) {
      $8 = +fimport$5($3 | 0, 72736, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $1973($7_1, 84, $8 < 4294967296.0 & $8 >= 0.0 ? ~~$8 >>> 0 : 0);
     }
     $3 = $1944($1944($7_1, 88), 0);
     $1973($7_1 + 68 | 0, 0, 0);
     $1982($7_1, 60, 0, 0);
     $1973($7_1, 56, 53464);
     $1973($7_1, 72, $5_1);
     if (($1944($5_1, 0) | 0) != 2) {
      $1506($7_1 + 56 | 0)
     }
     $1973($7_1, 56, 53312);
     $4_1 = ($10_1 | 0) < 0 ? $9 : $0_1;
     $0_1 = $1944($1_1, 0);
     $9 = $679($4_1, 5, $0_1, $1944($1_1, 4) - $0_1 >> 2, ($2_1 | 0) != 2 ? $7_1 + 16 | 0 : 0, ($3 | 0) != 2 ? $7_1 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 60), wasm2js_i32$4 = $7_1 + 60 | 0, wasm2js_i32$5 = ($1936($7_1, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $6_1);
     $1973($7_1, 56, 53464);
     if (($1936($7_1, 71) | 0) < 0) {
      $1756($1944($7_1, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 2;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95868) & 1)) {
      $4_1 = fimport$17(2, 54664) | 0;
      $1968(0, 95868, 1);
      $1973(0, 95864, $4_1);
     }
     $4_1 = $1944(0, 95864);
     $1973($7_1, 60, $0_1);
     $1973($7_1, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $7_1 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 8:
     $9 = $1944($0_1, 0);
     $10_1 = $1936($0_1, 11);
     $1_1 = $1542($7_1 + 32 | 0, $2_1);
     $1973($7_1, 12, 54720);
     $1973($7_1, 20, $3);
     $2_1 = $1944($3, 0);
     if (($2_1 | 0) != 2) {
      $8 = +fimport$5($2_1 | 0, 72808, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $11_1 = Math_fround(3402823466385288598117041.0e14);
      label$71 : {
       if ($8 >= 3402823466385288598117041.0e14) {
        break label$71
       }
       $11_1 = Math_fround(-3402823466385288598117041.0e14);
       if ($8 <= -3402823466385288598117041.0e14) {
        break label$71
       }
       $11_1 = Math_fround($8);
      }
      $1986($7_1, 16, $11_1);
     }
     $2_1 = $1944($1944($7_1, 20), 0);
     $1973($7_1, 80, 54720);
     $1973($7_1, 88, $4_1);
     $3 = $1944($4_1, 0);
     if (($3 | 0) != 2) {
      $8 = +fimport$5($3 | 0, 72808, $7_1 + 56 | 0);
      fimport$6($1944($7_1, 56) | 0);
      $11_1 = Math_fround(3402823466385288598117041.0e14);
      label$73 : {
       if ($8 >= 3402823466385288598117041.0e14) {
        break label$73
       }
       $11_1 = Math_fround(-3402823466385288598117041.0e14);
       if ($8 <= -3402823466385288598117041.0e14) {
        break label$73
       }
       $11_1 = Math_fround($8);
      }
      $1986($7_1, 84, $11_1);
     }
     $3 = $1944($1944($7_1, 88), 0);
     $1973($7_1 + 68 | 0, 0, 0);
     $1982($7_1, 60, 0, 0);
     $1973($7_1, 56, 53464);
     $1973($7_1, 72, $5_1);
     if (($1944($5_1, 0) | 0) != 2) {
      $1506($7_1 + 56 | 0)
     }
     $1973($7_1, 56, 53312);
     $4_1 = ($10_1 | 0) < 0 ? $9 : $0_1;
     $0_1 = $1944($1_1, 0);
     $9 = $679($4_1, 8, $0_1, $1944($1_1, 4) - $0_1 >> 2, ($2_1 | 0) != 2 ? $7_1 + 16 | 0 : 0, ($3 | 0) != 2 ? $7_1 + 84 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 60), wasm2js_i32$4 = $7_1 + 60 | 0, wasm2js_i32$5 = ($1936($7_1, 71) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 72), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $6_1);
     $1973($7_1, 56, 53464);
     if (($1936($7_1, 71) | 0) < 0) {
      $1756($1944($7_1, 60))
     }
     $2_1 = $1944($1_1, 4);
     $0_1 = $1944($1_1, 0);
     $2_1 = $2_1 - $0_1 >> 2;
     $3 = $1944($1944($1_1, 12), 0);
     if (!($1937(0, 95876) & 1)) {
      $4_1 = fimport$17(2, 54764) | 0;
      $1968(0, 95876, 1);
      $1973(0, 95872, $4_1);
     }
     $4_1 = $1944(0, 95872);
     $1973($7_1, 60, $0_1);
     $1973($7_1, 56, $2_1);
     fimport$18($4_1 | 0, $3 | 0, 3559, $7_1 + 56 | 0);
     $0_1 = $1944($1_1, 0);
     if ($0_1) {
      $1973($1_1, 4, $0_1);
      $1756($0_1);
     }
     break label$1;
    case 9:
     break label$2;
    default:
     break label$1;
    };
   }
   $9 = $1944($0_1, 0);
   $10_1 = $1936($0_1, 11);
   $1_1 = $1543($7_1 + 80 | 0, $2_1);
   $1973($7_1, 56, 54820);
   $1973($7_1, 72, $3);
   $2_1 = $1944($3, 0);
   if (($2_1 | 0) != 2) {
    $8 = +fimport$5($2_1 | 0, 72808, $7_1 + 32 | 0);
    fimport$6($1944($7_1, 32) | 0);
    $1990($7_1, 64, $8);
   }
   $2_1 = $1944($1944($7_1, 72), 0);
   $1973($7_1, 32, 54820);
   $1973($7_1, 48, $4_1);
   $3 = $1944($4_1, 0);
   if (($3 | 0) != 2) {
    $8 = +fimport$5($3 | 0, 72808, $7_1 + 12 | 0);
    fimport$6($1944($7_1, 12) | 0);
    $1990($7_1, 40, $8);
   }
   $3 = $1944($1944($7_1, 48), 0);
   $1973($7_1 + 24 | 0, 0, 0);
   $1982($7_1, 16, 0, 0);
   $1973($7_1, 12, 53464);
   $1973($7_1, 28, $5_1);
   if (($1944($5_1, 0) | 0) != 2) {
    $1506($7_1 + 12 | 0)
   }
   $1973($7_1, 12, 53312);
   $4_1 = ($10_1 | 0) < 0 ? $9 : $0_1;
   $0_1 = $1944($1_1, 0);
   $9 = $679($4_1, 9, $0_1, $1944($1_1, 4) - $0_1 >> 3, ($2_1 | 0) != 2 ? $7_1 - -64 | 0 : 0, ($3 | 0) != 2 ? $7_1 + 40 | 0 : 0, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($7_1, 16), wasm2js_i32$4 = $7_1 + 16 | 0, wasm2js_i32$5 = ($1936($7_1, 27) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($7_1, 28), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $6_1);
   $1973($7_1, 12, 53464);
   if (($1936($7_1, 27) | 0) < 0) {
    $1756($1944($7_1, 16))
   }
   $2_1 = $1944($1_1, 4);
   $0_1 = $1944($1_1, 0);
   $2_1 = $2_1 - $0_1 >> 3;
   $3 = $1944($1944($1_1, 12), 0);
   if (!($1937(0, 95884) & 1)) {
    $4_1 = fimport$17(2, 54864) | 0;
    $1968(0, 95884, 1);
    $1973(0, 95880, $4_1);
   }
   $4_1 = $1944(0, 95880);
   $1973($7_1, 60, $0_1);
   $1973($7_1, 56, $2_1);
   fimport$18($4_1 | 0, $3 | 0, 3559, $7_1 + 56 | 0);
   $0_1 = $1944($1_1, 0);
   if ($0_1) {
    $1973($1_1, 4, $0_1);
    $1756($0_1);
   }
  }
  global$0 = $7_1 + 96 | 0;
  return $9 | 0;
 }
 
 function $1345($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $4_1 = $1944($0_1, 0);
  $5_1 = $1936($0_1, 11);
  $1973($3, 20, $1_1);
  $1973($3, 4, 53688);
  $1_1 = $3 + 4 | 0;
  $1516($1_1);
  $2_1 = $698(($5_1 | 0) < 0 ? $4_1 : $0_1, $1_1 + 4 | 0, $2_1 | 2);
  $1973($3, 4, 53688);
  $0_1 = 0;
  while (1) {
   $4_1 = $1944($3, 20);
   $1986($3, 24, $1963(($3 + ($0_1 << 2) | 0) + 8 | 0, 0));
   $5_1 = $3 + 24 | 0;
   $1_1 = fimport$1(72796, $5_1 | 0) | 0;
   $4_1 = $1944($4_1, 0);
   $1973($3, 24, $0_1);
   $6_1 = $4_1;
   $4_1 = fimport$1(72760, $5_1 | 0) | 0;
   fimport$3($6_1 | 0, $4_1 | 0, $1_1 | 0);
   fimport$4($4_1 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 3) {
    continue
   }
   break;
  };
  global$0 = $3 + 32 | 0;
  return $2_1 | 0;
 }
 
 function $1346($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $4_1 = $1944($0_1, 0);
  $5_1 = $1936($0_1, 11);
  $1973($3, 20, $1_1);
  $1973($3, 0, 53744);
  $1520($3);
  $2_1 = $698(($5_1 | 0) < 0 ? $4_1 : $0_1, $3 + 4 | 0, $2_1);
  $1973($3, 0, 53744);
  $0_1 = 0;
  while (1) {
   $4_1 = $1944($3, 20);
   $1986($3, 24, $1963((($0_1 << 2) + $3 | 0) + 4 | 0, 0));
   $5_1 = $3 + 24 | 0;
   $1_1 = fimport$1(72796, $5_1 | 0) | 0;
   $4_1 = $1944($4_1, 0);
   $1973($3, 24, $0_1);
   $6_1 = $4_1;
   $4_1 = fimport$1(72760, $5_1 | 0) | 0;
   fimport$3($6_1 | 0, $4_1 | 0, $1_1 | 0);
   fimport$4($4_1 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 4) {
    continue
   }
   break;
  };
  global$0 = $3 + 32 | 0;
  return $2_1 | 0;
 }
 
 function $1347($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0);
  $4_1 = global$0 - 32 | 0;
  global$0 = $4_1;
  $5_1 = $1944($0_1, 0);
  $6_1 = $1936($0_1, 11);
  $1973($4_1, 20, $1_1);
  $1973($4_1, 4, 53688);
  $3 = $4_1 + 4 | 0;
  $1516($3);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $3 = $3 + 4 | 0;
  $1986($1_1, 0, $1963($3, 0));
  $1986($1_1, 4, $1963($3, 4));
  $7_1 = $1963($3, 8);
  $1973($1_1, 12, 1065353216);
  $1986($1_1, 8, $7_1);
  $0_1 = $701(($6_1 | 0) < 0 ? $5_1 : $0_1, $1_1, $2_1 | 2, 0);
  if ($0_1) {
   $1986($3, 0, $1963($1_1, 0));
   $1986($3, 4, $1963($1_1, 4));
   $1986($3, 8, $1963($1_1, 8));
  }
  global$0 = $1_1 + 16 | 0;
  $2_1 = $0_1;
  $1973($4_1, 4, 53688);
  $0_1 = 0;
  while (1) {
   $3 = $1944($4_1, 20);
   $1986($4_1, 24, $1963(($4_1 + ($0_1 << 2) | 0) + 8 | 0, 0));
   $5_1 = $4_1 + 24 | 0;
   $1_1 = fimport$1(72796, $5_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($4_1, 24, $0_1);
   $6_1 = $3;
   $3 = fimport$1(72760, $5_1 | 0) | 0;
   fimport$3($6_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 3) {
    continue
   }
   break;
  };
  global$0 = $4_1 + 32 | 0;
  return $2_1 | 0;
 }
 
 function $1348($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $5_1 = global$0 - 32 | 0;
  global$0 = $5_1;
  $6_1 = $1944($1_1, 0);
  if ($6_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($6_1 >>> 0 <= 10) {
     $1968($5_1, 31, $6_1);
     $7_1 = $5_1 + 20 | 0;
     break label$2;
    }
    $8 = ($6_1 | 15) + 1 | 0;
    $7_1 = $1783($8);
    $1973($5_1, 28, $8 | -2147483648);
    $1973($5_1, 20, $7_1);
    $1973($5_1, 24, $6_1);
   }
   if ($6_1) {
    $1602($7_1, $1_1 + 4 | 0, $6_1)
   }
   $1968($6_1 + $7_1 | 0, 0, 0);
   $1973($5_1, 12, $4_1);
   $1973($5_1, 16, $2_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($5_1 + 20 | 0, $5_1 + 16 | 0, $3, $5_1 + 12 | 0) | 0;
   fimport$4($1944($5_1, 12) | 0);
   fimport$4($1944($5_1, 16) | 0);
   if (($1936($5_1, 31) | 0) < 0) {
    $1756($1944($5_1, 20))
   }
   global$0 = $5_1 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1349($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $4_1 = global$0 - 48 | 0;
  global$0 = $4_1;
  $5_1 = $1944($0_1, 0);
  $6_1 = $1936($0_1, 11);
  $1973($4_1, 44, $1_1);
  $1973($4_1, 24, 53744);
  $1_1 = $4_1 + 24 | 0;
  $1520($1_1);
  $1973($4_1, 0, 55308);
  $0_1 = ($6_1 | 0) < 0 ? $5_1 : $0_1;
  $1973($4_1, 20, $3);
  $1_1 = $1_1 + 4 | 0;
  if (($1944($3, 0) | 0) != 2) {
   $1520($4_1)
  }
  $2_1 = $701($0_1, $1_1, $2_1, ($1944($1944($4_1, 20), 0) | 0) != 2 ? $4_1 + 4 | 0 : 0);
  $1574($4_1);
  $1973($4_1, 24, 53744);
  $0_1 = 0;
  while (1) {
   $3 = $1944($4_1, 44);
   $1986($4_1, 0, $1963(($4_1 + ($0_1 << 2) | 0) + 28 | 0, 0));
   $1_1 = fimport$1(72796, $4_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($4_1, 0, $0_1);
   $5_1 = $3;
   $3 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($5_1 | 0, $3 | 0, $1_1 | 0);
   fimport$4($3 | 0);
   fimport$4($1_1 | 0);
   $0_1 = $0_1 + 1 | 0;
   if (($0_1 | 0) != 4) {
    continue
   }
   break;
  };
  global$0 = $4_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1350($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $4_1 = global$0 - 32 | 0;
  global$0 = $4_1;
  $5_1 = $1944($0_1, 0);
  $6_1 = $1936($0_1, 11);
  $1983($4_1 + 24 | 0, 0, 0, 0);
  $1983($4_1, 16, 0, 0);
  $1_1 = $768($1_1, $4_1 + 16 | 0);
  $1982($4_1, 8, 0, 0);
  $1983($4_1, 0, $1959($763($3, $4_1 + 8 | 0), 0), i64toi32_i32$HIGH_BITS);
  $0_1 = $700(($6_1 | 0) < 0 ? $5_1 : $0_1, $1_1, $2_1, $4_1);
  global$0 = $4_1 + 32 | 0;
  return $0_1 | 0;
 }
 
 function $1351($0_1) {
  $0_1 = $0_1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  return $709((wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1)) | 0;
 }
 
 function $1352($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  label$1 : {
   $4_1 = $1944($1_1, 0);
   if ($4_1 >>> 0 < 2147483632) {
    label$3 : {
     if ($4_1 >>> 0 <= 10) {
      $1968($3, 31, $4_1);
      $5_1 = $3 + 20 | 0;
      break label$3;
     }
     $6_1 = ($4_1 | 15) + 1 | 0;
     $5_1 = $1783($6_1);
     $1973($3, 28, $6_1 | -2147483648);
     $1973($3, 20, $5_1);
     $1973($3, 24, $4_1);
    }
    if ($4_1) {
     $1602($5_1, $1_1 + 4 | 0, $4_1)
    }
    $1968($4_1 + $5_1 | 0, 0, 0);
    $4_1 = $1944($2_1, 0);
    if ($4_1 >>> 0 >= 2147483632) {
     break label$1
    }
    label$6 : {
     if ($4_1 >>> 0 <= 10) {
      $1968($3, 19, $4_1);
      $1_1 = $3 + 8 | 0;
      break label$6;
     }
     $5_1 = ($4_1 | 15) + 1 | 0;
     $1_1 = $1783($5_1);
     $1973($3, 16, $5_1 | -2147483648);
     $1973($3, 8, $1_1);
     $1973($3, 12, $4_1);
    }
    if ($4_1) {
     $1602($1_1, $2_1 + 4 | 0, $4_1)
    }
    $1968($1_1 + $4_1 | 0, 0, 0);
    $0_1 = FUNCTION_TABLE[$0_1 | 0]($3 + 20 | 0, $3 + 8 | 0) | 0;
    if (($1936($3, 19) | 0) < 0) {
     $1756($1944($3, 8))
    }
    if (($1936($3, 31) | 0) < 0) {
     $1756($1944($3, 20))
    }
    global$0 = $3 + 32 | 0;
    return $0_1 | 0;
   }
   $774();
   wasm2js_trap();
  }
  $774();
  wasm2js_trap();
 }
 
 function $1353($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $1944($0_1, 0);
  $4_1 = $1936($0_1, 11);
  $1973($2_1, 0, (wasm2js_i32$0 = $1944($1_1, 0), wasm2js_i32$1 = $1_1, wasm2js_i32$2 = ($1936($1_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
  $0_1 = $706(($4_1 | 0) < 0 ? $3 : $0_1, 5950, $2_1);
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1354($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $4_1 = $1944($2_1, 0);
  if ($4_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($4_1 >>> 0 <= 10) {
     $1968($3, 15, $4_1);
     $5_1 = $3 + 4 | 0;
     break label$2;
    }
    $6_1 = ($4_1 | 15) + 1 | 0;
    $5_1 = $1783($6_1);
    $1973($3, 12, $6_1 | -2147483648);
    $1973($3, 4, $5_1);
    $1973($3, 8, $4_1);
   }
   if ($4_1) {
    $1602($5_1, $2_1 + 4 | 0, $4_1)
   }
   $1968($4_1 + $5_1 | 0, 0, 0);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($1_1, $3 + 4 | 0) | 0;
   if (($1936($3, 15) | 0) < 0) {
    $1756($1944($3, 4))
   }
   global$0 = $3 + 16 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1355($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 0, (wasm2js_i32$0 = $1944($1_1, 0), wasm2js_i32$1 = $1_1, wasm2js_i32$2 = ($1936($1_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
  $0_1 = $708($0_1, 5950, $2_1);
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1356($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $0_1 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $2_1 = $1944($1944(0, 73568), 7080);
  $1968($2_1, 140, 1);
  if ($1937($2_1, 143)) {
   $0_1 = 0
  } else {
   $0_1 = $707($76($2_1, $0_1), $1_1, $0_1, 0)
  }
  return $0_1 | 0;
 }
 
 function $1357($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $4_1 = global$0 - 32 | 0;
  global$0 = $4_1;
  label$1 : {
   $5_1 = $1944($1_1, 0);
   if ($5_1 >>> 0 < 2147483632) {
    label$3 : {
     if ($5_1 >>> 0 <= 10) {
      $1968($4_1, 31, $5_1);
      $6_1 = $4_1 + 20 | 0;
      break label$3;
     }
     $7_1 = ($5_1 | 15) + 1 | 0;
     $6_1 = $1783($7_1);
     $1973($4_1, 28, $7_1 | -2147483648);
     $1973($4_1, 20, $6_1);
     $1973($4_1, 24, $5_1);
    }
    if ($5_1) {
     $1602($6_1, $1_1 + 4 | 0, $5_1)
    }
    $1968($5_1 + $6_1 | 0, 0, 0);
    $5_1 = $1944($3, 0);
    if ($5_1 >>> 0 >= 2147483632) {
     break label$1
    }
    label$6 : {
     if ($5_1 >>> 0 <= 10) {
      $1968($4_1, 19, $5_1);
      $1_1 = $4_1 + 8 | 0;
      break label$6;
     }
     $6_1 = ($5_1 | 15) + 1 | 0;
     $1_1 = $1783($6_1);
     $1973($4_1, 16, $6_1 | -2147483648);
     $1973($4_1, 8, $1_1);
     $1973($4_1, 12, $5_1);
    }
    if ($5_1) {
     $1602($1_1, $3 + 4 | 0, $5_1)
    }
    $1968($1_1 + $5_1 | 0, 0, 0);
    $0_1 = FUNCTION_TABLE[$0_1 | 0]($4_1 + 20 | 0, $2_1, $4_1 + 8 | 0) | 0;
    if (($1936($4_1, 19) | 0) < 0) {
     $1756($1944($4_1, 8))
    }
    if (($1936($4_1, 31) | 0) < 0) {
     $1756($1944($4_1, 20))
    }
    global$0 = $4_1 + 32 | 0;
    return $0_1 | 0;
   }
   $774();
   wasm2js_trap();
  }
  $774();
  wasm2js_trap();
 }
 
 function $1358($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $4_1 = $1944($0_1, 0);
  $5_1 = $1936($0_1, 11);
  $1973($3, 0, (wasm2js_i32$0 = $1944($2_1, 0), wasm2js_i32$1 = $2_1, wasm2js_i32$2 = ($1936($2_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
  $0_1 = $712(($5_1 | 0) < 0 ? $4_1 : $0_1, $1_1, 5950, $3);
  global$0 = $3 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1359($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $5_1 = $1944($3, 0);
  if ($5_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($5_1 >>> 0 <= 10) {
     $1968($4_1, 15, $5_1);
     $6_1 = $4_1 + 4 | 0;
     break label$2;
    }
    $7_1 = ($5_1 | 15) + 1 | 0;
    $6_1 = $1783($7_1);
    $1973($4_1, 12, $7_1 | -2147483648);
    $1973($4_1, 4, $6_1);
    $1973($4_1, 8, $5_1);
   }
   if ($5_1) {
    $1602($6_1, $3 + 4 | 0, $5_1)
   }
   $1968($5_1 + $6_1 | 0, 0, 0);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1, $4_1 + 4 | 0) | 0;
   if (($1936($4_1, 15) | 0) < 0) {
    $1756($1944($4_1, 4))
   }
   global$0 = $4_1 + 16 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1360($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 0, (wasm2js_i32$0 = $1944($2_1, 0), wasm2js_i32$1 = $2_1, wasm2js_i32$2 = ($1936($2_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
  $2_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $1973($5_1, 12, $3);
  $4_1 = $1944(0, 73568);
  $6_1 = $1944($4_1, 7080);
  $1968($6_1, 140, 1);
  if (!$1937($6_1, 143)) {
   $2_1 = $4_1 + 12800 | 0;
   $4_1 = $22($2_1, 5950, $3);
   $2_1 = $707($80($6_1, $0_1), $1_1, $2_1, $2_1 + $4_1 | 0);
  }
  global$0 = $5_1 + 16 | 0;
  global$0 = $3 + 16 | 0;
  return $2_1 | 0;
 }
 
 function $1361($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $0_1 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = $1944($1944(0, 73568), 7080);
  $1968($1_1, 140, 1);
  $287(Math_fround(0.0));
  $1_1 = $1_1 + 344 | 0;
  $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
  $153($0_1);
 }
 
 function $1362($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = $1944($1944(0, 73568), 7080);
  $1968($1_1, 140, 1);
  $287(Math_fround(0.0));
  $1_1 = $1_1 + 344 | 0;
  $1973($1_1, 0, $1944($1_1, 0) + 1 | 0);
  $265($0_1);
 }
 
 function $1363($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $0_1 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $2_1 = $1944($1944(0, 73568), 7080);
  $1968($2_1, 140, 1);
  if ($1937($2_1, 143)) {
   $0_1 = 0
  } else {
   $0_1 = $707($76($2_1, $0_1), $1_1 | 26, $0_1, 0)
  }
  return $0_1 | 0;
 }
 
 function $1364($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = Math_fround(0), $19 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $5_1 = global$0 - 32 | 0;
  global$0 = $5_1;
  $0_1 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $3 = $1488($5_1 + 12 | 0, $1_1);
  $8 = ($1944($1944($3, 8), 0) | 0) != 2 ? $3 + 4 | 0 : 0;
  $1_1 = global$0 - 80 | 0;
  global$0 = $1_1;
  $4_1 = $1944($1944(0, 73568), 7080);
  $1968($4_1, 140, 1);
  label$1 : {
   if ($1937($4_1, 143)) {
    break label$1
   }
   label$3 : {
    if (!$8) {
     $6_1 = 26;
     break label$3;
    }
    $6_1 = 1048606;
    if (!$1937($8, 0)) {
     break label$1
    }
   }
   $4_1 = $76($4_1, $0_1);
   $9 = $707($4_1, $2_1 | $6_1, $0_1, 0);
   if ($8) {
    $2_1 = $1_1 + 16 | 0;
    $6_1 = $2_1 + 56 | 0;
    $0_1 = $1944(0, 73568);
    $1973($6_1, 0, $1944($0_1 + 7296 | 0, 0));
    $10_1 = $2_1 + 48 | 0;
    $1983($10_1, 0, $1959($0_1 + 7288 | 0, 0), i64toi32_i32$HIGH_BITS);
    $11_1 = $2_1 + 40 | 0;
    $1983($11_1, 0, $1959($0_1 + 7280 | 0, 0), i64toi32_i32$HIGH_BITS);
    $12_1 = $2_1 + 32 | 0;
    $1983($12_1, 0, $1959($0_1 + 7272 | 0, 0), i64toi32_i32$HIGH_BITS);
    $13 = $2_1 + 24 | 0;
    $1983($13, 0, $1959($0_1 + 7264 | 0, 0), i64toi32_i32$HIGH_BITS);
    $14 = $2_1 + 16 | 0;
    $15_1 = $0_1 + 7256 | 0;
    $1983($14, 0, $1959($15_1, 0), i64toi32_i32$HIGH_BITS);
    $2_1 = $2_1 + 8 | 0;
    $1983($2_1, 0, $1959($0_1 + 7248 | 0, 0), i64toi32_i32$HIGH_BITS);
    $1983($1_1, 16, $1959($0_1, 7240), i64toi32_i32$HIGH_BITS);
    $16_1 = $1963($0_1 + 7252 | 0, 0);
    $17_1 = $1963($0_1 + 7260 | 0, 0);
    $7_1 = $1963($0_1 + 5476 | 0, 0);
    $18_1 = $1963($15_1, 0);
    $19 = $1963($0_1, 6468);
    $4_1 = $268($4_1);
    $1986($1_1, 12, $18_1);
    $7_1 = Math_fround(Math_fround($17_1 - Math_fround($7_1 + $7_1)) - $19);
    $1986($1_1, 8, $7_1 <= $16_1 ? $16_1 : $7_1);
    if ($576($4_1, $1_1 + 8 | 0)) {
     $1968($8, 0, 0)
    }
    $0_1 = $0_1 + 7240 | 0;
    $1982($0_1, 0, $1960($1_1, 16), i64toi32_i32$HIGH_BITS);
    $1973($0_1 + 56 | 0, 0, $1944($6_1, 0));
    $1982($0_1 + 48 | 0, 0, $1960($10_1, 0), i64toi32_i32$HIGH_BITS);
    $1982($0_1 + 40 | 0, 0, $1960($11_1, 0), i64toi32_i32$HIGH_BITS);
    $1982($0_1 + 32 | 0, 0, $1960($12_1, 0), i64toi32_i32$HIGH_BITS);
    $1982($0_1 + 24 | 0, 0, $1960($13, 0), i64toi32_i32$HIGH_BITS);
    $1982($0_1 + 16 | 0, 0, $1960($14, 0), i64toi32_i32$HIGH_BITS);
    $1982($0_1 + 8 | 0, 0, $1960($2_1, 0), i64toi32_i32$HIGH_BITS);
   }
  }
  global$0 = $1_1 + 80 | 0;
  $1_1 = $9;
  $1973($3, 0, 52584);
  $2_1 = $1944($3, 8);
  if (($1944($2_1, 0) | 0) != 2) {
   $1973($5_1, 24, $1937($3, 4));
   $3 = $5_1 + 24 | 0;
   $0_1 = fimport$1(72652, $3 | 0) | 0;
   $2_1 = $1944($2_1, 0);
   $1973($5_1, 24, 0);
   $9 = $2_1;
   $2_1 = fimport$1(72760, $3 | 0) | 0;
   fimport$3($9 | 0, $2_1 | 0, $0_1 | 0);
   fimport$4($2_1 | 0);
   fimport$4($0_1 | 0);
  }
  global$0 = $5_1 + 32 | 0;
  return $1_1 | 0;
 }
 
 function $1365($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $6_1 = $1944($1_1, 0);
  if ($6_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($6_1 >>> 0 <= 10) {
     $1968($5_1, 15, $6_1);
     $7_1 = $5_1 + 4 | 0;
     break label$2;
    }
    $8 = ($6_1 | 15) + 1 | 0;
    $7_1 = $1783($8);
    $1973($5_1, 12, $8 | -2147483648);
    $1973($5_1, 4, $7_1);
    $1973($5_1, 8, $6_1);
   }
   if ($6_1) {
    $1602($7_1, $1_1 + 4 | 0, $6_1)
   }
   $1968($6_1 + $7_1 | 0, 0, 0);
   $1973($5_1, 0, $4_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($5_1 + 4 | 0, $2_1, $3, $5_1) | 0;
   fimport$4($1944($5_1, 0) | 0);
   if (($1936($5_1, 15) | 0) < 0) {
    $1756($1944($5_1, 4))
   }
   global$0 = $5_1 + 16 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1366($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $5_1 = $1944($0_1, 0);
  $6_1 = $1936($0_1, 11);
  $1982($4_1, 8, 0, 0);
  $0_1 = $601(($6_1 | 0) < 0 ? $5_1 : $0_1, $1_1, $2_1, $763($3, $4_1 + 8 | 0));
  global$0 = $4_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1367($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $4_1 = global$0 - 32 | 0;
  global$0 = $4_1;
  $5_1 = $1944($0_1, 0);
  $6_1 = $1936($0_1, 11);
  $1_1 = $1488($4_1 + 12 | 0, $1_1);
  $7_1 = $1944($1944($1_1, 8), 0);
  $1982($4_1, 24, 0, 0);
  $3 = $763($3, $4_1 + 24 | 0);
  $5_1 = ($6_1 | 0) < 0 ? $5_1 : $0_1;
  $0_1 = ($7_1 | 0) != 2 ? $1_1 + 4 | 0 : 0;
  $2_1 = $601($5_1, $1937($0_1, 0), $2_1, $3);
  if ($2_1) {
   $1968($0_1, 0, $1937($0_1, 0) ^ 1)
  }
  $1973($1_1, 0, 52584);
  $3 = $1944($1_1, 8);
  if (($1944($3, 0) | 0) != 2) {
   $1973($4_1, 24, $1937($1_1, 4));
   $1_1 = $4_1 + 24 | 0;
   $0_1 = fimport$1(72652, $1_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($4_1, 24, 0);
   $1_1 = fimport$1(72760, $1_1 | 0) | 0;
   fimport$3($3 | 0, $1_1 | 0, $0_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($0_1 | 0);
  }
  global$0 = $4_1 + 32 | 0;
  return $2_1 | 0;
 }
 
 function $1368($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $1944($0_1, 0);
  $4_1 = $1936($0_1, 11);
  $1982($2_1, 8, 0, 0);
  $0_1 = $722(($4_1 | 0) < 0 ? $3 : $0_1, $763($1_1, $2_1 + 8 | 0));
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1369($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  $6_1 = global$0 - 32 | 0;
  global$0 = $6_1;
  $7_1 = $1944($1_1, 0);
  if ($7_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($7_1 >>> 0 <= 10) {
     $1968($6_1, 31, $7_1);
     $8 = $6_1 + 20 | 0;
     break label$2;
    }
    $9 = ($7_1 | 15) + 1 | 0;
    $8 = $1783($9);
    $1973($6_1, 28, $9 | -2147483648);
    $1973($6_1, 20, $8);
    $1973($6_1, 24, $7_1);
   }
   if ($7_1) {
    $1602($8, $1_1 + 4 | 0, $7_1)
   }
   $1968($7_1 + $8 | 0, 0, 0);
   $1973($6_1, 12, $3);
   $1973($6_1, 16, $2_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($6_1 + 20 | 0, $6_1 + 16 | 0, $6_1 + 12 | 0, $4_1, $5_1) | 0;
   fimport$4($1944($6_1, 12) | 0);
   fimport$4($1944($6_1, 16) | 0);
   if (($1936($6_1, 31) | 0) < 0) {
    $1756($1944($6_1, 20))
   }
   global$0 = $6_1 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1370($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0.0, $9 = 0;
  $5_1 = global$0 - 32 | 0;
  global$0 = $5_1;
  $6_1 = $1944(0, 95660);
  fimport$10($1944($2_1, 0) | 0);
  fimport$4($1944($6_1, 128) | 0);
  $2_1 = $1944($2_1, 0);
  $1973($6_1, 132, $3);
  $1973($6_1, 128, $2_1);
  $6_1 = $1944($0_1, 0);
  $9 = $1936($0_1, 11);
  $1973($5_1, 12, 53228);
  $1973($5_1, 20, $1_1);
  $1_1 = $1944($1_1, 0);
  $1973($5_1, 24, 0);
  $2_1 = $1_1;
  $7_1 = $5_1 + 24 | 0;
  $1_1 = fimport$1(72760, $7_1 | 0) | 0;
  $2_1 = fimport$7($2_1 | 0, $1_1 | 0) | 0;
  fimport$4($1_1 | 0);
  $8 = +fimport$5($2_1 | 0, 72724, $7_1 | 0);
  fimport$6($1944($5_1, 24) | 0);
  if (Math_abs($8) < 2147483648.0) {
   $1_1 = ~~$8
  } else {
   $1_1 = -2147483648
  }
  $1973($5_1, 16, $1_1);
  fimport$4($2_1 | 0);
  $1_1 = $724(($9 | 0) < 0 ? $6_1 : $0_1, $5_1 + 16 | 0, 871, $3, $4_1);
  $1973($5_1, 12, 53228);
  $2_1 = $1944($5_1, 20);
  $1973($5_1, 24, $1944($5_1, 16));
  $3 = $5_1 + 24 | 0;
  $0_1 = fimport$1(72724, $3 | 0) | 0;
  $2_1 = $1944($2_1, 0);
  $1973($5_1, 24, 0);
  $4_1 = $2_1;
  $2_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($4_1 | 0, $2_1 | 0, $0_1 | 0);
  fimport$4($2_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $5_1 + 32 | 0;
  return $1_1 | 0;
 }
 
 function $1371($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0.0;
  $6_1 = global$0 - 32 | 0;
  global$0 = $6_1;
  $7_1 = $1944(0, 95660);
  fimport$10($1944($2_1, 0) | 0);
  fimport$4($1944($7_1, 148) | 0);
  $1973($7_1, 148, $1944($2_1, 0));
  fimport$10($1944($3, 0) | 0);
  fimport$4($1944($7_1, 152) | 0);
  $2_1 = $1944($3, 0);
  $1973($7_1, 156, $4_1);
  $1973($7_1, 152, $2_1);
  $3 = $1944($0_1, 0);
  $7_1 = $1936($0_1, 11);
  $1973($6_1, 12, 53228);
  $1973($6_1, 20, $1_1);
  $1_1 = $1944($1_1, 0);
  $1973($6_1, 24, 0);
  $2_1 = $1_1;
  $8 = $6_1 + 24 | 0;
  $1_1 = fimport$1(72760, $8 | 0) | 0;
  $2_1 = fimport$7($2_1 | 0, $1_1 | 0) | 0;
  fimport$4($1_1 | 0);
  $9 = +fimport$5($2_1 | 0, 72724, $8 | 0);
  fimport$6($1944($6_1, 24) | 0);
  if (Math_abs($9) < 2147483648.0) {
   $1_1 = ~~$9
  } else {
   $1_1 = -2147483648
  }
  $1973($6_1, 16, $1_1);
  fimport$4($2_1 | 0);
  $1_1 = $724(($7_1 | 0) < 0 ? $3 : $0_1, $6_1 + 16 | 0, 872, $4_1, $5_1);
  $1973($6_1, 12, 53228);
  $2_1 = $1944($6_1, 20);
  $1973($6_1, 24, $1944($6_1, 16));
  $3 = $6_1 + 24 | 0;
  $0_1 = fimport$1(72724, $3 | 0) | 0;
  $2_1 = $1944($2_1, 0);
  $1973($6_1, 24, 0);
  $4_1 = $2_1;
  $2_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($4_1 | 0, $2_1 | 0, $0_1 | 0);
  fimport$4($2_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $6_1 + 32 | 0;
  return $1_1 | 0;
 }
 
 function $1372($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8, $9) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  $8 = $8 | 0;
  $9 = $9 | 0;
  var $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0;
  $10_1 = global$0 - 48 | 0;
  global$0 = $10_1;
  $11_1 = $1944($1_1, 0);
  if ($11_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($11_1 >>> 0 <= 10) {
     $1968($10_1, 47, $11_1);
     $12_1 = $10_1 + 36 | 0;
     break label$2;
    }
    $13 = ($11_1 | 15) + 1 | 0;
    $12_1 = $1783($13);
    $1973($10_1, 44, $13 | -2147483648);
    $1973($10_1, 36, $12_1);
    $1973($10_1, 40, $11_1);
   }
   if ($11_1) {
    $1602($12_1, $1_1 + 4 | 0, $11_1)
   }
   $1968($11_1 + $12_1 | 0, 0, 0);
   $1973($10_1, 28, $3);
   $1973($10_1, 32, $2_1);
   $1973($10_1, 24, $6_1);
   $1973($10_1, 20, $7_1);
   $1973($10_1, 16, $8);
   $1973($10_1, 12, $9);
   FUNCTION_TABLE[$0_1 | 0]($10_1 + 36 | 0, $10_1 + 32 | 0, $10_1 + 28 | 0, $4_1, $5_1, $10_1 + 24 | 0, $10_1 + 20 | 0, $10_1 + 16 | 0, $10_1 + 12 | 0);
   fimport$4($1944($10_1, 12) | 0);
   fimport$4($1944($10_1, 16) | 0);
   fimport$4($1944($10_1, 20) | 0);
   fimport$4($1944($10_1, 24) | 0);
   fimport$4($1944($10_1, 28) | 0);
   fimport$4($1944($10_1, 32) | 0);
   if (($1936($10_1, 47) | 0) < 0) {
    $1756($1944($10_1, 36))
   }
   global$0 = $10_1 + 48 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1373($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  $8 = $8 | 0;
  var $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = 0.0, $14 = 0.0, $15_1 = 0, $16_1 = 0;
  $9 = global$0 - 48 | 0;
  global$0 = $9;
  $10_1 = $1944(0, 95660);
  fimport$10($1944($1_1, 0) | 0);
  fimport$4($1944($10_1, 80) | 0);
  $1973($10_1, 80, $1944($1_1, 0));
  fimport$10($1944($2_1, 0) | 0);
  fimport$4($1944($10_1, 84) | 0);
  $1973($10_1, 84, $1944($2_1, 0));
  $2_1 = $1944($0_1, 0);
  $10_1 = $1936($0_1, 11);
  $1973($9 + 40 | 0, 0, 0);
  $1982($9, 32, 0, 0);
  $1973($9, 28, 53464);
  $1973($9, 44, $5_1);
  if (($1944($5_1, 0) | 0) != 2) {
   $1506($9 + 28 | 0)
  }
  $1973($9, 28, 53312);
  $5_1 = $1944($1944($9, 44), 0);
  $15_1 = $1944($9, 32);
  $16_1 = $1936($9, 43);
  $1_1 = $9 + 20 | 0;
  $13 = +fimport$5($1944($6_1, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($9, 20) | 0);
  $14 = +fimport$5($1944($7_1, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($9, 20) | 0);
  $1982($9, 20, 0, 0);
  $1983($9, 8, $1959($763($8, $1_1), 0), i64toi32_i32$HIGH_BITS);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $6_1 = $1959($9 + 8 | 0, 0);
  $7_1 = i64toi32_i32$HIGH_BITS;
  $1983($1_1, 0, $6_1, $7_1);
  $1983($1_1, 8, $6_1, $7_1);
  $0_1 = ($10_1 | 0) < 0 ? $2_1 : $0_1;
  $2_1 = ($5_1 | 0) != 2 ? (($16_1 | 0) < 0 ? $15_1 : $9 + 32 | 0) : 0;
  $11_1 = Math_fround(3402823466385288598117041.0e14);
  label$2 : {
   if ($13 >= 3402823466385288598117041.0e14) {
    break label$2
   }
   $11_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($13 <= -3402823466385288598117041.0e14) {
    break label$2
   }
   $11_1 = Math_fround($13);
  }
  $12_1 = Math_fround(3402823466385288598117041.0e14);
  label$3 : {
   if ($14 >= 3402823466385288598117041.0e14) {
    break label$3
   }
   $12_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($14 <= -3402823466385288598117041.0e14) {
    break label$3
   }
   $12_1 = Math_fround($14);
  }
  $725(0, $0_1, 873, $3, $4_1, $2_1, $11_1, $12_1, $1_1);
  global$0 = $1_1 + 16 | 0;
  $1973($9, 28, 53464);
  if (($1936($9, 43) | 0) < 0) {
   $1756($1944($9, 32))
  }
  global$0 = $9 + 48 | 0;
 }
 
 function $1374($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  $8 = $8 | 0;
  var $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = 0.0, $14 = 0.0, $15_1 = 0, $16_1 = 0;
  $9 = global$0 - 48 | 0;
  global$0 = $9;
  $10_1 = $1944(0, 95660);
  fimport$10($1944($1_1, 0) | 0);
  fimport$4($1944($10_1, 88) | 0);
  $1973($10_1, 88, $1944($1_1, 0));
  fimport$10($1944($2_1, 0) | 0);
  fimport$4($1944($10_1, 92) | 0);
  $1973($10_1, 92, $1944($2_1, 0));
  $2_1 = $1944($0_1, 0);
  $10_1 = $1936($0_1, 11);
  $1973($9 + 40 | 0, 0, 0);
  $1982($9, 32, 0, 0);
  $1973($9, 28, 53464);
  $1973($9, 44, $5_1);
  if (($1944($5_1, 0) | 0) != 2) {
   $1506($9 + 28 | 0)
  }
  $1973($9, 28, 53312);
  $5_1 = $1944($1944($9, 44), 0);
  $15_1 = $1944($9, 32);
  $16_1 = $1936($9, 43);
  $1_1 = $9 + 20 | 0;
  $13 = +fimport$5($1944($6_1, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($9, 20) | 0);
  $14 = +fimport$5($1944($7_1, 0) | 0, 72808, $1_1 | 0);
  fimport$6($1944($9, 20) | 0);
  $1982($9, 20, 0, 0);
  $1983($9, 8, $1959($763($8, $1_1), 0), i64toi32_i32$HIGH_BITS);
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $6_1 = $1959($9 + 8 | 0, 0);
  $7_1 = i64toi32_i32$HIGH_BITS;
  $1983($1_1, 0, $6_1, $7_1);
  $1983($1_1, 8, $6_1, $7_1);
  $0_1 = ($10_1 | 0) < 0 ? $2_1 : $0_1;
  $2_1 = ($5_1 | 0) != 2 ? (($16_1 | 0) < 0 ? $15_1 : $9 + 32 | 0) : 0;
  $11_1 = Math_fround(3402823466385288598117041.0e14);
  label$2 : {
   if ($13 >= 3402823466385288598117041.0e14) {
    break label$2
   }
   $11_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($13 <= -3402823466385288598117041.0e14) {
    break label$2
   }
   $11_1 = Math_fround($13);
  }
  $12_1 = Math_fround(3402823466385288598117041.0e14);
  label$3 : {
   if ($14 >= 3402823466385288598117041.0e14) {
    break label$3
   }
   $12_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($14 <= -3402823466385288598117041.0e14) {
    break label$3
   }
   $12_1 = Math_fround($14);
  }
  $725(1, $0_1, 874, $3, $4_1, $2_1, $11_1, $12_1, $1_1);
  global$0 = $1_1 + 16 | 0;
  $1973($9, 28, 53464);
  if (($1936($9, 43) | 0) < 0) {
   $1756($1944($9, 32))
  }
  global$0 = $9 + 48 | 0;
 }
 
 function $1375($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $4_1 = $1944($1_1, 0);
  if ($4_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($4_1 >>> 0 <= 10) {
     $1968($3, 15, $4_1);
     $5_1 = $3 + 4 | 0;
     break label$2;
    }
    $6_1 = ($4_1 | 15) + 1 | 0;
    $5_1 = $1783($6_1);
    $1973($3, 12, $6_1 | -2147483648);
    $1973($3, 4, $5_1);
    $1973($3, 8, $4_1);
   }
   if ($4_1) {
    $1602($5_1, $1_1 + 4 | 0, $4_1)
   }
   $1968($4_1 + $5_1 | 0, 0, 0);
   FUNCTION_TABLE[$0_1 | 0]($3 + 4 | 0, $2_1);
   if (($1936($3, 15) | 0) < 0) {
    $1756($1944($3, 4))
   }
   global$0 = $3 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1376($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $0_1 = global$0 - 16 | 0;
  global$0 = $0_1;
  $1973($0_1, 0, $2_1);
  $1973($0_1, 4, $1_1 ? 10668 : 10805);
  $557(5812, $0_1);
  global$0 = $0_1 + 16 | 0;
 }
 
 function $1378($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2_1 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $0_1 = global$0 - 16 | 0;
  global$0 = $0_1;
  $1973($0_1, 4, $1_1);
  $1973($0_1, 0, $2_1);
  $557(13139, $0_1);
  global$0 = $0_1 + 16 | 0;
 }
 
 function $1381($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $5_1 = $1944($1_1, 0);
  if ($5_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($5_1 >>> 0 <= 10) {
     $1968($4_1, 15, $5_1);
     $6_1 = $4_1 + 4 | 0;
     break label$2;
    }
    $7_1 = ($5_1 | 15) + 1 | 0;
    $6_1 = $1783($7_1);
    $1973($4_1, 12, $7_1 | -2147483648);
    $1973($4_1, 4, $6_1);
    $1973($4_1, 8, $5_1);
   }
   if ($5_1) {
    $1602($6_1, $1_1 + 4 | 0, $5_1)
   }
   $1968($5_1 + $6_1 | 0, 0, 0);
   $1973($4_1, 0, $3);
   FUNCTION_TABLE[$0_1 | 0]($4_1 + 4 | 0, $2_1, $4_1);
   fimport$4($1944($4_1, 0) | 0);
   if (($1936($4_1, 15) | 0) < 0) {
    $1756($1944($4_1, 4))
   }
   global$0 = $4_1 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1382($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = Math_fround($1_1);
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $4_1 = $1944($0_1, 0);
  $5_1 = $1936($0_1, 11);
  $1973($3 + 24 | 0, 0, 0);
  $1982($3, 16, 0, 0);
  $1973($3, 12, 53464);
  $1973($3, 28, $2_1);
  if (($1944($2_1, 0) | 0) != 2) {
   $1506($3 + 12 | 0)
  }
  $1973($3, 12, 53312);
  $2_1 = ($5_1 | 0) < 0 ? $4_1 : $0_1;
  $4_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($3, 16), wasm2js_i32$4 = $3 + 16 | 0, wasm2js_i32$5 = ($1936($3, 27) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($3, 28), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $0_1 = global$0 - 112 | 0;
  global$0 = $0_1;
  label$1 : {
   if ($4_1) {
    $1973($0_1, 32, $4_1);
    $4_1 = $0_1 + 48 | 0;
    $21($4_1, 64, 5811, $0_1 + 32 | 0);
    $1990($0_1, 24, +$1_1);
    $1973($0_1, 16, $2_1);
    $557($4_1, $0_1 + 16 | 0);
    break label$1;
   }
   $1973($0_1, 0, $2_1);
   $1990($0_1, 8, +$1_1);
   $557(9700, $0_1);
  }
  global$0 = $0_1 + 112 | 0;
  $1973($3, 12, 53464);
  if (($1936($3, 27) | 0) < 0) {
   $1756($1944($3, 16))
  }
  global$0 = $3 + 32 | 0;
 }
 
 function $1383($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = Math_fround(0), $10_1 = Math_fround(0), $11_1 = 0, $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = 0, $15_1 = 0, $16_1 = Math_fround(0), $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = Math_fround(0), $21_1 = 0, $22_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $17_1 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $18_1 = $1_1;
  $0_1 = 0;
  $3 = global$0 - 112 | 0;
  global$0 = $3;
  $4_1 = $1944(0, 73568);
  $5_1 = $1944($4_1, 7080);
  $1968($5_1, 140, 1);
  label$1 : {
   if ($1937($5_1, 143)) {
    break label$1
   }
   $15_1 = $76($5_1, $17_1);
   $1_1 = $133($15_1);
   $0_1 = $1944($4_1 + 12104 | 0, 0);
   $6_1 = $1944($4_1, 12096);
   $11_1 = $0_1 + ($6_1 << 2) | 0;
   $21_1 = $1937($5_1 + 11 | 0, 0) & 16 ? 285737285 : 268960069;
   label$2 : {
    while (1) {
     $2_1 = $0_1;
     $19 = $2_1 >>> 0 >= $11_1 >>> 0;
     if ($19) {
      break label$2
     }
     $0_1 = $2_1 + 4 | 0;
     if (($1944($2_1, 0) | 0) != ($15_1 | 0)) {
      continue
     }
     break;
    };
    if ($19) {
     break label$2
    }
    if ($1_1) {
     $0_1 = $320($15_1, $21_1);
     break label$1;
    }
    $1973($4_1, 7300, 0);
    $0_1 = $1_1;
    break label$1;
   }
   $0_1 = $1944($4_1 + 12100 | 0, 0);
   label$5 : {
    if (($0_1 | 0) != ($6_1 | 0)) {
     break label$5
    }
    $2_1 = $0_1 ? $0_1 + (($0_1 | 0) / 2 | 0) | 0 : 8;
    $6_1 = $6_1 + 1 | 0;
    $2_1 = ($2_1 | 0) > ($6_1 | 0) ? $2_1 : $6_1;
    if (($0_1 | 0) >= ($2_1 | 0)) {
     break label$5
    }
    $0_1 = $16($2_1 << 2);
    $6_1 = $1944($4_1, 12104);
    if ($6_1) {
     $1602($0_1, $6_1, $1944($4_1, 12096) << 2);
     $17($1944($4_1, 12104));
    }
    $1973($4_1, 12100, $2_1);
    $1973($4_1, 12104, $0_1);
   }
   $1973($1944($4_1, 12104) + ($1944($4_1, 12096) << 2) | 0, 0, $15_1);
   $1973($4_1, 12096, $1944($4_1, 12096) + 1 | 0);
   $68($3 + 104 | 0, $17_1, 0, 1, Math_fround(-1.0));
   $0_1 = $1944(0, 73568);
   $11_1 = $1944($0_1, 7468);
   $2_1 = $1944($0_1, 7480);
   $6_1 = 0;
   label$9 : {
    if (($11_1 | 0) <= ($2_1 | 0)) {
     break label$9
    }
    $6_1 = 0;
    if ($1937($1944($0_1, 7080) + 11 | 0, 0) & 16) {
     break label$9
    }
    $0_1 = $1944($1944($0_1 + 7476 | 0, 0) + Math_imul($2_1, 36) | 0, 4);
    $6_1 = 0;
    if (!$0_1) {
     break label$9
    }
    $6_1 = ($1937($0_1 + 11 | 0, 0) & 16) >>> 4 | 0;
   }
   $19 = $1944($4_1, 7508);
   if ($6_1) {
    $1973($4_1, 7508, $5_1)
   }
   $1983($3, 96, 0, 0);
   $8 = $1963($5_1 + 212 | 0, 0);
   $0_1 = $1944($5_1, 208);
   $153($17_1);
   if (!$18_1) {
    $226(1)
   }
   $10_1 = (wasm2js_scratch_store_i32(2, $0_1), wasm2js_scratch_load_f32());
   label$14 : {
    if (!$1944($5_1 + 376 | 0, 0)) {
     $9 = Math_fround($10_1 + Math_fround(-1.0));
     $7_1 = $1963($4_1 + 5492 | 0, 0);
     $10_1 = Math_fround($7_1 * Math_fround(.5));
     label$16 : {
      if (Math_fround(Math_abs($10_1)) < Math_fround(2147483648.0)) {
       $0_1 = ~~$10_1;
       break label$16;
      }
      $0_1 = -2147483648;
     }
     $10_1 = Math_fround($0_1 | 0);
     $9 = Math_fround($9 - $10_1);
     $12_1 = Math_fround($8 - $1963($4_1 + 5480 | 0, 0));
     $8 = Math_fround(0.0);
     if ($1937($5_1 + 9 | 0, 0) & 4) {
      $0_1 = $1944(0, 73568);
      $8 = Math_fround($1963($0_1, 6472) * $1963($5_1, 572));
      $13 = $1963($5_1 + 312 | 0, 0);
      $2_1 = $1944($5_1, 728);
      if ($2_1) {
       $8 = Math_fround($8 * $1963($2_1, 572))
      }
      $16_1 = $1963($0_1 + 5480 | 0, 0);
      $8 = Math_fround(Math_fround($16_1 + $16_1) + Math_fround($13 + $8));
     }
     $1986($3, 96, $9);
     $1986($3, 100, Math_fround($12_1 + $8));
     $1986($5_1, 208, Math_fround($1963($5_1, 208) + $10_1));
     $1986($3, 92, $1963($4_1 + 5496 | 0, 0));
     $1986($3, 88, Math_fround($7_1 + $7_1));
     $0_1 = $3 + 88 | 0;
     $59(14, $0_1);
     $2_1 = $1941($5_1 + 328 | 0, 0);
     $8 = $1963($5_1 + 264 | 0, 0);
     $7_1 = $1963($5_1 + 212 | 0, 0);
     $10_1 = $1963($5_1, 208);
     $9 = $1963($3, 104);
     $1973($3, 92, 0);
     $1986($3, 88, $9);
     $0_1 = $601(19354, $1_1, 5242881, $0_1);
     $1986($3, 84, Math_fround($7_1 + $8));
     $1986($3, 80, Math_fround($10_1 + Math_fround($2_1 >>> 0)));
     $1983($3, 8, $1960($3, 80), i64toi32_i32$HIGH_BITS);
     $63($3 + 8 | 0, $17_1, 0, 1);
     $60(1);
     $8 = Math_fround($1963($4_1, 5492) * Math_fround(-.5));
     label$21 : {
      if (Math_fround(Math_abs($8)) < Math_fround(2147483648.0)) {
       $2_1 = ~~$8;
       break label$21;
      }
      $2_1 = -2147483648;
     }
     $1986($5_1, 208, Math_fround($1963($5_1, 208) + Math_fround($2_1 | 0)));
     break label$14;
    }
    $7_1 = $1963($4_1 + 5428 | 0, 0);
    $1973($3, 96, $0_1);
    $1986($3, 100, Math_fround($8 - $7_1));
    $0_1 = $5_1 + 334 | 0;
    $2_1 = $1941($0_1, 0);
    $9 = $1963($4_1, 6468);
    $7_1 = $1963($3, 104);
    $1970($0_1, 0, $2_1);
    $2_1 = $5_1 + 336 | 0;
    $0_1 = $1941($2_1, 0);
    $11_1 = $2_1;
    $2_1 = $7_1 < Math_fround(4294967296.0) & $7_1 >= Math_fround(0.0) ? ~~$7_1 >>> 0 : 0;
    $1970($11_1, 0, $0_1 >>> 0 > $2_1 >>> 0 ? $0_1 : $2_1);
    $2_1 = $5_1 + 340 | 0;
    $0_1 = $1941($2_1, 0);
    $11_1 = $2_1;
    $7_1 = Math_fround($9 * Math_fround(1.2000000476837158));
    label$28 : {
     if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
      $2_1 = ~~$7_1;
      break label$28;
     }
     $2_1 = -2147483648;
    }
    $2_1 = $2_1 & 65535;
    $1970($11_1, 0, $0_1 >>> 0 > $2_1 >>> 0 ? $0_1 : $2_1);
    $22_1 = $1941($5_1 + 324 | 0, 0);
    $0_1 = 0;
    $2_1 = 0;
    while (1) {
     $11_1 = $1941(($5_1 + ($2_1 << 1) | 0) + 334 | 0, 0);
     $0_1 = ($11_1 + $0_1 | 0) + ($14 & 1 ? ($11_1 ? $22_1 : 0) : 0) | 0;
     $14 = ($11_1 | 0) != 0 | $14;
     $2_1 = $2_1 + 1 | 0;
     if (($2_1 | 0) != 4) {
      continue
     }
     break;
    };
    $0_1 = $0_1 & 65535;
    $1973($5_1 + 320 | 0, 0, $0_1);
    $2_1 = $1944($5_1, 316);
    $14 = $3 + 88 | 0;
    $208($14);
    $7_1 = $1963($3, 88);
    $11_1 = $1941($5_1 + 328 | 0, 0);
    $9 = $1963($5_1 + 264 | 0, 0);
    $12_1 = $1963($5_1 + 212 | 0, 0);
    $13 = $1963($5_1, 208);
    $1973($3, 92, 0);
    $16_1 = Math_fround(($0_1 >>> 0 < $2_1 >>> 0 ? $2_1 : $0_1) >>> 0);
    $1986($3, 88, $16_1);
    $0_1 = $601(19354, $1_1, 22020097, $14);
    $1986($3, 76, Math_fround($12_1 + $9));
    $1986($3, 72, Math_fround($13 + Math_fround($11_1 >>> 0)));
    $1983($3, 32, $1960($3, 72), i64toi32_i32$HIGH_BITS);
    $63($3 + 32 | 0, $17_1, 0, 1);
    $2_1 = $1941($5_1 + 332 | 0, 0);
    $14 = $1944($5_1, 580);
    $9 = $1963($4_1, 6468);
    $1986($3, 60, Math_fround($8 + Math_fround(0.0)));
    $8 = Math_fround($7_1 - $16_1);
    $1986($3, 56, Math_fround(Math_fround(Math_fround($9 * Math_fround(.30000001192092896)) + Math_fround(($8 <= Math_fround(0.0) ? Math_fround(0.0) : $8) + Math_fround($2_1 >>> 0))) + $10_1));
    $2_1 = $51(0, Math_fround(1.0));
    $1983($3, 16, $1959($3, 56), i64toi32_i32$HIGH_BITS);
    $476($14, $3 + 16 | 0, $2_1, 1, Math_fround(1.0));
   }
   if (!$18_1) {
    $227()
   }
   $2_1 = ($1944($4_1, 7116) | 0) == ($15_1 | 0);
   if ($6_1) {
    $1973($4_1, 7508, $19)
   }
   $14 = $2_1 & $18_1;
   label$34 : {
    label$35 : {
     label$37 : {
      if (($1944($5_1, 376) | 0) == 1) {
       $2_1 = $1944($4_1, 7480);
       $6_1 = 0;
       label$39 : {
        if (($1944($4_1, 7468) | 0) <= ($2_1 | 0)) {
         break label$39
        }
        $2_1 = $1944($4_1 + 7476 | 0, 0) + Math_imul($2_1, 36) | 0;
        $6_1 = 0;
        if (($1944($2_1, 8) | 0) != ($5_1 | 0)) {
         break label$39
        }
        $6_1 = $1944($2_1, 4);
       }
       $2_1 = $6_1;
       $6_1 = 1;
       label$41 : {
        if (($1944($4_1, 7084) | 0) != ($5_1 | 0)) {
         break label$41
        }
        $6_1 = 1;
        if (!$2_1) {
         break label$41
        }
        $6_1 = 1;
        if ($1937($5_1 + 9 | 0, 0) & 4) {
         break label$41
        }
        $16_1 = $1963($2_1 + 24 | 0, 0);
        $9 = $1963($2_1 + 16 | 0, 0);
        $8 = $1963($4_1, 6468);
        $13 = $1963($2_1, 20);
        $7_1 = $1963($2_1, 12);
        $12_1 = $1963($4_1 + 880 | 0, 0);
        $6_1 = $4_1 + 228 | 0;
        $20_1 = $1963($6_1, 0);
        $10_1 = Math_fround($1963($4_1 + 232 | 0, 0) - $1963($4_1 + 884 | 0, 0));
        $1986($3, 92, $10_1);
        $12_1 = Math_fround($20_1 - $12_1);
        $1986($3, 88, $12_1);
        $13 = Math_fround($7_1 + $13);
        label$42 : {
         if ($1963($5_1, 12) < $7_1) {
          $1986($3, 48, $7_1);
          break label$42;
         }
         $1986($3, 48, $13);
        }
        $16_1 = Math_fround($9 + $16_1);
        $1986($3, 52, $9);
        label$44 : {
         if ($1963($5_1, 12) < $1963($2_1, 12)) {
          $1986($3, 40, $7_1);
          break label$44;
         }
         $1986($3, 40, $13);
        }
        $1986($3, 44, $16_1);
        $1986($3, 88, Math_fround($12_1 + ($1963($5_1, 12) < $1963($2_1, 12) ? Math_fround(-.5) : Math_fround(.5))));
        $20_1 = $1963($3, 52);
        $9 = Math_fround($8 * Math_fround(.5));
        $13 = Math_fround($8 * Math_fround(2.5));
        $7_1 = Math_fround(Math_fround(Math_abs(Math_fround($12_1 - $1963($3, 48)))) * Math_fround(.30000001192092896));
        $7_1 = $7_1 < $9 ? $9 : $7_1 > $13 ? $13 : $7_1;
        $9 = Math_fround(Math_fround($20_1 - $7_1) - $10_1);
        $12_1 = Math_fround($8 * Math_fround(-8.0));
        $1986($3, 52, Math_fround($10_1 + ($9 >= $12_1 ? $9 : $12_1)));
        $7_1 = Math_fround(Math_fround($16_1 + $7_1) - $10_1);
        $8 = Math_fround($8 * Math_fround(8.0));
        $1986($3, 44, Math_fround($10_1 + ($7_1 < $8 ? $7_1 : $8)));
        $6_1 = $12($3 + 88 | 0, $3 + 48 | 0, $3 + 40 | 0, $6_1) ^ 1;
       }
       $2_1 = 0;
       label$46 : {
        if ($14 | $1_1 ^ 1) {
         break label$46
        }
        $2_1 = 0;
        if (($1944($4_1, 7084) | 0) != ($5_1 | 0)) {
         break label$46
        }
        $2_1 = $1944($4_1, 7120);
        $2_1 = $6_1 & (($2_1 | 0) != 0 & ($2_1 | 0) != ($15_1 | 0));
       }
       $5_1 = ($1_1 ^ 1) & $0_1;
       $0_1 = $1_1 ? $5_1 : $0_1 ? $5_1 : $14 ? $6_1 : $5_1;
       if (($1944($4_1, 7512) | 0) != ($15_1 | 0)) {
        break label$35
       }
       if (($1944($4_1, 7612) | 0) != 1) {
        break label$35
       }
       break label$37;
      }
      if ($0_1) {
       $2_1 = $0_1 & $1_1 & $6_1;
       $0_1 = $2_1 ^ 1;
       $1_1 = $1_1 ^ $2_1;
       break label$34;
      }
      if (($6_1 & $14 ^ 1 | $1_1) != 1) {
       $0_1 = 1;
       $2_1 = 0;
       break label$35;
      }
      if (($1944($4_1, 7512) | 0) != ($15_1 | 0)) {
       $0_1 = 0;
       $2_1 = 0;
       break label$35;
      }
      $2_1 = 0;
      if (($1944($4_1, 7612) | 0) == 3) {
       break label$37
      }
      $0_1 = 0;
      break label$35;
     }
     $203();
     $0_1 = 1;
    }
   }
   label$51 : {
    if (!(!$18_1 | $2_1)) {
     break label$51
    }
    if (!$133($15_1)) {
     break label$51
    }
    $132($1944($4_1, 7480), 1);
   }
   $269();
   label$53 : {
    label$54 : {
     if ($1_1 | $0_1 ^ 1) {
      break label$54
     }
     if (($1944($4_1, 7468) | 0) <= ($1944($4_1, 7480) | 0)) {
      break label$54
     }
     $317($17_1, 0);
     $0_1 = 0;
     break label$53;
    }
    if ($0_1) {
     $317($17_1, 0)
    }
    if ($0_1 | $1_1) {
     $1982($3, 88, 0, 0);
     $250($3 + 96 | 0, 1, $3 + 88 | 0);
     $58(7, $1963($4_1 + 5468 | 0, 0));
     $0_1 = $320($15_1, $21_1);
     $60(1);
     break label$53;
    }
    $1973($4_1, 7300, 0);
    $0_1 = 0;
   }
  }
  global$0 = $3 + 112 | 0;
  return $0_1 | 0;
 }
 
 function $1384($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $6_1 = $1944($1_1, 0);
  if ($6_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($6_1 >>> 0 <= 10) {
     $1968($5_1, 15, $6_1);
     $7_1 = $5_1 + 4 | 0;
     break label$2;
    }
    $8 = ($6_1 | 15) + 1 | 0;
    $7_1 = $1783($8);
    $1973($5_1, 12, $8 | -2147483648);
    $1973($5_1, 4, $7_1);
    $1973($5_1, 8, $6_1);
   }
   if ($6_1) {
    $1602($7_1, $1_1 + 4 | 0, $6_1)
   }
   $1968($6_1 + $7_1 | 0, 0, 0);
   $1973($5_1, 0, $2_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($5_1 + 4 | 0, $5_1, $3, $4_1) | 0;
   fimport$4($1944($5_1, 0) | 0);
   if (($1936($5_1, 15) | 0) < 0) {
    $1756($1944($5_1, 4))
   }
   global$0 = $5_1 + 16 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1385($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $4_1 = global$0 - 32 | 0;
  global$0 = $4_1;
  $5_1 = $1944($0_1, 0);
  $6_1 = $1936($0_1, 11);
  $1973($4_1 + 24 | 0, 0, 0);
  $1982($4_1, 16, 0, 0);
  $1973($4_1, 12, 53464);
  $1973($4_1, 28, $1_1);
  if (($1944($1_1, 0) | 0) != 2) {
   $1506($4_1 + 12 | 0)
  }
  $1973($4_1, 12, 53312);
  $0_1 = $742(($6_1 | 0) < 0 ? $5_1 : $0_1, (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($4_1, 16), wasm2js_i32$4 = $4_1 + 16 | 0, wasm2js_i32$5 = ($1936($4_1, 27) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($4_1, 28), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $2_1, $3);
  $1973($4_1, 12, 53464);
  if (($1936($4_1, 27) | 0) < 0) {
   $1756($1944($4_1, 16))
  }
  global$0 = $4_1 + 32 | 0;
  return $0_1 | 0;
 }
 
 function $1387($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $4_1 = global$0 - 48 | 0;
  global$0 = $4_1;
  $5_1 = $1944($0_1, 0);
  $6_1 = $1936($0_1, 11);
  $1973($4_1 + 32 | 0, 0, 0);
  $1982($4_1, 24, 0, 0);
  $1973($4_1, 20, 53464);
  $1973($4_1, 36, $1_1);
  if (($1944($1_1, 0) | 0) != 2) {
   $1506($4_1 + 20 | 0)
  }
  $1973($4_1, 20, 53312);
  $7_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($4_1, 24), wasm2js_i32$4 = $4_1 + 24 | 0, wasm2js_i32$5 = ($1936($4_1, 35) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($4_1, 36), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $1_1 = $1488($4_1 + 8 | 0, $2_1);
  $2_1 = ($1944($1944($1_1, 8), 0) | 0) != 2 ? $1_1 + 4 | 0 : 0;
  $8 = !$2_1;
  $5_1 = ($6_1 | 0) < 0 ? $5_1 : $0_1;
  if ($2_1) {
   $0_1 = ($1937($2_1, 0) | 0) != 0
  } else {
   $0_1 = 0
  }
  $0_1 = $741($5_1, $7_1, $0_1, $3);
  if (!($8 | !$0_1)) {
   $1968($2_1, 0, $1937($2_1, 0) ^ 1)
  }
  $2_1 = $0_1;
  $1973($1_1, 0, 52584);
  $3 = $1944($1_1, 8);
  if (($1944($3, 0) | 0) != 2) {
   $1973($4_1, 40, $1937($1_1, 4));
   $1_1 = $4_1 + 40 | 0;
   $0_1 = fimport$1(72652, $1_1 | 0) | 0;
   $3 = $1944($3, 0);
   $1973($4_1, 40, 0);
   $1_1 = fimport$1(72760, $1_1 | 0) | 0;
   fimport$3($3 | 0, $1_1 | 0, $0_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($0_1 | 0);
  }
  $1973($4_1, 20, 53464);
  if (($1936($4_1, 35) | 0) < 0) {
   $1756($1944($4_1, 24))
  }
  global$0 = $4_1 + 48 | 0;
  return $2_1 | 0;
 }
 
 function $1388($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 0, (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
  $162(5950, $1_1);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1389($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  return $322((wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $1_1) | 0;
 }
 
 function $1390($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = Math_fround(0), $14 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $5_1 = global$0 - 32 | 0;
  global$0 = $5_1;
  $6_1 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $7_1 = $1488($5_1 + 12 | 0, $1_1);
  $10_1 = ($1944($1944($7_1, 8), 0) | 0) != 2 ? $7_1 + 4 | 0 : 0;
  $0_1 = $6_1;
  $4_1 = $1944(0, 73568);
  $1_1 = $1944($4_1, 7080);
  $8 = $1944((($1944($1_1, 196) << 2) + $1944($1_1 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
  $3 = $8;
  while (1) {
   $1_1 = $0_1;
   $0_1 = $0_1 + 1 | 0;
   $9 = $1937($1_1, 0);
   if ($9) {
    label$4 : {
     if (($9 | 0) != 35) {
      break label$4
     }
     if (($1937($0_1, 0) | 0) != 35) {
      break label$4
     }
     $3 = ($1937($1_1, 2) | 0) == 35 ? $8 : $3;
    }
    $3 = $1944((($9 ^ $3 & 255) << 2) + 19360 | 0, 0) ^ $3 >>> 8;
   }
   if ($9) {
    continue
   }
   break;
  };
  $1_1 = $3 ^ -1;
  if (($1944($4_1, 7136) | 0) == ($1_1 | 0)) {
   $1973($4_1, 7140, $1_1)
  }
  if (($1944($4_1, 7196) | 0) == ($1_1 | 0)) {
   $1968($4_1, 7200, 1)
  }
  if (($1944($4_1, 7112) | 0) == ($1_1 | 0)) {
   $75($1_1, 11, $6_1)
  }
  __inlined_func$323 : {
   label$10 : {
    $0_1 = $1944(0, 73568);
    $8 = $1944($0_1, 7468);
    $3 = $1944($0_1, 7480);
    if (($8 | 0) > ($3 | 0)) {
     if (($1944($1944($0_1 + 7476 | 0, 0) + Math_imul($3, 36) | 0, 0) | 0) == ($1_1 | 0)) {
      break label$10
     }
    }
    $1973($4_1, 7300, 0);
    $0_1 = 0;
    break __inlined_func$323;
   }
   if (!($1937($4_1, 7300) & 1)) {
    $1_1 = $1944($1944($0_1 + 7504 | 0, 0), 0);
    $11_1 = $1963($1_1 + 8 | 0, 0);
    $12_1 = $1963($1_1 + 16 | 0, 0);
    $13 = $1963($1_1, 4);
    $14 = $1963($1_1, 12);
    $1982($0_1 + 7324 | 0, 0, 1056964608, 1056964608);
    $1973($0_1, 7300, $1944($0_1, 7300) | 1);
    $1973($0_1 + 7304 | 0, 0, 4);
    $1986($0_1 + 7316 | 0, 0, Math_fround($13 + Math_fround($14 * Math_fround(.5))));
    $1986($0_1 + 7320 | 0, 0, Math_fround($11_1 + Math_fround($12_1 * Math_fround(.5))));
   }
   $1_1 = $143($6_1, $10_1, $2_1 | 201326624);
   label$13 : {
    if ($1_1) {
     $0_1 = 1;
     if (!$10_1) {
      break __inlined_func$323
     }
     $0_1 = 1;
     if ($1937($10_1, 0)) {
      break label$13
     }
     $0_1 = $1944(0, 73568);
     $3 = $1944($0_1, 7508);
     $2_1 = $1944($0_1, 7080);
     label$16 : {
      if (($3 | 0) != ($2_1 | 0)) {
       break label$16
      }
      if (!$1937($0_1, 7597)) {
       break label$16
      }
      if ($1944($0_1, 7564)) {
       break label$16
      }
      $1973($0_1, 7600, $1944($0_1, 7600) | 2);
     }
     if ($1937($2_1 + 11 | 0, 0) & 1) {
      $1968($0_1, 6998, 1)
     }
     $142();
     $1968($0_1, 6998, 0);
     $0_1 = 0;
     if (!$1_1) {
      break __inlined_func$323
     }
     $132($1944($4_1, 7480), 1);
     $0_1 = 0;
     break __inlined_func$323;
    }
    $0_1 = $1944(0, 73568);
    $2_1 = $1944($0_1, 7508);
    $1_1 = $1944($0_1, 7080);
    label$19 : {
     if (($2_1 | 0) != ($1_1 | 0)) {
      break label$19
     }
     if (!$1937($0_1, 7597)) {
      break label$19
     }
     if ($1944($0_1, 7564)) {
      break label$19
     }
     $1973($0_1, 7600, $1944($0_1, 7600) | 2);
    }
    if ($1937($1_1 + 11 | 0, 0) & 1) {
     $1968($0_1, 6998, 1)
    }
    $142();
    $1968($0_1, 6998, 0);
    $0_1 = 0;
   }
  }
  $1_1 = $0_1;
  $1973($7_1, 0, 52584);
  $2_1 = $1944($7_1, 8);
  if (($1944($2_1, 0) | 0) != 2) {
   $1973($5_1, 24, $1937($7_1, 4));
   $6_1 = $5_1 + 24 | 0;
   $0_1 = fimport$1(72652, $6_1 | 0) | 0;
   $2_1 = $1944($2_1, 0);
   $1973($5_1, 24, 0);
   $3 = $2_1;
   $2_1 = fimport$1(72760, $6_1 | 0) | 0;
   fimport$3($3 | 0, $2_1 | 0, $0_1 | 0);
   fimport$4($2_1 | 0);
   fimport$4($0_1 | 0);
  }
  global$0 = $5_1 + 32 | 0;
  return $1_1 | 0;
 }
 
 function $1391($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $317((wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $1_1);
 }
 
 function $1392($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $2_1 = global$0 - 32 | 0;
  global$0 = $2_1;
  $1973($2_1 + 24 | 0, 0, 0);
  $1982($2_1, 16, 0, 0);
  $1973($2_1, 12, 53464);
  $1973($2_1, 28, $0_1);
  if (($1944($0_1, 0) | 0) != 2) {
   $1506($2_1 + 12 | 0)
  }
  $1973($2_1, 12, 53312);
  $324((wasm2js_i32$0 = (wasm2js_i32$3 = $1944($2_1, 16), wasm2js_i32$4 = $2_1 + 16 | 0, wasm2js_i32$5 = ($1936($2_1, 27) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($2_1, 28), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $1_1);
  $1973($2_1, 12, 53464);
  if (($1936($2_1, 27) | 0) < 0) {
   $1756($1944($2_1, 16))
  }
  global$0 = $2_1 + 32 | 0;
 }
 
 function $1393($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 12, $1_1);
  $0_1 = FUNCTION_TABLE[$0_1 | 0]($3 + 12 | 0, $2_1) | 0;
  fimport$4($1944($3, 12) | 0);
  global$0 = $3 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1394($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $2_1 = global$0 - 32 | 0;
  global$0 = $2_1;
  $1973($2_1 + 24 | 0, 0, 0);
  $1982($2_1, 16, 0, 0);
  $1973($2_1, 12, 53464);
  $1973($2_1, 28, $0_1);
  if (($1944($0_1, 0) | 0) != 2) {
   $1506($2_1 + 12 | 0)
  }
  $1973($2_1, 12, 53312);
  $7_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($2_1, 16), wasm2js_i32$4 = $2_1 + 16 | 0, wasm2js_i32$5 = ($1936($2_1, 27) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($2_1, 28), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $4_1 = $1944(0, 73568);
  $5_1 = $1944($4_1, 7080);
  if ($1937($5_1, 143)) {
   $0_1 = 0
  } else {
   label$2 : {
    if ($7_1) {
     $0_1 = $7_1;
     $8 = $1944((($1944($5_1, 196) << 2) + $1944($5_1 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
     $3 = $8;
     while (1) {
      $5_1 = $0_1;
      $0_1 = $5_1 + 1 | 0;
      $6_1 = $1937($5_1, 0);
      if ($6_1) {
       label$7 : {
        if (($6_1 | 0) != 35) {
         break label$7
        }
        if (($1937($0_1, 0) | 0) != 35) {
         break label$7
        }
        $3 = ($1937($5_1, 2) | 0) == 35 ? $8 : $3;
       }
       $3 = $1944((($6_1 ^ $3 & 255) << 2) + 19360 | 0, 0) ^ $3 >>> 8;
      }
      if ($6_1) {
       continue
      }
      break;
     };
     $3 = $3 ^ -1;
     if (($1944($4_1, 7136) | 0) == ($3 | 0)) {
      $1973($4_1, 7140, $3)
     }
     if (($1944($4_1, 7196) | 0) == ($3 | 0)) {
      $1968($4_1, 7200, 1)
     }
     if (($1944($4_1, 7112) | 0) != ($3 | 0)) {
      break label$2
     }
     $75($3, 11, $7_1);
     break label$2;
    }
    $3 = $1944($4_1, 7240);
   }
   label$13 : {
    if (!$1937(($1944(0, 73568) + ($1_1 & 31) | 0) + 1022 | 0, 0)) {
     break label$13
    }
    if (!$89(32)) {
     break label$13
    }
    $318($3, $1_1);
   }
   $0_1 = $320($3, 321);
  }
  $1973($2_1, 12, 53464);
  if (($1936($2_1, 27) | 0) < 0) {
   $1756($1944($2_1, 16))
  }
  global$0 = $2_1 + 32 | 0;
  return $0_1 | 0;
 }
 
 function $1395($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $1973($3 + 24 | 0, 0, 0);
  $1982($3, 16, 0, 0);
  $1973($3, 12, 53464);
  $1973($3, 28, $0_1);
  if (($1944($0_1, 0) | 0) != 2) {
   $1506($3 + 12 | 0)
  }
  $1973($3, 12, 53312);
  $0_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($3, 16), wasm2js_i32$4 = $3 + 16 | 0, wasm2js_i32$5 = ($1936($3, 27) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($3, 28), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $7_1 = $0_1 ? $0_1 : 1938;
  $0_1 = $7_1;
  $2_1 = $1944(0, 73568);
  $4_1 = $1944($2_1, 7080);
  $8 = $1944((($1944($4_1, 196) << 2) + $1944($4_1 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
  $5_1 = $8;
  while (1) {
   $4_1 = $0_1;
   $0_1 = $0_1 + 1 | 0;
   $6_1 = $1937($4_1, 0);
   if ($6_1) {
    label$4 : {
     if (($6_1 | 0) != 35) {
      break label$4
     }
     if (($1937($0_1, 0) | 0) != 35) {
      break label$4
     }
     $5_1 = ($1937($4_1, 2) | 0) == 35 ? $8 : $5_1;
    }
    $5_1 = $1944((($6_1 ^ $5_1 & 255) << 2) + 19360 | 0, 0) ^ $5_1 >>> 8;
   }
   if ($6_1) {
    continue
   }
   break;
  };
  $4_1 = $5_1 ^ -1;
  if (($1944($2_1, 7136) | 0) == ($4_1 | 0)) {
   $1973($2_1, 7140, $4_1)
  }
  if (($1944($2_1, 7196) | 0) == ($4_1 | 0)) {
   $1968($2_1, 7200, 1)
  }
  if (($1944($2_1, 7112) | 0) == ($4_1 | 0)) {
   $75($4_1, 11, $7_1)
  }
  $0_1 = $1944(0, 73568);
  label$10 : {
   if (!$1937(($0_1 + ($1_1 & 31) | 0) + 1022 | 0, 0)) {
    break label$10
   }
   $5_1 = $1944($0_1, 7084);
   if (!$5_1) {
    break label$10
   }
   if (($1944($0_1, 7080) | 0) != ($5_1 | 0)) {
    break label$10
   }
   $2_1 = $1944($0_1, 7508);
   label$11 : {
    if (!$2_1) {
     break label$11
    }
    $2_1 = $1944($2_1, 736);
    if (!$2_1) {
     break label$11
    }
    if (!$1937($2_1, 139)) {
     break label$11
    }
    if (($1944($5_1, 736) | 0) == ($2_1 | 0)) {
     break label$11
    }
    if ($1937($2_1 + 11 | 0, 0) & 8) {
     break label$10
    }
   }
   $2_1 = $1944($0_1, 7136);
   label$12 : {
    if (!$2_1) {
     break label$12
    }
    if ($1937($0_1, 7149)) {
     break label$12
    }
    if (($1944($5_1, 80) | 0) != ($2_1 | 0)) {
     break label$10
    }
   }
   if ($1_1 & 64) {
    if ($1944($0_1, 7116)) {
     break label$10
    }
    if ($1944($0_1, 7120)) {
     break label$10
    }
   }
   $318($4_1, $1_1);
  }
  $0_1 = $320($4_1, 321);
  $1973($3, 12, 53464);
  if (($1936($3, 27) | 0) < 0) {
   $1756($1944($3, 16))
  }
  global$0 = $3 + 32 | 0;
  return $0_1 | 0;
 }
 
 function $1396($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $2_1 = global$0 - 32 | 0;
  global$0 = $2_1;
  $1973($2_1 + 24 | 0, 0, 0);
  $1982($2_1, 16, 0, 0);
  $1973($2_1, 12, 53464);
  $1973($2_1, 28, $0_1);
  if (($1944($0_1, 0) | 0) != 2) {
   $1506($2_1 + 12 | 0)
  }
  $1973($2_1, 12, 53312);
  $7_1 = $1_1;
  $0_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($2_1, 16), wasm2js_i32$4 = $2_1 + 16 | 0, wasm2js_i32$5 = ($1936($2_1, 27) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($2_1, 28), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $6_1 = $0_1 ? $0_1 : 1953;
  $0_1 = $6_1;
  $3 = $1944(0, 73568);
  $1_1 = $1944($3, 7080);
  $8 = $1944((($1944($1_1, 196) << 2) + $1944($1_1 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
  $5_1 = $8;
  while (1) {
   $1_1 = $0_1;
   $0_1 = $0_1 + 1 | 0;
   $4_1 = $1937($1_1, 0);
   if ($4_1) {
    label$4 : {
     if (($4_1 | 0) != 35) {
      break label$4
     }
     if (($1937($0_1, 0) | 0) != 35) {
      break label$4
     }
     $5_1 = ($1937($1_1, 2) | 0) == 35 ? $8 : $5_1;
    }
    $5_1 = $1944((($4_1 ^ $5_1 & 255) << 2) + 19360 | 0, 0) ^ $5_1 >>> 8;
   }
   if ($4_1) {
    continue
   }
   break;
  };
  $4_1 = $5_1 ^ -1;
  if (($1944($3, 7136) | 0) == ($4_1 | 0)) {
   $1973($3, 7140, $4_1)
  }
  if (($1944($3, 7196) | 0) == ($4_1 | 0)) {
   $1968($3, 7200, 1)
  }
  if (($1944($3, 7112) | 0) == ($4_1 | 0)) {
   $75($4_1, 11, $6_1)
  }
  $3 = $1944(0, 73568);
  label$10 : {
   if (!$1937(($3 + ($7_1 & 31) | 0) + 1022 | 0, 0)) {
    break label$10
   }
   $1_1 = $1944($3, 7084);
   label$11 : {
    if (!$1_1) {
     break label$11
    }
    $0_1 = $1944($3, 7508);
    label$12 : {
     if (!$0_1) {
      break label$12
     }
     $0_1 = $1944($0_1, 736);
     if (!$0_1) {
      break label$12
     }
     if (!$1937($0_1, 139)) {
      break label$12
     }
     if (($1944($1_1, 736) | 0) == ($0_1 | 0)) {
      break label$12
     }
     if ($1937($0_1 + 11 | 0, 0) & 12) {
      break label$11
     }
    }
    $0_1 = $1944($3, 7136);
    if (!$0_1) {
     break label$10
    }
    if ($1937($3, 7149)) {
     break label$10
    }
    if (($1944($1_1, 80) | 0) == ($0_1 | 0)) {
     break label$10
    }
   }
   $5_1 = $1944($3, 7468);
   while (1) {
    label$13 : {
     $1_1 = $0_1;
     if (($5_1 | 0) <= 0) {
      $0_1 = 0;
      break label$13;
     }
     $5_1 = $5_1 - 1 | 0;
     $0_1 = $1944($1944($3, 7476) + Math_imul($5_1, 36) | 0, 4);
     label$16 : {
      if ($0_1) {
       $6_1 = 0;
       if ($1937($0_1 + 11 | 0, 0) & 8) {
        break label$16
       }
      }
      $0_1 = $1_1;
      $6_1 = 1;
     }
     if ($6_1) {
      continue
     }
    }
    break;
   };
   if ($0_1) {
    break label$10
   }
   $318($4_1, $7_1);
  }
  $0_1 = $320($4_1, 321);
  $1973($2_1, 12, 53464);
  if (($1936($2_1, 27) | 0) < 0) {
   $1756($1944($2_1, 16))
  }
  global$0 = $2_1 + 32 | 0;
  return $0_1 | 0;
 }
 
 function $1397($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $4_1 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $7_1 = $1_1 & 128;
  if (!$7_1) {
   $0_1 = $4_1;
   $5_1 = $1944(0, 73568);
   $3 = $1944($5_1, 7080);
   $8 = $1944((($1944($3, 196) << 2) + $1944($3 + 204 | 0, 0) | 0) - 4 | 0, 0) ^ -1;
   $2_1 = $8;
   while (1) {
    $3 = $0_1;
    $0_1 = $3 + 1 | 0;
    $6_1 = $1937($3, 0);
    if ($6_1) {
     label$5 : {
      if (($6_1 | 0) != 35) {
       break label$5
      }
      if (($1937($0_1, 0) | 0) != 35) {
       break label$5
      }
      $2_1 = ($1937($3, 2) | 0) == 35 ? $8 : $2_1;
     }
     $2_1 = $1944((($6_1 ^ $2_1 & 255) << 2) + 19360 | 0, 0) ^ $2_1 >>> 8;
    }
    if ($6_1) {
     continue
    }
    break;
   };
   $2_1 = $2_1 ^ -1;
   if (($1944($5_1, 7136) | 0) == ($2_1 | 0)) {
    $1973($5_1, 7140, $2_1)
   }
   if (($1944($5_1, 7196) | 0) == ($2_1 | 0)) {
    $1968($5_1, 7200, 1)
   }
   if (($1944($5_1, 7112) | 0) == ($2_1 | 0)) {
    $75($2_1, 11, $4_1)
   }
  }
  $1_1 = $1_1 & 256;
  $3 = $1944(0, 73568);
  $4_1 = $1944($3, 7468);
  __inlined_func$316 : {
   if ($7_1) {
    $2_1 = ($4_1 | 0) > 0;
    if ($1_1) {
     break __inlined_func$316
    }
    $2_1 = ($1944($3, 7480) | 0) < ($4_1 | 0);
    break __inlined_func$316;
   }
   $0_1 = $2_1;
   label$13 : {
    if ($1_1) {
     $2_1 = ($4_1 | 0) > 0;
     if (($4_1 | 0) <= 0) {
      break __inlined_func$316
     }
     $1_1 = $1944($3 + 7476 | 0, 0);
     $2_1 = 1;
     if (($1944($1_1, 0) | 0) == ($0_1 | 0)) {
      break label$13
     }
     $2_1 = 0;
     while (1) {
      $2_1 = $2_1 + 1 | 0;
      if (($4_1 | 0) != ($2_1 | 0)) {
       if (($1944($1_1 + Math_imul($2_1, 36) | 0, 0) | 0) != ($0_1 | 0)) {
        continue
       }
      }
      break;
     };
     $2_1 = ($2_1 | 0) < ($4_1 | 0);
     break __inlined_func$316;
    }
    $1_1 = $1944($3, 7480);
    $2_1 = 0;
    if (($4_1 | 0) <= ($1_1 | 0)) {
     break label$13
    }
    $2_1 = ($1944($1944($3 + 7476 | 0, 0) + Math_imul($1_1, 36) | 0, 0) | 0) == ($0_1 | 0);
   }
  }
  return $2_1 | 0;
 }
 
 function $1398($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = Math_fround($5_1);
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  $6_1 = global$0 - 16 | 0;
  global$0 = $6_1;
  $7_1 = $1944($1_1, 0);
  if ($7_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($7_1 >>> 0 <= 10) {
     $1968($6_1, 15, $7_1);
     $8 = $6_1 + 4 | 0;
     break label$2;
    }
    $9 = ($7_1 | 15) + 1 | 0;
    $8 = $1783($9);
    $1973($6_1, 12, $9 | -2147483648);
    $1973($6_1, 4, $8);
    $1973($6_1, 8, $7_1);
   }
   if ($7_1) {
    $1602($8, $1_1 + 4 | 0, $7_1)
   }
   $1968($7_1 + $8 | 0, 0, 0);
   $1973($6_1, 0, $4_1);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($6_1 + 4 | 0, $2_1, $3, $6_1, $5_1) | 0;
   fimport$4($1944($6_1, 0) | 0);
   if (($1936($6_1, 15) | 0) < 0) {
    $1756($1944($6_1, 4))
   }
   global$0 = $6_1 + 16 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1399($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = Math_fround($4_1);
  var $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $6_1 = $1944($0_1, 0);
  $7_1 = $1936($0_1, 11);
  $1982($5_1, 8, 0, 0);
  $0_1 = $490(($7_1 | 0) < 0 ? $6_1 : $0_1, $1_1, $2_1, $763($3, $5_1 + 8 | 0), $4_1);
  global$0 = $5_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1400() {
  $503();
 }
 
 function $1401($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1);
 }
 
 function $1402($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = Math_fround($1_1);
  $517($0_1, $1_1);
 }
 
 function $1403() {
  return $521() | 0;
 }
 
 function $1404($0_1) {
  $0_1 = $0_1 | 0;
  return $519($0_1) | 0;
 }
 
 function $1405($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = Math_fround($3);
  $4_1 = $4_1 | 0;
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $6_1 = $1944($1_1, 0);
  if ($6_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($6_1 >>> 0 <= 10) {
     $1968($5_1, 15, $6_1);
     $7_1 = $5_1 + 4 | 0;
     break label$2;
    }
    $8 = ($6_1 | 15) + 1 | 0;
    $7_1 = $1783($8);
    $1973($5_1, 12, $8 | -2147483648);
    $1973($5_1, 4, $7_1);
    $1973($5_1, 8, $6_1);
   }
   if ($6_1) {
    $1602($7_1, $1_1 + 4 | 0, $6_1)
   }
   $1968($6_1 + $7_1 | 0, 0, 0);
   FUNCTION_TABLE[$0_1 | 0]($5_1 + 4 | 0, $2_1, $3, $4_1);
   if (($1936($5_1, 15) | 0) < 0) {
    $1756($1944($5_1, 4))
   }
   global$0 = $5_1 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1406($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $3 = $3 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $509((wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $1_1, $2_1, $3);
 }
 
 function $1408($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = Math_fround(0);
  $3 = $1944($1944(0, 73568), 8036);
  $4_1 = $1944($3, 4);
  if ($4_1 & 16777216) {
   $2_1 = $1944($3, 84);
   $2_1 = ($0_1 | 0) < ($2_1 | 0) ? $0_1 : $2_1;
  }
  $1968($3, 435, $2_1);
  $0_1 = $1944($3, 360);
  $6_1 = $1963($0_1, 88);
  $1_1 = $4_1 << 6 >> 31 & $1_1;
  $1968($3, 433, $1_1);
  $1968($3, 436, $6_1 != Math_fround(0.0) ? $2_1 : 0);
  $0_1 = $1963($0_1 + 92 | 0, 0) != Math_fround(0.0) ? $1_1 : 0;
  $1968($3, 434, $0_1);
  $1968($3, 452, !($0_1 & 255));
  $1_1 = $2_1 << 24 >> 24;
  if (($1_1 | 0) > 0) {
   $2_1 = 0;
   while (1) {
    $4_1 = $1944($3, 24);
    $0_1 = $1936($4_1 + $2_1 | 0, 0);
    if (!(($0_1 | 0) == ($2_1 | 0) | ($0_1 | 0) < $1_1 << 24 >> 24)) {
     $1_1 = $1944($3, 16);
     $4_1 = $1_1 + Math_imul($1936($0_1 + $4_1 | 0, 0), 104) | 0;
     $5_1 = $1937($4_1, 82);
     $1_1 = $1_1 + Math_imul($0_1, 104) | 0;
     $1968($4_1, 82, $1937($1_1, 82));
     $1968($1_1, 82, $5_1);
     $1_1 = $1944($3, 24);
     $0_1 = $0_1 + $1_1 | 0;
     $4_1 = $1937($0_1, 0);
     $5_1 = $0_1;
     $0_1 = $1_1 + $2_1 | 0;
     $1968($5_1, 0, $1937($0_1, 0));
     $1968($0_1, 0, $4_1);
    }
    $0_1 = $1936($3, 435);
    $1_1 = $0_1;
    $2_1 = $2_1 + 1 | 0;
    if (($0_1 | 0) > ($2_1 | 0)) {
     continue
    }
    break;
   };
  }
 }
 
 function $1409() {
  $528();
 }
 
 function $1410($0_1) {
  $0_1 = $0_1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $529((wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
 }
 
 function $1411($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = $1944($1944(0, 73568), 8036);
  if ($1937($1_1, 4) & 8) {
   if (!$1937($1_1, 441)) {
    $496($1_1)
   }
   $501($1_1);
   $1_1 = $1_1 + 404 | 0;
  } else {
   $1_1 = 0
  }
  $1973($2_1, 8, $1_1);
  $1973($0_1, 0, fimport$1(49608, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1413() {
  var $0_1 = 0;
  $0_1 = $1944($1944(0, 73568), 8036);
  if ($0_1) {
   $0_1 = $1944($0_1, 84)
  } else {
   $0_1 = 0
  }
  return $0_1 | 0;
 }
 
 function $1414() {
  var $0_1 = 0;
  $0_1 = $1944($1944(0, 73568), 8036);
  if ($0_1) {
   $0_1 = $1944($0_1, 92)
  } else {
   $0_1 = 0
  }
  return $0_1 | 0;
 }
 
 function $1415() {
  var $0_1 = 0;
  $0_1 = $1944($1944(0, 73568), 8036);
  if ($0_1) {
   $0_1 = $1944($0_1, 88)
  } else {
   $0_1 = 0
  }
  return $0_1 | 0;
 }
 
 function $1416($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $4_1 = $2_1 + 4 | 0;
  FUNCTION_TABLE[$0_1 | 0]($4_1, $1_1);
  $1_1 = $1944($2_1, 8);
  $3 = $1937($2_1, 15);
  $5_1 = $3 << 24 >> 24;
  $0_1 = ($5_1 | 0) < 0;
  $1_1 = $0_1 ? $1_1 : $3 & 127;
  $3 = $1755($1_1 + 4 | 0);
  $1973($3, 0, $1_1);
  $6_1 = $1944($2_1, 4);
  $1602($3 + 4 | 0, $0_1 ? $6_1 : $4_1, $1_1);
  if (($5_1 | 0) < 0) {
   $1756($6_1)
  }
  global$0 = $2_1 + 16 | 0;
  return $3 | 0;
 }
 
 function $1417($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = $1944($1944(0, 73568), 8036);
  $3 = 0;
  label$1 : {
   if (!$2_1) {
    break label$1
   }
   if (($1_1 | 0) < 0) {
    $1_1 = $1944($2_1, 92)
   }
   if (!$1937($2_1, 441)) {
    $3 = 19354;
    if (($1936($2_1, 419) | 0) <= ($1_1 | 0)) {
     break label$1
    }
   }
   $1_1 = $1939($1944($2_1, 16) + Math_imul($1_1, 104) | 0, 80);
   $3 = 19354;
   if (($1_1 | 0) == -1) {
    break label$1
   }
   $3 = $1944($2_1 + 372 | 0, 0) + $1_1 | 0;
  }
  $2_1 = $1697($3);
  if ($2_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($2_1 >>> 0 <= 10) {
     $1968($0_1, 11, $2_1);
     break label$2;
    }
    $4_1 = ($2_1 | 15) + 1 | 0;
    $1_1 = $1783($4_1);
    $1973($0_1, 8, $4_1 | -2147483648);
    $1973($0_1, 0, $1_1);
    $1973($0_1, 4, $2_1);
    $0_1 = $1_1;
   }
   if ($2_1) {
    $1603($0_1, $3, $2_1)
   }
   $1968($0_1 + $2_1 | 0, 0, 0);
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1419($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = $1944($1944(0, 73568), 8036);
  if ($1_1) {
   if (($0_1 | 0) < 0) {
    $0_1 = $1944($1_1, 92)
   }
   __inlined_func$514 : {
    if (($1944($1_1, 84) | 0) == ($0_1 | 0)) {
     $0_1 = (($1936($1_1, 420) | 0) == ($0_1 | 0)) << 27;
     break __inlined_func$514;
    }
    $0_1 = $1944($1944($1_1, 16) + Math_imul($0_1, 104) | 0, 0);
   }
  } else {
   $0_1 = 0
  }
  return $0_1 | 0;
 }
 
 function $1421($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = $1944($1944(0, 73568), 8036);
  if ($2_1) {
   if (($0_1 | 0) < 0) {
    $0_1 = $1944($2_1, 92)
   }
   $1968($1944($2_1, 16) + Math_imul($0_1, 104) | 0, 92, $1_1);
  }
 }
 
 function $1422($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1, $3);
 }
 
 function $1423($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $515($0_1, $1_1, $2_1);
 }
 
 function $1424($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1973($4_1, 12, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $4_1 + 12 | 0, $3);
  fimport$4($1944($4_1, 12) | 0);
  global$0 = $4_1 + 16 | 0;
 }
 
 function $1425($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = Math_fround(0), $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = Math_fround(0), $14 = Math_fround(0), $15_1 = 0, $16_1 = Math_fround(0), $17_1 = Math_fround(0), $18_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $8 = global$0 - 32 | 0;
  global$0 = $8;
  $1973($8 + 24 | 0, 0, 0);
  $1982($8, 16, 0, 0);
  $1973($8, 12, 53464);
  $1973($8, 28, $1_1);
  if (($1944($1_1, 0) | 0) != 2) {
   $1506($8 + 12 | 0)
  }
  $1973($8, 12, 53312);
  $1_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($8, 16), wasm2js_i32$4 = $8 + 16 | 0, wasm2js_i32$5 = ($1936($8, 27) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($8, 28), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $11_1 = $1944($1944(0, 73568), 7080);
  $1968($11_1, 140, 1);
  $7_1 = $2_1 ^ 1;
  $2_1 = $1944($11_1 + 368 | 0, 0);
  label$1 : {
   if ($2_1) {
    if (($1944($2_1, 16) | 0) == ($0_1 | 0)) {
     if (($1944($2_1, 4) | 0) == ($7_1 | 0)) {
      break label$1
     }
    }
    $553();
   }
   if (($0_1 | 0) == 1) {
    break label$1
   }
   $2_1 = 0;
   $6_1 = $1944(0, 73568);
   $4_1 = $1944($6_1, 7080);
   $1968($4_1, 140, 1);
   $11_1 = $0_1;
   $266($1_1 ? 287454023 : $0_1 + 287454023 | 0);
   $9 = $76($4_1, $1_1 ? $1_1 : 4745);
   $269();
   $15_1 = global$0 - 128 | 0;
   global$0 = $15_1;
   $10_1 = $1944($4_1, 560);
   $0_1 = ($10_1 | 0) > 0;
   label$10 : {
    if (($10_1 | 0) <= 0) {
     $2_1 = $0_1;
     break label$10;
    }
    $1_1 = $1944($4_1 + 568 | 0, 0);
    if (($1944($1_1, 0) | 0) == ($9 | 0)) {
     $2_1 = $0_1;
     $0_1 = $1_1;
     break label$10;
    }
    $0_1 = $1_1;
    while (1) {
     $2_1 = $2_1 + 1 | 0;
     if (($10_1 | 0) != ($2_1 | 0)) {
      $0_1 = Math_imul($2_1, 124) + $1_1 | 0;
      if (($1944($0_1, 0) | 0) != ($9 | 0)) {
       continue
      }
     }
     break;
    };
    $2_1 = ($2_1 | 0) < ($10_1 | 0);
   }
   if (!$2_1) {
    $1604($15_1 + 4 | 0, 0, 124);
    $12_1 = $1944($4_1 + 564 | 0, 0);
    label$7 : {
     if (($12_1 | 0) != ($10_1 | 0)) {
      break label$7
     }
     $1_1 = $12_1 ? $12_1 + (($12_1 | 0) / 2 | 0) | 0 : 8;
     $0_1 = $10_1 + 1 | 0;
     $2_1 = ($0_1 | 0) < ($1_1 | 0) ? $1_1 : $0_1;
     if (($12_1 | 0) >= ($2_1 | 0)) {
      break label$7
     }
     $1_1 = $16(Math_imul($2_1, 124));
     $0_1 = $1944($4_1 + 568 | 0, 0);
     if ($0_1) {
      $1602($1_1, $0_1, Math_imul($1944($4_1, 560), 124));
      $17($1944($4_1, 568));
     }
     $1973($4_1, 564, $2_1);
     $1973($4_1, 568, $1_1);
    }
    $1602($1944($4_1 + 568 | 0, 0) + Math_imul($1944($4_1, 560), 124) | 0, $15_1 + 4 | 0, 124);
    $1973($4_1, 560, $1944($4_1, 560) + 1 | 0);
    $374($15_1 + 108 | 0);
    $0_1 = $1944($15_1 + 124 | 0, 0);
    if ($0_1) {
     $17($0_1)
    }
    $0_1 = $1944($15_1 + 104 | 0, 0);
    if ($0_1) {
     $17($0_1)
    }
    $0_1 = (Math_imul($1944($4_1, 560), 124) + $1944($4_1, 568) | 0) - 124 | 0;
    $1973($0_1, 0, $9);
   }
   global$0 = $15_1 + 128 | 0;
   $2_1 = $0_1;
   $1973($2_1, 16, $11_1);
   $1973($2_1, 12, 0);
   $1973($2_1, 4, $7_1);
   $1973($4_1 + 368 | 0, 0, $2_1);
   $1_1 = $4_1 + 212 | 0;
   $1986($2_1, 36, $1963($1_1, 0));
   $1986($2_1, 40, $1963($4_1 + 232 | 0, 0));
   $1982($2_1 + 52 | 0, 0, $1959($4_1 + 504 | 0, 0), i64toi32_i32$HIGH_BITS);
   $1982($2_1, 44, $1959($4_1, 496), i64toi32_i32$HIGH_BITS);
   $0_1 = $4_1 + 488 | 0;
   $1982($2_1 + 84 | 0, 0, $1959($0_1, 0), i64toi32_i32$HIGH_BITS);
   $1982($2_1, 76, $1959($4_1, 480), i64toi32_i32$HIGH_BITS);
   $7_1 = $0_1;
   $0_1 = $4_1 + 472 | 0;
   $1982($7_1, 0, $1959($0_1, 0), i64toi32_i32$HIGH_BITS);
   $1982($4_1, 480, $1959($4_1, 464), i64toi32_i32$HIGH_BITS);
   $13 = $1963($0_1, 0);
   $16_1 = $1963($4_1, 72);
   $18_1 = $1963($6_1 + 5492 | 0, 0);
   $17_1 = $1963($4_1, 60);
   $3 = Math_fround($18_1 - $17_1);
   $3 = $3 >= Math_fround(0.0) ? $3 : Math_fround(0.0);
   $14 = Math_fround($3 + Math_fround($1963($4_1 + 272 | 0, 0) - $18_1));
   $1986($2_1, 20, $14);
   $5_1 = Math_fround(Math_fround($18_1 + $13) - $3);
   $3 = Math_fround($17_1 * Math_fround(.5));
   $3 = $3 >= $16_1 ? $3 : $16_1;
   label$101 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $0_1 = ~~$3;
     break label$101;
    }
    $0_1 = -2147483648;
   }
   $3 = Math_fround($13 + Math_fround($0_1 | 0));
   $5_1 = Math_fround(($3 > $5_1 ? $5_1 : $3) - $1963($4_1, 12));
   $3 = Math_fround($14 + Math_fround(1.0));
   $1986($2_1, 24, $3 <= $5_1 ? $5_1 : $3);
   $3 = $1963($1_1, 0);
   $1986($2_1, 28, $3);
   $1986($2_1, 32, $3);
   $0_1 = $1944($2_1, 92);
   $6_1 = $11_1 + 1 | 0;
   if (!(!$0_1 | ($0_1 | 0) == ($6_1 | 0))) {
    $1_1 = $1944($2_1 + 96 | 0, 0);
    label$4 : {
     if (($1_1 | 0) >= 0) {
      break label$4
     }
     $0_1 = $1_1 + (($1_1 | 0) / 2 | 0) | 0;
     $7_1 = ($0_1 | 0) > 0 ? $0_1 : 0;
     if (($1_1 | 0) >= ($7_1 | 0)) {
      break label$4
     }
     $1_1 = $16(Math_imul($7_1, 28));
     $0_1 = $1944($2_1 + 100 | 0, 0);
     if ($0_1) {
      $1602($1_1, $0_1, Math_imul($1944($2_1, 92), 28));
      $17($1944($2_1, 100));
     }
     $1973($2_1, 96, $7_1);
     $1973($2_1, 100, $1_1);
    }
    $1973($2_1, 92, 0);
   }
   $0_1 = $1944($2_1, 92);
   $1968($2_1, 8, !$0_1);
   label$6 : {
    if ($0_1) {
     break label$6
    }
    if (($1944($2_1 + 96 | 0, 0) | 0) <= ($11_1 | 0)) {
     $1_1 = $16(Math_imul($6_1, 28));
     $0_1 = $1944($2_1 + 100 | 0, 0);
     if ($0_1) {
      $1602($1_1, $0_1, Math_imul($1944($2_1, 92), 28));
      $17($1944($2_1, 100));
     }
     $1973($2_1, 96, $6_1);
     $1973($2_1, 100, $1_1);
    }
    if (($11_1 | 0) < 0) {
     break label$6
    }
    $5_1 = Math_fround($11_1 | 0);
    $0_1 = 0;
    while (1) {
     $1_1 = $0_1;
     $3 = Math_fround(Math_fround($0_1 | 0) / $5_1);
     $0_1 = $1944($2_1, 92);
     $9 = $1944($2_1, 96);
     label$1012 : {
      if (($0_1 | 0) != ($9 | 0)) {
       break label$1012
      }
      $7_1 = $9 ? $9 + (($9 | 0) / 2 | 0) | 0 : 8;
      $0_1 = $0_1 + 1 | 0;
      $6_1 = ($0_1 | 0) < ($7_1 | 0) ? $7_1 : $0_1;
      if (($9 | 0) >= ($6_1 | 0)) {
       break label$1012
      }
      $7_1 = $16(Math_imul($6_1, 28));
      $0_1 = $1944($2_1, 100);
      if ($0_1) {
       $1602($7_1, $0_1, Math_imul($1944($2_1, 92), 28));
       $17($1944($2_1, 100));
      }
      $1973($2_1, 96, $6_1);
      $1973($2_1, 100, $7_1);
     }
     $0_1 = $1944($2_1, 100) + Math_imul($1944($2_1, 92), 28) | 0;
     $1982($0_1, 4, 0, 0);
     $1986($0_1, 0, $3);
     $1982($0_1 + 12 | 0, 0, 0, 0);
     $1982($0_1 + 20 | 0, 0, 0, 0);
     $1973($2_1, 92, $1944($2_1, 92) + 1 | 0);
     $0_1 = $1_1 + 1 | 0;
     if (($1_1 | 0) != ($11_1 | 0)) {
      continue
     }
     break;
    };
   }
   if (($11_1 | 0) > 0) {
    $0_1 = 0;
    while (1) {
     $5_1 = $1963($4_1, 12);
     $6_1 = $1944($1944($1944(0, 73568), 7080) + 368 | 0, 0);
     if ($6_1) {
      $13 = $1963($6_1, 24);
      $3 = $1963($6_1, 20);
      $3 = Math_fround(Math_fround(Math_fround($13 - $3) * $1963($1944($6_1 + 100 | 0, 0) + Math_imul($0_1, 28) | 0, 0)) + $3);
     } else {
      $3 = Math_fround(0.0)
     }
     $7_1 = $1944($2_1, 100);
     $1_1 = $0_1 + 1 | 0;
     $3 = Math_fround(Math_fround($5_1 + $3) + Math_fround(.5));
     label$18 : {
      if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
       $9 = ~~$3;
       break label$18;
      }
      $9 = -2147483648;
     }
     $16_1 = Math_fround($9 | 0);
     if ($6_1) {
      $13 = $1963($6_1, 24);
      $3 = $1963($6_1, 20);
      $3 = Math_fround(Math_fround(Math_fround($13 - $3) * $1963($1944($6_1 + 100 | 0, 0) + Math_imul($1_1, 28) | 0, 0)) + $3);
     } else {
      $3 = Math_fround(0.0)
     }
     $10_1 = $7_1 + Math_imul($0_1, 28) | 0;
     $1986($10_1, 12, $16_1);
     $12_1 = $10_1 + 24 | 0;
     $1973($12_1, 0, 2139095039);
     $9 = $10_1 + 16 | 0;
     $1973($9, 0, -8388609);
     $6_1 = $10_1 + 20 | 0;
     $3 = Math_fround(Math_fround(Math_fround($5_1 + $3) + Math_fround(-1.0)) + Math_fround(.5));
     label$22 : {
      if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
       $0_1 = ~~$3;
       break label$22;
      }
      $0_1 = -2147483648;
     }
     $17_1 = Math_fround($0_1 | 0);
     $1986($6_1, 0, $17_1);
     $14 = $1963($4_1, 500);
     $5_1 = $1963($4_1, 496);
     $7_1 = $1959($4_1, 504);
     $0_1 = i64toi32_i32$HIGH_BITS;
     $3 = (wasm2js_scratch_store_i32(2, $7_1), wasm2js_scratch_load_f32());
     $1986($10_1, 12, $5_1 > $16_1 ? $5_1 : $3 < $16_1 ? $3 : $16_1);
     $3 = (wasm2js_scratch_store_i32(2, $0_1), wasm2js_scratch_load_f32());
     $1986($9, 0, $14 > Math_fround(-3402823466385288598117041.0e14) ? $14 : $3 < Math_fround(-3402823466385288598117041.0e14) ? $3 : Math_fround(-3402823466385288598117041.0e14));
     $14 = $1963($4_1, 500);
     $5_1 = $1963($4_1, 496);
     $7_1 = $1959($4_1, 504);
     $0_1 = i64toi32_i32$HIGH_BITS;
     $3 = (wasm2js_scratch_store_i32(2, $7_1), wasm2js_scratch_load_f32());
     $1986($6_1, 0, $5_1 > $17_1 ? $5_1 : $3 < $17_1 ? $3 : $17_1);
     $3 = (wasm2js_scratch_store_i32(2, $0_1), wasm2js_scratch_load_f32());
     $1986($12_1, 0, $14 > Math_fround(3402823466385288598117041.0e14) ? $14 : $3 < Math_fround(3402823466385288598117041.0e14) ? $3 : Math_fround(3402823466385288598117041.0e14));
     $0_1 = $1_1;
     if (($11_1 | 0) != ($0_1 | 0)) {
      continue
     }
     break;
    };
   }
   $1_1 = $1944($2_1, 16);
   if (($1_1 | 0) > 1) {
    $0_1 = $2_1 + 104 | 0;
    $420($0_1, $1944($4_1, 580), $1_1 + 1 | 0);
    $422($0_1, $1944($4_1, 580), 1);
    $0_1 = $1944($1944($1944($1944(0, 73568), 7080) + 368 | 0, 0) + 100 | 0, 0);
    $158($0_1 + 12 | 0, $0_1 + 20 | 0, 0);
   }
   $1_1 = $1944($2_1, 12);
   $2_1 = $1944($1944($1944(0, 73568), 7080) + 368 | 0, 0);
   if ($2_1) {
    $0_1 = $1_1;
    if (($0_1 | 0) < 0) {
     $0_1 = $1944($2_1, 12)
    }
    $5_1 = $1963($2_1, 24);
    $3 = $1963($2_1, 20);
    $5_1 = Math_fround(Math_fround(Math_fround($5_1 - $3) * $1963($1944($2_1 + 100 | 0, 0) + Math_imul($0_1, 28) | 0, 0)) + $3);
   } else {
    $5_1 = Math_fround(0.0)
   }
   $3 = Math_fround(0.0);
   if ($2_1) {
    if (($1_1 | 0) > -2) {
     $0_1 = $1_1 + 1 | 0
    } else {
     $0_1 = $1944($2_1, 12)
    }
    $13 = $1963($2_1, 24);
    $3 = $1963($2_1, 20);
    $3 = Math_fround(Math_fround(Math_fround($13 - $3) * $1963($1944($2_1 + 100 | 0, 0) + Math_imul($0_1, 28) | 0, 0)) + $3);
   }
   $289(Math_fround(Math_fround($3 - $5_1) * Math_fround(.6499999761581421)));
   $5_1 = $1963($4_1, 12);
   $1986($4_1, 472, Math_fround(Math_fround($3 + $5_1) - $18_1));
   $3 = Math_fround($18_1 - $1963($4_1, 60));
   $3 = $3 >= Math_fround(0.0) ? $3 : Math_fround(0.0);
   $1986($4_1 + 276 | 0, 0, $3);
   $3 = Math_fround($3 + Math_fround($5_1 + $1963($4_1, 272)));
   label$30 : {
    if (Math_fround(Math_abs($3)) < Math_fround(2147483648.0)) {
     $0_1 = ~~$3;
     break label$30;
    }
    $0_1 = -2147483648;
   }
   $1986($4_1, 208, Math_fround($0_1 | 0));
  }
  $1973($8, 12, 53464);
  if (($1936($8, 27) | 0) < 0) {
   $1756($1944($8, 16))
  }
  global$0 = $8 + 32 | 0;
 }
 
 function $1426($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  return Math_fround(Math_fround(FUNCTION_TABLE[$0_1 | 0]($1_1)));
 }
 
 function $1427($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = 0, $9 = 0, $10_1 = 0, $11_1 = Math_fround(0), $12_1 = Math_fround(0), $13 = 0, $14 = 0, $15_1 = Math_fround(0), $16_1 = Math_fround(0), wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $3 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $0_1 = 0;
  $10_1 = global$0 - 16 | 0;
  global$0 = $10_1;
  $5_1 = $1944(0, 73568);
  $6_1 = $1944($5_1, 7080);
  if (!$1937($6_1, 143)) {
   $13 = $76($6_1, $3);
   $0_1 = $35($5_1 + 8128 | 0, $13);
   $3 = $1944($0_1, 0);
   label$2 : {
    if (($3 | 0) != -1) {
     $0_1 = $1944($5_1 + 8124 | 0, 0) + Math_imul($3, 144) | 0;
     break label$2;
    }
    $1973($0_1, 0, $1944($5_1 + 8140 | 0, 0));
    $0_1 = $5_1 + 8116 | 0;
    $8 = $1944($0_1, 24);
    $4_1 = $1944($0_1, 0);
    label$1 : {
     if (($8 | 0) == ($4_1 | 0)) {
      $2_1 = $4_1 + 1 | 0;
      $3 = $1944($0_1, 4);
      label$3 : {
       if (($4_1 | 0) < ($3 | 0)) {
        break label$3
       }
       $4_1 = $3 ? $3 + (($3 | 0) / 2 | 0) | 0 : 8;
       $4_1 = ($2_1 | 0) < ($4_1 | 0) ? $4_1 : $2_1;
       if (($3 | 0) >= ($4_1 | 0)) {
        break label$3
       }
       $3 = $16(Math_imul($4_1, 144));
       $9 = $1944($0_1, 8);
       if ($9) {
        $1602($3, $9, Math_imul($1944($0_1, 0), 144));
        $17($1944($0_1, 8));
       }
       $1973($0_1, 4, $4_1);
       $1973($0_1, 8, $3);
      }
      $1973($0_1, 0, $2_1);
      $9 = $1944($0_1, 24) + 1 | 0;
      break label$1;
     }
     $9 = $1944($1944($0_1, 8) + Math_imul($8, 144) | 0, 0);
    }
    $1973($0_1, 24, $9);
    $3 = Math_imul($8, 144);
    $2_1 = $1604($1944($0_1, 8) + $3 | 0, 0, 144);
    $1970($2_1, 108, 65535);
    $1982($2_1, 32, -1, -1);
    $1973($0_1, 28, $1944($0_1, 28) + 1 | 0);
    $0_1 = $1944($0_1, 8) + $3 | 0;
   }
   $11_1 = $1963($6_1 + 472 | 0, 0);
   $7_1 = $1963($6_1, 208);
   $12_1 = $1963($5_1 + 5480 | 0, 0);
   $15_1 = Math_fround($12_1 + $12_1);
   $12_1 = $1963($6_1 + 212 | 0, 0);
   $1986($10_1 + 12 | 0, 0, Math_fround($15_1 + Math_fround($12_1 + $1963($5_1, 6468))));
   $1986($10_1, 8, $11_1);
   $1986($10_1, 4, $12_1);
   $1986($10_1, 0, $7_1);
   $1973($0_1, 16, $13);
   $3 = $1_1 | 2097152;
   $5_1 = global$0 - 16 | 0;
   global$0 = $5_1;
   $1_1 = $1944(0, 73568);
   $6_1 = $1944($1_1, 7080);
   $13 = $1937($6_1, 143);
   label$10 : {
    if ($13) {
     break label$10
    }
    if (!($3 & 1048576)) {
     $267($1944($0_1, 16))
    }
    $4_1 = $1944(0, 73568);
    $2_1 = $1944($4_1 + 8124 | 0, 0);
    label$31 : {
     if ($0_1 >>> 0 < $2_1 >>> 0) {
      $8 = -1;
      $9 = $0_1;
      break label$31;
     }
     $8 = -1;
     $9 = $0_1;
     if ($2_1 + Math_imul($1944($4_1, 8116), 144) >>> 0 <= $0_1 >>> 0) {
      break label$31
     }
     $8 = ($0_1 - $2_1 | 0) / 144 | 0;
     $9 = 0;
    }
    $4_1 = $1944($1_1, 8148);
    $2_1 = $1944($1_1 + 8152 | 0, 0);
    label$5 : {
     if (($4_1 | 0) != ($2_1 | 0)) {
      break label$5
     }
     $14 = $2_1 ? $2_1 + (($2_1 | 0) / 2 | 0) | 0 : 8;
     $4_1 = $4_1 + 1 | 0;
     $4_1 = ($4_1 | 0) < ($14 | 0) ? $14 : $4_1;
     if (($2_1 | 0) >= ($4_1 | 0)) {
      break label$5
     }
     $2_1 = $16($4_1 << 3);
     $14 = $1944($1_1 + 8156 | 0, 0);
     if ($14) {
      $1602($2_1, $14, $1944($1_1, 8148) << 3);
      $17($1944($1_1, 8156));
     }
     $1973($1_1, 8152, $4_1);
     $1973($1_1, 8156, $2_1);
    }
    $2_1 = $1944($1_1 + 8156 | 0, 0) + ($1944($1_1, 8148) << 3) | 0;
    $1973($2_1, 4, $8);
    $1973($2_1, 0, $9);
    $1973($1_1, 8112, $0_1);
    $1973($1_1, 8148, $1944($1_1, 8148) + 1 | 0);
    $1982($0_1, 124, $1959($6_1, 208), i64toi32_i32$HIGH_BITS);
    if (($1944($0_1, 32) | 0) == ($1944($1_1, 6984) | 0)) {
     $11_1 = $1963($0_1 + 52 | 0, 0);
     $7_1 = $1963($0_1, 112);
     $1973($6_1, 208, $1944($0_1, 40));
     $1986($6_1 + 212 | 0, 0, Math_fround($11_1 + $7_1));
     $1968($0_1, 102, $1937($0_1, 102) + 1 | 0);
     break label$10;
    }
    $2_1 = $3 & 1;
    label$102 : {
     if (($2_1 | 0) == ($1944($0_1, 12) & 1)) {
      if ($2_1) {
       break label$102
      }
      if (!($1937($0_1, 105) & 255)) {
       break label$102
      }
     }
     $2_1 = $1944($0_1, 0);
     if ($2_1 >>> 0 < 2) {
      break label$102
     }
     $1685($1944($0_1, 8), $2_1, 40, 22);
    }
    $1968($0_1, 105, 0);
    $3 = $3 & 192 ? $3 : $3 | 64;
    $1973($0_1, 12, $3);
    $1982($0_1, 40, $1959($10_1, 0), i64toi32_i32$HIGH_BITS);
    $2_1 = $0_1 + 48 | 0;
    $1982($2_1, 0, $1959($10_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
    $1968($0_1, 103, 1);
    $1973($0_1, 36, $1944($0_1, 32));
    $8 = $1944($1_1, 6984);
    $1986($0_1, 60, $1963($0_1, 56));
    $1973($0_1, 32, $8);
    $1973($0_1, 56, 0);
    $11_1 = $1963($1_1 + 5496 | 0, 0);
    $1986($0_1, 112, $11_1);
    $1_1 = $1959($1_1 + 5476 | 0, 0);
    $8 = i64toi32_i32$HIGH_BITS;
    $1970($0_1, 106, 0);
    $1982($0_1, 116, $1_1, $8);
    $1968($0_1, 102, 1);
    $1_1 = $0_1 + 52 | 0;
    $7_1 = $1963($1_1, 0);
    $1973($6_1, 208, $1944($0_1, 40));
    $1986($6_1 + 212 | 0, 0, Math_fround($11_1 + $7_1));
    $3 = $51($3 & 2097152 ? 35 : 37, Math_fround(1.0));
    $11_1 = $1963($2_1, 0);
    $2_1 = $1944($6_1, 580);
    $7_1 = $1963($0_1, 40);
    $12_1 = $1963($6_1, 60);
    $16_1 = Math_fround($1963($1_1, 0) + Math_fround(-1.0));
    $1986($5_1, 12, $16_1);
    $15_1 = $7_1;
    $7_1 = Math_fround($12_1 * Math_fround(.5));
    label$12 : {
     if (Math_fround(Math_abs($7_1)) < Math_fround(2147483648.0)) {
      $0_1 = ~~$7_1;
      break label$12;
     }
     $0_1 = -2147483648;
    }
    $7_1 = Math_fround($0_1 | 0);
    $1986($5_1, 8, Math_fround($15_1 - $7_1));
    $1986($5_1, 4, $16_1);
    $1986($5_1, 0, Math_fround($11_1 + $7_1));
    $399($2_1, $5_1 + 8 | 0, $5_1, $3, Math_fround(1.0));
   }
   global$0 = $5_1 + 16 | 0;
   $0_1 = !$13;
  }
  global$0 = $10_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1428($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $4_1 = global$0 - 32 | 0;
  global$0 = $4_1;
  $5_1 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $0_1 = $1488($4_1 + 12 | 0, $1_1);
  $6_1 = ($1944($1944($0_1, 8), 0) | 0) != 2 ? $0_1 + 4 | 0 : 0;
  $1_1 = $1944(0, 73568);
  $3 = 0;
  __inlined_func$755 : {
   if ($1937($1944($1_1, 7080), 143)) {
    break __inlined_func$755
   }
   $1_1 = $1944($1_1, 8112);
   if ($1_1) {
    $3 = $756($1_1, $5_1, $6_1, $2_1);
    if (!(!$3 | $2_1 & 8)) {
     $267($1944($1944($1_1, 8) + Math_imul($1939($1_1, 108), 40) | 0, 0))
    }
   }
  }
  $1_1 = $3;
  $1973($0_1, 0, 52584);
  $2_1 = $1944($0_1, 8);
  if (($1944($2_1, 0) | 0) != 2) {
   $1973($4_1, 24, $1937($0_1, 4));
   $3 = $4_1 + 24 | 0;
   $0_1 = fimport$1(72652, $3 | 0) | 0;
   $2_1 = $1944($2_1, 0);
   $1973($4_1, 24, 0);
   $5_1 = $2_1;
   $2_1 = fimport$1(72760, $3 | 0) | 0;
   fimport$3($5_1 | 0, $2_1 | 0, $0_1 | 0);
   fimport$4($2_1 | 0);
   fimport$4($0_1 | 0);
  }
  global$0 = $4_1 + 32 | 0;
  return $1_1 | 0;
 }
 
 function $1429($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $0_1 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $2_1 = $1944(0, 73568);
  $3 = 0;
  __inlined_func$760 : {
   if ($1937($1944($2_1, 7080), 143)) {
    break __inlined_func$760
   }
   $2_1 = $1944($2_1, 8112);
   if ($2_1) {
    $3 = $756($2_1, $0_1, 0, $1_1 | 2097184)
   } else {
    $3 = 0
   }
  }
  return $3 | 0;
 }
 
 function $1430($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $3 = $1944(0, 73568);
  $0_1 = $1944($3, 8112);
  label$1 : {
   if (!$0_1) {
    break label$1
   }
   if ($1937($0_1 + 14 | 0, 0) & 16) {
    break label$1
   }
   $5_1 = $76($1944($3, 7080), $1_1);
   label$2 : {
    if ($5_1) {
     $2_1 = $1944($0_1, 0);
     label$4 : {
      if (($2_1 | 0) <= 0) {
       $1_1 = ($2_1 | 0) > 0;
       break label$4;
      }
      $1_1 = $1944($0_1, 8);
      if (($1944($1_1, 0) | 0) == ($5_1 | 0)) {
       $0_1 = $1_1;
       $1_1 = 1;
       break label$4;
      }
      $3 = (Math_imul($2_1, 40) + $1_1 | 0) - 40 | 0;
      while (1) {
       label$7 : {
        $4_1 = $4_1 + 1 | 0;
        if (($2_1 | 0) == ($4_1 | 0)) {
         $0_1 = $3;
         break label$7;
        }
        $0_1 = Math_imul($4_1, 40) + $1_1 | 0;
        if (($1944($0_1, 0) | 0) != ($5_1 | 0)) {
         continue
        }
       }
       break;
      };
      $1_1 = ($2_1 | 0) > ($4_1 | 0);
     }
     if ($1_1) {
      break label$2
     }
    }
    $0_1 = 0;
   }
   if (!$0_1) {
    break label$1
   }
   $1968($0_1, 36, 1);
  }
 }
 
 function $1431($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $2_1 = global$0 - 32 | 0;
  global$0 = $2_1;
  $1973($2_1 + 24 | 0, 0, 0);
  $1982($2_1, 16, 0, 0);
  $1973($2_1, 12, 53464);
  $1973($2_1, 28, $1_1);
  if (($1944($1_1, 0) | 0) != 2) {
   $1506($2_1 + 12 | 0)
  }
  $1973($2_1, 12, 53312);
  $1_1 = (wasm2js_i32$0 = (wasm2js_i32$3 = $1944($2_1, 16), wasm2js_i32$4 = $2_1 + 16 | 0, wasm2js_i32$5 = ($1936($2_1, 27) | 0) < 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($1944($2_1, 28), 0) | 0) != 2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $3 = $1944(0, 73568);
  label$1 : {
   if ($1937($3, 12196)) {
    break label$1
   }
   if (!$1_1) {
    $1_1 = $1944($3 + 36 | 0, 0)
   }
   if (!$1_1) {
    break label$1
   }
   if (!$1937($1_1, 0)) {
    break label$1
   }
   $4_1 = $1622($1_1, 13565);
   if (!$4_1) {
    break label$1
   }
   $1_1 = $1944(0, 73568);
   $1973($1_1, 12200, 2);
   $1968($1_1, 12196, 1);
   $1982($1_1, 12220, 0, 0);
   $1973($1_1, 12236, $1944($1944($1_1, 7080) + 344 | 0, 0));
   if (($0_1 | 0) < 0) {
    $0_1 = $1944($1_1, 12244)
   }
   $1968($1_1, 12232, 1);
   $1973($1_1, 12228, 2139095039);
   $1973($1_1, 12240, $0_1);
   $1973($3, 12204, $4_1);
  }
  $1973($2_1, 12, 53464);
  if (($1936($2_1, 27) | 0) < 0) {
   $1756($1944($2_1, 16))
  }
  global$0 = $2_1 + 32 | 0;
 }
 
 function $1432($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 0, (wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
  $65(5950, $1_1);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1434($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  return $336((wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0, 0, $3) | 0;
 }
 
 function $1435($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  return ($338((wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $1_1) | 0) != 0 | 0;
 }
 
 function $1436($0_1) {
  $0_1 = $0_1 | 0;
  $1973($0_1, 0, 2);
 }
 
 function $1437($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1973($4_1, 8, $2_1);
  $1973($4_1, 12, $1_1);
  FUNCTION_TABLE[$0_1 | 0]($4_1 + 12 | 0, $4_1 + 8 | 0, $3);
  fimport$4($1944($4_1, 8) | 0);
  fimport$4($1944($4_1, 12) | 0);
  global$0 = $4_1 + 16 | 0;
 }
 
 function $1438($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1982($3, 8, 0, 0);
  $0_1 = $763($0_1, $3 + 8 | 0);
  $1982($3, 0, 0, 0);
  $158($0_1, $763($1_1, $3), $2_1);
  global$0 = $3 + 16 | 0;
 }
 
 function $1439($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $2_1 + 8 | 0;
  $204($3);
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $3, $2_1 + 4 | 0);
  fimport$4($1944($2_1, 4) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1440($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $2_1 + 8 | 0;
  $205($3);
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $3, $2_1 + 4 | 0);
  fimport$4($1944($2_1, 4) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1441($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = Math_fround(0);
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $1944(0, 73568);
  $5_1 = $1963($3 + 7252 | 0, 0);
  $6_1 = $1963($3 + 7260 | 0, 0);
  $4_1 = $2_1 + 8 | 0;
  $1986($4_1, 4, Math_fround($1963($3 + 7264 | 0, 0) - $1963($3 + 7256 | 0, 0)));
  $1986($4_1, 0, Math_fround($6_1 - $5_1));
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $4_1, $2_1 + 4 | 0);
  fimport$4($1944($2_1, 4) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1442($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, $221());
  $1973($0_1, 0, fimport$1(52088, $1_1 + 8 | 0) | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1444($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = Math_fround(0);
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1982($2_1, 8, 0, 0);
  $3 = $763($0_1, $2_1 + 8 | 0);
  $0_1 = $1944($1944(0, 73568), 7080);
  $4_1 = $0_1 + 212 | 0;
  $1_1 = 0;
  __inlined_func$272 : {
   if (!($1963($4_1, 0) < $1963($0_1 + 508 | 0, 0))) {
    break __inlined_func$272
   }
   $1_1 = 0;
   if (!(Math_fround($1963($4_1, 0) + $1963($3, 4)) > $1963($0_1 + 500 | 0, 0))) {
    break __inlined_func$272
   }
   $5_1 = $1963($0_1, 208);
   if ($5_1 < $1963($0_1, 504)) {
    $1_1 = Math_fround($5_1 + $1963($3, 0)) > $1963($0_1, 496)
   } else {
    $1_1 = 0
   }
  }
  $0_1 = $1_1;
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1445($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 8, $2_1);
  $1973($3, 12, $1_1);
  $0_1 = FUNCTION_TABLE[$0_1 | 0]($3 + 12 | 0, $3 + 8 | 0) | 0;
  fimport$4($1944($3, 8) | 0);
  fimport$4($1944($3, 12) | 0);
  global$0 = $3 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1446($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1982($2_1, 8, 0, 0);
  $0_1 = $763($0_1, $2_1 + 8 | 0);
  $1982($2_1, 0, 0, 0);
  $0_1 = $273($0_1, $763($1_1, $2_1));
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1447($0_1) {
  $0_1 = $0_1 | 0;
  return +FUNCTION_TABLE[$0_1 | 0]();
 }
 
 function $1448($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, $92($1944($1944($1944(0, 73568) + 7504 | 0, 0), 0), 0, 11755));
  $1973($0_1, 0, fimport$1(49796, $1_1 + 8 | 0) | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1449($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, $94());
  $1973($0_1, 0, fimport$1(49796, $1_1 + 8 | 0) | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1450($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 8, $1944(0, 73568) + 6476 | 0);
  $1973($0_1, 0, fimport$1(55976, $1_1 + 8 | 0) | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1451($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  if ($1_1 >>> 0 <= 52) {
   $3 = $1944(($1_1 << 2) + 21212 | 0, 0)
  } else {
   $3 = 7130
  }
  $2_1 = $1697($3);
  if ($2_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($2_1 >>> 0 <= 10) {
     $1968($0_1, 11, $2_1);
     break label$2;
    }
    $4_1 = ($2_1 | 15) + 1 | 0;
    $1_1 = $1783($4_1);
    $1973($0_1, 8, $4_1 | -2147483648);
    $1973($0_1, 0, $1_1);
    $1973($0_1, 4, $2_1);
    $0_1 = $1_1;
   }
   if ($2_1) {
    $1603($0_1, $3, $2_1)
   }
   $1968($0_1 + $2_1 | 0, 0, 0);
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1452($0_1) {
  $0_1 = $0_1 | 0;
  $0_1 = global$0 - 16 | 0;
  global$0 = $0_1;
  $1973($0_1, 0, 2202);
  $1675(19180, $0_1);
  global$0 = $0_1 + 16 | 0;
 }
 
 function $1453($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1973($1_1, 0, 2383);
  $1675(19180, $1_1);
  $1973($0_1, 0, 2);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1454($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1973($4_1, 8, $2_1);
  $1973($4_1, 12, $1_1);
  $0_1 = FUNCTION_TABLE[$0_1 | 0]($4_1 + 12 | 0, $4_1 + 8 | 0, $3) | 0;
  fimport$4($1944($4_1, 8) | 0);
  fimport$4($1944($4_1, 12) | 0);
  global$0 = $4_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1455($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0.0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $4_1 = +fimport$5($1944($0_1, 0) | 0, 72736, $3 + 12 | 0);
  fimport$6($1944($3, 12) | 0);
  $1982($3, 4, 0, 0);
  if ($4_1 < 4294967296.0 & $4_1 >= 0.0) {
   $0_1 = ~~$4_1 >>> 0
  } else {
   $0_1 = 0
  }
  $0_1 = $216($0_1, $763($1_1, $3 + 4 | 0), $2_1);
  global$0 = $3 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1456($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = Math_fround($3);
  $4_1 = $4_1 | 0;
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $5_1 = global$0 - 32 | 0;
  global$0 = $5_1;
  $6_1 = $1944($1_1, 0);
  if ($6_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($6_1 >>> 0 <= 10) {
     $1968($5_1, 27, $6_1);
     $7_1 = $5_1 + 16 | 0;
     break label$2;
    }
    $8 = ($6_1 | 15) + 1 | 0;
    $7_1 = $1783($8);
    $1973($5_1, 24, $8 | -2147483648);
    $1973($5_1, 16, $7_1);
    $1973($5_1, 20, $6_1);
   }
   if ($6_1) {
    $1602($7_1, $1_1 + 4 | 0, $6_1)
   }
   $1968($6_1 + $7_1 | 0, 0, 0);
   $1973($5_1, 12, $4_1);
   FUNCTION_TABLE[$0_1 | 0]($5_1 + 28 | 0, $5_1 + 16 | 0, $2_1, $3, $5_1 + 12 | 0);
   fimport$10($1944($5_1, 28) | 0);
   $0_1 = $1944($5_1, 28);
   fimport$4($0_1 | 0);
   fimport$4($1944($5_1, 12) | 0);
   if (($1936($5_1, 27) | 0) < 0) {
    $1756($1944($5_1, 16))
   }
   global$0 = $5_1 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1457($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = Math_fround($3);
  $4_1 = $4_1 | 0;
  var $5_1 = 0, $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $6_1 = $5_1 + 8 | 0;
  $68($6_1, (wasm2js_i32$0 = $1944($1_1, 0), wasm2js_i32$1 = $1_1, wasm2js_i32$2 = ($1936($1_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0, $2_1, $3);
  $1_1 = $1944($4_1, 0);
  $1973($5_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $6_1, $5_1 + 4 | 0);
  fimport$4($1944($5_1, 4) | 0);
  global$0 = $5_1 + 16 | 0;
 }
 
 function $1458($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 8, $2_1);
  FUNCTION_TABLE[$0_1 | 0]($3 + 12 | 0, $1_1, $3 + 8 | 0);
  fimport$10($1944($3, 12) | 0);
  $0_1 = $1944($3, 12);
  fimport$4($0_1 | 0);
  fimport$4($1944($3, 8) | 0);
  global$0 = $3 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1459($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $5_1 = global$0 - 32 | 0;
  global$0 = $5_1;
  $3 = $5_1 + 16 | 0;
  $1986($3, 12, Math_fround(Math_fround($1_1 >>> 24 >>> 0) * Math_fround(.003921568859368563)));
  $1986($3, 0, Math_fround(Math_fround(($1_1 & 255) >>> 0) * Math_fround(.003921568859368563)));
  $1986($3, 8, Math_fround(Math_fround(($1_1 >>> 16 & 255) >>> 0) * Math_fround(.003921568859368563)));
  $1986($3, 4, Math_fround(Math_fround(($1_1 >>> 8 & 255) >>> 0) * Math_fround(.003921568859368563)));
  $1_1 = $1944($2_1, 0);
  $1973($5_1, 12, $1_1);
  fimport$10($1_1 | 0);
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1986($4_1, 8, $1963($3, 0));
  $2_1 = fimport$1(72796, $4_1 + 8 | 0) | 0;
  $6_1 = $5_1 + 12 | 0;
  $7_1 = $1944($6_1, 0);
  $1_1 = fimport$2(1643) | 0;
  fimport$3($7_1 | 0, $1_1 | 0, $2_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($2_1 | 0);
  $1986($4_1, 8, $1963($3, 4));
  $2_1 = fimport$1(72796, $4_1 + 8 | 0) | 0;
  $7_1 = $1944($6_1, 0);
  $1_1 = fimport$2(1245) | 0;
  fimport$3($7_1 | 0, $1_1 | 0, $2_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($2_1 | 0);
  $1986($4_1, 8, $1963($3, 8));
  $2_1 = fimport$1(72796, $4_1 + 8 | 0) | 0;
  $7_1 = $1944($6_1, 0);
  $1_1 = fimport$2(1063) | 0;
  fimport$3($7_1 | 0, $1_1 | 0, $2_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($2_1 | 0);
  $1986($4_1, 8, $1963($3, 12));
  $2_1 = fimport$1(72796, $4_1 + 8 | 0) | 0;
  $3 = $1944($6_1, 0);
  $1_1 = fimport$2(1857) | 0;
  fimport$3($3 | 0, $1_1 | 0, $2_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($2_1 | 0);
  $1973($0_1, 0, $1944($6_1, 0));
  $1973($6_1, 0, 0);
  global$0 = $4_1 + 16 | 0;
  fimport$4($1944($5_1, 12) | 0);
  global$0 = $5_1 + 32 | 0;
 }
 
 function $1460($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $1983($1_1 + 8 | 0, 0, 0, 0);
  $1983($1_1, 0, 0, 0);
  $0_1 = $31($768($0_1, $1_1));
  global$0 = $1_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1461($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = Math_fround($1_1);
  $2_1 = Math_fround($2_1);
  $3 = Math_fround($3);
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var $7_1 = 0;
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $1973($7_1, 8, $5_1);
  $1973($7_1, 12, $4_1);
  $1973($7_1, 4, $6_1);
  FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1, $3, $7_1 + 12 | 0, $7_1 + 8 | 0, $7_1 + 4 | 0);
  fimport$4($1944($7_1, 4) | 0);
  fimport$4($1944($7_1, 8) | 0);
  fimport$4($1944($7_1, 12) | 0);
  global$0 = $7_1 + 16 | 0;
 }
 
 function $1462($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = Math_fround($0_1);
  $1_1 = Math_fround($1_1);
  $2_1 = Math_fround($2_1);
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = 0;
  $6_1 = global$0 - 48 | 0;
  global$0 = $6_1;
  $1973($6_1, 36, $3);
  $1973($6_1, 28, 53576);
  $3 = $6_1 + 28 | 0;
  $1508($3);
  $1973($6_1, 24, $4_1);
  $1973($6_1, 16, 53576);
  $7_1 = $6_1 + 16 | 0;
  $1508($7_1);
  $1973($6_1, 8, $5_1);
  $1973($6_1, 0, 53576);
  $1508($6_1);
  $32($0_1, $1_1, $2_1, $3 + 4 | 0, $7_1 + 4 | 0, $6_1 + 4 | 0);
  $1973($6_1, 0, 53576);
  $4_1 = $1944($6_1, 8);
  $1986($6_1, 40, $1963($6_1, 4));
  $5_1 = $6_1 + 40 | 0;
  $3 = fimport$1(72796, $5_1 | 0) | 0;
  $4_1 = $1944($4_1, 0);
  $1973($6_1, 40, 0);
  $8 = $4_1;
  $4_1 = fimport$1(72760, $5_1 | 0) | 0;
  fimport$3($8 | 0, $4_1 | 0, $3 | 0);
  fimport$4($4_1 | 0);
  fimport$4($3 | 0);
  $1973($6_1, 16, 53576);
  $4_1 = $1944($6_1, 24);
  $1986($6_1, 0, $1963($6_1, 20));
  $3 = fimport$1(72796, $6_1 | 0) | 0;
  $4_1 = $1944($4_1, 0);
  $1973($6_1, 0, 0);
  $5_1 = $4_1;
  $4_1 = fimport$1(72760, $6_1 | 0) | 0;
  fimport$3($5_1 | 0, $4_1 | 0, $3 | 0);
  fimport$4($4_1 | 0);
  fimport$4($3 | 0);
  $1973($6_1, 28, 53576);
  $4_1 = $1944($6_1, 36);
  $1986($6_1, 16, $1963($6_1, 32));
  $3 = fimport$1(72796, $7_1 | 0) | 0;
  $4_1 = $1944($4_1, 0);
  $1973($6_1, 16, 0);
  $5_1 = $4_1;
  $4_1 = fimport$1(72760, $7_1 | 0) | 0;
  fimport$3($5_1 | 0, $4_1 | 0, $3 | 0);
  fimport$4($4_1 | 0);
  fimport$4($3 | 0);
  global$0 = $6_1 + 48 | 0;
 }
 
 function $1463($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = Math_fround($0_1);
  $1_1 = Math_fround($1_1);
  $2_1 = Math_fround($2_1);
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = 0;
  $6_1 = global$0 - 48 | 0;
  global$0 = $6_1;
  $1973($6_1, 36, $3);
  $1973($6_1, 28, 53576);
  $3 = $6_1 + 28 | 0;
  $1508($3);
  $1973($6_1, 24, $4_1);
  $1973($6_1, 16, 53576);
  $7_1 = $6_1 + 16 | 0;
  $1508($7_1);
  $1973($6_1, 8, $5_1);
  $1973($6_1, 0, 53576);
  $1508($6_1);
  $33($0_1, $1_1, $2_1, $3 + 4 | 0, $7_1 + 4 | 0, $6_1 + 4 | 0);
  $1973($6_1, 0, 53576);
  $4_1 = $1944($6_1, 8);
  $1986($6_1, 40, $1963($6_1, 4));
  $5_1 = $6_1 + 40 | 0;
  $3 = fimport$1(72796, $5_1 | 0) | 0;
  $4_1 = $1944($4_1, 0);
  $1973($6_1, 40, 0);
  $8 = $4_1;
  $4_1 = fimport$1(72760, $5_1 | 0) | 0;
  fimport$3($8 | 0, $4_1 | 0, $3 | 0);
  fimport$4($4_1 | 0);
  fimport$4($3 | 0);
  $1973($6_1, 16, 53576);
  $4_1 = $1944($6_1, 24);
  $1986($6_1, 0, $1963($6_1, 20));
  $3 = fimport$1(72796, $6_1 | 0) | 0;
  $4_1 = $1944($4_1, 0);
  $1973($6_1, 0, 0);
  $5_1 = $4_1;
  $4_1 = fimport$1(72760, $6_1 | 0) | 0;
  fimport$3($5_1 | 0, $4_1 | 0, $3 | 0);
  fimport$4($4_1 | 0);
  fimport$4($3 | 0);
  $1973($6_1, 28, 53576);
  $4_1 = $1944($6_1, 36);
  $1986($6_1, 16, $1963($6_1, 32));
  $3 = fimport$1(72796, $7_1 | 0) | 0;
  $4_1 = $1944($4_1, 0);
  $1973($6_1, 16, 0);
  $5_1 = $4_1;
  $4_1 = fimport$1(72760, $7_1 | 0) | 0;
  fimport$3($5_1 | 0, $4_1 | 0, $3 | 0);
  fimport$4($4_1 | 0);
  fimport$4($3 | 0);
  global$0 = $6_1 + 48 | 0;
 }
 
 function $1464($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  return FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1) | 0;
 }
 
 function $1465($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $3 = Math_fround($3);
  return FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1, $3) | 0;
 }
 
 function $1467($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1982($3, 8, 0, 0);
  $0_1 = $763($0_1, $3 + 8 | 0);
  $1982($3, 0, 0, 0);
  $0_1 = $93($0_1, $763($1_1, $3), $2_1);
  global$0 = $3 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1468($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0;
  $1_1 = global$0 - 32 | 0;
  global$0 = $1_1;
  $1973($1_1, 20, $0_1);
  $1982($1_1, 12, 0, 0);
  $1973($1_1, 8, 56184);
  $2_1 = $1_1 + 12 | 0;
  if (($1944($0_1, 0) | 0) != 2) {
   $1983($1_1, 24, 0, 0);
   $1982($1_1, 12, $1960($763($0_1, $1_1 + 24 | 0), 0), i64toi32_i32$HIGH_BITS);
  }
  $0_1 = $128(($1944($1944($1_1, 20), 0) | 0) != 2 ? $2_1 : 0);
  global$0 = $1_1 + 32 | 0;
  return $0_1 | 0;
 }
 
 function $1469($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $2_1 + 8 | 0;
  $182($3);
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $3, $2_1 + 4 | 0);
  fimport$4($1944($2_1, 4) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1470($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $4_1 = $2_1 + 8 | 0;
  $3 = $1944(0, 73568);
  $5_1 = $1944($3, 7480);
  label$1 : {
   if (($5_1 | 0) > 0) {
    $3 = ($1944($3 + 7476 | 0, 0) + Math_imul($5_1, 36) | 0) - 8 | 0;
    break label$1;
   }
   $3 = $3 + 228 | 0;
  }
  $1982($4_1, 0, $1959($3, 0), i64toi32_i32$HIGH_BITS);
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $4_1, $2_1 + 4 | 0);
  fimport$4($1944($2_1, 4) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1471($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  return FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1) | 0;
 }
 
 function $1472($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $3 = $3 | 0;
  var $4_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1973($4_1, 8, $3);
  FUNCTION_TABLE[$0_1 | 0]($4_1 + 12 | 0, $1_1, $2_1, $4_1 + 8 | 0);
  fimport$10($1944($4_1, 12) | 0);
  $0_1 = $1944($4_1, 12);
  fimport$4($0_1 | 0);
  fimport$4($1944($4_1, 8) | 0);
  global$0 = $4_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1473($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = Math_fround($2_1);
  $3 = $3 | 0;
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = Math_fround(0), $8 = Math_fround(0), $9 = 0, $10_1 = Math_fround(0);
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $9 = $5_1 + 8 | 0;
  $4_1 = $1944(0, 73568);
  if ($2_1 < Math_fround(0.0)) {
   $2_1 = $1963($4_1 + 48 | 0, 0)
  }
  label$2 : {
   label$3 : {
    $6_1 = $1_1 + $4_1 | 0;
    if ($1937($6_1 + 236 | 0, 0)) {
     break label$3
    }
    if ($1937($6_1 + 1022 | 0, 0)) {
     break label$3
    }
    $2_1 = Math_fround(0.0);
    $7_1 = Math_fround(0.0);
    break label$2;
   }
   label$4 : {
    if (!($1963((($1_1 << 2) + $4_1 | 0) + 1120 | 0, 0) >= Math_fround($2_1 * $2_1))) {
     break label$4
    }
    $8 = $1963($4_1 + 228 | 0, 0);
    if (!($8 >= Math_fround(-256.0e3))) {
     break label$4
    }
    if (!($1963($4_1 + 232 | 0, 0) >= Math_fround(-256.0e3))) {
     break label$4
    }
    $6_1 = ($1_1 << 3) + $4_1 | 0;
    $10_1 = $1963($6_1 + 908 | 0, 0);
    if (!($10_1 >= Math_fround(-256.0e3))) {
     break label$4
    }
    $2_1 = Math_fround(0.0);
    $7_1 = Math_fround(0.0);
    if (!($1963($6_1 + 912 | 0, 0) >= Math_fround(-256.0e3))) {
     break label$2
    }
    $2_1 = Math_fround($1963($4_1 + 232 | 0, 0) - $1963((($1_1 << 3) + $4_1 | 0) + 912 | 0, 0));
    $7_1 = Math_fround($8 - $10_1);
    break label$2;
   }
   $2_1 = Math_fround(0.0);
   $7_1 = Math_fround(0.0);
  }
  $8 = $7_1;
  $1986($9, 4, $2_1);
  $1986($9, 0, $8);
  $1_1 = $1944($3, 0);
  $1973($5_1, 4, $1_1);
  fimport$10($1_1 | 0);
  $764($0_1, $9, $5_1 + 4 | 0);
  fimport$4($1944($5_1, 4) | 0);
  global$0 = $5_1 + 16 | 0;
 }
 
 function $1474($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = $97();
  $3 = $2_1 ? $2_1 : 19354;
  $1_1 = $1697($3);
  if ($1_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($1_1 >>> 0 <= 10) {
     $1968($0_1, 11, $1_1);
     break label$2;
    }
    $4_1 = ($1_1 | 15) + 1 | 0;
    $2_1 = $1783($4_1);
    $1973($0_1, 8, $4_1 | -2147483648);
    $1973($0_1, 0, $2_1);
    $1973($0_1, 4, $1_1);
    $0_1 = $2_1;
   }
   $2_1 = $0_1 + $1_1 | 0;
   if ($1_1) {
    $1603($0_1, $3, $1_1)
   }
   $1968($2_1, 0, 0);
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1475($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0.0, $4_1 = 0, $5_1 = 0, $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $3 = +fimport$5($1944($0_1, 0) | 0, 49072, $1_1 + 12 | 0);
  label$1 : {
   if ($3 < 4294967296.0 & $3 >= 0.0) {
    $4_1 = ~~$3 >>> 0;
    break label$1;
   }
   $4_1 = 0;
  }
  $2_1 = $1944($4_1, 0);
  if ($2_1 >>> 0 < 2147483632) {
   $6_1 = $1944($1_1, 12);
   label$4 : {
    if ($2_1 >>> 0 <= 10) {
     $1968($1_1, 11, $2_1);
     $0_1 = $1_1;
     break label$4;
    }
    $5_1 = ($2_1 | 15) + 1 | 0;
    $0_1 = $1783($5_1);
    $1973($1_1, 8, $5_1 | -2147483648);
    $1973($1_1, 0, $0_1);
    $1973($1_1, 4, $2_1);
   }
   if ($2_1) {
    $1602($0_1, $4_1 + 4 | 0, $2_1)
   }
   $1968($0_1 + $2_1 | 0, 0, 0);
   fimport$6($6_1 | 0);
   $98((wasm2js_i32$0 = $1944($1_1, 0), wasm2js_i32$1 = $1_1, wasm2js_i32$2 = ($1936($1_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
   if (($1936($1_1, 11) | 0) < 0) {
    $1756($1944($1_1, 0))
   }
   global$0 = $1_1 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1476($0_1) {
  $0_1 = $0_1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $137((wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), 0);
 }
 
 function $1477($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0;
  $3 = $114(0);
  $1_1 = $1697($3);
  if ($1_1 >>> 0 < 2147483632) {
   label$2 : {
    if ($1_1 >>> 0 <= 10) {
     $1968($0_1, 11, $1_1);
     break label$2;
    }
    $4_1 = ($1_1 | 15) + 1 | 0;
    $2_1 = $1783($4_1);
    $1973($0_1, 8, $4_1 | -2147483648);
    $1973($0_1, 0, $2_1);
    $1973($0_1, 4, $1_1);
    $0_1 = $2_1;
   }
   $2_1 = $0_1 + $1_1 | 0;
   if ($1_1) {
    $1603($0_1, $3, $1_1)
   }
   $1968($2_1, 0, 0);
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1478($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  $7_1 = $7_1 | 0;
  var $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0;
  $8 = global$0 - 16 | 0;
  global$0 = $8;
  $9 = $1944($1_1, 0);
  if ($9 >>> 0 < 2147483632) {
   label$2 : {
    if ($9 >>> 0 <= 10) {
     $1968($8, 15, $9);
     $10_1 = $8 + 4 | 0;
     break label$2;
    }
    $11_1 = ($9 | 15) + 1 | 0;
    $10_1 = $1783($11_1);
    $1973($8, 12, $11_1 | -2147483648);
    $1973($8, 4, $10_1);
    $1973($8, 8, $9);
   }
   if ($9) {
    $1602($10_1, $1_1 + 4 | 0, $9)
   }
   $1968($9 + $10_1 | 0, 0, 0);
   $0_1 = FUNCTION_TABLE[$0_1 | 0]($8 + 4 | 0, $2_1, $3, $4_1, $5_1, $6_1, $7_1) | 0;
   if (($1936($8, 15) | 0) < 0) {
    $1756($1944($8, 4))
   }
   global$0 = $8 + 16 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1479($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  $6_1 = $6_1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  return $274((wasm2js_i32$0 = $1944($0_1, 0), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($0_1, 11) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $1_1, $2_1, $3, $4_1, $5_1, $6_1) | 0;
 }
 
 function $1480($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1973($4_1, 8, $2_1);
  $1973($4_1, 12, $1_1);
  $1973($4_1, 4, $3);
  FUNCTION_TABLE[$0_1 | 0]($4_1 + 12 | 0, $4_1 + 8 | 0, $4_1 + 4 | 0);
  fimport$4($1944($4_1, 4) | 0);
  fimport$4($1944($4_1, 8) | 0);
  fimport$4($1944($4_1, 12) | 0);
  global$0 = $4_1 + 16 | 0;
 }
 
 function $1481($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0;
  $3 = $1944(0, 95660);
  fimport$10($1944($0_1, 0) | 0);
  fimport$4($1944($3, 172) | 0);
  $1973($3, 172, $1944($0_1, 0));
  fimport$10($1944($1_1, 0) | 0);
  fimport$4($1944($3, 176) | 0);
  $1973($3, 176, $1944($1_1, 0));
  fimport$10($1944($2_1, 0) | 0);
  fimport$4($1944($3, 180) | 0);
  $1973($3, 180, $1944($2_1, 0));
  label$1 : {
   if (($1944($0_1, 0) | 0) != 2) {
    if (($1944($1_1, 0) | 0) != 2) {
     break label$1
    }
   }
   $102(0, 0);
   return;
  }
  $102(875, 876);
 }
 
 function $1483($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 8, $16($1_1));
  $1973($0_1, 0, fimport$1(72620, $2_1 + 8 | 0) | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1484($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0.0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = +fimport$5($1944($0_1, 0) | 0, 72620, $1_1 + 12 | 0);
  fimport$6($1944($1_1, 12) | 0);
  if ($2_1 < 4294967296.0 & $2_1 >= 0.0) {
   $0_1 = ~~$2_1 >>> 0
  } else {
   $0_1 = 0
  }
  $17($0_1);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1486($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $7_1 = global$0 - 16 | 0;
  global$0 = $7_1;
  $0_1 = $1944(0, 95660);
  $4_1 = $0_1 + 52 | 0;
  $3 = $1697($1_1);
  $6_1 = $1799($4_1);
  __inlined_func$1839 : {
   if ($3 >>> 0 <= $6_1 >>> 0) {
    $2_1 = $1800($4_1);
    $1603($2_1, $1_1, $3);
    $1_1 = global$0 - 16 | 0;
    global$0 = $1_1;
    __inlined_func$1811 : {
     if ($1795($4_1)) {
      $1825($4_1, $3);
      break __inlined_func$1811;
     }
     $1827($4_1, $3);
    }
    $1968($1_1, 15, 0);
    $1813($2_1 + $3 | 0, $1_1 + 15 | 0);
    global$0 = $1_1 + 16 | 0;
    break __inlined_func$1839;
   }
   $1798($4_1);
   $2_1 = global$0 - 16 | 0;
   global$0 = $2_1;
   __inlined_func$1804 : {
    $8 = $3 - $6_1 | 0;
    $5_1 = 2147483631;
    if ($8 >>> 0 <= $5_1 + ($6_1 ^ -1) >>> 0) {
     $9 = $1800($4_1);
     $10_1 = $2_1 + 4 | 0;
     if ($6_1 >>> 0 < ($5_1 >>> 1 | 0) - 16 >>> 0) {
      $1973($2_1, 12, $6_1 << 1);
      $1973($2_1, 4, $6_1 + $8 | 0);
      $5_1 = $1816($1944($1815($2_1 + 4 | 0, $2_1 + 12 | 0), 0)) + 1 | 0;
     }
     $1818($10_1, $4_1, $5_1);
     $5_1 = $1944($2_1, 4);
     $1944($2_1, 8);
     if ($3) {
      $1821($5_1, $1_1, $3)
     }
     if (($6_1 | 0) != 10) {
      $1756($9)
     }
     $1823($4_1, $5_1);
     $1824($4_1, $1944($2_1, 8));
     $1825($4_1, $3);
     $1968($2_1, 12, 0);
     $1813($3 + $5_1 | 0, $2_1 + 12 | 0);
     global$0 = $2_1 + 16 | 0;
     break __inlined_func$1804;
    }
    $774();
    wasm2js_trap();
   }
  }
  if (($1944($0_1, 68) | 0) != 2) {
   fimport$10($1944($0_1, 72) | 0);
   $1973($7_1, 0, $1944($0_1, 72));
   $2_1 = $1944($0_1 + 56 | 0, 0);
   $3 = $1937($0_1, 63);
   $1_1 = $3 << 24 >> 24 < 0;
   $2_1 = $1_1 ? $2_1 : $3 & 127;
   $3 = $1755($2_1 + 4 | 0);
   $1973($3, 0, $2_1);
   $1602($3 + 4 | 0, (wasm2js_i32$0 = $1944($0_1, 52), wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $1_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $2_1);
   $1973($7_1, 8, $3);
   fimport$4(fimport$16($1944($0_1, 68) | 0, 2, 52544, $7_1 | 0) | 0);
  }
  global$0 = $7_1 + 16 | 0;
 }
 
 function $1487($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0.0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  label$1 : {
   $3 = $1944(0, 95660);
   if (($1944($3, 64) | 0) != 2) {
    fimport$10($1944($3, 72) | 0);
    $1973($1_1, 0, $1944($3, 72));
    $6_1 = fimport$16($1944($3, 64) | 0, 1, 52540, $1_1 | 0) | 0;
    $4_1 = +fimport$5($6_1 | 0, 49072, $1_1 + 12 | 0);
    label$3 : {
     if ($4_1 < 4294967296.0 & $4_1 >= 0.0) {
      $5_1 = ~~$4_1 >>> 0;
      break label$3;
     }
     $5_1 = 0;
    }
    $2_1 = $1944($5_1, 0);
    if ($2_1 >>> 0 >= 2147483632) {
     break label$1
    }
    $8 = $1944($1_1, 12);
    label$5 : {
     if ($2_1 >>> 0 <= 10) {
      $1968($1_1, 11, $2_1);
      $0_1 = $1_1;
      break label$5;
     }
     $7_1 = ($2_1 | 15) + 1 | 0;
     $0_1 = $1783($7_1);
     $1973($1_1, 8, $7_1 | -2147483648);
     $1973($1_1, 0, $0_1);
     $1973($1_1, 4, $2_1);
    }
    if ($2_1) {
     $1602($0_1, $5_1 + 4 | 0, $2_1)
    }
    $1968($0_1 + $2_1 | 0, 0, 0);
    fimport$6($8 | 0);
    $0_1 = $3 + 52 | 0;
    if (($1936($3, 63) | 0) < 0) {
     $1756($1944($0_1, 0))
    }
    $1982($0_1, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
    $1973($0_1 + 8 | 0, 0, $1944($1_1 + 8 | 0, 0));
    $1968($1_1, 11, 0);
    $1968($1_1, 0, 0);
    fimport$4($6_1 | 0);
   }
   $0_1 = $1936($3, 63);
   $2_1 = $1944($3, 52);
   global$0 = $1_1 + 16 | 0;
   return (($0_1 | 0) < 0 ? $2_1 : $3 + 52 | 0) | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1488($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0.0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 8, $1_1);
  $1973($0_1, 0, 52584);
  $1_1 = $1944($1_1, 0);
  if (($1_1 | 0) != 2) {
   $1973($2_1, 0, 0);
   $3 = fimport$1(72760, $2_1 | 0) | 0;
   $1_1 = fimport$7($1_1 | 0, $3 | 0) | 0;
   fimport$4($3 | 0);
   $4_1 = +fimport$5($1_1 | 0, 72652, $2_1 + 12 | 0);
   fimport$6($1944($2_1, 12) | 0);
   $1968($0_1, 4, $4_1 != 0.0);
   fimport$4($1_1 | 0);
  }
  global$0 = $2_1 + 16 | 0;
  return $0_1;
 }
 
 function $1489($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 52584);
  $1_1 = $1944($0_1, 8);
  if (($1944($1_1, 0) | 0) != 2) {
   $1973($2_1, 8, $1937($0_1, 4));
   $3 = $2_1 + 8 | 0;
   $4_1 = fimport$1(72652, $3 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, 0);
   $5_1 = $1_1;
   $1_1 = fimport$1(72760, $3 | 0) | 0;
   fimport$3($5_1 | 0, $1_1 | 0, $4_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($4_1 | 0);
  }
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1490($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 52584);
  $1_1 = $1944($0_1, 8);
  if (($1944($1_1, 0) | 0) != 2) {
   $1973($2_1, 8, $1937($0_1, 4));
   $3 = $2_1 + 8 | 0;
   $4_1 = fimport$1(72652, $3 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, 0);
   $5_1 = $1_1;
   $1_1 = fimport$1(72760, $3 | 0) | 0;
   fimport$3($5_1 | 0, $1_1 | 0, $4_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($4_1 | 0);
  }
  $1756($0_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1491($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0.0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = $1944($1944($0_1, 8), 0);
  $1973($1_1, 0, 0);
  $3 = fimport$1(72760, $1_1 | 0) | 0;
  $2_1 = fimport$7($2_1 | 0, $3 | 0) | 0;
  fimport$4($3 | 0);
  $4_1 = +fimport$5($2_1 | 0, 72652, $1_1 + 12 | 0);
  fimport$6($1944($1_1, 12) | 0);
  $1968($0_1, 4, $4_1 != 0.0);
  fimport$4($2_1 | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1492($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = $1944($0_1, 8);
  $1973($2_1, 8, $1937($0_1, 4));
  $3 = $2_1 + 8 | 0;
  $0_1 = fimport$1(72652, $3 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 8, 0);
  $4_1 = $1_1;
  $1_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($4_1 | 0, $1_1 | 0, $0_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1493($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $3 = $1944(0, 95660);
  $1973($1_1, 8, $0_1);
  $2_1 = $1_1 + 8 | 0;
  $0_1 = fimport$1(49204, $2_1 | 0) | 0;
  fimport$10($0_1 | 0);
  $1973($1_1, 8, $0_1);
  fimport$4(fimport$16($1944($3, 76) | 0, 1, 48472, $2_1 | 0) | 0);
  fimport$4($0_1 | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1494($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53076);
  $1_1 = $1944($0_1, 8);
  $1973($2_1, 8, $1937($0_1, 4));
  $3 = $2_1 + 8 | 0;
  $4_1 = fimport$1(72652, $3 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 8, 0);
  $5_1 = $1_1;
  $1_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($5_1 | 0, $1_1 | 0, $4_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($4_1 | 0);
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1495($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53076);
  $1_1 = $1944($0_1, 8);
  $1973($2_1, 8, $1937($0_1, 4));
  $3 = $2_1 + 8 | 0;
  $4_1 = fimport$1(72652, $3 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 8, 0);
  $5_1 = $1_1;
  $1_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($5_1 | 0, $1_1 | 0, $4_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($4_1 | 0);
  $1756($0_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1498($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53160);
  $1_1 = $1944($0_1, 8);
  $1973($2_1, 8, $1944($0_1, 4));
  $3 = $2_1 + 8 | 0;
  $4_1 = fimport$1(72736, $3 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 8, 0);
  $5_1 = $1_1;
  $1_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($5_1 | 0, $1_1 | 0, $4_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($4_1 | 0);
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1499($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53160);
  $1_1 = $1944($0_1, 8);
  $1973($2_1, 8, $1944($0_1, 4));
  $3 = $2_1 + 8 | 0;
  $4_1 = fimport$1(72736, $3 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 8, 0);
  $5_1 = $1_1;
  $1_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($5_1 | 0, $1_1 | 0, $4_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($4_1 | 0);
  $1756($0_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1500($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0.0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $3 = $1944($1944($0_1, 8), 0);
  $1973($1_1, 0, 0);
  $2_1 = fimport$1(72760, $1_1 | 0) | 0;
  $3 = fimport$7($3 | 0, $2_1 | 0) | 0;
  fimport$4($2_1 | 0);
  $4_1 = +fimport$5($3 | 0, 72736, $1_1 + 12 | 0);
  fimport$6($1944($1_1, 12) | 0);
  if ($4_1 < 4294967296.0 & $4_1 >= 0.0) {
   $2_1 = ~~$4_1 >>> 0
  } else {
   $2_1 = 0
  }
  $1973($0_1, 4, $2_1);
  fimport$4($3 | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1501($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = $1944($0_1, 8);
  $1973($2_1, 8, $1944($0_1, 4));
  $3 = $2_1 + 8 | 0;
  $0_1 = fimport$1(72736, $3 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 8, 0);
  $4_1 = $1_1;
  $1_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($4_1 | 0, $1_1 | 0, $0_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1502($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53228);
  $1_1 = $1944($0_1, 8);
  $1973($2_1, 8, $1944($0_1, 4));
  $3 = $2_1 + 8 | 0;
  $4_1 = fimport$1(72724, $3 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 8, 0);
  $5_1 = $1_1;
  $1_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($5_1 | 0, $1_1 | 0, $4_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($4_1 | 0);
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1503($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53228);
  $1_1 = $1944($0_1, 8);
  $1973($2_1, 8, $1944($0_1, 4));
  $3 = $2_1 + 8 | 0;
  $4_1 = fimport$1(72724, $3 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 8, 0);
  $5_1 = $1_1;
  $1_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($5_1 | 0, $1_1 | 0, $4_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($4_1 | 0);
  $1756($0_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1504($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0.0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $3 = $1944($1944($0_1, 8), 0);
  $1973($1_1, 0, 0);
  $2_1 = fimport$1(72760, $1_1 | 0) | 0;
  $3 = fimport$7($3 | 0, $2_1 | 0) | 0;
  fimport$4($2_1 | 0);
  $4_1 = +fimport$5($3 | 0, 72724, $1_1 + 12 | 0);
  fimport$6($1944($1_1, 12) | 0);
  if (Math_abs($4_1) < 2147483648.0) {
   $2_1 = ~~$4_1
  } else {
   $2_1 = -2147483648
  }
  $1973($0_1, 4, $2_1);
  fimport$4($3 | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1505($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = $1944($0_1, 8);
  $1973($2_1, 8, $1944($0_1, 4));
  $3 = $2_1 + 8 | 0;
  $0_1 = fimport$1(72724, $3 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 8, 0);
  $4_1 = $1_1;
  $1_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($4_1 | 0, $1_1 | 0, $0_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1506($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0.0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $4_1 = +fimport$5($1944($1944($0_1, 16), 0) | 0, 49072, $1_1 + 12 | 0);
  label$1 : {
   if ($4_1 < 4294967296.0 & $4_1 >= 0.0) {
    $5_1 = ~~$4_1 >>> 0;
    break label$1;
   }
   $5_1 = 0;
  }
  $2_1 = $1944($5_1, 0);
  if ($2_1 >>> 0 < 2147483632) {
   $7_1 = $1944($1_1, 12);
   label$4 : {
    if ($2_1 >>> 0 <= 10) {
     $1968($1_1, 11, $2_1);
     $3 = $1_1;
     break label$4;
    }
    $6_1 = ($2_1 | 15) + 1 | 0;
    $3 = $1783($6_1);
    $1973($1_1, 8, $6_1 | -2147483648);
    $1973($1_1, 0, $3);
    $1973($1_1, 4, $2_1);
   }
   if ($2_1) {
    $1602($3, $5_1 + 4 | 0, $2_1)
   }
   $1968($3 + $2_1 | 0, 0, 0);
   fimport$6($7_1 | 0);
   $3 = $0_1 + 4 | 0;
   if (($1936($0_1, 15) | 0) < 0) {
    $1756($1944($3, 0))
   }
   $1982($3, 0, $1959($1_1, 0), i64toi32_i32$HIGH_BITS);
   $1973($3 + 8 | 0, 0, $1944($1_1 + 8 | 0, 0));
   global$0 = $1_1 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1507($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0.0, $10_1 = 0, $11_1 = 0, $12_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  label$1 : {
   $0_1 = 0;
   label$2 : {
    if (($1_1 | 0) < 0) {
     break label$2
    }
    $4_1 = $1944(0, 95660);
    $0_1 = 0;
    if (($1944($4_1, 104) | 0) <= ($1_1 | 0)) {
     break label$2
    }
    $7_1 = $4_1 + 108 | 0;
    label$4 : {
     if (($1936($4_1, 119) | 0) < 0) {
      $1973($4_1 + 112 | 0, 0, 0);
      $0_1 = $1944($4_1, 108);
      break label$4;
     }
     $1968($4_1, 119, 0);
     $0_1 = $7_1;
    }
    $1968($0_1, 0, 0);
    $8 = fimport$21() | 0;
    $5_1 = $1944($4_1 + 112 | 0, 0);
    $6_1 = $1937($4_1, 119);
    $0_1 = $6_1 << 24 >> 24 < 0;
    $5_1 = $0_1 ? $5_1 : $6_1 & 127;
    $6_1 = $1755($5_1 + 4 | 0);
    $1973($6_1, 0, $5_1);
    $1602($6_1 + 4 | 0, (wasm2js_i32$0 = $1944($4_1, 108), wasm2js_i32$1 = $7_1, wasm2js_i32$2 = $0_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $5_1);
    $1973($3, 0, $6_1);
    $0_1 = fimport$1(49072, $3 | 0) | 0;
    $1973($3, 0, 0);
    $5_1 = fimport$1(72724, $3 | 0) | 0;
    fimport$3($8 | 0, $5_1 | 0, $0_1 | 0);
    fimport$4($5_1 | 0);
    fimport$4($0_1 | 0);
    $1973($3, 0, $1_1);
    $0_1 = fimport$1(72724, $3 | 0) | 0;
    fimport$10($1944($4_1, 100) | 0);
    $1973($3, 0, $1944($4_1, 100));
    fimport$10($0_1 | 0);
    $1973($3, 8, $0_1);
    fimport$10($8 | 0);
    $1973($3, 16, $8);
    $5_1 = fimport$16($1944($4_1, 96) | 0, 3, 53512, $3 | 0) | 0;
    fimport$4($0_1 | 0);
    $1973($3, 0, 0);
    $0_1 = fimport$1(72724, $3 | 0) | 0;
    $6_1 = fimport$7($8 | 0, $0_1 | 0) | 0;
    fimport$4($0_1 | 0);
    $9 = +fimport$5($6_1 | 0, 49072, $3 + 28 | 0);
    label$6 : {
     if ($9 < 4294967296.0 & $9 >= 0.0) {
      $10_1 = ~~$9 >>> 0;
      break label$6;
     }
     $10_1 = 0;
    }
    $1_1 = $1944($10_1, 0);
    if ($1_1 >>> 0 >= 2147483632) {
     break label$1
    }
    $12_1 = $1944($3, 28);
    label$8 : {
     if ($1_1 >>> 0 <= 10) {
      $1968($3, 11, $1_1);
      $0_1 = $3;
      break label$8;
     }
     $11_1 = ($1_1 | 15) + 1 | 0;
     $0_1 = $1783($11_1);
     $1973($3, 8, $11_1 | -2147483648);
     $1973($3, 0, $0_1);
     $1973($3, 4, $1_1);
    }
    if ($1_1) {
     $1602($0_1, $10_1 + 4 | 0, $1_1)
    }
    $1968($0_1 + $1_1 | 0, 0, 0);
    fimport$6($12_1 | 0);
    if (($1936($4_1, 119) | 0) < 0) {
     $1756($1944($7_1, 0))
    }
    $1982($7_1, 0, $1959($3, 0), i64toi32_i32$HIGH_BITS);
    $1973($7_1 + 8 | 0, 0, $1944($3 + 8 | 0, 0));
    $1968($3, 11, 0);
    $1968($3, 0, 0);
    fimport$4($6_1 | 0);
    $1973($2_1, 0, (wasm2js_i32$0 = $1944($4_1, 108), wasm2js_i32$1 = $7_1, wasm2js_i32$2 = ($1936($4_1, 119) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
    $9 = +fimport$5($5_1 | 0, 72652, $3 | 0);
    fimport$6($1944($3, 0) | 0);
    fimport$4($5_1 | 0);
    fimport$4($8 | 0);
    $0_1 = $9 != 0.0;
   }
   global$0 = $3 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1508($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = Math_fround(0), $3 = 0, $4_1 = 0.0, $5_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $3 = $1944($1944($0_1, 8), 0);
  $1973($1_1, 0, 0);
  $5_1 = fimport$1(72760, $1_1 | 0) | 0;
  $3 = fimport$7($3 | 0, $5_1 | 0) | 0;
  fimport$4($5_1 | 0);
  $4_1 = +fimport$5($3 | 0, 72808, $1_1 + 12 | 0);
  fimport$6($1944($1_1, 12) | 0);
  $2_1 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($4_1 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $2_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($4_1 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $2_1 = Math_fround($4_1);
  }
  $1986($0_1, 4, $2_1);
  fimport$4($3 | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1509($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53576);
  $1_1 = $1944($0_1, 8);
  $1986($2_1, 8, $1963($0_1, 4));
  $3 = $2_1 + 8 | 0;
  $4_1 = fimport$1(72796, $3 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 8, 0);
  $5_1 = $1_1;
  $1_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($5_1 | 0, $1_1 | 0, $4_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($4_1 | 0);
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1510($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53576);
  $1_1 = $1944($0_1, 8);
  $1986($2_1, 8, $1963($0_1, 4));
  $3 = $2_1 + 8 | 0;
  $4_1 = fimport$1(72796, $3 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 8, 0);
  $5_1 = $1_1;
  $1_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($5_1 | 0, $1_1 | 0, $4_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($4_1 | 0);
  $1756($0_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1511($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = $1944($0_1, 8);
  $1986($2_1, 8, $1963($0_1, 4));
  $3 = $2_1 + 8 | 0;
  $0_1 = fimport$1(72796, $3 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 8, 0);
  $4_1 = $1_1;
  $1_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($4_1 | 0, $1_1 | 0, $0_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1512($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = Math_fround(0), $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0.0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  while (1) {
   $3 = $1944($1944($0_1, 12), 0);
   $1973($1_1, 0, $4_1);
   $5_1 = fimport$1(72760, $1_1 | 0) | 0;
   $3 = fimport$7($3 | 0, $5_1 | 0) | 0;
   fimport$4($5_1 | 0);
   $6_1 = +fimport$5($3 | 0, 72808, $1_1 + 12 | 0);
   fimport$6($1944($1_1, 12) | 0);
   $5_1 = (($4_1 << 2) + $0_1 | 0) + 4 | 0;
   $2_1 = Math_fround(3402823466385288598117041.0e14);
   label$2 : {
    if ($6_1 >= 3402823466385288598117041.0e14) {
     break label$2
    }
    $2_1 = Math_fround(-3402823466385288598117041.0e14);
    if ($6_1 <= -3402823466385288598117041.0e14) {
     break label$2
    }
    $2_1 = Math_fround($6_1);
   }
   $1986($5_1, 0, $2_1);
   fimport$4($3 | 0);
   $4_1 = $4_1 + 1 | 0;
   if (($4_1 | 0) != 2) {
    continue
   }
   break;
  };
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1513($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53632);
  while (1) {
   $1_1 = $1944($0_1, 12);
   $1986($2_1, 8, $1963((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72796, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 2) {
    continue
   }
   break;
  };
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1514($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53632);
  while (1) {
   $1_1 = $1944($0_1, 12);
   $1986($2_1, 8, $1963((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72796, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 2) {
    continue
   }
   break;
  };
  $1756($0_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1515($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  while (1) {
   $1_1 = $1944($0_1, 12);
   $1986($2_1, 8, $1963((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72796, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 2) {
    continue
   }
   break;
  };
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1516($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = Math_fround(0), $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0.0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  while (1) {
   $3 = $1944($1944($0_1, 16), 0);
   $1973($1_1, 0, $4_1);
   $5_1 = fimport$1(72760, $1_1 | 0) | 0;
   $3 = fimport$7($3 | 0, $5_1 | 0) | 0;
   fimport$4($5_1 | 0);
   $6_1 = +fimport$5($3 | 0, 72808, $1_1 + 12 | 0);
   fimport$6($1944($1_1, 12) | 0);
   $5_1 = (($4_1 << 2) + $0_1 | 0) + 4 | 0;
   $2_1 = Math_fround(3402823466385288598117041.0e14);
   label$2 : {
    if ($6_1 >= 3402823466385288598117041.0e14) {
     break label$2
    }
    $2_1 = Math_fround(-3402823466385288598117041.0e14);
    if ($6_1 <= -3402823466385288598117041.0e14) {
     break label$2
    }
    $2_1 = Math_fround($6_1);
   }
   $1986($5_1, 0, $2_1);
   fimport$4($3 | 0);
   $4_1 = $4_1 + 1 | 0;
   if (($4_1 | 0) != 3) {
    continue
   }
   break;
  };
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1517($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53688);
  while (1) {
   $1_1 = $1944($0_1, 16);
   $1986($2_1, 8, $1963((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72796, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 3) {
    continue
   }
   break;
  };
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1518($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53688);
  while (1) {
   $1_1 = $1944($0_1, 16);
   $1986($2_1, 8, $1963((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72796, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 3) {
    continue
   }
   break;
  };
  $1756($0_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1519($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  while (1) {
   $1_1 = $1944($0_1, 16);
   $1986($2_1, 8, $1963((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72796, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 3) {
    continue
   }
   break;
  };
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1520($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = Math_fround(0), $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0.0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  while (1) {
   $3 = $1944($1944($0_1, 20), 0);
   $1973($1_1, 0, $4_1);
   $5_1 = fimport$1(72760, $1_1 | 0) | 0;
   $3 = fimport$7($3 | 0, $5_1 | 0) | 0;
   fimport$4($5_1 | 0);
   $6_1 = +fimport$5($3 | 0, 72808, $1_1 + 12 | 0);
   fimport$6($1944($1_1, 12) | 0);
   $5_1 = (($4_1 << 2) + $0_1 | 0) + 4 | 0;
   $2_1 = Math_fround(3402823466385288598117041.0e14);
   label$2 : {
    if ($6_1 >= 3402823466385288598117041.0e14) {
     break label$2
    }
    $2_1 = Math_fround(-3402823466385288598117041.0e14);
    if ($6_1 <= -3402823466385288598117041.0e14) {
     break label$2
    }
    $2_1 = Math_fround($6_1);
   }
   $1986($5_1, 0, $2_1);
   fimport$4($3 | 0);
   $4_1 = $4_1 + 1 | 0;
   if (($4_1 | 0) != 4) {
    continue
   }
   break;
  };
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1521($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53744);
  while (1) {
   $1_1 = $1944($0_1, 20);
   $1986($2_1, 8, $1963((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72796, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 4) {
    continue
   }
   break;
  };
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1522($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53744);
  while (1) {
   $1_1 = $1944($0_1, 20);
   $1986($2_1, 8, $1963((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72796, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 4) {
    continue
   }
   break;
  };
  $1756($0_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1523($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  while (1) {
   $1_1 = $1944($0_1, 20);
   $1986($2_1, 8, $1963((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72796, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 4) {
    continue
   }
   break;
  };
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1524($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0.0, $6_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  while (1) {
   $3 = $1944($1944($0_1, 12), 0);
   $1973($1_1, 0, $4_1);
   $2_1 = fimport$1(72760, $1_1 | 0) | 0;
   $3 = fimport$7($3 | 0, $2_1 | 0) | 0;
   fimport$4($2_1 | 0);
   $5_1 = +fimport$5($3 | 0, 72724, $1_1 + 12 | 0);
   fimport$6($1944($1_1, 12) | 0);
   $6_1 = (($4_1 << 2) + $0_1 | 0) + 4 | 0;
   if (Math_abs($5_1) < 2147483648.0) {
    $2_1 = ~~$5_1
   } else {
    $2_1 = -2147483648
   }
   $1973($6_1, 0, $2_1);
   fimport$4($3 | 0);
   $4_1 = $4_1 + 1 | 0;
   if (($4_1 | 0) != 2) {
    continue
   }
   break;
  };
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1525($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53896);
  while (1) {
   $1_1 = $1944($0_1, 12);
   $1973($2_1, 8, $1944((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72724, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 2) {
    continue
   }
   break;
  };
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1526($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53896);
  while (1) {
   $1_1 = $1944($0_1, 12);
   $1973($2_1, 8, $1944((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72724, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 2) {
    continue
   }
   break;
  };
  $1756($0_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1527($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  while (1) {
   $1_1 = $1944($0_1, 12);
   $1973($2_1, 8, $1944((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72724, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 2) {
    continue
   }
   break;
  };
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1528($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0.0, $6_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  while (1) {
   $3 = $1944($1944($0_1, 16), 0);
   $1973($1_1, 0, $4_1);
   $2_1 = fimport$1(72760, $1_1 | 0) | 0;
   $3 = fimport$7($3 | 0, $2_1 | 0) | 0;
   fimport$4($2_1 | 0);
   $5_1 = +fimport$5($3 | 0, 72724, $1_1 + 12 | 0);
   fimport$6($1944($1_1, 12) | 0);
   $6_1 = (($4_1 << 2) + $0_1 | 0) + 4 | 0;
   if (Math_abs($5_1) < 2147483648.0) {
    $2_1 = ~~$5_1
   } else {
    $2_1 = -2147483648
   }
   $1973($6_1, 0, $2_1);
   fimport$4($3 | 0);
   $4_1 = $4_1 + 1 | 0;
   if (($4_1 | 0) != 3) {
    continue
   }
   break;
  };
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1529($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53952);
  while (1) {
   $1_1 = $1944($0_1, 16);
   $1973($2_1, 8, $1944((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72724, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 3) {
    continue
   }
   break;
  };
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1530($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 53952);
  while (1) {
   $1_1 = $1944($0_1, 16);
   $1973($2_1, 8, $1944((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72724, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 3) {
    continue
   }
   break;
  };
  $1756($0_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1531($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  while (1) {
   $1_1 = $1944($0_1, 16);
   $1973($2_1, 8, $1944((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72724, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 3) {
    continue
   }
   break;
  };
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1532($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0.0, $6_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  while (1) {
   $3 = $1944($1944($0_1, 20), 0);
   $1973($1_1, 0, $4_1);
   $2_1 = fimport$1(72760, $1_1 | 0) | 0;
   $3 = fimport$7($3 | 0, $2_1 | 0) | 0;
   fimport$4($2_1 | 0);
   $5_1 = +fimport$5($3 | 0, 72724, $1_1 + 12 | 0);
   fimport$6($1944($1_1, 12) | 0);
   $6_1 = (($4_1 << 2) + $0_1 | 0) + 4 | 0;
   if (Math_abs($5_1) < 2147483648.0) {
    $2_1 = ~~$5_1
   } else {
    $2_1 = -2147483648
   }
   $1973($6_1, 0, $2_1);
   fimport$4($3 | 0);
   $4_1 = $4_1 + 1 | 0;
   if (($4_1 | 0) != 4) {
    continue
   }
   break;
  };
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1533($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 54008);
  while (1) {
   $1_1 = $1944($0_1, 20);
   $1973($2_1, 8, $1944((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72724, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 4) {
    continue
   }
   break;
  };
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1534($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 54008);
  while (1) {
   $1_1 = $1944($0_1, 20);
   $1973($2_1, 8, $1944((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72724, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 4) {
    continue
   }
   break;
  };
  $1756($0_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1535($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  while (1) {
   $1_1 = $1944($0_1, 20);
   $1973($2_1, 8, $1944((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
   $4_1 = $2_1 + 8 | 0;
   $5_1 = fimport$1(72724, $4_1 | 0) | 0;
   $1_1 = $1944($1_1, 0);
   $1973($2_1, 8, $3);
   $6_1 = $1_1;
   $1_1 = fimport$1(72760, $4_1 | 0) | 0;
   fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
   fimport$4($1_1 | 0);
   fimport$4($5_1 | 0);
   $3 = $3 + 1 | 0;
   if (($3 | 0) != 4) {
    continue
   }
   break;
  };
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1536($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0.0, $6_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($0_1, 12, $1_1);
  $1973($0_1, 8, 0);
  $1982($0_1, 0, 0, 0);
  $2_1 = $1944($1_1, 0);
  $1_1 = fimport$2(8624) | 0;
  $4_1 = fimport$7($2_1 | 0, $1_1 | 0) | 0;
  fimport$4($1_1 | 0);
  $5_1 = +fimport$5($4_1 | 0, 72760, $3 + 8 | 0);
  fimport$6($1944($3, 8) | 0);
  $1_1 = $1944($0_1, 4);
  $6_1 = $1944($0_1, 0);
  $2_1 = $1_1 - $6_1 | 0;
  if ($5_1 < 4294967296.0 & $5_1 >= 0.0) {
   $1_1 = ~~$5_1 >>> 0
  } else {
   $1_1 = 0
  }
  label$3 : {
   if ($1_1 >>> 0 > $2_1 >>> 0) {
    $1070($0_1, $1_1 - $2_1 | 0);
    break label$3;
   }
   if ($1_1 >>> 0 >= $2_1 >>> 0) {
    break label$3
   }
   $1973($0_1, 4, $1_1 + $6_1 | 0);
  }
  fimport$4($4_1 | 0);
  $1_1 = $1944($0_1, 4);
  $2_1 = $1944($0_1, 0);
  $1973($3, 12, $2_1);
  $1973($3, 8, $1_1 - $2_1 | 0);
  $1_1 = fimport$1(54144, $3 + 8 | 0) | 0;
  $2_1 = $1944($0_1, 12);
  if (!($1937(0, 95820) & 1)) {
   $4_1 = fimport$17(2, 51992) | 0;
   $1968(0, 95820, 1);
   $1973(0, 95816, $4_1);
  }
  $4_1 = $1944(0, 95816);
  fimport$10($1944($2_1, 0) | 0);
  $1973($3, 8, $1944($2_1, 0));
  fimport$18($4_1 | 0, $1_1 | 0, 3559, $3 + 8 | 0);
  fimport$4($1_1 | 0);
  global$0 = $3 + 16 | 0;
  return $0_1;
 }
 
 function $1537($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0.0, $6_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($0_1, 12, $1_1);
  $1973($0_1, 8, 0);
  $1982($0_1, 0, 0, 0);
  $2_1 = $1944($1_1, 0);
  $1_1 = fimport$2(8624) | 0;
  $4_1 = fimport$7($2_1 | 0, $1_1 | 0) | 0;
  fimport$4($1_1 | 0);
  $5_1 = +fimport$5($4_1 | 0, 72760, $3 + 8 | 0);
  fimport$6($1944($3, 8) | 0);
  $1_1 = $1944($0_1, 4);
  $6_1 = $1944($0_1, 0);
  $2_1 = $1_1 - $6_1 | 0;
  if ($5_1 < 4294967296.0 & $5_1 >= 0.0) {
   $1_1 = ~~$5_1 >>> 0
  } else {
   $1_1 = 0
  }
  label$3 : {
   if ($1_1 >>> 0 > $2_1 >>> 0) {
    $1070($0_1, $1_1 - $2_1 | 0);
    break label$3;
   }
   if ($1_1 >>> 0 >= $2_1 >>> 0) {
    break label$3
   }
   $1973($0_1, 4, $1_1 + $6_1 | 0);
  }
  fimport$4($4_1 | 0);
  $1_1 = $1944($0_1, 4);
  $2_1 = $1944($0_1, 0);
  $1973($3, 12, $2_1);
  $1973($3, 8, $1_1 - $2_1 | 0);
  $1_1 = fimport$1(51984, $3 + 8 | 0) | 0;
  $2_1 = $1944($0_1, 12);
  if (!($1937(0, 95820) & 1)) {
   $4_1 = fimport$17(2, 51992) | 0;
   $1968(0, 95820, 1);
   $1973(0, 95816, $4_1);
  }
  $4_1 = $1944(0, 95816);
  fimport$10($1944($2_1, 0) | 0);
  $1973($3, 8, $1944($2_1, 0));
  fimport$18($4_1 | 0, $1_1 | 0, 3559, $3 + 8 | 0);
  fimport$4($1_1 | 0);
  global$0 = $3 + 16 | 0;
  return $0_1;
 }
 
 function $1538($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0.0, $6_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($0_1, 12, $1_1);
  $1973($0_1, 8, 0);
  $1982($0_1, 0, 0, 0);
  $2_1 = $1944($1_1, 0);
  $1_1 = fimport$2(8624) | 0;
  $4_1 = fimport$7($2_1 | 0, $1_1 | 0) | 0;
  fimport$4($1_1 | 0);
  $5_1 = +fimport$5($4_1 | 0, 72760, $3 + 8 | 0);
  fimport$6($1944($3, 8) | 0);
  $1_1 = $1944($0_1, 4);
  $6_1 = $1944($0_1, 0);
  $2_1 = $1_1 - $6_1 >> 1;
  if ($5_1 < 4294967296.0 & $5_1 >= 0.0) {
   $1_1 = ~~$5_1 >>> 0
  } else {
   $1_1 = 0
  }
  label$3 : {
   if ($1_1 >>> 0 > $2_1 >>> 0) {
    $1545($0_1, $1_1 - $2_1 | 0);
    break label$3;
   }
   if ($1_1 >>> 0 >= $2_1 >>> 0) {
    break label$3
   }
   $1973($0_1, 4, ($1_1 << 1) + $6_1 | 0);
  }
  fimport$4($4_1 | 0);
  $1_1 = $1944($0_1, 4);
  $2_1 = $1944($0_1, 0);
  $1973($3, 12, $2_1);
  $1973($3, 8, $1_1 - $2_1 >> 1);
  $1_1 = fimport$1(54304, $3 + 8 | 0) | 0;
  $2_1 = $1944($0_1, 12);
  if (!($1937(0, 95820) & 1)) {
   $4_1 = fimport$17(2, 51992) | 0;
   $1968(0, 95820, 1);
   $1973(0, 95816, $4_1);
  }
  $4_1 = $1944(0, 95816);
  fimport$10($1944($2_1, 0) | 0);
  $1973($3, 8, $1944($2_1, 0));
  fimport$18($4_1 | 0, $1_1 | 0, 3559, $3 + 8 | 0);
  fimport$4($1_1 | 0);
  global$0 = $3 + 16 | 0;
  return $0_1;
 }
 
 function $1539($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0.0, $6_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($0_1, 12, $1_1);
  $1973($0_1, 8, 0);
  $1982($0_1, 0, 0, 0);
  $2_1 = $1944($1_1, 0);
  $1_1 = fimport$2(8624) | 0;
  $4_1 = fimport$7($2_1 | 0, $1_1 | 0) | 0;
  fimport$4($1_1 | 0);
  $5_1 = +fimport$5($4_1 | 0, 72760, $3 + 8 | 0);
  fimport$6($1944($3, 8) | 0);
  $1_1 = $1944($0_1, 4);
  $6_1 = $1944($0_1, 0);
  $2_1 = $1_1 - $6_1 >> 1;
  if ($5_1 < 4294967296.0 & $5_1 >= 0.0) {
   $1_1 = ~~$5_1 >>> 0
  } else {
   $1_1 = 0
  }
  label$3 : {
   if ($1_1 >>> 0 > $2_1 >>> 0) {
    $1545($0_1, $1_1 - $2_1 | 0);
    break label$3;
   }
   if ($1_1 >>> 0 >= $2_1 >>> 0) {
    break label$3
   }
   $1973($0_1, 4, ($1_1 << 1) + $6_1 | 0);
  }
  fimport$4($4_1 | 0);
  $1_1 = $1944($0_1, 4);
  $2_1 = $1944($0_1, 0);
  $1973($3, 12, $2_1);
  $1973($3, 8, $1_1 - $2_1 >> 1);
  $1_1 = fimport$1(54404, $3 + 8 | 0) | 0;
  $2_1 = $1944($0_1, 12);
  if (!($1937(0, 95820) & 1)) {
   $4_1 = fimport$17(2, 51992) | 0;
   $1968(0, 95820, 1);
   $1973(0, 95816, $4_1);
  }
  $4_1 = $1944(0, 95816);
  fimport$10($1944($2_1, 0) | 0);
  $1973($3, 8, $1944($2_1, 0));
  fimport$18($4_1 | 0, $1_1 | 0, 3559, $3 + 8 | 0);
  fimport$4($1_1 | 0);
  global$0 = $3 + 16 | 0;
  return $0_1;
 }
 
 function $1540($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0.0, $6_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($0_1, 12, $1_1);
  $1973($0_1, 8, 0);
  $1982($0_1, 0, 0, 0);
  $2_1 = $1944($1_1, 0);
  $1_1 = fimport$2(8624) | 0;
  $4_1 = fimport$7($2_1 | 0, $1_1 | 0) | 0;
  fimport$4($1_1 | 0);
  $5_1 = +fimport$5($4_1 | 0, 72760, $3 + 8 | 0);
  fimport$6($1944($3, 8) | 0);
  $1_1 = $1944($0_1, 4);
  $6_1 = $1944($0_1, 0);
  $2_1 = $1_1 - $6_1 >> 2;
  if ($5_1 < 4294967296.0 & $5_1 >= 0.0) {
   $1_1 = ~~$5_1 >>> 0
  } else {
   $1_1 = 0
  }
  label$3 : {
   if ($1_1 >>> 0 > $2_1 >>> 0) {
    $1547($0_1, $1_1 - $2_1 | 0);
    break label$3;
   }
   if ($1_1 >>> 0 >= $2_1 >>> 0) {
    break label$3
   }
   $1973($0_1, 4, ($1_1 << 2) + $6_1 | 0);
  }
  fimport$4($4_1 | 0);
  $1_1 = $1944($0_1, 4);
  $2_1 = $1944($0_1, 0);
  $1973($3, 12, $2_1);
  $1973($3, 8, $1_1 - $2_1 >> 2);
  $1_1 = fimport$1(54504, $3 + 8 | 0) | 0;
  $2_1 = $1944($0_1, 12);
  if (!($1937(0, 95820) & 1)) {
   $4_1 = fimport$17(2, 51992) | 0;
   $1968(0, 95820, 1);
   $1973(0, 95816, $4_1);
  }
  $4_1 = $1944(0, 95816);
  fimport$10($1944($2_1, 0) | 0);
  $1973($3, 8, $1944($2_1, 0));
  fimport$18($4_1 | 0, $1_1 | 0, 3559, $3 + 8 | 0);
  fimport$4($1_1 | 0);
  global$0 = $3 + 16 | 0;
  return $0_1;
 }
 
 function $1541($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0.0, $6_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($0_1, 12, $1_1);
  $1973($0_1, 8, 0);
  $1982($0_1, 0, 0, 0);
  $2_1 = $1944($1_1, 0);
  $1_1 = fimport$2(8624) | 0;
  $4_1 = fimport$7($2_1 | 0, $1_1 | 0) | 0;
  fimport$4($1_1 | 0);
  $5_1 = +fimport$5($4_1 | 0, 72760, $3 + 8 | 0);
  fimport$6($1944($3, 8) | 0);
  $1_1 = $1944($0_1, 4);
  $6_1 = $1944($0_1, 0);
  $2_1 = $1_1 - $6_1 >> 2;
  if ($5_1 < 4294967296.0 & $5_1 >= 0.0) {
   $1_1 = ~~$5_1 >>> 0
  } else {
   $1_1 = 0
  }
  label$3 : {
   if ($1_1 >>> 0 > $2_1 >>> 0) {
    $1547($0_1, $1_1 - $2_1 | 0);
    break label$3;
   }
   if ($1_1 >>> 0 >= $2_1 >>> 0) {
    break label$3
   }
   $1973($0_1, 4, ($1_1 << 2) + $6_1 | 0);
  }
  fimport$4($4_1 | 0);
  $1_1 = $1944($0_1, 4);
  $2_1 = $1944($0_1, 0);
  $1973($3, 12, $2_1);
  $1973($3, 8, $1_1 - $2_1 >> 2);
  $1_1 = fimport$1(54604, $3 + 8 | 0) | 0;
  $2_1 = $1944($0_1, 12);
  if (!($1937(0, 95820) & 1)) {
   $4_1 = fimport$17(2, 51992) | 0;
   $1968(0, 95820, 1);
   $1973(0, 95816, $4_1);
  }
  $4_1 = $1944(0, 95816);
  fimport$10($1944($2_1, 0) | 0);
  $1973($3, 8, $1944($2_1, 0));
  fimport$18($4_1 | 0, $1_1 | 0, 3559, $3 + 8 | 0);
  fimport$4($1_1 | 0);
  global$0 = $3 + 16 | 0;
  return $0_1;
 }
 
 function $1542($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0.0, $6_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($0_1, 12, $1_1);
  $1973($0_1, 8, 0);
  $1982($0_1, 0, 0, 0);
  $2_1 = $1944($1_1, 0);
  $1_1 = fimport$2(8624) | 0;
  $4_1 = fimport$7($2_1 | 0, $1_1 | 0) | 0;
  fimport$4($1_1 | 0);
  $5_1 = +fimport$5($4_1 | 0, 72760, $3 + 8 | 0);
  fimport$6($1944($3, 8) | 0);
  $1_1 = $1944($0_1, 4);
  $6_1 = $1944($0_1, 0);
  $2_1 = $1_1 - $6_1 >> 2;
  if ($5_1 < 4294967296.0 & $5_1 >= 0.0) {
   $1_1 = ~~$5_1 >>> 0
  } else {
   $1_1 = 0
  }
  label$3 : {
   if ($1_1 >>> 0 > $2_1 >>> 0) {
    $1547($0_1, $1_1 - $2_1 | 0);
    break label$3;
   }
   if ($1_1 >>> 0 >= $2_1 >>> 0) {
    break label$3
   }
   $1973($0_1, 4, ($1_1 << 2) + $6_1 | 0);
  }
  fimport$4($4_1 | 0);
  $1_1 = $1944($0_1, 4);
  $2_1 = $1944($0_1, 0);
  $1973($3, 12, $2_1);
  $1973($3, 8, $1_1 - $2_1 >> 2);
  $1_1 = fimport$1(54704, $3 + 8 | 0) | 0;
  $2_1 = $1944($0_1, 12);
  if (!($1937(0, 95820) & 1)) {
   $4_1 = fimport$17(2, 51992) | 0;
   $1968(0, 95820, 1);
   $1973(0, 95816, $4_1);
  }
  $4_1 = $1944(0, 95816);
  fimport$10($1944($2_1, 0) | 0);
  $1973($3, 8, $1944($2_1, 0));
  fimport$18($4_1 | 0, $1_1 | 0, 3559, $3 + 8 | 0);
  fimport$4($1_1 | 0);
  global$0 = $3 + 16 | 0;
  return $0_1;
 }
 
 function $1543($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0.0, $8 = 0, $9 = 0, $10_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $1973($0_1, 12, $1_1);
  $1973($0_1, 8, 0);
  $1982($0_1, 0, 0, 0);
  $2_1 = $1944($1_1, 0);
  $1_1 = fimport$2(8624) | 0;
  $8 = fimport$7($2_1 | 0, $1_1 | 0) | 0;
  fimport$4($1_1 | 0);
  $7_1 = +fimport$5($8 | 0, 72760, $5_1 + 8 | 0);
  fimport$6($1944($5_1, 8) | 0);
  $1_1 = $1944($0_1, 4);
  $3 = $1944($0_1, 0);
  $2_1 = $1_1 - $3 >> 3;
  $1_1 = $7_1 < 4294967296.0 & $7_1 >= 0.0 ? ~~$7_1 >>> 0 : 0;
  label$3 : {
   if ($2_1 >>> 0 < $1_1 >>> 0) {
    $1_1 = $1_1 - $2_1 | 0;
    $4_1 = $1944($0_1, 8);
    $2_1 = $1944($0_1, 4);
    if ($1_1 >>> 0 <= $4_1 - $2_1 >> 3 >>> 0) {
     if ($1_1) {
      $1_1 = $1_1 << 3;
      $2_1 = $1604($2_1, 0, $1_1) + $1_1 | 0;
     }
     $1973($0_1, 4, $2_1);
     break label$3;
    }
    label$4 : {
     $3 = $2_1;
     $2_1 = $1944($0_1, 0);
     $9 = $3 - $2_1 | 0;
     $6_1 = $9 >> 3;
     $3 = $6_1 + $1_1 | 0;
     if ($3 >>> 0 < 536870912) {
      $4_1 = $4_1 - $2_1 | 0;
      $10_1 = $4_1 >> 2;
      $3 = $4_1 >>> 0 >= 2147483640 ? 536870911 : $3 >>> 0 < $10_1 >>> 0 ? $10_1 : $3;
      label$6 : {
       if (!$3) {
        $3 = 0;
        $4_1 = 0;
        break label$6;
       }
       if ($3 >>> 0 >= 536870912) {
        break label$4
       }
       $4_1 = $1783($3 << 3);
      }
      $1_1 = $1_1 << 3;
      $6_1 = $1604($4_1 + ($6_1 << 3) | 0, 0, $1_1);
      $4_1 = $1603($4_1, $2_1, $9);
      $1973($0_1, 8, $4_1 + ($3 << 3) | 0);
      $1973($0_1, 4, $1_1 + $6_1 | 0);
      $1973($0_1, 0, $4_1);
      if ($2_1) {
       $1756($2_1)
      }
      break label$3;
     }
     $1071();
     wasm2js_trap();
    }
    $815();
    wasm2js_trap();
   }
   if ($1_1 >>> 0 >= $2_1 >>> 0) {
    break label$3
   }
   $1973($0_1, 4, ($1_1 << 3) + $3 | 0);
  }
  fimport$4($8 | 0);
  $1_1 = $1944($0_1, 4);
  $2_1 = $1944($0_1, 0);
  $1973($5_1, 12, $2_1);
  $1973($5_1, 8, $1_1 - $2_1 >> 3);
  $1_1 = fimport$1(54804, $5_1 + 8 | 0) | 0;
  $2_1 = $1944($0_1, 12);
  if (!($1937(0, 95820) & 1)) {
   $3 = fimport$17(2, 51992) | 0;
   $1968(0, 95820, 1);
   $1973(0, 95816, $3);
  }
  $3 = $1944(0, 95816);
  fimport$10($1944($2_1, 0) | 0);
  $1973($5_1, 8, $1944($2_1, 0));
  fimport$18($3 | 0, $1_1 | 0, 3559, $5_1 + 8 | 0);
  fimport$4($1_1 | 0);
  global$0 = $5_1 + 16 | 0;
  return $0_1;
 }
 
 function $1545($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = $1944($0_1, 8);
  $3 = $1944($0_1, 4);
  if ($1_1 >>> 0 <= $2_1 - $3 >> 1 >>> 0) {
   $2_1 = $0_1;
   if ($1_1) {
    $0_1 = $1_1 << 1;
    $3 = $1604($3, 0, $0_1) + $0_1 | 0;
   }
   $1973($2_1, 4, $3);
   return;
  }
  label$4 : {
   $4_1 = $3;
   $3 = $1944($0_1, 0);
   $6_1 = $4_1 - $3 | 0;
   $5_1 = $6_1 >> 1;
   $4_1 = $5_1 + $1_1 | 0;
   if (($4_1 | 0) >= 0) {
    $2_1 = $2_1 - $3 | 0;
    $4_1 = $2_1 >>> 0 >= 2147483646 ? 2147483647 : $2_1 >>> 0 > $4_1 >>> 0 ? $2_1 : $4_1;
    label$6 : {
     if (!$4_1) {
      $4_1 = 0;
      $2_1 = 0;
      break label$6;
     }
     if (($4_1 | 0) < 0) {
      break label$4
     }
     $2_1 = $1783($4_1 << 1);
    }
    $1_1 = $1_1 << 1;
    $5_1 = $1604($2_1 + ($5_1 << 1) | 0, 0, $1_1);
    $2_1 = $1603($2_1, $3, $6_1);
    $1973($0_1, 8, $2_1 + ($4_1 << 1) | 0);
    $1973($0_1, 4, $1_1 + $5_1 | 0);
    $1973($0_1, 0, $2_1);
    if ($3) {
     $1756($3)
    }
    return;
   }
   $1071();
   wasm2js_trap();
  }
  $815();
  wasm2js_trap();
 }
 
 function $1547($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $2_1 = $1944($0_1, 8);
  $3 = $1944($0_1, 4);
  if ($1_1 >>> 0 <= $2_1 - $3 >> 2 >>> 0) {
   $2_1 = $0_1;
   if ($1_1) {
    $0_1 = $1_1 << 2;
    $3 = $1604($3, 0, $0_1) + $0_1 | 0;
   }
   $1973($2_1, 4, $3);
   return;
  }
  label$4 : {
   $4_1 = $3;
   $3 = $1944($0_1, 0);
   $6_1 = $4_1 - $3 | 0;
   $5_1 = $6_1 >> 2;
   $4_1 = $5_1 + $1_1 | 0;
   if ($4_1 >>> 0 < 1073741824) {
    $2_1 = $2_1 - $3 | 0;
    $7_1 = $2_1 >> 1;
    $4_1 = $2_1 >>> 0 >= 2147483644 ? 1073741823 : $4_1 >>> 0 < $7_1 >>> 0 ? $7_1 : $4_1;
    label$6 : {
     if (!$4_1) {
      $4_1 = 0;
      $2_1 = 0;
      break label$6;
     }
     if ($4_1 >>> 0 >= 1073741824) {
      break label$4
     }
     $2_1 = $1783($4_1 << 2);
    }
    $1_1 = $1_1 << 2;
    $5_1 = $1604($2_1 + ($5_1 << 2) | 0, 0, $1_1);
    $2_1 = $1603($2_1, $3, $6_1);
    $1973($0_1, 8, $2_1 + ($4_1 << 2) | 0);
    $1973($0_1, 4, $1_1 + $5_1 | 0);
    $1973($0_1, 0, $2_1);
    if ($3) {
     $1756($3)
    }
    return;
   }
   $1071();
   wasm2js_trap();
  }
  $815();
  wasm2js_trap();
 }
 
 function $1552($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0.0, $3 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = +fimport$5($1944($1944($0_1, 8), 0) | 0, 72688, $1_1 + 12 | 0);
  fimport$6($1944($1_1, 12) | 0);
  if (Math_abs($2_1) < 2147483648.0) {
   $3 = ~~$2_1
  } else {
   $3 = -2147483648
  }
  $1968($0_1, 4, $3);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1553($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0.0, $3 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = +fimport$5($1944($1944($0_1, 8), 0) | 0, 72676, $1_1 + 12 | 0);
  fimport$6($1944($1_1, 12) | 0);
  if ($2_1 < 4294967296.0 & $2_1 >= 0.0) {
   $3 = ~~$2_1 >>> 0
  } else {
   $3 = 0
  }
  $1968($0_1, 4, $3);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1555($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0.0, $3 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = +fimport$5($1944($1944($0_1, 8), 0) | 0, 72700, $1_1 + 12 | 0);
  fimport$6($1944($1_1, 12) | 0);
  if (Math_abs($2_1) < 2147483648.0) {
   $3 = ~~$2_1
  } else {
   $3 = -2147483648
  }
  $1970($0_1, 4, $3);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1557($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0.0, $3 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = +fimport$5($1944($1944($0_1, 8), 0) | 0, 72712, $1_1 + 12 | 0);
  fimport$6($1944($1_1, 12) | 0);
  if ($2_1 < 4294967296.0 & $2_1 >= 0.0) {
   $3 = ~~$2_1 >>> 0
  } else {
   $3 = 0
  }
  $1970($0_1, 4, $3);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1559($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0.0, $3 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = +fimport$5($1944($1944($0_1, 8), 0) | 0, 72724, $1_1 + 12 | 0);
  fimport$6($1944($1_1, 12) | 0);
  if (Math_abs($2_1) < 2147483648.0) {
   $3 = ~~$2_1
  } else {
   $3 = -2147483648
  }
  $1973($0_1, 4, $3);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1561($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0.0, $3 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = +fimport$5($1944($1944($0_1, 8), 0) | 0, 72736, $1_1 + 12 | 0);
  fimport$6($1944($1_1, 12) | 0);
  if ($2_1 < 4294967296.0 & $2_1 >= 0.0) {
   $3 = ~~$2_1 >>> 0
  } else {
   $3 = 0
  }
  $1973($0_1, 4, $3);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1563($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = Math_fround(0), $2_1 = 0, $3 = 0.0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = +fimport$5($1944($1944($0_1, 8), 0) | 0, 72808, $2_1 + 12 | 0);
  fimport$6($1944($2_1, 12) | 0);
  $1_1 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($3 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $1_1 = Math_fround(-3402823466385288598117041.0e14);
   if ($3 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $1_1 = Math_fround($3);
  }
  $1986($0_1, 4, $1_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1565($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0.0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = +fimport$5($1944($1944($0_1, 16), 0) | 0, 72808, $1_1 + 12 | 0);
  fimport$6($1944($1_1, 12) | 0);
  $1990($0_1, 8, $2_1);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1566($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0.0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = $1944(0, 95660);
  $1973($1_1, 8, $0_1);
  $3 = $1_1 + 8 | 0;
  $0_1 = fimport$1(48936, $3 | 0) | 0;
  fimport$10($0_1 | 0);
  $1973($1_1, 8, $0_1);
  $2_1 = fimport$16($1944($2_1, 120) | 0, 1, 48472, $3 | 0) | 0;
  $4_1 = +fimport$5($2_1 | 0, 72724, $3 | 0);
  fimport$6($1944($1_1, 8) | 0);
  fimport$4($2_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $1_1 + 16 | 0;
  if (Math_abs($4_1) < 2147483648.0) {
   $0_1 = ~~$4_1
  } else {
   $0_1 = -2147483648
  }
  return $0_1 | 0;
 }
 
 function $1567($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0.0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = $1944(0, 95660);
  $1973($1_1, 8, $0_1);
  $3 = $1_1 + 8 | 0;
  $0_1 = fimport$1(48936, $3 | 0) | 0;
  fimport$10($0_1 | 0);
  $1973($1_1, 8, $0_1);
  $2_1 = fimport$16($1944($2_1, 124) | 0, 1, 48472, $3 | 0) | 0;
  $4_1 = +fimport$5($2_1 | 0, 72724, $3 | 0);
  fimport$6($1944($1_1, 8) | 0);
  fimport$4($2_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $1_1 + 16 | 0;
  if (Math_abs($4_1) < 2147483648.0) {
   $0_1 = ~~$4_1
  } else {
   $0_1 = -2147483648
  }
  return $0_1 | 0;
 }
 
 function $1569($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 55232);
  $1_1 = $1944($0_1, 16);
  $1990($2_1, 8, $1967($0_1, 8));
  $3 = $2_1 + 8 | 0;
  $4_1 = fimport$1(72808, $3 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 8, 0);
  $5_1 = $1_1;
  $1_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($5_1 | 0, $1_1 | 0, $4_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($4_1 | 0);
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1570($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 55232);
  $1_1 = $1944($0_1, 16);
  $1990($2_1, 8, $1967($0_1, 8));
  $3 = $2_1 + 8 | 0;
  $4_1 = fimport$1(72808, $3 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 8, 0);
  $5_1 = $1_1;
  $1_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($5_1 | 0, $1_1 | 0, $4_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($4_1 | 0);
  $1756($0_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1571($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0.0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = $1944($1944($0_1, 16), 0);
  $1973($1_1, 0, 0);
  $3 = fimport$1(72760, $1_1 | 0) | 0;
  $2_1 = fimport$7($2_1 | 0, $3 | 0) | 0;
  fimport$4($3 | 0);
  $4_1 = +fimport$5($2_1 | 0, 72808, $1_1 + 12 | 0);
  fimport$6($1944($1_1, 12) | 0);
  $1990($0_1, 8, $4_1);
  fimport$4($2_1 | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1572($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = $1944($0_1, 16);
  $1990($2_1, 8, $1967($0_1, 8));
  $3 = $2_1 + 8 | 0;
  $0_1 = fimport$1(72808, $3 | 0) | 0;
  $1_1 = $1944($1_1, 0);
  $1973($2_1, 8, 0);
  $4_1 = $1_1;
  $1_1 = fimport$1(72760, $3 | 0) | 0;
  fimport$3($4_1 | 0, $1_1 | 0, $0_1 | 0);
  fimport$4($1_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1574($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($0_1, 0, 55308);
  if (($1944($1944($0_1, 20), 0) | 0) != 2) {
   while (1) {
    $1_1 = $1944($0_1, 20);
    $1986($2_1, 8, $1963((($3 << 2) + $0_1 | 0) + 4 | 0, 0));
    $4_1 = $2_1 + 8 | 0;
    $5_1 = fimport$1(72796, $4_1 | 0) | 0;
    $1_1 = $1944($1_1, 0);
    $1973($2_1, 8, $3);
    $6_1 = $1_1;
    $1_1 = fimport$1(72760, $4_1 | 0) | 0;
    fimport$3($6_1 | 0, $1_1 | 0, $5_1 | 0);
    fimport$4($1_1 | 0);
    fimport$4($5_1 | 0);
    $3 = $3 + 1 | 0;
    if (($3 | 0) != 4) {
     continue
    }
    break;
   }
  }
  global$0 = $2_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1575($0_1) {
  $0_1 = $0_1 | 0;
  $1756($1574($0_1));
 }
 
 function $1577($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0.0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  label$1 : {
   $0_1 = 0;
   label$2 : {
    if (($1_1 | 0) < 0) {
     break label$2
    }
    $4_1 = $1944(0, 95660);
    $0_1 = 0;
    if (($1944($4_1, 132) | 0) < ($1_1 | 0)) {
     break label$2
    }
    $0_1 = $1944($4_1, 128);
    $1973($3, 0, $1_1);
    $1_1 = $0_1;
    $0_1 = fimport$1(72724, $3 | 0) | 0;
    $7_1 = fimport$7($1_1 | 0, $0_1 | 0) | 0;
    fimport$4($0_1 | 0);
    $5_1 = +fimport$5($7_1 | 0, 49072, $3 + 12 | 0);
    label$4 : {
     if ($5_1 < 4294967296.0 & $5_1 >= 0.0) {
      $6_1 = ~~$5_1 >>> 0;
      break label$4;
     }
     $6_1 = 0;
    }
    $1_1 = $1944($6_1, 0);
    if ($1_1 >>> 0 >= 2147483632) {
     break label$1
    }
    $9 = $1944($3, 12);
    label$6 : {
     if ($1_1 >>> 0 <= 10) {
      $1968($3, 11, $1_1);
      $0_1 = $3;
      break label$6;
     }
     $8 = ($1_1 | 15) + 1 | 0;
     $0_1 = $1783($8);
     $1973($3, 8, $8 | -2147483648);
     $1973($3, 0, $0_1);
     $1973($3, 4, $1_1);
    }
    if ($1_1) {
     $1602($0_1, $6_1 + 4 | 0, $1_1)
    }
    $1968($0_1 + $1_1 | 0, 0, 0);
    fimport$6($9 | 0);
    $0_1 = $4_1 + 136 | 0;
    if (($1936($4_1, 147) | 0) < 0) {
     $1756($1944($0_1, 0))
    }
    $1982($0_1, 0, $1959($3, 0), i64toi32_i32$HIGH_BITS);
    $1973($0_1 + 8 | 0, 0, $1944($3 + 8 | 0, 0));
    $1968($3, 11, 0);
    $1968($3, 0, 0);
    fimport$4($7_1 | 0);
    $1973($2_1, 0, (wasm2js_i32$0 = $1944($4_1, 136), wasm2js_i32$1 = $0_1, wasm2js_i32$2 = ($1936($4_1, 147) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
    $0_1 = 1;
   }
   global$0 = $3 + 16 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1578($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0.0, $10_1 = 0, $11_1 = 0, $12_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  label$1 : {
   $0_1 = 0;
   label$2 : {
    if (($1_1 | 0) < 0) {
     break label$2
    }
    $4_1 = $1944(0, 95660);
    $0_1 = 0;
    if (($1944($4_1, 156) | 0) < ($1_1 | 0)) {
     break label$2
    }
    $7_1 = $4_1 + 160 | 0;
    label$4 : {
     if (($1936($4_1, 171) | 0) < 0) {
      $1973($4_1 + 164 | 0, 0, 0);
      $0_1 = $1944($4_1, 160);
      break label$4;
     }
     $1968($4_1, 171, 0);
     $0_1 = $7_1;
    }
    $1968($0_1, 0, 0);
    $8 = fimport$21() | 0;
    $5_1 = $1944($4_1 + 164 | 0, 0);
    $6_1 = $1937($4_1, 171);
    $0_1 = $6_1 << 24 >> 24 < 0;
    $5_1 = $0_1 ? $5_1 : $6_1 & 127;
    $6_1 = $1755($5_1 + 4 | 0);
    $1973($6_1, 0, $5_1);
    $1602($6_1 + 4 | 0, (wasm2js_i32$0 = $1944($4_1, 160), wasm2js_i32$1 = $7_1, wasm2js_i32$2 = $0_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $5_1);
    $1973($3, 0, $6_1);
    $0_1 = fimport$1(49072, $3 | 0) | 0;
    $1973($3, 0, 0);
    $5_1 = fimport$1(72724, $3 | 0) | 0;
    fimport$3($8 | 0, $5_1 | 0, $0_1 | 0);
    fimport$4($5_1 | 0);
    fimport$4($0_1 | 0);
    $1973($3, 0, $1_1);
    $0_1 = fimport$1(72724, $3 | 0) | 0;
    fimport$10($1944($4_1, 152) | 0);
    $1973($3, 0, $1944($4_1, 152));
    fimport$10($0_1 | 0);
    $1973($3, 8, $0_1);
    fimport$10($8 | 0);
    $1973($3, 16, $8);
    $5_1 = fimport$16($1944($4_1, 148) | 0, 3, 53512, $3 | 0) | 0;
    fimport$4($0_1 | 0);
    $1973($3, 0, 0);
    $0_1 = fimport$1(72724, $3 | 0) | 0;
    $6_1 = fimport$7($8 | 0, $0_1 | 0) | 0;
    fimport$4($0_1 | 0);
    $9 = +fimport$5($6_1 | 0, 49072, $3 + 28 | 0);
    label$6 : {
     if ($9 < 4294967296.0 & $9 >= 0.0) {
      $10_1 = ~~$9 >>> 0;
      break label$6;
     }
     $10_1 = 0;
    }
    $1_1 = $1944($10_1, 0);
    if ($1_1 >>> 0 >= 2147483632) {
     break label$1
    }
    $12_1 = $1944($3, 28);
    label$8 : {
     if ($1_1 >>> 0 <= 10) {
      $1968($3, 11, $1_1);
      $0_1 = $3;
      break label$8;
     }
     $11_1 = ($1_1 | 15) + 1 | 0;
     $0_1 = $1783($11_1);
     $1973($3, 8, $11_1 | -2147483648);
     $1973($3, 0, $0_1);
     $1973($3, 4, $1_1);
    }
    if ($1_1) {
     $1602($0_1, $10_1 + 4 | 0, $1_1)
    }
    $1968($0_1 + $1_1 | 0, 0, 0);
    fimport$6($12_1 | 0);
    if (($1936($4_1, 171) | 0) < 0) {
     $1756($1944($7_1, 0))
    }
    $1982($7_1, 0, $1959($3, 0), i64toi32_i32$HIGH_BITS);
    $1973($7_1 + 8 | 0, 0, $1944($3 + 8 | 0, 0));
    $1968($3, 11, 0);
    $1968($3, 0, 0);
    fimport$4($6_1 | 0);
    $1973($2_1, 0, (wasm2js_i32$0 = $1944($4_1, 160), wasm2js_i32$1 = $7_1, wasm2js_i32$2 = ($1936($4_1, 171) | 0) < 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1));
    $9 = +fimport$5($5_1 | 0, 72652, $3 | 0);
    fimport$6($1944($3, 0) | 0);
    fimport$4($5_1 | 0);
    fimport$4($8 | 0);
    $0_1 = $9 != 0.0;
   }
   global$0 = $3 + 32 | 0;
   return $0_1 | 0;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1579($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = 0.0;
  $0_1 = global$0 - 16 | 0;
  global$0 = $0_1;
  $2_1 = $1944(0, 95660);
  $1973($0_1, 0, $1_1);
  $1_1 = fimport$1(72724, $0_1 | 0) | 0;
  fimport$10($1944($2_1, 84) | 0);
  $1973($0_1, 0, $1944($2_1, 84));
  fimport$10($1_1 | 0);
  $1973($0_1, 8, $1_1);
  $2_1 = fimport$16($1944($2_1, 80) | 0, 2, 55540, $0_1 | 0) | 0;
  $4_1 = +fimport$5($2_1 | 0, 72808, $0_1 | 0);
  fimport$6($1944($0_1, 0) | 0);
  fimport$4($2_1 | 0);
  fimport$4($1_1 | 0);
  global$0 = $0_1 + 16 | 0;
  $3 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($4_1 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $3 = Math_fround(-3402823466385288598117041.0e14);
   if ($4_1 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $3 = Math_fround($4_1);
  }
  return Math_fround($3);
 }
 
 function $1580($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = Math_fround(0), $4_1 = 0.0;
  $0_1 = global$0 - 16 | 0;
  global$0 = $0_1;
  $2_1 = $1944(0, 95660);
  $1973($0_1, 0, $1_1);
  $1_1 = fimport$1(72724, $0_1 | 0) | 0;
  fimport$10($1944($2_1, 92) | 0);
  $1973($0_1, 0, $1944($2_1, 92));
  fimport$10($1_1 | 0);
  $1973($0_1, 8, $1_1);
  $2_1 = fimport$16($1944($2_1, 88) | 0, 2, 55540, $0_1 | 0) | 0;
  $4_1 = +fimport$5($2_1 | 0, 72808, $0_1 | 0);
  fimport$6($1944($0_1, 0) | 0);
  fimport$4($2_1 | 0);
  fimport$4($1_1 | 0);
  global$0 = $0_1 + 16 | 0;
  $3 = Math_fround(3402823466385288598117041.0e14);
  label$1 : {
   if ($4_1 >= 3402823466385288598117041.0e14) {
    break label$1
   }
   $3 = Math_fround(-3402823466385288598117041.0e14);
   if ($4_1 <= -3402823466385288598117041.0e14) {
    break label$1
   }
   $3 = Math_fround($4_1);
  }
  return Math_fround($3);
 }
 
 function $1581($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = $1944($0_1, 12);
  $1983($1_1, 8, 0, 0);
  $1982($0_1, 4, $1960($763($2_1, $1_1 + 8 | 0), 0), i64toi32_i32$HIGH_BITS);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1582($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0, $3 = 0.0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = $1944(0, 95660);
  $1973($1_1, 0, $0_1);
  $0_1 = fimport$1(72760, $1_1 | 0) | 0;
  fimport$10($0_1 | 0);
  $1973($1_1, 0, $0_1);
  fimport$10($1944($2_1, 180) | 0);
  $1973($1_1, 8, $1944($2_1, 180));
  $2_1 = fimport$16($1944($2_1, 172) | 0, 2, 56336, $1_1 | 0) | 0;
  $3 = +fimport$5($2_1 | 0, 72620, $1_1 | 0);
  fimport$6($1944($1_1, 0) | 0);
  fimport$4($2_1 | 0);
  fimport$4($0_1 | 0);
  global$0 = $1_1 + 16 | 0;
  if ($3 < 4294967296.0 & $3 >= 0.0) {
   $0_1 = ~~$3 >>> 0
  } else {
   $0_1 = 0
  }
  return $0_1 | 0;
 }
 
 function $1583($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $2_1 = $1944(0, 95660);
  $1973($1_1, 0, $0_1);
  $0_1 = fimport$1(72620, $1_1 | 0) | 0;
  fimport$10($0_1 | 0);
  $1973($1_1, 0, $0_1);
  fimport$10($1944($2_1, 180) | 0);
  $1973($1_1, 8, $1944($2_1, 180));
  fimport$4(fimport$16($1944($2_1, 176) | 0, 2, 56336, $1_1 | 0) | 0);
  fimport$4($0_1 | 0);
  global$0 = $1_1 + 16 | 0;
 }
 
 function $1585($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0;
  $0_1 = $1944($0_1, 4);
  $1_1 = $1697($0_1) + 1 | 0;
  $2_1 = $1755($1_1);
  if ($2_1) {
   $0_1 = $1602($2_1, $0_1, $1_1)
  } else {
   $0_1 = 0
  }
  return $0_1 | 0;
 }
 
 function $1586() {
  var $0_1 = 0;
  $0_1 = $1944(0, 95888);
  if ($0_1) {
   while (1) {
    FUNCTION_TABLE[$1944($0_1, 0) | 0]();
    $0_1 = $1944($0_1, 4);
    if ($0_1) {
     continue
    }
    break;
   }
  }
 }
 
 function $1587($0_1) {
  $1973($0_1, 4, $1944(0, 95888));
  $1973(0, 95888, $0_1);
 }
 
 function $1588() {
  fimport$22(72608, 11876);
  fimport$23(72652, 8095, 1, 1, 0);
  fimport$24(72664, 6478, 1, -128, 127);
  fimport$24(72688, 6471, 1, -128, 127);
  fimport$24(72676, 6469, 1, 0, 255);
  fimport$24(72700, 2708, 2, -32768, 32767);
  fimport$24(72712, 2699, 2, 0, 65535);
  fimport$24(72724, 3028, 4, -2147483648, 2147483647);
  fimport$24(72736, 3019, 4, 0, -1);
  fimport$24(72748, 8849, 4, -2147483648, 2147483647);
  fimport$24(72760, 8840, 4, 0, -1);
  $1934(72772, 3885, -2147483648, 2147483647);
  $1934(72784, 3884, 0, -1);
  fimport$25(72796, 3811, 4);
  fimport$25(72808, 11336, 8);
  fimport$26(49072, 8880);
  fimport$26(56416, 15949);
  fimport$27(56488, 4, 8854);
  fimport$27(56564, 2, 8892);
  fimport$27(56640, 4, 8907);
  fimport$28(48496, 8329);
  fimport$29(49896, 0, 15880);
  fimport$29(54144, 0, 15982);
  fimport$29(51984, 1, 15910);
  fimport$29(54304, 2, 15512);
  fimport$29(54404, 3, 15543);
  fimport$29(54504, 4, 15583);
  fimport$29(54604, 5, 15612);
  fimport$29(56680, 4, 16039);
  fimport$29(56720, 5, 16069);
  fimport$29(54144, 0, 15714);
  fimport$29(51984, 1, 15681);
  fimport$29(54304, 2, 15780);
  fimport$29(54404, 3, 15746);
  fimport$29(54504, 4, 15847);
  fimport$29(54604, 5, 15813);
  fimport$29(54704, 6, 15650);
  fimport$29(54804, 7, 16108);
 }
 
 function $1590($0_1) {
  var $1_1 = Math_fround(0), $2_1 = 0, $3 = 0, $4_1 = Math_fround(0);
  $3 = (wasm2js_scratch_store_f32($0_1), wasm2js_scratch_load_i32(2));
  $2_1 = $3 & 2147483647;
  if ($2_1 >>> 0 >= 1065353216) {
   if (($2_1 | 0) == 1065353216) {
    return ($3 | 0) >= 0 ? Math_fround(0.0) : Math_fround(3.141592502593994)
   }
   return Math_fround(Math_fround(0.0) / Math_fround($0_1 - $0_1));
  }
  label$3 : {
   if ($2_1 >>> 0 <= 1056964607) {
    $1_1 = Math_fround(1.570796251296997);
    if ($2_1 >>> 0 < 847249409) {
     break label$3
    }
    return Math_fround(Math_fround(Math_fround(Math_fround(7.549789415861596e-08) - Math_fround($0_1 * $1591(Math_fround($0_1 * $0_1)))) - $0_1) + Math_fround(1.570796251296997));
   }
   if (($3 | 0) < 0) {
    $0_1 = Math_fround(Math_fround($0_1 + Math_fround(1.0)) * Math_fround(.5));
    $1_1 = Math_fround(Math_sqrt($0_1));
    $0_1 = Math_fround(Math_fround(1.570796251296997) - Math_fround($1_1 + Math_fround(Math_fround($1_1 * $1591($0_1)) + Math_fround(-7.549789415861596e-08))));
    return Math_fround($0_1 + $0_1);
   }
   $1_1 = Math_fround(Math_fround(Math_fround(1.0) - $0_1) * Math_fround(.5));
   $4_1 = Math_fround(Math_sqrt($1_1));
   $0_1 = (wasm2js_scratch_store_i32(2, (wasm2js_scratch_store_f32($4_1), wasm2js_scratch_load_i32(2)) & -4096), wasm2js_scratch_load_f32());
   $0_1 = Math_fround(Math_fround(Math_fround($4_1 * $1591($1_1)) + Math_fround(Math_fround($1_1 - Math_fround($0_1 * $0_1)) / Math_fround($4_1 + $0_1))) + $0_1);
   $1_1 = Math_fround($0_1 + $0_1);
  }
  return $1_1;
 }
 
 function $1591($0_1) {
  return Math_fround(Math_fround(Math_fround(Math_fround($0_1 * Math_fround(Math_fround($0_1 * Math_fround(-.008656363002955914)) + Math_fround(-.04274342209100723))) + Math_fround(.16666586697101593)) * $0_1) / Math_fround(Math_fround($0_1 * Math_fround(-.7066296339035034)) + Math_fround(1.0)));
 }
 
 function $1594($0_1) {
  var $1_1 = 0, $2_1 = Math_fround(0), $3 = 0, $4_1 = Math_fround(0), $5_1 = 0, $6_1 = Math_fround(0);
  $5_1 = (wasm2js_scratch_store_f32($0_1), wasm2js_scratch_load_i32(2));
  $1_1 = $5_1 & 2147483647;
  if ($1_1 >>> 0 >= 1283457024) {
   return ((wasm2js_scratch_store_f32($0_1), wasm2js_scratch_load_i32(2)) & 2147483647) >>> 0 > 2139095040 ? $0_1 : (wasm2js_scratch_store_i32(2, (wasm2js_scratch_store_f32($0_1), wasm2js_scratch_load_i32(2)) & -2147483648 | 1070141402), wasm2js_scratch_load_f32())
  }
  label$2 : {
   label$3 : {
    if ($1_1 >>> 0 <= 1054867455) {
     $3 = -1;
     if ($1_1 >>> 0 >= 964689920) {
      break label$3
     }
     break label$2;
    }
    $0_1 = Math_fround(Math_abs($0_1));
    if ($1_1 >>> 0 <= 1066926079) {
     if ($1_1 >>> 0 <= 1060110335) {
      $0_1 = Math_fround(Math_fround(Math_fround($0_1 + $0_1) + Math_fround(-1.0)) / Math_fround($0_1 + Math_fround(2.0)));
      $3 = 0;
      break label$3;
     }
     $0_1 = Math_fround(Math_fround($0_1 + Math_fround(-1.0)) / Math_fround($0_1 + Math_fround(1.0)));
     $3 = 1;
     break label$3;
    }
    if ($1_1 >>> 0 <= 1075576831) {
     $0_1 = Math_fround(Math_fround($0_1 + Math_fround(-1.5)) / Math_fround(Math_fround($0_1 * Math_fround(1.5)) + Math_fround(1.0)));
     $3 = 2;
     break label$3;
    }
    $0_1 = Math_fround(Math_fround(-1.0) / $0_1);
    $3 = 3;
   }
   $4_1 = Math_fround($0_1 * $0_1);
   $2_1 = Math_fround($4_1 * $4_1);
   $6_1 = Math_fround($2_1 * Math_fround(Math_fround($2_1 * Math_fround(-.106480173766613)) + Math_fround(-.19999158382415771)));
   $2_1 = Math_fround($4_1 * Math_fround(Math_fround($2_1 * Math_fround(Math_fround($2_1 * Math_fround(.06168760731816292)) + Math_fround(.14253635704517365))) + Math_fround(.333333283662796)));
   if ($1_1 >>> 0 <= 1054867455) {
    return Math_fround($0_1 - Math_fround($0_1 * Math_fround($6_1 + $2_1)))
   }
   $1_1 = $3 << 2;
   $0_1 = Math_fround($1963($1_1 + 56768 | 0, 0) - Math_fround(Math_fround(Math_fround($0_1 * Math_fround($6_1 + $2_1)) - $1963($1_1 + 56784 | 0, 0)) - $0_1));
   $0_1 = ($5_1 | 0) < 0 ? Math_fround(-$0_1) : $0_1;
  }
  return $0_1;
 }
 
 function $1597($0_1) {
  var $1_1 = 0.0;
  $0_1 = $0_1 * $0_1;
  $1_1 = $0_1 * $0_1;
  return Math_fround($0_1 * $1_1 * ($0_1 * 2.439044879627741e-05 + -.001388676377460993) + ($1_1 * .04166662332373906 + ($0_1 * -.499999997251031 + 1.0)));
 }
 
 function $1598($0_1) {
  var $1_1 = 0.0, $2_1 = 0.0;
  $1_1 = $0_1 * $0_1;
  $2_1 = $1_1 * $0_1;
  return Math_fround($2_1 * ($1_1 * $1_1) * ($1_1 * 2.718311493989822e-06 + -1.9839334836096632e-04) + ($2_1 * ($1_1 * .008333329385889463 + -.16666666641626524) + $0_1));
 }
 
 function $1600($0_1, $1_1) {
  var $2_1 = 0.0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0.0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0.0, $18_1 = 0, $19 = 0, $20_1 = 0, $21_1 = 0, $22_1 = 0, $23_1 = 0, $24 = 0;
  $14 = global$0 - 16 | 0;
  global$0 = $14;
  $18_1 = (wasm2js_scratch_store_f32($0_1), wasm2js_scratch_load_i32(2));
  $4_1 = $18_1 & 2147483647;
  label$1 : {
   if ($4_1 >>> 0 <= 1305022426) {
    $9 = +$0_1;
    $2_1 = $9 * .6366197723675814 + 6755399441055744.0 + -6755399441055744.0;
    $17_1 = $9 + $2_1 * -1.5707963109016418 + $2_1 * -1.5893254773528196e-08;
    $1990($1_1, 0, $17_1);
    $4_1 = Math_abs($2_1) < 2147483648.0 ? ~~$2_1 : -2147483648;
    if ($17_1 < -.7853981852531433) {
     $2_1 = $2_1 + -1.0;
     $1990($1_1, 0, $9 + $2_1 * -1.5707963109016418 + $2_1 * -1.5893254773528196e-08);
     $4_1 = $4_1 - 1 | 0;
     break label$1;
    }
    if (!($17_1 > .7853981852531433)) {
     break label$1
    }
    $2_1 = $2_1 + 1.0;
    $1990($1_1, 0, $9 + $2_1 * -1.5707963109016418 + $2_1 * -1.5893254773528196e-08);
    $4_1 = $4_1 + 1 | 0;
    break label$1;
   }
   if ($4_1 >>> 0 >= 2139095040) {
    $1990($1_1, 0, +Math_fround($0_1 - $0_1));
    $4_1 = 0;
    break label$1;
   }
   $3 = $4_1;
   $4_1 = ($4_1 >>> 23 | 0) - 150 | 0;
   $1990($14, 8, +(wasm2js_scratch_store_i32(2, $3 - ($4_1 << 23) | 0), wasm2js_scratch_load_f32()));
   $19 = $14 + 8 | 0;
   $6_1 = global$0 - 560 | 0;
   global$0 = $6_1;
   $3 = ($4_1 - 3 | 0) / 24 | 0;
   $15_1 = ($3 | 0) > 0 ? $3 : 0;
   $8 = $4_1 + Math_imul($15_1, -24) | 0;
   $11_1 = $1944(56800, 0);
   if (($11_1 | 0) >= 0) {
    $4_1 = $11_1 + 1 | 0;
    $3 = $15_1;
    while (1) {
     $10_1 = ($6_1 + 320 | 0) + ($5_1 << 3) | 0;
     if (($3 | 0) < 0) {
      $2_1 = 0.0
     } else {
      $2_1 = +($1944(($3 << 2) + 56816 | 0, 0) | 0)
     }
     $1990($10_1, 0, $2_1);
     $3 = $3 + 1 | 0;
     $5_1 = $5_1 + 1 | 0;
     if (($4_1 | 0) != ($5_1 | 0)) {
      continue
     }
     break;
    };
   }
   $10_1 = $8 - 24 | 0;
   $4_1 = 0;
   $5_1 = ($11_1 | 0) > 0 ? $11_1 : 0;
   while (1) {
    $3 = 0;
    $2_1 = 0.0;
    while (1) {
     $2_1 = $1967(($3 << 3) + $19 | 0, 0) * $1967(($6_1 + 320 | 0) + ($4_1 - $3 << 3) | 0, 0) + $2_1;
     $3 = $3 + 1 | 0;
     if (($3 | 0) != 1) {
      continue
     }
     break;
    };
    $1990(($4_1 << 3) + $6_1 | 0, 0, $2_1);
    $3 = ($4_1 | 0) == ($5_1 | 0);
    $4_1 = $4_1 + 1 | 0;
    if (!$3) {
     continue
    }
    break;
   };
   $23_1 = 47 - $8 | 0;
   $20_1 = 48 - $8 | 0;
   $24 = $8 - 25 | 0;
   $4_1 = $11_1;
   label$9 : {
    while (1) {
     $2_1 = $1967(($4_1 << 3) + $6_1 | 0, 0);
     $3 = 0;
     $5_1 = $4_1;
     $13 = ($4_1 | 0) <= 0;
     if (!$13) {
      while (1) {
       $12_1 = ($6_1 + 480 | 0) + ($3 << 2) | 0;
       $9 = $2_1 * 5.9604644775390625e-08;
       label$13 : {
        if (Math_abs($9) < 2147483648.0) {
         $7_1 = ~~$9;
         break label$13;
        }
        $7_1 = -2147483648;
       }
       $9 = +($7_1 | 0);
       $2_1 = $9 * -16777216.0 + $2_1;
       label$15 : {
        if (Math_abs($2_1) < 2147483648.0) {
         $7_1 = ~~$2_1;
         break label$15;
        }
        $7_1 = -2147483648;
       }
       $1973($12_1, 0, $7_1);
       $5_1 = $5_1 - 1 | 0;
       $2_1 = $1967(($5_1 << 3) + $6_1 | 0, 0) + $9;
       $3 = $3 + 1 | 0;
       if (($4_1 | 0) != ($3 | 0)) {
        continue
       }
       break;
      }
     }
     $2_1 = $1687($2_1, $10_1);
     $2_1 = $2_1 + Math_floor($2_1 * .125) * -8.0;
     label$17 : {
      if (Math_abs($2_1) < 2147483648.0) {
       $12_1 = ~~$2_1;
       break label$17;
      }
      $12_1 = -2147483648;
     }
     $2_1 = $2_1 - +($12_1 | 0);
     label$19 : {
      label$20 : {
       label$21 : {
        $21_1 = ($10_1 | 0) <= 0;
        label$22 : {
         if (!$21_1) {
          $5_1 = ($6_1 + ($4_1 << 2) | 0) + 476 | 0;
          $7_1 = $1944($5_1, 0);
          $3 = $7_1 >> $20_1;
          $16_1 = $5_1;
          $5_1 = $7_1 - ($3 << $20_1) | 0;
          $1973($16_1, 0, $5_1);
          $12_1 = $3 + $12_1 | 0;
          $7_1 = $5_1 >> $23_1;
          break label$22;
         }
         if ($10_1) {
          break label$21
         }
         $7_1 = $1944(($6_1 + ($4_1 << 2) | 0) + 476 | 0, 0) >> 23;
        }
        if (($7_1 | 0) <= 0) {
         break label$19
        }
        break label$20;
       }
       $7_1 = 2;
       if ($2_1 >= .5) {
        break label$20
       }
       $7_1 = 0;
       break label$19;
      }
      $3 = 0;
      $5_1 = 0;
      if (!$13) {
       while (1) {
        $16_1 = ($6_1 + 480 | 0) + ($3 << 2) | 0;
        $13 = $1944($16_1, 0);
        $22_1 = 16777215;
        label$26 : {
         label$27 : {
          if ($5_1) {
           break label$27
          }
          $22_1 = 16777216;
          if ($13) {
           break label$27
          }
          $5_1 = 0;
          break label$26;
         }
         $1973($16_1, 0, $22_1 - $13 | 0);
         $5_1 = 1;
        }
        $3 = $3 + 1 | 0;
        if (($4_1 | 0) != ($3 | 0)) {
         continue
        }
        break;
       }
      }
      label$28 : {
       if ($21_1) {
        break label$28
       }
       $3 = 8388607;
       label$29 : {
        switch ($24 | 0) {
        case 1:
         $3 = 4194303;
         break;
        case 0:
         break label$29;
        default:
         break label$28;
        };
       }
       $13 = ($6_1 + ($4_1 << 2) | 0) + 476 | 0;
       $1973($13, 0, $1944($13, 0) & $3);
      }
      $12_1 = $12_1 + 1 | 0;
      if (($7_1 | 0) != 2) {
       break label$19
      }
      $2_1 = 1.0 - $2_1;
      $7_1 = 2;
      if (!$5_1) {
       break label$19
      }
      $2_1 = $2_1 - $1687(1.0, $10_1);
     }
     if ($2_1 == 0.0) {
      $5_1 = 0;
      label$32 : {
       $3 = $4_1;
       if (($11_1 | 0) >= ($4_1 | 0)) {
        break label$32
       }
       while (1) {
        $3 = $3 - 1 | 0;
        $5_1 = $1944(($6_1 + 480 | 0) + ($3 << 2) | 0, 0) | $5_1;
        if (($3 | 0) > ($11_1 | 0)) {
         continue
        }
        break;
       };
       if (!$5_1) {
        break label$32
       }
       $8 = $10_1;
       while (1) {
        $8 = $8 - 24 | 0;
        $4_1 = $4_1 - 1 | 0;
        if (!$1944(($6_1 + 480 | 0) + ($4_1 << 2) | 0, 0)) {
         continue
        }
        break;
       };
       break label$9;
      }
      $3 = 1;
      while (1) {
       $5_1 = $3;
       $3 = $3 + 1 | 0;
       if (!$1944(($6_1 + 480 | 0) + ($11_1 - $5_1 << 2) | 0, 0)) {
        continue
       }
       break;
      };
      $5_1 = $4_1 + $5_1 | 0;
      while (1) {
       $4_1 = $4_1 + 1 | 0;
       $1990(($6_1 + 320 | 0) + ($4_1 << 3) | 0, 0, +($1944(($4_1 + $15_1 << 2) + 56816 | 0, 0) | 0));
       $3 = 0;
       $2_1 = 0.0;
       while (1) {
        $2_1 = $1967(($3 << 3) + $19 | 0, 0) * $1967(($6_1 + 320 | 0) + ($4_1 - $3 << 3) | 0, 0) + $2_1;
        $3 = $3 + 1 | 0;
        if (($3 | 0) != 1) {
         continue
        }
        break;
       };
       $1990(($4_1 << 3) + $6_1 | 0, 0, $2_1);
       if (($4_1 | 0) < ($5_1 | 0)) {
        continue
       }
       break;
      };
      $4_1 = $5_1;
      continue;
     }
     break;
    };
    $2_1 = $1687($2_1, 24 - $8 | 0);
    label$39 : {
     if ($2_1 >= 16777216.0) {
      $10_1 = ($6_1 + 480 | 0) + ($4_1 << 2) | 0;
      $9 = $2_1 * 5.9604644775390625e-08;
      label$41 : {
       if (Math_abs($9) < 2147483648.0) {
        $3 = ~~$9;
        break label$41;
       }
       $3 = -2147483648;
      }
      $2_1 = +($3 | 0) * -16777216.0 + $2_1;
      label$43 : {
       if (Math_abs($2_1) < 2147483648.0) {
        $5_1 = ~~$2_1;
        break label$43;
       }
       $5_1 = -2147483648;
      }
      $1973($10_1, 0, $5_1);
      $4_1 = $4_1 + 1 | 0;
      break label$39;
     }
     $3 = Math_abs($2_1) < 2147483648.0 ? ~~$2_1 : -2147483648;
     $8 = $10_1;
    }
    $1973(($6_1 + 480 | 0) + ($4_1 << 2) | 0, 0, $3);
   }
   $2_1 = $1687(1.0, $8);
   label$47 : {
    if (($4_1 | 0) < 0) {
     break label$47
    }
    $3 = $4_1;
    while (1) {
     $5_1 = $3;
     $1990(($3 << 3) + $6_1 | 0, 0, $2_1 * +($1944(($6_1 + 480 | 0) + ($3 << 2) | 0, 0) | 0));
     $3 = $3 - 1 | 0;
     $2_1 = $2_1 * 5.9604644775390625e-08;
     if ($5_1) {
      continue
     }
     break;
    };
    if (($4_1 | 0) < 0) {
     break label$47
    }
    $5_1 = $4_1;
    while (1) {
     $2_1 = 0.0;
     $3 = 0;
     $8 = $4_1 - $5_1 | 0;
     $10_1 = ($8 | 0) > ($11_1 | 0) ? $11_1 : $8;
     if (($10_1 | 0) >= 0) {
      while (1) {
       $2_1 = $1967(($3 << 3) + 59584 | 0, 0) * $1967(($3 + $5_1 << 3) + $6_1 | 0, 0) + $2_1;
       $15_1 = ($3 | 0) != ($10_1 | 0);
       $3 = $3 + 1 | 0;
       if ($15_1) {
        continue
       }
       break;
      }
     }
     $1990(($6_1 + 160 | 0) + ($8 << 3) | 0, 0, $2_1);
     $3 = ($5_1 | 0) > 0;
     $5_1 = $5_1 - 1 | 0;
     if ($3) {
      continue
     }
     break;
    };
   }
   $2_1 = 0.0;
   if (($4_1 | 0) >= 0) {
    while (1) {
     $3 = $4_1;
     $4_1 = $4_1 - 1 | 0;
     $2_1 = $2_1 + $1967(($6_1 + 160 | 0) + ($3 << 3) | 0, 0);
     if ($3) {
      continue
     }
     break;
    }
   }
   $1990($14, 0, $7_1 ? -$2_1 : $2_1);
   global$0 = $6_1 + 560 | 0;
   $4_1 = $12_1 & 7;
   $2_1 = $1967($14, 0);
   if (($18_1 | 0) < 0) {
    $1990($1_1, 0, -$2_1);
    $4_1 = 0 - $4_1 | 0;
    break label$1;
   }
   $1990($1_1, 0, $2_1);
  }
  global$0 = $14 + 16 | 0;
  return $4_1;
 }
 
 function $1601($0_1) {
  var $1_1 = Math_fround(0), $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0.0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $4_1 = (wasm2js_scratch_store_f32($0_1), wasm2js_scratch_load_i32(2));
  $3 = $4_1 & 2147483647;
  label$1 : {
   if ($3 >>> 0 <= 1061752794) {
    $1_1 = Math_fround(1.0);
    if ($3 >>> 0 < 964689920) {
     break label$1
    }
    $1_1 = $1597(+$0_1);
    break label$1;
   }
   if ($3 >>> 0 <= 1081824209) {
    if ($3 >>> 0 >= 1075235812) {
     $1_1 = Math_fround(-$1597((($4_1 | 0) < 0 ? 3.141592653589793 : -3.141592653589793) + +$0_1));
     break label$1;
    }
    $5_1 = +$0_1;
    if (($4_1 | 0) < 0) {
     $1_1 = $1598($5_1 + 1.5707963267948966);
     break label$1;
    }
    $1_1 = $1598(1.5707963267948966 - $5_1);
    break label$1;
   }
   if ($3 >>> 0 <= 1088565717) {
    if ($3 >>> 0 >= 1085271520) {
     $1_1 = $1597((($4_1 | 0) < 0 ? 6.283185307179586 : -6.283185307179586) + +$0_1);
     break label$1;
    }
    if (($4_1 | 0) < 0) {
     $1_1 = $1598(-4.71238898038469 - +$0_1);
     break label$1;
    }
    $1_1 = $1598(+$0_1 + -4.71238898038469);
    break label$1;
   }
   $1_1 = Math_fround($0_1 - $0_1);
   if ($3 >>> 0 >= 2139095040) {
    break label$1
   }
   label$10 : {
    switch ($1600($0_1, $2_1 + 8 | 0) & 3) {
    case 0:
     $1_1 = $1597($1967($2_1, 8));
     break label$1;
    case 1:
     $1_1 = $1598(-$1967($2_1, 8));
     break label$1;
    case 2:
     $1_1 = Math_fround(-$1597($1967($2_1, 8)));
     break label$1;
    default:
     break label$10;
    };
   }
   $1_1 = $1598($1967($2_1, 8));
  }
  $0_1 = $1_1;
  global$0 = $2_1 + 16 | 0;
  return $0_1;
 }
 
 function $1602($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0;
  if ($2_1 >>> 0 >= 512) {
   fimport$30($0_1 | 0, $1_1 | 0, $2_1 | 0);
   return $0_1;
  }
  $4_1 = $0_1 + $2_1 | 0;
  label$2 : {
   if (!(($0_1 ^ $1_1) & 3)) {
    label$4 : {
     if (!($0_1 & 3)) {
      $2_1 = $0_1;
      break label$4;
     }
     if (!$2_1) {
      $2_1 = $0_1;
      break label$4;
     }
     $2_1 = $0_1;
     while (1) {
      $1968($2_1, 0, $1937($1_1, 0));
      $1_1 = $1_1 + 1 | 0;
      $2_1 = $2_1 + 1 | 0;
      if (!($2_1 & 3)) {
       break label$4
      }
      if ($2_1 >>> 0 < $4_1 >>> 0) {
       continue
      }
      break;
     };
    }
    $3 = $4_1 & -4;
    label$8 : {
     if ($3 >>> 0 < 64) {
      break label$8
     }
     $5_1 = $3 + -64 | 0;
     if ($5_1 >>> 0 < $2_1 >>> 0) {
      break label$8
     }
     while (1) {
      $1973($2_1, 0, $1944($1_1, 0));
      $1973($2_1, 4, $1944($1_1, 4));
      $1973($2_1, 8, $1944($1_1, 8));
      $1973($2_1, 12, $1944($1_1, 12));
      $1973($2_1, 16, $1944($1_1, 16));
      $1973($2_1, 20, $1944($1_1, 20));
      $1973($2_1, 24, $1944($1_1, 24));
      $1973($2_1, 28, $1944($1_1, 28));
      $1973($2_1, 32, $1944($1_1, 32));
      $1973($2_1, 36, $1944($1_1, 36));
      $1973($2_1, 40, $1944($1_1, 40));
      $1973($2_1, 44, $1944($1_1, 44));
      $1973($2_1, 48, $1944($1_1, 48));
      $1973($2_1, 52, $1944($1_1, 52));
      $1973($2_1, 56, $1944($1_1, 56));
      $1973($2_1, 60, $1944($1_1, 60));
      $1_1 = $1_1 - -64 | 0;
      $2_1 = $2_1 - -64 | 0;
      if ($5_1 >>> 0 >= $2_1 >>> 0) {
       continue
      }
      break;
     };
    }
    if ($2_1 >>> 0 >= $3 >>> 0) {
     break label$2
    }
    while (1) {
     $1973($2_1, 0, $1944($1_1, 0));
     $1_1 = $1_1 + 4 | 0;
     $2_1 = $2_1 + 4 | 0;
     if ($3 >>> 0 > $2_1 >>> 0) {
      continue
     }
     break;
    };
    break label$2;
   }
   if ($4_1 >>> 0 < 4) {
    $2_1 = $0_1;
    break label$2;
   }
   $3 = $4_1 - 4 | 0;
   if ($0_1 >>> 0 > $3 >>> 0) {
    $2_1 = $0_1;
    break label$2;
   }
   $2_1 = $0_1;
   while (1) {
    $1968($2_1, 0, $1937($1_1, 0));
    $1968($2_1, 1, $1937($1_1, 1));
    $1968($2_1, 2, $1937($1_1, 2));
    $1968($2_1, 3, $1937($1_1, 3));
    $1_1 = $1_1 + 4 | 0;
    $2_1 = $2_1 + 4 | 0;
    if ($3 >>> 0 >= $2_1 >>> 0) {
     continue
    }
    break;
   };
  }
  if ($2_1 >>> 0 < $4_1 >>> 0) {
   while (1) {
    $1968($2_1, 0, $1937($1_1, 0));
    $1_1 = $1_1 + 1 | 0;
    $2_1 = $2_1 + 1 | 0;
    if (($4_1 | 0) != ($2_1 | 0)) {
     continue
    }
    break;
   }
  }
  return $0_1;
 }
 
 function $1603($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0;
  label$1 : {
   if (($0_1 | 0) == ($1_1 | 0)) {
    break label$1
   }
   $4_1 = $0_1 + $2_1 | 0;
   if ($1_1 - $4_1 >>> 0 <= 0 - ($2_1 << 1) >>> 0) {
    return $1602($0_1, $1_1, $2_1)
   }
   $3 = ($0_1 ^ $1_1) & 3;
   label$3 : {
    label$4 : {
     if ($0_1 >>> 0 < $1_1 >>> 0) {
      if ($3) {
       $3 = $0_1;
       break label$3;
      }
      if (!($0_1 & 3)) {
       $3 = $0_1;
       break label$4;
      }
      $3 = $0_1;
      while (1) {
       if (!$2_1) {
        break label$1
       }
       $1968($3, 0, $1937($1_1, 0));
       $1_1 = $1_1 + 1 | 0;
       $2_1 = $2_1 - 1 | 0;
       $3 = $3 + 1 | 0;
       if ($3 & 3) {
        continue
       }
       break;
      };
      break label$4;
     }
     label$9 : {
      if ($3) {
       break label$9
      }
      if ($4_1 & 3) {
       while (1) {
        if (!$2_1) {
         break label$1
        }
        $2_1 = $2_1 - 1 | 0;
        $3 = $2_1 + $0_1 | 0;
        $1968($3, 0, $1937($1_1 + $2_1 | 0, 0));
        if ($3 & 3) {
         continue
        }
        break;
       }
      }
      if ($2_1 >>> 0 <= 3) {
       break label$9
      }
      while (1) {
       $2_1 = $2_1 - 4 | 0;
       $1973($2_1 + $0_1 | 0, 0, $1944($1_1 + $2_1 | 0, 0));
       if ($2_1 >>> 0 > 3) {
        continue
       }
       break;
      };
     }
     if (!$2_1) {
      break label$1
     }
     while (1) {
      $2_1 = $2_1 - 1 | 0;
      $1968($2_1 + $0_1 | 0, 0, $1937($1_1 + $2_1 | 0, 0));
      if ($2_1) {
       continue
      }
      break;
     };
     break label$1;
    }
    if ($2_1 >>> 0 <= 3) {
     break label$3
    }
    while (1) {
     $1973($3, 0, $1944($1_1, 0));
     $1_1 = $1_1 + 4 | 0;
     $3 = $3 + 4 | 0;
     $2_1 = $2_1 - 4 | 0;
     if ($2_1 >>> 0 > 3) {
      continue
     }
     break;
    };
   }
   if (!$2_1) {
    break label$1
   }
   while (1) {
    $1968($3, 0, $1937($1_1, 0));
    $3 = $3 + 1 | 0;
    $1_1 = $1_1 + 1 | 0;
    $2_1 = $2_1 - 1 | 0;
    if ($2_1) {
     continue
    }
    break;
   };
  }
  return $0_1;
 }
 
 function $1604($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  label$1 : {
   if (!$2_1) {
    break label$1
   }
   $1968($0_1, 0, $1_1);
   $3 = $0_1 + $2_1 | 0;
   $1968($3 - 1 | 0, 0, $1_1);
   if ($2_1 >>> 0 < 3) {
    break label$1
   }
   $1968($0_1, 2, $1_1);
   $1968($0_1, 1, $1_1);
   $1968($3 - 3 | 0, 0, $1_1);
   $1968($3 - 2 | 0, 0, $1_1);
   if ($2_1 >>> 0 < 7) {
    break label$1
   }
   $1968($0_1, 3, $1_1);
   $1968($3 - 4 | 0, 0, $1_1);
   if ($2_1 >>> 0 < 9) {
    break label$1
   }
   $3 = 0 - $0_1 & 3;
   $4_1 = $3 + $0_1 | 0;
   $1_1 = Math_imul($1_1 & 255, 16843009);
   $1973($4_1, 0, $1_1);
   $3 = $2_1 - $3 & -4;
   $2_1 = $3 + $4_1 | 0;
   $1973($2_1 - 4 | 0, 0, $1_1);
   if ($3 >>> 0 < 9) {
    break label$1
   }
   $1973($4_1, 8, $1_1);
   $1973($4_1, 4, $1_1);
   $1973($2_1 - 8 | 0, 0, $1_1);
   $1973($2_1 - 12 | 0, 0, $1_1);
   if ($3 >>> 0 < 25) {
    break label$1
   }
   $1973($4_1, 24, $1_1);
   $1973($4_1, 20, $1_1);
   $1973($4_1, 16, $1_1);
   $1973($4_1, 12, $1_1);
   $1973($2_1 - 16 | 0, 0, $1_1);
   $1973($2_1 - 20 | 0, 0, $1_1);
   $1973($2_1 - 24 | 0, 0, $1_1);
   $1973($2_1 - 28 | 0, 0, $1_1);
   $6_1 = $4_1 & 4 | 24;
   $2_1 = $3 - $6_1 | 0;
   if ($2_1 >>> 0 < 32) {
    break label$1
   }
   $3 = __wasm_i64_mul($1_1, 0, 1, 1);
   $5_1 = i64toi32_i32$HIGH_BITS;
   $1_1 = $4_1 + $6_1 | 0;
   while (1) {
    $1983($1_1, 24, $3, $5_1);
    $1983($1_1, 16, $3, $5_1);
    $1983($1_1, 8, $3, $5_1);
    $1983($1_1, 0, $3, $5_1);
    $1_1 = $1_1 + 32 | 0;
    $2_1 = $2_1 - 32 | 0;
    if ($2_1 >>> 0 > 31) {
     continue
    }
    break;
   };
  }
  return $0_1;
 }
 
 function $1609($0_1) {
  var $1_1 = 0, $2_1 = 0;
  $1944($0_1, 76);
  $1610($0_1);
  FUNCTION_TABLE[$1944($0_1, 12) | 0]($0_1) | 0;
  if (!($1937($0_1, 0) & 1)) {
   $1_1 = $1944($0_1, 52);
   if ($1_1) {
    $1973($1_1, 56, $1944($0_1, 56))
   }
   $2_1 = $1944($0_1, 56);
   if ($2_1) {
    $1973($2_1, 52, $1_1)
   }
   if (($1944(95964, 0) | 0) == ($0_1 | 0)) {
    $1973(95964, 0, $2_1)
   }
   $1756($1944($0_1, 96));
   $1756($0_1);
  }
 }
 
 function $1610($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0;
  if (!$0_1) {
   if ($1944(0, 73408)) {
    $1_1 = $1610($1944(0, 73408))
   }
   if ($1944(0, 73560)) {
    $1_1 = $1610($1944(0, 73560)) | $1_1
   }
   $0_1 = $1944(95964, 0);
   if ($0_1) {
    while (1) {
     $1944($0_1, 76);
     if (($1944($0_1, 20) | 0) != ($1944($0_1, 28) | 0)) {
      $1_1 = $1610($0_1) | $1_1
     }
     $0_1 = $1944($0_1, 56);
     if ($0_1) {
      continue
     }
     break;
    }
   }
   return $1_1;
  }
  $3 = ($1944($0_1, 76) | 0) >= 0;
  label$10 : {
   label$12 : {
    if (($1944($0_1, 20) | 0) == ($1944($0_1, 28) | 0)) {
     break label$12
    }
    FUNCTION_TABLE[$1944($0_1, 36) | 0]($0_1, 0, 0) | 0;
    if ($1944($0_1, 20)) {
     break label$12
    }
    $1_1 = -1;
    break label$10;
   }
   $1_1 = $1944($0_1, 4);
   $2_1 = $1944($0_1, 8);
   if (($1_1 | 0) != ($2_1 | 0)) {
    $1_1 = $1_1 - $2_1 | 0;
    FUNCTION_TABLE[$1944($0_1, 40) | 0]($0_1, $1_1, $1_1 >> 31, 1) | 0;
   }
   $1_1 = 0;
   $1973($0_1, 28, 0);
   $1983($0_1, 16, 0, 0);
   $1982($0_1, 4, 0, 0);
   if (!$3) {
    break label$10
   }
  }
  return $1_1;
 }
 
 function $1612($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  label$1 : {
   $6_1 = (wasm2js_scratch_store_f32($1_1), wasm2js_scratch_load_i32(2));
   $3 = $6_1 << 1;
   label$2 : {
    if (!$3) {
     break label$2
    }
    $2_1 = (wasm2js_scratch_store_f32($1_1), wasm2js_scratch_load_i32(2));
    $7_1 = (wasm2js_scratch_store_f32($0_1), wasm2js_scratch_load_i32(2));
    $4_1 = $7_1 >>> 23 & 255;
    if (($4_1 | 0) == 255) {
     break label$2
    }
    if (($2_1 & 2147483647) >>> 0 < 2139095041) {
     break label$1
    }
   }
   $0_1 = Math_fround($0_1 * $1_1);
   return Math_fround($0_1 / $0_1);
  }
  $2_1 = $7_1 << 1;
  if ($3 >>> 0 >= $2_1 >>> 0) {
   return ($2_1 | 0) == ($3 | 0) ? Math_fround($0_1 * Math_fround(0.0)) : $0_1
  }
  $5_1 = $6_1 >>> 23 & 255;
  label$4 : {
   if (!$4_1) {
    $4_1 = 0;
    $2_1 = $7_1 << 9;
    if (($2_1 | 0) >= 0) {
     while (1) {
      $4_1 = $4_1 - 1 | 0;
      $2_1 = $2_1 << 1;
      if (($2_1 | 0) >= 0) {
       continue
      }
      break;
     }
    }
    $2_1 = $7_1 << 1 - $4_1;
    break label$4;
   }
   $2_1 = $7_1 & 8388607 | 8388608;
  }
  label$8 : {
   if (!$5_1) {
    $5_1 = 0;
    $3 = $6_1 << 9;
    if (($3 | 0) >= 0) {
     while (1) {
      $5_1 = $5_1 - 1 | 0;
      $3 = $3 << 1;
      if (($3 | 0) >= 0) {
       continue
      }
      break;
     }
    }
    $6_1 = $6_1 << 1 - $5_1;
    break label$8;
   }
   $6_1 = $6_1 & 8388607 | 8388608;
  }
  if (($4_1 | 0) > ($5_1 | 0)) {
   while (1) {
    label$14 : {
     $3 = $2_1 - $6_1 | 0;
     if (($3 | 0) < 0) {
      break label$14
     }
     $2_1 = $3;
     if ($2_1) {
      break label$14
     }
     return Math_fround($0_1 * Math_fround(0.0));
    }
    $2_1 = $2_1 << 1;
    $4_1 = $4_1 - 1 | 0;
    if (($4_1 | 0) > ($5_1 | 0)) {
     continue
    }
    break;
   };
   $4_1 = $5_1;
  }
  label$15 : {
   $3 = $2_1 - $6_1 | 0;
   if (($3 | 0) < 0) {
    break label$15
   }
   $2_1 = $3;
   if ($2_1) {
    break label$15
   }
   return Math_fround($0_1 * Math_fround(0.0));
  }
  label$16 : {
   if ($2_1 >>> 0 > 8388607) {
    $3 = $2_1;
    break label$16;
   }
   while (1) {
    $4_1 = $4_1 - 1 | 0;
    $5_1 = $2_1 >>> 0 < 4194304;
    $3 = $2_1 << 1;
    $2_1 = $3;
    if ($5_1) {
     continue
    }
    break;
   };
  }
  return wasm2js_scratch_store_i32(2, $7_1 & -2147483648 | (($4_1 | 0) > 0 ? $3 - 8388608 | $4_1 << 23 : $3 >>> 1 - $4_1 | 0)), wasm2js_scratch_load_f32();
 }
 
 function $1614() {
  return 95900;
 }
 
 function $1616($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  var $4_1 = 0;
  $4_1 = $1944($0_1, 60);
  $0_1 = global$0 - 16 | 0;
  global$0 = $0_1;
  $1_1 = $1752(fimport$40($4_1 | 0, $1_1 | 0, $2_1 | 0, $3 & 255, $0_1 + 8 | 0) | 0);
  $2_1 = $1960($0_1, 8);
  global$0 = $0_1 + 16 | 0;
  i64toi32_i32$HIGH_BITS = $1_1 ? -1 : i64toi32_i32$HIGH_BITS;
  return ($1_1 ? -1 : $2_1) | 0;
 }
 
 function $1617($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $4_1 = $1944($0_1, 28);
  $1973($3, 16, $4_1);
  $5_1 = $1944($0_1, 20);
  $1973($3, 28, $2_1);
  $1973($3, 24, $1_1);
  $1_1 = $5_1 - $4_1 | 0;
  $1973($3, 20, $1_1);
  $5_1 = $1_1 + $2_1 | 0;
  $1_1 = $3 + 16 | 0;
  $8 = 2;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      if ($1752(fimport$34($1944($0_1, 60) | 0, $1_1 | 0, 2, $3 + 12 | 0) | 0)) {
       $4_1 = $1_1;
       break label$4;
      }
      while (1) {
       $6_1 = $1944($3, 12);
       if (($6_1 | 0) == ($5_1 | 0)) {
        break label$3
       }
       if (($6_1 | 0) < 0) {
        $4_1 = $1_1;
        break label$2;
       }
       $7_1 = $1944($1_1, 4);
       $9 = $7_1 >>> 0 < $6_1 >>> 0;
       $4_1 = ($9 << 3) + $1_1 | 0;
       $7_1 = $6_1 - ($9 ? $7_1 : 0) | 0;
       $1973($4_1, 0, $1944($4_1, 0) + $7_1 | 0);
       $1_1 = ($9 ? 12 : 4) + $1_1 | 0;
       $1973($1_1, 0, $1944($1_1, 0) - $7_1 | 0);
       $5_1 = $5_1 - $6_1 | 0;
       $1_1 = $4_1;
       $8 = $8 - $9 | 0;
       if (!$1752(fimport$34($1944($0_1, 60) | 0, $1_1 | 0, $8 | 0, $3 + 12 | 0) | 0)) {
        continue
       }
       break;
      };
     }
     if (($5_1 | 0) != -1) {
      break label$2
     }
    }
    $1_1 = $1944($0_1, 44);
    $1973($0_1, 28, $1_1);
    $1973($0_1, 20, $1_1);
    $1973($0_1, 16, $1944($0_1, 48) + $1_1 | 0);
    $1_1 = $2_1;
    break label$1;
   }
   $1973($0_1, 28, 0);
   $1983($0_1, 16, 0, 0);
   $1973($0_1, 0, $1944($0_1, 0) | 32);
   $1_1 = 0;
   if (($8 | 0) == 2) {
    break label$1
   }
   $1_1 = $2_1 - $1944($4_1, 4) | 0;
  }
  global$0 = $3 + 32 | 0;
  return $1_1 | 0;
 }
 
 function $1618($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $4_1 = global$0 - 32 | 0;
  global$0 = $4_1;
  $1973($4_1, 16, $1_1);
  $3 = $1944($0_1, 48);
  $1973($4_1, 20, $2_1 - (($3 | 0) != 0) | 0);
  $6_1 = $1944($0_1, 44);
  $1973($4_1, 28, $3);
  $1973($4_1, 24, $6_1);
  $3 = 32;
  label$1 : {
   label$2 : {
    if (!$1752(fimport$35($1944($0_1, 60) | 0, $4_1 + 16 | 0, 2, $4_1 + 12 | 0) | 0)) {
     $3 = $1944($4_1, 12);
     if (($3 | 0) > 0) {
      break label$2
     }
     $3 = $3 ? 32 : 16;
    }
    $1973($0_1, 0, $3 | $1944($0_1, 0));
    break label$1;
   }
   $5_1 = $3;
   $6_1 = $1944($4_1, 20);
   if ($6_1 >>> 0 >= $3 >>> 0) {
    break label$1
   }
   $5_1 = $1944($0_1, 44);
   $1973($0_1, 4, $5_1);
   $1973($0_1, 8, $5_1 + ($3 - $6_1 | 0) | 0);
   if ($1944($0_1, 48)) {
    $1973($0_1, 4, $5_1 + 1 | 0);
    $1968(($1_1 + $2_1 | 0) - 1 | 0, 0, $1937($5_1, 0));
   }
   $5_1 = $2_1;
  }
  global$0 = $4_1 + 32 | 0;
  return $5_1 | 0;
 }
 
 function $1619($0_1) {
  return $0_1;
 }
 
 function $1620($0_1) {
  $0_1 = $0_1 | 0;
  return fimport$36($1944($0_1, 60) | 0) | 0;
 }
 
 function $1622($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  label$1 : {
   label$2 : {
    if (!$1693(13568, $1936($1_1, 0))) {
     $1973(95900, 0, 28);
     break label$2;
    }
    $2_1 = 2;
    if (!$1693($1_1, 43)) {
     $2_1 = ($1937($1_1, 0) | 0) != 114
    }
    $2_1 = $1693($1_1, 120) ? $2_1 | 128 : $2_1;
    $2_1 = $1693($1_1, 101) ? $2_1 | 524288 : $2_1;
    $4_1 = $2_1;
    $6_1 = $2_1 | 64;
    $2_1 = $1937($1_1, 0);
    $4_1 = ($2_1 | 0) == 114 ? $4_1 : $6_1;
    $4_1 = ($2_1 | 0) == 119 ? $4_1 | 512 : $4_1;
    $2_1 = ($2_1 | 0) == 97 ? $4_1 | 1024 : $4_1;
    $1983($5_1, 0, 438, 0);
    $0_1 = fimport$31(-100, $0_1 | 0, $2_1 | 32768, $5_1 | 0) | 0;
    if ($0_1 >>> 0 >= 4294963201) {
     $1973(95900, 0, 0 - $0_1 | 0);
     $0_1 = -1;
    }
    if (($0_1 | 0) < 0) {
     break label$1
    }
    $3 = global$0 - 32 | 0;
    global$0 = $3;
    label$10 : {
     label$21 : {
      label$3 : {
       if (!$1693(13568, $1936($1_1, 0))) {
        $1973(95900, 0, 28);
        break label$3;
       }
       $2_1 = $1755(1176);
       if ($2_1) {
        break label$21
       }
      }
      $1_1 = 0;
      break label$10;
     }
     $1604($2_1, 0, 144);
     if (!$1693($1_1, 43)) {
      $1973($2_1, 0, ($1937($1_1, 0) | 0) == 114 ? 8 : 4)
     }
     label$6 : {
      if (($1937($1_1, 0) | 0) != 97) {
       $1_1 = $1944($2_1, 0);
       break label$6;
      }
      $1_1 = fimport$32($0_1 | 0, 3, 0) | 0;
      if (!($1_1 & 1024)) {
       $1_1 = $1_1 | 1024;
       $1983($3, 16, $1_1, $1_1 >> 31);
       fimport$32($0_1 | 0, 4, $3 + 16 | 0) | 0;
      }
      $1_1 = $1944($2_1, 0) | 128;
      $1973($2_1, 0, $1_1);
     }
     $1973($2_1, 80, -1);
     $1973($2_1, 48, 1024);
     $1973($2_1, 60, $0_1);
     $1973($2_1, 44, $2_1 + 152 | 0);
     label$9 : {
      if ($1_1 & 8) {
       break label$9
      }
      $1983($3, 0, $3 + 24 | 0, 0);
      if (fimport$33($0_1 | 0, 21523, $3 | 0) | 0) {
       break label$9
      }
      $1973($2_1, 80, 10);
     }
     $1973($2_1, 40, 963);
     $1973($2_1, 36, 964);
     $1973($2_1, 32, 965);
     $1973($2_1, 12, 966);
     if (!$1937(0, 95905)) {
      $1973($2_1, 76, -1)
     }
     $1973($2_1, 56, $1944(95964, 0));
     $1_1 = $1944(95964, 0);
     if ($1_1) {
      $1973($1_1, 52, $2_1)
     }
     $1973(95964, 0, $2_1);
     $1_1 = $2_1;
    }
    global$0 = $3 + 32 | 0;
    $3 = $1_1;
    if ($1_1) {
     break label$1
    }
    fimport$36($0_1 | 0) | 0;
   }
   $3 = 0;
  }
  global$0 = $5_1 + 16 | 0;
  return $3;
 }
 
 function $1623($0_1) {
  var $1_1 = 0, $2_1 = 0;
  $1_1 = $1944($0_1, 72);
  $1973($0_1, 72, $1_1 - 1 | $1_1);
  if (($1944($0_1, 20) | 0) != ($1944($0_1, 28) | 0)) {
   FUNCTION_TABLE[$1944($0_1, 36) | 0]($0_1, 0, 0) | 0
  }
  $1973($0_1, 28, 0);
  $1983($0_1, 16, 0, 0);
  $1_1 = $1944($0_1, 0);
  if ($1_1 & 4) {
   $1973($0_1, 0, $1_1 | 32);
   return -1;
  }
  $2_1 = $1944($0_1, 44) + $1944($0_1, 48) | 0;
  $1973($0_1, 8, $2_1);
  $1973($0_1, 4, $2_1);
  return $1_1 << 27 >> 31;
 }
 
 function $1625($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0;
  label$1 : {
   if ($3 >>> 0 >= 3) {
    $1973(95900, 0, 28);
    break label$1;
   }
   label$3 : {
    if (($3 | 0) != 1) {
     break label$3
    }
    $4_1 = $1944($0_1, 8);
    if (!$4_1) {
     break label$3
    }
    $5_1 = $1_1;
    $4_1 = $4_1 - $1944($0_1, 4) | 0;
    $1_1 = $1_1 - $4_1 | 0;
    $2_1 = $2_1 - (($4_1 >> 31) + ($4_1 >>> 0 > $5_1 >>> 0) | 0) | 0;
   }
   if (($1944($0_1, 20) | 0) != ($1944($0_1, 28) | 0)) {
    FUNCTION_TABLE[$1944($0_1, 36) | 0]($0_1, 0, 0) | 0;
    if (!$1944($0_1, 20)) {
     break label$1
    }
   }
   $1973($0_1, 28, 0);
   $1983($0_1, 16, 0, 0);
   FUNCTION_TABLE[$1944($0_1, 40) | 0]($0_1, $1_1, $2_1, $3) | 0;
   if ((i64toi32_i32$HIGH_BITS | 0) < 0) {
    break label$1
   }
   $1982($0_1, 4, 0, 0);
   $1973($0_1, 0, $1944($0_1, 0) & -17);
   return 0;
  }
  return -1;
 }
 
 function $1627($0_1, $1_1, $2_1) {
  var $3 = 0;
  $3 = $1_1 >> 31;
  __inlined_func$1626 : {
   if (($1944($0_1, 76) | 0) < 0) {
    $0_1 = $1625($0_1, $1_1, $3, $2_1);
    break __inlined_func$1626;
   }
   $0_1 = $1625($0_1, $1_1, $3, $2_1);
  }
  return $0_1;
 }
 
 function $1628($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0;
  $3 = $1944($0_1, 40);
  $1_1 = 1;
  if ($1937($0_1, 0) & 128) {
   $1_1 = ($1944($0_1, 20) | 0) == ($1944($0_1, 28) | 0) ? 1 : 2
  }
  $3 = FUNCTION_TABLE[$3 | 0]($0_1, 0, 0, $1_1) | 0;
  $2_1 = i64toi32_i32$HIGH_BITS;
  label$2 : {
   if (($2_1 | 0) < 0) {
    break label$2
   }
   $1_1 = $1944($0_1, 8);
   if ($1_1) {
    $0_1 = $0_1 + 4 | 0
   } else {
    $1_1 = $1944($0_1, 28);
    if (!$1_1) {
     break label$2
    }
    $0_1 = $0_1 + 20 | 0;
   }
   $0_1 = $1944($0_1, 0) - $1_1 | 0;
   $3 = $0_1 + $3 | 0;
   $2_1 = ($0_1 >> 31) + $2_1 | 0;
   $2_1 = $0_1 >>> 0 > $3 >>> 0 ? $2_1 + 1 | 0 : $2_1;
  }
  i64toi32_i32$HIGH_BITS = $2_1;
  return $3;
 }
 
 function $1630($0_1) {
  var $1_1 = 0;
  __inlined_func$1629 : {
   if (($1944($0_1, 76) | 0) < 0) {
    $0_1 = $1628($0_1);
    break __inlined_func$1629;
   }
   $0_1 = $1628($0_1);
  }
  $1_1 = i64toi32_i32$HIGH_BITS;
  if (!($0_1 >>> 0 < 2147483648 & ($1_1 | 0) <= 0 | ($1_1 | 0) < 0)) {
   $1973(95900, 0, 61);
   return -1;
  }
  return $0_1;
 }
 
 function $1631($0_1) {
  var $1_1 = 0;
  $1_1 = $1944($0_1, 72);
  $1973($0_1, 72, $1_1 - 1 | $1_1);
  $1_1 = $1944($0_1, 0);
  if ($1_1 & 8) {
   $1973($0_1, 0, $1_1 | 32);
   return -1;
  }
  $1982($0_1, 4, 0, 0);
  $1_1 = $1944($0_1, 44);
  $1973($0_1, 28, $1_1);
  $1973($0_1, 20, $1_1);
  $1973($0_1, 16, $1944($0_1, 48) + $1_1 | 0);
  return 0;
 }
 
 function $1632($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0;
  $3 = $1944($2_1, 16);
  label$1 : {
   if (!$3) {
    if ($1631($2_1)) {
     break label$1
    }
    $3 = $1944($2_1, 16);
   }
   $5_1 = $1944($2_1, 20);
   if ($1_1 >>> 0 > $3 - $5_1 >>> 0) {
    return FUNCTION_TABLE[$1944($2_1, 36) | 0]($2_1, $0_1, $1_1) | 0
   }
   label$4 : {
    if (($1944($2_1, 80) | 0) < 0) {
     $3 = 0;
     break label$4;
    }
    $4_1 = $1_1;
    while (1) {
     $3 = $4_1;
     if (!$3) {
      $3 = 0;
      break label$4;
     }
     $4_1 = $3 - 1 | 0;
     if (($1937($4_1 + $0_1 | 0, 0) | 0) != 10) {
      continue
     }
     break;
    };
    $4_1 = FUNCTION_TABLE[$1944($2_1, 36) | 0]($2_1, $0_1, $3) | 0;
    if ($4_1 >>> 0 < $3 >>> 0) {
     break label$1
    }
    $0_1 = $0_1 + $3 | 0;
    $1_1 = $1_1 - $3 | 0;
    $5_1 = $1944($2_1, 20);
   }
   $1602($5_1, $0_1, $1_1);
   $1973($2_1, 20, $1944($2_1, 20) + $1_1 | 0);
   $4_1 = $1_1 + $3 | 0;
  }
  return $4_1;
 }
 
 function $1633($0_1, $1_1, $2_1) {
  $1944($2_1, 76);
  $1632($0_1, $1_1, $2_1);
 }
 
 function $1635($0_1) {
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  $1990($1_1, 8, $0_1);
  return $1967($1_1, 8);
 }
 
 function $1636($0_1) {
  $0_1 = $0_1 - $0_1;
  return $0_1 / $0_1;
 }
 
 function $1637($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0.0, $4_1 = 0.0, $5_1 = 0.0, $6_1 = 0, $7_1 = 0.0, $8 = 0.0, $9 = 0.0, $10_1 = 0;
  wasm2js_scratch_store_f64(+$0_1);
  $2_1 = wasm2js_scratch_load_i32(1) | 0;
  wasm2js_scratch_load_i32(0) | 0;
  $1_1 = $2_1 >>> 16 | 0;
  wasm2js_scratch_store_f64(+$0_1);
  $2_1 = wasm2js_scratch_load_i32(1) | 0;
  $6_1 = wasm2js_scratch_load_i32(0) | 0;
  if ($2_1 - 1072562176 >>> 0 <= 198911) {
   if (!(($6_1 | 0) != 0 | ($2_1 | 0) != 1072693248)) {
    return 0.0
   }
   $0_1 = $0_1 + -1.0;
   $3 = $0_1 * 134217728.0;
   $3 = $0_1 + $3 - $3;
   $8 = $1967(0, 59704);
   $9 = $3 * $3 * $8;
   $7_1 = $0_1 + $9;
   $4_1 = $0_1 * $0_1;
   $5_1 = $0_1 * $4_1;
   return $7_1 + ($5_1 * ($5_1 * ($5_1 * ($5_1 * $1967(0, 59784) + ($4_1 * $1967(0, 59776) + ($0_1 * $1967(0, 59768) + $1967(0, 59760)))) + ($4_1 * $1967(0, 59752) + ($0_1 * $1967(0, 59744) + $1967(0, 59736)))) + ($4_1 * $1967(0, 59728) + ($0_1 * $1967(0, 59720) + $1967(0, 59712)))) + (($0_1 - $3) * $8 * ($0_1 + $3) + ($9 + ($0_1 - $7_1))));
  }
  label$3 : {
   if ($1_1 - 32752 >>> 0 <= 4294934559) {
    if (!($2_1 & 2147483647 | $6_1)) {
     return $1635(-1.0) / 0.0
    }
    if (!$6_1 & ($2_1 | 0) == 2146435072) {
     break label$3
    }
    if (!(($1_1 & 32752) != 32752 & $1_1 >>> 0 <= 32767)) {
     return $1636($0_1)
    }
    wasm2js_scratch_store_f64(+($0_1 * 4503599627370496.0));
    $2_1 = wasm2js_scratch_load_i32(1) | 0;
    $6_1 = wasm2js_scratch_load_i32(0) | 0;
    $2_1 = $2_1 - 54525952 | 0;
   }
   $1_1 = $2_1 - 1072037888 | 0;
   $10_1 = $1_1;
   $5_1 = +($1_1 >> 20);
   $1_1 = ($1_1 >>> 13 & 127) << 4;
   $7_1 = $5_1 * $1967(0, 59648) + $1967($1_1 + 59800 | 0, 0);
   $0_1 = $1967($1_1 + 59792 | 0, 0);
   wasm2js_scratch_store_i32(0, $6_1 | 0);
   wasm2js_scratch_store_i32(1, $2_1 - ($10_1 & -1048576) | 0);
   $0_1 = $0_1 * (+wasm2js_scratch_load_f64() - $1967($1_1 + 61840 | 0, 0) - $1967($1_1 + 61848 | 0, 0));
   $3 = $7_1 + $0_1;
   $4_1 = $0_1 * $0_1;
   $8 = $4_1 * ($0_1 * $1967(0, 59696) + $1967(0, 59688));
   $0_1 = $3 + ($0_1 * $4_1 * ($8 + ($0_1 * $1967(0, 59680) + $1967(0, 59672))) + ($4_1 * $1967(0, 59664) + ($5_1 * $1967(0, 59656) + ($0_1 + ($7_1 - $3)))));
  }
  return $0_1;
 }
 
 function $1640($0_1) {
  var $1_1 = 0;
  $1_1 = global$0 - 16 | 0;
  $1986($1_1, 12, $0_1);
  return $1963($1_1, 12);
 }
 
 function $1641($0_1) {
  $0_1 = Math_fround($0_1 - $0_1);
  return Math_fround($0_1 / $0_1);
 }
 
 function $1642($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0.0, $4_1 = 0, $5_1 = 0.0, $6_1 = 0.0;
  $1_1 = (wasm2js_scratch_store_f32($0_1), wasm2js_scratch_load_i32(2));
  if (($1_1 | 0) == 1065353216) {
   return Math_fround(0.0)
  }
  label$2 : {
   if ($1_1 - 2139095040 >>> 0 <= 2164260863) {
    $2_1 = $1_1 << 1;
    if (!$2_1) {
     return Math_fround($1640(Math_fround(-1.0)) / Math_fround(0.0))
    }
    if (($1_1 | 0) == 2139095040) {
     break label$2
    }
    if (!($2_1 >>> 0 < 4278190080 & ($1_1 | 0) >= 0)) {
     return $1641($0_1)
    }
    $1_1 = (wasm2js_scratch_store_f32(Math_fround($0_1 * Math_fround(8388608.0))), wasm2js_scratch_load_i32(2)) - 192937984 | 0;
   }
   $2_1 = $1_1 - 1060306944 | 0;
   $4_1 = $2_1 >>> 15 & 240;
   $6_1 = $1967(0, 64152);
   $3 = +(wasm2js_scratch_store_i32(2, $1_1 - ($2_1 & -8388608) | 0), wasm2js_scratch_load_f32()) * $1967($4_1 + 63888 | 0, 0) + -1.0;
   $5_1 = $3 * $3;
   $0_1 = Math_fround(($6_1 * $5_1 + ($1967(0, 64160) * $3 + $1967(0, 64168))) * $5_1 + (+($2_1 >> 23) * $1967(0, 64144) + $1967($4_1 + 63896 | 0, 0) + $3));
  }
  return $0_1;
 }
 
 function $1644($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0;
  $3 = ($2_1 | 0) != 0;
  label$1 : {
   label$2 : {
    label$3 : {
     if (!($0_1 & 3) | !$2_1) {
      break label$3
     }
     $4_1 = $1_1 & 255;
     while (1) {
      if (($1937($0_1, 0) | 0) == ($4_1 | 0)) {
       break label$2
      }
      $2_1 = $2_1 - 1 | 0;
      $3 = ($2_1 | 0) != 0;
      $0_1 = $0_1 + 1 | 0;
      if (!($0_1 & 3)) {
       break label$3
      }
      if ($2_1) {
       continue
      }
      break;
     };
    }
    if (!$3) {
     break label$1
    }
    if (!(($1937($0_1, 0) | 0) == ($1_1 & 255) | $2_1 >>> 0 < 4)) {
     $3 = Math_imul($1_1 & 255, 16843009);
     while (1) {
      $4_1 = $1944($0_1, 0) ^ $3;
      if (($4_1 ^ -1) & $4_1 - 16843009 & -2139062144) {
       break label$2
      }
      $0_1 = $0_1 + 4 | 0;
      $2_1 = $2_1 - 4 | 0;
      if ($2_1 >>> 0 > 3) {
       continue
      }
      break;
     };
    }
    if (!$2_1) {
     break label$1
    }
   }
   $1_1 = $1_1 & 255;
   while (1) {
    if (($1937($0_1, 0) | 0) == ($1_1 | 0)) {
     return $0_1
    }
    $0_1 = $0_1 + 1 | 0;
    $2_1 = $2_1 - 1 | 0;
    if ($2_1) {
     continue
    }
    break;
   };
  }
  return 0;
 }
 
 function $1645($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0;
  label$1 : {
   label$2 : {
    if ($2_1 >>> 0 >= 4) {
     if (($0_1 | $1_1) & 3) {
      break label$2
     }
     while (1) {
      if (($1944($0_1, 0) | 0) != ($1944($1_1, 0) | 0)) {
       break label$2
      }
      $1_1 = $1_1 + 4 | 0;
      $0_1 = $0_1 + 4 | 0;
      $2_1 = $2_1 - 4 | 0;
      if ($2_1 >>> 0 > 3) {
       continue
      }
      break;
     };
    }
    if (!$2_1) {
     break label$1
    }
   }
   while (1) {
    $3 = $1937($0_1, 0);
    $4_1 = $1937($1_1, 0);
    if (($3 | 0) == ($4_1 | 0)) {
     $1_1 = $1_1 + 1 | 0;
     $0_1 = $0_1 + 1 | 0;
     $2_1 = $2_1 - 1 | 0;
     if ($2_1) {
      continue
     }
     break label$1;
    }
    break;
   };
   return $3 - $4_1 | 0;
  }
  return 0;
 }
 
 function $1651($0_1, $1_1) {
  return $1635($0_1 ? -$1_1 : $1_1) * $1_1;
 }
 
 function $1653($0_1) {
  return $1651($0_1, 3105036184601417870297958.0e207);
 }
 
 function $1654($0_1) {
  return $1651($0_1, 1.2882297539194267e-231);
 }
 
 function $1656($0_1, $1_1) {
  var $2_1 = 0.0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0.0, $7_1 = 0, $8 = 0.0, $9 = 0, $10_1 = 0, $11_1 = 0.0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0.0, $17_1 = 0.0, $18_1 = 0.0, $19 = 0.0, $20_1 = 0.0, $21_1 = 0.0, wasm2js_f64$0 = 0.0, wasm2js_f64$1 = 0.0, wasm2js_i32$0 = 0;
  $12_1 = global$0 - 16 | 0;
  global$0 = $12_1;
  $9 = $1657($0_1);
  $13 = $1657($1_1);
  $14 = $13 & 2047;
  $15_1 = $14 - 1086 | 0;
  wasm2js_scratch_store_f64(+$1_1);
  $5_1 = wasm2js_scratch_load_i32(1) | 0;
  $7_1 = wasm2js_scratch_load_i32(0) | 0;
  wasm2js_scratch_store_f64(+$0_1);
  $4_1 = wasm2js_scratch_load_i32(1) | 0;
  $3 = wasm2js_scratch_load_i32(0) | 0;
  label$1 : {
   label$2 : {
    if ($15_1 >>> 0 > 4294967167 & $9 - 2047 >>> 0 >= 4294965250) {
     break label$2
    }
    if ($1658($7_1, $5_1)) {
     $2_1 = 1.0;
     if (!$3 & ($4_1 | 0) == 1072693248) {
      break label$1
     }
     $9 = $7_1 << 1;
     $7_1 = $5_1 << 1 | $7_1 >>> 31;
     if (!($9 | $7_1)) {
      break label$1
     }
     $4_1 = $4_1 << 1 | $3 >>> 31;
     $3 = $3 << 1;
     if (!(!(($4_1 | 0) == -2097152 & ($3 | 0) != 0 | $4_1 >>> 0 > 4292870144) & (!$9 & ($7_1 | 0) == -2097152 | $7_1 >>> 0 < 4292870144))) {
      $2_1 = $0_1 + $1_1;
      break label$1;
     }
     if (!$3 & ($4_1 | 0) == 2145386496) {
      break label$1
     }
     $2_1 = $4_1 >>> 0 > 2145386495 ^ ($5_1 | 0) >= 0 ? 0.0 : $1_1 * $1_1;
     break label$1;
    }
    if ($1658($3, $4_1)) {
     $2_1 = $0_1 * $0_1;
     if (($4_1 | 0) < 0) {
      $2_1 = ($1659($7_1, $5_1) | 0) == 1 ? -$2_1 : $2_1
     }
     if (($5_1 | 0) >= 0) {
      break label$1
     }
     $2_1 = $1635(1.0 / $2_1);
     break label$1;
    }
    if (($4_1 | 0) < 0) {
     $10_1 = $1659($7_1, $5_1);
     if (!$10_1) {
      $2_1 = $1636($0_1);
      break label$1;
     }
     $9 = $9 & 2047;
     $10_1 = (($10_1 | 0) == 1) << 18;
     $4_1 = $4_1 & 2147483647;
    }
    if ($15_1 >>> 0 <= 4294967167) {
     $2_1 = 1.0;
     if (!$3 & ($4_1 | 0) == 1072693248) {
      break label$1
     }
     if ($14 >>> 0 <= 957) {
      $2_1 = (($4_1 | 0) == 1072693248 & ($3 | 0) != 0 | $4_1 >>> 0 > 1072693248 ? $1_1 : -$1_1) + 1.0;
      break label$1;
     }
     if ((!$3 & ($4_1 | 0) == 1072693248 | $4_1 >>> 0 < 1072693248) != ($13 >>> 0 < 2048 | 0)) {
      $2_1 = $1653(0);
      break label$1;
     }
     $2_1 = $1654(0);
     break label$1;
    }
    if ($9) {
     break label$2
    }
    wasm2js_scratch_store_f64(+($0_1 * 4503599627370496.0));
    $4_1 = wasm2js_scratch_load_i32(1) | 0;
    $3 = wasm2js_scratch_load_i32(0) | 0;
    $4_1 = ($4_1 & 2147483647) - 54525952 | 0;
   }
   wasm2js_scratch_store_i32(0, $7_1 & -134217728);
   wasm2js_scratch_store_i32(1, $5_1 | 0);
   $16_1 = +wasm2js_scratch_load_f64();
   $5_1 = $4_1 - 1072076117 | 0;
   $7_1 = $5_1;
   $2_1 = +($5_1 >> 20);
   $5_1 = ($5_1 >>> 13 & 127) << 5;
   $21_1 = $2_1 * $1967(0, 66344) + $1967($5_1 + 66432 | 0, 0);
   wasm2js_scratch_store_i32(0, 0);
   $4_1 = $4_1 - ($7_1 & -1048576) | 0;
   wasm2js_scratch_store_i32(1, ($3 - -2147483648 >>> 0 < 2147483648 ? $4_1 + 1 | 0 : $4_1) | 0);
   $0_1 = +wasm2js_scratch_load_f64();
   $8 = $1967($5_1 + 66408 | 0, 0);
   $6_1 = $0_1 * $8 + -1.0;
   wasm2js_scratch_store_i32(0, $3 | 0);
   wasm2js_scratch_store_i32(1, $4_1 | 0);
   $17_1 = (+wasm2js_scratch_load_f64() - $0_1) * $8;
   $0_1 = $6_1 + $17_1;
   $18_1 = $2_1 * $1967(0, 66336) + $1967($5_1 + 66424 | 0, 0);
   $2_1 = $0_1 + $18_1;
   $11_1 = $1967(0, 66352);
   $19 = $0_1 * $11_1;
   $8 = $0_1 * $19;
   $11_1 = $6_1 * $11_1;
   $20_1 = $6_1 * $11_1;
   $6_1 = $2_1 + $20_1;
   $0_1 = $21_1 + ($0_1 + ($18_1 - $2_1)) + $17_1 * ($19 + $11_1) + ($20_1 + ($2_1 - $6_1)) + $0_1 * $8 * ($8 * ($8 * ($0_1 * $1967(0, 66400) + $1967(0, 66392)) + ($0_1 * $1967(0, 66384) + $1967(0, 66376))) + ($0_1 * $1967(0, 66368) + $1967(0, 66360)));
   $2_1 = $6_1 + $0_1;
   $1990($12_1 + 8 | 0, 0, $0_1 + ($6_1 - $2_1));
   wasm2js_scratch_store_f64(+$2_1);
   $3 = wasm2js_scratch_load_i32(1) | 0;
   wasm2js_scratch_store_i32(0, wasm2js_scratch_load_i32(0) & -134217728);
   wasm2js_scratch_store_i32(1, $3 | 0);
   $6_1 = +wasm2js_scratch_load_f64();
   $0_1 = $16_1 * $6_1;
   $1_1 = ($1_1 - $16_1) * $6_1 + ($1967($12_1, 8) + ($2_1 - $6_1)) * $1_1;
   __inlined_func$1662 : {
    label$10 : {
     $4_1 = $1657($0_1) & 2047;
     $3 = $1657(5.551115123125783e-17);
     if ($4_1 - $3 >>> 0 < $1657(512.0) - $3 >>> 0) {
      break label$10
     }
     if ($4_1 >>> 0 < $3 >>> 0) {
      $0_1 = $0_1 + 1.0;
      $0_1 = $10_1 ? -$0_1 : $0_1;
      break __inlined_func$1662;
     }
     $3 = $1657(1024.0) >>> 0 > $4_1 >>> 0;
     $4_1 = 0;
     if ($3) {
      break label$10
     }
     wasm2js_scratch_store_f64(+$0_1);
     $3 = wasm2js_scratch_load_i32(1) | 0;
     wasm2js_scratch_load_i32(0) | 0;
     if (($3 | 0) < 0) {
      $0_1 = $1654($10_1);
      break __inlined_func$1662;
     }
     $0_1 = $1653($10_1);
     break __inlined_func$1662;
    }
    $6_1 = $1967(0, 64176) * $0_1;
    $2_1 = $1967(0, 64184);
    $6_1 = $6_1 + $2_1;
    $2_1 = $6_1 - $2_1;
    $0_1 = $2_1 * $1967(0, 64200) + ($2_1 * $1967(0, 64192) + $0_1) + $1_1;
    $1_1 = $0_1 * $0_1;
    $2_1 = $1_1 * $1_1 * ($0_1 * $1967(0, 64232) + $1967(0, 64224));
    $1_1 = $1_1 * ($0_1 * $1967(0, 64216) + $1967(0, 64208));
    wasm2js_scratch_store_f64(+$6_1);
    wasm2js_scratch_load_i32(1) | 0;
    $7_1 = wasm2js_scratch_load_i32(0) | 0;
    $3 = $7_1 << 4 & 2032;
    $0_1 = $2_1 + ($1_1 + ($1967($3 + 64288 | 0, 0) + $0_1));
    $3 = $1960($3 + 64296 | 0, 0);
    $5_1 = i64toi32_i32$HIGH_BITS + ($7_1 + $10_1 << 13) | 0;
    if (!$4_1) {
     __inlined_func$1663 : {
      if (!($7_1 & -2147483648)) {
       wasm2js_scratch_store_i32(0, $3 | 0);
       wasm2js_scratch_store_i32(1, $5_1 - 1058013184 | 0);
       $1_1 = +wasm2js_scratch_load_f64();
       $0_1 = ($1_1 * $0_1 + $1_1) * 5486124068793688683255936.0e279;
       break __inlined_func$1663;
      }
      wasm2js_scratch_store_i32(0, $3 | 0);
      $3 = $5_1 + 1071644672 | 0;
      wasm2js_scratch_store_i32(1, $3 | 0);
      $1_1 = +wasm2js_scratch_load_f64();
      $6_1 = $1_1 * $0_1;
      $0_1 = $6_1 + $1_1;
      if (Math_abs($0_1) < 1.0) {
       $2_1 = $1635(2.2250738585072014e-308) * 2.2250738585072014e-308;
       $1990(global$0 - 16 | 0, 8, $2_1);
       wasm2js_scratch_store_i32(0, 0);
       wasm2js_scratch_store_i32(1, $3 & -2147483648);
       $2_1 = $0_1 < 0.0 ? -1.0 : 1.0;
       $8 = $0_1 + $2_1;
       $0_1 = $8 + ($6_1 + ($1_1 - $0_1) + ($0_1 + ($2_1 - $8))) - $2_1;
       $0_1 = (wasm2js_f64$0 = +wasm2js_scratch_load_f64(), wasm2js_f64$1 = $0_1, wasm2js_i32$0 = $0_1 == 0.0, wasm2js_i32$0 ? wasm2js_f64$0 : wasm2js_f64$1);
      }
      $0_1 = $0_1 * 2.2250738585072014e-308;
     }
     break __inlined_func$1662;
    }
    wasm2js_scratch_store_i32(0, $3 | 0);
    wasm2js_scratch_store_i32(1, $5_1 | 0);
    $1_1 = +wasm2js_scratch_load_f64();
    $0_1 = $1_1 * $0_1 + $1_1;
   }
   $2_1 = $0_1;
  }
  global$0 = $12_1 + 16 | 0;
  return $2_1;
 }
 
 function $1657($0_1) {
  var $1_1 = 0;
  wasm2js_scratch_store_f64(+$0_1);
  $1_1 = wasm2js_scratch_load_i32(1) | 0;
  wasm2js_scratch_load_i32(0) | 0;
  return $1_1 >>> 20 | 0;
 }
 
 function $1658($0_1, $1_1) {
  var $2_1 = 0;
  $1_1 = $1_1 << 1 | $0_1 >>> 31;
  $2_1 = !($0_1 << 1);
  $0_1 = $1_1 + 2097152 | 0;
  return $2_1 & ($0_1 | 0) == 2097152 | $0_1 >>> 0 < 2097152;
 }
 
 function $1659($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $2_1 = $1_1 >>> 20 & 2047;
  label$1 : {
   if ($2_1 >>> 0 < 1023) {
    break label$1
   }
   $5_1 = 2;
   if ($2_1 >>> 0 > 1075) {
    break label$1
   }
   $5_1 = 0;
   $2_1 = 1075 - $2_1 | 0;
   $3 = $2_1 & 31;
   if (($2_1 & 63) >>> 0 >= 32) {
    $2_1 = 1 << $3;
    $4_1 = 0;
   } else {
    $4_1 = 1 << $3;
    $2_1 = $4_1 - 1 & 1 >>> 32 - $3;
   }
   $3 = $2_1 - 1 | 0;
   $6_1 = $4_1 - 1 | 0;
   $3 = ($6_1 | 0) != -1 ? $3 + 1 | 0 : $3;
   if ($0_1 & $6_1 | $1_1 & $3) {
    break label$1
   }
   $5_1 = $0_1 & $4_1 | $1_1 & $2_1 ? 1 : 2;
  }
  return $5_1;
 }
 
 function $1665($0_1, $1_1) {
  return Math_fround($1640($0_1 ? Math_fround(-$1_1) : $1_1) * $1_1);
 }
 
 function $1669($0_1, $1_1) {
  var $2_1 = 0, $3 = 0.0, $4_1 = 0, $5_1 = Math_fround(0), $6_1 = 0, $7_1 = 0.0, $8 = 0, $9 = 0.0, $10_1 = 0.0;
  $4_1 = (wasm2js_scratch_store_f32($1_1), wasm2js_scratch_load_i32(2));
  $8 = $1670($4_1);
  label$1 : {
   label$2 : {
    label$3 : {
     $2_1 = (wasm2js_scratch_store_f32($0_1), wasm2js_scratch_load_i32(2));
     label$4 : {
      if ($2_1 - 2139095040 >>> 0 >= 2164260864) {
       if ($8) {
        break label$4
       }
       break label$2;
      }
      if (!$8) {
       break label$3
      }
     }
     $5_1 = Math_fround(1.0);
     if (($2_1 | 0) == 1065353216) {
      break label$1
     }
     $6_1 = $4_1 << 1;
     if (!$6_1) {
      break label$1
     }
     $2_1 = $2_1 << 1;
     if (!($6_1 >>> 0 < 4278190081 & $2_1 >>> 0 <= 4278190080)) {
      return Math_fround($0_1 + $1_1)
     }
     if (($2_1 | 0) == 2130706432) {
      break label$1
     }
     return $2_1 >>> 0 > 2130706431 ^ ($4_1 | 0) >= 0 ? Math_fround(0.0) : Math_fround($1_1 * $1_1);
    }
    if ($1670($2_1)) {
     $5_1 = Math_fround($0_1 * $0_1);
     if (($2_1 | 0) < 0) {
      $5_1 = ($1671($4_1) | 0) == 1 ? Math_fround(-$5_1) : $5_1
     }
     if (($4_1 | 0) >= 0) {
      break label$1
     }
     return $1640(Math_fround(Math_fround(1.0) / $5_1));
    }
    if (($2_1 | 0) < 0) {
     $4_1 = $1671($4_1);
     if (!$4_1) {
      return $1641($0_1)
     }
     $6_1 = (($4_1 | 0) == 1) << 16;
     $2_1 = $2_1 & 2147483647;
    }
    if ($2_1 >>> 0 > 8388607) {
     break label$2
    }
    $2_1 = ((wasm2js_scratch_store_f32(Math_fround($0_1 * Math_fround(8388608.0))), wasm2js_scratch_load_i32(2)) & 2147483647) - 192937984 | 0;
   }
   $9 = $1967(0, 71088);
   $4_1 = $2_1 - 1060306944 | 0;
   $8 = $4_1 >>> 15 & 240;
   $3 = +(wasm2js_scratch_store_i32(2, $2_1 - ($4_1 & -8388608) | 0), wasm2js_scratch_load_f32()) * $1967($8 + 70832 | 0, 0) + -1.0;
   $7_1 = $3 * $3;
   $3 = (($9 * $3 + $1967(0, 71096)) * ($7_1 * $7_1) + (($1967(0, 71104) * $3 + $1967(0, 71112)) * $7_1 + ($1967(0, 71120) * $3 + ($1967($8 + 70840 | 0, 0) + +($4_1 >> 23))))) * +$1_1;
   wasm2js_scratch_store_f64(+$3);
   $2_1 = wasm2js_scratch_load_i32(1) | 0;
   wasm2js_scratch_load_i32(0) | 0;
   label$12 : {
    $2_1 = $2_1 & 2147450880;
    if (($2_1 | 0) == 1079967744 | $2_1 >>> 0 < 1079967744) {
     break label$12
    }
    if ($3 > 127.99999995700433) {
     return $1665($6_1, Math_fround(1584563250285286751870879.0e5))
    }
    if (!($3 <= -150.0)) {
     break label$12
    }
    return $1665($6_1, Math_fround(2.524354896707238e-29));
   }
   $10_1 = $1967(0, 70768);
   $7_1 = $1967(0, 70760);
   $9 = $7_1 + $3;
   $3 = $3 - ($9 - $7_1);
   $3 = ($10_1 * $3 + $1967(0, 70776)) * ($3 * $3) + ($1967(0, 70784) * $3 + 1.0);
   wasm2js_scratch_store_f64(+$9);
   wasm2js_scratch_load_i32(1) | 0;
   $2_1 = wasm2js_scratch_load_i32(0) | 0;
   $4_1 = $6_1 + $2_1 << 15;
   $2_1 = $1960((($2_1 & 31) << 3) + 70504 | 0, 0);
   $4_1 = i64toi32_i32$HIGH_BITS + $4_1 | 0;
   wasm2js_scratch_store_i32(0, $2_1 | 0);
   wasm2js_scratch_store_i32(1, $4_1 | 0);
   $5_1 = Math_fround($3 * +wasm2js_scratch_load_f64());
  }
  return $5_1;
 }
 
 function $1670($0_1) {
  return ($0_1 << 1) + 16777216 >>> 0 < 16777217;
 }
 
 function $1671($0_1) {
  var $1_1 = 0, $2_1 = 0;
  $2_1 = $0_1 >>> 23 & 255;
  $1_1 = 0;
  label$1 : {
   if ($2_1 >>> 0 < 127) {
    break label$1
   }
   $1_1 = 2;
   if ($2_1 >>> 0 > 150) {
    break label$1
   }
   $2_1 = 1 << 150 - $2_1;
   $1_1 = 0;
   if ($2_1 - 1 & $0_1) {
    break label$1
   }
   $1_1 = $0_1 & $2_1 ? 1 : 2;
  }
  return $1_1;
 }
 
 function $1675($0_1, $1_1) {
  var $2_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1973($2_1, 12, $1_1);
  $1724(73264, $0_1, $1_1, 0, 0);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1677($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0;
  $7_1 = global$0 - 240 | 0;
  global$0 = $7_1;
  $1973($7_1, 0, $0_1);
  $8 = 1;
  label$1 : {
   if (($3 | 0) < 2) {
    break label$1
   }
   $10_1 = 0 - $1_1 | 0;
   $5_1 = $0_1;
   while (1) {
    $5_1 = $5_1 + $10_1 | 0;
    $9 = $3 - 2 | 0;
    $6_1 = $5_1 - $1944(($9 << 2) + $4_1 | 0, 0) | 0;
    if ((FUNCTION_TABLE[967]($0_1, $6_1, $2_1) | 0) >= 0) {
     if ((FUNCTION_TABLE[967]($0_1, $5_1, $2_1) | 0) >= 0) {
      break label$1
     }
    }
    $11_1 = $6_1;
    $6_1 = (FUNCTION_TABLE[967]($6_1, $5_1, $2_1) | 0) >= 0;
    $5_1 = $6_1 ? $11_1 : $5_1;
    $1973(($8 << 2) + $7_1 | 0, 0, $5_1);
    $8 = $8 + 1 | 0;
    $3 = $6_1 ? $3 - 1 | 0 : $9;
    if (($3 | 0) > 1) {
     continue
    }
    break;
   };
  }
  $1682($1_1, $7_1, $8);
  global$0 = $7_1 + 240 | 0;
 }
 
 function $1678($0_1, $1_1) {
  var $2_1 = 0, $3 = 0;
  $2_1 = $1944($0_1, 4);
  label$1 : {
   if ($1_1 >>> 0 <= 31) {
    $3 = $1944($0_1, 0);
    break label$1;
   }
   $1_1 = $1_1 - 32 | 0;
   $3 = $2_1;
   $2_1 = 0;
  }
  $1973($0_1, 4, $2_1 >>> $1_1 | 0);
  $1973($0_1, 0, $2_1 << 32 - $1_1 | $3 >>> $1_1);
 }
 
 function $1679($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0;
  $7_1 = global$0 - 240 | 0;
  global$0 = $7_1;
  $8 = $1944($3, 0);
  $1973($7_1, 232, $8);
  $3 = $1944($3, 4);
  $1973($7_1, 0, $0_1);
  $1973($7_1, 236, $3);
  $10_1 = 1;
  label$1 : {
   label$2 : {
    label$3 : {
     if (!($3 | ($8 | 0) != 1)) {
      $3 = $0_1;
      break label$3;
     }
     $11_1 = 0 - $1_1 | 0;
     $8 = $0_1;
     while (1) {
      $9 = ($4_1 << 2) + $6_1 | 0;
      $3 = $8 - $1944($9, 0) | 0;
      if ((FUNCTION_TABLE[967]($3, $0_1, $2_1) | 0) <= 0) {
       $3 = $8;
       break label$3;
      }
      label$7 : {
       if (!(($4_1 | 0) < 2 | $5_1)) {
        $5_1 = $1944($9 - 8 | 0, 0);
        $9 = $8 + $11_1 | 0;
        if ((FUNCTION_TABLE[967]($9, $3, $2_1) | 0) >= 0) {
         break label$7
        }
        if ((FUNCTION_TABLE[967]($9 - $5_1 | 0, $3, $2_1) | 0) >= 0) {
         break label$7
        }
       }
       $1973(($10_1 << 2) + $7_1 | 0, 0, $3);
       $5_1 = $7_1 + 232 | 0;
       $8 = $5_1;
       $5_1 = $1681($5_1);
       $1678($8, $5_1);
       $10_1 = $10_1 + 1 | 0;
       $4_1 = $4_1 + $5_1 | 0;
       $5_1 = 0;
       $8 = $3;
       if (($1944($7_1, 232) | 0) != 1) {
        continue
       }
       if ($1944($7_1, 236)) {
        continue
       }
       break label$2;
      }
      break;
     };
     $3 = $8;
     break label$2;
    }
    if ($5_1) {
     break label$1
    }
   }
   $1682($1_1, $7_1, $10_1);
   $1677($3, $1_1, $2_1, $4_1, $6_1);
  }
  global$0 = $7_1 + 240 | 0;
 }
 
 function $1680($0_1, $1_1) {
  var $2_1 = 0, $3 = 0;
  label$1 : {
   if ($1_1 >>> 0 <= 31) {
    $3 = $1944($0_1, 0);
    $2_1 = $0_1 + 4 | 0;
    break label$1;
   }
   $1_1 = $1_1 - 32 | 0;
   $2_1 = $0_1;
  }
  $2_1 = $1944($2_1, 0);
  $1973($0_1, 0, $3 << $1_1);
  $1973($0_1, 4, $2_1 << $1_1 | $3 >>> 32 - $1_1);
 }
 
 function $1681($0_1) {
  var $1_1 = 0;
  $1_1 = $1684($1944($0_1, 0) - 1 | 0);
  if (!$1_1) {
   $0_1 = $1684($1944($0_1, 4));
   $1_1 = $0_1 ? $0_1 + 32 | 0 : 0;
  }
  return $1_1;
 }
 
 function $1682($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $5_1 = global$0 - 256 | 0;
  global$0 = $5_1;
  label$1 : {
   if (($2_1 | 0) < 2) {
    break label$1
   }
   $7_1 = ($2_1 << 2) + $1_1 | 0;
   $1973($7_1, 0, $5_1);
   if (!$0_1) {
    break label$1
   }
   while (1) {
    $4_1 = $0_1 >>> 0 >= 256 ? 256 : $0_1;
    $1602($1944($7_1, 0), $1944($1_1, 0), $4_1);
    $3 = 0;
    while (1) {
     $6_1 = ($3 << 2) + $1_1 | 0;
     $3 = $3 + 1 | 0;
     $1602($1944($6_1, 0), $1944(($3 << 2) + $1_1 | 0, 0), $4_1);
     $1973($6_1, 0, $1944($6_1, 0) + $4_1 | 0);
     if (($2_1 | 0) != ($3 | 0)) {
      continue
     }
     break;
    };
    $0_1 = $0_1 - $4_1 | 0;
    if ($0_1) {
     continue
    }
    break;
   };
  }
  global$0 = $5_1 + 256 | 0;
 }
 
 function $1684($0_1) {
  return $1936((Math_imul(0 - $0_1 & $0_1, 124511785) >>> 27 | 0) + 71136 | 0, 0);
 }
 
 function $1685($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0;
  $6_1 = $0_1;
  $4_1 = global$0 - 208 | 0;
  global$0 = $4_1;
  $1983($4_1, 8, 1, 0);
  $7_1 = Math_imul($1_1, $2_1);
  label$1 : {
   if (!$7_1) {
    break label$1
   }
   $1973($4_1, 16, $2_1);
   $1973($4_1, 20, $2_1);
   $9 = 0 - $2_1 | 0;
   $0_1 = $2_1;
   $1_1 = $0_1;
   $5_1 = 2;
   while (1) {
    $8 = $1_1 + $2_1 | 0;
    $1_1 = $0_1;
    $0_1 = $0_1 + $8 | 0;
    $1973(($4_1 + 16 | 0) + ($5_1 << 2) | 0, 0, $0_1);
    $5_1 = $5_1 + 1 | 0;
    if ($0_1 >>> 0 < $7_1 >>> 0) {
     continue
    }
    break;
   };
   $1_1 = ($6_1 + $7_1 | 0) + $9 | 0;
   label$3 : {
    if ($6_1 >>> 0 >= $1_1 >>> 0) {
     $5_1 = 0;
     $0_1 = 1;
     $1_1 = 0;
     break label$3;
    }
    $5_1 = 1;
    $0_1 = 1;
    while (1) {
     label$6 : {
      if (($5_1 & 3) == 3) {
       $1677($6_1, $2_1, $3, $0_1, $4_1 + 16 | 0);
       $1678($4_1 + 8 | 0, 2);
       $0_1 = $0_1 + 2 | 0;
       break label$6;
      }
      $5_1 = $0_1 - 1 | 0;
      label$8 : {
       if ($1944(($4_1 + 16 | 0) + ($5_1 << 2) | 0, 0) >>> 0 >= $1_1 - $6_1 >>> 0) {
        $1679($6_1, $2_1, $3, $4_1 + 8 | 0, $0_1, 0, $4_1 + 16 | 0);
        break label$8;
       }
       $1677($6_1, $2_1, $3, $0_1, $4_1 + 16 | 0);
      }
      if (($0_1 | 0) == 1) {
       $1680($4_1 + 8 | 0, 1);
       $0_1 = 0;
       break label$6;
      }
      $1680($4_1 + 8 | 0, $5_1);
      $0_1 = 1;
     }
     $7_1 = $1944($4_1, 8);
     $5_1 = $7_1 | 1;
     $1973($4_1, 8, $5_1);
     $6_1 = $2_1 + $6_1 | 0;
     if ($1_1 >>> 0 > $6_1 >>> 0) {
      continue
     }
     break;
    };
    $5_1 = $7_1 >>> 0 > 1;
    $1_1 = ($1944($4_1, 12) | 0) != 0;
   }
   $1679($6_1, $2_1, $3, $4_1 + 8 | 0, $0_1, 0, $4_1 + 16 | 0);
   if (!($5_1 | ($0_1 | 0) != 1 | $1_1)) {
    break label$1
   }
   while (1) {
    label$13 : {
     if (($0_1 | 0) <= 1) {
      $1_1 = $4_1 + 8 | 0;
      $8 = $1_1;
      $1_1 = $1681($1_1);
      $1678($8, $1_1);
      $5_1 = $1944($4_1, 8);
      $0_1 = $0_1 + $1_1 | 0;
      break label$13;
     }
     $1_1 = $4_1 + 8 | 0;
     $1680($1_1, 2);
     $1973($4_1, 8, $1944($4_1, 8) ^ 7);
     $1678($1_1, 1);
     $10_1 = $6_1 + $9 | 0;
     $7_1 = $4_1 + 16 | 0;
     $8 = $0_1 - 2 | 0;
     $1679($10_1 - $1944($7_1 + ($8 << 2) | 0, 0) | 0, $2_1, $3, $1_1, $0_1 - 1 | 0, 1, $7_1);
     $1680($1_1, 1);
     $5_1 = $1944($4_1, 8) | 1;
     $1973($4_1, 8, $5_1);
     $1679($10_1, $2_1, $3, $1_1, $8, 1, $7_1);
     $0_1 = $8;
    }
    $6_1 = $6_1 + $9 | 0;
    if (($0_1 | 0) != 1) {
     continue
    }
    if ($1944($4_1, 12) | ($5_1 | 0) != 1) {
     continue
    }
    break;
   };
  }
  global$0 = $4_1 + 208 | 0;
 }
 
 function $1686($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  return FUNCTION_TABLE[$2_1 | 0]($0_1, $1_1) | 0;
 }
 
 function $1687($0_1, $1_1) {
  label$1 : {
   if (($1_1 | 0) >= 1024) {
    $0_1 = $0_1 * 8988465674311579538646525.0e283;
    if ($1_1 >>> 0 < 2047) {
     $1_1 = $1_1 - 1023 | 0;
     break label$1;
    }
    $0_1 = $0_1 * 8988465674311579538646525.0e283;
    $1_1 = (($1_1 | 0) >= 3069 ? 3069 : $1_1) - 2046 | 0;
    break label$1;
   }
   if (($1_1 | 0) > -1023) {
    break label$1
   }
   $0_1 = $0_1 * 2.004168360008973e-292;
   if ($1_1 >>> 0 > 4294965304) {
    $1_1 = $1_1 + 969 | 0;
    break label$1;
   }
   $0_1 = $0_1 * 2.004168360008973e-292;
   $1_1 = (($1_1 | 0) <= -2960 ? -2960 : $1_1) + 1938 | 0;
  }
  wasm2js_scratch_store_i32(0, 0);
  wasm2js_scratch_store_i32(1, $1_1 + 1023 << 20);
  return $0_1 * +wasm2js_scratch_load_f64();
 }
 
 function $1688($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0.0, $4_1 = 0;
  $1_1 = global$0 - 16 | 0;
  global$0 = $1_1;
  $4_1 = (wasm2js_scratch_store_f32($0_1), wasm2js_scratch_load_i32(2));
  $2_1 = $4_1 & 2147483647;
  label$1 : {
   if ($2_1 >>> 0 <= 1061752794) {
    if ($2_1 >>> 0 < 964689920) {
     break label$1
    }
    $0_1 = $1598(+$0_1);
    break label$1;
   }
   if ($2_1 >>> 0 <= 1081824209) {
    $3 = +$0_1;
    if ($2_1 >>> 0 <= 1075235811) {
     if (($4_1 | 0) < 0) {
      $0_1 = Math_fround(-$1597($3 + 1.5707963267948966));
      break label$1;
     }
     $0_1 = $1597($3 + -1.5707963267948966);
     break label$1;
    }
    $0_1 = $1598(-((($4_1 | 0) >= 0 ? -3.141592653589793 : 3.141592653589793) + $3));
    break label$1;
   }
   if ($2_1 >>> 0 <= 1088565717) {
    if ($2_1 >>> 0 <= 1085271519) {
     $3 = +$0_1;
     if (($4_1 | 0) < 0) {
      $0_1 = $1597($3 + 4.71238898038469);
      break label$1;
     }
     $0_1 = Math_fround(-$1597($3 + -4.71238898038469));
     break label$1;
    }
    $0_1 = $1598((($4_1 | 0) < 0 ? 6.283185307179586 : -6.283185307179586) + +$0_1);
    break label$1;
   }
   if ($2_1 >>> 0 >= 2139095040) {
    $0_1 = Math_fround($0_1 - $0_1);
    break label$1;
   }
   label$10 : {
    switch ($1600($0_1, $1_1 + 8 | 0) & 3) {
    case 0:
     $0_1 = $1598($1967($1_1, 8));
     break label$1;
    case 1:
     $0_1 = $1597($1967($1_1, 8));
     break label$1;
    case 2:
     $0_1 = $1598(-$1967($1_1, 8));
     break label$1;
    default:
     break label$10;
    };
   }
   $0_1 = Math_fround(-$1597($1967($1_1, 8)));
  }
  global$0 = $1_1 + 16 | 0;
  return $0_1;
 }
 
 function $1690($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = 0, $21_1 = 0, $22_1 = 0, $23_1 = 0, $24 = 0, $25_1 = 0, $26_1 = 0, $27_1 = 0;
  $25_1 = global$0 - 16 | 0;
  global$0 = $25_1;
  $1973($25_1, 12, $2_1);
  $4_1 = global$0 - 144 | 0;
  global$0 = $4_1;
  $3 = $1604($4_1, 0, 144);
  $1973($3, 76, -1);
  $1973($3, 44, $0_1);
  $1973($3, 32, 973);
  $1973($3, 84, $0_1);
  $4_1 = $1_1;
  $21_1 = $2_1;
  $0_1 = 0;
  $10_1 = global$0 - 304 | 0;
  global$0 = $10_1;
  $1944($3, 76);
  label$2 : {
   label$3 : {
    label$4 : {
     label$5 : {
      if ($1944($3, 4)) {
       break label$5
      }
      $1623($3);
      if ($1944($3, 4)) {
       break label$5
      }
      break label$4;
     }
     $1_1 = $1937($4_1, 0);
     if (!$1_1) {
      break label$2
     }
     $27_1 = $10_1 + 16 | 0;
     label$7 : {
      label$8 : {
       label$9 : {
        label$10 : {
         while (1) {
          label$11 : {
           label$13 : {
            if ($1708($1_1 & 255)) {
             while (1) {
              $1_1 = $4_1;
              $4_1 = $4_1 + 1 | 0;
              if ($1708($1937($1_1, 1))) {
               continue
              }
              break;
             };
             $1706($3, 0, 0);
             while (1) {
              $2_1 = $1944($3, 4);
              label$17 : {
               if (($1944($3, 104) | 0) != ($2_1 | 0)) {
                $1973($3, 4, $2_1 + 1 | 0);
                $2_1 = $1937($2_1, 0);
                break label$17;
               }
               $2_1 = $1707($3);
              }
              if ($1708($2_1)) {
               continue
              }
              break;
             };
             $4_1 = $1944($3, 4);
             $1960($3, 112);
             if ((i64toi32_i32$HIGH_BITS | 0) >= 0) {
              $4_1 = $4_1 - 1 | 0;
              $1973($3, 4, $4_1);
             }
             $2_1 = $1960($3, 120);
             $5_1 = $19 + i64toi32_i32$HIGH_BITS | 0;
             $6_1 = $5_1 + 1 | 0;
             $7_1 = $5_1;
             $5_1 = $2_1 + $14 | 0;
             $6_1 = $5_1 >>> 0 < $14 >>> 0 ? $6_1 : $7_1;
             $2_1 = $4_1 - $1944($3, 44) | 0;
             $14 = $5_1 + $2_1 | 0;
             $4_1 = ($2_1 >> 31) + $6_1 | 0;
             $19 = $2_1 >>> 0 > $14 >>> 0 ? $4_1 + 1 | 0 : $4_1;
             break label$13;
            }
            label$20 : {
             label$21 : {
              label$22 : {
               if (($1937($4_1, 0) | 0) == 37) {
                $1_1 = $1937($4_1, 1);
                if (($1_1 | 0) == 42) {
                 break label$22
                }
                if (($1_1 | 0) != 37) {
                 break label$21
                }
               }
               $1706($3, 0, 0);
               label$24 : {
                if (($1937($4_1, 0) | 0) == 37) {
                 while (1) {
                  $1_1 = $1944($3, 4);
                  label$27 : {
                   if (($1944($3, 104) | 0) != ($1_1 | 0)) {
                    $1973($3, 4, $1_1 + 1 | 0);
                    $1_1 = $1937($1_1, 0);
                    break label$27;
                   }
                   $1_1 = $1707($3);
                  }
                  if ($1708($1_1)) {
                   continue
                  }
                  break;
                 };
                 $4_1 = $4_1 + 1 | 0;
                 break label$24;
                }
                $1_1 = $1944($3, 4);
                if (($1944($3, 104) | 0) != ($1_1 | 0)) {
                 $1973($3, 4, $1_1 + 1 | 0);
                 $1_1 = $1937($1_1, 0);
                 break label$24;
                }
                $1_1 = $1707($3);
               }
               if (($1937($4_1, 0) | 0) != ($1_1 | 0)) {
                $1960($3, 112);
                if ((i64toi32_i32$HIGH_BITS | 0) >= 0) {
                 $1973($3, 4, $1944($3, 4) - 1 | 0)
                }
                if (($1_1 | 0) >= 0) {
                 break label$2
                }
                $6_1 = 0;
                if ($22_1) {
                 break label$2
                }
                break label$4;
               }
               $1_1 = $1960($3, 120);
               $2_1 = $19 + i64toi32_i32$HIGH_BITS | 0;
               $5_1 = $2_1 + 1 | 0;
               $7_1 = $2_1;
               $2_1 = $1_1 + $14 | 0;
               $5_1 = $2_1 >>> 0 < $14 >>> 0 ? $5_1 : $7_1;
               $1_1 = $1944($3, 4) - $1944($3, 44) | 0;
               $14 = $2_1 + $1_1 | 0;
               $2_1 = ($1_1 >> 31) + $5_1 | 0;
               $19 = $1_1 >>> 0 > $14 >>> 0 ? $2_1 + 1 | 0 : $2_1;
               $1_1 = $4_1;
               break label$13;
              }
              $12_1 = 0;
              $1_1 = $4_1 + 2 | 0;
              break label$20;
             }
             label$32 : {
              if (!$1721($1_1)) {
               break label$32
              }
              if (($1937($4_1, 2) | 0) != 36) {
               break label$32
              }
              $1_1 = $1937($4_1, 1) - 48 | 0;
              $2_1 = global$0 - 16 | 0;
              $1973($2_1, 12, $21_1);
              $1_1 = ($1_1 >>> 0 > 1 ? ($1_1 << 2) - 4 | 0 : 0) + $21_1 | 0;
              $1973($2_1, 8, $1_1 + 4 | 0);
              $12_1 = $1944($1_1, 0);
              $1_1 = $4_1 + 3 | 0;
              break label$20;
             }
             $12_1 = $1944($21_1, 0);
             $21_1 = $21_1 + 4 | 0;
             $1_1 = $4_1 + 1 | 0;
            }
            $11_1 = 0;
            $4_1 = 0;
            if ($1721($1937($1_1, 0))) {
             while (1) {
              $4_1 = ($1937($1_1, 0) + Math_imul($4_1, 10) | 0) - 48 | 0;
              $2_1 = $1937($1_1, 1);
              $1_1 = $1_1 + 1 | 0;
              if ($1721($2_1)) {
               continue
              }
              break;
             }
            }
            $8 = $1937($1_1, 0);
            if (!(($8 | 0) != 109)) {
             $13 = 0;
             $11_1 = ($12_1 | 0) != 0;
             $8 = $1937($1_1, 1);
             $0_1 = 0;
             $1_1 = $1_1 + 1 | 0;
            }
            $2_1 = $1_1;
            $1_1 = $2_1 + 1 | 0;
            $5_1 = 3;
            $6_1 = $11_1;
            label$37 : {
             label$38 : {
              switch (($8 & 255) - 65 | 0) {
              case 39:
               $7_1 = $2_1 + 2 | 0;
               $2_1 = ($1937($2_1, 1) | 0) == 104;
               $1_1 = $2_1 ? $7_1 : $1_1;
               $5_1 = $2_1 ? -2 : -1;
               break label$37;
              case 43:
               $7_1 = $2_1 + 2 | 0;
               $2_1 = ($1937($2_1, 1) | 0) == 108;
               $1_1 = $2_1 ? $7_1 : $1_1;
               $5_1 = $2_1 ? 3 : 1;
               break label$37;
              case 51:
              case 57:
               $5_1 = 1;
               break label$37;
              case 11:
               $5_1 = 2;
               break label$37;
              case 41:
               break label$37;
              case 0:
              case 2:
              case 4:
              case 5:
              case 6:
              case 18:
              case 23:
              case 26:
              case 32:
              case 34:
              case 35:
              case 36:
              case 37:
              case 38:
              case 40:
              case 45:
              case 46:
              case 47:
              case 50:
              case 52:
              case 55:
               break label$38;
              default:
               break label$7;
              };
             }
             $5_1 = 0;
             $1_1 = $2_1;
            }
            $7_1 = $5_1;
            $2_1 = $1937($1_1, 0);
            $5_1 = ($2_1 & 47) == 3;
            $20_1 = $5_1 ? 1 : $7_1;
            $15_1 = $5_1 ? $2_1 | 32 : $2_1;
            label$43 : {
             if (($15_1 | 0) == 91) {
              break label$43
             }
             label$44 : {
              if (($15_1 | 0) != 110) {
               if (($15_1 | 0) != 99) {
                break label$44
               }
               $4_1 = ($4_1 | 0) <= 1 ? 1 : $4_1;
               break label$43;
              }
              $1749($12_1, $20_1, $14, $19);
              break label$13;
             }
             $1706($3, 0, 0);
             while (1) {
              $2_1 = $1944($3, 4);
              label$47 : {
               if (($1944($3, 104) | 0) != ($2_1 | 0)) {
                $1973($3, 4, $2_1 + 1 | 0);
                $2_1 = $1937($2_1, 0);
                break label$47;
               }
               $2_1 = $1707($3);
              }
              if ($1708($2_1)) {
               continue
              }
              break;
             };
             $2_1 = $1944($3, 4);
             $1960($3, 112);
             if ((i64toi32_i32$HIGH_BITS | 0) >= 0) {
              $2_1 = $2_1 - 1 | 0;
              $1973($3, 4, $2_1);
             }
             $5_1 = $1960($3, 120);
             $6_1 = $19 + i64toi32_i32$HIGH_BITS | 0;
             $5_1 = $5_1 + $14 | 0;
             $6_1 = $14 >>> 0 > $5_1 >>> 0 ? $6_1 + 1 | 0 : $6_1;
             $2_1 = $2_1 - $1944($3, 44) | 0;
             $14 = $2_1 + $5_1 | 0;
             $5_1 = ($2_1 >> 31) + $6_1 | 0;
             $19 = $2_1 >>> 0 > $14 >>> 0 ? $5_1 + 1 | 0 : $5_1;
            }
            $18_1 = $4_1 >> 31;
            $1706($3, $4_1, $18_1);
            $2_1 = $1944($3, 4);
            label$50 : {
             if (($1944($3, 104) | 0) != ($2_1 | 0)) {
              $1973($3, 4, $2_1 + 1 | 0);
              break label$50;
             }
             if (($1707($3) | 0) < 0) {
              break label$8
             }
            }
            $1960($3, 112);
            if ((i64toi32_i32$HIGH_BITS | 0) >= 0) {
             $1973($3, 4, $1944($3, 4) - 1 | 0)
            }
            $9 = $4_1;
            $2_1 = 16;
            label$53 : {
             label$54 : {
              label$55 : {
               label$56 : {
                label$57 : {
                 switch ($15_1 - 88 | 0) {
                 default:
                  $2_1 = $15_1 - 65 | 0;
                  if ($2_1 >>> 0 > 6 | !(1 << $2_1 & 113)) {
                   break label$53
                  }
                 case 9:
                 case 13:
                 case 14:
                 case 15:
                  $1714($10_1 + 8 | 0, $3, $20_1, 0);
                  $4_1 = $1960($3, 120);
                  $5_1 = i64toi32_i32$HIGH_BITS;
                  $2_1 = $1944($3, 4) - $1944($3, 44) | 0;
                  if (($4_1 | 0) != (0 - $2_1 | 0) | (0 - (($2_1 >> 31) + (($2_1 | 0) != 0) | 0) | 0) != ($5_1 | 0)) {
                   break label$55
                  }
                  break label$9;
                 case 3:
                 case 11:
                 case 27:
                  if (($15_1 | 16) == 115) {
                   $1604($10_1 + 32 | 0, -1, 257);
                   $1968($10_1, 32, 0);
                   if (($15_1 | 0) != 115) {
                    break label$54
                   }
                   $1968($10_1, 65, 0);
                   $1968($10_1, 46, 0);
                   $1972($10_1, 42, 0);
                   break label$54;
                  }
                  $2_1 = $1937($1_1, 1);
                  $5_1 = ($2_1 | 0) == 94;
                  $1604($10_1 + 32 | 0, $5_1, 257);
                  $1968($10_1, 32, 0);
                  $6_1 = $5_1 ? $1_1 + 2 | 0 : $1_1 + 1 | 0;
                  label$64 : {
                   label$65 : {
                    label$66 : {
                     $1_1 = $1937(($5_1 ? 2 : 1) + $1_1 | 0, 0);
                     if (($1_1 | 0) != 45) {
                      if (($1_1 | 0) == 93) {
                       break label$66
                      }
                      $5_1 = ($2_1 | 0) != 94;
                      $1_1 = $6_1;
                      break label$64;
                     }
                     $5_1 = ($2_1 | 0) != 94;
                     $1968($10_1, 78, $5_1);
                     break label$65;
                    }
                    $5_1 = ($2_1 | 0) != 94;
                    $1968($10_1, 126, $5_1);
                   }
                   $1_1 = $6_1 + 1 | 0;
                  }
                  while (1) {
                   $2_1 = $1937($1_1, 0);
                   label$69 : {
                    if (($2_1 | 0) != 45) {
                     if (!$2_1) {
                      break label$8
                     }
                     if (($2_1 | 0) == 93) {
                      break label$54
                     }
                     break label$69;
                    }
                    $2_1 = 45;
                    $6_1 = $1937($1_1, 1);
                    if (!$6_1 | ($6_1 | 0) == 93) {
                     break label$69
                    }
                    $8 = $1_1 + 1 | 0;
                    $1_1 = $1937($1_1 - 1 | 0, 0);
                    label$71 : {
                     if ($1_1 >>> 0 >= $6_1 >>> 0) {
                      $2_1 = $6_1;
                      break label$71;
                     }
                     while (1) {
                      $1_1 = $1_1 + 1 | 0;
                      $1968($1_1 + ($10_1 + 32 | 0) | 0, 0, $5_1);
                      $2_1 = $1937($8, 0);
                      if ($2_1 >>> 0 > $1_1 >>> 0) {
                       continue
                      }
                      break;
                     };
                    }
                    $1_1 = $8;
                   }
                   $1968(($2_1 + $10_1 | 0) + 33 | 0, 0, $5_1);
                   $1_1 = $1_1 + 1 | 0;
                   continue;
                  };
                 case 23:
                  $2_1 = 8;
                  break label$56;
                 case 12:
                 case 29:
                  $2_1 = 10;
                  break label$56;
                 case 1:
                 case 2:
                 case 4:
                 case 5:
                 case 6:
                 case 7:
                 case 8:
                 case 10:
                 case 16:
                 case 18:
                 case 19:
                 case 20:
                 case 21:
                 case 22:
                 case 25:
                 case 26:
                 case 28:
                 case 30:
                 case 31:
                  break label$53;
                 case 0:
                 case 24:
                 case 32:
                  break label$56;
                 case 17:
                  break label$57;
                 };
                }
                $2_1 = 0;
               }
               $4_1 = 0;
               $6_1 = 0;
               $8 = 0;
               $16_1 = 0;
               $18_1 = -1;
               $17_1 = -1;
               $24 = global$0 - 16 | 0;
               global$0 = $24;
               $5_1 = $2_1;
               label$1 : {
                if (!(($2_1 | 0) != 1 & $2_1 >>> 0 <= 36)) {
                 $1973(95900, 0, 28);
                 $17_1 = 0;
                 $18_1 = 0;
                 break label$1;
                }
                while (1) {
                 $2_1 = $1944($3, 4);
                 label$510 : {
                  if (($1944($3, 104) | 0) != ($2_1 | 0)) {
                   $1973($3, 4, $2_1 + 1 | 0);
                   $7_1 = $1937($2_1, 0);
                   break label$510;
                  }
                  $7_1 = $1707($3);
                 }
                 if ($1708($7_1)) {
                  continue
                 }
                 break;
                };
                label$711 : {
                 label$812 : {
                  switch ($7_1 - 43 | 0) {
                  case 0:
                  case 2:
                   break label$812;
                  default:
                   break label$711;
                  };
                 }
                 $16_1 = ($7_1 | 0) == 45 ? -1 : 0;
                 $2_1 = $1944($3, 4);
                 if (($1944($3, 104) | 0) != ($2_1 | 0)) {
                  $1973($3, 4, $2_1 + 1 | 0);
                  $7_1 = $1937($2_1, 0);
                  break label$711;
                 }
                 $7_1 = $1707($3);
                }
                label$1013 : {
                 label$1114 : {
                  label$1215 : {
                   label$1316 : {
                    if (!(($5_1 | 0) != 0 & ($5_1 | 0) != 16 | ($7_1 | 0) != 48)) {
                     $2_1 = $1944($3, 4);
                     label$1517 : {
                      if (($1944($3, 104) | 0) != ($2_1 | 0)) {
                       $1973($3, 4, $2_1 + 1 | 0);
                       $7_1 = $1937($2_1, 0);
                       break label$1517;
                      }
                      $7_1 = $1707($3);
                     }
                     if (($7_1 & -33) == 88) {
                      $5_1 = 16;
                      $2_1 = $1944($3, 4);
                      label$18 : {
                       if (($1944($3, 104) | 0) != ($2_1 | 0)) {
                        $1973($3, 4, $2_1 + 1 | 0);
                        $7_1 = $1937($2_1, 0);
                        break label$18;
                       }
                       $7_1 = $1707($3);
                      }
                      if ($1937($7_1 + 71745 | 0, 0) >>> 0 < 16) {
                       break label$1215
                      }
                      $17_1 = 0;
                      $18_1 = 0;
                      $1960($3, 112);
                      if ((i64toi32_i32$HIGH_BITS | 0) >= 0) {
                       $1973($3, 4, $1944($3, 4) - 1 | 0)
                      }
                      $1706($3, 0, 0);
                      break label$1;
                     }
                     if ($5_1) {
                      break label$1316
                     }
                     $5_1 = 8;
                     break label$1215;
                    }
                    $5_1 = $5_1 ? $5_1 : 10;
                    if ($1937($7_1 + 71745 | 0, 0) >>> 0 < $5_1 >>> 0) {
                     break label$1316
                    }
                    $17_1 = 0;
                    $18_1 = 0;
                    $1960($3, 112);
                    if ((i64toi32_i32$HIGH_BITS | 0) >= 0) {
                     $1973($3, 4, $1944($3, 4) - 1 | 0)
                    }
                    $1706($3, 0, 0);
                    $1973(95900, 0, 28);
                    break label$1;
                   }
                   if (($5_1 | 0) != 10) {
                    break label$1215
                   }
                   $2_1 = 0;
                   $6_1 = $7_1 - 48 | 0;
                   if ($6_1 >>> 0 <= 9) {
                    $5_1 = 0;
                    while (1) {
                     $5_1 = Math_imul($5_1, 10) + $6_1 | 0;
                     $4_1 = $5_1 >>> 0 < 429496729;
                     $2_1 = $1944($3, 4);
                     label$25 : {
                      if (($1944($3, 104) | 0) != ($2_1 | 0)) {
                       $1973($3, 4, $2_1 + 1 | 0);
                       $7_1 = $1937($2_1, 0);
                       break label$25;
                      }
                      $7_1 = $1707($3);
                     }
                     $6_1 = $7_1 - 48 | 0;
                     if ($4_1 & $6_1 >>> 0 <= 9) {
                      continue
                     }
                     break;
                    };
                    $2_1 = $5_1;
                   }
                   label$28 : {
                    if ($6_1 >>> 0 > 9) {
                     break label$28
                    }
                    $5_1 = __wasm_i64_mul($2_1, 0, 10, 0);
                    $4_1 = i64toi32_i32$HIGH_BITS;
                    while (1) {
                     $2_1 = $5_1 + $6_1 | 0;
                     $4_1 = $2_1 >>> 0 < $6_1 >>> 0 ? $4_1 + 1 | 0 : $4_1;
                     $8 = $4_1;
                     $5_1 = ($4_1 | 0) == 429496729 & $2_1 >>> 0 >= 2576980378 | $4_1 >>> 0 > 429496729;
                     $4_1 = $1944($3, 4);
                     label$30 : {
                      if (($1944($3, 104) | 0) != ($4_1 | 0)) {
                       $1973($3, 4, $4_1 + 1 | 0);
                       $7_1 = $1937($4_1, 0);
                       break label$30;
                      }
                      $7_1 = $1707($3);
                     }
                     $6_1 = $7_1 - 48 | 0;
                     if ($5_1 | $6_1 >>> 0 > 9) {
                      break label$28
                     }
                     $5_1 = __wasm_i64_mul($2_1, $8, 10, 0);
                     $4_1 = i64toi32_i32$HIGH_BITS;
                     if (($4_1 | 0) == -1 & ($6_1 ^ -1) >>> 0 >= $5_1 >>> 0 | ($4_1 | 0) != -1) {
                      continue
                     }
                     break;
                    };
                    $5_1 = 10;
                    break label$1114;
                   }
                   $5_1 = 10;
                   if ($6_1 >>> 0 <= 9) {
                    break label$1114
                   }
                   break label$1013;
                  }
                  if ($5_1 - 1 & $5_1) {
                   $2_1 = 0;
                   $4_1 = $1937($7_1 + 71745 | 0, 0);
                   if ($5_1 >>> 0 > $4_1 >>> 0) {
                    while (1) {
                     $6_1 = Math_imul($5_1, $6_1) + $4_1 | 0;
                     $9 = $6_1 >>> 0 < 119304647;
                     $2_1 = $1944($3, 4);
                     label$35 : {
                      if (($1944($3, 104) | 0) != ($2_1 | 0)) {
                       $1973($3, 4, $2_1 + 1 | 0);
                       $7_1 = $1937($2_1, 0);
                       break label$35;
                      }
                      $7_1 = $1707($3);
                     }
                     $4_1 = $1937($7_1 + 71745 | 0, 0);
                     if ($9 & $5_1 >>> 0 > $4_1 >>> 0) {
                      continue
                     }
                     break;
                    };
                    $2_1 = $6_1;
                   }
                   if ($4_1 >>> 0 >= $5_1 >>> 0) {
                    break label$1114
                   }
                   while (1) {
                    $6_1 = __wasm_i64_mul($2_1, $8, $5_1, 0);
                    $9 = i64toi32_i32$HIGH_BITS;
                    $4_1 = $4_1 & 255;
                    if (($9 | 0) == -1 & ($4_1 ^ -1) >>> 0 < $6_1 >>> 0) {
                     break label$1114
                    }
                    $2_1 = $4_1 + $6_1 | 0;
                    $8 = $2_1 >>> 0 < $4_1 >>> 0 ? $9 + 1 | 0 : $9;
                    $4_1 = $1944($3, 4);
                    label$3921 : {
                     if (($1944($3, 104) | 0) != ($4_1 | 0)) {
                      $1973($3, 4, $4_1 + 1 | 0);
                      $7_1 = $1937($4_1, 0);
                      break label$3921;
                     }
                     $7_1 = $1707($3);
                    }
                    $4_1 = $1937($7_1 + 71745 | 0, 0);
                    if ($4_1 >>> 0 >= $5_1 >>> 0) {
                     break label$1114
                    }
                    $1779($24, $5_1, 0, 0, 0, $2_1, $8, 0, 0);
                    if (!($1960($24, 8) | i64toi32_i32$HIGH_BITS)) {
                     continue
                    }
                    break;
                   };
                   break label$1114;
                  }
                  $23_1 = $1936((Math_imul($5_1, 23) >>> 5 & 7) + 72001 | 0, 0);
                  $2_1 = 0;
                  $6_1 = $1937($7_1 + 71745 | 0, 0);
                  if ($5_1 >>> 0 > $6_1 >>> 0) {
                   while (1) {
                    $4_1 = $4_1 << $23_1 | $6_1;
                    $9 = $4_1 >>> 0 < 134217728;
                    $2_1 = $1944($3, 4);
                    label$4323 : {
                     if (($1944($3, 104) | 0) != ($2_1 | 0)) {
                      $1973($3, 4, $2_1 + 1 | 0);
                      $7_1 = $1937($2_1, 0);
                      break label$4323;
                     }
                     $7_1 = $1707($3);
                    }
                    $6_1 = $1937($7_1 + 71745 | 0, 0);
                    if ($9 & $5_1 >>> 0 > $6_1 >>> 0) {
                     continue
                    }
                    break;
                   };
                   $2_1 = $4_1;
                  }
                  if ($5_1 >>> 0 <= $6_1 >>> 0) {
                   break label$1114
                  }
                  $9 = $23_1 & 31;
                  if (($23_1 & 63) >>> 0 >= 32) {
                   $4_1 = 0;
                   $26_1 = -1 >>> $9 | 0;
                  } else {
                   $4_1 = -1 >>> $9 | 0;
                   $26_1 = $4_1 | (1 << $9) - 1 << 32 - $9;
                  }
                  $9 = $4_1;
                  if (!$4_1 & $2_1 >>> 0 > $26_1 >>> 0) {
                   break label$1114
                  }
                  while (1) {
                   $7_1 = $23_1 & 31;
                   if (($23_1 & 63) >>> 0 >= 32) {
                    $4_1 = $2_1 << $7_1;
                    $2_1 = 0;
                   } else {
                    $4_1 = (1 << $7_1) - 1 & $2_1 >>> 32 - $7_1 | $8 << $7_1;
                    $2_1 = $2_1 << $7_1;
                   }
                   $8 = $4_1;
                   $2_1 = $6_1 & 255 | $2_1;
                   $4_1 = $1944($3, 4);
                   label$4725 : {
                    if (($1944($3, 104) | 0) != ($4_1 | 0)) {
                     $1973($3, 4, $4_1 + 1 | 0);
                     $7_1 = $1937($4_1, 0);
                     break label$4725;
                    }
                    $7_1 = $1707($3);
                   }
                   $6_1 = $1937($7_1 + 71745 | 0, 0);
                   if ($6_1 >>> 0 >= $5_1 >>> 0) {
                    break label$1114
                   }
                   if (($8 | 0) == ($9 | 0) & $2_1 >>> 0 <= $26_1 >>> 0 | $8 >>> 0 < $9 >>> 0) {
                    continue
                   }
                   break;
                  };
                 }
                 if ($1937($7_1 + 71745 | 0, 0) >>> 0 >= $5_1 >>> 0) {
                  break label$1013
                 }
                 while (1) {
                  $2_1 = $1944($3, 4);
                  label$5026 : {
                   if (($1944($3, 104) | 0) != ($2_1 | 0)) {
                    $1973($3, 4, $2_1 + 1 | 0);
                    $2_1 = $1937($2_1, 0);
                    break label$5026;
                   }
                   $2_1 = $1707($3);
                  }
                  if ($1937($2_1 + 71745 | 0, 0) >>> 0 < $5_1 >>> 0) {
                   continue
                  }
                  break;
                 };
                 $1973(95900, 0, 68);
                 $16_1 = 0;
                 $2_1 = -1;
                 $8 = -1;
                }
                $1960($3, 112);
                if ((i64toi32_i32$HIGH_BITS | 0) >= 0) {
                 $1973($3, 4, $1944($3, 4) - 1 | 0)
                }
                label$5327 : {
                 if (($8 | 0) == -1 & ($2_1 | 0) != -1 | ($8 | 0) != -1) {
                  break label$5327
                 }
                 if (!($16_1 | 1)) {
                  $1973(95900, 0, 68);
                  $17_1 = -2;
                  $18_1 = ($17_1 | 0) != -1 ? -1 : -2;
                  break label$1;
                 }
                 if (($8 | 0) == -1 | ($8 | 0) != -1) {
                  break label$5327
                 }
                 $1973(95900, 0, 68);
                 break label$1;
                }
                $2_1 = $2_1 ^ $16_1;
                $17_1 = $2_1 - $16_1 | 0;
                $4_1 = $16_1 >> 31;
                $18_1 = ($4_1 ^ $8) - ($4_1 + ($2_1 >>> 0 < $16_1 >>> 0) | 0) | 0;
               }
               global$0 = $24 + 16 | 0;
               i64toi32_i32$HIGH_BITS = $18_1;
               $2_1 = $17_1;
               $5_1 = i64toi32_i32$HIGH_BITS;
               $6_1 = $1960($3, 120);
               $8 = i64toi32_i32$HIGH_BITS;
               $4_1 = $1944($3, 4) - $1944($3, 44) | 0;
               if (($6_1 | 0) == (0 - $4_1 | 0) & (0 - (($4_1 >> 31) + (($4_1 | 0) != 0) | 0) | 0) == ($8 | 0)) {
                break label$9
               }
               if (!(!$12_1 | ($15_1 | 0) != 112)) {
                $1973($12_1, 0, $2_1);
                break label$53;
               }
               $1749($12_1, $20_1, $2_1, $5_1);
               break label$53;
              }
              if (!$12_1) {
               break label$53
              }
              $2_1 = $1960($27_1, 0);
              $4_1 = i64toi32_i32$HIGH_BITS;
              $5_1 = $1960($10_1, 8);
              $11_1 = i64toi32_i32$HIGH_BITS;
              label$75 : {
               switch ($20_1 | 0) {
               case 0:
                $8 = global$0 - 32 | 0;
                global$0 = $8;
                $9 = $4_1 & 2147483647;
                $6_1 = $9 - 1065418752 | 0;
                $7_1 = $9 - 1082064896 | 0;
                label$128 : {
                 if (!(($6_1 | 0) == ($7_1 | 0) | $6_1 >>> 0 > $7_1 >>> 0)) {
                  $9 = ($4_1 & 33554431) << 7 | $2_1 >>> 25;
                  $2_1 = $2_1 & 33554431;
                  if (!(($2_1 | 0) == 16777216 ? !($5_1 | $11_1) : $2_1 >>> 0 < 16777216)) {
                   $6_1 = $9 + 1073741825 | 0;
                   break label$128;
                  }
                  $6_1 = $9 + 1073741824 | 0;
                  if ($2_1 ^ 16777216 | $5_1 | $11_1) {
                   break label$128
                  }
                  $6_1 = ($9 & 1) + $6_1 | 0;
                  break label$128;
                 }
                 if (!(!$2_1 & ($9 | 0) == 2147418112 ? !($5_1 | $11_1) : $9 >>> 0 < 2147418112)) {
                  $6_1 = (($4_1 & 33554431) << 7 | $2_1 >>> 25) & 4194303 | 2143289344;
                  break label$128;
                 }
                 $6_1 = 2139095040;
                 if ($9 >>> 0 > 1082064895) {
                  break label$128
                 }
                 $6_1 = 0;
                 $9 = $9 >>> 16 | 0;
                 if ($9 >>> 0 < 16145) {
                  break label$128
                 }
                 $7_1 = $8 + 16 | 0;
                 $6_1 = $4_1 & 65535 | 65536;
                 $1767($7_1, $5_1, $11_1, $2_1, $6_1, $9 - 16129 | 0);
                 $1777($8, $5_1, $11_1, $2_1, $6_1, 16257 - $9 | 0);
                 $2_1 = $1960($8 + 8 | 0, 0);
                 $6_1 = (i64toi32_i32$HIGH_BITS & 33554431) << 7 | $2_1 >>> 25;
                 $11_1 = $1960($8, 0);
                 $5_1 = i64toi32_i32$HIGH_BITS;
                 $9 = $1960($8, 16);
                 $15_1 = i64toi32_i32$HIGH_BITS;
                 $11_1 = ($1960($7_1 + 8 | 0, 0) | $9 | (i64toi32_i32$HIGH_BITS | $15_1)) != 0 | $11_1;
                 $2_1 = $2_1 & 33554431;
                 if (!(($2_1 | 0) == 16777216 ? !($5_1 | $11_1) : $2_1 >>> 0 < 16777216)) {
                  $6_1 = $6_1 + 1 | 0;
                  break label$128;
                 }
                 if ($2_1 ^ 16777216 | $11_1 | $5_1) {
                  break label$128
                 }
                 $6_1 = ($6_1 & 1) + $6_1 | 0;
                }
                global$0 = $8 + 32 | 0;
                $1986($12_1, 0, (wasm2js_scratch_store_i32(2, $4_1 & -2147483648 | $6_1), wasm2js_scratch_load_f32()));
                break label$53;
               case 1:
                $1990($12_1, 0, $1781($5_1, $11_1, $2_1, $4_1));
                break label$53;
               case 2:
                break label$75;
               default:
                break label$53;
               };
              }
              $1983($12_1, 0, $5_1, $11_1);
              $1983($12_1, 8, $2_1, $4_1);
              break label$53;
             }
             $17_1 = ($15_1 | 0) != 99;
             $5_1 = $17_1 ? 31 : $4_1 + 1 | 0;
             label$78 : {
              if (($20_1 | 0) == 1) {
               $2_1 = $12_1;
               if ($11_1) {
                $2_1 = $1755($5_1 << 2);
                if (!$2_1) {
                 break label$10
                }
               }
               $1982($10_1, 296, 0, 0);
               $4_1 = 0;
               while (1) {
                $0_1 = $2_1;
                label$82 : {
                 while (1) {
                  $2_1 = $1944($3, 4);
                  label$84 : {
                   if (($1944($3, 104) | 0) != ($2_1 | 0)) {
                    $1973($3, 4, $2_1 + 1 | 0);
                    $2_1 = $1937($2_1, 0);
                    break label$84;
                   }
                   $2_1 = $1707($3);
                  }
                  if (!$1937(($2_1 + $10_1 | 0) + 33 | 0, 0)) {
                   break label$82
                  }
                  $1968($10_1, 27, $2_1);
                  $13 = $10_1 + 28 | 0;
                  $2_1 = $10_1 + 296 | 0;
                  $7_1 = $2_1 ? $2_1 : 97132;
                  $2_1 = $1944($7_1, 0);
                  __inlined_func$1745 : {
                   label$14 : {
                    $6_1 = $10_1 + 27 | 0;
                    label$210 : {
                     label$311 : {
                      if (!$6_1) {
                       if ($2_1) {
                        break label$311
                       }
                       $2_1 = 0;
                       break __inlined_func$1745;
                      }
                      label$512 : {
                       if ($2_1) {
                        $8 = 1;
                        break label$512;
                       }
                       $2_1 = $1937($6_1, 0);
                       $8 = $2_1 << 24 >> 24;
                       if (($8 | 0) >= 0) {
                        if ($13) {
                         $1973($13, 0, $2_1)
                        }
                        $2_1 = ($8 | 0) != 0;
                        break __inlined_func$1745;
                       }
                       if (!$1944($1944(97e3, 96), 0)) {
                        $2_1 = 1;
                        if (!$13) {
                         break label$210
                        }
                        $1973($13, 0, $1936($6_1, 0) & 57343);
                        $2_1 = 1;
                        break __inlined_func$1745;
                       }
                       $2_1 = $1937($6_1, 0) - 194 | 0;
                       if ($2_1 >>> 0 > 50) {
                        break label$311
                       }
                       $2_1 = $1944(($2_1 << 2) + 72016 | 0, 0);
                       $8 = 0;
                       if (!$8) {
                        break label$14
                       }
                       $6_1 = $6_1 + 1 | 0;
                      }
                      $16_1 = $1937($6_1, 0);
                      $20_1 = $16_1 >>> 3 | 0;
                      if (($20_1 - 16 | ($2_1 >> 26) + $20_1) >>> 0 > 7) {
                       break label$311
                      }
                      while (1) {
                       $8 = $8 - 1 | 0;
                       $2_1 = ($16_1 & 255) - 128 | $2_1 << 6;
                       if (($2_1 | 0) >= 0) {
                        $1973($7_1, 0, 0);
                        if ($13) {
                         $1973($13, 0, $2_1)
                        }
                        $2_1 = 1 - $8 | 0;
                        break __inlined_func$1745;
                       }
                       if (!$8) {
                        break label$14
                       }
                       $6_1 = $6_1 + 1 | 0;
                       $16_1 = $1937($6_1, 0);
                       if (($16_1 & 192) == 128) {
                        continue
                       }
                       break;
                      };
                     }
                     $1973($7_1, 0, 0);
                     $1973(95900, 0, 25);
                     $2_1 = -1;
                    }
                    break __inlined_func$1745;
                   }
                   $1973($7_1, 0, $2_1);
                   $2_1 = -2;
                  }
                  if (($2_1 | 0) == -2) {
                   continue
                  }
                  $13 = 0;
                  if (($2_1 | 0) == -1) {
                   break label$8
                  }
                  if ($0_1) {
                   $1973(($4_1 << 2) + $0_1 | 0, 0, $1944($10_1, 28));
                   $4_1 = $4_1 + 1 | 0;
                  }
                  if (!$11_1 | ($4_1 | 0) != ($5_1 | 0)) {
                   continue
                  }
                  break;
                 };
                 $6_1 = 1;
                 $5_1 = $5_1 << 1 | 1;
                 $2_1 = $1757($0_1, $5_1 << 2);
                 if ($2_1) {
                  continue
                 }
                 break label$7;
                }
                break;
               };
               $13 = 0;
               $5_1 = $0_1;
               $2_1 = $10_1 + 296 | 0;
               if ($2_1) {
                $2_1 = $1944($2_1, 0)
               } else {
                $2_1 = 0
               }
               if ($2_1) {
                break label$8
               }
               break label$78;
              }
              if ($11_1) {
               $4_1 = 0;
               $2_1 = $1755($5_1);
               if (!$2_1) {
                break label$10
               }
               while (1) {
                $0_1 = $2_1;
                while (1) {
                 $2_1 = $1944($3, 4);
                 label$90 : {
                  if (($1944($3, 104) | 0) != ($2_1 | 0)) {
                   $1973($3, 4, $2_1 + 1 | 0);
                   $2_1 = $1937($2_1, 0);
                   break label$90;
                  }
                  $2_1 = $1707($3);
                 }
                 if (!$1937(($2_1 + $10_1 | 0) + 33 | 0, 0)) {
                  $5_1 = 0;
                  $13 = $0_1;
                  break label$78;
                 }
                 $1968($0_1 + $4_1 | 0, 0, $2_1);
                 $4_1 = $4_1 + 1 | 0;
                 if (($5_1 | 0) != ($4_1 | 0)) {
                  continue
                 }
                 break;
                };
                $6_1 = 1;
                $5_1 = $5_1 << 1 | 1;
                $2_1 = $1757($0_1, $5_1);
                if ($2_1) {
                 continue
                }
                break;
               };
               $13 = $0_1;
               $0_1 = 0;
               break label$7;
              }
              $4_1 = 0;
              if ($12_1) {
               while (1) {
                $0_1 = $1944($3, 4);
                label$95 : {
                 if (($1944($3, 104) | 0) != ($0_1 | 0)) {
                  $1973($3, 4, $0_1 + 1 | 0);
                  $0_1 = $1937($0_1, 0);
                  break label$95;
                 }
                 $0_1 = $1707($3);
                }
                if ($1937(($0_1 + $10_1 | 0) + 33 | 0, 0)) {
                 $1968($4_1 + $12_1 | 0, 0, $0_1);
                 $4_1 = $4_1 + 1 | 0;
                 continue;
                } else {
                 $5_1 = 0;
                 $0_1 = $12_1;
                 $13 = $0_1;
                 break label$78;
                }
               }
              }
              while (1) {
               $0_1 = $1944($3, 4);
               label$99 : {
                if (($1944($3, 104) | 0) != ($0_1 | 0)) {
                 $1973($3, 4, $0_1 + 1 | 0);
                 $0_1 = $1937($0_1, 0);
                 break label$99;
                }
                $0_1 = $1707($3);
               }
               if ($1937(($0_1 + $10_1 | 0) + 33 | 0, 0)) {
                continue
               }
               break;
              };
              $0_1 = 0;
              $13 = 0;
              $5_1 = 0;
             }
             $2_1 = $1944($3, 4);
             $1960($3, 112);
             if ((i64toi32_i32$HIGH_BITS | 0) >= 0) {
              $2_1 = $2_1 - 1 | 0;
              $1973($3, 4, $2_1);
             }
             $6_1 = $1960($3, 120);
             $8 = i64toi32_i32$HIGH_BITS;
             $2_1 = $2_1 - $1944($3, 44) | 0;
             $6_1 = $6_1 + $2_1 | 0;
             $8 = ($2_1 >> 31) + $8 | 0;
             $2_1 = $2_1 >>> 0 > $6_1 >>> 0 ? $8 + 1 | 0 : $8;
             if (!($6_1 | $2_1) | !($17_1 | ($6_1 | 0) == ($9 | 0) & ($2_1 | 0) == ($18_1 | 0))) {
              break label$11
             }
             if ($11_1) {
              $1973($12_1, 0, $0_1)
             }
             label$103 : {
              if (($15_1 | 0) == 99) {
               break label$103
              }
              if ($5_1) {
               $1973(($4_1 << 2) + $5_1 | 0, 0, 0)
              }
              if (!$13) {
               $13 = 0;
               break label$103;
              }
              $1968($4_1 + $13 | 0, 0, 0);
             }
             $0_1 = $5_1;
            }
            $2_1 = $1960($3, 120);
            $4_1 = $19 + i64toi32_i32$HIGH_BITS | 0;
            $5_1 = $4_1 + 1 | 0;
            $7_1 = $4_1;
            $4_1 = $2_1 + $14 | 0;
            $5_1 = $4_1 >>> 0 < $14 >>> 0 ? $5_1 : $7_1;
            $2_1 = $1944($3, 4) - $1944($3, 44) | 0;
            $14 = $4_1 + $2_1 | 0;
            $4_1 = ($2_1 >> 31) + $5_1 | 0;
            $19 = $2_1 >>> 0 > $14 >>> 0 ? $4_1 + 1 | 0 : $4_1;
            $22_1 = (($12_1 | 0) != 0) + $22_1 | 0;
           }
           $4_1 = $1_1 + 1 | 0;
           $1_1 = $1937($1_1, 1);
           if ($1_1) {
            continue
           }
           break label$2;
          }
          break;
         };
         $0_1 = $5_1;
         break label$9;
        }
        $6_1 = 1;
        $13 = 0;
        $0_1 = 0;
        break label$7;
       }
       $6_1 = $11_1;
       break label$3;
      }
      $6_1 = $11_1;
     }
     if ($22_1) {
      break label$3
     }
    }
    $22_1 = -1;
   }
   if (!$6_1) {
    break label$2
   }
   $1756($13);
   $1756($0_1);
  }
  global$0 = $10_1 + 304 | 0;
  global$0 = $3 + 144 | 0;
  global$0 = $25_1 + 16 | 0;
  return $22_1;
 }
 
 function $1691($0_1) {
  $0_1 = $0_1 | 0;
  return 0;
 }
 
 function $1692($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  i64toi32_i32$HIGH_BITS = 0;
  return 0;
 }
 
 function $1693($0_1, $1_1) {
  var $2_1 = 0, $3 = 0;
  __inlined_func$1694 : {
   label$1 : {
    $3 = $1_1 & 255;
    if ($3) {
     if ($0_1 & 3) {
      while (1) {
       $2_1 = $1937($0_1, 0);
       if (!$2_1 | ($2_1 | 0) == ($1_1 & 255)) {
        break label$1
       }
       $0_1 = $0_1 + 1 | 0;
       if ($0_1 & 3) {
        continue
       }
       break;
      }
     }
     $2_1 = $1944($0_1, 0);
     label$5 : {
      if (($2_1 ^ -1) & $2_1 - 16843009 & -2139062144) {
       break label$5
      }
      $3 = Math_imul($3, 16843009);
      while (1) {
       $2_1 = $2_1 ^ $3;
       if (($2_1 ^ -1) & $2_1 - 16843009 & -2139062144) {
        break label$5
       }
       $2_1 = $1944($0_1, 4);
       $0_1 = $0_1 + 4 | 0;
       if (!($2_1 - 16843009 & ($2_1 ^ -1) & -2139062144)) {
        continue
       }
       break;
      };
     }
     while (1) {
      $2_1 = $0_1;
      $3 = $1937($0_1, 0);
      if ($3) {
       $0_1 = $2_1 + 1 | 0;
       if (($3 | 0) != ($1_1 & 255)) {
        continue
       }
      }
      break;
     };
     $0_1 = $2_1;
     break __inlined_func$1694;
    }
    $0_1 = $1697($0_1) + $0_1 | 0;
    break __inlined_func$1694;
   }
  }
  return ($1937($0_1, 0) | 0) == ($1_1 & 255) ? $0_1 : 0;
 }
 
 function $1695($0_1, $1_1) {
  var $2_1 = 0, $3 = 0;
  $3 = $1937($1_1, 0);
  $2_1 = $1937($0_1, 0);
  label$1 : {
   if (!$2_1 | ($3 & 255) != ($2_1 | 0)) {
    break label$1
   }
   while (1) {
    $3 = $1937($1_1, 1);
    $2_1 = $1937($0_1, 1);
    if (!$2_1) {
     break label$1
    }
    $1_1 = $1_1 + 1 | 0;
    $0_1 = $0_1 + 1 | 0;
    if (($3 & 255) == ($2_1 | 0)) {
     continue
    }
    break;
   };
  }
  return $2_1 - ($3 & 255) | 0;
 }
 
 function $1697($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0;
  $1_1 = $0_1;
  label$1 : {
   if ($1_1 & 3) {
    while (1) {
     if (!$1937($1_1, 0)) {
      break label$1
     }
     $1_1 = $1_1 + 1 | 0;
     if ($1_1 & 3) {
      continue
     }
     break;
    }
   }
   while (1) {
    $2_1 = $1_1;
    $1_1 = $1_1 + 4 | 0;
    $3 = $1944($2_1, 0);
    if (!(($3 ^ -1) & $3 - 16843009 & -2139062144)) {
     continue
    }
    break;
   };
   while (1) {
    $1_1 = $2_1;
    $2_1 = $1_1 + 1 | 0;
    if ($1937($1_1, 0)) {
     continue
    }
    break;
   };
  }
  return $1_1 - $0_1 | 0;
 }
 
 function $1699($0_1, $1_1, $2_1) {
  var $3 = 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      if (($0_1 ^ $1_1) & 3) {
       break label$4
      }
      $3 = ($2_1 | 0) != 0;
      label$5 : {
       if (!($1_1 & 3) | !$2_1) {
        break label$5
       }
       while (1) {
        $3 = $1937($1_1, 0);
        $1968($0_1, 0, $3);
        if (!$3) {
         break label$1
        }
        $0_1 = $0_1 + 1 | 0;
        $2_1 = $2_1 - 1 | 0;
        $3 = ($2_1 | 0) != 0;
        $1_1 = $1_1 + 1 | 0;
        if (!($1_1 & 3)) {
         break label$5
        }
        if ($2_1) {
         continue
        }
        break;
       };
      }
      if (!$3) {
       break label$2
      }
      if (!$1937($1_1, 0)) {
       break label$1
      }
      if ($2_1 >>> 0 < 4) {
       break label$4
      }
      while (1) {
       $3 = $1944($1_1, 0);
       if (($3 ^ -1) & $3 - 16843009 & -2139062144) {
        break label$3
       }
       $1973($0_1, 0, $3);
       $0_1 = $0_1 + 4 | 0;
       $1_1 = $1_1 + 4 | 0;
       $2_1 = $2_1 - 4 | 0;
       if ($2_1 >>> 0 > 3) {
        continue
       }
       break;
      };
     }
     if (!$2_1) {
      break label$2
     }
    }
    while (1) {
     $3 = $1937($1_1, 0);
     $1968($0_1, 0, $3);
     if (!$3) {
      break label$1
     }
     $0_1 = $0_1 + 1 | 0;
     $1_1 = $1_1 + 1 | 0;
     $2_1 = $2_1 - 1 | 0;
     if ($2_1) {
      continue
     }
     break;
    };
   }
   $2_1 = 0;
  }
  $1604($0_1, 0, $2_1);
 }
 
 function $1706($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $1983($0_1, 112, $1_1, $2_1);
  $3 = $1944($0_1, 44);
  $4_1 = $1944($0_1, 4);
  $3 = $3 - $4_1 | 0;
  $1983($0_1, 120, $3, $3 >> 31);
  $3 = $1944($0_1, 8);
  label$1 : {
   if (!($1_1 | $2_1)) {
    break label$1
   }
   $5_1 = $3 - $4_1 | 0;
   $6_1 = $5_1 >> 31;
   if (($2_1 | 0) >= ($6_1 | 0) & $1_1 >>> 0 >= $5_1 >>> 0 | ($2_1 | 0) > ($6_1 | 0)) {
    break label$1
   }
   $3 = $1_1 + $4_1 | 0;
  }
  $1973($0_1, 104, $3);
 }
 
 function $1707($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  $4_1 = $1960($0_1, 120);
  $1_1 = i64toi32_i32$HIGH_BITS;
  $3 = $1944($0_1, 4);
  $2_1 = $1944($0_1, 44);
  $7_1 = $3 - $2_1 | 0;
  $4_1 = $4_1 + $7_1 | 0;
  label$1 : {
   $5_1 = $1960($0_1, 112);
   $6_1 = i64toi32_i32$HIGH_BITS;
   $1_1 = ($7_1 >> 31) + $1_1 | 0;
   $1_1 = $4_1 >>> 0 < $7_1 >>> 0 ? $1_1 + 1 | 0 : $1_1;
   if (!(($6_1 | 0) <= ($1_1 | 0) & $4_1 >>> 0 >= $5_1 >>> 0 | ($1_1 | 0) > ($6_1 | 0) ? $5_1 | $6_1 : 0)) {
    $3 = global$0 - 16 | 0;
    global$0 = $3;
    $2_1 = -1;
    label$10 : {
     if ($1623($0_1)) {
      break label$10
     }
     if ((FUNCTION_TABLE[$1944($0_1, 32) | 0]($0_1, $3 + 15 | 0, 1) | 0) != 1) {
      break label$10
     }
     $2_1 = $1937($3, 15);
    }
    global$0 = $3 + 16 | 0;
    $6_1 = $2_1;
    if (($2_1 | 0) >= 0) {
     break label$1
    }
    $3 = $1944($0_1, 4);
    $2_1 = $1944($0_1, 44);
   }
   $1983($0_1, 112, -1, -1);
   $1973($0_1, 104, $3);
   $6_1 = $0_1;
   $0_1 = $2_1 - $3 | 0;
   $4_1 = $0_1 + $4_1 | 0;
   $1_1 = ($0_1 >> 31) + $1_1 | 0;
   $1983($6_1, 120, $4_1, $0_1 >>> 0 > $4_1 >>> 0 ? $1_1 + 1 | 0 : $1_1);
   return -1;
  }
  $2_1 = $1_1;
  $5_1 = $1_1 + 1 | 0;
  $1_1 = $4_1 + 1 | 0;
  $7_1 = $1_1 ? $2_1 : $5_1;
  $4_1 = $1944($0_1, 4);
  $3 = $1944($0_1, 8);
  $2_1 = $1960($0_1, 112);
  $5_1 = i64toi32_i32$HIGH_BITS;
  label$4 : {
   if (!($2_1 | $5_1)) {
    break label$4
   }
   $5_1 = $5_1 - ($7_1 + ($1_1 >>> 0 > $2_1 >>> 0) | 0) | 0;
   $8 = $3 - $4_1 | 0;
   $9 = $8 >> 31;
   $2_1 = $2_1 - $1_1 | 0;
   if (($5_1 | 0) >= ($9 | 0) & $2_1 >>> 0 >= $8 >>> 0 | ($5_1 | 0) > ($9 | 0)) {
    break label$4
   }
   $3 = $4_1 + $2_1 | 0;
  }
  $1973($0_1, 104, $3);
  $5_1 = $0_1;
  $2_1 = $1_1;
  $1_1 = $1944($0_1, 44);
  $0_1 = $1_1 - $4_1 | 0;
  $3 = $2_1 + $0_1 | 0;
  $2_1 = ($0_1 >> 31) + $7_1 | 0;
  $1983($5_1, 120, $3, $0_1 >>> 0 > $3 >>> 0 ? $2_1 + 1 | 0 : $2_1);
  if ($1_1 >>> 0 >= $4_1 >>> 0) {
   $1968($4_1 - 1 | 0, 0, $6_1)
  }
  return $6_1;
 }
 
 function $1708($0_1) {
  return ($0_1 | 0) == 32 | $0_1 - 9 >>> 0 < 5;
 }
 
 function $1709($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  $1983($0_1, 0, $1_1, $2_1);
  $1983($0_1, 8, $3, $4_1 & 65535 | ($8 >>> 16 & 32768 | $4_1 >>> 16 & 32767) << 16);
 }
 
 function $1710($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0, $7_1 = 0;
  $6_1 = global$0 - 80 | 0;
  global$0 = $6_1;
  label$1 : {
   if (($5_1 | 0) >= 16384) {
    $7_1 = $6_1 + 32 | 0;
    $1778($7_1, $1_1, $2_1, $3, $4_1, 0, 0, 0, 2147352576);
    $3 = $1960($7_1 + 8 | 0, 0);
    $4_1 = i64toi32_i32$HIGH_BITS;
    $1_1 = $1960($6_1, 32);
    $2_1 = i64toi32_i32$HIGH_BITS;
    if ($5_1 >>> 0 < 32767) {
     $5_1 = $5_1 - 16383 | 0;
     break label$1;
    }
    $7_1 = $6_1 + 16 | 0;
    $1778($7_1, $1_1, $2_1, $3, $4_1, 0, 0, 0, 2147352576);
    $5_1 = (($5_1 | 0) >= 49149 ? 49149 : $5_1) - 32766 | 0;
    $3 = $1960($7_1 + 8 | 0, 0);
    $4_1 = i64toi32_i32$HIGH_BITS;
    $1_1 = $1960($6_1, 16);
    $2_1 = i64toi32_i32$HIGH_BITS;
    break label$1;
   }
   if (($5_1 | 0) > -16383) {
    break label$1
   }
   $7_1 = $6_1 - -64 | 0;
   $1778($7_1, $1_1, $2_1, $3, $4_1, 0, 0, 0, 7471104);
   $3 = $1960($7_1 + 8 | 0, 0);
   $4_1 = i64toi32_i32$HIGH_BITS;
   $1_1 = $1960($6_1, 64);
   $2_1 = i64toi32_i32$HIGH_BITS;
   if ($5_1 >>> 0 > 4294934644) {
    $5_1 = $5_1 + 16269 | 0;
    break label$1;
   }
   $7_1 = $6_1 + 48 | 0;
   $1778($7_1, $1_1, $2_1, $3, $4_1, 0, 0, 0, 7471104);
   $5_1 = (($5_1 | 0) <= -48920 ? -48920 : $5_1) + 32538 | 0;
   $3 = $1960($7_1 + 8 | 0, 0);
   $4_1 = i64toi32_i32$HIGH_BITS;
   $1_1 = $1960($6_1, 48);
   $2_1 = i64toi32_i32$HIGH_BITS;
  }
  $1778($6_1, $1_1, $2_1, $3, $4_1, 0, 0, 0, $5_1 + 16383 << 16);
  $1983($0_1, 8, $1960($6_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
  $1983($0_1, 0, $1960($6_1, 0), i64toi32_i32$HIGH_BITS);
  global$0 = $6_1 + 80 | 0;
 }
 
 function $1712($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  var $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = 0;
  $11_1 = global$0 - 128 | 0;
  global$0 = $11_1;
  label$1 : {
   label$2 : {
    label$3 : {
     if (!$1768($5_1, $6_1, $7_1, $8, 0, 0, 0, 0)) {
      break label$3
     }
     $9 = $8 & 65535;
     $10_1 = $8 >>> 16 & 32767;
     __inlined_func$1711 : {
      label$10 : {
       if (($10_1 | 0) != 32767) {
        $12_1 = 4;
        if ($10_1) {
         break label$10
        }
        $10_1 = $5_1 | $7_1 | ($6_1 | $9) ? 3 : 2;
        break __inlined_func$1711;
       }
       $12_1 = !($5_1 | $7_1 | ($6_1 | $9));
      }
      $10_1 = $12_1;
     }
     $18_1 = $4_1 >>> 16 | 0;
     $13 = $18_1 & 32767;
     if (($13 | 0) == 32767) {
      break label$3
     }
     if ($10_1) {
      break label$2
     }
    }
    $10_1 = $11_1 + 16 | 0;
    $1778($10_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8);
    $4_1 = $1960($11_1, 16);
    $3 = i64toi32_i32$HIGH_BITS;
    $2_1 = $1960($10_1 + 8 | 0, 0);
    $1_1 = i64toi32_i32$HIGH_BITS;
    $1770($11_1, $4_1, $3, $2_1, $1_1, $4_1, $3, $2_1, $1_1);
    $3 = $1960($11_1 + 8 | 0, 0);
    $4_1 = i64toi32_i32$HIGH_BITS;
    $7_1 = $1960($11_1, 0);
    $8 = i64toi32_i32$HIGH_BITS;
    break label$1;
   }
   $12_1 = $3;
   $14 = $4_1 & 2147483647;
   $10_1 = $7_1;
   $9 = $8 & 2147483647;
   if (($1768($1_1, $2_1, $12_1, $14, $5_1, $6_1, $7_1, $9) | 0) <= 0) {
    if ($1768($1_1, $2_1, $12_1, $14, $5_1, $6_1, $10_1, $9)) {
     $7_1 = $1_1;
     $8 = $2_1;
     break label$1;
    }
    $1778($11_1 + 112 | 0, $1_1, $2_1, $3, $4_1, 0, 0, 0, 0);
    $3 = $1960($11_1 + 120 | 0, 0);
    $4_1 = i64toi32_i32$HIGH_BITS;
    $7_1 = $1960($11_1, 112);
    $8 = i64toi32_i32$HIGH_BITS;
    break label$1;
   }
   $15_1 = $8 >>> 16 & 32767;
   label$6 : {
    if ($13) {
     $7_1 = $1_1;
     $8 = $2_1;
     break label$6;
    }
    $1778($11_1 + 96 | 0, $1_1, $2_1, $12_1, $14, 0, 0, 0, 1081540608);
    $12_1 = $1960($11_1 + 104 | 0, 0);
    $7_1 = i64toi32_i32$HIGH_BITS;
    $14 = $7_1;
    $13 = ($7_1 >>> 16 | 0) - 120 | 0;
    $7_1 = $1960($11_1, 96);
    $8 = i64toi32_i32$HIGH_BITS;
   }
   if (!$15_1) {
    $1778($11_1 + 80 | 0, $5_1, $6_1, $10_1, $9, 0, 0, 0, 1081540608);
    $10_1 = $1960($11_1 + 88 | 0, 0);
    $5_1 = i64toi32_i32$HIGH_BITS;
    $9 = $5_1;
    $15_1 = ($9 >>> 16 | 0) - 120 | 0;
    $5_1 = $1960($11_1, 80);
    $6_1 = i64toi32_i32$HIGH_BITS;
   }
   $16_1 = $10_1;
   $19 = $9 & 65535 | 65536;
   $14 = $14 & 65535 | 65536;
   if (($13 | 0) > ($15_1 | 0)) {
    while (1) {
     $9 = $12_1 - $16_1 | 0;
     $10_1 = ($6_1 | 0) == ($8 | 0) & $5_1 >>> 0 > $7_1 >>> 0 | $6_1 >>> 0 > $8 >>> 0;
     $17_1 = $9 - $10_1 | 0;
     $9 = ($14 - (($12_1 >>> 0 < $16_1 >>> 0) + $19 | 0) | 0) - ($9 >>> 0 < $10_1 >>> 0) | 0;
     label$11 : {
      if (($9 | 0) >= 0) {
       $10_1 = $7_1;
       $7_1 = $7_1 - $5_1 | 0;
       $8 = $8 - (($5_1 >>> 0 > $10_1 >>> 0) + $6_1 | 0) | 0;
       if (!($7_1 | $17_1 | ($8 | $9))) {
        $1778($11_1 + 32 | 0, $1_1, $2_1, $3, $4_1, 0, 0, 0, 0);
        $3 = $1960($11_1 + 40 | 0, 0);
        $4_1 = i64toi32_i32$HIGH_BITS;
        $7_1 = $1960($11_1, 32);
        $8 = i64toi32_i32$HIGH_BITS;
        break label$1;
       }
       $12_1 = $17_1 << 1 | $8 >>> 31;
       $10_1 = $9 << 1 | $17_1 >>> 31;
       break label$11;
      }
      $10_1 = $14 << 1 | $12_1 >>> 31;
      $12_1 = $12_1 << 1 | $8 >>> 31;
     }
     $14 = $10_1;
     $8 = $8 << 1 | $7_1 >>> 31;
     $7_1 = $7_1 << 1;
     $13 = $13 - 1 | 0;
     if (($13 | 0) > ($15_1 | 0)) {
      continue
     }
     break;
    };
    $13 = $15_1;
   }
   $15_1 = $12_1 - $16_1 | 0;
   $9 = ($6_1 | 0) == ($8 | 0) & $5_1 >>> 0 > $7_1 >>> 0 | $6_1 >>> 0 > $8 >>> 0;
   $10_1 = $15_1 - $9 | 0;
   label$14 : {
    $9 = ($14 - (($12_1 >>> 0 < $16_1 >>> 0) + $19 | 0) | 0) - ($9 >>> 0 > $15_1 >>> 0) | 0;
    if (!(($9 | 0) > 0 | ($9 | 0) >= 0)) {
     $10_1 = $12_1;
     $9 = $14;
     break label$14;
    }
    $12_1 = $7_1;
    $7_1 = $7_1 - $5_1 | 0;
    $8 = $8 - (($5_1 >>> 0 > $12_1 >>> 0) + $6_1 | 0) | 0;
    if ($7_1 | $10_1 | ($8 | $9)) {
     break label$14
    }
    $1778($11_1 + 48 | 0, $1_1, $2_1, $3, $4_1, 0, 0, 0, 0);
    $3 = $1960($11_1 + 56 | 0, 0);
    $4_1 = i64toi32_i32$HIGH_BITS;
    $7_1 = $1960($11_1, 48);
    $8 = i64toi32_i32$HIGH_BITS;
    break label$1;
   }
   if ($9 >>> 0 <= 65535) {
    while (1) {
     $1_1 = $8 >>> 31 | 0;
     $13 = $13 - 1 | 0;
     $8 = $8 << 1 | $7_1 >>> 31;
     $7_1 = $7_1 << 1;
     $9 = $9 << 1 | $10_1 >>> 31;
     $10_1 = $1_1 | $10_1 << 1;
     if ($9 >>> 0 < 65536) {
      continue
     }
     break;
    }
   }
   $1_1 = $18_1 & 32768;
   if (($13 | 0) <= 0) {
    $1778($11_1 - -64 | 0, $7_1, $8, $10_1, $9 & 65535 | ($1_1 | $13 + 120) << 16, 0, 0, 0, 1065811968);
    $3 = $1960($11_1 + 72 | 0, 0);
    $4_1 = i64toi32_i32$HIGH_BITS;
    $7_1 = $1960($11_1, 64);
    $8 = i64toi32_i32$HIGH_BITS;
    break label$1;
   }
   $3 = $10_1;
   $4_1 = $9 & 65535 | ($1_1 | $13) << 16;
  }
  $1983($0_1, 0, $7_1, $8);
  $1983($0_1, 8, $3, $4_1);
  global$0 = $11_1 + 128 | 0;
 }
 
 function $1714($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = 0, $21_1 = 0, $22_1 = 0, $23_1 = 0, $24 = 0, $25_1 = 0, $26_1 = 0, $27_1 = 0, $28_1 = 0.0, $29_1 = 0, $30 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $22_1 = global$0 - 48 | 0;
  global$0 = $22_1;
  label$1 : {
   if ($2_1 >>> 0 <= 2) {
    $7_1 = $1_1 + 4 | 0;
    $2_1 = $2_1 << 2;
    $19 = $1944($2_1 + 71244 | 0, 0);
    $16_1 = $1944($2_1 + 71232 | 0, 0);
    while (1) {
     $2_1 = $1944($1_1, 4);
     label$4 : {
      if (($1944($1_1, 104) | 0) != ($2_1 | 0)) {
       $1973($7_1, 0, $2_1 + 1 | 0);
       $2_1 = $1937($2_1, 0);
       break label$4;
      }
      $2_1 = $1707($1_1);
     }
     if ($1708($2_1)) {
      continue
     }
     break;
    };
    $5_1 = 1;
    label$6 : {
     label$7 : {
      switch ($2_1 - 43 | 0) {
      case 0:
      case 2:
       break label$7;
      default:
       break label$6;
      };
     }
     $5_1 = ($2_1 | 0) == 45 ? -1 : 1;
     $2_1 = $1944($1_1, 4);
     if (($1944($1_1, 104) | 0) != ($2_1 | 0)) {
      $1973($7_1, 0, $2_1 + 1 | 0);
      $2_1 = $1937($2_1, 0);
      break label$6;
     }
     $2_1 = $1707($1_1);
    }
    label$9 : {
     label$10 : {
      while (1) {
       if (($1936($6_1 + 1085 | 0, 0) | 0) == ($2_1 | 32)) {
        label$13 : {
         if ($6_1 >>> 0 > 6) {
          break label$13
         }
         $2_1 = $1944($1_1, 4);
         if (($1944($1_1, 104) | 0) != ($2_1 | 0)) {
          $1973($7_1, 0, $2_1 + 1 | 0);
          $2_1 = $1937($2_1, 0);
          break label$13;
         }
         $2_1 = $1707($1_1);
        }
        $6_1 = $6_1 + 1 | 0;
        if (($6_1 | 0) != 8) {
         continue
        }
        break label$10;
       }
       break;
      };
      if (($6_1 | 0) != 3) {
       if (($6_1 | 0) == 8) {
        break label$10
       }
       if (!$3 | $6_1 >>> 0 < 4) {
        break label$9
       }
       if (($6_1 | 0) == 8) {
        break label$10
       }
      }
      $1960($1_1, 112);
      $1_1 = i64toi32_i32$HIGH_BITS;
      if (($1_1 | 0) >= 0) {
       $1973($7_1, 0, $1944($7_1, 0) - 1 | 0)
      }
      if (!$3 | $6_1 >>> 0 < 4) {
       break label$10
      }
      $1_1 = ($1_1 | 0) < 0;
      while (1) {
       if (!$1_1) {
        $1973($7_1, 0, $1944($7_1, 0) - 1 | 0)
       }
       $6_1 = $6_1 - 1 | 0;
       if ($6_1 >>> 0 > 3) {
        continue
       }
       break;
      };
     }
     $3 = 0;
     $2_1 = global$0 - 16 | 0;
     global$0 = $2_1;
     $5_1 = (wasm2js_scratch_store_f32(Math_fround(Math_fround($5_1 | 0) * Math_fround(Infinity))), wasm2js_scratch_load_i32(2));
     $1_1 = $5_1 & 2147483647;
     label$11 : {
      if ($1_1 - 8388608 >>> 0 <= 2130706431) {
       $16_1 = $1_1 << 25;
       $12_1 = ($1_1 >>> 7 | 0) + 1065353216 | 0;
       $1_1 = 0;
       break label$11;
      }
      if ($1_1 >>> 0 >= 2139095040) {
       $16_1 = $5_1 << 25;
       $12_1 = $5_1 >>> 7 | 2147418112;
       $1_1 = 0;
       break label$11;
      }
      if (!$1_1) {
       $16_1 = 0;
       $1_1 = 0;
       break label$11;
      }
      $3 = $1_1;
      $1_1 = Math_clz32($1_1);
      $1767($2_1, $3, 0, 0, 0, $1_1 + 81 | 0);
      $16_1 = $1960($2_1 + 8 | 0, 0);
      $12_1 = i64toi32_i32$HIGH_BITS ^ 65536 | 16265 - $1_1 << 16;
      $3 = $1960($2_1, 0);
      $1_1 = i64toi32_i32$HIGH_BITS;
     }
     $1983($22_1, 0, $3, $1_1);
     $1983($22_1, 8, $16_1, $5_1 & -2147483648 | $12_1);
     global$0 = $2_1 + 16 | 0;
     $5_1 = $1960($22_1 + 8 | 0, 0);
     $2_1 = i64toi32_i32$HIGH_BITS;
     $12_1 = $1960($22_1, 0);
     $18_1 = i64toi32_i32$HIGH_BITS;
     break label$1;
    }
    label$19 : {
     label$20 : {
      label$21 : {
       if ($6_1) {
        break label$21
       }
       $6_1 = 0;
       while (1) {
        if (($1936($6_1 + 7861 | 0, 0) | 0) != ($2_1 | 32)) {
         break label$21
        }
        label$23 : {
         if ($6_1 >>> 0 > 1) {
          break label$23
         }
         $2_1 = $1944($1_1, 4);
         if (($1944($1_1, 104) | 0) != ($2_1 | 0)) {
          $1973($7_1, 0, $2_1 + 1 | 0);
          $2_1 = $1937($2_1, 0);
          break label$23;
         }
         $2_1 = $1707($1_1);
        }
        $6_1 = $6_1 + 1 | 0;
        if (($6_1 | 0) != 3) {
         continue
        }
        break;
       };
       break label$20;
      }
      label$25 : {
       switch ($6_1 | 0) {
       case 0:
        label$27 : {
         if (($2_1 | 0) != 48) {
          break label$27
         }
         $6_1 = $1944($1_1, 4);
         label$28 : {
          if (($1944($1_1, 104) | 0) != ($6_1 | 0)) {
           $1973($7_1, 0, $6_1 + 1 | 0);
           $14 = $1937($6_1, 0);
           break label$28;
          }
          $14 = $1707($1_1);
         }
         if (($14 & -33) == 88) {
          $25_1 = $22_1 + 16 | 0;
          $6_1 = 0;
          $7_1 = global$0 - 432 | 0;
          global$0 = $7_1;
          $9 = $1_1;
          $2_1 = $1944($1_1, 4);
          label$14 : {
           if (($1944($1_1, 104) | 0) != ($2_1 | 0)) {
            $1973($9, 4, $2_1 + 1 | 0);
            $14 = $1937($2_1, 0);
            break label$14;
           }
           $14 = $1707($9);
          }
          label$35 : {
           label$46 : {
            while (1) {
             label$5 : {
              if (($14 | 0) != 48) {
               if (($14 | 0) != 46) {
                break label$35
               }
               $1_1 = $1944($9, 4);
               if (($1944($9, 104) | 0) == ($1_1 | 0)) {
                break label$5
               }
               $1973($9, 4, $1_1 + 1 | 0);
               $14 = $1937($1_1, 0);
               break label$46;
              }
              $1_1 = $1944($9, 4);
              if (($1944($9, 104) | 0) != ($1_1 | 0)) {
               $1973($9, 4, $1_1 + 1 | 0);
               $14 = $1937($1_1, 0);
              } else {
               $14 = $1707($9)
              }
              $8 = 1;
              continue;
             }
             break;
            };
            $14 = $1707($9);
           }
           $24 = 1;
           if (($14 | 0) != 48) {
            break label$35
           }
           while (1) {
            $1_1 = $18_1 - 1 | 0;
            $12_1 = $12_1 - 1 | 0;
            $18_1 = ($12_1 | 0) != -1 ? $1_1 + 1 | 0 : $1_1;
            $1_1 = $1944($9, 4);
            label$109 : {
             if (($1944($9, 104) | 0) != ($1_1 | 0)) {
              $1973($9, 4, $1_1 + 1 | 0);
              $14 = $1937($1_1, 0);
              break label$109;
             }
             $14 = $1707($9);
            }
            if (($14 | 0) == 48) {
             continue
            }
            break;
           };
           $8 = 1;
          }
          $13 = 1073676288;
          $1_1 = 0;
          $2_1 = 0;
          while (1) {
           label$1211 : {
            $26_1 = $14 | 32;
            label$1412 : {
             label$15 : {
              $27_1 = $14 - 48 | 0;
              if ($27_1 >>> 0 < 10) {
               break label$15
              }
              if (($14 | 0) != 46 & $26_1 - 97 >>> 0 >= 6) {
               break label$1211
              }
              if (($14 | 0) != 46) {
               break label$15
              }
              if ($24) {
               break label$1211
              }
              $24 = 1;
              $12_1 = $1_1;
              $18_1 = $2_1;
              break label$1412;
             }
             $8 = ($14 | 0) > 57 ? $26_1 - 87 | 0 : $27_1;
             label$1713 : {
              if (!($1_1 >>> 0 > 7 & ($2_1 | 0) >= 0 | ($2_1 | 0) > 0)) {
               $21_1 = $8 + ($21_1 << 4) | 0;
               break label$1713;
              }
              if (!(!$2_1 & $1_1 >>> 0 > 28 | ($2_1 | 0) != 0)) {
               $14 = $7_1 + 48 | 0;
               $1773($14, $8);
               $8 = $7_1 + 32 | 0;
               $1778($8, $20_1, $23_1, $6_1, $13, 0, 0, 0, 1073414144);
               $26_1 = $7_1 + 16 | 0;
               $27_1 = $1960($7_1, 48);
               $29_1 = i64toi32_i32$HIGH_BITS;
               $14 = $1960($14 + 8 | 0, 0);
               $30 = i64toi32_i32$HIGH_BITS;
               $20_1 = $1960($7_1, 32);
               $23_1 = i64toi32_i32$HIGH_BITS;
               $6_1 = $1960($8 + 8 | 0, 0);
               $13 = i64toi32_i32$HIGH_BITS;
               $1778($26_1, $27_1, $29_1, $14, $30, $20_1, $23_1, $6_1, $13);
               $1766($7_1, $1960($7_1, 16), i64toi32_i32$HIGH_BITS, $1960($26_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, $4_1, $10_1, $17_1, $15_1);
               $17_1 = $1960($7_1 + 8 | 0, 0);
               $15_1 = i64toi32_i32$HIGH_BITS;
               $4_1 = $1960($7_1, 0);
               $10_1 = i64toi32_i32$HIGH_BITS;
               break label$1713;
              }
              if ($11_1 | !$8) {
               break label$1713
              }
              $8 = $7_1 + 80 | 0;
              $1778($8, $20_1, $23_1, $6_1, $13, 0, 0, 0, 1073610752);
              $11_1 = $7_1 - -64 | 0;
              $1766($11_1, $1960($7_1, 80), i64toi32_i32$HIGH_BITS, $1960($8 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, $4_1, $10_1, $17_1, $15_1);
              $17_1 = $1960($11_1 + 8 | 0, 0);
              $15_1 = i64toi32_i32$HIGH_BITS;
              $11_1 = 1;
              $4_1 = $1960($7_1, 64);
              $10_1 = i64toi32_i32$HIGH_BITS;
             }
             $1_1 = $1_1 + 1 | 0;
             $2_1 = $1_1 ? $2_1 : $2_1 + 1 | 0;
             $8 = 1;
            }
            $14 = $1944($9, 4);
            if (($1944($9, 104) | 0) != ($14 | 0)) {
             $1973($9, 4, $14 + 1 | 0);
             $14 = $1937($14, 0);
            } else {
             $14 = $1707($9)
            }
            continue;
           }
           break;
          };
          label$2114 : {
           if (!$8) {
            $1960($9, 112);
            label$2315 : {
             label$24 : {
              if ((i64toi32_i32$HIGH_BITS | 0) >= 0) {
               $1_1 = $1944($9, 4);
               $1973($9, 4, $1_1 - 1 | 0);
               if (!$3) {
                break label$24
               }
               $1973($9, 4, $1_1 - 2 | 0);
               if (!$24) {
                break label$2315
               }
               $1973($9, 4, $1_1 - 3 | 0);
               break label$2315;
              }
              if ($3) {
               break label$2315
              }
             }
             $1706($9, 0, 0);
            }
            $1771($7_1 + 96 | 0, +($5_1 | 0) * 0.0);
            $1_1 = $1960($7_1 + 104 | 0, 0);
            $2_1 = i64toi32_i32$HIGH_BITS;
            $4_1 = $1960($7_1, 96);
            $3 = i64toi32_i32$HIGH_BITS;
            break label$2114;
           }
           if (!($1_1 >>> 0 > 7 & ($2_1 | 0) >= 0 | ($2_1 | 0) > 0)) {
            $6_1 = $1_1;
            $13 = $2_1;
            while (1) {
             $21_1 = $21_1 << 4;
             $6_1 = $6_1 + 1 | 0;
             $13 = $6_1 ? $13 : $13 + 1 | 0;
             if ($13 | ($6_1 | 0) != 8) {
              continue
             }
             break;
            };
           }
           label$2817 : {
            label$29 : {
             label$30 : {
              if (($14 & -33) == 80) {
               $6_1 = $1717($9, $3);
               $13 = i64toi32_i32$HIGH_BITS;
               if ($6_1 | ($13 | 0) != -2147483648) {
                break label$2817
               }
               if ($3) {
                $1960($9, 112);
                if ((i64toi32_i32$HIGH_BITS | 0) >= 0) {
                 break label$30
                }
                break label$29;
               }
               $4_1 = 0;
               $1706($9, 0, 0);
               $1_1 = 0;
               $2_1 = 0;
               $3 = 0;
               break label$2114;
              }
              $6_1 = 0;
              $13 = 0;
              $1960($9, 112);
              if ((i64toi32_i32$HIGH_BITS | 0) < 0) {
               break label$2817
              }
             }
             $1973($9, 4, $1944($9, 4) - 1 | 0);
            }
            $6_1 = 0;
            $13 = 0;
           }
           if (!$21_1) {
            $1771($7_1 + 112 | 0, +($5_1 | 0) * 0.0);
            $1_1 = $1960($7_1 + 120 | 0, 0);
            $2_1 = i64toi32_i32$HIGH_BITS;
            $4_1 = $1960($7_1, 112);
            $3 = i64toi32_i32$HIGH_BITS;
            break label$2114;
           }
           $3 = $24 ? $12_1 : $1_1;
           $1_1 = $6_1 + ($3 << 2) | 0;
           $2_1 = (($24 ? $18_1 : $2_1) << 2 | $3 >>> 30) + $13 | 0;
           $2_1 = ($1_1 >>> 0 < $6_1 >>> 0 ? $2_1 + 1 | 0 : $2_1) - 1 | 0;
           $1_1 = $1_1 - 32 | 0;
           $2_1 = $1_1 >>> 0 < 4294967264 ? $2_1 + 1 | 0 : $2_1;
           if (!(($2_1 | 0) <= 0 & 0 - $19 >>> 0 >= $1_1 >>> 0 | ($2_1 | 0) < 0)) {
            $1973(95900, 0, 68);
            $1_1 = $7_1 + 160 | 0;
            $1773($1_1, $5_1);
            $2_1 = $7_1 + 144 | 0;
            $1778($2_1, $1960($7_1, 160), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, -1, -1, -1, 2147418111);
            $1_1 = $7_1 + 128 | 0;
            $1778($1_1, $1960($7_1, 144), i64toi32_i32$HIGH_BITS, $1960($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, -1, -1, -1, 2147418111);
            $1_1 = $1960($1_1 + 8 | 0, 0);
            $2_1 = i64toi32_i32$HIGH_BITS;
            $4_1 = $1960($7_1, 128);
            $3 = i64toi32_i32$HIGH_BITS;
            break label$2114;
           }
           $3 = $19 - 226 | 0;
           $14 = $3 >>> 0 > $1_1 >>> 0;
           $3 = $3 >> 31;
           if (!($14 & ($3 | 0) >= ($2_1 | 0) | ($2_1 | 0) < ($3 | 0))) {
            if (($21_1 | 0) >= 0) {
             while (1) {
              $6_1 = $7_1 + 416 | 0;
              $1766($6_1, $4_1, $10_1, $17_1, $15_1, 0, 0, 0, -1073807360);
              $3 = $1769($4_1, $10_1, $17_1, $15_1, 1073610752);
              $3 = ($3 | 0) >= 0;
              $1766($7_1 + 400 | 0, $4_1, $10_1, $17_1, $15_1, (wasm2js_i32$0 = $1960($7_1, 416), wasm2js_i32$1 = $4_1, wasm2js_i32$2 = $3, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $3 ? i64toi32_i32$HIGH_BITS : $10_1, (wasm2js_i32$0 = $1960($6_1 + 8 | 0, 0), wasm2js_i32$1 = $17_1, wasm2js_i32$2 = $3, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1), $3 ? i64toi32_i32$HIGH_BITS : $15_1);
              $2_1 = $2_1 - 1 | 0;
              $1_1 = $1_1 - 1 | 0;
              $2_1 = ($1_1 | 0) != -1 ? $2_1 + 1 | 0 : $2_1;
              $17_1 = $1960($7_1 + 408 | 0, 0);
              $15_1 = i64toi32_i32$HIGH_BITS;
              $4_1 = $1960($7_1, 400);
              $10_1 = i64toi32_i32$HIGH_BITS;
              $21_1 = $3 | $21_1 << 1;
              if (($21_1 | 0) >= 0) {
               continue
              }
              break;
             }
            }
            $2_1 = $2_1 - (($19 >> 31) + ($1_1 >>> 0 < $19 >>> 0) | 0) | 0;
            $14 = $2_1 + 1 | 0;
            $3 = $2_1;
            $2_1 = ($1_1 - $19 | 0) + 32 | 0;
            $3 = $2_1 >>> 0 < 32 ? $14 : $3;
            $2_1 = $2_1 >>> 0 < $16_1 >>> 0 & ($3 | 0) <= 0 | ($3 | 0) < 0 ? (($2_1 | 0) > 0 ? $2_1 : 0) : $16_1;
            label$38 : {
             if (($2_1 | 0) >= 113) {
              $1773($7_1 + 384 | 0, $5_1);
              $12_1 = $1960($7_1 + 392 | 0, 0);
              $18_1 = i64toi32_i32$HIGH_BITS;
              $6_1 = 0;
              $20_1 = $1960($7_1, 384);
              $23_1 = i64toi32_i32$HIGH_BITS;
              $13 = 0;
              $5_1 = 0;
              $3 = 0;
              break label$38;
             }
             $3 = $7_1 + 352 | 0;
             $1771($3, $1687(1.0, 144 - $2_1 | 0));
             $6_1 = $7_1 + 336 | 0;
             $1773($6_1, $5_1);
             $5_1 = $7_1 + 368 | 0;
             $14 = $1960($7_1, 352);
             $8 = i64toi32_i32$HIGH_BITS;
             $3 = $1960($3 + 8 | 0, 0);
             $9 = i64toi32_i32$HIGH_BITS;
             $20_1 = $1960($7_1, 336);
             $23_1 = i64toi32_i32$HIGH_BITS;
             $12_1 = $1960($6_1 + 8 | 0, 0);
             $18_1 = i64toi32_i32$HIGH_BITS;
             $1709($5_1, $14, $8, $3, $9, $20_1, $23_1, $12_1, $18_1);
             $13 = $1960($5_1 + 8 | 0, 0);
             $5_1 = i64toi32_i32$HIGH_BITS;
             $6_1 = $1960($7_1, 368);
             $3 = i64toi32_i32$HIGH_BITS;
            }
            $8 = $7_1 + 320 | 0;
            $2_1 = !($21_1 & 1) & (($1768($4_1, $10_1, $17_1, $15_1, 0, 0, 0, 0) | 0) != 0 & ($2_1 | 0) < 32);
            $1774($8, $2_1 + $21_1 | 0);
            $11_1 = $7_1 + 304 | 0;
            $1778($11_1, $20_1, $23_1, $12_1, $18_1, $1960($7_1, 320), i64toi32_i32$HIGH_BITS, $1960($8 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
            $8 = $7_1 + 272 | 0;
            $1766($8, $1960($7_1, 304), i64toi32_i32$HIGH_BITS, $1960($11_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, $6_1, $3, $13, $5_1);
            $11_1 = $7_1 + 288 | 0;
            $1778($11_1, $20_1, $23_1, $12_1, $18_1, $2_1 ? 0 : $4_1, $2_1 ? 0 : $10_1, $2_1 ? 0 : $17_1, $2_1 ? 0 : $15_1);
            $2_1 = $7_1 + 256 | 0;
            $1766($2_1, $1960($7_1, 288), i64toi32_i32$HIGH_BITS, $1960($11_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, $1960($7_1, 272), i64toi32_i32$HIGH_BITS, $1960($8 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
            $8 = $7_1 + 240 | 0;
            $1780($8, $1960($7_1, 256), i64toi32_i32$HIGH_BITS, $1960($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, $6_1, $3, $13, $5_1);
            $2_1 = $1960($7_1, 240);
            $3 = i64toi32_i32$HIGH_BITS;
            $5_1 = $1960($8 + 8 | 0, 0);
            $6_1 = i64toi32_i32$HIGH_BITS;
            if (!$1768($2_1, $3, $5_1, $6_1, 0, 0, 0, 0)) {
             $1973(95900, 0, 68)
            }
            $8 = $7_1 + 224 | 0;
            $1710($8, $2_1, $3, $5_1, $6_1, $1_1);
            $1_1 = $1960($8 + 8 | 0, 0);
            $2_1 = i64toi32_i32$HIGH_BITS;
            $4_1 = $1960($7_1, 224);
            $3 = i64toi32_i32$HIGH_BITS;
            break label$2114;
           }
           $1973(95900, 0, 68);
           $1_1 = $7_1 + 208 | 0;
           $1773($1_1, $5_1);
           $2_1 = $7_1 + 192 | 0;
           $1778($2_1, $1960($7_1, 208), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, 0, 0, 0, 65536);
           $1_1 = $7_1 + 176 | 0;
           $1778($1_1, $1960($7_1, 192), i64toi32_i32$HIGH_BITS, $1960($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, 0, 0, 0, 65536);
           $1_1 = $1960($1_1 + 8 | 0, 0);
           $2_1 = i64toi32_i32$HIGH_BITS;
           $4_1 = $1960($7_1, 176);
           $3 = i64toi32_i32$HIGH_BITS;
          }
          $1983($25_1, 0, $4_1, $3);
          $1983($25_1, 8, $1_1, $2_1);
          global$0 = $7_1 + 432 | 0;
          $5_1 = $1960($22_1 + 24 | 0, 0);
          $2_1 = i64toi32_i32$HIGH_BITS;
          $12_1 = $1960($22_1, 16);
          $18_1 = i64toi32_i32$HIGH_BITS;
          break label$1;
         }
         $1960($1_1, 112);
         if ((i64toi32_i32$HIGH_BITS | 0) < 0) {
          break label$27
         }
         $1973($7_1, 0, $1944($7_1, 0) - 1 | 0);
        }
        $23_1 = $22_1 + 32 | 0;
        $12_1 = $1_1;
        $18_1 = $5_1;
        $7_1 = $3;
        $5_1 = 0;
        $1_1 = 0;
        $6_1 = 0;
        $4_1 = global$0 - 8976 | 0;
        global$0 = $4_1;
        $10_1 = 0 - $19 | 0;
        $24 = $10_1 - $16_1 | 0;
        label$16 : {
         label$2 : {
          while (1) {
           label$39 : {
            if (($2_1 | 0) != 48) {
             if (($2_1 | 0) != 46) {
              break label$16
             }
             $2_1 = $1944($12_1, 4);
             if (($1944($12_1, 104) | 0) == ($2_1 | 0)) {
              break label$39
             }
             $1973($12_1, 4, $2_1 + 1 | 0);
             $2_1 = $1937($2_1, 0);
             break label$2;
            }
            $2_1 = $1944($12_1, 4);
            if (($1944($12_1, 104) | 0) != ($2_1 | 0)) {
             $1973($12_1, 4, $2_1 + 1 | 0);
             $2_1 = $1937($2_1, 0);
            } else {
             $2_1 = $1707($12_1)
            }
            $1_1 = 1;
            continue;
           }
           break;
          };
          $2_1 = $1707($12_1);
         }
         $11_1 = 1;
         if (($2_1 | 0) != 48) {
          break label$16
         }
         while (1) {
          $1_1 = $8 - 1 | 0;
          $5_1 = $5_1 - 1 | 0;
          $8 = ($5_1 | 0) != -1 ? $1_1 + 1 | 0 : $1_1;
          $1_1 = $1944($12_1, 4);
          label$8 : {
           if (($1944($12_1, 104) | 0) != ($1_1 | 0)) {
            $1973($12_1, 4, $1_1 + 1 | 0);
            $2_1 = $1937($1_1, 0);
            break label$8;
           }
           $2_1 = $1707($12_1);
          }
          if (($2_1 | 0) == 48) {
           continue
          }
          break;
         };
         $1_1 = 1;
        }
        $1973($4_1, 784, 0);
        label$1011 : {
         label$1112 : {
          $3 = ($2_1 | 0) == 46;
          $15_1 = $2_1 - 48 | 0;
          label$1213 : {
           label$1314 : {
            label$1415 : {
             if ($3 | $15_1 >>> 0 <= 9) {
              while (1) {
               label$18 : {
                if ($3 & 1) {
                 if (!$11_1) {
                  $5_1 = $9;
                  $8 = $13;
                  $11_1 = 1;
                  break label$18;
                 }
                 $3 = !$1_1;
                 break label$1415;
                }
                $9 = $9 + 1 | 0;
                $13 = $9 ? $13 : $13 + 1 | 0;
                if (($6_1 | 0) <= 2044) {
                 $20_1 = ($2_1 | 0) == 48 ? $20_1 : $9;
                 $1_1 = ($4_1 + 784 | 0) + ($6_1 << 2) | 0;
                 if ($17_1) {
                  $15_1 = (Math_imul($1944($1_1, 0), 10) + $2_1 | 0) - 48 | 0
                 }
                 $1973($1_1, 0, $15_1);
                 $1_1 = 1;
                 $3 = $17_1 + 1 | 0;
                 $2_1 = ($3 | 0) == 9;
                 $17_1 = $2_1 ? 0 : $3;
                 $6_1 = $2_1 + $6_1 | 0;
                 break label$18;
                }
                if (($2_1 | 0) == 48) {
                 break label$18
                }
                $1973($4_1, 8960, $1944($4_1, 8960) | 1);
                $20_1 = 18396;
               }
               $2_1 = $1944($12_1, 4);
               label$2319 : {
                if (($1944($12_1, 104) | 0) != ($2_1 | 0)) {
                 $1973($12_1, 4, $2_1 + 1 | 0);
                 $2_1 = $1937($2_1, 0);
                 break label$2319;
                }
                $2_1 = $1707($12_1);
               }
               $3 = ($2_1 | 0) == 46;
               $15_1 = $2_1 - 48 | 0;
               if ($3 | $15_1 >>> 0 < 10) {
                continue
               }
               break;
              }
             }
             $5_1 = $11_1 ? $5_1 : $9;
             $8 = $11_1 ? $8 : $13;
             if (!(!$1_1 | ($2_1 & -33) != 69)) {
              $3 = $1717($12_1, $7_1);
              $1_1 = i64toi32_i32$HIGH_BITS;
              $11_1 = $1_1;
              label$2620 : {
               if ($3 | ($1_1 | 0) != -2147483648) {
                break label$2620
               }
               if (!$7_1) {
                break label$1213
               }
               $3 = 0;
               $11_1 = 0;
               $1960($12_1, 112);
               if ((i64toi32_i32$HIGH_BITS | 0) < 0) {
                break label$2620
               }
               $1973($12_1, 4, $1944($12_1, 4) - 1 | 0);
              }
              $1_1 = $8 + $11_1 | 0;
              $2_1 = $5_1;
              $5_1 = $3 + $5_1 | 0;
              $8 = $2_1 >>> 0 > $5_1 >>> 0 ? $1_1 + 1 | 0 : $1_1;
              break label$1112;
             }
             $3 = !$1_1;
             if (($2_1 | 0) < 0) {
              break label$1314
             }
            }
            $1960($12_1, 112);
            if ((i64toi32_i32$HIGH_BITS | 0) < 0) {
             break label$1314
            }
            $1973($12_1, 4, $1944($12_1, 4) - 1 | 0);
           }
           if (!$3) {
            break label$1112
           }
           $1973(95900, 0, 28);
          }
          $9 = 0;
          $1706($12_1, 0, 0);
          $5_1 = 0;
          $8 = 0;
          $1_1 = 0;
          break label$1011;
         }
         $1_1 = $1944($4_1, 784);
         if (!$1_1) {
          $1771($4_1, +($18_1 | 0) * 0.0);
          $5_1 = $1960($4_1 + 8 | 0, 0);
          $8 = i64toi32_i32$HIGH_BITS;
          $9 = $1960($4_1, 0);
          $1_1 = i64toi32_i32$HIGH_BITS;
          break label$1011;
         }
         if (!($9 >>> 0 > 9 & ($13 | 0) >= 0 | ($13 | 0) > 0 | (($5_1 | 0) != ($9 | 0) | ($8 | 0) != ($13 | 0)) | ($1_1 >>> $16_1 | 0 ? ($16_1 | 0) <= 30 : 0))) {
          $2_1 = $4_1 + 48 | 0;
          $1773($2_1, $18_1);
          $3 = $4_1 + 32 | 0;
          $1774($3, $1_1);
          $1_1 = $4_1 + 16 | 0;
          $1778($1_1, $1960($4_1, 48), i64toi32_i32$HIGH_BITS, $1960($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, $1960($4_1, 32), i64toi32_i32$HIGH_BITS, $1960($3 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
          $5_1 = $1960($1_1 + 8 | 0, 0);
          $8 = i64toi32_i32$HIGH_BITS;
          $9 = $1960($4_1, 16);
          $1_1 = i64toi32_i32$HIGH_BITS;
          break label$1011;
         }
         if (!(($8 | 0) <= 0 & $10_1 >>> 1 >>> 0 >= $5_1 >>> 0 | ($8 | 0) < 0)) {
          $1973(95900, 0, 68);
          $1_1 = $4_1 + 96 | 0;
          $1773($1_1, $18_1);
          $2_1 = $4_1 + 80 | 0;
          $1778($2_1, $1960($4_1, 96), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, -1, -1, -1, 2147418111);
          $1_1 = $4_1 - -64 | 0;
          $1778($1_1, $1960($4_1, 80), i64toi32_i32$HIGH_BITS, $1960($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, -1, -1, -1, 2147418111);
          $5_1 = $1960($1_1 + 8 | 0, 0);
          $8 = i64toi32_i32$HIGH_BITS;
          $9 = $1960($4_1, 64);
          $1_1 = i64toi32_i32$HIGH_BITS;
          break label$1011;
         }
         $1_1 = $19 - 226 | 0;
         $2_1 = $1_1 >> 31;
         if (!(($2_1 | 0) <= ($8 | 0) & $1_1 >>> 0 <= $5_1 >>> 0 | ($2_1 | 0) < ($8 | 0))) {
          $1973(95900, 0, 68);
          $1_1 = $4_1 + 144 | 0;
          $1773($1_1, $18_1);
          $2_1 = $4_1 + 128 | 0;
          $1778($2_1, $1960($4_1, 144), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, 0, 0, 0, 65536);
          $1_1 = $4_1 + 112 | 0;
          $1778($1_1, $1960($4_1, 128), i64toi32_i32$HIGH_BITS, $1960($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, 0, 0, 0, 65536);
          $5_1 = $1960($1_1 + 8 | 0, 0);
          $8 = i64toi32_i32$HIGH_BITS;
          $9 = $1960($4_1, 112);
          $1_1 = i64toi32_i32$HIGH_BITS;
          break label$1011;
         }
         if ($17_1) {
          if (($17_1 | 0) <= 8) {
           $1_1 = ($4_1 + 784 | 0) + ($6_1 << 2) | 0;
           $10_1 = $1944($1_1, 0);
           while (1) {
            $10_1 = Math_imul($10_1, 10);
            $17_1 = $17_1 + 1 | 0;
            if (($17_1 | 0) != 9) {
             continue
            }
            break;
           };
           $1973($1_1, 0, $10_1);
          }
          $6_1 = $6_1 + 1 | 0;
         }
         label$3521 : {
          $11_1 = $5_1;
          if (($20_1 | 0) > ($5_1 | 0) | ($20_1 | 0) >= 9 | ($5_1 | 0) > 17) {
           break label$3521
          }
          if (($11_1 | 0) == 9) {
           $1_1 = $4_1 + 192 | 0;
           $1773($1_1, $18_1);
           $2_1 = $4_1 + 176 | 0;
           $1774($2_1, $1944($4_1, 784));
           $3 = $4_1 + 160 | 0;
           $1778($3, $1960($4_1, 192), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, $1960($4_1, 176), i64toi32_i32$HIGH_BITS, $1960($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
           $5_1 = $1960($3 + 8 | 0, 0);
           $8 = i64toi32_i32$HIGH_BITS;
           $9 = $1960($4_1, 160);
           $1_1 = i64toi32_i32$HIGH_BITS;
           break label$1011;
          }
          if (($11_1 | 0) <= 8) {
           $1_1 = $4_1 + 272 | 0;
           $1773($1_1, $18_1);
           $2_1 = $4_1 + 256 | 0;
           $1774($2_1, $1944($4_1, 784));
           $3 = $4_1 + 240 | 0;
           $1778($3, $1960($4_1, 272), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, $1960($4_1, 256), i64toi32_i32$HIGH_BITS, $1960($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
           $1_1 = $4_1 + 224 | 0;
           $1773($1_1, $1944((0 - $11_1 << 2) + 71232 | 0, 0));
           $2_1 = $4_1 + 208 | 0;
           $1770($2_1, $1960($4_1, 240), i64toi32_i32$HIGH_BITS, $1960($3 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, $1960($4_1, 224), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
           $5_1 = $1960($2_1 + 8 | 0, 0);
           $8 = i64toi32_i32$HIGH_BITS;
           $9 = $1960($4_1, 208);
           $1_1 = i64toi32_i32$HIGH_BITS;
           break label$1011;
          }
          $1_1 = (Math_imul($11_1, -3) + $16_1 | 0) + 27 | 0;
          $2_1 = $1944($4_1, 784);
          if ($2_1 >>> $1_1 | 0 ? ($1_1 | 0) <= 30 : 0) {
           break label$3521
          }
          $1_1 = $4_1 + 352 | 0;
          $1773($1_1, $18_1);
          $3 = $4_1 + 336 | 0;
          $1774($3, $2_1);
          $2_1 = $4_1 + 320 | 0;
          $1778($2_1, $1960($4_1, 352), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, $1960($4_1, 336), i64toi32_i32$HIGH_BITS, $1960($3 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
          $1_1 = $4_1 + 304 | 0;
          $1773($1_1, $1944(($11_1 << 2) + 71160 | 0, 0));
          $3 = $4_1 + 288 | 0;
          $1778($3, $1960($4_1, 320), i64toi32_i32$HIGH_BITS, $1960($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, $1960($4_1, 304), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
          $5_1 = $1960($3 + 8 | 0, 0);
          $8 = i64toi32_i32$HIGH_BITS;
          $9 = $1960($4_1, 288);
          $1_1 = i64toi32_i32$HIGH_BITS;
          break label$1011;
         }
         while (1) {
          $2_1 = $6_1;
          $6_1 = $2_1 - 1 | 0;
          if (!$1944(($4_1 + 784 | 0) + ($6_1 << 2) | 0, 0)) {
           continue
          }
          break;
         };
         $17_1 = 0;
         $1_1 = ($11_1 | 0) % 9 | 0;
         label$40 : {
          if (!$1_1) {
           $3 = 0;
           break label$40;
          }
          $3 = 0;
          $1_1 = ($11_1 | 0) < 0 ? $1_1 + 9 | 0 : $1_1;
          label$42 : {
           if (!$2_1) {
            $2_1 = 0;
            break label$42;
           }
           $5_1 = $1944((0 - $1_1 << 2) + 71232 | 0, 0);
           $8 = 1e9 / ($5_1 | 0) | 0;
           $15_1 = 0;
           $10_1 = 0;
           while (1) {
            $9 = ($4_1 + 784 | 0) + ($10_1 << 2) | 0;
            $13 = $1944($9, 0);
            $12_1 = ($13 >>> 0) / ($5_1 >>> 0) | 0;
            $6_1 = $15_1 + $12_1 | 0;
            $1973($9, 0, $6_1);
            $6_1 = !$6_1 & ($3 | 0) == ($10_1 | 0);
            $3 = $6_1 ? $3 + 1 & 2047 : $3;
            $11_1 = $6_1 ? $11_1 - 9 | 0 : $11_1;
            $15_1 = Math_imul($8, $13 - Math_imul($5_1, $12_1) | 0);
            $10_1 = $10_1 + 1 | 0;
            if (($2_1 | 0) != ($10_1 | 0)) {
             continue
            }
            break;
           };
           if (!$15_1) {
            break label$42
           }
           $1973(($4_1 + 784 | 0) + ($2_1 << 2) | 0, 0, $15_1);
           $2_1 = $2_1 + 1 | 0;
          }
          $11_1 = ($11_1 - $1_1 | 0) + 9 | 0;
         }
         while (1) {
          $9 = ($4_1 + 784 | 0) + ($3 << 2) | 0;
          label$4623 : {
           while (1) {
            if (($11_1 | 0) >= 36) {
             if (($11_1 | 0) != 36) {
              break label$4623
             }
             if ($1944($9, 0) >>> 0 >= 10384593) {
              break label$4623
             }
            }
            $6_1 = $2_1 + 2047 | 0;
            $15_1 = 0;
            $1_1 = $2_1;
            while (1) {
             $2_1 = $1_1;
             $8 = $6_1 & 2047;
             $6_1 = ($4_1 + 784 | 0) + ($8 << 2) | 0;
             $1_1 = $1956($6_1, 0);
             $5_1 = $15_1 + ($1_1 << 29) | 0;
             $1_1 = i64toi32_i32$HIGH_BITS << 29 | $1_1 >>> 3;
             $1_1 = $5_1 >>> 0 < $15_1 >>> 0 ? $1_1 + 1 | 0 : $1_1;
             label$50 : {
              if (!(!$1_1 & $5_1 >>> 0 >= 1000000001 | ($1_1 | 0) != 0)) {
               $15_1 = 0;
               break label$50;
              }
              $15_1 = __wasm_i64_udiv($5_1, $1_1, 1e9);
              $5_1 = $5_1 - __wasm_i64_mul($15_1, i64toi32_i32$HIGH_BITS, 1e9, 0) | 0;
             }
             $1973($6_1, 0, $5_1);
             $1_1 = ($8 | 0) != ($2_1 - 1 & 2047) ? $2_1 : ($3 | 0) == ($8 | 0) ? $2_1 : $5_1 ? $2_1 : $8;
             $6_1 = $8 - 1 | 0;
             if (($3 | 0) != ($8 | 0)) {
              continue
             }
             break;
            };
            $17_1 = $17_1 - 29 | 0;
            if (!$15_1) {
             continue
            }
            break;
           };
           $3 = $3 - 1 & 2047;
           if (($1_1 | 0) == ($3 | 0)) {
            $2_1 = $4_1 + 784 | 0;
            $5_1 = $2_1 + (($1_1 + 2046 & 2047) << 2) | 0;
            $6_1 = $1944($5_1, 0);
            $14 = $2_1;
            $2_1 = $1_1 - 1 & 2047;
            $1973($5_1, 0, $1944($14 + ($2_1 << 2) | 0, 0) | $6_1);
           }
           $11_1 = $11_1 + 9 | 0;
           $1973(($4_1 + 784 | 0) + ($3 << 2) | 0, 0, $15_1);
           continue;
          }
          break;
         };
         label$53 : {
          label$54 : while (1) {
           $5_1 = $2_1 + 1 & 2047;
           $8 = ($4_1 + 784 | 0) + (($2_1 - 1 & 2047) << 2) | 0;
           while (1) {
            $6_1 = ($11_1 | 0) > 45 ? 9 : 1;
            label$56 : {
             while (1) {
              $1_1 = $3;
              $10_1 = 0;
              label$58 : {
               while (1) {
                label$59 : {
                 $3 = $1_1 + $10_1 & 2047;
                 if (($3 | 0) == ($2_1 | 0)) {
                  break label$59
                 }
                 $3 = $1944(($4_1 + 784 | 0) + ($3 << 2) | 0, 0);
                 $9 = $1944(($10_1 << 2) + 71184 | 0, 0);
                 if ($3 >>> 0 < $9 >>> 0) {
                  break label$59
                 }
                 if ($3 >>> 0 > $9 >>> 0) {
                  break label$58
                 }
                 $10_1 = $10_1 + 1 | 0;
                 if (($10_1 | 0) != 4) {
                  continue
                 }
                }
                break;
               };
               if (($11_1 | 0) != 36) {
                break label$58
               }
               $5_1 = 0;
               $8 = 0;
               $10_1 = 0;
               $9 = 0;
               $13 = 0;
               while (1) {
                $3 = $1_1 + $10_1 & 2047;
                if (($2_1 | 0) == ($3 | 0)) {
                 $2_1 = $2_1 + 1 & 2047;
                 $1973(($4_1 + ($2_1 << 2) | 0) + 780 | 0, 0, 0);
                }
                $6_1 = $4_1 + 768 | 0;
                $1774($6_1, $1944(($4_1 + 784 | 0) + ($3 << 2) | 0, 0));
                $3 = $4_1 + 752 | 0;
                $1778($3, $5_1, $8, $9, $13, 0, 0, 1342177280, 1075633366);
                $5_1 = $4_1 + 736 | 0;
                $1766($5_1, $1960($4_1, 752), i64toi32_i32$HIGH_BITS, $1960($3 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, $1960($4_1, 768), i64toi32_i32$HIGH_BITS, $1960($6_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
                $9 = $1960($5_1 + 8 | 0, 0);
                $13 = i64toi32_i32$HIGH_BITS;
                $5_1 = $1960($4_1, 736);
                $8 = i64toi32_i32$HIGH_BITS;
                $10_1 = $10_1 + 1 | 0;
                if (($10_1 | 0) != 4) {
                 continue
                }
                break;
               };
               $3 = $4_1 + 720 | 0;
               $1773($3, $18_1);
               $6_1 = $4_1 + 704 | 0;
               $1778($6_1, $5_1, $8, $9, $13, $1960($4_1, 720), i64toi32_i32$HIGH_BITS, $1960($3 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
               $9 = $1960($6_1 + 8 | 0, 0);
               $13 = i64toi32_i32$HIGH_BITS;
               $5_1 = 0;
               $8 = 0;
               $3 = $1960($4_1, 704);
               $11_1 = i64toi32_i32$HIGH_BITS;
               $25_1 = $17_1 + 113 | 0;
               $15_1 = $25_1 - $19 | 0;
               $14 = ($15_1 | 0) < ($16_1 | 0);
               $7_1 = $14 ? (($15_1 | 0) > 0 ? $15_1 : 0) : $16_1;
               if (($7_1 | 0) <= 112) {
                break label$56
               }
               $10_1 = 0;
               $16_1 = 0;
               $20_1 = 0;
               $6_1 = 0;
               $12_1 = 0;
               break label$53;
              }
              $17_1 = $6_1 + $17_1 | 0;
              $3 = $2_1;
              if (($1_1 | 0) == ($2_1 | 0)) {
               continue
              }
              break;
             };
             $13 = 1e9 >>> $6_1 | 0;
             $12_1 = -1 << $6_1 ^ -1;
             $10_1 = 0;
             $3 = $1_1;
             while (1) {
              $14 = $10_1;
              $7_1 = ($4_1 + 784 | 0) + ($1_1 << 2) | 0;
              $10_1 = $1944($7_1, 0);
              $9 = $14 + ($10_1 >>> $6_1 | 0) | 0;
              $1973($7_1, 0, $9);
              $9 = !$9 & ($1_1 | 0) == ($3 | 0);
              $3 = $9 ? $3 + 1 & 2047 : $3;
              $11_1 = $9 ? $11_1 - 9 | 0 : $11_1;
              $10_1 = Math_imul($13, $10_1 & $12_1);
              $1_1 = $1_1 + 1 & 2047;
              if (($1_1 | 0) != ($2_1 | 0)) {
               continue
              }
              break;
             };
             if (!$10_1) {
              continue
             }
             if (($3 | 0) != ($5_1 | 0)) {
              $1973(($4_1 + 784 | 0) + ($2_1 << 2) | 0, 0, $10_1);
              $2_1 = $5_1;
              continue label$54;
             }
             $1973($8, 0, $1944($8, 0) | 1);
             continue;
            }
            break;
           };
           break;
          };
          $5_1 = $4_1 + 656 | 0;
          $1771($5_1, $1687(1.0, 225 - $7_1 | 0));
          $6_1 = $4_1 + 688 | 0;
          $1709($6_1, $1960($4_1, 656), i64toi32_i32$HIGH_BITS, $1960($5_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, $3, $11_1, $9, $13);
          $12_1 = $1960($6_1 + 8 | 0, 0);
          $21_1 = i64toi32_i32$HIGH_BITS;
          $20_1 = $1960($4_1, 688);
          $6_1 = i64toi32_i32$HIGH_BITS;
          $5_1 = $4_1 + 640 | 0;
          $1771($5_1, $1687(1.0, 113 - $7_1 | 0));
          $16_1 = $4_1 + 672 | 0;
          $1712($16_1, $3, $11_1, $9, $13, $1960($4_1, 640), i64toi32_i32$HIGH_BITS, $1960($5_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
          $19 = $4_1 + 624 | 0;
          $5_1 = $1960($4_1, 672);
          $8 = i64toi32_i32$HIGH_BITS;
          $10_1 = $1960($16_1 + 8 | 0, 0);
          $16_1 = i64toi32_i32$HIGH_BITS;
          $1780($19, $3, $11_1, $9, $13, $5_1, $8, $10_1, $16_1);
          $3 = $4_1 + 608 | 0;
          $1766($3, $20_1, $6_1, $12_1, $21_1, $1960($4_1, 624), i64toi32_i32$HIGH_BITS, $1960($19 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
          $9 = $1960($3 + 8 | 0, 0);
          $13 = i64toi32_i32$HIGH_BITS;
          $3 = $1960($4_1, 608);
          $11_1 = i64toi32_i32$HIGH_BITS;
         }
         $19 = $1_1 + 4 & 2047;
         label$65 : {
          if (($19 | 0) == ($2_1 | 0)) {
           break label$65
          }
          $19 = $1944(($4_1 + 784 | 0) + ($19 << 2) | 0, 0);
          label$66 : {
           if ($19 >>> 0 <= 499999999) {
            if (!$19 & ($1_1 + 5 & 2047) == ($2_1 | 0)) {
             break label$66
            }
            $1_1 = $4_1 + 496 | 0;
            $1771($1_1, +($18_1 | 0) * .25);
            $2_1 = $4_1 + 480 | 0;
            $1766($2_1, $5_1, $8, $10_1, $16_1, $1960($4_1, 496), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
            $10_1 = $1960($2_1 + 8 | 0, 0);
            $16_1 = i64toi32_i32$HIGH_BITS;
            $5_1 = $1960($4_1, 480);
            $8 = i64toi32_i32$HIGH_BITS;
            break label$66;
           }
           if (($19 | 0) != 5e8) {
            $1_1 = $4_1 + 592 | 0;
            $1771($1_1, +($18_1 | 0) * .75);
            $2_1 = $4_1 + 576 | 0;
            $1766($2_1, $5_1, $8, $10_1, $16_1, $1960($4_1, 592), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
            $10_1 = $1960($2_1 + 8 | 0, 0);
            $16_1 = i64toi32_i32$HIGH_BITS;
            $5_1 = $1960($4_1, 576);
            $8 = i64toi32_i32$HIGH_BITS;
            break label$66;
           }
           $28_1 = +($18_1 | 0);
           if (($2_1 | 0) == ($1_1 + 5 & 2047)) {
            $1_1 = $4_1 + 528 | 0;
            $1771($1_1, $28_1 * .5);
            $2_1 = $4_1 + 512 | 0;
            $1766($2_1, $5_1, $8, $10_1, $16_1, $1960($4_1, 528), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
            $10_1 = $1960($2_1 + 8 | 0, 0);
            $16_1 = i64toi32_i32$HIGH_BITS;
            $5_1 = $1960($4_1, 512);
            $8 = i64toi32_i32$HIGH_BITS;
            break label$66;
           }
           $1_1 = $4_1 + 560 | 0;
           $1771($1_1, $28_1 * .75);
           $2_1 = $4_1 + 544 | 0;
           $1766($2_1, $5_1, $8, $10_1, $16_1, $1960($4_1, 560), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
           $10_1 = $1960($2_1 + 8 | 0, 0);
           $16_1 = i64toi32_i32$HIGH_BITS;
           $5_1 = $1960($4_1, 544);
           $8 = i64toi32_i32$HIGH_BITS;
          }
          if (($7_1 | 0) > 111) {
           break label$65
          }
          $1_1 = $4_1 + 464 | 0;
          $1712($1_1, $5_1, $8, $10_1, $16_1, 0, 0, 0, 1073676288);
          if ($1768($1960($4_1, 464), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, 0, 0, 0, 0)) {
           break label$65
          }
          $1_1 = $4_1 + 448 | 0;
          $1766($1_1, $5_1, $8, $10_1, $16_1, 0, 0, 0, 1073676288);
          $10_1 = $1960($1_1 + 8 | 0, 0);
          $16_1 = i64toi32_i32$HIGH_BITS;
          $5_1 = $1960($4_1, 448);
          $8 = i64toi32_i32$HIGH_BITS;
         }
         $1_1 = $4_1 + 432 | 0;
         $1766($1_1, $3, $11_1, $9, $13, $5_1, $8, $10_1, $16_1);
         $2_1 = $4_1 + 416 | 0;
         $1780($2_1, $1960($4_1, 432), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, $20_1, $6_1, $12_1, $21_1);
         $9 = $1960($2_1 + 8 | 0, 0);
         $13 = i64toi32_i32$HIGH_BITS;
         $3 = $1960($4_1, 416);
         $11_1 = i64toi32_i32$HIGH_BITS;
         label$71 : {
          if (($24 - 2 | 0) >= ($25_1 & 2147483647)) {
           break label$71
          }
          $1_1 = $4_1 + 400 | 0;
          $1983($1_1, 8, $9, $13 & 2147483647);
          $1983($1_1, 0, $3, $11_1);
          $2_1 = $4_1 + 384 | 0;
          $1778($2_1, $3, $11_1, $9, $13, 0, 0, 0, 1073610752);
          $1_1 = $1769($1960($4_1, 400), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS, 1081081856);
          $1_1 = ($1_1 | 0) >= 0;
          $9 = (wasm2js_i32$0 = $1960($2_1 + 8 | 0, 0), wasm2js_i32$1 = $9, wasm2js_i32$2 = $1_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
          $13 = $1_1 ? i64toi32_i32$HIGH_BITS : $13;
          $3 = (wasm2js_i32$0 = $1960($4_1, 384), wasm2js_i32$1 = $3, wasm2js_i32$2 = $1_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
          $11_1 = $1_1 ? i64toi32_i32$HIGH_BITS : $11_1;
          $17_1 = $1_1 + $17_1 | 0;
          if (!(($1768($5_1, $8, $10_1, $16_1, 0, 0, 0, 0) | 0) != 0 & ($1_1 ? $14 & ($7_1 | 0) != ($15_1 | 0) : $14)) & ($24 | 0) >= ($17_1 + 110 | 0)) {
           break label$71
          }
          $1973(95900, 0, 68);
         }
         $1_1 = $4_1 + 368 | 0;
         $1710($1_1, $3, $11_1, $9, $13, $17_1);
         $5_1 = $1960($1_1 + 8 | 0, 0);
         $8 = i64toi32_i32$HIGH_BITS;
         $9 = $1960($4_1, 368);
         $1_1 = i64toi32_i32$HIGH_BITS;
        }
        $1983($23_1, 8, $5_1, $8);
        $1983($23_1, 0, $9, $1_1);
        global$0 = $4_1 + 8976 | 0;
        $5_1 = $1960($22_1 + 40 | 0, 0);
        $2_1 = i64toi32_i32$HIGH_BITS;
        $12_1 = $1960($22_1, 32);
        $18_1 = i64toi32_i32$HIGH_BITS;
        break label$1;
       case 3:
        break label$20;
       default:
        break label$25;
       };
      }
      $1960($1_1, 112);
      if ((i64toi32_i32$HIGH_BITS | 0) >= 0) {
       $1973($7_1, 0, $1944($7_1, 0) - 1 | 0)
      }
      break label$19;
     }
     label$3425 : {
      $2_1 = $1944($1_1, 4);
      label$32 : {
       if (($1944($1_1, 104) | 0) != ($2_1 | 0)) {
        $1973($7_1, 0, $2_1 + 1 | 0);
        $2_1 = $1937($2_1, 0);
        break label$32;
       }
       $2_1 = $1707($1_1);
      }
      if (($2_1 | 0) == 40) {
       $6_1 = 1;
       break label$3425;
      }
      $5_1 = 0;
      $2_1 = 2147450880;
      $1960($1_1, 112);
      if ((i64toi32_i32$HIGH_BITS | 0) < 0) {
       break label$1
      }
      $1973($7_1, 0, $1944($7_1, 0) - 1 | 0);
      break label$1;
     }
     while (1) {
      $2_1 = $1944($1_1, 4);
      label$3718 : {
       if (($1944($1_1, 104) | 0) != ($2_1 | 0)) {
        $1973($7_1, 0, $2_1 + 1 | 0);
        $8 = $1937($2_1, 0);
        break label$3718;
       }
       $8 = $1707($1_1);
      }
      if (!(!($8 - 48 >>> 0 < 10 | $8 - 65 >>> 0 < 26 | ($8 | 0) == 95) & $8 - 97 >>> 0 >= 26)) {
       $6_1 = $6_1 + 1 | 0;
       continue;
      }
      break;
     };
     $5_1 = 0;
     $2_1 = 2147450880;
     if (($8 | 0) == 41) {
      break label$1
     }
     $1960($1_1, 112);
     $8 = i64toi32_i32$HIGH_BITS;
     if (($8 | 0) >= 0) {
      $1973($7_1, 0, $1944($7_1, 0) - 1 | 0)
     }
     label$4227 : {
      if ($3) {
       if ($6_1) {
        break label$4227
       }
       break label$1;
      }
      break label$19;
     }
     while (1) {
      $6_1 = $6_1 - 1 | 0;
      if (($8 | 0) >= 0) {
       $1973($7_1, 0, $1944($7_1, 0) - 1 | 0)
      }
      if ($6_1) {
       continue
      }
      break;
     };
     break label$1;
    }
    $1973(95900, 0, 28);
    $1706($1_1, 0, 0);
   }
   $5_1 = 0;
   $2_1 = 0;
  }
  $1983($0_1, 0, $12_1, $18_1);
  $1983($0_1, 8, $5_1, $2_1);
  global$0 = $22_1 + 48 | 0;
 }
 
 function $1717($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  label$3 : {
   label$4 : {
    label$5 : {
     label$6 : {
      label$7 : {
       $2_1 = $1944($0_1, 4);
       label$1 : {
        if (($1944($0_1, 104) | 0) != ($2_1 | 0)) {
         $1973($0_1, 4, $2_1 + 1 | 0);
         $2_1 = $1937($2_1, 0);
         break label$1;
        }
        $2_1 = $1707($0_1);
       }
       switch ($2_1 - 43 | 0) {
       case 0:
       case 2:
        break label$7;
       default:
        break label$6;
       };
      }
      $2_1 = ($2_1 | 0) == 45;
      $5_1 = !$1_1;
      $3 = $1944($0_1, 4);
      label$8 : {
       if (($1944($0_1, 104) | 0) != ($3 | 0)) {
        $1973($0_1, 4, $3 + 1 | 0);
        $3 = $1937($3, 0);
        break label$8;
       }
       $3 = $1707($0_1);
      }
      $4_1 = $3 - 58 | 0;
      $1_1 = $2_1;
      if ($5_1 | $4_1 >>> 0 > 4294967285) {
       break label$5
      }
      $1960($0_1, 112);
      if ((i64toi32_i32$HIGH_BITS | 0) < 0) {
       break label$4
      }
      $1973($0_1, 4, $1944($0_1, 4) - 1 | 0);
      break label$4;
     }
     $4_1 = $2_1 - 58 | 0;
     $3 = $2_1;
     $1_1 = 0;
    }
    $5_1 = $1_1;
    if ($4_1 >>> 0 < 4294967286) {
     break label$4
    }
    $1_1 = 0;
    $2_1 = 0;
    $4_1 = $3 - 48 | 0;
    if ($4_1 >>> 0 < 10) {
     while (1) {
      $2_1 = (Math_imul($2_1, 10) + $3 | 0) - 48 | 0;
      $6_1 = ($2_1 | 0) < 214748364;
      $1_1 = $1944($0_1, 4);
      label$12 : {
       if (($1944($0_1, 104) | 0) != ($1_1 | 0)) {
        $1973($0_1, 4, $1_1 + 1 | 0);
        $3 = $1937($1_1, 0);
        break label$12;
       }
       $3 = $1707($0_1);
      }
      $4_1 = $3 - 48 | 0;
      if ($6_1 & $4_1 >>> 0 <= 9) {
       continue
      }
      break;
     };
     $1_1 = $2_1;
     $2_1 = $2_1 >> 31;
    }
    label$15 : {
     if ($4_1 >>> 0 >= 10) {
      break label$15
     }
     while (1) {
      $4_1 = $3;
      $3 = __wasm_i64_mul($1_1, $2_1, 10, 0);
      $2_1 = $4_1 + $3 | 0;
      $1_1 = i64toi32_i32$HIGH_BITS;
      $1_1 = $2_1 >>> 0 < $3 >>> 0 ? $1_1 + 1 | 0 : $1_1;
      $4_1 = $2_1;
      $2_1 = $1944($0_1, 4);
      label$17 : {
       if (($1944($0_1, 104) | 0) != ($2_1 | 0)) {
        $1973($0_1, 4, $2_1 + 1 | 0);
        $3 = $1937($2_1, 0);
        break label$17;
       }
       $3 = $1707($0_1);
      }
      $2_1 = $1_1 - 1 | 0;
      $1_1 = $4_1 - 48 | 0;
      $2_1 = $1_1 >>> 0 < 4294967248 ? $2_1 + 1 | 0 : $2_1;
      $4_1 = $3 - 48 | 0;
      if ($4_1 >>> 0 > 9) {
       break label$15
      }
      if ($1_1 >>> 0 < 2061584302 & ($2_1 | 0) <= 21474836 | ($2_1 | 0) < 21474836) {
       continue
      }
      break;
     };
    }
    if ($4_1 >>> 0 < 10) {
     while (1) {
      $3 = $1944($0_1, 4);
      label$21 : {
       if (($1944($0_1, 104) | 0) != ($3 | 0)) {
        $1973($0_1, 4, $3 + 1 | 0);
        $3 = $1937($3, 0);
        break label$21;
       }
       $3 = $1707($0_1);
      }
      if ($3 - 48 >>> 0 < 10) {
       continue
      }
      break;
     }
    }
    $1960($0_1, 112);
    if ((i64toi32_i32$HIGH_BITS | 0) >= 0) {
     $1973($0_1, 4, $1944($0_1, 4) - 1 | 0)
    }
    $0_1 = $1_1;
    $1_1 = $5_1 ? 0 - $0_1 | 0 : $0_1;
    $2_1 = $5_1 ? 0 - ($2_1 + (($0_1 | 0) != 0) | 0) | 0 : $2_1;
    break label$3;
   }
   $1_1 = 0;
   $2_1 = -2147483648;
   $1960($0_1, 112);
   if ((i64toi32_i32$HIGH_BITS | 0) < 0) {
    break label$3
   }
   $1973($0_1, 4, $1944($0_1, 4) - 1 | 0);
   i64toi32_i32$HIGH_BITS = -2147483648;
   return 0;
  }
  i64toi32_i32$HIGH_BITS = $2_1;
  return $1_1;
 }
 
 function $1719($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0.0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $1_1 = global$0 - 160 | 0;
  global$0 = $1_1;
  $1973($1_1, 60, $0_1);
  $1973($1_1, 20, $0_1);
  $1973($1_1, 24, -1);
  $0_1 = $1_1 + 16 | 0;
  $1706($0_1, 0, 0);
  $1714($1_1, $0_1, 1, 1);
  $0_1 = $1960($1_1 + 8 | 0, 0);
  $3 = i64toi32_i32$HIGH_BITS;
  $4_1 = $1960($1_1, 0);
  $5_1 = i64toi32_i32$HIGH_BITS;
  $1983($2_1, 8, $0_1, $3);
  $1983($2_1, 0, $4_1, $5_1);
  global$0 = $1_1 + 160 | 0;
  $6_1 = $1781($1960($2_1, 0), i64toi32_i32$HIGH_BITS, $1960($2_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
  global$0 = $2_1 + 16 | 0;
  return $6_1;
 }
 
 function $1721($0_1) {
  return $0_1 - 48 >>> 0 < 10;
 }
 
 function $1723($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0;
  wasm2js_scratch_store_f64(+$0_1);
  $3 = wasm2js_scratch_load_i32(1) | 0;
  $4_1 = wasm2js_scratch_load_i32(0) | 0;
  $2_1 = $3 >>> 20 & 2047;
  if (($2_1 | 0) != 2047) {
   if (!$2_1) {
    if ($0_1 == 0.0) {
     $2_1 = 0
    } else {
     $0_1 = $1723($0_1 * 18446744073709551615.0, $1_1);
     $2_1 = $1944($1_1, 0) + -64 | 0;
    }
    $1973($1_1, 0, $2_1);
    return $0_1;
   }
   $1973($1_1, 0, $2_1 - 1022 | 0);
   wasm2js_scratch_store_i32(0, $4_1 | 0);
   wasm2js_scratch_store_i32(1, $3 & -2146435073 | 1071644672);
   $0_1 = +wasm2js_scratch_load_f64();
  }
  return $0_1;
 }
 
 function $1724($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $5_1 = global$0 - 208 | 0;
  global$0 = $5_1;
  $1973($5_1, 204, $2_1);
  $2_1 = $5_1 + 160 | 0;
  $1604($2_1, 0, 40);
  $1973($5_1, 200, $1944($5_1, 204));
  label$1 : {
   if (($1725(0, $1_1, $5_1 + 200 | 0, $5_1 + 80 | 0, $2_1, $3, $4_1) | 0) < 0) {
    $4_1 = -1;
    break label$1;
   }
   $6_1 = ($1944($0_1, 76) | 0) >= 0 ? 1 : $6_1;
   $7_1 = $1944($0_1, 0);
   if (($1944($0_1, 72) | 0) <= 0) {
    $1973($0_1, 0, $7_1 & -33)
   }
   label$5 : {
    label$6 : {
     label$7 : {
      if (!$1944($0_1, 48)) {
       $1973($0_1, 48, 80);
       $1973($0_1, 28, 0);
       $1983($0_1, 16, 0, 0);
       $8 = $1944($0_1, 44);
       $1973($0_1, 44, $5_1);
       break label$7;
      }
      if ($1944($0_1, 16)) {
       break label$6
      }
     }
     $2_1 = -1;
     if ($1631($0_1)) {
      break label$5
     }
    }
    $2_1 = $1725($0_1, $1_1, $5_1 + 200 | 0, $5_1 + 80 | 0, $5_1 + 160 | 0, $3, $4_1);
   }
   if ($8) {
    FUNCTION_TABLE[$1944($0_1, 36) | 0]($0_1, 0, 0) | 0;
    $1973($0_1, 48, 0);
    $1973($0_1, 44, $8);
    $1973($0_1, 28, 0);
    $1_1 = $1944($0_1, 20);
    $1983($0_1, 16, 0, 0);
    $2_1 = $1_1 ? $2_1 : -1;
   }
   $1_1 = $0_1;
   $0_1 = $1944($0_1, 0);
   $1973($1_1, 0, $0_1 | $7_1 & 32);
   $4_1 = $0_1 & 32 ? -1 : $2_1;
   if (!$6_1) {
    break label$1
   }
  }
  global$0 = $5_1 + 208 | 0;
  return $4_1;
 }
 
 function $1725($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1) {
  var $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = 0, $21_1 = 0, $22_1 = 0, $23_1 = 0, $24 = 0, $25_1 = 0;
  $10_1 = global$0 - 80 | 0;
  global$0 = $10_1;
  $1973($10_1, 76, $1_1);
  $25_1 = $10_1 + 55 | 0;
  $18_1 = $10_1 + 56 | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : while (1) {
       $12_1 = $1_1;
       if (($14 ^ 2147483647) < ($7_1 | 0)) {
        break label$4
       }
       $14 = $7_1 + $14 | 0;
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           $7_1 = $12_1;
           $8 = $1937($7_1, 0);
           if ($8) {
            while (1) {
             label$12 : {
              $1_1 = $8 & 255;
              label$13 : {
               if (!$1_1) {
                $1_1 = $7_1;
                break label$13;
               }
               if (($1_1 | 0) != 37) {
                break label$12
               }
               $8 = $7_1;
               while (1) {
                if (($1937($8, 1) | 0) != 37) {
                 $1_1 = $8;
                 break label$13;
                }
                $7_1 = $7_1 + 1 | 0;
                $9 = $1937($8, 2);
                $1_1 = $8 + 2 | 0;
                $8 = $1_1;
                if (($9 | 0) == 37) {
                 continue
                }
                break;
               };
              }
              $7_1 = $7_1 - $12_1 | 0;
              $24 = $14 ^ 2147483647;
              if (($7_1 | 0) > ($24 | 0)) {
               break label$4
              }
              if ($0_1) {
               $1726($0_1, $12_1, $7_1)
              }
              if ($7_1) {
               continue label$5
              }
              $1973($10_1, 76, $1_1);
              $7_1 = $1_1 + 1 | 0;
              $17_1 = -1;
              label$18 : {
               if (!$1721($1936($1_1, 1))) {
                break label$18
               }
               if (($1937($1_1, 2) | 0) != 36) {
                break label$18
               }
               $7_1 = $1_1 + 3 | 0;
               $17_1 = $1936($1_1, 1) - 48 | 0;
               $19 = 1;
              }
              $1973($10_1, 76, $7_1);
              $13 = 0;
              $8 = $1936($7_1, 0);
              $1_1 = $8 - 32 | 0;
              label$19 : {
               if ($1_1 >>> 0 > 31) {
                $9 = $7_1;
                break label$19;
               }
               $9 = $7_1;
               $1_1 = 1 << $1_1;
               if (!($1_1 & 75913)) {
                break label$19
               }
               while (1) {
                $9 = $7_1 + 1 | 0;
                $1973($10_1, 76, $9);
                $13 = $1_1 | $13;
                $8 = $1936($7_1, 1);
                $1_1 = $8 - 32 | 0;
                if ($1_1 >>> 0 >= 32) {
                 break label$19
                }
                $7_1 = $9;
                $1_1 = 1 << $1_1;
                if ($1_1 & 75913) {
                 continue
                }
                break;
               };
              }
              label$22 : {
               if (($8 | 0) == 42) {
                label$24 : {
                 label$25 : {
                  if (!$1721($1936($9, 1))) {
                   break label$25
                  }
                  if (($1937($9, 2) | 0) != 36) {
                   break label$25
                  }
                  $1973((($1936($9, 1) << 2) + $4_1 | 0) - 192 | 0, 0, 10);
                  $8 = $9 + 3 | 0;
                  $19 = 1;
                  $15_1 = $1944((($1936($9, 1) << 3) + $3 | 0) - 384 | 0, 0);
                  break label$24;
                 }
                 if ($19) {
                  break label$9
                 }
                 $8 = $9 + 1 | 0;
                 if (!$0_1) {
                  $1973($10_1, 76, $8);
                  $19 = 0;
                  $15_1 = 0;
                  break label$22;
                 }
                 $1_1 = $1944($2_1, 0);
                 $1973($2_1, 0, $1_1 + 4 | 0);
                 $19 = 0;
                 $15_1 = $1944($1_1, 0);
                }
                $1973($10_1, 76, $8);
                if (($15_1 | 0) >= 0) {
                 break label$22
                }
                $15_1 = 0 - $15_1 | 0;
                $13 = $13 | 8192;
                break label$22;
               }
               $15_1 = $1727($10_1 + 76 | 0);
               if (($15_1 | 0) < 0) {
                break label$4
               }
               $8 = $1944($10_1, 76);
              }
              $7_1 = 0;
              $11_1 = -1;
              label$27 : {
               if (($1937($8, 0) | 0) != 46) {
                $1_1 = $8;
                $8 = 0;
                break label$27;
               }
               if (($1937($8, 1) | 0) == 42) {
                label$30 : {
                 label$31 : {
                  if (!$1721($1936($8, 2))) {
                   break label$31
                  }
                  if (($1937($8, 3) | 0) != 36) {
                   break label$31
                  }
                  $1973((($1936($8, 2) << 2) + $4_1 | 0) - 192 | 0, 0, 10);
                  $1_1 = $8 + 4 | 0;
                  $11_1 = $1944((($1936($8, 2) << 3) + $3 | 0) - 384 | 0, 0);
                  break label$30;
                 }
                 if ($19) {
                  break label$9
                 }
                 $1_1 = $8 + 2 | 0;
                 $11_1 = 0;
                 if (!$0_1) {
                  break label$30
                 }
                 $9 = $1944($2_1, 0);
                 $1973($2_1, 0, $9 + 4 | 0);
                 $11_1 = $1944($9, 0);
                }
                $1973($10_1, 76, $1_1);
                $8 = ($11_1 ^ -1) >>> 31 | 0;
                break label$27;
               }
               $1973($10_1, 76, $8 + 1 | 0);
               $11_1 = $1727($10_1 + 76 | 0);
               $1_1 = $1944($10_1, 76);
               $8 = 1;
              }
              $22_1 = $8;
              while (1) {
               $20_1 = $7_1;
               $9 = 28;
               $16_1 = $1_1;
               $7_1 = $1936($1_1, 0);
               if ($7_1 - 123 >>> 0 < 4294967238) {
                break label$3
               }
               $1_1 = $16_1 + 1 | 0;
               $7_1 = $1937(($7_1 + Math_imul($20_1, 58) | 0) + 71199 | 0, 0);
               if ($7_1 - 1 >>> 0 < 8) {
                continue
               }
               break;
              };
              $1973($10_1, 76, $1_1);
              label$34 : {
               label$35 : {
                if (($7_1 | 0) != 27) {
                 if (!$7_1) {
                  break label$3
                 }
                 if (($17_1 | 0) >= 0) {
                  $1973(($17_1 << 2) + $4_1 | 0, 0, $7_1);
                  $1983($10_1, 64, $1960(($17_1 << 3) + $3 | 0, 0), i64toi32_i32$HIGH_BITS);
                  break label$35;
                 }
                 if (!$0_1) {
                  break label$6
                 }
                 $1728($10_1 - -64 | 0, $7_1, $2_1, $6_1);
                 break label$34;
                }
                if (($17_1 | 0) >= 0) {
                 break label$3
                }
               }
               $7_1 = 0;
               if (!$0_1) {
                continue label$5
               }
              }
              $8 = $13 & -65537;
              $13 = $13 & 8192 ? $8 : $13;
              $17_1 = 0;
              $23_1 = 1616;
              $9 = $18_1;
              label$38 : {
               label$39 : {
                label$40 : {
                 label$41 : {
                  label$42 : {
                   label$43 : {
                    label$44 : {
                     label$45 : {
                      label$46 : {
                       label$47 : {
                        label$48 : {
                         label$49 : {
                          label$50 : {
                           label$51 : {
                            label$52 : {
                             label$53 : {
                              $7_1 = $1936($16_1, 0);
                              $7_1 = $20_1 ? (($7_1 & 15) == 3 ? $7_1 & -33 : $7_1) : $7_1;
                              switch ($7_1 - 88 | 0) {
                              case 11:
                               break label$38;
                              case 9:
                              case 13:
                              case 14:
                              case 15:
                               break label$39;
                              case 27:
                               break label$44;
                              case 12:
                              case 17:
                               break label$47;
                              case 23:
                               break label$48;
                              case 0:
                              case 32:
                               break label$49;
                              case 24:
                               break label$50;
                              case 22:
                               break label$51;
                              case 29:
                               break label$52;
                              case 1:
                              case 2:
                              case 3:
                              case 4:
                              case 5:
                              case 6:
                              case 7:
                              case 8:
                              case 10:
                              case 16:
                              case 18:
                              case 19:
                              case 20:
                              case 21:
                              case 25:
                              case 26:
                              case 28:
                              case 30:
                              case 31:
                               break label$7;
                              default:
                               break label$53;
                              };
                             }
                             label$54 : {
                              switch ($7_1 - 65 | 0) {
                              case 0:
                              case 4:
                              case 5:
                              case 6:
                               break label$39;
                              case 2:
                               break label$42;
                              case 1:
                              case 3:
                               break label$7;
                              default:
                               break label$54;
                              };
                             }
                             if (($7_1 | 0) == 83) {
                              break label$43
                             }
                             break label$8;
                            }
                            $7_1 = $1960($10_1, 64);
                            $9 = i64toi32_i32$HIGH_BITS;
                            $8 = 1616;
                            break label$46;
                           }
                           $7_1 = 0;
                           label$55 : {
                            switch ($20_1 & 255) {
                            case 0:
                             $1973($1944($10_1, 64), 0, $14);
                             continue label$5;
                            case 1:
                             $1973($1944($10_1, 64), 0, $14);
                             continue label$5;
                            case 2:
                             $1983($1944($10_1, 64), 0, $14, $14 >> 31);
                             continue label$5;
                            case 3:
                             $1970($1944($10_1, 64), 0, $14);
                             continue label$5;
                            case 4:
                             $1968($1944($10_1, 64), 0, $14);
                             continue label$5;
                            case 6:
                             $1973($1944($10_1, 64), 0, $14);
                             continue label$5;
                            case 7:
                             break label$55;
                            default:
                             continue label$5;
                            };
                           }
                           $1983($1944($10_1, 64), 0, $14, $14 >> 31);
                           continue label$5;
                          }
                          $11_1 = $11_1 >>> 0 <= 8 ? 8 : $11_1;
                          $13 = $13 | 8;
                          $7_1 = 120;
                         }
                         $12_1 = $18_1;
                         $20_1 = $7_1 & 32;
                         $21_1 = $1960($10_1, 64);
                         $8 = i64toi32_i32$HIGH_BITS;
                         if ($21_1 | $8) {
                          while (1) {
                           $12_1 = $12_1 - 1 | 0;
                           $1968($12_1, 0, $1937(($21_1 & 15) + 71728 | 0, 0) | $20_1);
                           $16_1 = !$8 & $21_1 >>> 0 > 15 | ($8 | 0) != 0;
                           $9 = $8;
                           $8 = $8 >>> 4 | 0;
                           $21_1 = ($9 & 15) << 28 | $21_1 >>> 4;
                           if ($16_1) {
                            continue
                           }
                           break;
                          }
                         }
                         if (!($1960($10_1, 64) | i64toi32_i32$HIGH_BITS) | !($13 & 8)) {
                          break label$45
                         }
                         $23_1 = ($7_1 >>> 4 | 0) + 1616 | 0;
                         $17_1 = 2;
                         break label$45;
                        }
                        $16_1 = $1960($10_1, 64);
                        $12_1 = i64toi32_i32$HIGH_BITS;
                        if ($16_1 | $12_1) {
                         while (1) {
                          $9 = $9 - 1 | 0;
                          $1968($9, 0, $16_1 & 7 | 48);
                          $8 = !$12_1 & $16_1 >>> 0 > 7 | ($12_1 | 0) != 0;
                          $7_1 = $12_1;
                          $12_1 = $7_1 >>> 3 | 0;
                          $16_1 = ($7_1 & 7) << 29 | $16_1 >>> 3;
                          if ($8) {
                           continue
                          }
                          break;
                         }
                        }
                        $12_1 = $9;
                        if (!($13 & 8)) {
                         break label$45
                        }
                        $7_1 = $18_1 - $12_1 | 0;
                        $11_1 = ($7_1 | 0) < ($11_1 | 0) ? $11_1 : $7_1 + 1 | 0;
                        break label$45;
                       }
                       $7_1 = $1960($10_1, 64);
                       $9 = i64toi32_i32$HIGH_BITS;
                       if (($9 | 0) < 0) {
                        $9 = 0 - ($9 + (($7_1 | 0) != 0) | 0) | 0;
                        $7_1 = 0 - $7_1 | 0;
                        $1983($10_1, 64, $7_1, $9);
                        $17_1 = 1;
                        $8 = 1616;
                        break label$46;
                       }
                       if ($13 & 2048) {
                        $17_1 = 1;
                        $8 = 1617;
                        break label$46;
                       }
                       $17_1 = $13 & 1;
                       $8 = $17_1 ? 1618 : 1616;
                      }
                      $23_1 = $8;
                      $12_1 = $1731($7_1, $9, $18_1);
                     }
                     if (!!$22_1 & ($11_1 | 0) < 0) {
                      break label$4
                     }
                     $13 = $22_1 ? $13 & -65537 : $13;
                     $9 = $1960($10_1, 64);
                     $7_1 = i64toi32_i32$HIGH_BITS;
                     if (!($11_1 | ($9 | $7_1) != 0)) {
                      $12_1 = $18_1;
                      $9 = $12_1;
                      $11_1 = 0;
                      break label$7;
                     }
                     $7_1 = !($7_1 | $9) + ($18_1 - $12_1 | 0) | 0;
                     $11_1 = ($7_1 | 0) < ($11_1 | 0) ? $11_1 : $7_1;
                     break label$8;
                    }
                    $7_1 = $1944($10_1, 64);
                    $12_1 = $7_1 ? $7_1 : 17968;
                    $9 = $11_1 >>> 0 >= 2147483647 ? 2147483647 : $11_1;
                    $7_1 = $1644($12_1, 0, $9);
                    $7_1 = $7_1 ? $7_1 - $12_1 | 0 : $9;
                    $9 = $7_1 + $12_1 | 0;
                    if (($11_1 | 0) >= 0) {
                     $13 = $8;
                     $11_1 = $7_1;
                     break label$7;
                    }
                    $13 = $8;
                    $11_1 = $7_1;
                    if ($1937($9, 0)) {
                     break label$4
                    }
                    break label$7;
                   }
                   if ($11_1) {
                    $7_1 = $1944($10_1, 64);
                    break label$41;
                   }
                   $7_1 = 0;
                   $1732($0_1, 32, $15_1, 0, $13);
                   break label$40;
                  }
                  $1973($10_1, 12, 0);
                  $1973($10_1, 8, $1960($10_1, 64));
                  $7_1 = $10_1 + 8 | 0;
                  $1973($10_1, 64, $7_1);
                  $11_1 = -1;
                 }
                 $8 = $7_1;
                 $7_1 = 0;
                 label$68 : {
                  while (1) {
                   $9 = $1944($8, 0);
                   if (!$9) {
                    break label$68
                   }
                   $12_1 = $1754($10_1 + 4 | 0, $9);
                   $9 = ($12_1 | 0) < 0;
                   if (!($9 | $12_1 >>> 0 > $11_1 - $7_1 >>> 0)) {
                    $8 = $8 + 4 | 0;
                    $7_1 = $7_1 + $12_1 | 0;
                    if ($11_1 >>> 0 > $7_1 >>> 0) {
                     continue
                    }
                    break label$68;
                   }
                   break;
                  };
                  if ($9) {
                   break label$2
                  }
                 }
                 $9 = 61;
                 if (($7_1 | 0) < 0) {
                  break label$3
                 }
                 $1732($0_1, 32, $15_1, $7_1, $13);
                 if (!$7_1) {
                  $7_1 = 0;
                  break label$40;
                 }
                 $9 = 0;
                 $8 = $1944($10_1, 64);
                 while (1) {
                  $12_1 = $1944($8, 0);
                  if (!$12_1) {
                   break label$40
                  }
                  $12_1 = $1754($10_1 + 4 | 0, $12_1);
                  $9 = $12_1 + $9 | 0;
                  if ($9 >>> 0 > $7_1 >>> 0) {
                   break label$40
                  }
                  $1726($0_1, $10_1 + 4 | 0, $12_1);
                  $8 = $8 + 4 | 0;
                  if ($7_1 >>> 0 > $9 >>> 0) {
                   continue
                  }
                  break;
                 };
                }
                $1732($0_1, 32, $15_1, $7_1, $13 ^ 8192);
                $7_1 = ($7_1 | 0) < ($15_1 | 0) ? $15_1 : $7_1;
                continue label$5;
               }
               if (!!$22_1 & ($11_1 | 0) < 0) {
                break label$4
               }
               $9 = 61;
               $7_1 = FUNCTION_TABLE[$5_1 | 0]($0_1, $1967($10_1, 64), $15_1, $11_1, $13, $7_1) | 0;
               if (($7_1 | 0) >= 0) {
                continue label$5
               }
               break label$3;
              }
              $1968($10_1, 55, $1960($10_1, 64));
              $11_1 = 1;
              $12_1 = $25_1;
              $13 = $8;
              break label$7;
             }
             $8 = $1937($7_1, 1);
             $7_1 = $7_1 + 1 | 0;
             continue;
            }
           }
           if ($0_1) {
            break label$1
           }
           if (!$19) {
            break label$6
           }
           $7_1 = 1;
           while (1) {
            $0_1 = $1944(($7_1 << 2) + $4_1 | 0, 0);
            if ($0_1) {
             $1728(($7_1 << 3) + $3 | 0, $0_1, $2_1, $6_1);
             $14 = 1;
             $7_1 = $7_1 + 1 | 0;
             if (($7_1 | 0) != 10) {
              continue
             }
             break label$1;
            }
            break;
           };
           $14 = 1;
           if ($7_1 >>> 0 >= 10) {
            break label$1
           }
           while (1) {
            if ($1944(($7_1 << 2) + $4_1 | 0, 0)) {
             break label$9
            }
            $7_1 = $7_1 + 1 | 0;
            if (($7_1 | 0) != 10) {
             continue
            }
            break;
           };
           break label$1;
          }
          $9 = 28;
          break label$3;
         }
         $9 = $18_1;
        }
        $16_1 = $9 - $12_1 | 0;
        $8 = ($11_1 | 0) > ($16_1 | 0) ? $11_1 : $16_1;
        if (($8 | 0) > ($17_1 ^ 2147483647)) {
         break label$4
        }
        $9 = 61;
        $11_1 = $8 + $17_1 | 0;
        $7_1 = ($11_1 | 0) < ($15_1 | 0) ? $15_1 : $11_1;
        if (($24 | 0) < ($7_1 | 0)) {
         break label$3
        }
        $1732($0_1, 32, $7_1, $11_1, $13);
        $1726($0_1, $23_1, $17_1);
        $1732($0_1, 48, $7_1, $11_1, $13 ^ 65536);
        $1732($0_1, 48, $8, $16_1, 0);
        $1726($0_1, $12_1, $16_1);
        $1732($0_1, 32, $7_1, $11_1, $13 ^ 8192);
        continue;
       }
       break;
      };
      $14 = 0;
      break label$1;
     }
     $9 = 61;
    }
    $1973(95900, 0, $9);
   }
   $14 = -1;
  }
  global$0 = $10_1 + 80 | 0;
  return $14;
 }
 
 function $1726($0_1, $1_1, $2_1) {
  if (!($1937($0_1, 0) & 32)) {
   $1632($1_1, $2_1, $0_1)
  }
 }
 
 function $1727($0_1) {
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0;
  if (!$1721($1936($1944($0_1, 0), 0))) {
   return 0
  }
  while (1) {
   $2_1 = $1944($0_1, 0);
   $1_1 = -1;
   if ($3 >>> 0 <= 214748364) {
    $4_1 = $1936($2_1, 0) - 48 | 0;
    $1_1 = Math_imul($3, 10);
    $1_1 = ($4_1 | 0) > ($1_1 ^ 2147483647) ? -1 : $4_1 + $1_1 | 0;
   }
   $1973($0_1, 0, $2_1 + 1 | 0);
   $3 = $1_1;
   if ($1721($1936($2_1, 1))) {
    continue
   }
   break;
  };
  return $1_1;
 }
 
 function $1728($0_1, $1_1, $2_1, $3) {
  folding_inner2 : {
   switch ($1_1 - 9 | 0) {
   case 0:
    $1_1 = $1944($2_1, 0);
    $1973($2_1, 0, $1_1 + 4 | 0);
    $1973($0_1, 0, $1944($1_1, 0));
    return;
   case 6:
    $1_1 = $1944($2_1, 0);
    $1973($2_1, 0, $1_1 + 4 | 0);
    $2_1 = $0_1;
    if (!$1_1 | HEAPU32[18353] < $1_1 + 2 >>> 0) {
     fimport$41()
    }
    if ($1_1 & 1) {
     fimport$42()
    }
    $0_1 = HEAP16[$1_1 >> 1];
    i64toi32_i32$HIGH_BITS = $0_1 >> 31;
    $1983($2_1, 0, $0_1, i64toi32_i32$HIGH_BITS);
    return;
   case 7:
    $1_1 = $1944($2_1, 0);
    $1973($2_1, 0, $1_1 + 4 | 0);
    if (!$1_1 | HEAPU32[18353] < $1_1 + 2 >>> 0) {
     fimport$41()
    }
    if ($1_1 & 1) {
     fimport$42()
    }
    i64toi32_i32$HIGH_BITS = 0;
    $1983($0_1, 0, HEAPU16[$1_1 >> 1], 0);
    return;
   case 8:
    $1_1 = $1944($2_1, 0);
    $1973($2_1, 0, $1_1 + 4 | 0);
    $1983($0_1, 0, $1945($1_1, 0), i64toi32_i32$HIGH_BITS);
    return;
   case 9:
    $1_1 = $1944($2_1, 0);
    $1973($2_1, 0, $1_1 + 4 | 0);
    if (!$1_1 | HEAPU32[18353] < $1_1 + 1 >>> 0) {
     fimport$41()
    }
    i64toi32_i32$HIGH_BITS = 0;
    $1983($0_1, 0, HEAPU8[$1_1 | 0], 0);
    return;
   case 16:
    $1_1 = $1944($2_1, 0) + 7 & -8;
    $1973($2_1, 0, $1_1 + 8 | 0);
    $1990($0_1, 0, $1967($1_1, 0));
    return;
   case 17:
    FUNCTION_TABLE[$3 | 0]($0_1, $2_1);
   default:
    return;
   case 1:
   case 4:
   case 14:
    $1_1 = $1944($2_1, 0);
    $1973($2_1, 0, $1_1 + 4 | 0);
    $1983($0_1, 0, $1953($1_1, 0), i64toi32_i32$HIGH_BITS);
    return;
   case 2:
   case 5:
   case 11:
   case 15:
    $1_1 = $1944($2_1, 0);
    $1973($2_1, 0, $1_1 + 4 | 0);
    $1983($0_1, 0, $1956($1_1, 0), i64toi32_i32$HIGH_BITS);
    return;
   case 3:
   case 10:
   case 12:
   case 13:
    break folding_inner2;
   };
  }
  $1_1 = $1944($2_1, 0) + 7 & -8;
  $1973($2_1, 0, $1_1 + 8 | 0);
  $1983($0_1, 0, $1960($1_1, 0), i64toi32_i32$HIGH_BITS);
 }
 
 function $1731($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0;
  if (($1_1 | 0) == 1 | $1_1 >>> 0 > 1) {
   while (1) {
    $2_1 = $2_1 - 1 | 0;
    $4_1 = $0_1;
    $0_1 = __wasm_i64_udiv($0_1, $1_1, 10);
    $3 = i64toi32_i32$HIGH_BITS;
    $1968($2_1, 0, $4_1 - __wasm_i64_mul($0_1, $3, 10, 0) | 48);
    $4_1 = $1_1 >>> 0 > 9;
    $1_1 = $3;
    if ($4_1) {
     continue
    }
    break;
   }
  }
  if ($0_1) {
   while (1) {
    $2_1 = $2_1 - 1 | 0;
    $1_1 = ($0_1 >>> 0) / 10 | 0;
    $1968($2_1, 0, $0_1 - Math_imul($1_1, 10) | 48);
    $3 = $0_1 >>> 0 > 9;
    $0_1 = $1_1;
    if ($3) {
     continue
    }
    break;
   }
  }
  return $2_1;
 }
 
 function $1732($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0;
  $5_1 = global$0 - 256 | 0;
  global$0 = $5_1;
  if (!($4_1 & 73728 | ($2_1 | 0) <= ($3 | 0))) {
   $3 = $2_1 - $3 | 0;
   $2_1 = $3 >>> 0 < 256;
   $1604($5_1, $1_1 & 255, $2_1 ? $3 : 256);
   if (!$2_1) {
    while (1) {
     $1726($0_1, $5_1, 256);
     $3 = $3 - 256 | 0;
     if ($3 >>> 0 > 255) {
      continue
     }
     break;
    }
   }
   $1726($0_1, $5_1, $3);
  }
  global$0 = $5_1 + 256 | 0;
 }
 
 function $1734($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = +$1_1;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0.0, $19 = 0, $20_1 = 0, $21_1 = 0, $22_1 = 0, $23_1 = 0, $24 = 0;
  $12_1 = global$0 - 560 | 0;
  global$0 = $12_1;
  $1973($12_1, 44, 0);
  $1736($1_1);
  $6_1 = i64toi32_i32$HIGH_BITS;
  label$1 : {
   if (($6_1 | 0) < 0) {
    $19 = 1;
    $22_1 = 1626;
    $1_1 = -$1_1;
    $1736($1_1);
    $6_1 = i64toi32_i32$HIGH_BITS;
    break label$1;
   }
   if ($4_1 & 2048) {
    $19 = 1;
    $22_1 = 1629;
    break label$1;
   }
   $19 = $4_1 & 1;
   $22_1 = $19 ? 1632 : 1627;
   $23_1 = !$19;
  }
  label$4 : {
   if (($6_1 & 2146435072) == 2146435072) {
    $3 = $19 + 3 | 0;
    $1732($0_1, 32, $2_1, $3, $4_1 & -65537);
    $1726($0_1, $22_1, $19);
    $5_1 = $5_1 & 32;
    $1726($0_1, $1_1 != $1_1 ? ($5_1 ? 7861 : 14869) : $5_1 ? 9623 : 14956, 3);
    $1732($0_1, 32, $2_1, $3, $4_1 ^ 8192);
    $8 = ($2_1 | 0) < ($3 | 0) ? $3 : $2_1;
    break label$4;
   }
   $20_1 = $12_1 + 16 | 0;
   label$6 : {
    label$7 : {
     label$8 : {
      $1_1 = $1723($1_1, $12_1 + 44 | 0);
      $1_1 = $1_1 + $1_1;
      if ($1_1 != 0.0) {
       $6_1 = $1944($12_1, 44);
       $1973($12_1, 44, $6_1 - 1 | 0);
       $16_1 = $5_1 | 32;
       if (($16_1 | 0) != 97) {
        break label$8
       }
       break label$6;
      }
      $16_1 = $5_1 | 32;
      if (($16_1 | 0) == 97) {
       break label$6
      }
      $10_1 = $1944($12_1, 44);
      $11_1 = ($3 | 0) < 0 ? 6 : $3;
      break label$7;
     }
     $10_1 = $6_1 - 29 | 0;
     $1973($12_1, 44, $10_1);
     $1_1 = $1_1 * 268435456.0;
     $11_1 = ($3 | 0) < 0 ? 6 : $3;
    }
    $15_1 = ($12_1 + 48 | 0) + (($10_1 | 0) >= 0 ? 288 : 0) | 0;
    $7_1 = $15_1;
    while (1) {
     if ($1_1 < 4294967296.0 & $1_1 >= 0.0) {
      $6_1 = ~~$1_1 >>> 0
     } else {
      $6_1 = 0
     }
     $1973($7_1, 0, $6_1);
     $7_1 = $7_1 + 4 | 0;
     $1_1 = ($1_1 - +($6_1 >>> 0)) * 1.0e9;
     if ($1_1 != 0.0) {
      continue
     }
     break;
    };
    label$13 : {
     if (($10_1 | 0) <= 0) {
      $3 = $10_1;
      $6_1 = $7_1;
      $9 = $15_1;
      break label$13;
     }
     $9 = $15_1;
     $3 = $10_1;
     while (1) {
      $8 = ($3 | 0) >= 29 ? 29 : $3;
      $6_1 = $7_1 - 4 | 0;
      label$16 : {
       if ($9 >>> 0 > $6_1 >>> 0) {
        break label$16
       }
       $3 = 0;
       while (1) {
        $14 = $1956($6_1, 0);
        $21_1 = i64toi32_i32$HIGH_BITS;
        $13 = $14;
        $14 = $8 & 31;
        if (($8 & 63) >>> 0 >= 32) {
         $21_1 = $13 << $14;
         $13 = 0;
        } else {
         $21_1 = (1 << $14) - 1 & $13 >>> 32 - $14 | $21_1 << $14;
         $13 = $13 << $14;
        }
        $14 = $13 + $3 | 0;
        $13 = $21_1;
        $13 = $3 >>> 0 > $14 >>> 0 ? $13 + 1 | 0 : $13;
        $3 = __wasm_i64_udiv($14, $13, 1e9);
        $21_1 = __wasm_i64_mul($3, i64toi32_i32$HIGH_BITS, 1e9, 0);
        $1973($6_1, 0, $14 - $21_1 | 0);
        $6_1 = $6_1 - 4 | 0;
        if ($9 >>> 0 <= $6_1 >>> 0) {
         continue
        }
        break;
       };
       if (!$3) {
        break label$16
       }
       $9 = $9 - 4 | 0;
       $1973($9, 0, $3);
      }
      while (1) {
       $6_1 = $7_1;
       if ($6_1 >>> 0 > $9 >>> 0) {
        $7_1 = $6_1 - 4 | 0;
        if (!$1944($7_1, 0)) {
         continue
        }
       }
       break;
      };
      $3 = $1944($12_1, 44) - $8 | 0;
      $1973($12_1, 44, $3);
      $7_1 = $6_1;
      if (($3 | 0) > 0) {
       continue
      }
      break;
     };
    }
    if (($3 | 0) < 0) {
     $17_1 = (($11_1 + 25 >>> 0) / 9 | 0) + 1 | 0;
     $14 = ($16_1 | 0) == 102;
     while (1) {
      $3 = 0 - $3 | 0;
      $8 = ($3 | 0) >= 9 ? 9 : $3;
      label$22 : {
       if ($6_1 >>> 0 <= $9 >>> 0) {
        $7_1 = $1944($9, 0);
        break label$22;
       }
       $13 = 1e9 >>> $8 | 0;
       $21_1 = -1 << $8 ^ -1;
       $3 = 0;
       $7_1 = $9;
       while (1) {
        $24 = $3;
        $3 = $1944($7_1, 0);
        $1973($7_1, 0, $24 + ($3 >>> $8 | 0) | 0);
        $3 = Math_imul($13, $3 & $21_1);
        $7_1 = $7_1 + 4 | 0;
        if ($7_1 >>> 0 < $6_1 >>> 0) {
         continue
        }
        break;
       };
       $7_1 = $1944($9, 0);
       if (!$3) {
        break label$22
       }
       $1973($6_1, 0, $3);
       $6_1 = $6_1 + 4 | 0;
      }
      $3 = $1944($12_1, 44) + $8 | 0;
      $1973($12_1, 44, $3);
      $9 = (!$7_1 << 2) + $9 | 0;
      $7_1 = $14 ? $15_1 : $9;
      $6_1 = $6_1 - $7_1 >> 2 > ($17_1 | 0) ? $7_1 + ($17_1 << 2) | 0 : $6_1;
      if (($3 | 0) < 0) {
       continue
      }
      break;
     };
    }
    $3 = 0;
    label$25 : {
     if ($6_1 >>> 0 <= $9 >>> 0) {
      break label$25
     }
     $3 = Math_imul($15_1 - $9 >> 2, 9);
     $7_1 = 10;
     $8 = $1944($9, 0);
     if ($8 >>> 0 < 10) {
      break label$25
     }
     while (1) {
      $3 = $3 + 1 | 0;
      $7_1 = Math_imul($7_1, 10);
      if ($8 >>> 0 >= $7_1 >>> 0) {
       continue
      }
      break;
     };
    }
    $7_1 = ($11_1 - (($16_1 | 0) != 102 ? $3 : 0) | 0) - (($16_1 | 0) == 103 & ($11_1 | 0) != 0) | 0;
    if (($7_1 | 0) < (Math_imul($6_1 - $15_1 >> 2, 9) - 9 | 0)) {
     $8 = $7_1 + 9216 | 0;
     $17_1 = ($8 | 0) / 9 | 0;
     $10_1 = (($12_1 + (($10_1 | 0) < 0 ? 4 : 292) | 0) + ($17_1 << 2) | 0) - 4048 | 0;
     $7_1 = 10;
     $8 = $8 - Math_imul($17_1, 9) | 0;
     if (($8 | 0) <= 7) {
      while (1) {
       $7_1 = Math_imul($7_1, 10);
       $8 = $8 + 1 | 0;
       if (($8 | 0) != 8) {
        continue
       }
       break;
      }
     }
     $14 = $10_1 + 4 | 0;
     $13 = $1944($10_1, 0);
     $17_1 = ($13 >>> 0) / ($7_1 >>> 0) | 0;
     $8 = $13 - Math_imul($7_1, $17_1) | 0;
     label$30 : {
      if (!$8) {
       if (($6_1 | 0) == ($14 | 0)) {
        break label$30
       }
      }
      label$32 : {
       if (!($17_1 & 1)) {
        $1_1 = 9007199254740992.0;
        if (($7_1 | 0) != 1e9 | $9 >>> 0 >= $10_1 >>> 0) {
         break label$32
        }
        if (!($1937($10_1 - 4 | 0, 0) & 1)) {
         break label$32
        }
       }
       $1_1 = 9007199254740994.0;
      }
      $18_1 = ($6_1 | 0) == ($14 | 0) ? 1.0 : 1.5;
      $14 = $7_1 >>> 1 | 0;
      $18_1 = $8 >>> 0 < $14 >>> 0 ? .5 : ($14 | 0) == ($8 | 0) ? $18_1 : 1.5;
      label$34 : {
       if ($23_1) {
        break label$34
       }
       if (($1937($22_1, 0) | 0) != 45) {
        break label$34
       }
       $18_1 = -$18_1;
       $1_1 = -$1_1;
      }
      $8 = $13 - $8 | 0;
      $1973($10_1, 0, $8);
      if ($1_1 + $18_1 == $1_1) {
       break label$30
      }
      $3 = $7_1 + $8 | 0;
      $1973($10_1, 0, $3);
      if ($3 >>> 0 >= 1e9) {
       while (1) {
        $1973($10_1, 0, 0);
        $10_1 = $10_1 - 4 | 0;
        if ($9 >>> 0 > $10_1 >>> 0) {
         $9 = $9 - 4 | 0;
         $1973($9, 0, 0);
        }
        $3 = $1944($10_1, 0) + 1 | 0;
        $1973($10_1, 0, $3);
        if ($3 >>> 0 > 999999999) {
         continue
        }
        break;
       }
      }
      $3 = Math_imul($15_1 - $9 >> 2, 9);
      $7_1 = 10;
      $8 = $1944($9, 0);
      if ($8 >>> 0 < 10) {
       break label$30
      }
      while (1) {
       $3 = $3 + 1 | 0;
       $7_1 = Math_imul($7_1, 10);
       if ($8 >>> 0 >= $7_1 >>> 0) {
        continue
       }
       break;
      };
     }
     $7_1 = $10_1 + 4 | 0;
     $6_1 = $6_1 >>> 0 > $7_1 >>> 0 ? $7_1 : $6_1;
    }
    while (1) {
     label$39 : {
      $7_1 = $6_1;
      $8 = $6_1 >>> 0 <= $9 >>> 0;
      if ($8) {
       break label$39
      }
      $6_1 = $7_1 - 4 | 0;
      if (!$1944($6_1, 0)) {
       continue
      }
     }
     break;
    };
    label$41 : {
     if (($16_1 | 0) != 103) {
      $10_1 = $4_1 & 8;
      break label$41;
     }
     $6_1 = $11_1 ? $11_1 : 1;
     $10_1 = ($6_1 | 0) > ($3 | 0) & ($3 | 0) > -5;
     $11_1 = ($10_1 ? $3 ^ -1 : -1) + $6_1 | 0;
     $5_1 = ($10_1 ? -1 : -2) + $5_1 | 0;
     $10_1 = $4_1 & 8;
     if ($10_1) {
      break label$41
     }
     $6_1 = -9;
     label$43 : {
      if ($8) {
       break label$43
      }
      $16_1 = $1944($7_1 - 4 | 0, 0);
      if (!$16_1) {
       break label$43
      }
      $8 = 10;
      $6_1 = 0;
      if (($16_1 >>> 0) % 10 | 0) {
       break label$43
      }
      while (1) {
       $10_1 = $6_1;
       $6_1 = $6_1 + 1 | 0;
       $8 = Math_imul($8, 10);
       if (!(($16_1 >>> 0) % ($8 >>> 0) | 0)) {
        continue
       }
       break;
      };
      $6_1 = $10_1 ^ -1;
     }
     $8 = Math_imul($7_1 - $15_1 >> 2, 9);
     if (($5_1 & -33) == 70) {
      $10_1 = 0;
      $6_1 = ($6_1 + $8 | 0) - 9 | 0;
      $6_1 = ($6_1 | 0) > 0 ? $6_1 : 0;
      $11_1 = ($6_1 | 0) > ($11_1 | 0) ? $11_1 : $6_1;
      break label$41;
     }
     $10_1 = 0;
     $6_1 = (($3 + $8 | 0) + $6_1 | 0) - 9 | 0;
     $6_1 = ($6_1 | 0) > 0 ? $6_1 : 0;
     $11_1 = ($6_1 | 0) > ($11_1 | 0) ? $11_1 : $6_1;
    }
    $8 = -1;
    $14 = $10_1 | $11_1;
    if ((($14 ? 2147483645 : 2147483646) | 0) < ($11_1 | 0)) {
     break label$4
    }
    $16_1 = ((($14 | 0) != 0) + $11_1 | 0) + 1 | 0;
    $13 = $5_1 & -33;
    label$46 : {
     if (($13 | 0) == 70) {
      if (($16_1 ^ 2147483647) < ($3 | 0)) {
       break label$4
      }
      $6_1 = ($3 | 0) > 0 ? $3 : 0;
      break label$46;
     }
     $6_1 = $3 >> 31;
     $6_1 = $1731(($6_1 ^ $3) - $6_1 | 0, 0, $20_1);
     if (($20_1 - $6_1 | 0) <= 1) {
      while (1) {
       $6_1 = $6_1 - 1 | 0;
       $1968($6_1, 0, 48);
       if (($20_1 - $6_1 | 0) < 2) {
        continue
       }
       break;
      }
     }
     $17_1 = $6_1 - 2 | 0;
     $1968($17_1, 0, $5_1);
     $1968($6_1 - 1 | 0, 0, ($3 | 0) < 0 ? 45 : 43);
     $6_1 = $20_1 - $17_1 | 0;
     if (($6_1 | 0) > ($16_1 ^ 2147483647)) {
      break label$4
     }
    }
    $3 = $6_1 + $16_1 | 0;
    if (($3 | 0) > ($19 ^ 2147483647)) {
     break label$4
    }
    $5_1 = $3 + $19 | 0;
    $1732($0_1, 32, $2_1, $5_1, $4_1);
    $1726($0_1, $22_1, $19);
    $1732($0_1, 48, $2_1, $5_1, $4_1 ^ 65536);
    label$50 : {
     label$51 : {
      label$52 : {
       if (($13 | 0) == 70) {
        $6_1 = $12_1 + 16 | 0;
        $3 = $6_1 | 8;
        $10_1 = $6_1 | 9;
        $8 = $9 >>> 0 > $15_1 >>> 0 ? $15_1 : $9;
        $9 = $8;
        while (1) {
         $6_1 = $1731($1956($9, 0), i64toi32_i32$HIGH_BITS, $10_1);
         label$55 : {
          if (($8 | 0) != ($9 | 0)) {
           if ($12_1 + 16 >>> 0 >= $6_1 >>> 0) {
            break label$55
           }
           while (1) {
            $6_1 = $6_1 - 1 | 0;
            $1968($6_1, 0, 48);
            if ($12_1 + 16 >>> 0 < $6_1 >>> 0) {
             continue
            }
            break;
           };
           break label$55;
          }
          if (($6_1 | 0) != ($10_1 | 0)) {
           break label$55
          }
          $1968($12_1, 24, 48);
          $6_1 = $3;
         }
         $1726($0_1, $6_1, $10_1 - $6_1 | 0);
         $9 = $9 + 4 | 0;
         if ($15_1 >>> 0 >= $9 >>> 0) {
          continue
         }
         break;
        };
        if ($14) {
         $1726($0_1, 17684, 1)
        }
        if (($11_1 | 0) <= 0 | $7_1 >>> 0 <= $9 >>> 0) {
         break label$52
        }
        while (1) {
         $6_1 = $1731($1956($9, 0), i64toi32_i32$HIGH_BITS, $10_1);
         if ($6_1 >>> 0 > $12_1 + 16 >>> 0) {
          while (1) {
           $6_1 = $6_1 - 1 | 0;
           $1968($6_1, 0, 48);
           if ($12_1 + 16 >>> 0 < $6_1 >>> 0) {
            continue
           }
           break;
          }
         }
         $1726($0_1, $6_1, ($11_1 | 0) >= 9 ? 9 : $11_1);
         $6_1 = $11_1 - 9 | 0;
         $9 = $9 + 4 | 0;
         if ($7_1 >>> 0 <= $9 >>> 0) {
          break label$51
         }
         $3 = ($11_1 | 0) > 9;
         $11_1 = $6_1;
         if ($3) {
          continue
         }
         break;
        };
        break label$51;
       }
       label$62 : {
        if (($11_1 | 0) < 0) {
         break label$62
        }
        $8 = $7_1 >>> 0 > $9 >>> 0 ? $7_1 : $9 + 4 | 0;
        $6_1 = $12_1 + 16 | 0;
        $3 = $6_1 | 8;
        $15_1 = $6_1 | 9;
        $7_1 = $9;
        while (1) {
         $6_1 = $1731($1956($7_1, 0), i64toi32_i32$HIGH_BITS, $15_1);
         if (($6_1 | 0) == ($15_1 | 0)) {
          $1968($12_1, 24, 48);
          $6_1 = $3;
         }
         label$65 : {
          if (($7_1 | 0) != ($9 | 0)) {
           if ($12_1 + 16 >>> 0 >= $6_1 >>> 0) {
            break label$65
           }
           while (1) {
            $6_1 = $6_1 - 1 | 0;
            $1968($6_1, 0, 48);
            if ($12_1 + 16 >>> 0 < $6_1 >>> 0) {
             continue
            }
            break;
           };
           break label$65;
          }
          $1726($0_1, $6_1, 1);
          $6_1 = $6_1 + 1 | 0;
          if (!($10_1 | $11_1)) {
           break label$65
          }
          $1726($0_1, 17684, 1);
         }
         $13 = $6_1;
         $6_1 = $15_1 - $6_1 | 0;
         $1726($0_1, $13, ($6_1 | 0) > ($11_1 | 0) ? $11_1 : $6_1);
         $11_1 = $11_1 - $6_1 | 0;
         $7_1 = $7_1 + 4 | 0;
         if ($8 >>> 0 <= $7_1 >>> 0) {
          break label$62
         }
         if (($11_1 | 0) >= 0) {
          continue
         }
         break;
        };
       }
       $1732($0_1, 48, $11_1 + 18 | 0, 18, 0);
       $1726($0_1, $17_1, $20_1 - $17_1 | 0);
       break label$50;
      }
      $6_1 = $11_1;
     }
     $1732($0_1, 48, $6_1 + 9 | 0, 9, 0);
    }
    $1732($0_1, 32, $2_1, $5_1, $4_1 ^ 8192);
    $8 = ($2_1 | 0) < ($5_1 | 0) ? $5_1 : $2_1;
    break label$4;
   }
   $9 = ($5_1 << 26 >> 31 & 9) + $22_1 | 0;
   label$68 : {
    if ($3 >>> 0 > 11) {
     break label$68
    }
    $6_1 = 12 - $3 | 0;
    $18_1 = 16.0;
    while (1) {
     $18_1 = $18_1 * 16.0;
     $6_1 = $6_1 - 1 | 0;
     if ($6_1) {
      continue
     }
     break;
    };
    if (($1937($9, 0) | 0) == 45) {
     $1_1 = -($18_1 + (-$1_1 - $18_1));
     break label$68;
    }
    $1_1 = $1_1 + $18_1 - $18_1;
   }
   $7_1 = $1944($12_1, 44);
   $6_1 = $7_1 >> 31;
   $6_1 = $1731(($6_1 ^ $7_1) - $6_1 | 0, 0, $20_1);
   if (($6_1 | 0) == ($20_1 | 0)) {
    $1968($12_1, 15, 48);
    $6_1 = $12_1 + 15 | 0;
   }
   $11_1 = $19 | 2;
   $10_1 = $5_1 & 32;
   $7_1 = $1944($12_1, 44);
   $15_1 = $6_1 - 2 | 0;
   $1968($15_1, 0, $5_1 + 15 | 0);
   $1968($6_1 - 1 | 0, 0, ($7_1 | 0) < 0 ? 45 : 43);
   $6_1 = $4_1 & 8;
   $7_1 = $12_1 + 16 | 0;
   while (1) {
    $5_1 = $7_1;
    $5_1 = $7_1;
    if (Math_abs($1_1) < 2147483648.0) {
     $7_1 = ~~$1_1
    } else {
     $7_1 = -2147483648
    }
    $1968($5_1, 0, $1937($7_1 + 71728 | 0, 0) | $10_1);
    $1_1 = ($1_1 - +($7_1 | 0)) * 16.0;
    $7_1 = $5_1 + 1 | 0;
    if (!(!(($3 | 0) > 0 | $6_1) & $1_1 == 0.0 | ($7_1 - ($12_1 + 16 | 0) | 0) != 1)) {
     $1968($5_1, 1, 46);
     $7_1 = $5_1 + 2 | 0;
    }
    if ($1_1 != 0.0) {
     continue
    }
    break;
   };
   $8 = -1;
   $6_1 = $20_1 - $15_1 | 0;
   $5_1 = $6_1 + $11_1 | 0;
   if ((2147483645 - $5_1 | 0) < ($3 | 0)) {
    break label$4
   }
   $13 = $5_1;
   $10_1 = $12_1 + 16 | 0;
   $5_1 = $7_1 - $10_1 | 0;
   $7_1 = $3 ? (($5_1 - 2 | 0) < ($3 | 0) ? $3 + 2 | 0 : $5_1) : $5_1;
   $3 = $13 + $7_1 | 0;
   $1732($0_1, 32, $2_1, $3, $4_1);
   $1726($0_1, $9, $11_1);
   $1732($0_1, 48, $2_1, $3, $4_1 ^ 65536);
   $1726($0_1, $10_1, $5_1);
   $1732($0_1, 48, $7_1 - $5_1 | 0, 0, 0);
   $1726($0_1, $15_1, $6_1);
   $1732($0_1, 32, $2_1, $3, $4_1 ^ 8192);
   $8 = ($2_1 | 0) < ($3 | 0) ? $3 : $2_1;
  }
  global$0 = $12_1 + 560 | 0;
  return $8 | 0;
 }
 
 function $1735($0_1, $1_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  var $2_1 = 0;
  $2_1 = $1_1;
  $1_1 = $1944($1_1, 0) + 7 & -8;
  $1973($2_1, 0, $1_1 + 16 | 0);
  $1990($0_1, 0, $1781($1960($1_1, 0), i64toi32_i32$HIGH_BITS, $1960($1_1 + 8 | 0, 0), i64toi32_i32$HIGH_BITS));
 }
 
 function $1736($0_1) {
  var $1_1 = 0;
  wasm2js_scratch_store_f64(+$0_1);
  $1_1 = wasm2js_scratch_load_i32(1) | 0;
  wasm2js_scratch_load_i32(0) | 0;
  i64toi32_i32$HIGH_BITS = $1_1;
 }
 
 function $1738($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $4_1 = global$0 - 160 | 0;
  global$0 = $4_1;
  $5_1 = $1_1 ? $0_1 : $4_1 + 158 | 0;
  $1973($4_1, 148, $5_1);
  $0_1 = -1;
  $6_1 = $1_1 - 1 | 0;
  $1973($4_1, 152, $1_1 >>> 0 >= $6_1 >>> 0 ? $6_1 : 0);
  $4_1 = $1604($4_1, 0, 144);
  $1973($4_1, 76, -1);
  $1973($4_1, 36, 972);
  $1973($4_1, 80, -1);
  $1973($4_1, 44, $4_1 + 159 | 0);
  $1973($4_1, 84, $4_1 + 148 | 0);
  label$1 : {
   if (($1_1 | 0) < 0) {
    $1973(95900, 0, 61);
    break label$1;
   }
   $1968($5_1, 0, 0);
   $0_1 = $1724($4_1, $2_1, $3, 970, 971);
  }
  global$0 = $4_1 + 160 | 0;
  return $0_1;
 }
 
 function $1739($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;
  $4_1 = $1944($0_1, 84);
  $5_1 = $1944($4_1, 4);
  $3 = $1944($0_1, 20);
  $6_1 = $1944($0_1, 28);
  $3 = $3 - $6_1 | 0;
  $3 = $3 >>> 0 > $5_1 >>> 0 ? $5_1 : $3;
  if ($3) {
   $1602($1944($4_1, 0), $6_1, $3);
   $1973($4_1, 0, $1944($4_1, 0) + $3 | 0);
   $5_1 = $1944($4_1, 4) - $3 | 0;
   $1973($4_1, 4, $5_1);
  }
  $3 = $1944($4_1, 0);
  $5_1 = $2_1 >>> 0 > $5_1 >>> 0 ? $5_1 : $2_1;
  if ($5_1) {
   $1602($3, $1_1, $5_1);
   $3 = $1944($4_1, 0) + $5_1 | 0;
   $1973($4_1, 0, $3);
   $1973($4_1, 4, $1944($4_1, 4) - $5_1 | 0);
  }
  $1968($3, 0, 0);
  $1_1 = $1944($0_1, 44);
  $1973($0_1, 28, $1_1);
  $1973($0_1, 20, $1_1);
  return $2_1 | 0;
 }
 
 function $1749($0_1, $1_1, $2_1, $3) {
  label$1 : {
   if (!$0_1) {
    break label$1
   }
   label$2 : {
    switch ($1_1 + 2 | 0) {
    case 0:
     $1968($0_1, 0, $2_1);
     return;
    case 1:
     if (!$0_1 | HEAPU32[18353] < $0_1 + 2 >>> 0) {
      fimport$41()
     }
     if ($0_1 & 1) {
      fimport$42()
     }
     HEAP16[$0_1 >> 1] = $2_1;
     return;
    case 2:
    case 3:
     $1973($0_1, 0, $2_1);
     return;
    case 5:
     break label$2;
    default:
     break label$1;
    };
   }
   $1983($0_1, 0, $2_1, $3);
  }
 }
 
 function $1751($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0;
  $4_1 = $1944($0_1, 84);
  $3 = $2_1 + 256 | 0;
  $5_1 = $1644($4_1, 0, $3);
  $3 = $5_1 ? $5_1 - $4_1 | 0 : $3;
  $2_1 = $2_1 >>> 0 > $3 >>> 0 ? $3 : $2_1;
  $1602($1_1, $4_1, $2_1);
  $1_1 = $4_1 + $3 | 0;
  $1973($0_1, 84, $1_1);
  $1973($0_1, 8, $1_1);
  $1973($0_1, 4, $2_1 + $4_1 | 0);
  return $2_1 | 0;
 }
 
 function $1752($0_1) {
  if (!$0_1) {
   return 0
  }
  $1973(95900, 0, $0_1);
  return -1;
 }
 
 function $1754($0_1, $1_1) {
  if (!$0_1) {
   return 0
  }
  __inlined_func$1753 : {
   label$1 : {
    if ($0_1) {
     if ($1_1 >>> 0 <= 127) {
      break label$1
     }
     label$3 : {
      if (!$1944($1944(97e3, 96), 0)) {
       if (($1_1 & -128) == 57216) {
        break label$1
       }
       break label$3;
      }
      if ($1_1 >>> 0 <= 2047) {
       $1968($0_1, 1, $1_1 & 63 | 128);
       $1968($0_1, 0, $1_1 >>> 6 | 192);
       $0_1 = 2;
       break __inlined_func$1753;
      }
      if (!(($1_1 & -8192) != 57344 & $1_1 >>> 0 >= 55296)) {
       $1968($0_1, 2, $1_1 & 63 | 128);
       $1968($0_1, 0, $1_1 >>> 12 | 224);
       $1968($0_1, 1, $1_1 >>> 6 & 63 | 128);
       $0_1 = 3;
       break __inlined_func$1753;
      }
      if ($1_1 - 65536 >>> 0 <= 1048575) {
       $1968($0_1, 3, $1_1 & 63 | 128);
       $1968($0_1, 0, $1_1 >>> 18 | 240);
       $1968($0_1, 2, $1_1 >>> 6 & 63 | 128);
       $1968($0_1, 1, $1_1 >>> 12 & 63 | 128);
       $0_1 = 4;
       break __inlined_func$1753;
      }
     }
     $1973(95900, 0, 25);
     $0_1 = -1;
    } else {
     $0_1 = 1
    }
    break __inlined_func$1753;
   }
   $1968($0_1, 0, $1_1);
   $0_1 = 1;
  }
  return $0_1;
 }
 
 function $1755($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0;
  $11_1 = global$0 - 16 | 0;
  global$0 = $11_1;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           if ($0_1 >>> 0 <= 244) {
            $5_1 = $1944(0, 97136);
            $6_1 = $0_1 >>> 0 < 11 ? 16 : $0_1 + 11 & -8;
            $0_1 = $6_1 >>> 3 | 0;
            $1_1 = $5_1 >>> $0_1 | 0;
            if ($1_1 & 3) {
             $2_1 = $0_1 + (($1_1 ^ -1) & 1) | 0;
             $1_1 = $2_1 << 3;
             $0_1 = $1_1 + 97176 | 0;
             $1_1 = $1944($1_1 + 97184 | 0, 0);
             $3 = $1944($1_1, 8);
             label$12 : {
              if (($0_1 | 0) == ($3 | 0)) {
               $1973(0, 97136, __wasm_rotl_i32($2_1) & $5_1);
               break label$12;
              }
              $1973($3, 12, $0_1);
              $1973($0_1, 8, $3);
             }
             $0_1 = $1_1 + 8 | 0;
             $2_1 = $2_1 << 3;
             $1973($1_1, 4, $2_1 | 3);
             $1_1 = $1_1 + $2_1 | 0;
             $1973($1_1, 4, $1944($1_1, 4) | 1);
             break label$1;
            }
            $7_1 = $1944(0, 97144);
            if ($7_1 >>> 0 >= $6_1 >>> 0) {
             break label$9
            }
            if ($1_1) {
             $2_1 = 2 << $0_1;
             $0_1 = (0 - $2_1 | $2_1) & $1_1 << $0_1;
             $1_1 = __wasm_ctz_i32(0 - $0_1 & $0_1);
             $0_1 = $1_1 << 3;
             $2_1 = $0_1 + 97176 | 0;
             $0_1 = $1944($0_1 + 97184 | 0, 0);
             $3 = $1944($0_1, 8);
             label$15 : {
              if (($2_1 | 0) == ($3 | 0)) {
               $5_1 = __wasm_rotl_i32($1_1) & $5_1;
               $1973(0, 97136, $5_1);
               break label$15;
              }
              $1973($3, 12, $2_1);
              $1973($2_1, 8, $3);
             }
             $1973($0_1, 4, $6_1 | 3);
             $8 = $0_1 + $6_1 | 0;
             $1_1 = $1_1 << 3;
             $3 = $1_1 - $6_1 | 0;
             $1973($8, 4, $3 | 1);
             $1973($0_1 + $1_1 | 0, 0, $3);
             if ($7_1) {
              $1_1 = ($7_1 & -8) + 97176 | 0;
              $2_1 = $1944(0, 97156);
              $4_1 = 1 << ($7_1 >>> 3);
              label$18 : {
               if (!($4_1 & $5_1)) {
                $1973(0, 97136, $4_1 | $5_1);
                $4_1 = $1_1;
                break label$18;
               }
               $4_1 = $1944($1_1, 8);
              }
              $1973($1_1, 8, $2_1);
              $1973($4_1, 12, $2_1);
              $1973($2_1, 12, $1_1);
              $1973($2_1, 8, $4_1);
             }
             $0_1 = $0_1 + 8 | 0;
             $1973(0, 97156, $8);
             $1973(0, 97144, $3);
             break label$1;
            }
            $10_1 = $1944(0, 97140);
            if (!$10_1) {
             break label$9
            }
            $2_1 = $1944((__wasm_ctz_i32($10_1 & 0 - $10_1) << 2) + 97440 | 0, 0);
            $4_1 = ($1944($2_1, 4) & -8) - $6_1 | 0;
            $1_1 = $2_1;
            while (1) {
             label$20 : {
              $0_1 = $1944($1_1, 16);
              if (!$0_1) {
               $0_1 = $1944($1_1 + 20 | 0, 0);
               if (!$0_1) {
                break label$20
               }
              }
              $3 = ($1944($0_1, 4) & -8) - $6_1 | 0;
              $1_1 = $3 >>> 0 < $4_1 >>> 0;
              $4_1 = $1_1 ? $3 : $4_1;
              $2_1 = $1_1 ? $0_1 : $2_1;
              $1_1 = $0_1;
              continue;
             }
             break;
            };
            $9 = $1944($2_1, 24);
            $3 = $1944($2_1, 12);
            if (($2_1 | 0) != ($3 | 0)) {
             $0_1 = $1944($2_1, 8);
             $1944(0, 97152);
             $1973($0_1, 12, $3);
             $1973($3, 8, $0_1);
             break label$2;
            }
            $1_1 = $2_1 + 20 | 0;
            $0_1 = $1944($1_1, 0);
            if (!$0_1) {
             $0_1 = $1944($2_1, 16);
             if (!$0_1) {
              break label$8
             }
             $1_1 = $2_1 + 16 | 0;
            }
            while (1) {
             $8 = $1_1;
             $3 = $0_1;
             $1_1 = $0_1 + 20 | 0;
             $0_1 = $1944($1_1, 0);
             if ($0_1) {
              continue
             }
             $1_1 = $3 + 16 | 0;
             $0_1 = $1944($3, 16);
             if ($0_1) {
              continue
             }
             break;
            };
            $1973($8, 0, 0);
            break label$2;
           }
           $6_1 = -1;
           if ($0_1 >>> 0 > 4294967231) {
            break label$9
           }
           $0_1 = $0_1 + 11 | 0;
           $6_1 = $0_1 & -8;
           $8 = $1944(0, 97140);
           if (!$8) {
            break label$9
           }
           $4_1 = 0 - $6_1 | 0;
           $7_1 = 0;
           label$26 : {
            if ($6_1 >>> 0 < 256) {
             break label$26
            }
            $7_1 = 31;
            if ($6_1 >>> 0 > 16777215) {
             break label$26
            }
            $0_1 = Math_clz32($0_1 >>> 8 | 0);
            $7_1 = (($6_1 >>> 38 - $0_1 & 1) - ($0_1 << 1) | 0) + 62 | 0;
           }
           $1_1 = $1944(($7_1 << 2) + 97440 | 0, 0);
           label$27 : {
            label$28 : {
             label$29 : {
              if (!$1_1) {
               $0_1 = 0;
               break label$29;
              }
              $0_1 = 0;
              $2_1 = $6_1 << (($7_1 | 0) != 31 ? 25 - ($7_1 >>> 1 | 0) | 0 : 0);
              while (1) {
               label$32 : {
                $5_1 = ($1944($1_1, 4) & -8) - $6_1 | 0;
                if ($5_1 >>> 0 >= $4_1 >>> 0) {
                 break label$32
                }
                $3 = $1_1;
                $4_1 = $5_1;
                if ($4_1) {
                 break label$32
                }
                $4_1 = 0;
                $0_1 = $1_1;
                break label$28;
               }
               $5_1 = $1944($1_1 + 20 | 0, 0);
               $1_1 = $1944((($2_1 >>> 29 & 4) + $1_1 | 0) + 16 | 0, 0);
               $0_1 = $5_1 ? (($5_1 | 0) == ($1_1 | 0) ? $0_1 : $5_1) : $0_1;
               $2_1 = $2_1 << 1;
               if ($1_1) {
                continue
               }
               break;
              };
             }
             if (!($0_1 | $3)) {
              $3 = 0;
              $0_1 = 2 << $7_1;
              $0_1 = (0 - $0_1 | $0_1) & $8;
              if (!$0_1) {
               break label$9
              }
              $0_1 = $1944((__wasm_ctz_i32($0_1 & 0 - $0_1) << 2) + 97440 | 0, 0);
             }
             if (!$0_1) {
              break label$27
             }
            }
            while (1) {
             $2_1 = ($1944($0_1, 4) & -8) - $6_1 | 0;
             $1_1 = $2_1 >>> 0 < $4_1 >>> 0;
             $4_1 = $1_1 ? $2_1 : $4_1;
             $3 = $1_1 ? $0_1 : $3;
             $1_1 = $1944($0_1, 16);
             if ($1_1) {
              $0_1 = $1_1
             } else {
              $0_1 = $1944($0_1 + 20 | 0, 0)
             }
             if ($0_1) {
              continue
             }
             break;
            };
           }
           if (!$3) {
            break label$9
           }
           if ($1944(0, 97144) - $6_1 >>> 0 <= $4_1 >>> 0) {
            break label$9
           }
           $7_1 = $1944($3, 24);
           $2_1 = $1944($3, 12);
           if (($2_1 | 0) != ($3 | 0)) {
            $0_1 = $1944($3, 8);
            $1944(0, 97152);
            $1973($0_1, 12, $2_1);
            $1973($2_1, 8, $0_1);
            break label$3;
           }
           $1_1 = $3 + 20 | 0;
           $0_1 = $1944($1_1, 0);
           if (!$0_1) {
            $0_1 = $1944($3, 16);
            if (!$0_1) {
             break label$7
            }
            $1_1 = $3 + 16 | 0;
           }
           while (1) {
            $5_1 = $1_1;
            $2_1 = $0_1;
            $1_1 = $0_1 + 20 | 0;
            $0_1 = $1944($1_1, 0);
            if ($0_1) {
             continue
            }
            $1_1 = $2_1 + 16 | 0;
            $0_1 = $1944($2_1, 16);
            if ($0_1) {
             continue
            }
            break;
           };
           $1973($5_1, 0, 0);
           break label$3;
          }
          $3 = $1944(0, 97144);
          if ($6_1 >>> 0 <= $3 >>> 0) {
           $0_1 = $1944(0, 97156);
           $1_1 = $3 - $6_1 | 0;
           label$40 : {
            if ($1_1 >>> 0 >= 16) {
             $2_1 = $0_1 + $6_1 | 0;
             $1973($2_1, 4, $1_1 | 1);
             $1973($0_1 + $3 | 0, 0, $1_1);
             $1973($0_1, 4, $6_1 | 3);
             break label$40;
            }
            $1973($0_1, 4, $3 | 3);
            $1_1 = $0_1 + $3 | 0;
            $1973($1_1, 4, $1944($1_1, 4) | 1);
            $2_1 = 0;
            $1_1 = 0;
           }
           $1973(0, 97144, $1_1);
           $1973(0, 97156, $2_1);
           $0_1 = $0_1 + 8 | 0;
           break label$1;
          }
          $2_1 = $1944(0, 97148);
          if ($6_1 >>> 0 < $2_1 >>> 0) {
           $1_1 = $2_1 - $6_1 | 0;
           $1973(0, 97148, $1_1);
           $0_1 = $1944(0, 97160);
           $2_1 = $0_1 + $6_1 | 0;
           $1973(0, 97160, $2_1);
           $1973($2_1, 4, $1_1 | 1);
           $1973($0_1, 4, $6_1 | 3);
           $0_1 = $0_1 + 8 | 0;
           break label$1;
          }
          $0_1 = 0;
          label$43 : {
           if ($1944(0, 97608)) {
            $1_1 = $1944(0, 97616);
            break label$43;
           }
           $1982(0, 97620, -1, -1);
           $1982(0, 97612, 4096, 4096);
           $1973(0, 97608, $11_1 + 12 & -16 ^ 1431655768);
           $1973(0, 97628, 0);
           $1973(0, 97580, 0);
           $1_1 = 4096;
          }
          $4_1 = $6_1 + 47 | 0;
          $5_1 = $1_1 + $4_1 | 0;
          $8 = 0 - $1_1 | 0;
          $1_1 = $5_1 & $8;
          if ($1_1 >>> 0 <= $6_1 >>> 0) {
           break label$1
          }
          $3 = $1944(0, 97576);
          if ($3) {
           $9 = $3;
           $3 = $1944(0, 97568);
           $7_1 = $3 + $1_1 | 0;
           if ($9 >>> 0 < $7_1 >>> 0 | $3 >>> 0 >= $7_1 >>> 0) {
            break label$1
           }
          }
          label$46 : {
           if (!($1937(0, 97580) & 4)) {
            label$48 : {
             label$49 : {
              label$50 : {
               label$51 : {
                $3 = $1944(0, 97160);
                if ($3) {
                 $0_1 = 97584;
                 while (1) {
                  $7_1 = $1944($0_1, 0);
                  if ($3 >>> 0 >= $7_1 >>> 0) {
                   if ($3 >>> 0 < $1944($0_1, 4) + $7_1 >>> 0) {
                    break label$51
                   }
                  }
                  $0_1 = $1944($0_1, 8);
                  if ($0_1) {
                   continue
                  }
                  break;
                 };
                }
                $2_1 = $1765(0);
                if (($2_1 | 0) == -1) {
                 break label$48
                }
                $5_1 = $1_1;
                $0_1 = $1944(0, 97612);
                $3 = $0_1 - 1 | 0;
                if ($3 & $2_1) {
                 $5_1 = ($1_1 - $2_1 | 0) + ($2_1 + $3 & 0 - $0_1) | 0
                }
                if ($6_1 >>> 0 >= $5_1 >>> 0) {
                 break label$48
                }
                $0_1 = $1944(0, 97576);
                if ($0_1) {
                 $7_1 = $0_1;
                 $0_1 = $1944(0, 97568);
                 $3 = $0_1 + $5_1 | 0;
                 if ($7_1 >>> 0 < $3 >>> 0 | $0_1 >>> 0 >= $3 >>> 0) {
                  break label$48
                 }
                }
                $0_1 = $1765($5_1);
                if (($2_1 | 0) != ($0_1 | 0)) {
                 break label$50
                }
                break label$46;
               }
               $5_1 = $8 & $5_1 - $2_1;
               $2_1 = $1765($5_1);
               if (($2_1 | 0) == ($1944($0_1, 0) + $1944($0_1, 4) | 0)) {
                break label$49
               }
               $0_1 = $2_1;
              }
              if (($0_1 | 0) == -1) {
               break label$48
              }
              if ($5_1 >>> 0 >= $6_1 + 48 >>> 0) {
               $2_1 = $0_1;
               break label$46;
              }
              $2_1 = $1944(0, 97616);
              $2_1 = $2_1 + ($4_1 - $5_1 | 0) & 0 - $2_1;
              if (($1765($2_1) | 0) == -1) {
               break label$48
              }
              $5_1 = $2_1 + $5_1 | 0;
              $2_1 = $0_1;
              break label$46;
             }
             if (($2_1 | 0) != -1) {
              break label$46
             }
            }
            $1973(0, 97580, $1944(0, 97580) | 4);
           }
           $2_1 = $1765($1_1);
           $0_1 = $1765(0);
           if (($2_1 | 0) == -1 | ($0_1 | 0) == -1 | $0_1 >>> 0 <= $2_1 >>> 0) {
            break label$4
           }
           $5_1 = $0_1 - $2_1 | 0;
           if ($5_1 >>> 0 <= $6_1 + 40 >>> 0) {
            break label$4
           }
          }
          $0_1 = $1944(0, 97568) + $5_1 | 0;
          $1973(0, 97568, $0_1);
          if ($1944(0, 97572) >>> 0 < $0_1 >>> 0) {
           $1973(0, 97572, $0_1)
          }
          label$59 : {
           $4_1 = $1944(0, 97160);
           if ($4_1) {
            $0_1 = 97584;
            while (1) {
             $1_1 = $1944($0_1, 0);
             $3 = $1944($0_1, 4);
             if (($1_1 + $3 | 0) == ($2_1 | 0)) {
              break label$59
             }
             $0_1 = $1944($0_1, 8);
             if ($0_1) {
              continue
             }
             break;
            };
            break label$6;
           }
           $0_1 = $1944(0, 97152);
           if (!(!!$0_1 & $0_1 >>> 0 <= $2_1 >>> 0)) {
            $1973(0, 97152, $2_1)
           }
           $0_1 = 0;
           $1973(0, 97588, $5_1);
           $1973(0, 97584, $2_1);
           $1973(0, 97168, -1);
           $1973(0, 97172, $1944(0, 97608));
           $1973(0, 97596, 0);
           while (1) {
            $1_1 = $0_1 << 3;
            $3 = $1_1 + 97176 | 0;
            $1973($1_1 + 97184 | 0, 0, $3);
            $1973($1_1 + 97188 | 0, 0, $3);
            $0_1 = $0_1 + 1 | 0;
            if (($0_1 | 0) != 32) {
             continue
            }
            break;
           };
           $0_1 = $5_1 - 40 | 0;
           $1_1 = $2_1 + 8 & 7 ? -8 - $2_1 & 7 : 0;
           $3 = $0_1 - $1_1 | 0;
           $1973(0, 97148, $3);
           $1_1 = $1_1 + $2_1 | 0;
           $1973(0, 97160, $1_1);
           $1973($1_1, 4, $3 | 1);
           $1973($0_1 + $2_1 | 0, 4, 40);
           $1973(0, 97164, $1944(0, 97624));
           break label$5;
          }
          if ($1937($0_1, 12) & 8 | $1_1 >>> 0 > $4_1 >>> 0 | $2_1 >>> 0 <= $4_1 >>> 0) {
           break label$6
          }
          $1973($0_1, 4, $3 + $5_1 | 0);
          $0_1 = $4_1 + 8 & 7 ? -8 - $4_1 & 7 : 0;
          $1_1 = $0_1 + $4_1 | 0;
          $1973(0, 97160, $1_1);
          $2_1 = $1944(0, 97148) + $5_1 | 0;
          $0_1 = $2_1 - $0_1 | 0;
          $1973(0, 97148, $0_1);
          $1973($1_1, 4, $0_1 | 1);
          $1973($2_1 + $4_1 | 0, 4, 40);
          $1973(0, 97164, $1944(0, 97624));
          break label$5;
         }
         $3 = 0;
         break label$2;
        }
        $2_1 = 0;
        break label$3;
       }
       if ($1944(0, 97152) >>> 0 > $2_1 >>> 0) {
        $1973(0, 97152, $2_1)
       }
       $1_1 = $2_1 + $5_1 | 0;
       $0_1 = 97584;
       label$66 : {
        label$67 : {
         label$68 : {
          label$69 : {
           label$70 : {
            label$71 : {
             while (1) {
              if (($1944($0_1, 0) | 0) != ($1_1 | 0)) {
               $0_1 = $1944($0_1, 8);
               if ($0_1) {
                continue
               }
               break label$71;
              }
              break;
             };
             if (!($1937($0_1, 12) & 8)) {
              break label$70
             }
            }
            $0_1 = 97584;
            while (1) {
             $1_1 = $1944($0_1, 0);
             if ($4_1 >>> 0 >= $1_1 >>> 0) {
              $3 = $1944($0_1, 4) + $1_1 | 0;
              if ($3 >>> 0 > $4_1 >>> 0) {
               break label$69
              }
             }
             $0_1 = $1944($0_1, 8);
             continue;
            };
           }
           $1973($0_1, 0, $2_1);
           $1973($0_1, 4, $1944($0_1, 4) + $5_1 | 0);
           $7_1 = ($2_1 + 8 & 7 ? -8 - $2_1 & 7 : 0) + $2_1 | 0;
           $1973($7_1, 4, $6_1 | 3);
           $5_1 = $1_1 + ($1_1 + 8 & 7 ? -8 - $1_1 & 7 : 0) | 0;
           $6_1 = $6_1 + $7_1 | 0;
           $0_1 = $5_1 - $6_1 | 0;
           if (($4_1 | 0) == ($5_1 | 0)) {
            $1973(0, 97160, $6_1);
            $0_1 = $1944(0, 97148) + $0_1 | 0;
            $1973(0, 97148, $0_1);
            $1973($6_1, 4, $0_1 | 1);
            break label$67;
           }
           if (($1944(0, 97156) | 0) == ($5_1 | 0)) {
            $1973(0, 97156, $6_1);
            $0_1 = $1944(0, 97144) + $0_1 | 0;
            $1973(0, 97144, $0_1);
            $1973($6_1, 4, $0_1 | 1);
            $1973($0_1 + $6_1 | 0, 0, $0_1);
            break label$67;
           }
           $4_1 = $1944($5_1, 4);
           if (($4_1 & 3) == 1) {
            $9 = $4_1 & -8;
            label$79 : {
             if ($4_1 >>> 0 <= 255) {
              $1_1 = $1944($5_1, 8);
              $2_1 = $1944($5_1, 12);
              if (($1_1 | 0) == ($2_1 | 0)) {
               $1973(0, 97136, $1944(0, 97136) & __wasm_rotl_i32($4_1 >>> 3 | 0));
               break label$79;
              }
              $1973($1_1, 12, $2_1);
              $1973($2_1, 8, $1_1);
              break label$79;
             }
             $8 = $1944($5_1, 24);
             $2_1 = $1944($5_1, 12);
             label$82 : {
              if (($5_1 | 0) != ($2_1 | 0)) {
               $1_1 = $1944($5_1, 8);
               $1973($1_1, 12, $2_1);
               $1973($2_1, 8, $1_1);
               break label$82;
              }
              label$84 : {
               $4_1 = $5_1 + 20 | 0;
               $1_1 = $1944($4_1, 0);
               if ($1_1) {
                break label$84
               }
               $4_1 = $5_1 + 16 | 0;
               $1_1 = $1944($4_1, 0);
               if ($1_1) {
                break label$84
               }
               $2_1 = 0;
               break label$82;
              }
              while (1) {
               $3 = $4_1;
               $2_1 = $1_1;
               $4_1 = $2_1 + 20 | 0;
               $1_1 = $1944($4_1, 0);
               if ($1_1) {
                continue
               }
               $4_1 = $2_1 + 16 | 0;
               $1_1 = $1944($2_1, 16);
               if ($1_1) {
                continue
               }
               break;
              };
              $1973($3, 0, 0);
             }
             if (!$8) {
              break label$79
             }
             $1_1 = $1944($5_1, 28);
             $3 = ($1_1 << 2) + 97440 | 0;
             label$86 : {
              if (($1944($3, 0) | 0) == ($5_1 | 0)) {
               $1973($3, 0, $2_1);
               if ($2_1) {
                break label$86
               }
               $1973(0, 97140, $1944(0, 97140) & __wasm_rotl_i32($1_1));
               break label$79;
              }
              $1973($8 + (($1944($8, 16) | 0) == ($5_1 | 0) ? 16 : 20) | 0, 0, $2_1);
              if (!$2_1) {
               break label$79
              }
             }
             $1973($2_1, 24, $8);
             $1_1 = $1944($5_1, 16);
             if ($1_1) {
              $1973($2_1, 16, $1_1);
              $1973($1_1, 24, $2_1);
             }
             $1_1 = $1944($5_1, 20);
             if (!$1_1) {
              break label$79
             }
             $1973($2_1 + 20 | 0, 0, $1_1);
             $1973($1_1, 24, $2_1);
            }
            $5_1 = $5_1 + $9 | 0;
            $4_1 = $1944($5_1, 4);
            $0_1 = $0_1 + $9 | 0;
           }
           $1973($5_1, 4, $4_1 & -2);
           $1973($6_1, 4, $0_1 | 1);
           $1973($0_1 + $6_1 | 0, 0, $0_1);
           if ($0_1 >>> 0 <= 255) {
            $1_1 = ($0_1 & -8) + 97176 | 0;
            $2_1 = $1944(0, 97136);
            $0_1 = 1 << ($0_1 >>> 3);
            label$90 : {
             if (!($2_1 & $0_1)) {
              $1973(0, 97136, $0_1 | $2_1);
              $0_1 = $1_1;
              break label$90;
             }
             $0_1 = $1944($1_1, 8);
            }
            $1973($1_1, 8, $6_1);
            $1973($0_1, 12, $6_1);
            $1973($6_1, 12, $1_1);
            $1973($6_1, 8, $0_1);
            break label$67;
           }
           $4_1 = 31;
           if ($0_1 >>> 0 <= 16777215) {
            $1_1 = Math_clz32($0_1 >>> 8 | 0);
            $4_1 = (($0_1 >>> 38 - $1_1 & 1) - ($1_1 << 1) | 0) + 62 | 0;
           }
           $1973($6_1, 28, $4_1);
           $1982($6_1, 16, 0, 0);
           $1_1 = ($4_1 << 2) + 97440 | 0;
           $2_1 = $1944(0, 97140);
           $3 = 1 << $4_1;
           label$93 : {
            if (!($2_1 & $3)) {
             $1973(0, 97140, $2_1 | $3);
             $1973($1_1, 0, $6_1);
             break label$93;
            }
            $4_1 = $0_1 << (($4_1 | 0) != 31 ? 25 - ($4_1 >>> 1 | 0) | 0 : 0);
            $2_1 = $1944($1_1, 0);
            while (1) {
             $1_1 = $2_1;
             if (($1944($2_1, 4) & -8) == ($0_1 | 0)) {
              break label$68
             }
             $2_1 = $4_1 >>> 29 | 0;
             $4_1 = $4_1 << 1;
             $3 = ($1_1 + ($2_1 & 4) | 0) + 16 | 0;
             $2_1 = $1944($3, 0);
             if ($2_1) {
              continue
             }
             break;
            };
            $1973($3, 0, $6_1);
           }
           $1973($6_1, 24, $1_1);
           $1973($6_1, 12, $6_1);
           $1973($6_1, 8, $6_1);
           break label$67;
          }
          $0_1 = $5_1 - 40 | 0;
          $1_1 = $2_1 + 8 & 7 ? -8 - $2_1 & 7 : 0;
          $8 = $0_1 - $1_1 | 0;
          $1973(0, 97148, $8);
          $1_1 = $1_1 + $2_1 | 0;
          $1973(0, 97160, $1_1);
          $1973($1_1, 4, $8 | 1);
          $1973($0_1 + $2_1 | 0, 4, 40);
          $1973(0, 97164, $1944(0, 97624));
          $0_1 = ($3 + ($3 - 39 & 7 ? 39 - $3 & 7 : 0) | 0) - 47 | 0;
          $1_1 = $0_1 >>> 0 < $4_1 + 16 >>> 0 ? $4_1 : $0_1;
          $1973($1_1, 4, 27);
          $1982($1_1 + 16 | 0, 0, $1959(0, 97592), i64toi32_i32$HIGH_BITS);
          $1982($1_1, 8, $1959(0, 97584), i64toi32_i32$HIGH_BITS);
          $1973(0, 97592, $1_1 + 8 | 0);
          $1973(0, 97588, $5_1);
          $1973(0, 97584, $2_1);
          $1973(0, 97596, 0);
          $0_1 = $1_1 + 24 | 0;
          while (1) {
           $1973($0_1, 4, 7);
           $2_1 = $0_1 + 8 | 0;
           $0_1 = $0_1 + 4 | 0;
           if ($2_1 >>> 0 < $3 >>> 0) {
            continue
           }
           break;
          };
          if (($1_1 | 0) == ($4_1 | 0)) {
           break label$5
          }
          $1973($1_1, 4, $1944($1_1, 4) & -2);
          $2_1 = $1_1 - $4_1 | 0;
          $1973($4_1, 4, $2_1 | 1);
          $1973($1_1, 0, $2_1);
          if ($2_1 >>> 0 <= 255) {
           $0_1 = ($2_1 & -8) + 97176 | 0;
           $1_1 = $1944(0, 97136);
           $2_1 = 1 << ($2_1 >>> 3);
           label$98 : {
            if (!($1_1 & $2_1)) {
             $1973(0, 97136, $1_1 | $2_1);
             $1_1 = $0_1;
             break label$98;
            }
            $1_1 = $1944($0_1, 8);
           }
           $1973($0_1, 8, $4_1);
           $1973($1_1, 12, $4_1);
           $1973($4_1, 12, $0_1);
           $1973($4_1, 8, $1_1);
           break label$5;
          }
          $0_1 = 31;
          if ($2_1 >>> 0 <= 16777215) {
           $0_1 = Math_clz32($2_1 >>> 8 | 0);
           $0_1 = (($2_1 >>> 38 - $0_1 & 1) - ($0_1 << 1) | 0) + 62 | 0;
          }
          $1973($4_1, 28, $0_1);
          $1982($4_1, 16, 0, 0);
          $1_1 = ($0_1 << 2) + 97440 | 0;
          $3 = $1944(0, 97140);
          $5_1 = 1 << $0_1;
          label$101 : {
           if (!($3 & $5_1)) {
            $1973(0, 97140, $3 | $5_1);
            $1973($1_1, 0, $4_1);
            break label$101;
           }
           $0_1 = $2_1 << (($0_1 | 0) != 31 ? 25 - ($0_1 >>> 1 | 0) | 0 : 0);
           $3 = $1944($1_1, 0);
           while (1) {
            $1_1 = $3;
            if (($2_1 | 0) == ($1944($1_1, 4) & -8)) {
             break label$66
            }
            $3 = $0_1 >>> 29 | 0;
            $0_1 = $0_1 << 1;
            $5_1 = ($1_1 + ($3 & 4) | 0) + 16 | 0;
            $3 = $1944($5_1, 0);
            if ($3) {
             continue
            }
            break;
           };
           $1973($5_1, 0, $4_1);
          }
          $1973($4_1, 24, $1_1);
          $1973($4_1, 12, $4_1);
          $1973($4_1, 8, $4_1);
          break label$5;
         }
         $0_1 = $1944($1_1, 8);
         $1973($0_1, 12, $6_1);
         $1973($1_1, 8, $6_1);
         $1973($6_1, 24, 0);
         $1973($6_1, 12, $1_1);
         $1973($6_1, 8, $0_1);
        }
        $0_1 = $7_1 + 8 | 0;
        break label$1;
       }
       $0_1 = $1944($1_1, 8);
       $1973($0_1, 12, $4_1);
       $1973($1_1, 8, $4_1);
       $1973($4_1, 24, 0);
       $1973($4_1, 12, $1_1);
       $1973($4_1, 8, $0_1);
      }
      $0_1 = $1944(0, 97148);
      if ($0_1 >>> 0 <= $6_1 >>> 0) {
       break label$4
      }
      $1_1 = $0_1 - $6_1 | 0;
      $1973(0, 97148, $1_1);
      $0_1 = $1944(0, 97160);
      $2_1 = $0_1 + $6_1 | 0;
      $1973(0, 97160, $2_1);
      $1973($2_1, 4, $1_1 | 1);
      $1973($0_1, 4, $6_1 | 3);
      $0_1 = $0_1 + 8 | 0;
      break label$1;
     }
     $1973(95900, 0, 48);
     $0_1 = 0;
     break label$1;
    }
    label$104 : {
     if (!$7_1) {
      break label$104
     }
     $0_1 = $1944($3, 28);
     $1_1 = ($0_1 << 2) + 97440 | 0;
     label$105 : {
      if (($1944($1_1, 0) | 0) == ($3 | 0)) {
       $1973($1_1, 0, $2_1);
       if ($2_1) {
        break label$105
       }
       $8 = __wasm_rotl_i32($0_1) & $8;
       $1973(0, 97140, $8);
       break label$104;
      }
      $1973($7_1 + (($1944($7_1, 16) | 0) == ($3 | 0) ? 16 : 20) | 0, 0, $2_1);
      if (!$2_1) {
       break label$104
      }
     }
     $1973($2_1, 24, $7_1);
     $0_1 = $1944($3, 16);
     if ($0_1) {
      $1973($2_1, 16, $0_1);
      $1973($0_1, 24, $2_1);
     }
     $0_1 = $1944($3 + 20 | 0, 0);
     if (!$0_1) {
      break label$104
     }
     $1973($2_1 + 20 | 0, 0, $0_1);
     $1973($0_1, 24, $2_1);
    }
    label$108 : {
     if ($4_1 >>> 0 <= 15) {
      $0_1 = $4_1 + $6_1 | 0;
      $1973($3, 4, $0_1 | 3);
      $0_1 = $0_1 + $3 | 0;
      $1973($0_1, 4, $1944($0_1, 4) | 1);
      break label$108;
     }
     $1973($3, 4, $6_1 | 3);
     $2_1 = $3 + $6_1 | 0;
     $1973($2_1, 4, $4_1 | 1);
     $1973($2_1 + $4_1 | 0, 0, $4_1);
     if ($4_1 >>> 0 <= 255) {
      $0_1 = ($4_1 & -8) + 97176 | 0;
      $1_1 = $1944(0, 97136);
      $4_1 = 1 << ($4_1 >>> 3);
      label$111 : {
       if (!($1_1 & $4_1)) {
        $1973(0, 97136, $1_1 | $4_1);
        $1_1 = $0_1;
        break label$111;
       }
       $1_1 = $1944($0_1, 8);
      }
      $1973($0_1, 8, $2_1);
      $1973($1_1, 12, $2_1);
      $1973($2_1, 12, $0_1);
      $1973($2_1, 8, $1_1);
      break label$108;
     }
     $0_1 = 31;
     if ($4_1 >>> 0 <= 16777215) {
      $0_1 = Math_clz32($4_1 >>> 8 | 0);
      $0_1 = (($4_1 >>> 38 - $0_1 & 1) - ($0_1 << 1) | 0) + 62 | 0;
     }
     $1973($2_1, 28, $0_1);
     $1982($2_1, 16, 0, 0);
     $1_1 = ($0_1 << 2) + 97440 | 0;
     label$114 : {
      $5_1 = 1 << $0_1;
      label$115 : {
       if (!($5_1 & $8)) {
        $1973(0, 97140, $5_1 | $8);
        $1973($1_1, 0, $2_1);
        break label$115;
       }
       $0_1 = $4_1 << (($0_1 | 0) != 31 ? 25 - ($0_1 >>> 1 | 0) | 0 : 0);
       $6_1 = $1944($1_1, 0);
       while (1) {
        $1_1 = $6_1;
        if (($1944($1_1, 4) & -8) == ($4_1 | 0)) {
         break label$114
        }
        $5_1 = $0_1 >>> 29 | 0;
        $0_1 = $0_1 << 1;
        $5_1 = ($1_1 + ($5_1 & 4) | 0) + 16 | 0;
        $6_1 = $1944($5_1, 0);
        if ($6_1) {
         continue
        }
        break;
       };
       $1973($5_1, 0, $2_1);
      }
      $1973($2_1, 24, $1_1);
      $1973($2_1, 12, $2_1);
      $1973($2_1, 8, $2_1);
      break label$108;
     }
     $0_1 = $1944($1_1, 8);
     $1973($0_1, 12, $2_1);
     $1973($1_1, 8, $2_1);
     $1973($2_1, 24, 0);
     $1973($2_1, 12, $1_1);
     $1973($2_1, 8, $0_1);
    }
    $0_1 = $3 + 8 | 0;
    break label$1;
   }
   label$118 : {
    if (!$9) {
     break label$118
    }
    $0_1 = $1944($2_1, 28);
    $1_1 = ($0_1 << 2) + 97440 | 0;
    label$119 : {
     if (($1944($1_1, 0) | 0) == ($2_1 | 0)) {
      $1973($1_1, 0, $3);
      if ($3) {
       break label$119
      }
      $1973(0, 97140, __wasm_rotl_i32($0_1) & $10_1);
      break label$118;
     }
     $1973((($1944($9, 16) | 0) == ($2_1 | 0) ? 16 : 20) + $9 | 0, 0, $3);
     if (!$3) {
      break label$118
     }
    }
    $1973($3, 24, $9);
    $0_1 = $1944($2_1, 16);
    if ($0_1) {
     $1973($3, 16, $0_1);
     $1973($0_1, 24, $3);
    }
    $0_1 = $1944($2_1 + 20 | 0, 0);
    if (!$0_1) {
     break label$118
    }
    $1973($3 + 20 | 0, 0, $0_1);
    $1973($0_1, 24, $3);
   }
   label$122 : {
    if ($4_1 >>> 0 <= 15) {
     $0_1 = $4_1 + $6_1 | 0;
     $1973($2_1, 4, $0_1 | 3);
     $0_1 = $0_1 + $2_1 | 0;
     $1973($0_1, 4, $1944($0_1, 4) | 1);
     break label$122;
    }
    $1973($2_1, 4, $6_1 | 3);
    $3 = $2_1 + $6_1 | 0;
    $1973($3, 4, $4_1 | 1);
    $1973($3 + $4_1 | 0, 0, $4_1);
    if ($7_1) {
     $0_1 = ($7_1 & -8) + 97176 | 0;
     $1_1 = $1944(0, 97156);
     $6_1 = 1 << ($7_1 >>> 3);
     label$125 : {
      if (!($6_1 & $5_1)) {
       $1973(0, 97136, $6_1 | $5_1);
       $5_1 = $0_1;
       break label$125;
      }
      $5_1 = $1944($0_1, 8);
     }
     $1973($0_1, 8, $1_1);
     $1973($5_1, 12, $1_1);
     $1973($1_1, 12, $0_1);
     $1973($1_1, 8, $5_1);
    }
    $1973(0, 97156, $3);
    $1973(0, 97144, $4_1);
   }
   $0_1 = $2_1 + 8 | 0;
  }
  global$0 = $11_1 + 16 | 0;
  return $0_1 | 0;
 }
 
 function $1756($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  label$1 : {
   if (!$0_1) {
    break label$1
   }
   $3 = $0_1 - 8 | 0;
   $1_1 = $1944($0_1 - 4 | 0, 0);
   $0_1 = $1_1 & -8;
   $5_1 = $3 + $0_1 | 0;
   label$2 : {
    if ($1_1 & 1) {
     break label$2
    }
    if (!($1_1 & 3)) {
     break label$1
    }
    $1_1 = $1944($3, 0);
    $3 = $3 - $1_1 | 0;
    if ($3 >>> 0 < $1944(0, 97152) >>> 0) {
     break label$1
    }
    $0_1 = $0_1 + $1_1 | 0;
    if (($1944(0, 97156) | 0) != ($3 | 0)) {
     if ($1_1 >>> 0 <= 255) {
      $1_1 = $1_1 >>> 3 | 0;
      $4_1 = $1944($3, 8);
      $2_1 = $1944($3, 12);
      if (($4_1 | 0) == ($2_1 | 0)) {
       $1973(0, 97136, $1944(0, 97136) & __wasm_rotl_i32($1_1));
       break label$2;
      }
      $1973($4_1, 12, $2_1);
      $1973($2_1, 8, $4_1);
      break label$2;
     }
     $7_1 = $1944($3, 24);
     $1_1 = $1944($3, 12);
     label$6 : {
      if (($3 | 0) != ($1_1 | 0)) {
       $2_1 = $1944($3, 8);
       $1973($2_1, 12, $1_1);
       $1973($1_1, 8, $2_1);
       break label$6;
      }
      label$8 : {
       $4_1 = $3 + 20 | 0;
       $2_1 = $1944($4_1, 0);
       if ($2_1) {
        break label$8
       }
       $4_1 = $3 + 16 | 0;
       $2_1 = $1944($4_1, 0);
       if ($2_1) {
        break label$8
       }
       $1_1 = 0;
       break label$6;
      }
      while (1) {
       $6_1 = $4_1;
       $1_1 = $2_1;
       $4_1 = $1_1 + 20 | 0;
       $2_1 = $1944($4_1, 0);
       if ($2_1) {
        continue
       }
       $4_1 = $1_1 + 16 | 0;
       $2_1 = $1944($1_1, 16);
       if ($2_1) {
        continue
       }
       break;
      };
      $1973($6_1, 0, 0);
     }
     if (!$7_1) {
      break label$2
     }
     $4_1 = $1944($3, 28);
     $2_1 = ($4_1 << 2) + 97440 | 0;
     label$10 : {
      if (($1944($2_1, 0) | 0) == ($3 | 0)) {
       $1973($2_1, 0, $1_1);
       if ($1_1) {
        break label$10
       }
       $1973(0, 97140, $1944(0, 97140) & __wasm_rotl_i32($4_1));
       break label$2;
      }
      $1973($7_1 + (($1944($7_1, 16) | 0) == ($3 | 0) ? 16 : 20) | 0, 0, $1_1);
      if (!$1_1) {
       break label$2
      }
     }
     $1973($1_1, 24, $7_1);
     $2_1 = $1944($3, 16);
     if ($2_1) {
      $1973($1_1, 16, $2_1);
      $1973($2_1, 24, $1_1);
     }
     $2_1 = $1944($3, 20);
     if (!$2_1) {
      break label$2
     }
     $1973($1_1 + 20 | 0, 0, $2_1);
     $1973($2_1, 24, $1_1);
     break label$2;
    }
    $1_1 = $1944($5_1, 4);
    if (($1_1 & 3) != 3) {
     break label$2
    }
    $1973(0, 97144, $0_1);
    $1973($5_1, 4, $1_1 & -2);
    $1973($3, 4, $0_1 | 1);
    $1973($0_1 + $3 | 0, 0, $0_1);
    return;
   }
   if ($3 >>> 0 >= $5_1 >>> 0) {
    break label$1
   }
   $1_1 = $1944($5_1, 4);
   if (!($1_1 & 1)) {
    break label$1
   }
   label$13 : {
    if (!($1_1 & 2)) {
     if (($1944(0, 97160) | 0) == ($5_1 | 0)) {
      $1973(0, 97160, $3);
      $0_1 = $1944(0, 97148) + $0_1 | 0;
      $1973(0, 97148, $0_1);
      $1973($3, 4, $0_1 | 1);
      if (($1944(0, 97156) | 0) != ($3 | 0)) {
       break label$1
      }
      $1973(0, 97144, 0);
      $1973(0, 97156, 0);
      return;
     }
     if (($1944(0, 97156) | 0) == ($5_1 | 0)) {
      $1973(0, 97156, $3);
      $0_1 = $1944(0, 97144) + $0_1 | 0;
      $1973(0, 97144, $0_1);
      $1973($3, 4, $0_1 | 1);
      $1973($0_1 + $3 | 0, 0, $0_1);
      return;
     }
     $0_1 = ($1_1 & -8) + $0_1 | 0;
     label$17 : {
      if ($1_1 >>> 0 <= 255) {
       $1_1 = $1_1 >>> 3 | 0;
       $4_1 = $1944($5_1, 8);
       $2_1 = $1944($5_1, 12);
       if (($4_1 | 0) == ($2_1 | 0)) {
        $1973(0, 97136, $1944(0, 97136) & __wasm_rotl_i32($1_1));
        break label$17;
       }
       $1973($4_1, 12, $2_1);
       $1973($2_1, 8, $4_1);
       break label$17;
      }
      $7_1 = $1944($5_1, 24);
      $1_1 = $1944($5_1, 12);
      label$20 : {
       if (($1_1 | 0) != ($5_1 | 0)) {
        $2_1 = $1944($5_1, 8);
        $1944(0, 97152);
        $1973($2_1, 12, $1_1);
        $1973($1_1, 8, $2_1);
        break label$20;
       }
       label$22 : {
        $4_1 = $5_1 + 20 | 0;
        $2_1 = $1944($4_1, 0);
        if ($2_1) {
         break label$22
        }
        $4_1 = $5_1 + 16 | 0;
        $2_1 = $1944($4_1, 0);
        if ($2_1) {
         break label$22
        }
        $1_1 = 0;
        break label$20;
       }
       while (1) {
        $6_1 = $4_1;
        $1_1 = $2_1;
        $4_1 = $1_1 + 20 | 0;
        $2_1 = $1944($4_1, 0);
        if ($2_1) {
         continue
        }
        $4_1 = $1_1 + 16 | 0;
        $2_1 = $1944($1_1, 16);
        if ($2_1) {
         continue
        }
        break;
       };
       $1973($6_1, 0, 0);
      }
      if (!$7_1) {
       break label$17
      }
      $4_1 = $1944($5_1, 28);
      $2_1 = ($4_1 << 2) + 97440 | 0;
      label$24 : {
       if (($1944($2_1, 0) | 0) == ($5_1 | 0)) {
        $1973($2_1, 0, $1_1);
        if ($1_1) {
         break label$24
        }
        $1973(0, 97140, $1944(0, 97140) & __wasm_rotl_i32($4_1));
        break label$17;
       }
       $1973($7_1 + (($1944($7_1, 16) | 0) == ($5_1 | 0) ? 16 : 20) | 0, 0, $1_1);
       if (!$1_1) {
        break label$17
       }
      }
      $1973($1_1, 24, $7_1);
      $2_1 = $1944($5_1, 16);
      if ($2_1) {
       $1973($1_1, 16, $2_1);
       $1973($2_1, 24, $1_1);
      }
      $2_1 = $1944($5_1, 20);
      if (!$2_1) {
       break label$17
      }
      $1973($1_1 + 20 | 0, 0, $2_1);
      $1973($2_1, 24, $1_1);
     }
     $1973($3, 4, $0_1 | 1);
     $1973($0_1 + $3 | 0, 0, $0_1);
     if (($1944(0, 97156) | 0) != ($3 | 0)) {
      break label$13
     }
     $1973(0, 97144, $0_1);
     return;
    }
    $1973($5_1, 4, $1_1 & -2);
    $1973($3, 4, $0_1 | 1);
    $1973($0_1 + $3 | 0, 0, $0_1);
   }
   if ($0_1 >>> 0 <= 255) {
    $1_1 = ($0_1 & -8) + 97176 | 0;
    $2_1 = $1944(0, 97136);
    $0_1 = 1 << ($0_1 >>> 3);
    label$28 : {
     if (!($2_1 & $0_1)) {
      $1973(0, 97136, $0_1 | $2_1);
      $0_1 = $1_1;
      break label$28;
     }
     $0_1 = $1944($1_1, 8);
    }
    $1973($1_1, 8, $3);
    $1973($0_1, 12, $3);
    $1973($3, 12, $1_1);
    $1973($3, 8, $0_1);
    return;
   }
   $4_1 = 31;
   if ($0_1 >>> 0 <= 16777215) {
    $1_1 = Math_clz32($0_1 >>> 8 | 0);
    $4_1 = (($0_1 >>> 38 - $1_1 & 1) - ($1_1 << 1) | 0) + 62 | 0;
   }
   $1973($3, 28, $4_1);
   $1982($3, 16, 0, 0);
   $6_1 = ($4_1 << 2) + 97440 | 0;
   label$31 : {
    label$32 : {
     $2_1 = $1944(0, 97140);
     $1_1 = 1 << $4_1;
     label$33 : {
      if (!($2_1 & $1_1)) {
       $1973(0, 97140, $1_1 | $2_1);
       $1973($6_1, 0, $3);
       $1973($3, 24, $6_1);
       break label$33;
      }
      $4_1 = $0_1 << (($4_1 | 0) != 31 ? 25 - ($4_1 >>> 1 | 0) | 0 : 0);
      $1_1 = $1944($6_1, 0);
      while (1) {
       $2_1 = $1_1;
       if (($1944($1_1, 4) & -8) == ($0_1 | 0)) {
        break label$32
       }
       $1_1 = $4_1 >>> 29 | 0;
       $4_1 = $4_1 << 1;
       $6_1 = ($2_1 + ($1_1 & 4) | 0) + 16 | 0;
       $1_1 = $1944($6_1, 0);
       if ($1_1) {
        continue
       }
       break;
      };
      $1973($6_1, 0, $3);
      $1973($3, 24, $2_1);
     }
     $1973($3, 12, $3);
     $1973($3, 8, $3);
     break label$31;
    }
    $0_1 = $1944($2_1, 8);
    $1973($0_1, 12, $3);
    $1973($2_1, 8, $3);
    $1973($3, 24, 0);
    $1973($3, 12, $2_1);
    $1973($3, 8, $0_1);
   }
   $0_1 = $1944(0, 97168) - 1 | 0;
   $1973(0, 97168, $0_1 ? $0_1 : -1);
  }
 }
 
 function $1757($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0;
  if (!$0_1) {
   return $1755($1_1)
  }
  if ($1_1 >>> 0 >= 4294967232) {
   $1973(95900, 0, 48);
   return 0;
  }
  $5_1 = $1_1 >>> 0 < 11 ? 16 : $1_1 + 11 & -8;
  $4_1 = $0_1 - 8 | 0;
  $9 = $1944($4_1, 4);
  $3 = $9 & -8;
  __inlined_func$1758 : {
   label$1 : {
    if (!($9 & 3)) {
     $2_1 = 0;
     if ($5_1 >>> 0 < 256) {
      break __inlined_func$1758
     }
     if ($5_1 + 4 >>> 0 <= $3 >>> 0) {
      $2_1 = $4_1;
      if ($3 - $5_1 >>> 0 <= $1944(0, 97616) << 1 >>> 0) {
       break label$1
      }
     }
     $2_1 = 0;
     break __inlined_func$1758;
    }
    $6_1 = $3 + $4_1 | 0;
    label$5 : {
     if ($3 >>> 0 >= $5_1 >>> 0) {
      $3 = $3 - $5_1 | 0;
      if ($3 >>> 0 < 16) {
       break label$5
      }
      $1973($4_1, 4, $9 & 1 | $5_1 | 2);
      $2_1 = $4_1 + $5_1 | 0;
      $1973($2_1, 4, $3 | 3);
      $1973($6_1, 4, $1944($6_1, 4) | 1);
      $1762($2_1, $3);
      break label$5;
     }
     if (($1944(0, 97160) | 0) == ($6_1 | 0)) {
      $7_1 = $1944(0, 97148) + $3 | 0;
      if ($7_1 >>> 0 <= $5_1 >>> 0) {
       break label$1
      }
      $1973($4_1, 4, $9 & 1 | $5_1 | 2);
      $3 = $4_1 + $5_1 | 0;
      $2_1 = $7_1 - $5_1 | 0;
      $1973($3, 4, $2_1 | 1);
      $1973(0, 97148, $2_1);
      $1973(0, 97160, $3);
      break label$5;
     }
     if (($1944(0, 97156) | 0) == ($6_1 | 0)) {
      $3 = $1944(0, 97144) + $3 | 0;
      if ($3 >>> 0 < $5_1 >>> 0) {
       break label$1
      }
      $2_1 = $3 - $5_1 | 0;
      label$9 : {
       if ($2_1 >>> 0 >= 16) {
        $1973($4_1, 4, $9 & 1 | $5_1 | 2);
        $7_1 = $4_1 + $5_1 | 0;
        $1973($7_1, 4, $2_1 | 1);
        $3 = $3 + $4_1 | 0;
        $1973($3, 0, $2_1);
        $1973($3, 4, $1944($3, 4) & -2);
        break label$9;
       }
       $1973($4_1, 4, $3 | $9 & 1 | 2);
       $2_1 = $3 + $4_1 | 0;
       $1973($2_1, 4, $1944($2_1, 4) | 1);
       $2_1 = 0;
      }
      $1973(0, 97156, $7_1);
      $1973(0, 97144, $2_1);
      break label$5;
     }
     $7_1 = $1944($6_1, 4);
     if ($7_1 & 2) {
      break label$1
     }
     $10_1 = $3 + ($7_1 & -8) | 0;
     if ($10_1 >>> 0 < $5_1 >>> 0) {
      break label$1
     }
     $12_1 = $10_1 - $5_1 | 0;
     label$11 : {
      if ($7_1 >>> 0 <= 255) {
       $3 = $1944($6_1, 8);
       $2_1 = $1944($6_1, 12);
       if (($3 | 0) == ($2_1 | 0)) {
        $1973(0, 97136, $1944(0, 97136) & __wasm_rotl_i32($7_1 >>> 3 | 0));
        break label$11;
       }
       $1973($3, 12, $2_1);
       $1973($2_1, 8, $3);
       break label$11;
      }
      $11_1 = $1944($6_1, 24);
      $8 = $1944($6_1, 12);
      label$14 : {
       if (($6_1 | 0) != ($8 | 0)) {
        $2_1 = $1944($6_1, 8);
        $1944(0, 97152);
        $1973($2_1, 12, $8);
        $1973($8, 8, $2_1);
        break label$14;
       }
       label$16 : {
        $7_1 = $6_1 + 20 | 0;
        $2_1 = $1944($7_1, 0);
        if ($2_1) {
         break label$16
        }
        $7_1 = $6_1 + 16 | 0;
        $2_1 = $1944($7_1, 0);
        if ($2_1) {
         break label$16
        }
        $8 = 0;
        break label$14;
       }
       while (1) {
        $3 = $7_1;
        $8 = $2_1;
        $7_1 = $2_1 + 20 | 0;
        $2_1 = $1944($7_1, 0);
        if ($2_1) {
         continue
        }
        $7_1 = $8 + 16 | 0;
        $2_1 = $1944($8, 16);
        if ($2_1) {
         continue
        }
        break;
       };
       $1973($3, 0, 0);
      }
      if (!$11_1) {
       break label$11
      }
      $3 = $1944($6_1, 28);
      $2_1 = ($3 << 2) + 97440 | 0;
      label$18 : {
       if (($1944($2_1, 0) | 0) == ($6_1 | 0)) {
        $1973($2_1, 0, $8);
        if ($8) {
         break label$18
        }
        $1973(0, 97140, $1944(0, 97140) & __wasm_rotl_i32($3));
        break label$11;
       }
       $1973((($1944($11_1, 16) | 0) == ($6_1 | 0) ? 16 : 20) + $11_1 | 0, 0, $8);
       if (!$8) {
        break label$11
       }
      }
      $1973($8, 24, $11_1);
      $2_1 = $1944($6_1, 16);
      if ($2_1) {
       $1973($8, 16, $2_1);
       $1973($2_1, 24, $8);
      }
      $2_1 = $1944($6_1, 20);
      if (!$2_1) {
       break label$11
      }
      $1973($8 + 20 | 0, 0, $2_1);
      $1973($2_1, 24, $8);
     }
     if ($12_1 >>> 0 <= 15) {
      $1973($4_1, 4, $9 & 1 | $10_1 | 2);
      $2_1 = $4_1 + $10_1 | 0;
      $1973($2_1, 4, $1944($2_1, 4) | 1);
      break label$5;
     }
     $1973($4_1, 4, $9 & 1 | $5_1 | 2);
     $3 = $4_1 + $5_1 | 0;
     $1973($3, 4, $12_1 | 3);
     $2_1 = $4_1 + $10_1 | 0;
     $1973($2_1, 4, $1944($2_1, 4) | 1);
     $1762($3, $12_1);
    }
    $2_1 = $4_1;
   }
  }
  if ($2_1) {
   return $2_1 + 8 | 0
  }
  $4_1 = $1755($1_1);
  if (!$4_1) {
   return 0
  }
  $2_1 = $1944($0_1 - 4 | 0, 0);
  $2_1 = ($2_1 & 3 ? -4 : -8) + ($2_1 & -8) | 0;
  $1602($4_1, $0_1, $1_1 >>> 0 > $2_1 >>> 0 ? $2_1 : $1_1);
  $1756($0_1);
  return $4_1;
 }
 
 function $1762($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $5_1 = $0_1 + $1_1 | 0;
  $2_1 = $1944($0_1, 4);
  label$1 : {
   label$2 : {
    if ($2_1 & 1) {
     break label$2
    }
    if (!($2_1 & 3)) {
     break label$1
    }
    $2_1 = $1944($0_1, 0);
    $1_1 = $2_1 + $1_1 | 0;
    label$3 : {
     $0_1 = $0_1 - $2_1 | 0;
     if (($1944(0, 97156) | 0) != ($0_1 | 0)) {
      if ($2_1 >>> 0 <= 255) {
       $2_1 = $2_1 >>> 3 | 0;
       $4_1 = $1944($0_1, 8);
       $3 = $1944($0_1, 12);
       if (($4_1 | 0) != ($3 | 0)) {
        break label$3
       }
       $1973(0, 97136, $1944(0, 97136) & __wasm_rotl_i32($2_1));
       break label$2;
      }
      $7_1 = $1944($0_1, 24);
      $2_1 = $1944($0_1, 12);
      label$6 : {
       if (($0_1 | 0) != ($2_1 | 0)) {
        $3 = $1944($0_1, 8);
        $1944(0, 97152);
        $1973($3, 12, $2_1);
        $1973($2_1, 8, $3);
        break label$6;
       }
       label$8 : {
        $4_1 = $0_1 + 20 | 0;
        $3 = $1944($4_1, 0);
        if ($3) {
         break label$8
        }
        $4_1 = $0_1 + 16 | 0;
        $3 = $1944($4_1, 0);
        if ($3) {
         break label$8
        }
        $2_1 = 0;
        break label$6;
       }
       while (1) {
        $6_1 = $4_1;
        $2_1 = $3;
        $4_1 = $2_1 + 20 | 0;
        $3 = $1944($4_1, 0);
        if ($3) {
         continue
        }
        $4_1 = $2_1 + 16 | 0;
        $3 = $1944($2_1, 16);
        if ($3) {
         continue
        }
        break;
       };
       $1973($6_1, 0, 0);
      }
      if (!$7_1) {
       break label$2
      }
      $4_1 = $1944($0_1, 28);
      $3 = ($4_1 << 2) + 97440 | 0;
      label$10 : {
       if (($1944($3, 0) | 0) == ($0_1 | 0)) {
        $1973($3, 0, $2_1);
        if ($2_1) {
         break label$10
        }
        $1973(0, 97140, $1944(0, 97140) & __wasm_rotl_i32($4_1));
        break label$2;
       }
       $1973($7_1 + (($1944($7_1, 16) | 0) == ($0_1 | 0) ? 16 : 20) | 0, 0, $2_1);
       if (!$2_1) {
        break label$2
       }
      }
      $1973($2_1, 24, $7_1);
      $3 = $1944($0_1, 16);
      if ($3) {
       $1973($2_1, 16, $3);
       $1973($3, 24, $2_1);
      }
      $3 = $1944($0_1, 20);
      if (!$3) {
       break label$2
      }
      $1973($2_1 + 20 | 0, 0, $3);
      $1973($3, 24, $2_1);
      break label$2;
     }
     $2_1 = $1944($5_1, 4);
     if (($2_1 & 3) != 3) {
      break label$2
     }
     $1973(0, 97144, $1_1);
     $1973($5_1, 4, $2_1 & -2);
     $1973($0_1, 4, $1_1 | 1);
     $1973($5_1, 0, $1_1);
     return;
    }
    $1973($4_1, 12, $3);
    $1973($3, 8, $4_1);
   }
   $2_1 = $1944($5_1, 4);
   label$13 : {
    if (!($2_1 & 2)) {
     if (($1944(0, 97160) | 0) == ($5_1 | 0)) {
      $1973(0, 97160, $0_1);
      $1_1 = $1944(0, 97148) + $1_1 | 0;
      $1973(0, 97148, $1_1);
      $1973($0_1, 4, $1_1 | 1);
      if (($1944(0, 97156) | 0) != ($0_1 | 0)) {
       break label$1
      }
      $1973(0, 97144, 0);
      $1973(0, 97156, 0);
      return;
     }
     if (($1944(0, 97156) | 0) == ($5_1 | 0)) {
      $1973(0, 97156, $0_1);
      $1_1 = $1944(0, 97144) + $1_1 | 0;
      $1973(0, 97144, $1_1);
      $1973($0_1, 4, $1_1 | 1);
      $1973($0_1 + $1_1 | 0, 0, $1_1);
      return;
     }
     $1_1 = ($2_1 & -8) + $1_1 | 0;
     label$17 : {
      if ($2_1 >>> 0 <= 255) {
       $2_1 = $2_1 >>> 3 | 0;
       $4_1 = $1944($5_1, 8);
       $3 = $1944($5_1, 12);
       if (($4_1 | 0) == ($3 | 0)) {
        $1973(0, 97136, $1944(0, 97136) & __wasm_rotl_i32($2_1));
        break label$17;
       }
       $1973($4_1, 12, $3);
       $1973($3, 8, $4_1);
       break label$17;
      }
      $7_1 = $1944($5_1, 24);
      $2_1 = $1944($5_1, 12);
      label$20 : {
       if (($2_1 | 0) != ($5_1 | 0)) {
        $3 = $1944($5_1, 8);
        $1944(0, 97152);
        $1973($3, 12, $2_1);
        $1973($2_1, 8, $3);
        break label$20;
       }
       label$22 : {
        $3 = $5_1 + 20 | 0;
        $4_1 = $1944($3, 0);
        if ($4_1) {
         break label$22
        }
        $3 = $5_1 + 16 | 0;
        $4_1 = $1944($3, 0);
        if ($4_1) {
         break label$22
        }
        $2_1 = 0;
        break label$20;
       }
       while (1) {
        $6_1 = $3;
        $2_1 = $4_1;
        $3 = $2_1 + 20 | 0;
        $4_1 = $1944($3, 0);
        if ($4_1) {
         continue
        }
        $3 = $2_1 + 16 | 0;
        $4_1 = $1944($2_1, 16);
        if ($4_1) {
         continue
        }
        break;
       };
       $1973($6_1, 0, 0);
      }
      if (!$7_1) {
       break label$17
      }
      $4_1 = $1944($5_1, 28);
      $3 = ($4_1 << 2) + 97440 | 0;
      label$24 : {
       if (($1944($3, 0) | 0) == ($5_1 | 0)) {
        $1973($3, 0, $2_1);
        if ($2_1) {
         break label$24
        }
        $1973(0, 97140, $1944(0, 97140) & __wasm_rotl_i32($4_1));
        break label$17;
       }
       $1973($7_1 + (($1944($7_1, 16) | 0) == ($5_1 | 0) ? 16 : 20) | 0, 0, $2_1);
       if (!$2_1) {
        break label$17
       }
      }
      $1973($2_1, 24, $7_1);
      $3 = $1944($5_1, 16);
      if ($3) {
       $1973($2_1, 16, $3);
       $1973($3, 24, $2_1);
      }
      $3 = $1944($5_1, 20);
      if (!$3) {
       break label$17
      }
      $1973($2_1 + 20 | 0, 0, $3);
      $1973($3, 24, $2_1);
     }
     $1973($0_1, 4, $1_1 | 1);
     $1973($0_1 + $1_1 | 0, 0, $1_1);
     if (($1944(0, 97156) | 0) != ($0_1 | 0)) {
      break label$13
     }
     $1973(0, 97144, $1_1);
     return;
    }
    $1973($5_1, 4, $2_1 & -2);
    $1973($0_1, 4, $1_1 | 1);
    $1973($0_1 + $1_1 | 0, 0, $1_1);
   }
   if ($1_1 >>> 0 <= 255) {
    $2_1 = ($1_1 & -8) + 97176 | 0;
    $3 = $1944(0, 97136);
    $1_1 = 1 << ($1_1 >>> 3);
    label$28 : {
     if (!($3 & $1_1)) {
      $1973(0, 97136, $1_1 | $3);
      $1_1 = $2_1;
      break label$28;
     }
     $1_1 = $1944($2_1, 8);
    }
    $1973($2_1, 8, $0_1);
    $1973($1_1, 12, $0_1);
    $1973($0_1, 12, $2_1);
    $1973($0_1, 8, $1_1);
    return;
   }
   $4_1 = 31;
   if ($1_1 >>> 0 <= 16777215) {
    $2_1 = Math_clz32($1_1 >>> 8 | 0);
    $4_1 = (($1_1 >>> 38 - $2_1 & 1) - ($2_1 << 1) | 0) + 62 | 0;
   }
   $1973($0_1, 28, $4_1);
   $1982($0_1, 16, 0, 0);
   $6_1 = ($4_1 << 2) + 97440 | 0;
   label$31 : {
    $3 = $1944(0, 97140);
    $2_1 = 1 << $4_1;
    label$32 : {
     if (!($3 & $2_1)) {
      $1973(0, 97140, $2_1 | $3);
      $1973($6_1, 0, $0_1);
      $1973($0_1, 24, $6_1);
      break label$32;
     }
     $4_1 = $1_1 << (($4_1 | 0) != 31 ? 25 - ($4_1 >>> 1 | 0) | 0 : 0);
     $2_1 = $1944($6_1, 0);
     while (1) {
      $3 = $2_1;
      if (($1944($2_1, 4) & -8) == ($1_1 | 0)) {
       break label$31
      }
      $2_1 = $4_1 >>> 29 | 0;
      $4_1 = $4_1 << 1;
      $6_1 = ($3 + ($2_1 & 4) | 0) + 16 | 0;
      $2_1 = $1944($6_1, 0);
      if ($2_1) {
       continue
      }
      break;
     };
     $1973($6_1, 0, $0_1);
     $1973($0_1, 24, $3);
    }
    $1973($0_1, 12, $0_1);
    $1973($0_1, 8, $0_1);
    return;
   }
   $1_1 = $1944($3, 8);
   $1973($1_1, 12, $0_1);
   $1973($3, 8, $0_1);
   $1973($0_1, 24, 0);
   $1973($0_1, 12, $3);
   $1973($0_1, 8, $1_1);
  }
 }
 
 function $1764() {
  return 73412;
 }
 
 function $1765($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0;
  $1_1 = $1944(0, 73412);
  $2_1 = $0_1 + 7 & -8;
  $0_1 = $1_1 + $2_1 | 0;
  label$1 : {
   if (!!$2_1 & $0_1 >>> 0 <= $1_1 >>> 0) {
    break label$1
   }
   if ($0_1 >>> 0 > __wasm_memory_size() << 16 >>> 0) {
    if (!(fimport$37($0_1 | 0) | 0)) {
     break label$1
    }
   }
   $1973(0, 73412, $0_1);
   return $1_1 | 0;
  }
  $1973(95900, 0, 48);
  return -1;
 }
 
 function $1766($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  var $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0;
  $12_1 = global$0 - 112 | 0;
  global$0 = $12_1;
  $9 = $8 & 2147483647;
  label$1 : {
   label$2 : {
    $13 = $4_1 & 2147483647;
    $10_1 = !($1_1 | $2_1);
    if (!($3 | $13 ? $13 - 2147418112 >>> 0 < 2147549184 : $10_1)) {
     $11_1 = $9 - 2147418112 | 0;
     if (!$7_1 & ($11_1 | 0) == -2147418112 ? $5_1 | $6_1 : ($11_1 | 0) == -2147418112 & ($7_1 | 0) != 0 | $11_1 >>> 0 > 2147549184) {
      break label$2
     }
    }
    if (!(!$3 & ($13 | 0) == 2147418112 ? $10_1 : $13 >>> 0 < 2147418112)) {
     $7_1 = $3;
     $8 = $4_1 | 32768;
     $5_1 = $1_1;
     $6_1 = $2_1;
     break label$1;
    }
    if (!(!$7_1 & ($9 | 0) == 2147418112 ? !($5_1 | $6_1) : $9 >>> 0 < 2147418112)) {
     $8 = $8 | 32768;
     break label$1;
    }
    if (!($1_1 | $3 | ($13 ^ 2147418112 | $2_1))) {
     $9 = $3;
     $3 = !($1_1 ^ $5_1 | $3 ^ $7_1 | ($2_1 ^ $6_1 | $4_1 ^ $8 ^ -2147483648));
     $7_1 = $3 ? 0 : $9;
     $8 = $3 ? 2147450880 : $4_1;
     $5_1 = $3 ? 0 : $1_1;
     $6_1 = $3 ? 0 : $2_1;
     break label$1;
    }
    if (!($5_1 | $7_1 | ($9 ^ 2147418112 | $6_1))) {
     break label$1
    }
    if (!($1_1 | $3 | ($2_1 | $13))) {
     if ($5_1 | $7_1 | ($6_1 | $9)) {
      break label$1
     }
     $5_1 = $1_1 & $5_1;
     $6_1 = $2_1 & $6_1;
     $7_1 = $3 & $7_1;
     $8 = $4_1 & $8;
     break label$1;
    }
    if ($5_1 | $7_1 | ($6_1 | $9)) {
     break label$2
    }
    $5_1 = $1_1;
    $6_1 = $2_1;
    $7_1 = $3;
    $8 = $4_1;
    break label$1;
   }
   $11_1 = ($9 | 0) == ($13 | 0);
   $13 = $11_1 & ($3 | 0) == ($7_1 | 0) ? ($2_1 | 0) == ($6_1 | 0) & $1_1 >>> 0 < $5_1 >>> 0 | $2_1 >>> 0 < $6_1 >>> 0 : $11_1 & $3 >>> 0 < $7_1 >>> 0 | $9 >>> 0 > $13 >>> 0;
   $9 = $13;
   $14 = $9 ? $5_1 : $1_1;
   $16_1 = $9 ? $6_1 : $2_1;
   $10_1 = $9 ? $8 : $4_1;
   $17_1 = $10_1;
   $11_1 = $9 ? $7_1 : $3;
   $10_1 = $10_1 & 65535;
   $4_1 = $9 ? $4_1 : $8;
   $15_1 = $4_1;
   $4_1 = $4_1 >>> 16 & 32767;
   $9 = $17_1 >>> 16 & 32767;
   if (!$9) {
    $8 = !($11_1 | $10_1);
    $9 = Math_clz32($8 ? $16_1 : $10_1);
    $8 = (($9 | 0) == 32 ? Math_clz32($8 ? $14 : $11_1) + 32 | 0 : $9) + ($8 << 6) | 0;
    $1767($12_1 + 96 | 0, $14, $16_1, $11_1, $10_1, $8 - 15 | 0);
    $11_1 = $1960($12_1 + 104 | 0, 0);
    $10_1 = i64toi32_i32$HIGH_BITS;
    $14 = $1960($12_1, 96);
    $16_1 = i64toi32_i32$HIGH_BITS;
    $9 = 16 - $8 | 0;
   }
   $5_1 = $13 ? $1_1 : $5_1;
   $6_1 = $13 ? $2_1 : $6_1;
   $7_1 = $13 ? $3 : $7_1;
   $8 = $15_1 & 65535;
   if (!$4_1) {
    $1_1 = !($7_1 | $8);
    $2_1 = Math_clz32($1_1 ? $6_1 : $8);
    $1_1 = (($2_1 | 0) == 32 ? Math_clz32($1_1 ? $5_1 : $7_1) + 32 | 0 : $2_1) + ($1_1 << 6) | 0;
    $1767($12_1 + 80 | 0, $5_1, $6_1, $7_1, $8, $1_1 - 15 | 0);
    $7_1 = $1960($12_1 + 88 | 0, 0);
    $8 = i64toi32_i32$HIGH_BITS;
    $5_1 = $1960($12_1, 80);
    $6_1 = i64toi32_i32$HIGH_BITS;
    $4_1 = 16 - $1_1 | 0;
   }
   $1_1 = $7_1 << 3 | $6_1 >>> 29;
   $2_1 = $8 << 3 | $7_1 >>> 29 | 524288;
   $13 = $11_1 << 3 | $16_1 >>> 29;
   $7_1 = $10_1 << 3 | $11_1 >>> 29;
   $11_1 = $5_1 << 3;
   $10_1 = $6_1 << 3 | $5_1 >>> 29;
   $5_1 = $15_1 ^ $17_1;
   label$10 : {
    if (($4_1 | 0) == ($9 | 0)) {
     break label$10
    }
    $3 = $9 - $4_1 | 0;
    if ($3 >>> 0 > 127) {
     $1_1 = 0;
     $2_1 = 0;
     $11_1 = 1;
     $10_1 = 0;
     break label$10;
    }
    $4_1 = $12_1 - -64 | 0;
    $1767($4_1, $11_1, $10_1, $1_1, $2_1, 128 - $3 | 0);
    $6_1 = $12_1 + 48 | 0;
    $1777($6_1, $11_1, $10_1, $1_1, $2_1, $3);
    $1_1 = $1960($12_1, 48);
    $10_1 = i64toi32_i32$HIGH_BITS;
    $2_1 = $1960($12_1, 64);
    $3 = i64toi32_i32$HIGH_BITS;
    $11_1 = ($1960($4_1 + 8 | 0, 0) | $2_1 | (i64toi32_i32$HIGH_BITS | $3)) != 0 | $1_1;
    $1_1 = $1960($6_1 + 8 | 0, 0);
    $2_1 = i64toi32_i32$HIGH_BITS;
   }
   $15_1 = $7_1 | 524288;
   $4_1 = $14 << 3;
   $14 = $16_1 << 3 | $14 >>> 29;
   label$12 : {
    if (($5_1 | 0) < 0) {
     $5_1 = 0;
     $6_1 = 0;
     $7_1 = 0;
     $8 = 0;
     if (!($4_1 ^ $11_1 | $1_1 ^ $13 | ($10_1 ^ $14 | $2_1 ^ $15_1))) {
      break label$1
     }
     $3 = $4_1 - $11_1 | 0;
     $5_1 = $4_1 >>> 0 < $11_1 >>> 0;
     $4_1 = $14 - ($5_1 + $10_1 | 0) | 0;
     $6_1 = $13 - $1_1 | 0;
     $5_1 = $5_1 & ($10_1 | 0) == ($14 | 0) | $10_1 >>> 0 > $14 >>> 0;
     $7_1 = $6_1 - $5_1 | 0;
     $1_1 = ($15_1 - (($1_1 >>> 0 > $13 >>> 0) + $2_1 | 0) | 0) - ($5_1 >>> 0 > $6_1 >>> 0) | 0;
     $8 = $1_1;
     if ($1_1 >>> 0 > 524287) {
      break label$12
     }
     $1_1 = !($7_1 | $8);
     $2_1 = Math_clz32($1_1 ? $4_1 : $8);
     $1_1 = ((($2_1 | 0) == 32 ? Math_clz32($1_1 ? $3 : $7_1) + 32 | 0 : $2_1) + ($1_1 << 6) | 0) - 12 | 0;
     $1767($12_1 + 32 | 0, $3, $4_1, $7_1, $8, $1_1);
     $9 = $9 - $1_1 | 0;
     $7_1 = $1960($12_1 + 40 | 0, 0);
     $8 = i64toi32_i32$HIGH_BITS;
     $3 = $1960($12_1, 32);
     $4_1 = i64toi32_i32$HIGH_BITS;
     break label$12;
    }
    $2_1 = $2_1 + $15_1 | 0;
    $1_1 = $1_1 + $13 | 0;
    $2_1 = $1_1 >>> 0 < $13 >>> 0 ? $2_1 + 1 | 0 : $2_1;
    $6_1 = $2_1 + 1 | 0;
    $5_1 = $2_1;
    $2_1 = $10_1 + $14 | 0;
    $3 = $4_1 + $11_1 | 0;
    $4_1 = $3 >>> 0 < $4_1 >>> 0 ? $2_1 + 1 | 0 : $2_1;
    $2_1 = ($10_1 | 0) == ($4_1 | 0) & $3 >>> 0 < $11_1 >>> 0 | $4_1 >>> 0 < $10_1 >>> 0;
    $7_1 = $1_1 + $2_1 | 0;
    $8 = $2_1 >>> 0 > $7_1 >>> 0 ? $6_1 : $5_1;
    if (!($8 & 1048576)) {
     break label$12
    }
    $3 = $11_1 & 1 | (($4_1 & 1) << 31 | $3 >>> 1);
    $4_1 = $7_1 << 31 | $4_1 >>> 1;
    $9 = $9 + 1 | 0;
    $7_1 = ($8 & 1) << 31 | $7_1 >>> 1;
    $8 = $8 >>> 1 | 0;
   }
   $1_1 = $17_1 & -2147483648;
   if (($9 | 0) >= 32767) {
    $7_1 = 0;
    $8 = $1_1 | 2147418112;
    $5_1 = 0;
    $6_1 = 0;
    break label$1;
   }
   $2_1 = 0;
   label$15 : {
    if (($9 | 0) > 0) {
     $2_1 = $9;
     break label$15;
    }
    $5_1 = $12_1 + 16 | 0;
    $1767($5_1, $3, $4_1, $7_1, $8, $9 + 127 | 0);
    $1777($12_1, $3, $4_1, $7_1, $8, 1 - $9 | 0);
    $3 = $1960($12_1, 0);
    $4_1 = i64toi32_i32$HIGH_BITS;
    $6_1 = $1960($12_1, 16);
    $7_1 = i64toi32_i32$HIGH_BITS;
    $3 = ($1960($5_1 + 8 | 0, 0) | $6_1 | (i64toi32_i32$HIGH_BITS | $7_1)) != 0 | $3;
    $7_1 = $1960($12_1 + 8 | 0, 0);
    $8 = i64toi32_i32$HIGH_BITS;
   }
   $1_1 = $1_1 | ($8 >>> 3 & 65535 | $2_1 << 16);
   $10_1 = $1_1 + 1 | 0;
   $9 = $1_1;
   $1_1 = $7_1 << 29 | $4_1 >>> 3;
   $2_1 = $3 & 7;
   $5_1 = $2_1 >>> 0 > 4;
   $6_1 = $5_1;
   $3 = ($4_1 & 7) << 29 | $3 >>> 3;
   $5_1 = $5_1 + $3 | 0;
   $4_1 = $6_1 >>> 0 > $5_1 >>> 0 ? $1_1 + 1 | 0 : $1_1;
   $6_1 = $4_1;
   $1_1 = ($4_1 | 0) == ($1_1 | 0) & $3 >>> 0 > $5_1 >>> 0 | $1_1 >>> 0 > $4_1 >>> 0;
   $7_1 = $1_1 + (($8 & 7) << 29 | $7_1 >>> 3) | 0;
   $8 = $1_1 >>> 0 > $7_1 >>> 0 ? $10_1 : $9;
   label$17 : {
    if (($2_1 | 0) == 4) {
     $1_1 = $6_1;
     $3 = $1_1 + 1 | 0;
     $2_1 = $5_1;
     $1_1 = $5_1 & 1;
     $5_1 = $5_1 + $1_1 | 0;
     $6_1 = $2_1 >>> 0 > $5_1 >>> 0 ? $3 : $6_1;
     $1_1 = !$6_1 & $1_1 >>> 0 > $5_1 >>> 0;
     $7_1 = $1_1 + $7_1 | 0;
     $8 = $1_1 >>> 0 > $7_1 >>> 0 ? $8 + 1 | 0 : $8;
     break label$17;
    }
    if (!$2_1) {
     break label$1
    }
   }
  }
  $1983($0_1, 0, $5_1, $6_1);
  $1983($0_1, 8, $7_1, $8);
  global$0 = $12_1 + 112 | 0;
 }
 
 function $1767($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0, $7_1 = 0, $8 = 0;
  label$1 : {
   if ($5_1 & 64) {
    $3 = $1_1;
    $4_1 = $5_1 + -64 | 0;
    $1_1 = $4_1 & 31;
    if (($4_1 & 63) >>> 0 >= 32) {
     $4_1 = $3 << $1_1;
     $3 = 0;
    } else {
     $4_1 = (1 << $1_1) - 1 & $3 >>> 32 - $1_1 | $2_1 << $1_1;
     $3 = $3 << $1_1;
    }
    $1_1 = 0;
    $2_1 = 0;
    break label$1;
   }
   if (!$5_1) {
    break label$1
   }
   $7_1 = 64 - $5_1 | 0;
   $6_1 = $7_1 & 31;
   if (($7_1 & 63) >>> 0 >= 32) {
    $7_1 = 0;
    $8 = $2_1 >>> $6_1 | 0;
   } else {
    $7_1 = $2_1 >>> $6_1 | 0;
    $8 = ((1 << $6_1) - 1 & $2_1) << 32 - $6_1 | $1_1 >>> $6_1;
   }
   $6_1 = $3;
   $3 = $5_1 & 31;
   if (($5_1 & 63) >>> 0 >= 32) {
    $4_1 = $6_1 << $3;
    $3 = 0;
   } else {
    $4_1 = (1 << $3) - 1 & $6_1 >>> 32 - $3 | $4_1 << $3;
    $3 = $6_1 << $3;
   }
   $3 = $8 | $3;
   $4_1 = $4_1 | $7_1;
   $6_1 = $1_1;
   $1_1 = $5_1 & 31;
   if (($5_1 & 63) >>> 0 >= 32) {
    $7_1 = $6_1 << $1_1;
    $1_1 = 0;
   } else {
    $7_1 = (1 << $1_1) - 1 & $6_1 >>> 32 - $1_1 | $2_1 << $1_1;
    $1_1 = $6_1 << $1_1;
   }
   $2_1 = $7_1;
  }
  $1983($0_1, 0, $1_1, $2_1);
  $1983($0_1, 8, $3, $4_1);
 }
 
 function $1768($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1) {
  var $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0;
  $10_1 = 1;
  $8 = $3 & 2147483647;
  $11_1 = $8;
  $9 = ($8 | 0) == 2147418112;
  label$1 : {
   if ($9 & !$2_1 ? $0_1 | $1_1 : $9 & ($2_1 | 0) != 0 | $8 >>> 0 > 2147418112) {
    break label$1
   }
   $8 = $7_1 & 2147483647;
   $9 = ($8 | 0) == 2147418112;
   if ($9 & !$6_1 ? $4_1 | $5_1 : $9 & ($6_1 | 0) != 0 | $8 >>> 0 > 2147418112) {
    break label$1
   }
   if (!($0_1 | $4_1 | ($2_1 | $6_1) | ($1_1 | $5_1 | ($8 | $11_1)))) {
    return 0
   }
   if (($3 & $7_1) >= 0) {
    $10_1 = -1;
    if (($2_1 | 0) == ($6_1 | 0) & ($3 | 0) == ($7_1 | 0) ? ($1_1 | 0) == ($5_1 | 0) & $0_1 >>> 0 < $4_1 >>> 0 | $1_1 >>> 0 < $5_1 >>> 0 : $2_1 >>> 0 < $6_1 >>> 0 & ($3 | 0) <= ($7_1 | 0) | ($3 | 0) < ($7_1 | 0)) {
     break label$1
    }
    return ($0_1 ^ $4_1 | $2_1 ^ $6_1 | ($1_1 ^ $5_1 | $3 ^ $7_1)) != 0;
   }
   $10_1 = -1;
   if (($2_1 | 0) == ($6_1 | 0) & ($3 | 0) == ($7_1 | 0) ? ($1_1 | 0) == ($5_1 | 0) & $0_1 >>> 0 > $4_1 >>> 0 | $1_1 >>> 0 > $5_1 >>> 0 : $2_1 >>> 0 > $6_1 >>> 0 & ($3 | 0) >= ($7_1 | 0) | ($3 | 0) > ($7_1 | 0)) {
    break label$1
   }
   $10_1 = ($0_1 ^ $4_1 | $2_1 ^ $6_1 | ($1_1 ^ $5_1 | $3 ^ $7_1)) != 0;
  }
  return $10_1;
 }
 
 function $1769($0_1, $1_1, $2_1, $3, $4_1) {
  var $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $7_1 = -1;
  $5_1 = $3 & 2147483647;
  $8 = $5_1;
  $6_1 = ($5_1 | 0) == 2147418112;
  label$1 : {
   if ($6_1 & !$2_1 ? $0_1 | $1_1 : $6_1 & ($2_1 | 0) != 0 | $5_1 >>> 0 > 2147418112) {
    break label$1
   }
   $5_1 = $4_1 & 2147483647;
   $6_1 = ($5_1 | 0) == 2147418112;
   if ($6_1 ? 0 : $6_1 & 0 | $5_1 >>> 0 > 2147418112) {
    break label$1
   }
   if (!($0_1 | $2_1 | ($1_1 | ($5_1 | $8)))) {
    return 0
   }
   if (($3 & $4_1) >= 0) {
    if (!$2_1 & ($3 | 0) == ($4_1 | 0) ? 0 : ($3 | 0) < ($4_1 | 0)) {
     break label$1
    }
    return ($0_1 | $2_1 | ($1_1 | $3 ^ $4_1)) != 0;
   }
   if (!$2_1 & ($3 | 0) == ($4_1 | 0) ? $1_1 | !$1_1 & ($0_1 | 0) != 0 : ($2_1 | 0) != 0 & ($3 | 0) >= ($4_1 | 0) | ($3 | 0) > ($4_1 | 0)) {
    break label$1
   }
   $7_1 = ($0_1 | $2_1 | ($1_1 | $3 ^ $4_1)) != 0;
  }
  return $7_1;
 }
 
 function $1770($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  var $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = 0, $21_1 = 0, $22_1 = 0, $23_1 = 0, $24 = 0, $25_1 = 0, $26_1 = 0, $27_1 = 0, $28_1 = 0, $29_1 = 0, $30 = 0, $31_1 = 0, $32_1 = 0, $33_1 = 0, $34_1 = 0, $35_1 = 0, $36_1 = 0, $37 = 0, $38_1 = 0, $39_1 = 0, $40_1 = 0;
  $12_1 = global$0 - 336 | 0;
  global$0 = $12_1;
  $10_1 = $7_1;
  $11_1 = $8 & 65535;
  $14 = $3;
  $15_1 = $4_1 & 65535;
  $19 = ($4_1 ^ $8) & -2147483648;
  $16_1 = $8 >>> 16 & 32767;
  $24 = $4_1 >>> 16 & 32767;
  label$1 : {
   label$2 : {
    if ($24 - 32767 >>> 0 >= 4294934530) {
     if ($16_1 - 32767 >>> 0 > 4294934529) {
      break label$2
     }
    }
    $9 = $4_1 & 2147483647;
    if (!(!$3 & ($9 | 0) == 2147418112 ? !($1_1 | $2_1) : $9 >>> 0 < 2147418112)) {
     $22_1 = $3;
     $19 = $4_1 | 32768;
     break label$1;
    }
    $4_1 = $8 & 2147483647;
    if (!(!$7_1 & ($4_1 | 0) == 2147418112 ? !($5_1 | $6_1) : $4_1 >>> 0 < 2147418112)) {
     $22_1 = $7_1;
     $19 = $8 | 32768;
     $1_1 = $5_1;
     $2_1 = $6_1;
     break label$1;
    }
    if (!($1_1 | $3 | ($9 ^ 2147418112 | $2_1))) {
     if (!($5_1 | $7_1 | ($4_1 ^ 2147418112 | $6_1))) {
      $1_1 = 0;
      $2_1 = 0;
      $19 = 2147450880;
      break label$1;
     }
     $19 = $19 | 2147418112;
     $1_1 = 0;
     $2_1 = 0;
     break label$1;
    }
    if (!($5_1 | $7_1 | ($4_1 ^ 2147418112 | $6_1))) {
     $1_1 = 0;
     $2_1 = 0;
     break label$1;
    }
    if (!($1_1 | $3 | ($2_1 | $9))) {
     $1_1 = !($5_1 | $7_1 | ($4_1 | $6_1));
     $22_1 = $1_1 ? 0 : $22_1;
     $19 = $1_1 ? 2147450880 : $19;
     $1_1 = 0;
     $2_1 = 0;
     break label$1;
    }
    if (!($5_1 | $7_1 | ($4_1 | $6_1))) {
     $19 = $19 | 2147418112;
     $1_1 = 0;
     $2_1 = 0;
     break label$1;
    }
    if ($9 >>> 0 <= 65535) {
     $3 = !($14 | $15_1);
     $8 = $3;
     $9 = $3 ? $1_1 : $14;
     $3 = $3 << 6;
     $8 = Math_clz32($8 ? $2_1 : $15_1);
     $3 = $3 + (($8 | 0) == 32 ? Math_clz32($9) + 32 | 0 : $8) | 0;
     $1767($12_1 + 320 | 0, $1_1, $2_1, $14, $15_1, $3 - 15 | 0);
     $17_1 = 16 - $3 | 0;
     $14 = $1960($12_1 + 328 | 0, 0);
     $15_1 = i64toi32_i32$HIGH_BITS;
     $1_1 = $1960($12_1, 320);
     $2_1 = i64toi32_i32$HIGH_BITS;
    }
    if ($4_1 >>> 0 > 65535) {
     break label$2
    }
    $3 = !($10_1 | $11_1);
    $7_1 = $3;
    $8 = $3 ? $5_1 : $10_1;
    $3 = $3 << 6;
    $7_1 = Math_clz32($7_1 ? $6_1 : $11_1);
    $3 = $3 + (($7_1 | 0) == 32 ? Math_clz32($8) + 32 | 0 : $7_1) | 0;
    $1767($12_1 + 304 | 0, $5_1, $6_1, $10_1, $11_1, $3 - 15 | 0);
    $17_1 = ($3 + $17_1 | 0) - 16 | 0;
    $10_1 = $1960($12_1 + 312 | 0, 0);
    $11_1 = i64toi32_i32$HIGH_BITS;
    $5_1 = $1960($12_1, 304);
    $6_1 = i64toi32_i32$HIGH_BITS;
   }
   $4_1 = 0;
   $7_1 = $11_1 | 65536;
   $25_1 = $7_1;
   $26_1 = $10_1;
   $3 = $10_1;
   $9 = $7_1 << 15 | $3 >>> 17;
   $3 = $3 << 15 | $6_1 >>> 17;
   $7_1 = 0 - $3 | 0;
   $4_1 = $4_1 | $9;
   $8 = 1963258675 - ($4_1 + (($3 | 0) != 0) | 0) | 0;
   $9 = $12_1 + 288 | 0;
   $1779($9, $3, $4_1, 0, 0, $7_1, $8, 0, 0);
   $10_1 = $12_1 + 272 | 0;
   $9 = $1960($9 + 8 | 0, 0);
   $1779($10_1, 0 - $9 | 0, 0 - (i64toi32_i32$HIGH_BITS + (($9 | 0) != 0) | 0) | 0, 0, 0, $7_1, $8, 0, 0);
   $1960($12_1, 272);
   $11_1 = i64toi32_i32$HIGH_BITS >>> 31 | 0;
   $8 = 0;
   $7_1 = $1960($10_1 + 8 | 0, 0);
   $9 = i64toi32_i32$HIGH_BITS << 1 | $7_1 >>> 31;
   $10_1 = $12_1 + 256 | 0;
   $7_1 = $7_1 << 1 | $11_1;
   $8 = $8 | $9;
   $1779($10_1, $7_1, $8, 0, 0, $3, $4_1, 0, 0);
   $13 = $12_1 + 240 | 0;
   $9 = $1960($10_1 + 8 | 0, 0);
   $1779($13, $7_1, $8, 0, 0, 0 - $9 | 0, 0 - (i64toi32_i32$HIGH_BITS + (($9 | 0) != 0) | 0) | 0, 0, 0);
   $1960($12_1, 240);
   $11_1 = i64toi32_i32$HIGH_BITS >>> 31 | 0;
   $8 = 0;
   $7_1 = $1960($13 + 8 | 0, 0);
   $9 = i64toi32_i32$HIGH_BITS << 1 | $7_1 >>> 31;
   $10_1 = $12_1 + 224 | 0;
   $7_1 = $7_1 << 1 | $11_1;
   $8 = $8 | $9;
   $1779($10_1, $7_1, $8, 0, 0, $3, $4_1, 0, 0);
   $13 = $12_1 + 208 | 0;
   $9 = $1960($10_1 + 8 | 0, 0);
   $1779($13, $7_1, $8, 0, 0, 0 - $9 | 0, 0 - (i64toi32_i32$HIGH_BITS + (($9 | 0) != 0) | 0) | 0, 0, 0);
   $1960($12_1, 208);
   $11_1 = i64toi32_i32$HIGH_BITS >>> 31 | 0;
   $8 = 0;
   $7_1 = $1960($13 + 8 | 0, 0);
   $9 = i64toi32_i32$HIGH_BITS << 1 | $7_1 >>> 31;
   $10_1 = $12_1 + 192 | 0;
   $7_1 = $7_1 << 1 | $11_1;
   $8 = $8 | $9;
   $1779($10_1, $7_1, $8, 0, 0, $3, $4_1, 0, 0);
   $11_1 = $12_1 + 176 | 0;
   $9 = $1960($10_1 + 8 | 0, 0);
   $1779($11_1, $7_1, $8, 0, 0, 0 - $9 | 0, 0 - (i64toi32_i32$HIGH_BITS + (($9 | 0) != 0) | 0) | 0, 0, 0);
   $7_1 = $3;
   $10_1 = $4_1;
   $1960($12_1, 176);
   $4_1 = i64toi32_i32$HIGH_BITS >>> 31 | 0;
   $3 = $1960($11_1 + 8 | 0, 0);
   $4_1 = ($4_1 | $3 << 1) - 1 | 0;
   $8 = (i64toi32_i32$HIGH_BITS << 1 | $3 >>> 31) - 1 | 0;
   $3 = ($4_1 | 0) != -1 ? $8 + 1 | 0 : $8;
   $1779($12_1 + 160 | 0, $7_1, $10_1, 0, 0, $4_1, $3, 0, 0);
   $9 = $12_1 + 144 | 0;
   $1779($9, $5_1 << 15, $6_1 << 15 | $5_1 >>> 17, 0, 0, $4_1, $3, 0, 0);
   $29_1 = $1960($12_1 + 168 | 0, 0);
   $8 = i64toi32_i32$HIGH_BITS;
   $7_1 = $1960($12_1, 160);
   $13 = i64toi32_i32$HIGH_BITS;
   $11_1 = $7_1;
   $7_1 = $1960($9 + 8 | 0, 0);
   $10_1 = $11_1 + $7_1 | 0;
   $9 = i64toi32_i32$HIGH_BITS + $13 | 0;
   $9 = $7_1 >>> 0 > $10_1 >>> 0 ? $9 + 1 | 0 : $9;
   $7_1 = $9;
   $11_1 = ($13 | 0) == ($9 | 0) & $10_1 >>> 0 < $11_1 >>> 0 | $9 >>> 0 < $13 >>> 0;
   $9 = $8;
   $13 = $11_1 + $29_1 | 0;
   $8 = $13 >>> 0 < $11_1 >>> 0 ? $9 + 1 | 0 : $9;
   $11_1 = !$7_1 & $10_1 >>> 0 > 1 | ($7_1 | 0) != 0;
   $9 = $11_1 + $13 | 0;
   $8 = $11_1 >>> 0 > $9 >>> 0 ? $8 + 1 | 0 : $8;
   $1779($12_1 + 112 | 0, $4_1, $3, 0, 0, 0 - $9 | 0, 0 - ((($9 | 0) != 0) + $8 | 0) | 0, 0, 0);
   $13 = $12_1 + 128 | 0;
   $1779($13, 1 - $10_1 | 0, 0 - (($10_1 >>> 0 > 1) + $7_1 | 0) | 0, 0, 0, $4_1, $3, 0, 0);
   $34_1 = ($24 - $16_1 | 0) + $17_1 | 0;
   $3 = $1960($12_1, 112);
   $4_1 = i64toi32_i32$HIGH_BITS;
   $20_1 = $4_1;
   $7_1 = $3 << 1;
   $9 = $4_1 << 1 | $3 >>> 31;
   $11_1 = $9;
   $4_1 = $9;
   $1960($12_1, 128);
   $10_1 = i64toi32_i32$HIGH_BITS >>> 31 | 0;
   $8 = 0;
   $3 = $1960($13 + 8 | 0, 0);
   $9 = i64toi32_i32$HIGH_BITS;
   $27_1 = $9;
   $9 = $9 << 1 | $3 >>> 31;
   $10_1 = $3 << 1 | $10_1;
   $3 = $10_1 + $7_1 | 0;
   $9 = ($8 | $9) + $4_1 | 0;
   $9 = $3 >>> 0 < $10_1 >>> 0 ? $9 + 1 | 0 : $9;
   $4_1 = $9;
   $8 = $9 - 1 | 0;
   $16_1 = $3;
   $10_1 = $3 - 13927 | 0;
   $8 = $10_1 >>> 0 < 4294953369 ? $8 + 1 | 0 : $8;
   $18_1 = $8;
   $24 = $8;
   $3 = 0;
   $8 = $15_1 | 65536;
   $35_1 = $8;
   $36_1 = $14;
   $9 = $14;
   $8 = $8 << 1 | $9 >>> 31;
   $38_1 = $9 << 1;
   $39_1 = $8;
   $28_1 = $8;
   $3 = __wasm_i64_mul($18_1, $3, $8, 0);
   $8 = i64toi32_i32$HIGH_BITS;
   $23_1 = $3;
   $21_1 = $8;
   $31_1 = $1_1 << 1;
   $9 = $2_1 << 1 | $1_1 >>> 31;
   $17_1 = $9;
   $8 = 0;
   $29_1 = $8;
   $13 = $8;
   $3 = $1960($12_1 + 120 | 0, 0);
   $8 = i64toi32_i32$HIGH_BITS << 1 | $3 >>> 31;
   $3 = $3 << 1 | $20_1 >>> 31;
   $20_1 = $27_1 >>> 31 | 0;
   $3 = $3 + $20_1 | 0;
   $9 = $8;
   $9 = $3 >>> 0 < $20_1 >>> 0 ? $9 + 1 | 0 : $9;
   $7_1 = ($4_1 | 0) == ($11_1 | 0) & $7_1 >>> 0 > $16_1 >>> 0 | $4_1 >>> 0 < $11_1 >>> 0;
   $8 = $7_1;
   $7_1 = $3 + $7_1 | 0;
   $9 = $8 >>> 0 > $7_1 >>> 0 ? $9 + 1 | 0 : $9;
   $3 = ($4_1 | 0) == ($18_1 | 0) & $10_1 >>> 0 < $16_1 >>> 0 | $4_1 >>> 0 > $18_1 >>> 0;
   $4_1 = $3;
   $3 = $3 + $7_1 | 0;
   $9 = ($4_1 >>> 0 > $3 >>> 0 ? $9 + 1 | 0 : $9) - 1 | 0;
   $4_1 = $3 - 1 | 0;
   $30 = ($4_1 | 0) != -1 ? $9 + 1 | 0 : $9;
   $18_1 = 0;
   $7_1 = __wasm_i64_mul($17_1, $13, $30, $18_1);
   $3 = $7_1 + $23_1 | 0;
   $9 = i64toi32_i32$HIGH_BITS + $21_1 | 0;
   $16_1 = $3;
   $9 = $3 >>> 0 < $7_1 >>> 0 ? $9 + 1 | 0 : $9;
   $8 = $9;
   $27_1 = ($21_1 | 0) == ($9 | 0) & $3 >>> 0 < $23_1 >>> 0 | $9 >>> 0 < $21_1 >>> 0;
   $9 = 0;
   $20_1 = $4_1;
   $37 = $2_1 >>> 31 | 0;
   $23_1 = $37 | $14 << 1;
   $21_1 = 0;
   $9 = __wasm_i64_mul($4_1, $9, $23_1, $21_1);
   $4_1 = $9 + $3 | 0;
   $3 = i64toi32_i32$HIGH_BITS + $8 | 0;
   $3 = $4_1 >>> 0 < $9 >>> 0 ? $3 + 1 | 0 : $3;
   $11_1 = $4_1;
   $9 = 0;
   $7_1 = $3;
   $3 = ($8 | 0) == ($3 | 0) & $4_1 >>> 0 < $16_1 >>> 0 | $3 >>> 0 < $8 >>> 0;
   $4_1 = $3;
   $3 = $3 + $27_1 | 0;
   $9 = $4_1 >>> 0 > $3 >>> 0 ? 1 : $9;
   $4_1 = __wasm_i64_mul($30, $18_1, $28_1, $13);
   $3 = $4_1 + $3 | 0;
   $8 = i64toi32_i32$HIGH_BITS + $9 | 0;
   $16_1 = $3;
   $14 = $3 >>> 0 < $4_1 >>> 0 ? $8 + 1 | 0 : $8;
   $3 = __wasm_i64_mul($20_1, $21_1, $28_1, $13);
   $15_1 = i64toi32_i32$HIGH_BITS;
   $9 = $3;
   $4_1 = __wasm_i64_mul($23_1, $21_1, $30, $18_1);
   $8 = $9 + $4_1 | 0;
   $3 = i64toi32_i32$HIGH_BITS + $15_1 | 0;
   $3 = $4_1 >>> 0 > $8 >>> 0 ? $3 + 1 | 0 : $3;
   $4_1 = $3;
   $3 = ($15_1 | 0) == ($3 | 0) & $8 >>> 0 < $9 >>> 0 | $3 >>> 0 < $15_1 >>> 0;
   $15_1 = $16_1 + $4_1 | 0;
   $9 = $3 + $14 | 0;
   $3 = $15_1 >>> 0 < $4_1 >>> 0 ? $9 + 1 | 0 : $9;
   $4_1 = 0;
   $14 = $4_1 + $11_1 | 0;
   $9 = $7_1 + $8 | 0;
   $9 = $4_1 >>> 0 > $14 >>> 0 ? $9 + 1 | 0 : $9;
   $4_1 = $9;
   $7_1 = ($7_1 | 0) == ($9 | 0) & $11_1 >>> 0 > $14 >>> 0 | $7_1 >>> 0 > $9 >>> 0;
   $8 = $7_1;
   $7_1 = $7_1 + $15_1 | 0;
   $3 = $8 >>> 0 > $7_1 >>> 0 ? $3 + 1 | 0 : $3;
   $16_1 = $7_1;
   $27_1 = $10_1;
   $7_1 = __wasm_i64_mul($10_1, 0, $23_1, $21_1);
   $11_1 = i64toi32_i32$HIGH_BITS;
   $9 = $7_1;
   $10_1 = __wasm_i64_mul($24, $13, $17_1, $13);
   $7_1 = $9 + $10_1 | 0;
   $8 = i64toi32_i32$HIGH_BITS + $11_1 | 0;
   $8 = $7_1 >>> 0 < $10_1 >>> 0 ? $8 + 1 | 0 : $8;
   $10_1 = $7_1;
   $15_1 = ($8 | 0) == ($11_1 | 0) & $7_1 >>> 0 < $9 >>> 0 | $8 >>> 0 < $11_1 >>> 0;
   $32_1 = $31_1 & -2;
   $7_1 = __wasm_i64_mul($20_1, $21_1, $32_1, 0);
   $11_1 = $10_1 + $7_1 | 0;
   $9 = i64toi32_i32$HIGH_BITS + $8 | 0;
   $9 = $7_1 >>> 0 > $11_1 >>> 0 ? $9 + 1 | 0 : $9;
   $7_1 = $9;
   $8 = ($8 | 0) == ($9 | 0) & $10_1 >>> 0 > $11_1 >>> 0 | $8 >>> 0 > $9 >>> 0;
   $9 = 0;
   $10_1 = $8;
   $8 = $8 + $15_1 | 0;
   $9 = ($10_1 >>> 0 > $8 >>> 0 ? 1 : $9) + $4_1 | 0;
   $15_1 = $8 + $14 | 0;
   $9 = $15_1 >>> 0 < $8 >>> 0 ? $9 + 1 | 0 : $9;
   $8 = $9;
   $4_1 = ($4_1 | 0) == ($9 | 0) & $14 >>> 0 > $15_1 >>> 0 | $4_1 >>> 0 > $9 >>> 0;
   $9 = $3;
   $3 = $4_1 + $16_1 | 0;
   $9 = $3 >>> 0 < $4_1 >>> 0 ? $9 + 1 | 0 : $9;
   $40_1 = $3;
   $16_1 = $9;
   $3 = __wasm_i64_mul($27_1, $22_1, $28_1, $13);
   $33_1 = i64toi32_i32$HIGH_BITS;
   $28_1 = $3;
   $9 = __wasm_i64_mul($32_1, $22_1, $30, $18_1);
   $4_1 = $3 + $9 | 0;
   $3 = i64toi32_i32$HIGH_BITS + $33_1 | 0;
   $3 = $4_1 >>> 0 < $9 >>> 0 ? $3 + 1 | 0 : $3;
   $18_1 = $4_1;
   $14 = __wasm_i64_mul($24, $13, $23_1, $21_1);
   $4_1 = $4_1 + $14 | 0;
   $10_1 = $3;
   $9 = $3 + i64toi32_i32$HIGH_BITS | 0;
   $9 = $4_1 >>> 0 < $14 >>> 0 ? $9 + 1 | 0 : $9;
   $23_1 = $4_1;
   $3 = __wasm_i64_mul($20_1, $21_1, $17_1, $13);
   $14 = $4_1 + $3 | 0;
   $13 = $9;
   $9 = $9 + i64toi32_i32$HIGH_BITS | 0;
   $9 = $3 >>> 0 > $14 >>> 0 ? $9 + 1 | 0 : $9;
   $4_1 = $9;
   $20_1 = 0;
   $3 = ($10_1 | 0) == ($13 | 0) & $18_1 >>> 0 > $23_1 >>> 0 | $10_1 >>> 0 > $13 >>> 0;
   $10_1 = $3 + (($10_1 | 0) == ($33_1 | 0) & $18_1 >>> 0 < $28_1 >>> 0 | $10_1 >>> 0 < $33_1 >>> 0) | 0;
   $3 = ($4_1 | 0) == ($13 | 0) & $14 >>> 0 < $23_1 >>> 0 | $4_1 >>> 0 < $13 >>> 0;
   $3 = $3 + $10_1 | 0;
   $13 = $4_1 + $15_1 | 0;
   $9 = ($3 | $20_1) + $8 | 0;
   $9 = $4_1 >>> 0 > $13 >>> 0 ? $9 + 1 | 0 : $9;
   $10_1 = $9;
   $3 = ($8 | 0) == ($9 | 0) & $13 >>> 0 < $15_1 >>> 0 | $8 >>> 0 > $9 >>> 0;
   $9 = $16_1;
   $4_1 = $3;
   $3 = $3 + $40_1 | 0;
   $9 = $4_1 >>> 0 > $3 >>> 0 ? $9 + 1 | 0 : $9;
   $20_1 = $3;
   $15_1 = $9;
   $3 = __wasm_i64_mul($24, $29_1, $32_1, $22_1);
   $18_1 = i64toi32_i32$HIGH_BITS;
   $16_1 = $3;
   $8 = __wasm_i64_mul($27_1, $22_1, $17_1, $29_1);
   $3 = $3 + $8 | 0;
   $9 = i64toi32_i32$HIGH_BITS + $18_1 | 0;
   $9 = $3 >>> 0 < $8 >>> 0 ? $9 + 1 | 0 : $9;
   $24 = 0;
   $8 = ($9 | 0) == ($18_1 | 0) & $3 >>> 0 < $16_1 >>> 0 | $9 >>> 0 < $18_1 >>> 0;
   $16_1 = $9;
   $3 = $9 + $11_1 | 0;
   $9 = ($8 | $24) + $7_1 | 0;
   $9 = $3 >>> 0 < $16_1 >>> 0 ? $9 + 1 | 0 : $9;
   $8 = $9;
   $11_1 = ($7_1 | 0) == ($9 | 0) & $3 >>> 0 < $11_1 >>> 0 | $7_1 >>> 0 > $9 >>> 0;
   $9 = $14;
   $14 = 0;
   $4_1 = $14 + $3 | 0;
   $9 = $8 + $9 | 0;
   $9 = $4_1 >>> 0 < $14 >>> 0 ? $9 + 1 | 0 : $9;
   $3 = ($8 | 0) == ($9 | 0) & $3 >>> 0 > $4_1 >>> 0 | $8 >>> 0 > $9 >>> 0;
   $9 = 0;
   $4_1 = $3;
   $3 = $3 + $11_1 | 0;
   $9 = ($4_1 >>> 0 > $3 >>> 0 ? 1 : $9) + $10_1 | 0;
   $4_1 = $3;
   $3 = $3 + $13 | 0;
   $9 = $4_1 >>> 0 > $3 >>> 0 ? $9 + 1 | 0 : $9;
   $4_1 = $9;
   $7_1 = ($10_1 | 0) == ($9 | 0) & $3 >>> 0 < $13 >>> 0 | $9 >>> 0 < $10_1 >>> 0;
   $9 = $15_1;
   $8 = $7_1;
   $7_1 = $7_1 + $20_1 | 0;
   $9 = $8 >>> 0 > $7_1 >>> 0 ? $9 + 1 | 0 : $9;
   $8 = $9;
   label$12 : {
    if ($9 >>> 0 <= 131071) {
     $36_1 = $38_1 | $37;
     $35_1 = $21_1 | $39_1;
     $2_1 = $12_1 + 80 | 0;
     $1779($2_1, $3, $4_1, $7_1, $8, $5_1, $6_1, $26_1, $25_1);
     $9 = $1_1 << 17;
     $1_1 = 0;
     $10_1 = $1960($2_1 + 8 | 0, 0);
     $2_1 = $1_1 - $10_1 | 0;
     $10_1 = $9 - (i64toi32_i32$HIGH_BITS + ($1_1 >>> 0 < $10_1 >>> 0) | 0) | 0;
     $1_1 = $1960($12_1, 80);
     $9 = i64toi32_i32$HIGH_BITS;
     $11_1 = $9;
     $9 = ($1_1 | $9) != 0;
     $14 = $2_1 - $9 | 0;
     $15_1 = $10_1 - ($2_1 >>> 0 < $9 >>> 0) | 0;
     $13 = $34_1 + 16382 | 0;
     $11_1 = 0 - ((($1_1 | 0) != 0) + $11_1 | 0) | 0;
     $10_1 = 0 - $1_1 | 0;
     break label$12;
    }
    $9 = $12_1 + 96 | 0;
    $3 = ($4_1 & 1) << 31 | $3 >>> 1;
    $4_1 = $7_1 << 31 | $4_1 >>> 1;
    $7_1 = ($8 & 1) << 31 | $7_1 >>> 1;
    $8 = $8 >>> 1 | 0;
    $1779($9, $3, $4_1, $7_1, $8, $5_1, $6_1, $26_1, $25_1);
    $11_1 = $1960($9 + 8 | 0, 0);
    $10_1 = 0 - $11_1 | 0;
    $15_1 = ($1_1 << 16) - (i64toi32_i32$HIGH_BITS + ($11_1 >>> 0 > $14 >>> 0) | 0) | 0;
    $9 = $1960($12_1, 96);
    $14 = i64toi32_i32$HIGH_BITS;
    $17_1 = $14;
    $11_1 = ($9 | $14) != 0;
    $14 = $10_1 - $11_1 | 0;
    $15_1 = $15_1 - ($10_1 >>> 0 < $11_1 >>> 0) | 0;
    $13 = $34_1 + 16383 | 0;
    $11_1 = 0 - ((($9 | 0) != 0) + $17_1 | 0) | 0;
    $31_1 = $1_1;
    $17_1 = $2_1;
    $10_1 = 0 - $9 | 0;
   }
   if (($13 | 0) >= 32767) {
    $19 = $19 | 2147418112;
    $1_1 = 0;
    $2_1 = 0;
    break label$1;
   }
   label$15 : {
    if (($13 | 0) > 0) {
     $1_1 = $15_1 << 1 | $14 >>> 31;
     $14 = $14 << 1 | $11_1 >>> 31;
     $15_1 = $1_1;
     $1_1 = $7_1;
     $17_1 = $8 & 65535 | $13 << 16;
     $8 = $11_1 << 1 | $10_1 >>> 31;
     $7_1 = $10_1 << 1;
     break label$15;
    }
    if (($13 | 0) <= -113) {
     $1_1 = 0;
     $2_1 = 0;
     break label$1;
    }
    $1_1 = $12_1 - -64 | 0;
    $1777($1_1, $3, $4_1, $7_1, $8, 1 - $13 | 0);
    $2_1 = $12_1 + 48 | 0;
    $1767($2_1, $31_1, $17_1, $36_1, $35_1, $13 + 112 | 0);
    $8 = $12_1 + 32 | 0;
    $3 = $1960($12_1, 64);
    $4_1 = i64toi32_i32$HIGH_BITS;
    $1_1 = $1960($1_1 + 8 | 0, 0);
    $17_1 = i64toi32_i32$HIGH_BITS;
    $1779($8, $5_1, $6_1, $26_1, $25_1, $3, $4_1, $1_1, $17_1);
    $7_1 = $1960($2_1 + 8 | 0, 0);
    $14 = i64toi32_i32$HIGH_BITS;
    $2_1 = $1960($8 + 8 | 0, 0);
    $11_1 = $2_1 << 1;
    $8 = i64toi32_i32$HIGH_BITS << 1 | $2_1 >>> 31;
    $2_1 = $1960($12_1, 32);
    $10_1 = i64toi32_i32$HIGH_BITS;
    $15_1 = $10_1 >>> 31 | $11_1;
    $11_1 = $7_1 - $15_1 | 0;
    $15_1 = $14 - (($7_1 >>> 0 < $15_1 >>> 0) + $8 | 0) | 0;
    $9 = $1960($12_1, 48);
    $7_1 = i64toi32_i32$HIGH_BITS;
    $13 = $7_1;
    $8 = $10_1 << 1 | $2_1 >>> 31;
    $2_1 = $2_1 << 1;
    $10_1 = $2_1 >>> 0 > $9 >>> 0;
    $7_1 = $10_1 & ($7_1 | 0) == ($8 | 0) | $7_1 >>> 0 < $8 >>> 0;
    $14 = $11_1 - $7_1 | 0;
    $15_1 = $15_1 - ($7_1 >>> 0 > $11_1 >>> 0) | 0;
    $8 = $13 - ($8 + $10_1 | 0) | 0;
    $7_1 = $9 - $2_1 | 0;
   }
   $1779($12_1 + 16 | 0, $5_1, $6_1, $26_1, $25_1, 3, 0, 0, 0);
   $1779($12_1, $5_1, $6_1, $26_1, $25_1, 5, 0, 0, 0);
   $11_1 = $1_1;
   $2_1 = $17_1;
   $9 = 0;
   $8 = $8 + $9 | 0;
   $10_1 = $3 & 1;
   $1_1 = $7_1 + $10_1 | 0;
   $8 = $1_1 >>> 0 < $7_1 >>> 0 ? $8 + 1 | 0 : $8;
   $7_1 = $1_1;
   $17_1 = ($6_1 | 0) == ($8 | 0) & $5_1 >>> 0 < $7_1 >>> 0 | $6_1 >>> 0 < $8 >>> 0;
   $1_1 = ($8 | 0) == ($9 | 0) & $7_1 >>> 0 < $10_1 >>> 0 | $8 >>> 0 < $9 >>> 0;
   $9 = $15_1;
   $6_1 = $1_1 + $14 | 0;
   $9 = $6_1 >>> 0 < $1_1 >>> 0 ? $9 + 1 | 0 : $9;
   $5_1 = $9;
   $1_1 = ($6_1 | 0) == ($26_1 | 0) & ($9 | 0) == ($25_1 | 0) ? $17_1 : ($25_1 | 0) == ($9 | 0) & $6_1 >>> 0 > $26_1 >>> 0 | $9 >>> 0 > $25_1 >>> 0;
   $9 = $4_1;
   $10_1 = $1_1 + $3 | 0;
   $9 = $10_1 >>> 0 < $1_1 >>> 0 ? $9 + 1 | 0 : $9;
   $1_1 = $9;
   $3 = ($4_1 | 0) == ($9 | 0) & $3 >>> 0 > $10_1 >>> 0 | $4_1 >>> 0 > $9 >>> 0;
   $9 = $2_1;
   $2_1 = $3 + $11_1 | 0;
   $9 = $2_1 >>> 0 < $3 >>> 0 ? $9 + 1 | 0 : $9;
   $3 = $1960($12_1, 16);
   $4_1 = i64toi32_i32$HIGH_BITS;
   $4_1 = ($4_1 | 0) == ($8 | 0) & $3 >>> 0 < $7_1 >>> 0 | $4_1 >>> 0 < $8 >>> 0;
   $3 = $1960($12_1 + 24 | 0, 0);
   $16_1 = $4_1;
   $4_1 = i64toi32_i32$HIGH_BITS;
   $4_1 = $9 >>> 0 < 2147418112 & (($3 | 0) == ($6_1 | 0) & ($4_1 | 0) == ($5_1 | 0) ? $16_1 : ($4_1 | 0) == ($5_1 | 0) & $3 >>> 0 < $6_1 >>> 0 | $4_1 >>> 0 < $5_1 >>> 0);
   $3 = $1_1;
   $14 = $4_1 + $10_1 | 0;
   $3 = $14 >>> 0 < $4_1 >>> 0 ? $3 + 1 | 0 : $3;
   $1_1 = ($1_1 | 0) == ($3 | 0) & $10_1 >>> 0 > $14 >>> 0 | $1_1 >>> 0 > $3 >>> 0;
   $4_1 = $1_1;
   $1_1 = $1_1 + $2_1 | 0;
   $9 = $4_1 >>> 0 > $1_1 >>> 0 ? $9 + 1 | 0 : $9;
   $10_1 = $1_1;
   $4_1 = $9;
   $1_1 = $1960($12_1, 0);
   $2_1 = i64toi32_i32$HIGH_BITS;
   $2_1 = ($2_1 | 0) == ($8 | 0) & $1_1 >>> 0 < $7_1 >>> 0 | $2_1 >>> 0 < $8 >>> 0;
   $1_1 = $1960($12_1 + 8 | 0, 0);
   $7_1 = $2_1;
   $2_1 = i64toi32_i32$HIGH_BITS;
   $1_1 = $9 >>> 0 < 2147418112 & (($1_1 | 0) == ($6_1 | 0) & ($2_1 | 0) == ($5_1 | 0) ? $7_1 : ($2_1 | 0) == ($5_1 | 0) & $1_1 >>> 0 < $6_1 >>> 0 | $2_1 >>> 0 < $5_1 >>> 0);
   $9 = $3;
   $2_1 = $1_1;
   $1_1 = $1_1 + $14 | 0;
   $9 = $2_1 >>> 0 > $1_1 >>> 0 ? $9 + 1 | 0 : $9;
   $2_1 = $9;
   $5_1 = ($3 | 0) == ($9 | 0) & $1_1 >>> 0 < $14 >>> 0 | $3 >>> 0 > $9 >>> 0;
   $3 = $4_1;
   $4_1 = $5_1 + $10_1 | 0;
   $3 = $4_1 >>> 0 < $5_1 >>> 0 ? $3 + 1 | 0 : $3;
   $22_1 = $4_1 | $22_1;
   $19 = $3 | $19;
  }
  $1983($0_1, 0, $1_1, $2_1);
  $1983($0_1, 8, $22_1, $19);
  global$0 = $12_1 + 336 | 0;
 }
 
 function $1771($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  wasm2js_scratch_store_f64(+$1_1);
  $6_1 = wasm2js_scratch_load_i32(1) | 0;
  $3 = wasm2js_scratch_load_i32(0) | 0;
  $2_1 = $6_1 & 2147483647;
  label$1 : {
   if ($2_1 + -1048576 >>> 0 <= 2145386495) {
    $5_1 = $3 << 28;
    $8 = $2_1 >>> 4 | 0;
    $2_1 = ($2_1 & 15) << 28 | $3 >>> 4;
    $3 = $8 + 1006632960 | 0;
    break label$1;
   }
   if ($2_1 >>> 0 >= 2146435072) {
    $5_1 = $3 << 28;
    $2_1 = ($6_1 & 15) << 28 | $3 >>> 4;
    $3 = $6_1 >>> 4 | 2147418112;
    break label$1;
   }
   if (!($2_1 | $3)) {
    $2_1 = 0;
    $3 = 0;
    break label$1;
   }
   $7_1 = $2_1;
   $2_1 = $2_1 ? Math_clz32($2_1) : Math_clz32($3) + 32 | 0;
   $1767($4_1, $3, $7_1, 0, 0, $2_1 + 49 | 0);
   $5_1 = 15372 - $2_1 << 16;
   $2_1 = $1960($4_1 + 8 | 0, 0);
   $3 = $5_1 | i64toi32_i32$HIGH_BITS ^ 65536;
   $7_1 = $1960($4_1, 0);
   $5_1 = i64toi32_i32$HIGH_BITS;
  }
  $1983($0_1, 0, $7_1, $5_1);
  $1983($0_1, 8, $2_1, $6_1 & -2147483648 | $3);
  global$0 = $4_1 + 16 | 0;
 }
 
 function $1773($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  label$1 : {
   if (!$1_1) {
    $1_1 = 0;
    $2_1 = 0;
    break label$1;
   }
   $2_1 = $1_1 >> 31;
   $4_1 = ($2_1 ^ $1_1) - $2_1 | 0;
   $2_1 = Math_clz32($4_1);
   $1767($3, $4_1, 0, 0, 0, $2_1 + 81 | 0);
   $4_1 = $1960($3 + 8 | 0, 0) + 0 | 0;
   $2_1 = (i64toi32_i32$HIGH_BITS ^ 65536) + (16414 - $2_1 << 16) | 0;
   $2_1 = $4_1 >>> 0 < $5_1 >>> 0 ? $2_1 + 1 | 0 : $2_1;
   $5_1 = $1_1 & -2147483648 | $2_1;
   $1_1 = $1960($3, 0);
   $2_1 = i64toi32_i32$HIGH_BITS;
  }
  $1983($0_1, 0, $1_1, $2_1);
  $1983($0_1, 8, $4_1, $5_1);
  global$0 = $3 + 16 | 0;
 }
 
 function $1774($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  label$1 : {
   if (!$1_1) {
    $1_1 = 0;
    $3 = 0;
    break label$1;
   }
   $4_1 = $1_1;
   $1_1 = Math_clz32($1_1);
   $1767($2_1, $4_1, 0, 0, 0, $1_1 + 81 | 0);
   $5_1 = $1960($2_1 + 8 | 0, 0) + 0 | 0;
   $1_1 = (i64toi32_i32$HIGH_BITS ^ 65536) + (16414 - $1_1 << 16) | 0;
   $4_1 = $5_1 >>> 0 < $3 >>> 0 ? $1_1 + 1 | 0 : $1_1;
   $1_1 = $1960($2_1, 0);
   $3 = i64toi32_i32$HIGH_BITS;
  }
  $1983($0_1, 0, $1_1, $3);
  $1983($0_1, 8, $5_1, $4_1);
  global$0 = $2_1 + 16 | 0;
 }
 
 function $1777($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  var $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  label$1 : {
   if ($5_1 & 64) {
    $2_1 = $5_1 + -64 | 0;
    $1_1 = $2_1 & 31;
    if (($2_1 & 63) >>> 0 >= 32) {
     $2_1 = 0;
     $1_1 = $4_1 >>> $1_1 | 0;
    } else {
     $2_1 = $4_1 >>> $1_1 | 0;
     $1_1 = ((1 << $1_1) - 1 & $4_1) << 32 - $1_1 | $3 >>> $1_1;
    }
    $3 = 0;
    $4_1 = 0;
    break label$1;
   }
   if (!$5_1) {
    break label$1
   }
   $8 = $3;
   $7_1 = 64 - $5_1 | 0;
   $6_1 = $7_1 & 31;
   if (($7_1 & 63) >>> 0 >= 32) {
    $7_1 = $8 << $6_1;
    $9 = 0;
   } else {
    $7_1 = (1 << $6_1) - 1 & $8 >>> 32 - $6_1 | $4_1 << $6_1;
    $9 = $8 << $6_1;
   }
   $8 = $1_1;
   $1_1 = $5_1 & 31;
   if (($5_1 & 63) >>> 0 >= 32) {
    $6_1 = 0;
    $1_1 = $2_1 >>> $1_1 | 0;
   } else {
    $6_1 = $2_1 >>> $1_1 | 0;
    $1_1 = ((1 << $1_1) - 1 & $2_1) << 32 - $1_1 | $8 >>> $1_1;
   }
   $1_1 = $9 | $1_1;
   $2_1 = $6_1 | $7_1;
   $6_1 = $3;
   $3 = $5_1 & 31;
   if (($5_1 & 63) >>> 0 >= 32) {
    $7_1 = 0;
    $3 = $4_1 >>> $3 | 0;
   } else {
    $7_1 = $4_1 >>> $3 | 0;
    $3 = ((1 << $3) - 1 & $4_1) << 32 - $3 | $6_1 >>> $3;
   }
   $4_1 = $7_1;
  }
  $1983($0_1, 0, $1_1, $2_1);
  $1983($0_1, 8, $3, $4_1);
 }
 
 function $1778($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  var $9 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13 = 0, $14 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19 = 0, $20_1 = 0, $21_1 = 0, $22_1 = 0, $23_1 = 0, $24 = 0, $25_1 = 0, $26_1 = 0, $27_1 = 0, $28_1 = 0, $29_1 = 0, $30 = 0, $31_1 = 0, $32_1 = 0, $33_1 = 0, $34_1 = 0, $35_1 = 0, $36_1 = 0, $37 = 0, $38_1 = 0, $39_1 = 0, $40_1 = 0, $41_1 = 0, $42_1 = 0, $43_1 = 0;
  $12_1 = global$0 - 96 | 0;
  global$0 = $12_1;
  $14 = $8 & 65535;
  $13 = ($4_1 ^ $8) & -2147483648;
  $15_1 = $4_1 & 65535;
  $26_1 = $15_1;
  $42_1 = $8 >>> 16 & 32767;
  $43_1 = $4_1 >>> 16 & 32767;
  label$1 : {
   label$2 : {
    if ($43_1 - 32767 >>> 0 >= 4294934530) {
     if ($42_1 - 32767 >>> 0 > 4294934529) {
      break label$2
     }
    }
    $10_1 = $4_1 & 2147483647;
    $16_1 = $10_1;
    $9 = $3;
    if (!(!$9 & ($10_1 | 0) == 2147418112 ? !($1_1 | $2_1) : $10_1 >>> 0 < 2147418112)) {
     $17_1 = $3;
     $13 = $4_1 | 32768;
     break label$1;
    }
    $10_1 = $8 & 2147483647;
    $19 = $10_1;
    $4_1 = $7_1;
    if (!(!$4_1 & ($10_1 | 0) == 2147418112 ? !($5_1 | $6_1) : $10_1 >>> 0 < 2147418112)) {
     $17_1 = $7_1;
     $13 = $8 | 32768;
     $1_1 = $5_1;
     $2_1 = $6_1;
     break label$1;
    }
    if (!($1_1 | $9 | ($16_1 ^ 2147418112 | $2_1))) {
     if (!($4_1 | $5_1 | ($6_1 | $19))) {
      $13 = 2147450880;
      $1_1 = 0;
      $2_1 = 0;
      break label$1;
     }
     $13 = $13 | 2147418112;
     $1_1 = 0;
     $2_1 = 0;
     break label$1;
    }
    if (!($4_1 | $5_1 | ($19 ^ 2147418112 | $6_1))) {
     $4_1 = $1_1 | $9;
     $3 = $2_1 | $16_1;
     $1_1 = 0;
     $2_1 = 0;
     if (!($3 | $4_1)) {
      $13 = 2147450880;
      break label$1;
     }
     $13 = $13 | 2147418112;
     break label$1;
    }
    if (!($1_1 | $9 | ($2_1 | $16_1))) {
     $1_1 = 0;
     $2_1 = 0;
     break label$1;
    }
    if (!($4_1 | $5_1 | ($6_1 | $19))) {
     $1_1 = 0;
     $2_1 = 0;
     break label$1;
    }
    if ($16_1 >>> 0 <= 65535) {
     $9 = !($3 | $15_1);
     $8 = $9 ? $1_1 : $3;
     $10_1 = $9 << 6;
     $4_1 = Math_clz32($8) + 32 | 0;
     $8 = Math_clz32($9 ? $2_1 : $15_1);
     $8 = $10_1 + (($8 | 0) == 32 ? $4_1 : $8) | 0;
     $1767($12_1 + 80 | 0, $1_1, $2_1, $3, $15_1, $8 - 15 | 0);
     $36_1 = 16 - $8 | 0;
     $3 = $1960($12_1 + 88 | 0, 0);
     $26_1 = i64toi32_i32$HIGH_BITS;
     $1_1 = $1960($12_1, 80);
     $2_1 = i64toi32_i32$HIGH_BITS;
    }
    if ($19 >>> 0 > 65535) {
     break label$2
    }
    $8 = !($7_1 | $14);
    $4_1 = $8 ? $5_1 : $7_1;
    $15_1 = $8 << 6;
    $9 = Math_clz32($4_1) + 32 | 0;
    $4_1 = Math_clz32($8 ? $6_1 : $14);
    $4_1 = $15_1 + (($4_1 | 0) == 32 ? $9 : $4_1) | 0;
    $1767($12_1 - -64 | 0, $5_1, $6_1, $7_1, $14, $4_1 - 15 | 0);
    $36_1 = ($36_1 - $4_1 | 0) + 16 | 0;
    $7_1 = $1960($12_1 + 72 | 0, 0);
    $14 = i64toi32_i32$HIGH_BITS;
    $5_1 = $1960($12_1, 64);
    $6_1 = i64toi32_i32$HIGH_BITS;
   }
   $4_1 = $6_1 << 15 | $5_1 >>> 17;
   $8 = $5_1 << 15;
   $5_1 = 0;
   $20_1 = $8 & -32768;
   $37 = $2_1;
   $19 = __wasm_i64_mul($20_1, $5_1, $2_1, 0);
   $5_1 = i64toi32_i32$HIGH_BITS;
   $25_1 = $5_1;
   $38_1 = $4_1;
   $23_1 = $1_1;
   $1_1 = __wasm_i64_mul($4_1, 0, $1_1, 0);
   $8 = $1_1 + $19 | 0;
   $5_1 = i64toi32_i32$HIGH_BITS + $5_1 | 0;
   $5_1 = $1_1 >>> 0 > $8 >>> 0 ? $5_1 + 1 | 0 : $5_1;
   $2_1 = 0;
   $1_1 = __wasm_i64_mul($20_1, $21_1, $23_1, $21_1);
   $16_1 = $2_1 + $1_1 | 0;
   $4_1 = $8;
   $9 = $4_1 + i64toi32_i32$HIGH_BITS | 0;
   $9 = $1_1 >>> 0 > $16_1 >>> 0 ? $9 + 1 | 0 : $9;
   $15_1 = $9;
   $22_1 = ($4_1 | 0) == ($9 | 0) & $2_1 >>> 0 > $16_1 >>> 0 | $4_1 >>> 0 > $9 >>> 0;
   $39_1 = $3;
   $27_1 = __wasm_i64_mul($20_1, $21_1, $3, 0);
   $40_1 = i64toi32_i32$HIGH_BITS;
   $1_1 = __wasm_i64_mul($38_1, $24, $37, $24);
   $18_1 = $1_1 + $27_1 | 0;
   $9 = i64toi32_i32$HIGH_BITS + $40_1 | 0;
   $9 = $1_1 >>> 0 > $18_1 >>> 0 ? $9 + 1 | 0 : $9;
   $10_1 = $9;
   $1_1 = $14 << 15 | $7_1 >>> 17;
   $28_1 = $7_1 << 15 | $6_1 >>> 17;
   $3 = __wasm_i64_mul($28_1, 0, $23_1, $21_1);
   $29_1 = $3 + $18_1 | 0;
   $9 = i64toi32_i32$HIGH_BITS + $9 | 0;
   $9 = $3 >>> 0 > $29_1 >>> 0 ? $9 + 1 | 0 : $9;
   $30 = $9;
   $3 = $9;
   $2_1 = 0;
   $9 = ($5_1 | 0) == ($25_1 | 0) & $4_1 >>> 0 < $19 >>> 0 | $5_1 >>> 0 < $25_1 >>> 0;
   $31_1 = $5_1 + $29_1 | 0;
   $4_1 = ($2_1 | $9) + $3 | 0;
   $4_1 = $5_1 >>> 0 > $31_1 >>> 0 ? $4_1 + 1 | 0 : $4_1;
   $8 = $4_1;
   $6_1 = $31_1;
   $32_1 = $26_1 | 65536;
   $26_1 = __wasm_i64_mul($20_1, $21_1, $32_1, $11_1);
   $41_1 = i64toi32_i32$HIGH_BITS;
   $3 = __wasm_i64_mul($38_1, $24, $39_1, $11_1);
   $33_1 = $3 + $26_1 | 0;
   $9 = i64toi32_i32$HIGH_BITS + $41_1 | 0;
   $9 = $3 >>> 0 > $33_1 >>> 0 ? $9 + 1 | 0 : $9;
   $7_1 = $9;
   $34_1 = $1_1 | -2147483648;
   $1_1 = __wasm_i64_mul($34_1, 0, $23_1, $21_1);
   $20_1 = $1_1 + $33_1 | 0;
   $9 = i64toi32_i32$HIGH_BITS + $9 | 0;
   $9 = $1_1 >>> 0 > $20_1 >>> 0 ? $9 + 1 | 0 : $9;
   $1_1 = __wasm_i64_mul($28_1, $11_1, $37, $24);
   $25_1 = $1_1 + $20_1 | 0;
   $35_1 = $9;
   $5_1 = $9 + i64toi32_i32$HIGH_BITS | 0;
   $19 = $1_1 >>> 0 > $25_1 >>> 0 ? $5_1 + 1 | 0 : $5_1;
   $1_1 = 0;
   $23_1 = $1_1 + $6_1 | 0;
   $9 = $4_1 + $25_1 | 0;
   $21_1 = $1_1 >>> 0 > $23_1 >>> 0 ? $9 + 1 | 0 : $9;
   $4_1 = $21_1;
   $1_1 = $22_1 + $23_1 | 0;
   $2_1 = $1_1 >>> 0 < $23_1 >>> 0 ? $4_1 + 1 | 0 : $4_1;
   $22_1 = (($42_1 + $43_1 | 0) + $36_1 | 0) - 16383 | 0;
   $4_1 = __wasm_i64_mul($34_1, $11_1, $37, $24);
   $6_1 = i64toi32_i32$HIGH_BITS;
   $5_1 = __wasm_i64_mul($38_1, $24, $32_1, $11_1);
   $3 = $5_1 + $4_1 | 0;
   $9 = i64toi32_i32$HIGH_BITS + $6_1 | 0;
   $9 = $3 >>> 0 < $5_1 >>> 0 ? $9 + 1 | 0 : $9;
   $14 = ($6_1 | 0) == ($9 | 0) & $3 >>> 0 < $4_1 >>> 0 | $6_1 >>> 0 > $9 >>> 0;
   $6_1 = __wasm_i64_mul($28_1, $11_1, $39_1, $11_1);
   $4_1 = $6_1 + $3 | 0;
   $5_1 = i64toi32_i32$HIGH_BITS + $9 | 0;
   $5_1 = $4_1 >>> 0 < $6_1 >>> 0 ? $5_1 + 1 | 0 : $5_1;
   $6_1 = $5_1;
   $3 = ($9 | 0) == ($5_1 | 0) & $3 >>> 0 > $4_1 >>> 0 | $5_1 >>> 0 < $9 >>> 0;
   $9 = 0;
   $5_1 = $3;
   $3 = $3 + $14 | 0;
   $9 = $5_1 >>> 0 > $3 >>> 0 ? 1 : $9;
   $5_1 = $3;
   $3 = __wasm_i64_mul($34_1, $11_1, $32_1, $11_1);
   $5_1 = $5_1 + $3 | 0;
   $9 = i64toi32_i32$HIGH_BITS + $9 | 0;
   $24 = $5_1;
   $3 = $3 >>> 0 > $5_1 >>> 0 ? $9 + 1 | 0 : $9;
   $9 = ($10_1 | 0) == ($40_1 | 0) & $18_1 >>> 0 < $27_1 >>> 0 | $10_1 >>> 0 < $40_1 >>> 0;
   $5_1 = 0;
   $10_1 = ($10_1 | 0) == ($30 | 0) & $18_1 >>> 0 > $29_1 >>> 0 | $10_1 >>> 0 > $30 >>> 0;
   $14 = $10_1;
   $10_1 = $9 + $10_1 | 0;
   $9 = ($14 >>> 0 > $10_1 >>> 0 ? 1 : $5_1) + $6_1 | 0;
   $5_1 = $4_1 + $10_1 | 0;
   $9 = $5_1 >>> 0 < $10_1 >>> 0 ? $9 + 1 | 0 : $9;
   $14 = $9;
   $27_1 = $5_1;
   $4_1 = ($6_1 | 0) == ($9 | 0) & $4_1 >>> 0 > $5_1 >>> 0 | $6_1 >>> 0 > $9 >>> 0;
   $9 = $3;
   $3 = $4_1 + $24 | 0;
   $9 = $3 >>> 0 < $4_1 >>> 0 ? $9 + 1 | 0 : $9;
   $10_1 = $3;
   $5_1 = __wasm_i64_mul($28_1, $11_1, $32_1, $11_1);
   $18_1 = i64toi32_i32$HIGH_BITS;
   $3 = __wasm_i64_mul($34_1, $11_1, $39_1, $11_1);
   $6_1 = $3 + $5_1 | 0;
   $4_1 = i64toi32_i32$HIGH_BITS + $18_1 | 0;
   $4_1 = $3 >>> 0 > $6_1 >>> 0 ? $4_1 + 1 | 0 : $4_1;
   $9 = (($18_1 | 0) == ($4_1 | 0) & $5_1 >>> 0 > $6_1 >>> 0 | $4_1 >>> 0 < $18_1 >>> 0) + $9 | 0;
   $10_1 = $4_1 + $10_1 | 0;
   $18_1 = $10_1;
   $5_1 = $10_1 >>> 0 < $4_1 >>> 0 ? $9 + 1 | 0 : $9;
   $3 = 0;
   $11_1 = $3 + $27_1 | 0;
   $9 = $6_1 + $14 | 0;
   $4_1 = $5_1;
   $9 = $3 >>> 0 > $11_1 >>> 0 ? $9 + 1 | 0 : $9;
   $10_1 = $9;
   $3 = ($14 | 0) == ($9 | 0) & $11_1 >>> 0 < $27_1 >>> 0 | $9 >>> 0 < $14 >>> 0;
   $5_1 = $3;
   $3 = $3 + $18_1 | 0;
   $4_1 = $5_1 >>> 0 > $3 >>> 0 ? $4_1 + 1 | 0 : $4_1;
   $14 = $3;
   $3 = $4_1;
   $6_1 = $19;
   $4_1 = 0;
   $5_1 = ($7_1 | 0) == ($41_1 | 0) & $26_1 >>> 0 > $33_1 >>> 0 | $7_1 >>> 0 < $41_1 >>> 0;
   $7_1 = ($7_1 | 0) == ($35_1 | 0) & $20_1 >>> 0 < $33_1 >>> 0 | $7_1 >>> 0 > $35_1 >>> 0;
   $5_1 = $5_1 + $7_1 | 0;
   $7_1 = ($6_1 | 0) == ($35_1 | 0) & $20_1 >>> 0 > $25_1 >>> 0 | $6_1 >>> 0 < $35_1 >>> 0;
   $5_1 = $5_1 + $7_1 | 0;
   $7_1 = $6_1;
   $6_1 = $6_1 + $11_1 | 0;
   $4_1 = ($4_1 | $5_1) + $10_1 | 0;
   $9 = $3;
   $4_1 = $6_1 >>> 0 < $7_1 >>> 0 ? $4_1 + 1 | 0 : $4_1;
   $7_1 = $4_1;
   $4_1 = ($10_1 | 0) == ($4_1 | 0) & $6_1 >>> 0 < $11_1 >>> 0 | $4_1 >>> 0 < $10_1 >>> 0;
   $3 = $4_1 + $14 | 0;
   $9 = $4_1 >>> 0 > $3 >>> 0 ? $9 + 1 | 0 : $9;
   $11_1 = $3;
   $5_1 = $9;
   $9 = 0;
   $4_1 = ($8 | 0) == ($21_1 | 0) & $23_1 >>> 0 < $31_1 >>> 0 | $8 >>> 0 > $21_1 >>> 0;
   $3 = $4_1 + (($8 | 0) == ($30 | 0) & $29_1 >>> 0 > $31_1 >>> 0 | $8 >>> 0 < $30 >>> 0) | 0;
   $4_1 = ($4_1 >>> 0 > $3 >>> 0 ? 1 : $9) + $7_1 | 0;
   $9 = $5_1;
   $5_1 = $3;
   $3 = $3 + $6_1 | 0;
   $4_1 = $5_1 >>> 0 > $3 >>> 0 ? $4_1 + 1 | 0 : $4_1;
   $6_1 = ($7_1 | 0) == ($4_1 | 0) & $3 >>> 0 < $6_1 >>> 0 | $4_1 >>> 0 < $7_1 >>> 0;
   $7_1 = $6_1 + $11_1 | 0;
   $9 = $6_1 >>> 0 > $7_1 >>> 0 ? $9 + 1 | 0 : $9;
   $8 = $9;
   label$13 : {
    if ($9 & 65536) {
     $22_1 = $22_1 + 1 | 0;
     break label$13;
    }
    $11_1 = $15_1 >>> 31 | 0;
    $5_1 = 0;
    $9 = $8 << 1 | $7_1 >>> 31;
    $7_1 = $7_1 << 1 | $4_1 >>> 31;
    $8 = $9;
    $9 = $4_1 << 1 | $3 >>> 31;
    $3 = $3 << 1 | $2_1 >>> 31;
    $4_1 = $9;
    $9 = $15_1 << 1 | $16_1 >>> 31;
    $16_1 = $16_1 << 1;
    $15_1 = $9;
    $9 = $2_1 << 1 | $1_1 >>> 31;
    $1_1 = $1_1 << 1 | $11_1;
    $2_1 = $5_1 | $9;
   }
   if (($22_1 | 0) >= 32767) {
    $13 = $13 | 2147418112;
    $1_1 = 0;
    $2_1 = 0;
    break label$1;
   }
   label$16 : {
    if (($22_1 | 0) <= 0) {
     $6_1 = 1 - $22_1 | 0;
     if ($6_1 >>> 0 <= 127) {
      $9 = $12_1 + 48 | 0;
      $5_1 = $22_1 + 127 | 0;
      $1767($9, $16_1, $15_1, $1_1, $2_1, $5_1);
      $11_1 = $12_1 + 32 | 0;
      $1767($11_1, $3, $4_1, $7_1, $8, $5_1);
      $5_1 = $12_1 + 16 | 0;
      $1777($5_1, $16_1, $15_1, $1_1, $2_1, $6_1);
      $1777($12_1, $3, $4_1, $7_1, $8, $6_1);
      $2_1 = $1960($12_1, 32);
      $1_1 = i64toi32_i32$HIGH_BITS;
      $3 = $1960($12_1, 16) | $2_1;
      $15_1 = i64toi32_i32$HIGH_BITS | $1_1;
      $2_1 = $1960($12_1, 48);
      $1_1 = i64toi32_i32$HIGH_BITS;
      $16_1 = ($1960($9 + 8 | 0, 0) | $2_1 | (i64toi32_i32$HIGH_BITS | $1_1)) != 0 | $3;
      $1_1 = $1960($11_1 + 8 | 0, 0);
      $2_1 = i64toi32_i32$HIGH_BITS;
      $1_1 = $1960($5_1 + 8 | 0, 0) | $1_1;
      $2_1 = i64toi32_i32$HIGH_BITS | $2_1;
      $7_1 = $1960($12_1 + 8 | 0, 0);
      $8 = i64toi32_i32$HIGH_BITS;
      $3 = $1960($12_1, 0);
      $4_1 = i64toi32_i32$HIGH_BITS;
      break label$16;
     }
     $1_1 = 0;
     $2_1 = 0;
     break label$1;
    }
    $8 = $8 & 65535 | $22_1 << 16;
   }
   $17_1 = $7_1 | $17_1;
   $13 = $8 | $13;
   if (!(!$1_1 & ($2_1 | 0) == -2147483648 ? !($16_1 | $15_1) : ($2_1 | 0) >= 0)) {
    $1_1 = $3 + 1 | 0;
    $4_1 = $1_1 ? $4_1 : $4_1 + 1 | 0;
    $2_1 = $4_1;
    $3 = !($4_1 | $1_1);
    $4_1 = $13;
    $17_1 = $3 + $17_1 | 0;
    $13 = $17_1 >>> 0 < $3 >>> 0 ? $4_1 + 1 | 0 : $4_1;
    break label$1;
   }
   if ($1_1 | $16_1 | ($2_1 ^ -2147483648 | $15_1)) {
    $1_1 = $3;
    $2_1 = $4_1;
    break label$1;
   }
   $9 = $13;
   $1_1 = $3 & 1;
   $2_1 = $1_1;
   $1_1 = $1_1 + $3 | 0;
   $2_1 = $2_1 >>> 0 > $1_1 >>> 0 ? $4_1 + 1 | 0 : $4_1;
   $3 = ($4_1 | 0) == ($2_1 | 0) & $1_1 >>> 0 < $3 >>> 0 | $2_1 >>> 0 < $4_1 >>> 0;
   $17_1 = $3 + $17_1 | 0;
   $13 = $3 >>> 0 > $17_1 >>> 0 ? $9 + 1 | 0 : $9;
  }
  $1983($0_1, 0, $1_1, $2_1);
  $1983($0_1, 8, $17_1, $13);
  global$0 = $12_1 + 96 | 0;
 }
 
 function $1779($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  var $9 = 0, $10_1 = 0, $11_1 = 0;
  $8 = __wasm_i64_mul($7_1, $8, $1_1, $2_1);
  $7_1 = i64toi32_i32$HIGH_BITS;
  $3 = __wasm_i64_mul($3, $4_1, $5_1, $6_1);
  $8 = $3 + $8 | 0;
  $4_1 = i64toi32_i32$HIGH_BITS + $7_1 | 0;
  $4_1 = $3 >>> 0 > $8 >>> 0 ? $4_1 + 1 | 0 : $4_1;
  $9 = $6_1;
  $3 = 0;
  $7_1 = $8;
  $8 = $2_1;
  $6_1 = 0;
  $2_1 = __wasm_i64_mul($9, $3, $8, $6_1);
  $3 = $7_1 + $2_1 | 0;
  $7_1 = i64toi32_i32$HIGH_BITS + $4_1 | 0;
  $10_1 = $3;
  $4_1 = $2_1 >>> 0 > $3 >>> 0 ? $7_1 + 1 | 0 : $7_1;
  $2_1 = $5_1;
  $3 = $1_1;
  $5_1 = __wasm_i64_mul($2_1, 0, $3, 0);
  $1_1 = i64toi32_i32$HIGH_BITS;
  $7_1 = 0;
  $8 = __wasm_i64_mul($2_1, $7_1, $8, $6_1);
  $1_1 = $1_1 + $8 | 0;
  $2_1 = i64toi32_i32$HIGH_BITS + $7_1 | 0;
  $2_1 = $1_1 >>> 0 < $8 >>> 0 ? $2_1 + 1 | 0 : $2_1;
  $8 = $2_1 + $10_1 | 0;
  $2_1 = $2_1 >>> 0 > $8 >>> 0 ? $4_1 + 1 | 0 : $4_1;
  $4_1 = __wasm_i64_mul($9, $6_1, $3, $11_1);
  $1_1 = $4_1 + $1_1 | 0;
  $3 = i64toi32_i32$HIGH_BITS;
  $6_1 = $1_1 >>> 0 < $4_1 >>> 0 ? $3 + 1 | 0 : $3;
  $8 = $6_1 + $8 | 0;
  $1983($0_1, 8, $8, $6_1 >>> 0 > $8 >>> 0 ? $2_1 + 1 | 0 : $2_1);
  $1983($0_1, 0, $5_1, $1_1);
 }
 
 function $1780($0_1, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8) {
  var $9 = 0;
  $9 = global$0 - 16 | 0;
  global$0 = $9;
  $1766($9, $1_1, $2_1, $3, $4_1, $5_1, $6_1, $7_1, $8 ^ -2147483648);
  $1_1 = $1960($9, 0);
  $2_1 = i64toi32_i32$HIGH_BITS;
  $1983($0_1, 8, $1960($9 + 8 | 0, 0), i64toi32_i32$HIGH_BITS);
  $1983($0_1, 0, $1_1, $2_1);
  global$0 = $9 + 16 | 0;
 }
 
 function $1781($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $7_1 = global$0 - 32 | 0;
  global$0 = $7_1;
  $4_1 = $3 & 2147483647;
  $6_1 = $4_1;
  $5_1 = $4_1 - 1140785152 | 0;
  $4_1 = $4_1 - 1006698496 | 0;
  label$1 : {
   if (!(($4_1 | 0) == ($5_1 | 0) | $5_1 >>> 0 < $4_1 >>> 0)) {
    $4_1 = $2_1 << 4 | $1_1 >>> 28;
    $2_1 = $3 << 4 | $2_1 >>> 28;
    $1_1 = $1_1 & 268435455;
    if (!(!$0_1 & ($1_1 | 0) == 134217728 | $1_1 >>> 0 < 134217728)) {
     $5_1 = $2_1 + 1073741824 | 0;
     $4_1 = $4_1 + 1 | 0;
     $5_1 = $4_1 ? $5_1 : $5_1 + 1 | 0;
     break label$1;
    }
    $5_1 = $2_1 + 1073741824 | 0;
    if ($0_1 | ($1_1 | 0) != 134217728) {
     break label$1
    }
    $0_1 = $4_1 & 1;
    $4_1 = $0_1 + $4_1 | 0;
    $5_1 = $0_1 >>> 0 > $4_1 >>> 0 ? $5_1 + 1 | 0 : $5_1;
    break label$1;
   }
   if (!(!$2_1 & ($6_1 | 0) == 2147418112 ? !($0_1 | $1_1) : $6_1 >>> 0 < 2147418112)) {
    $4_1 = $2_1 << 4 | $1_1 >>> 28;
    $5_1 = ($3 << 4 | $2_1 >>> 28) & 524287 | 2146959360;
    break label$1;
   }
   $4_1 = 0;
   $5_1 = 2146435072;
   if ($6_1 >>> 0 > 1140785151) {
    break label$1
   }
   $5_1 = 0;
   $6_1 = $6_1 >>> 16 | 0;
   if ($6_1 >>> 0 < 15249) {
    break label$1
   }
   $8 = $7_1 + 16 | 0;
   $4_1 = $3 & 65535 | 65536;
   $1767($8, $0_1, $1_1, $2_1, $4_1, $6_1 - 15233 | 0);
   $1777($7_1, $0_1, $1_1, $2_1, $4_1, 15361 - $6_1 | 0);
   $2_1 = $1960($7_1, 0);
   $1_1 = i64toi32_i32$HIGH_BITS;
   $6_1 = $1_1;
   $0_1 = $1_1 >>> 28 | 0;
   $1_1 = $1960($7_1 + 8 | 0, 0);
   $4_1 = $0_1 | $1_1 << 4;
   $5_1 = i64toi32_i32$HIGH_BITS << 4 | $1_1 >>> 28;
   $0_1 = $1960($7_1, 16);
   $1_1 = i64toi32_i32$HIGH_BITS;
   $1_1 = ($1960($8 + 8 | 0, 0) | $0_1 | (i64toi32_i32$HIGH_BITS | $1_1)) != 0 | $2_1;
   $0_1 = $6_1 & 268435455;
   if (!(!$1_1 & ($0_1 | 0) == 134217728 | $0_1 >>> 0 < 134217728)) {
    $4_1 = $4_1 + 1 | 0;
    $5_1 = $4_1 ? $5_1 : $5_1 + 1 | 0;
    break label$1;
   }
   if ($1_1 | ($0_1 | 0) != 134217728) {
    break label$1
   }
   $0_1 = $4_1;
   $4_1 = $4_1 + ($4_1 & 1) | 0;
   $5_1 = $0_1 >>> 0 > $4_1 >>> 0 ? $5_1 + 1 | 0 : $5_1;
  }
  global$0 = $7_1 + 32 | 0;
  wasm2js_scratch_store_i32(0, $4_1 | 0);
  wasm2js_scratch_store_i32(1, $3 & -2147483648 | $5_1);
  return +wasm2js_scratch_load_f64();
 }
 
 function $1783($0_1) {
  var $1_1 = 0;
  $0_1 = $0_1 >>> 0 <= 1 ? 1 : $0_1;
  label$1 : {
   while (1) {
    $1_1 = $1755($0_1);
    if ($1_1) {
     break label$1
    }
    $1_1 = $1808(97640);
    if ($1_1) {
     FUNCTION_TABLE[$1_1 | 0]();
     continue;
    }
    break;
   };
   fimport$38();
   wasm2js_trap();
  }
  return $1_1;
 }
 
 function $1787($0_1) {
  $1756($0_1);
 }
 
 function $1789($0_1) {
  $1973($0_1, 0, 73024);
  return $0_1;
 }
 
 function $1795($0_1) {
  return $1937($0_1, 11) >>> 7 | 0;
 }
 
 function $1798($0_1) {
  if ($1795($0_1)) {
   return $1944($0_1, 4)
  }
  return $1937($0_1, 11) & 127;
 }
 
 function $1799($0_1) {
  if ($1795($0_1)) {
   $0_1 = ($1944($0_1, 8) & 2147483647) - 1 | 0
  } else {
   $0_1 = 10
  }
  return $0_1;
 }
 
 function $1800($0_1) {
  if ($1795($0_1)) {
   return $1808($0_1)
  }
  return $0_1;
 }
 
 function $1808($0_1) {
  return $1944($0_1, 0);
 }
 
 function $1813($0_1, $1_1) {
  $1968($0_1, 0, $1937($1_1, 0));
 }
 
 function $1815($0_1, $1_1) {
  var $2_1 = 0, $3 = 0;
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $3 = $1944($0_1, 0) >>> 0 < $1944($1_1, 0) >>> 0;
  global$0 = $2_1 + 16 | 0;
  return $3 ? $1_1 : $0_1;
 }
 
 function $1816($0_1) {
  var $1_1 = 0;
  if ($0_1 >>> 0 >= 11) {
   $1_1 = $0_1 + 16 & -16;
   $0_1 = $1_1 - 1 | 0;
   $0_1 = ($0_1 | 0) == 11 ? $1_1 : $0_1;
  } else {
   $0_1 = 10
  }
  return $0_1;
 }
 
 function $1818($0_1, $1_1, $2_1) {
  $1_1 = $1783($2_1);
  $1973($0_1, 4, $2_1);
  $1973($0_1, 0, $1_1);
 }
 
 function $1821($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;
  $5_1 = global$0 - 16 | 0;
  global$0 = $5_1;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  $4_1 = global$0 - 16 | 0;
  global$0 = $4_1;
  $1973($4_1, 12, $1_1);
  $1973($4_1, 8, $1_1 + $2_1 | 0);
  $1864($3 + 24 | 0, $4_1 + 12 | 0, $4_1 + 8 | 0);
  global$0 = $4_1 + 16 | 0;
  $4_1 = $1944($3, 24);
  $7_1 = $1944($3, 28);
  $2_1 = global$0 - 16 | 0;
  global$0 = $2_1;
  $6_1 = $7_1 - $4_1 | 0;
  if (($4_1 | 0) != ($7_1 | 0)) {
   $1603($0_1, $4_1, $6_1)
  }
  $1973($2_1, 12, $4_1 + $6_1 | 0);
  $1973($2_1, 8, $0_1 + $6_1 | 0);
  $1861($3 + 16 | 0, $2_1 + 12 | 0, $2_1 + 8 | 0);
  global$0 = $2_1 + 16 | 0;
  $1973($3, 12, $1860($1_1, $1944($3, 16)));
  $1973($3, 8, $1860($0_1, $1944($3, 20)));
  $1861($5_1 + 8 | 0, $3 + 12 | 0, $3 + 8 | 0);
  global$0 = $3 + 32 | 0;
  $1944($5_1, 12);
  global$0 = $5_1 + 16 | 0;
 }
 
 function $1823($0_1, $1_1) {
  $1973($0_1, 0, $1_1);
 }
 
 function $1824($0_1, $1_1) {
  $1973($0_1, 8, $1944($0_1, 8) & -2147483648 | $1_1 & 2147483647);
  $1973($0_1, 8, $1944($0_1, 8) | -2147483648);
 }
 
 function $1825($0_1, $1_1) {
  $1973($0_1, 4, $1_1);
 }
 
 function $1827($0_1, $1_1) {
  $1968($0_1, 11, $1937($0_1, 11) & 128 | $1_1);
  $1968($0_1, 11, $1937($0_1, 11) & 127);
 }
 
 function $1841($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $1973($3, 12, $1_1);
  if ($1_1 >>> 0 <= 2147483631) {
   label$2 : {
    if ($1799($0_1) >>> 0 >= $1_1 >>> 0) {
     break label$2
    }
    $1973($3, 8, $1798($0_1));
    $1_1 = $1816($1944($1815($3 + 12 | 0, $3 + 8 | 0), 0));
    if (($1799($0_1) | 0) == ($1_1 | 0)) {
     break label$2
    }
    $2_1 = global$0 - 16 | 0;
    global$0 = $2_1;
    $4_1 = $1799($0_1);
    $6_1 = $1798($0_1);
    $7_1 = $1_1 >>> 0 < 11;
    label$1 : {
     label$20 : {
      if ($7_1) {
       $8 = 1;
       $4_1 = $1_1 + 1 | 0;
       $1_1 = $0_1;
       $5_1 = $1808($0_1);
       break label$20;
      }
      label$4 : {
       if ($1_1 >>> 0 > $4_1 >>> 0) {
        $1818($2_1 + 8 | 0, $0_1, $1_1 + 1 | 0);
        $4_1 = $1944($2_1, 12);
        $1_1 = $1944($2_1, 8);
        break label$4;
       }
       $1818($2_1 + 8 | 0, $0_1, $1_1 + 1 | 0);
       $1_1 = $1944($2_1, 8);
       if (!$1_1) {
        break label$1
       }
       $4_1 = $1944($2_1, 12);
      }
      $8 = $1795($0_1);
      $5_1 = $1800($0_1);
     }
     $1821($1_1, $5_1, $1798($0_1) + 1 | 0);
     if ($8) {
      $1756($5_1)
     }
     label$7 : {
      if (!$7_1) {
       $1824($0_1, $4_1);
       $1825($0_1, $6_1);
       $1823($0_1, $1_1);
       break label$7;
      }
      $1827($0_1, $6_1);
     }
    }
    global$0 = $2_1 + 16 | 0;
   }
   global$0 = $3 + 16 | 0;
   return;
  }
  $774();
  wasm2js_trap();
 }
 
 function $1860($0_1, $1_1) {
  return ($1_1 - $0_1 | 0) + $0_1 | 0;
 }
 
 function $1861($0_1, $1_1, $2_1) {
  $1864($0_1, $1_1, $2_1);
 }
 
 function $1864($0_1, $1_1, $2_1) {
  $1973($0_1, 0, $1944($1_1, 0));
  $1973($0_1, 4, $1944($2_1, 0));
 }
 
 function $1877($0_1) {
  return $1755($0_1 + 80 | 0) + 80 | 0;
 }
 
 function $1888($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  return $1889($0_1, $1_1, 0) | 0;
 }
 
 function $1889($0_1, $1_1, $2_1) {
  if (!$2_1) {
   return ($1944($0_1, 4) | 0) == ($1944($1_1, 4) | 0)
  }
  if (($0_1 | 0) == ($1_1 | 0)) {
   return 1
  }
  return !$1695($1890($0_1), $1890($1_1));
 }
 
 function $1890($0_1) {
  return $1944($0_1, 4);
 }
 
 function $1891($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0;
  $3 = global$0 + -64 | 0;
  global$0 = $3;
  $4_1 = 1;
  label$1 : {
   if ($1889($0_1, $1_1, 0)) {
    break label$1
   }
   $4_1 = 0;
   if (!$1_1) {
    break label$1
   }
   $1_1 = $1892($1_1, 72304);
   $4_1 = 0;
   if (!$1_1) {
    break label$1
   }
   $1604($3 + 12 | 0, 0, 52);
   $1973($3, 56, 1);
   $1973($3, 20, -1);
   $1973($3, 16, $0_1);
   $1973($3, 8, $1_1);
   ((((wasm2js_i32$1 = $1_1, wasm2js_i32$2 = $3 + 8 | 0), wasm2js_i32$3 = $1944($2_1, 0)), wasm2js_i32$4 = 1), wasm2js_i32$0 = $1944($1944($1_1, 0), 28) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0, wasm2js_i32$3 | 0, wasm2js_i32$4 | 0);
   $0_1 = $1944($3, 32);
   if (($0_1 | 0) == 1) {
    $1973($2_1, 0, $1944($3, 24))
   }
   $4_1 = ($0_1 | 0) == 1;
  }
  $0_1 = $4_1;
  global$0 = $3 - -64 | 0;
  return $0_1 | 0;
 }
 
 function $1892($0_1, $1_1) {
  var $2_1 = 0, $3 = 0, $4_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0, wasm2js_i32$6 = 0, wasm2js_i32$7 = 0, wasm2js_i32$8 = 0;
  $2_1 = global$0 + -64 | 0;
  global$0 = $2_1;
  $3 = $1944($0_1, 0);
  $4_1 = $1944($3 - 4 | 0, 0);
  $3 = $1944($3 - 8 | 0, 0);
  $1982($2_1 + 32 | 0, 0, 0, 0);
  $1982($2_1 + 40 | 0, 0, 0, 0);
  $1982($2_1 + 48 | 0, 0, 0, 0);
  $1980($2_1 + 55 | 0, 0, 0);
  $1982($2_1, 24, 0, 0);
  $1973($2_1, 20, 0);
  $1973($2_1, 16, 72256);
  $1973($2_1, 12, $0_1);
  $1973($2_1, 8, $1_1);
  $0_1 = $0_1 + $3 | 0;
  $3 = 0;
  label$1 : {
   if ($1889($4_1, $1_1, 0)) {
    $1973($2_1, 56, 1);
    FUNCTION_TABLE[$1944($1944($4_1, 0), 20) | 0]($4_1, $2_1 + 8 | 0, $0_1, $0_1, 1, 0);
    $3 = ($1944($2_1, 32) | 0) == 1 ? $0_1 : 0;
    break label$1;
   }
   FUNCTION_TABLE[$1944($1944($4_1, 0), 24) | 0]($4_1, $2_1 + 8 | 0, $0_1, 1, 0);
   label$3 : {
    switch ($1944($2_1, 44) | 0) {
    case 0:
     $3 = (wasm2js_i32$0 = (wasm2js_i32$3 = (wasm2js_i32$6 = $1944($2_1, 28), wasm2js_i32$7 = 0, wasm2js_i32$8 = ($1944($2_1, 40) | 0) == 1, wasm2js_i32$8 ? wasm2js_i32$6 : wasm2js_i32$7), wasm2js_i32$4 = 0, wasm2js_i32$5 = ($1944($2_1, 36) | 0) == 1, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = ($1944($2_1, 48) | 0) == 1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
     break label$1;
    case 1:
     break label$3;
    default:
     break label$1;
    };
   }
   if (($1944($2_1, 32) | 0) != 1) {
    if ($1944($2_1, 48)) {
     break label$1
    }
    if (($1944($2_1, 36) | 0) != 1) {
     break label$1
    }
    if (($1944($2_1, 40) | 0) != 1) {
     break label$1
    }
   }
   $3 = $1944($2_1, 24);
  }
  global$0 = $2_1 - -64 | 0;
  return $3;
 }
 
 function $1893($0_1, $1_1, $2_1) {
  var $3 = 0;
  $3 = $1944($0_1, 16);
  if (!$3) {
   $1973($0_1, 36, 1);
   $1973($0_1, 24, $2_1);
   $1973($0_1, 16, $1_1);
   return;
  }
  label$2 : {
   if (($1_1 | 0) == ($3 | 0)) {
    if (($1944($0_1, 24) | 0) != 2) {
     break label$2
    }
    $1973($0_1, 24, $2_1);
    return;
   }
   $1968($0_1, 54, 1);
   $1973($0_1, 24, 2);
   $1973($0_1, 36, $1944($0_1, 36) + 1 | 0);
  }
 }
 
 function $1894($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  if ($1889($0_1, $1944($1_1, 8), 0)) {
   $1893($1_1, $2_1, $3)
  }
 }
 
 function $1895($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  if ($1889($0_1, $1944($1_1, 8), 0)) {
   $1893($1_1, $2_1, $3);
   return;
  }
  $0_1 = $1944($0_1, 8);
  FUNCTION_TABLE[$1944($1944($0_1, 0), 28) | 0]($0_1, $1_1, $2_1, $3);
 }
 
 function $1897($0_1, $1_1, $2_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0;
  $5_1 = global$0 + -64 | 0;
  global$0 = $5_1;
  label$1 : {
   if ($1889($1_1, 72640, 0)) {
    $1973($2_1, 0, 0);
    $4_1 = 1;
    break label$1;
   }
   label$10 : {
    if ($1937($0_1, 8) & 24) {
     $3 = 1
    } else {
     if (!$1_1) {
      break label$10
     }
     $3 = $1892($1_1, 72352);
     if (!$3) {
      break label$10
     }
     $3 = ($1937($3, 8) & 24) != 0;
    }
    $6_1 = $1889($0_1, $1_1, $3);
   }
   if ($6_1) {
    $4_1 = 1;
    $0_1 = $1944($2_1, 0);
    if (!$0_1) {
     break label$1
    }
    $1973($2_1, 0, $1944($0_1, 0));
    break label$1;
   }
   label$4 : {
    if (!$1_1) {
     break label$4
    }
    $6_1 = $1892($1_1, 72400);
    if (!$6_1) {
     break label$1
    }
    $1_1 = $1944($2_1, 0);
    if ($1_1) {
     $1973($2_1, 0, $1944($1_1, 0))
    }
    $3 = $1944($6_1, 8);
    $1_1 = $1944($0_1, 8);
    if ($3 & ($1_1 ^ -1) & 7 | $1_1 & ($3 ^ -1) & 96) {
     break label$1
    }
    $4_1 = 1;
    if ($1889($1944($0_1, 12), $1944($6_1, 12), 0)) {
     break label$1
    }
    if ($1889($1944($0_1, 12), 72608, 0)) {
     $0_1 = $1944($6_1, 12);
     if (!$0_1) {
      break label$1
     }
     $4_1 = !$1892($0_1, 72452);
     break label$1;
    }
    $3 = $1944($0_1, 12);
    if (!$3) {
     break label$4
    }
    $4_1 = 0;
    $1_1 = $1892($3, 72400);
    if ($1_1) {
     if (!($1937($0_1, 8) & 1)) {
      break label$1
     }
     $0_1 = $1944($6_1, 12);
     $2_1 = 0;
     __inlined_func$1898 : {
      label$11 : {
       while (1) {
        $4_1 = 0;
        if (!$0_1) {
         break __inlined_func$1898
        }
        $3 = $1892($0_1, 72400);
        if (!$3) {
         break label$11
        }
        if ($1944($3, 8) & ($1944($1_1, 8) ^ -1)) {
         break label$11
        }
        $4_1 = 1;
        if ($1889($1944($1_1, 12), $1944($3, 12), 0)) {
         break __inlined_func$1898
        }
        if (!($1937($1_1, 8) & 1)) {
         break label$11
        }
        $0_1 = $1944($1_1, 12);
        if (!$0_1) {
         break label$11
        }
        $1_1 = $1892($0_1, 72400);
        if ($1_1) {
         $0_1 = $1944($3, 12);
         continue;
        }
        break;
       };
       $0_1 = $1892($0_1, 72512);
       if (!$0_1) {
        break label$11
       }
       $2_1 = $1899($0_1, $1944($3, 12));
      }
      $4_1 = $2_1;
     }
     break label$1;
    }
    $1_1 = $1892($3, 72512);
    if ($1_1) {
     if (!($1937($0_1, 8) & 1)) {
      break label$1
     }
     $4_1 = $1899($1_1, $1944($6_1, 12));
     break label$1;
    }
    $1_1 = $1892($3, 72304);
    if (!$1_1) {
     break label$1
    }
    $0_1 = $1944($6_1, 12);
    if (!$0_1) {
     break label$1
    }
    $0_1 = $1892($0_1, 72304);
    if (!$0_1) {
     break label$1
    }
    $1604($5_1 + 12 | 0, 0, 52);
    $1973($5_1, 56, 1);
    $1973($5_1, 20, -1);
    $1973($5_1, 16, $1_1);
    $1973($5_1, 8, $0_1);
    ((((wasm2js_i32$1 = $0_1, wasm2js_i32$2 = $5_1 + 8 | 0), wasm2js_i32$3 = $1944($2_1, 0)), wasm2js_i32$4 = 1), wasm2js_i32$0 = $1944($1944($0_1, 0), 28) | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0, wasm2js_i32$3 | 0, wasm2js_i32$4 | 0);
    $0_1 = $1944($5_1, 32);
    label$9 : {
     if (($0_1 | 0) != 1) {
      break label$9
     }
     if (!$1944($2_1, 0)) {
      break label$9
     }
     $1973($2_1, 0, $1944($5_1, 24));
    }
    $4_1 = ($0_1 | 0) == 1;
    break label$1;
   }
   $4_1 = 0;
  }
  global$0 = $5_1 - -64 | 0;
  return $4_1 | 0;
 }
 
 function $1899($0_1, $1_1) {
  var $2_1 = 0;
  label$1 : {
   if (!$1_1) {
    break label$1
   }
   $1_1 = $1892($1_1, 72512);
   if (!$1_1) {
    break label$1
   }
   if ($1944($1_1, 8) & ($1944($0_1, 8) ^ -1)) {
    break label$1
   }
   if (!$1889($1944($0_1, 12), $1944($1_1, 12), 0)) {
    break label$1
   }
   $2_1 = $1889($1944($0_1, 16), $1944($1_1, 16), 0);
  }
  return $2_1;
 }
 
 function $1900($0_1, $1_1, $2_1, $3) {
  $1968($0_1, 53, 1);
  label$1 : {
   if (($1944($0_1, 4) | 0) != ($2_1 | 0)) {
    break label$1
   }
   $1968($0_1, 52, 1);
   $2_1 = $1944($0_1, 16);
   label$2 : {
    if (!$2_1) {
     $1973($0_1, 36, 1);
     $1973($0_1, 24, $3);
     $1973($0_1, 16, $1_1);
     if (($3 | 0) != 1) {
      break label$1
     }
     if (($1944($0_1, 48) | 0) == 1) {
      break label$2
     }
     break label$1;
    }
    if (($1_1 | 0) == ($2_1 | 0)) {
     $2_1 = $1944($0_1, 24);
     if (($2_1 | 0) == 2) {
      $1973($0_1, 24, $3);
      $2_1 = $3;
     }
     if (($1944($0_1, 48) | 0) != 1) {
      break label$1
     }
     if (($2_1 | 0) == 1) {
      break label$2
     }
     break label$1;
    }
    $1973($0_1, 36, $1944($0_1, 36) + 1 | 0);
   }
   $1968($0_1, 54, 1);
  }
 }
 
 function $1901($0_1, $1_1, $2_1) {
  label$1 : {
   if (($1944($0_1, 4) | 0) != ($1_1 | 0)) {
    break label$1
   }
   if (($1944($0_1, 28) | 0) == 1) {
    break label$1
   }
   $1973($0_1, 28, $2_1);
  }
 }
 
 function $1902($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  if ($1889($0_1, $1944($1_1, 8), $4_1)) {
   $1901($1_1, $2_1, $3);
   return;
  }
  label$2 : {
   if ($1889($0_1, $1944($1_1, 0), $4_1)) {
    label$4 : {
     if (($1944($1_1, 16) | 0) != ($2_1 | 0)) {
      if (($1944($1_1, 20) | 0) != ($2_1 | 0)) {
       break label$4
      }
     }
     if (($3 | 0) != 1) {
      break label$2
     }
     $1973($1_1, 32, 1);
     return;
    }
    $1973($1_1, 32, $3);
    label$6 : {
     if (($1944($1_1, 44) | 0) == 4) {
      break label$6
     }
     $1970($1_1, 52, 0);
     $0_1 = $1944($0_1, 8);
     FUNCTION_TABLE[$1944($1944($0_1, 0), 20) | 0]($0_1, $1_1, $2_1, $2_1, 1, $4_1);
     if ($1937($1_1, 53)) {
      $1973($1_1, 44, 3);
      if (!$1937($1_1, 52)) {
       break label$6
      }
      break label$2;
     }
     $1973($1_1, 44, 4);
    }
    $1973($1_1, 20, $2_1);
    $1973($1_1, 40, $1944($1_1, 40) + 1 | 0);
    if (($1944($1_1, 36) | 0) != 1) {
     break label$2
    }
    if (($1944($1_1, 24) | 0) != 2) {
     break label$2
    }
    $1968($1_1, 54, 1);
    return;
   }
   $0_1 = $1944($0_1, 8);
   FUNCTION_TABLE[$1944($1944($0_1, 0), 24) | 0]($0_1, $1_1, $2_1, $3, $4_1);
  }
 }
 
 function $1903($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  if ($1889($0_1, $1944($1_1, 8), $4_1)) {
   $1901($1_1, $2_1, $3);
   return;
  }
  label$2 : {
   if (!$1889($0_1, $1944($1_1, 0), $4_1)) {
    break label$2
   }
   label$3 : {
    if (($1944($1_1, 16) | 0) != ($2_1 | 0)) {
     if (($1944($1_1, 20) | 0) != ($2_1 | 0)) {
      break label$3
     }
    }
    if (($3 | 0) != 1) {
     break label$2
    }
    $1973($1_1, 32, 1);
    return;
   }
   $1973($1_1, 20, $2_1);
   $1973($1_1, 32, $3);
   $1973($1_1, 40, $1944($1_1, 40) + 1 | 0);
   label$5 : {
    if (($1944($1_1, 36) | 0) != 1) {
     break label$5
    }
    if (($1944($1_1, 24) | 0) != 2) {
     break label$5
    }
    $1968($1_1, 54, 1);
   }
   $1973($1_1, 44, 4);
  }
 }
 
 function $1904($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  if ($1889($0_1, $1944($1_1, 8), $5_1)) {
   $1900($1_1, $2_1, $3, $4_1);
   return;
  }
  $0_1 = $1944($0_1, 8);
  FUNCTION_TABLE[$1944($1944($0_1, 0), 20) | 0]($0_1, $1_1, $2_1, $3, $4_1, $5_1);
 }
 
 function $1905($0_1, $1_1, $2_1, $3, $4_1, $5_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $5_1 = $5_1 | 0;
  if ($1889($0_1, $1944($1_1, 8), $5_1)) {
   $1900($1_1, $2_1, $3, $4_1)
  }
 }
 
 function $1906($0_1) {
  $0_1 = $0_1 | 0;
  if (!$0_1) {
   return 0
  }
  return ($1892($0_1, 72400) | 0) != 0 | 0;
 }
 
 function $1909($0_1) {
  $0_1 = $0_1 | 0;
  return 7399;
 }
 
 function $1912($0_1) {
  $0_1 = $0_1 | 0;
  return 13411;
 }
 
 function $1915($0_1) {
  $0_1 = $0_1 | 0;
  return 8610;
 }
 
 function $1916($0_1) {
  $0_1 = $0_1 | 0;
  var $1_1 = 0, $2_1 = 0, $3 = 0;
  $1973($0_1, 0, 73136);
  $2_1 = $1944($0_1 + 4 | 0, 0) - 12 | 0;
  $1_1 = $2_1 + 8 | 0;
  $3 = $1_1;
  $1_1 = $1944($1_1, 0) - 1 | 0;
  $1973($3, 0, $1_1);
  if (($1_1 | 0) < 0) {
   $1756($2_1)
  }
  return $0_1 | 0;
 }
 
 function $1920($0_1) {
  $0_1 = $0_1 | 0;
  $1916($0_1);
  $1756($0_1);
 }
 
 function $1921($0_1) {
  $0_1 = $0_1 | 0;
  return $1808($0_1 + 4 | 0) | 0;
 }
 
 function $1926() {
  return global$2 | 0;
 }
 
 function $1927() {
  return global$0 | 0;
 }
 
 function $1928($0_1) {
  $0_1 = $0_1 | 0;
  global$0 = $0_1;
 }
 
 function $1929($0_1) {
  $0_1 = $0_1 | 0;
  $0_1 = global$0 - $0_1 & -16;
  global$0 = $0_1;
  return $0_1 | 0;
 }
 
 function $1930($0_1) {
  $0_1 = $0_1 | 0;
  global$3 = $0_1;
 }
 
 function $1931() {
  return global$3 | 0;
 }
 
 function $1933($0_1, $1_1, $2_1, $3, $4_1) {
  $0_1 = $0_1 | 0;
  $1_1 = $1_1 | 0;
  $2_1 = $2_1 | 0;
  $3 = $3 | 0;
  $4_1 = $4_1 | 0;
  $0_1 = FUNCTION_TABLE[$0_1 | 0]($1_1, $2_1, $3, $4_1) | 0;
  global$3 = i64toi32_i32$HIGH_BITS;
  return $0_1 | 0;
 }
 
 function $1934($0_1, $1_1, $2_1, $3) {
  fimport$39($0_1 | 0, $1_1 | 0, 8, 0, $2_1 | 0, -1, $3 | 0);
 }
 
 function $1936($0_1, $1_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 1 >>> 0) {
   fimport$41()
  }
  return HEAP8[$0_1 | 0];
 }
 
 function $1937($0_1, $1_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 1 >>> 0) {
   fimport$41()
  }
  return HEAPU8[$0_1 | 0];
 }
 
 function $1939($0_1, $1_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 2 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 1) {
   fimport$42()
  }
  return HEAP16[$0_1 >> 1];
 }
 
 function $1940($0_1, $1_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 2 >>> 0) {
   fimport$41()
  }
  return HEAPU8[$0_1 | 0] | HEAPU8[$0_1 + 1 | 0] << 8;
 }
 
 function $1941($0_1, $1_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 2 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 1) {
   fimport$42()
  }
  return HEAPU16[$0_1 >> 1];
 }
 
 function $1942($0_1, $1_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 4 >>> 0) {
   fimport$41()
  }
  return HEAPU8[$0_1 | 0] | HEAPU8[$0_1 + 1 | 0] << 8 | (HEAPU8[$0_1 + 2 | 0] << 16 | HEAPU8[$0_1 + 3 | 0] << 24);
 }
 
 function $1944($0_1, $1_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 4 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 3) {
   fimport$42()
  }
  return HEAP32[$0_1 >> 2];
 }
 
 function $1945($0_1, $1_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 1 >>> 0) {
   fimport$41()
  }
  $0_1 = HEAP8[$0_1 | 0];
  i64toi32_i32$HIGH_BITS = $0_1 >> 31;
  return $0_1;
 }
 
 function $1953($0_1, $1_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 4 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 3) {
   fimport$42()
  }
  $0_1 = HEAP32[$0_1 >> 2];
  i64toi32_i32$HIGH_BITS = $0_1 >> 31;
  return $0_1;
 }
 
 function $1956($0_1, $1_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 4 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 3) {
   fimport$42()
  }
  i64toi32_i32$HIGH_BITS = 0;
  return HEAP32[$0_1 >> 2];
 }
 
 function $1957($0_1) {
  if (!$0_1 | HEAPU32[18353] < $0_1 + 8 >>> 0) {
   fimport$41()
  }
  i64toi32_i32$HIGH_BITS = HEAPU8[$0_1 + 4 | 0] | HEAPU8[$0_1 + 5 | 0] << 8 | (HEAPU8[$0_1 + 6 | 0] << 16 | HEAPU8[$0_1 + 7 | 0] << 24);
  return HEAPU8[$0_1 | 0] | HEAPU8[$0_1 + 1 | 0] << 8 | (HEAPU8[$0_1 + 2 | 0] << 16 | HEAPU8[$0_1 + 3 | 0] << 24);
 }
 
 function $1959($0_1, $1_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 8 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 3) {
   fimport$42()
  }
  i64toi32_i32$HIGH_BITS = HEAP32[$0_1 + 4 >> 2];
  return HEAP32[$0_1 >> 2];
 }
 
 function $1960($0_1, $1_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 8 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 7) {
   fimport$42()
  }
  i64toi32_i32$HIGH_BITS = HEAP32[$0_1 + 4 >> 2];
  return HEAP32[$0_1 >> 2];
 }
 
 function $1963($0_1, $1_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 4 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 3) {
   fimport$42()
  }
  return HEAPF32[$0_1 >> 2];
 }
 
 function $1967($0_1, $1_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 8 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 7) {
   fimport$42()
  }
  return HEAPF64[$0_1 >> 3];
 }
 
 function $1968($0_1, $1_1, $2_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 1 >>> 0) {
   fimport$41()
  }
  HEAP8[$0_1 | 0] = $2_1;
 }
 
 function $1969($0_1, $1_1, $2_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 2 >>> 0) {
   fimport$41()
  }
  HEAP8[$0_1 | 0] = $2_1;
  HEAP8[$0_1 + 1 | 0] = $2_1 >>> 8;
 }
 
 function $1970($0_1, $1_1, $2_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 2 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 1) {
   fimport$42()
  }
  HEAP16[$0_1 >> 1] = $2_1;
 }
 
 function $1971($0_1, $1_1, $2_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 4 >>> 0) {
   fimport$41()
  }
  HEAP8[$0_1 | 0] = $2_1;
  HEAP8[$0_1 + 1 | 0] = $2_1 >>> 8;
  HEAP8[$0_1 + 2 | 0] = $2_1 >>> 16;
  HEAP8[$0_1 + 3 | 0] = $2_1 >>> 24;
 }
 
 function $1972($0_1, $1_1, $2_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 4 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 1) {
   fimport$42()
  }
  HEAP16[$0_1 >> 1] = $2_1;
  HEAP16[$0_1 + 2 >> 1] = $2_1 >>> 16;
 }
 
 function $1973($0_1, $1_1, $2_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 4 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 3) {
   fimport$42()
  }
  HEAP32[$0_1 >> 2] = $2_1;
 }
 
 function $1980($0_1, $1_1, $2_1) {
  if (!$0_1 | HEAPU32[18353] < $0_1 + 8 >>> 0) {
   fimport$41()
  }
  HEAP8[$0_1 | 0] = $1_1;
  HEAP8[$0_1 + 1 | 0] = $1_1 >>> 8;
  HEAP8[$0_1 + 2 | 0] = $1_1 >>> 16;
  HEAP8[$0_1 + 3 | 0] = $1_1 >>> 24;
  HEAP8[$0_1 + 4 | 0] = $2_1;
  HEAP8[$0_1 + 5 | 0] = $2_1 >>> 8;
  HEAP8[$0_1 + 6 | 0] = $2_1 >>> 16;
  HEAP8[$0_1 + 7 | 0] = $2_1 >>> 24;
 }
 
 function $1981($0_1, $1_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 8 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 1) {
   fimport$42()
  }
  HEAP16[$0_1 >> 1] = 0;
  HEAP16[$0_1 + 2 >> 1] = 0;
  HEAP16[$0_1 + 4 >> 1] = 0;
  HEAP16[$0_1 + 6 >> 1] = 0;
 }
 
 function $1982($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 8 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 3) {
   fimport$42()
  }
  HEAP32[$0_1 >> 2] = $2_1;
  HEAP32[$0_1 + 4 >> 2] = $3;
 }
 
 function $1983($0_1, $1_1, $2_1, $3) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 8 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 7) {
   fimport$42()
  }
  HEAP32[$0_1 >> 2] = $2_1;
  HEAP32[$0_1 + 4 >> 2] = $3;
 }
 
 function $1986($0_1, $1_1, $2_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 4 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 3) {
   fimport$42()
  }
  HEAPF32[$0_1 >> 2] = $2_1;
 }
 
 function $1990($0_1, $1_1, $2_1) {
  $0_1 = $0_1 + $1_1 | 0;
  if (!$0_1 | HEAPU32[18353] < $0_1 + 8 >>> 0) {
   fimport$41()
  }
  if ($0_1 & 7) {
   fimport$42()
  }
  HEAPF64[$0_1 >> 3] = $2_1;
 }
 
 function __wasm_ctz_i32($0_1) {
  if ($0_1) {
   return 31 - Math_clz32($0_1 - 1 ^ $0_1) | 0
  }
  return 32;
 }
 
 function __wasm_i64_mul($0_1, $1_1, $2_1, $3) {
  var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0;
  $4_1 = $2_1 >>> 16 | 0;
  $5_1 = $0_1 >>> 16 | 0;
  $9 = Math_imul($4_1, $5_1);
  $6_1 = $2_1 & 65535;
  $7_1 = $0_1 & 65535;
  $8 = Math_imul($6_1, $7_1);
  $5_1 = ($8 >>> 16 | 0) + Math_imul($5_1, $6_1) | 0;
  $4_1 = ($5_1 & 65535) + Math_imul($4_1, $7_1) | 0;
  i64toi32_i32$HIGH_BITS = (Math_imul($1_1, $2_1) + $9 | 0) + Math_imul($0_1, $3) + ($5_1 >>> 16) + ($4_1 >>> 16) | 0;
  return $8 & 65535 | $4_1 << 16;
 }
 
 function __wasm_i64_udiv($0_1, $1_1, $2_1) {
  var $3 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8 = 0, $9 = 0, $10_1 = 0, $11_1 = 0;
  __inlined_func$_ZN17compiler_builtins3int4udiv10divmod_u6417h6026910b5ed08e40E : {
   label$1 : {
    label$2 : {
     label$3 : {
      label$4 : {
       label$5 : {
        label$6 : {
         label$7 : {
          label$9 : {
           label$11 : {
            if ($1_1) {
             if (!$2_1) {
              break label$11
             }
             break label$9;
            }
            i64toi32_i32$HIGH_BITS = 0;
            $0_1 = ($0_1 >>> 0) / ($2_1 >>> 0) | 0;
            break __inlined_func$_ZN17compiler_builtins3int4udiv10divmod_u6417h6026910b5ed08e40E;
           }
           if (!$0_1) {
            break label$7
           }
           break label$6;
          }
          if (!($2_1 - 1 & $2_1)) {
           break label$5
          }
          $5_1 = (Math_clz32($2_1) + 33 | 0) - Math_clz32($1_1) | 0;
          $6_1 = 0 - $5_1 | 0;
          break label$3;
         }
         i64toi32_i32$HIGH_BITS = 0;
         $0_1 = ($1_1 >>> 0) / 0 | 0;
         break __inlined_func$_ZN17compiler_builtins3int4udiv10divmod_u6417h6026910b5ed08e40E;
        }
        $3 = 32 - Math_clz32($1_1) | 0;
        if ($3 >>> 0 < 31) {
         break label$4
        }
        break label$2;
       }
       if (($2_1 | 0) == 1) {
        break label$1
       }
       $5_1 = __wasm_ctz_i32($2_1);
       $2_1 = $5_1 & 31;
       if (($5_1 & 63) >>> 0 >= 32) {
        $0_1 = $1_1 >>> $2_1 | 0
       } else {
        $3 = $1_1 >>> $2_1 | 0;
        $0_1 = ((1 << $2_1) - 1 & $1_1) << 32 - $2_1 | $0_1 >>> $2_1;
       }
       i64toi32_i32$HIGH_BITS = $3;
       break __inlined_func$_ZN17compiler_builtins3int4udiv10divmod_u6417h6026910b5ed08e40E;
      }
      $5_1 = $3 + 1 | 0;
      $6_1 = 63 - $3 | 0;
     }
     $3 = $5_1 & 63;
     $4_1 = $3 & 31;
     if ($3 >>> 0 >= 32) {
      $3 = 0;
      $7_1 = $1_1 >>> $4_1 | 0;
     } else {
      $3 = $1_1 >>> $4_1 | 0;
      $7_1 = ((1 << $4_1) - 1 & $1_1) << 32 - $4_1 | $0_1 >>> $4_1;
     }
     $6_1 = $6_1 & 63;
     $4_1 = $6_1 & 31;
     if ($6_1 >>> 0 >= 32) {
      $1_1 = $0_1 << $4_1;
      $0_1 = 0;
     } else {
      $1_1 = (1 << $4_1) - 1 & $0_1 >>> 32 - $4_1 | $1_1 << $4_1;
      $0_1 = $0_1 << $4_1;
     }
     if ($5_1) {
      $6_1 = $2_1 - 1 | 0;
      $11_1 = ($6_1 | 0) == -1 ? -1 : 0;
      while (1) {
       $8 = $3 << 1 | $7_1 >>> 31;
       $3 = $7_1 << 1 | $1_1 >>> 31;
       $4_1 = $11_1 - ($8 + ($3 >>> 0 > $6_1 >>> 0) | 0) >> 31;
       $9 = $2_1 & $4_1;
       $7_1 = $3 - $9 | 0;
       $3 = $8 - ($3 >>> 0 < $9 >>> 0) | 0;
       $1_1 = $1_1 << 1 | $0_1 >>> 31;
       $0_1 = $10_1 | $0_1 << 1;
       $10_1 = $4_1 & 1;
       $5_1 = $5_1 - 1 | 0;
       if ($5_1) {
        continue
       }
       break;
      };
     }
     i64toi32_i32$HIGH_BITS = $1_1 << 1 | $0_1 >>> 31;
     $0_1 = $10_1 | $0_1 << 1;
     break __inlined_func$_ZN17compiler_builtins3int4udiv10divmod_u6417h6026910b5ed08e40E;
    }
    $0_1 = 0;
    $1_1 = 0;
   }
   i64toi32_i32$HIGH_BITS = $1_1;
  }
  return $0_1;
 }
 
 function __wasm_rotl_i32($0_1) {
  var $1_1 = 0;
  $1_1 = $0_1 & 31;
  $0_1 = 0 - $0_1 & 31;
  return (-1 >>> $1_1 & -2) << $1_1 | (-1 << $0_1 & -2) >>> $0_1;
 }
 
 function __wasm_rotl_i64($0_1, $1_1) {
  i64toi32_i32$HIGH_BITS = $0_1;
  return $1_1;
 }
 
 // EMSCRIPTEN_END_FUNCS
;
 bufferView = HEAPU8;
 initActiveSegments(imports);
 var FUNCTION_TABLE = Table([null, $4, $5, $6, $106, $107, $108, $109, $110, $166, $353, $360, $361, $436, $459, $460, $531, $532, $533, $534, $535, $596, $748, $751, $776, $762, $778, $779, $782, $783, $784, $785, $765, $786, $766, $787, $767, $788, $790, $783, $784, $785, $770, $794, $771, $772, $796, $783, $798, $799, $800, $801, $802, $803, $804, $805, $806, $807, $694, $808, $809, $810, $811, $812, $1916, $1619, $817, $783, $819, $804, $821, $822, $824, $825, $826, $827, $798, $799, $784, $785, $46, $832, $45, $833, $48, $812, $836, $783, $798, $799, $840, $801, $842, $804, $845, $783, $847, $848, $798, $799, $806, $807, $854, $783, $798, $799, $858, $804, $860, $862, $863, $864, $805, $866, $804, $868, $798, $799, $871, $872, $379, $833, $380, $874, $805, $382, $876, $877, $878, $879, $880, $881, $882, $883, $884, $885, $886, $887, $888, $889, $890, $891, $892, $893, $894, $895, $896, $897, $898, $899, $900, $901, $902, $903, $904, $905, $906, $907, $908, $909, $910, $911, $912, $913, $914, $915, $916, $917, $918, $919, $920, $921, $922, $923, $924, $925, $926, $927, $928, $898, $930, $894, $932, $872, $934, $935, $936, $937, $938, $939, $940, $941, $375, $383, $808, $384, $943, $872, $945, $946, $947, $948, $949, $923, $951, $377, $952, $957, $783, $959, $805, $806, $807, $798, $799, $822, $804, $967, $968, $423, $833, $970, $805, $973, $783, $975, $804, $977, $978, $784, $785, $982, $783, $984, $985, $804, $805, $806, $807, $798, $799, $784, $785, $994, $995, $996, $798, $799, $999, $1000, $1001, $1003, $1004, $784, $785, $1007, $805, $1009, $1010, $804, $805, $800, $801, $840, $801, $1017, $798, $799, $458, $833, $461, $1021, $848, $1023, $1024, $1025, $1026, $812, $1028, $1029, $1030, $1031, $1032, $1033, $1034, $1035, $1037, $1038, $1039, $877, $1041, $1042, $431, $833, $430, $432, $429, $434, $812, $1045, $812, $1047, $804, $1049, $1050, $1051, $1052, $1053, $1054, $1055, $1056, $1057, $806, $807, $798, $799, $1062, $1063, $804, $805, $968, $1067, $1068, $805, $1073, $783, $798, $799, $819, $804, $821, $822, $967, $1083, $1084, $798, $799, $1087, $804, $784, $785, $1091, $1092, $805, $1094, $1095, $1096, $1097, $1098, $1099, $1100, $1101, $1102, $806, $807, $1105, $1106, $1107, $1108, $1109, $1110, $1111, $1112, $1113, $1114, $1115, $1116, $1117, $1118, $1119, $1120, $1121, $1122, $1123, $1124, $1125, $1097, $1127, $1099, $1129, $1130, $1131, $1132, $1133, $1134, $7, $937, $1136, $923, $1138, $1139, $11, $833, $1141, $1142, $848, $1144, $1145, $1146, $1148, $783, $784, $785, $1087, $804, $1154, $994, $798, $799, $1158, $1159, $1160, $1161, $1162, $1163, $1107, $1165, $1166, $806, $807, $1169, $848, $1171, $1172, $826, $1174, $2, $1175, $826, $1178, $1179, $1180, $1181, $779, $826, $1184, $1185, $1186, $1187, $1188, $136, $161, $167, $1189, $1190, $1191, $1192, $1193, $1191, $1195, $1196, $363, $363, $365, $1199, $1200, $1181, $1202, $1203, $1204, $1205, $1206, $142, $1207, $1208, $211, $246, $245, $1179, $235, $234, $1210, $1211, $1212, $1213, $1214, $236, $237, $1215, $1216, $1217, $1218, $1219, $1220, $1221, $1222, $254, $255, $1223, $256, $1224, $1225, $1226, $1227, $261, $1228, $1229, $1230, $1231, $1232, $1233, $1234, $1235, $1236, $1237, $303, $304, $308, $309, $305, $306, $312, $313, $1238, $310, $311, $1239, $223, $1240, $1241, $1181, $57, $1243, $60, $1181, $228, $225, $230, $225, $289, $291, $38, $292, $232, $233, $1245, $259, $1246, $1247, $1248, $1249, $1250, $1179, $1252, $1253, $1254, $594, $276, $591, $589, $1255, $287, $288, $301, $275, $1256, $281, $282, $1257, $284, $285, $1258, $1259, $1260, $592, $259, $295, $296, $297, $1261, $269, $1262, $1263, $1264, $1265, $1266, $1267, $1268, $1269, $1270, $1271, $1272, $1273, $1274, $1275, $1276, $1277, $1278, $1279, $1280, $1281, $1282, $1283, $1205, $1285, $1277, $1287, $1288, $1289, $1290, $588, $1291, $599, $1292, $1293, $1294, $1295, $1296, $1297, $1298, $1299, $1300, $1301, $1302, $1303, $1304, $1305, $1306, $1307, $1308, $1309, $1310, $1311, $1312, $1313, $1314, $1315, $1316, $1317, $1318, $1319, $1320, $1321, $1322, $1323, $1324, $1325, $1326, $1327, $1328, $1329, $1330, $1331, $1332, $1333, $1334, $1335, $1336, $1337, $1338, $1339, $1340, $1341, $1342, $1343, $1344, $1345, $1346, $1347, $1348, $1349, $1350, $705, $1351, $1352, $1353, $1354, $1355, $1356, $1357, $1358, $1359, $1360, $1361, $1362, $716, $717, $1363, $1364, $718, $1365, $1366, $1367, $1368, $723, $1369, $1370, $1371, $1372, $1373, $1374, $1375, $1376, $1375, $1378, $1375, $1378, $1381, $1382, $733, $734, $736, $737, $1383, $740, $1384, $1385, $1333, $1387, $314, $315, $1388, $1389, $1390, $321, $1391, $1392, $319, $1393, $1394, $1395, $1396, $1397, $1398, $1399, $1400, $1401, $1402, $1403, $1404, $1405, $1406, $1222, $1408, $1409, $1410, $1411, $826, $1413, $1414, $1415, $1416, $1417, $1179, $1419, $1222, $1421, $1422, $1423, $1424, $1425, $552, $541, $1426, $545, $547, $544, $546, $542, $1427, $749, $1428, $759, $1429, $1430, $342, $1431, $344, $164, $345, $1432, $334, $1384, $1434, $335, $337, $1435, $339, $1436, $226, $227, $1437, $1438, $159, $263, $262, $89, $191, $90, $195, $200, $201, $192, $193, $194, $196, $197, $198, $199, $1439, $1440, $1441, $202, $1442, $1249, $1444, $1445, $1446, $1447, $120, $121, $1448, $1449, $1450, $1451, $1452, $1453, $1454, $1455, $217, $1456, $1457, $1458, $1459, $1460, $1461, $1462, $1463, $171, $172, $1464, $174, $175, $1465, $173, $189, $165, $176, $177, $178, $179, $1454, $1467, $1468, $184, $1469, $1470, $1471, $181, $1472, $1473, $186, $187, $188, $190, $1474, $1475, $1476, $1477, $1478, $1479, $1480, $1481, $1253, $1483, $1484, $1493, $1507, $1566, $1567, $1566, $1577, $1578, $1579, $1580, $1582, $1583, $1486, $1487, $775, $777, $781, $789, $795, $816, $823, $835, $844, $853, $861, $956, $972, $981, $1002, $1036, $1072, $1082, $1147, $1176, $953, $1489, $1490, $1491, $1492, $1494, $1495, $1491, $1492, $1498, $1499, $1500, $1501, $1502, $1503, $1504, $1505, $1506, $1509, $1510, $1508, $1511, $1513, $1514, $1512, $1515, $1517, $1518, $1516, $1519, $1521, $1522, $1520, $1523, $1525, $1526, $1524, $1527, $1529, $1530, $1528, $1531, $1533, $1534, $1532, $1535, $1552, $1553, $1555, $1557, $1559, $1561, $1563, $1565, $1569, $1570, $1571, $1572, $1574, $1575, $1520, $1523, $1581, $1588, $1616, $1617, $1618, $1620, $1686, $1691, $1692, $1734, $1735, $1739, $1751, $1619, $1787, $363, $363, $1888, $1787, $1891, $1905, $1903, $1894, $1787, $1904, $1902, $1895, $1787, $1897, $1787, $1912, $1787, $1915, $1787, $1909, $1920, $1921, $1920]);
 function __wasm_memory_size() {
  return buffer.byteLength / 65536 | 0;
 }
 
 return {
  "__wasm_call_ctors": $0, 
  "malloc": $1755, 
  "free": $1756, 
  "__indirect_function_table": FUNCTION_TABLE, 
  "__getTypeName": $1585, 
  "_embind_initialize_bindings": $1586, 
  "__errno_location": $1614, 
  "sbrk": $1765, 
  "emscripten_get_sbrk_ptr": $1764, 
  "setTempRet0": $1930, 
  "getTempRet0": $1931, 
  "emscripten_stack_get_base": $1926, 
  "stackSave": $1927, 
  "stackRestore": $1928, 
  "stackAlloc": $1929, 
  "__cxa_is_pointer_type": $1906, 
  "dynCall_jiji": $1933
 };
}

  return asmFunc(info);
}

)(info);
 },
 instantiate: function(binary, info) {
  return {
   then: function(ok) {
    var module = new WebAssembly.Module(binary);
    ok({
     "instance": new WebAssembly.Instance(module, info)
    });
   }
  };
 },
 RuntimeError: Error
};

wasmBinary = [];

if (typeof WebAssembly != "object") {
 abort("no native wasm support detected");
}

function getSafeHeapType(bytes, isFloat) {
 switch (bytes) {
 case 1:
  return "i8";

 case 2:
  return "i16";

 case 4:
  return isFloat ? "float" : "i32";

 case 8:
  return isFloat ? "double" : "i64";

 default:
  assert(0, "getSafeHeapType() invalid bytes=" + bytes);
 }
}

function SAFE_HEAP_STORE(dest, value, bytes, isFloat) {
 if (dest <= 0) abort("segmentation fault storing " + bytes + " bytes to address " + dest);
 if (dest % bytes !== 0) abort("alignment error storing to address " + dest + ", which was expected to be aligned to a multiple of " + bytes);
 if (runtimeInitialized) {
  var brk = _sbrk() >>> 0;
  if (dest + bytes > brk) abort("segmentation fault, exceeded the top of the available dynamic heap when storing " + bytes + " bytes to address " + dest + ". DYNAMICTOP=" + brk);
  assert(brk >= _emscripten_stack_get_base(), "brk >= _emscripten_stack_get_base() (brk=" + brk + ", _emscripten_stack_get_base()=" + _emscripten_stack_get_base() + ")");
  assert(brk <= wasmMemory.buffer.byteLength, "brk <= wasmMemory.buffer.byteLength (brk=" + brk + ", wasmMemory.buffer.byteLength=" + wasmMemory.buffer.byteLength + ")");
 }
 setValue_safe(dest, value, getSafeHeapType(bytes, isFloat));
 return value;
}

function SAFE_HEAP_STORE_D(dest, value, bytes) {
 return SAFE_HEAP_STORE(dest, value, bytes, true);
}

function SAFE_HEAP_LOAD(dest, bytes, unsigned, isFloat) {
 if (dest <= 0) abort("segmentation fault loading " + bytes + " bytes from address " + dest);
 if (dest % bytes !== 0) abort("alignment error loading from address " + dest + ", which was expected to be aligned to a multiple of " + bytes);
 if (runtimeInitialized) {
  var brk = _sbrk() >>> 0;
  if (dest + bytes > brk) abort("segmentation fault, exceeded the top of the available dynamic heap when loading " + bytes + " bytes from address " + dest + ". DYNAMICTOP=" + brk);
  assert(brk >= _emscripten_stack_get_base(), "brk >= _emscripten_stack_get_base() (brk=" + brk + ", _emscripten_stack_get_base()=" + _emscripten_stack_get_base() + ")");
  assert(brk <= wasmMemory.buffer.byteLength, "brk <= wasmMemory.buffer.byteLength (brk=" + brk + ", wasmMemory.buffer.byteLength=" + wasmMemory.buffer.byteLength + ")");
 }
 var type = getSafeHeapType(bytes, isFloat);
 var ret = getValue_safe(dest, type);
 if (unsigned) ret = unSign(ret, parseInt(type.substr(1), 10));
 return ret;
}

function SAFE_HEAP_LOAD_D(dest, bytes, unsigned) {
 return SAFE_HEAP_LOAD(dest, bytes, unsigned, true);
}

function SAFE_FT_MASK(value, mask) {
 var ret = value & mask;
 if (ret !== value) {
  abort("Function table mask error: function pointer is " + value + " which is masked by " + mask + ", the likely cause of this is that the function pointer is being called by the wrong type.");
 }
 return ret;
}

function segfault() {
 abort("segmentation fault");
}

function alignfault() {
 abort("alignment fault");
}

var wasmMemory;

var ABORT = false;

var EXITSTATUS;

function assert(condition, text) {
 if (!condition) {
  abort(text);
 }
}

var UTF8Decoder = typeof TextDecoder != "undefined" ? new TextDecoder("utf8") : undefined;

function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {
 var endIdx = idx + maxBytesToRead;
 var endPtr = idx;
 while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;
 if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {
  return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));
 }
 var str = "";
 while (idx < endPtr) {
  var u0 = heapOrArray[idx++];
  if (!(u0 & 128)) {
   str += String.fromCharCode(u0);
   continue;
  }
  var u1 = heapOrArray[idx++] & 63;
  if ((u0 & 224) == 192) {
   str += String.fromCharCode((u0 & 31) << 6 | u1);
   continue;
  }
  var u2 = heapOrArray[idx++] & 63;
  if ((u0 & 240) == 224) {
   u0 = (u0 & 15) << 12 | u1 << 6 | u2;
  } else {
   u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;
  }
  if (u0 < 65536) {
   str += String.fromCharCode(u0);
  } else {
   var ch = u0 - 65536;
   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
  }
 }
 return str;
}

function UTF8ToString(ptr, maxBytesToRead) {
 return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : "";
}

function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {
 if (!(maxBytesToWrite > 0)) return 0;
 var startIdx = outIdx;
 var endIdx = outIdx + maxBytesToWrite - 1;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) {
   var u1 = str.charCodeAt(++i);
   u = 65536 + ((u & 1023) << 10) | u1 & 1023;
  }
  if (u <= 127) {
   if (outIdx >= endIdx) break;
   heap[outIdx++] = u;
  } else if (u <= 2047) {
   if (outIdx + 1 >= endIdx) break;
   heap[outIdx++] = 192 | u >> 6;
   heap[outIdx++] = 128 | u & 63;
  } else if (u <= 65535) {
   if (outIdx + 2 >= endIdx) break;
   heap[outIdx++] = 224 | u >> 12;
   heap[outIdx++] = 128 | u >> 6 & 63;
   heap[outIdx++] = 128 | u & 63;
  } else {
   if (outIdx + 3 >= endIdx) break;
   heap[outIdx++] = 240 | u >> 18;
   heap[outIdx++] = 128 | u >> 12 & 63;
   heap[outIdx++] = 128 | u >> 6 & 63;
   heap[outIdx++] = 128 | u & 63;
  }
 }
 heap[outIdx] = 0;
 return outIdx - startIdx;
}

function stringToUTF8(str, outPtr, maxBytesToWrite) {
 return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}

function lengthBytesUTF8(str) {
 var len = 0;
 for (var i = 0; i < str.length; ++i) {
  var c = str.charCodeAt(i);
  if (c <= 127) {
   len++;
  } else if (c <= 2047) {
   len += 2;
  } else if (c >= 55296 && c <= 57343) {
   len += 4;
   ++i;
  } else {
   len += 3;
  }
 }
 return len;
}

var HEAP, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

function updateMemoryViews() {
 var b = wasmMemory.buffer;
 Module["HEAP8"] = HEAP8 = new Int8Array(b);
 Module["HEAP16"] = HEAP16 = new Int16Array(b);
 Module["HEAP32"] = HEAP32 = new Int32Array(b);
 Module["HEAPU8"] = HEAPU8 = new Uint8Array(b);
 Module["HEAPU16"] = HEAPU16 = new Uint16Array(b);
 Module["HEAPU32"] = HEAPU32 = new Uint32Array(b);
 Module["HEAPF32"] = HEAPF32 = new Float32Array(b);
 Module["HEAPF64"] = HEAPF64 = new Float64Array(b);
}

var INITIAL_MEMORY = Module["INITIAL_MEMORY"] || 16777216;

assert(INITIAL_MEMORY >= 65536, "INITIAL_MEMORY should be larger than STACK_SIZE, was " + INITIAL_MEMORY + "! (STACK_SIZE=" + 65536 + ")");

if (Module["wasmMemory"]) {
 wasmMemory = Module["wasmMemory"];
} else {
 wasmMemory = new WebAssembly.Memory({
  "initial": INITIAL_MEMORY / 65536,
  "maximum": INITIAL_MEMORY / 65536
 });
}

updateMemoryViews();

INITIAL_MEMORY = wasmMemory.buffer.byteLength;

var wasmTable;

var __ATPRERUN__ = [];

var __ATINIT__ = [];

var __ATEXIT__ = [];

var __ATPOSTRUN__ = [];

var runtimeInitialized = false;

var runtimeKeepaliveCounter = 0;

function keepRuntimeAlive() {
 return noExitRuntime || runtimeKeepaliveCounter > 0;
}

function preRun() {
 if (Module["preRun"]) {
  if (typeof Module["preRun"] == "function") Module["preRun"] = [ Module["preRun"] ];
  while (Module["preRun"].length) {
   addOnPreRun(Module["preRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPRERUN__);
}

function initRuntime() {
 runtimeInitialized = true;
 if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
 FS.ignorePermissions = false;
 TTY.init();
 callRuntimeCallbacks(__ATINIT__);
}

function postRun() {
 if (Module["postRun"]) {
  if (typeof Module["postRun"] == "function") Module["postRun"] = [ Module["postRun"] ];
  while (Module["postRun"].length) {
   addOnPostRun(Module["postRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
 __ATPRERUN__.unshift(cb);
}

function addOnInit(cb) {
 __ATINIT__.unshift(cb);
}

function addOnExit(cb) {}

function addOnPostRun(cb) {
 __ATPOSTRUN__.unshift(cb);
}

var runDependencies = 0;

var runDependencyWatcher = null;

var dependenciesFulfilled = null;

function getUniqueRunDependency(id) {
 return id;
}

function addRunDependency(id) {
 runDependencies++;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
}

function removeRunDependency(id) {
 runDependencies--;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (runDependencies == 0) {
  if (runDependencyWatcher !== null) {
   clearInterval(runDependencyWatcher);
   runDependencyWatcher = null;
  }
  if (dependenciesFulfilled) {
   var callback = dependenciesFulfilled;
   dependenciesFulfilled = null;
   callback();
  }
 }
}

function abort(what) {
 if (Module["onAbort"]) {
  Module["onAbort"](what);
 }
 what = "Aborted(" + what + ")";
 err(what);
 ABORT = true;
 EXITSTATUS = 1;
 what += ". Build with -sASSERTIONS for more info.";
 var e = new WebAssembly.RuntimeError(what);
 readyPromiseReject(e);
 throw e;
}

var dataURIPrefix = "data:application/octet-stream;base64,";

function isDataURI(filename) {
 return filename.startsWith(dataURIPrefix);
}

function isFileURI(filename) {
 return filename.startsWith("file://");
}

var wasmBinaryFile;

wasmBinaryFile = "<<< WASM_BINARY_FILE >>>";

if (!isDataURI(wasmBinaryFile)) {
 wasmBinaryFile = locateFile(wasmBinaryFile);
}

function getBinary(file) {
 try {
  if (file == wasmBinaryFile && wasmBinary) {
   return new Uint8Array(wasmBinary);
  }
  var binary = tryParseAsDataURI(file);
  if (binary) {
   return binary;
  }
  if (readBinary) {
   return readBinary(file);
  }
  throw "both async and sync fetching of the wasm failed";
 } catch (err) {
  abort(err);
 }
}

function getBinaryPromise(binaryFile) {
 if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {
  if (typeof fetch == "function") {
   return fetch(binaryFile, {
    credentials: "same-origin"
   }).then(function(response) {
    if (!response["ok"]) {
     throw "failed to load wasm binary file at '" + binaryFile + "'";
    }
    return response["arrayBuffer"]();
   }).catch(function() {
    return getBinary(binaryFile);
   });
  }
 }
 return Promise.resolve().then(function() {
  return getBinary(binaryFile);
 });
}

function instantiateArrayBuffer(binaryFile, imports, receiver) {
 return getBinaryPromise(binaryFile).then(function(binary) {
  return WebAssembly.instantiate(binary, imports);
 }).then(function(instance) {
  return instance;
 }).then(receiver, function(reason) {
  err("failed to asynchronously prepare wasm: " + reason);
  abort(reason);
 });
}

function instantiateAsync(binary, binaryFile, imports, callback) {
 if (!binary && typeof WebAssembly.instantiateStreaming == "function" && !isDataURI(binaryFile) && !ENVIRONMENT_IS_NODE && typeof fetch == "function") {
  return fetch(binaryFile, {
   credentials: "same-origin"
  }).then(function(response) {
   var result = WebAssembly.instantiateStreaming(response, imports);
   return result.then(callback, function(reason) {
    err("wasm streaming compile failed: " + reason);
    err("falling back to ArrayBuffer instantiation");
    return instantiateArrayBuffer(binaryFile, imports, callback);
   });
  });
 } else {
  return instantiateArrayBuffer(binaryFile, imports, callback);
 }
}

function createWasm() {
 var info = {
  "env": wasmImports,
  "wasi_snapshot_preview1": wasmImports
 };
 function receiveInstance(instance, module) {
  var exports = instance.exports;
  Module["asm"] = exports;
  wasmTable = Module["asm"]["__indirect_function_table"];
  addOnInit(Module["asm"]["__wasm_call_ctors"]);
  removeRunDependency("wasm-instantiate");
  return exports;
 }
 addRunDependency("wasm-instantiate");
 function receiveInstantiationResult(result) {
  receiveInstance(result["instance"]);
 }
 if (Module["instantiateWasm"]) {
  try {
   return Module["instantiateWasm"](info, receiveInstance);
  } catch (e) {
   err("Module.instantiateWasm callback failed with error: " + e);
   readyPromiseReject(e);
  }
 }
 instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);
 return {};
}

var tempDouble;

var tempI64;

function ExitStatus(status) {
 this.name = "ExitStatus";
 this.message = "Program terminated with exit(" + status + ")";
 this.status = status;
}

function callRuntimeCallbacks(callbacks) {
 while (callbacks.length > 0) {
  callbacks.shift()(Module);
 }
}

function getValue(ptr, type = "i8") {
 if (type.endsWith("*")) type = "*";
 switch (type) {
 case "i1":
  return SAFE_HEAP_LOAD(ptr >> 0, 1, 0);

 case "i8":
  return SAFE_HEAP_LOAD(ptr >> 0, 1, 0);

 case "i16":
  return SAFE_HEAP_LOAD((ptr >> 1) * 2, 2, 0);

 case "i32":
  return SAFE_HEAP_LOAD((ptr >> 2) * 4, 4, 0);

 case "i64":
  return SAFE_HEAP_LOAD((ptr >> 2) * 4, 4, 0);

 case "float":
  return SAFE_HEAP_LOAD_D((ptr >> 2) * 4, 4, 0);

 case "double":
  return SAFE_HEAP_LOAD_D((ptr >> 3) * 8, 8, 0);

 case "*":
  return SAFE_HEAP_LOAD((ptr >> 2) * 4, 4, 1);

 default:
  abort("invalid type for getValue: " + type);
 }
}

function getValue_safe(ptr, type = "i8") {
 if (type.endsWith("*")) type = "*";
 switch (type) {
 case "i1":
  return HEAP8[ptr >> 0];

 case "i8":
  return HEAP8[ptr >> 0];

 case "i16":
  return HEAP16[ptr >> 1];

 case "i32":
  return HEAP32[ptr >> 2];

 case "i64":
  return HEAP32[ptr >> 2];

 case "float":
  return HEAPF32[ptr >> 2];

 case "double":
  return HEAPF64[ptr >> 3];

 case "*":
  return HEAPU32[ptr >> 2];

 default:
  abort("invalid type for getValue: " + type);
 }
}

function intArrayToString(array) {
 var ret = [];
 for (var i = 0; i < array.length; i++) {
  var chr = array[i];
  if (chr > 255) {
   chr &= 255;
  }
  ret.push(String.fromCharCode(chr));
 }
 return ret.join("");
}

function setValue(ptr, value, type = "i8") {
 if (type.endsWith("*")) type = "*";
 switch (type) {
 case "i1":
  SAFE_HEAP_STORE(ptr >> 0, value, 1);
  break;

 case "i8":
  SAFE_HEAP_STORE(ptr >> 0, value, 1);
  break;

 case "i16":
  SAFE_HEAP_STORE((ptr >> 1) * 2, value, 2);
  break;

 case "i32":
  SAFE_HEAP_STORE((ptr >> 2) * 4, value, 4);
  break;

 case "i64":
  tempI64 = [ value >>> 0, (tempDouble = value, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  SAFE_HEAP_STORE((ptr >> 2) * 4, tempI64[0], 4), SAFE_HEAP_STORE((ptr + 4 >> 2) * 4, tempI64[1], 4);
  break;

 case "float":
  SAFE_HEAP_STORE_D((ptr >> 2) * 4, value, 4);
  break;

 case "double":
  SAFE_HEAP_STORE_D((ptr >> 3) * 8, value, 8);
  break;

 case "*":
  SAFE_HEAP_STORE((ptr >> 2) * 4, value, 4);
  break;

 default:
  abort("invalid type for setValue: " + type);
 }
}

function setValue_safe(ptr, value, type = "i8") {
 if (type.endsWith("*")) type = "*";
 switch (type) {
 case "i1":
  HEAP8[ptr >> 0] = value;
  break;

 case "i8":
  HEAP8[ptr >> 0] = value;
  break;

 case "i16":
  HEAP16[ptr >> 1] = value;
  break;

 case "i32":
  HEAP32[ptr >> 2] = value;
  break;

 case "i64":
  tempI64 = [ value >>> 0, (tempDouble = value, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];
  break;

 case "float":
  HEAPF32[ptr >> 2] = value;
  break;

 case "double":
  HEAPF64[ptr >> 3] = value;
  break;

 case "*":
  HEAPU32[ptr >> 2] = value;
  break;

 default:
  abort("invalid type for setValue: " + type);
 }
}

function unSign(value, bits) {
 if (value >= 0) {
  return value;
 }
 return bits <= 32 ? 2 * Math.abs(1 << bits - 1) + value : Math.pow(2, bits) + value;
}

function ExceptionInfo(excPtr) {
 this.excPtr = excPtr;
 this.ptr = excPtr - 24;
 this.set_type = function(type) {
  SAFE_HEAP_STORE((this.ptr + 4 >> 2) * 4, type, 4);
 };
 this.get_type = function() {
  return SAFE_HEAP_LOAD((this.ptr + 4 >> 2) * 4, 4, 1);
 };
 this.set_destructor = function(destructor) {
  SAFE_HEAP_STORE((this.ptr + 8 >> 2) * 4, destructor, 4);
 };
 this.get_destructor = function() {
  return SAFE_HEAP_LOAD((this.ptr + 8 >> 2) * 4, 4, 1);
 };
 this.set_refcount = function(refcount) {
  SAFE_HEAP_STORE((this.ptr >> 2) * 4, refcount, 4);
 };
 this.set_caught = function(caught) {
  caught = caught ? 1 : 0;
  SAFE_HEAP_STORE(this.ptr + 12 >> 0, caught, 1);
 };
 this.get_caught = function() {
  return SAFE_HEAP_LOAD(this.ptr + 12 >> 0, 1, 0) != 0;
 };
 this.set_rethrown = function(rethrown) {
  rethrown = rethrown ? 1 : 0;
  SAFE_HEAP_STORE(this.ptr + 13 >> 0, rethrown, 1);
 };
 this.get_rethrown = function() {
  return SAFE_HEAP_LOAD(this.ptr + 13 >> 0, 1, 0) != 0;
 };
 this.init = function(type, destructor) {
  this.set_adjusted_ptr(0);
  this.set_type(type);
  this.set_destructor(destructor);
  this.set_refcount(0);
  this.set_caught(false);
  this.set_rethrown(false);
 };
 this.add_ref = function() {
  var value = SAFE_HEAP_LOAD((this.ptr >> 2) * 4, 4, 0);
  SAFE_HEAP_STORE((this.ptr >> 2) * 4, value + 1, 4);
 };
 this.release_ref = function() {
  var prev = SAFE_HEAP_LOAD((this.ptr >> 2) * 4, 4, 0);
  SAFE_HEAP_STORE((this.ptr >> 2) * 4, prev - 1, 4);
  return prev === 1;
 };
 this.set_adjusted_ptr = function(adjustedPtr) {
  SAFE_HEAP_STORE((this.ptr + 16 >> 2) * 4, adjustedPtr, 4);
 };
 this.get_adjusted_ptr = function() {
  return SAFE_HEAP_LOAD((this.ptr + 16 >> 2) * 4, 4, 1);
 };
 this.get_exception_ptr = function() {
  var isPointer = ___cxa_is_pointer_type(this.get_type());
  if (isPointer) {
   return SAFE_HEAP_LOAD((this.excPtr >> 2) * 4, 4, 1);
  }
  var adjusted = this.get_adjusted_ptr();
  if (adjusted !== 0) return adjusted;
  return this.excPtr;
 };
}

var exceptionLast = 0;

var uncaughtExceptionCount = 0;

function ___cxa_throw(ptr, type, destructor) {
 var info = new ExceptionInfo(ptr);
 info.init(type, destructor);
 exceptionLast = ptr;
 uncaughtExceptionCount++;
 throw ptr;
}

function setErrNo(value) {
 SAFE_HEAP_STORE((___errno_location() >> 2) * 4, value, 4);
 return value;
}

var PATH = {
 isAbs: path => path.charAt(0) === "/",
 splitPath: filename => {
  var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
  return splitPathRe.exec(filename).slice(1);
 },
 normalizeArray: (parts, allowAboveRoot) => {
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
   var last = parts[i];
   if (last === ".") {
    parts.splice(i, 1);
   } else if (last === "..") {
    parts.splice(i, 1);
    up++;
   } else if (up) {
    parts.splice(i, 1);
    up--;
   }
  }
  if (allowAboveRoot) {
   for (;up; up--) {
    parts.unshift("..");
   }
  }
  return parts;
 },
 normalize: path => {
  var isAbsolute = PATH.isAbs(path), trailingSlash = path.substr(-1) === "/";
  path = PATH.normalizeArray(path.split("/").filter(p => !!p), !isAbsolute).join("/");
  if (!path && !isAbsolute) {
   path = ".";
  }
  if (path && trailingSlash) {
   path += "/";
  }
  return (isAbsolute ? "/" : "") + path;
 },
 dirname: path => {
  var result = PATH.splitPath(path), root = result[0], dir = result[1];
  if (!root && !dir) {
   return ".";
  }
  if (dir) {
   dir = dir.substr(0, dir.length - 1);
  }
  return root + dir;
 },
 basename: path => {
  if (path === "/") return "/";
  path = PATH.normalize(path);
  path = path.replace(/\/$/, "");
  var lastSlash = path.lastIndexOf("/");
  if (lastSlash === -1) return path;
  return path.substr(lastSlash + 1);
 },
 join: function() {
  var paths = Array.prototype.slice.call(arguments);
  return PATH.normalize(paths.join("/"));
 },
 join2: (l, r) => {
  return PATH.normalize(l + "/" + r);
 }
};

function getRandomDevice() {
 if (typeof crypto == "object" && typeof crypto["getRandomValues"] == "function") {
  var randomBuffer = new Uint8Array(1);
  return () => {
   crypto.getRandomValues(randomBuffer);
   return randomBuffer[0];
  };
 } else if (ENVIRONMENT_IS_NODE) {
  try {
   var crypto_module = require("crypto");
   return () => crypto_module["randomBytes"](1)[0];
  } catch (e) {}
 }
 return () => abort("randomDevice");
}

var PATH_FS = {
 resolve: function() {
  var resolvedPath = "", resolvedAbsolute = false;
  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
   var path = i >= 0 ? arguments[i] : FS.cwd();
   if (typeof path != "string") {
    throw new TypeError("Arguments to path.resolve must be strings");
   } else if (!path) {
    return "";
   }
   resolvedPath = path + "/" + resolvedPath;
   resolvedAbsolute = PATH.isAbs(path);
  }
  resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter(p => !!p), !resolvedAbsolute).join("/");
  return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
 },
 relative: (from, to) => {
  from = PATH_FS.resolve(from).substr(1);
  to = PATH_FS.resolve(to).substr(1);
  function trim(arr) {
   var start = 0;
   for (;start < arr.length; start++) {
    if (arr[start] !== "") break;
   }
   var end = arr.length - 1;
   for (;end >= 0; end--) {
    if (arr[end] !== "") break;
   }
   if (start > end) return [];
   return arr.slice(start, end - start + 1);
  }
  var fromParts = trim(from.split("/"));
  var toParts = trim(to.split("/"));
  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
   if (fromParts[i] !== toParts[i]) {
    samePartsLength = i;
    break;
   }
  }
  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
   outputParts.push("..");
  }
  outputParts = outputParts.concat(toParts.slice(samePartsLength));
  return outputParts.join("/");
 }
};

function intArrayFromString(stringy, dontAddNull, length) {
 var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
 var u8array = new Array(len);
 var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
 if (dontAddNull) u8array.length = numBytesWritten;
 return u8array;
}

var TTY = {
 ttys: [],
 init: function() {},
 shutdown: function() {},
 register: function(dev, ops) {
  TTY.ttys[dev] = {
   input: [],
   output: [],
   ops: ops
  };
  FS.registerDevice(dev, TTY.stream_ops);
 },
 stream_ops: {
  open: function(stream) {
   var tty = TTY.ttys[stream.node.rdev];
   if (!tty) {
    throw new FS.ErrnoError(43);
   }
   stream.tty = tty;
   stream.seekable = false;
  },
  close: function(stream) {
   stream.tty.ops.fsync(stream.tty);
  },
  fsync: function(stream) {
   stream.tty.ops.fsync(stream.tty);
  },
  read: function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.get_char) {
    throw new FS.ErrnoError(60);
   }
   var bytesRead = 0;
   for (var i = 0; i < length; i++) {
    var result;
    try {
     result = stream.tty.ops.get_char(stream.tty);
    } catch (e) {
     throw new FS.ErrnoError(29);
    }
    if (result === undefined && bytesRead === 0) {
     throw new FS.ErrnoError(6);
    }
    if (result === null || result === undefined) break;
    bytesRead++;
    buffer[offset + i] = result;
   }
   if (bytesRead) {
    stream.node.timestamp = Date.now();
   }
   return bytesRead;
  },
  write: function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.put_char) {
    throw new FS.ErrnoError(60);
   }
   try {
    for (var i = 0; i < length; i++) {
     stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
    }
   } catch (e) {
    throw new FS.ErrnoError(29);
   }
   if (length) {
    stream.node.timestamp = Date.now();
   }
   return i;
  }
 },
 default_tty_ops: {
  get_char: function(tty) {
   if (!tty.input.length) {
    var result = null;
    if (ENVIRONMENT_IS_NODE) {
     var BUFSIZE = 256;
     var buf = Buffer.alloc(BUFSIZE);
     var bytesRead = 0;
     try {
      bytesRead = fs.readSync(process.stdin.fd, buf, 0, BUFSIZE, -1);
     } catch (e) {
      if (e.toString().includes("EOF")) bytesRead = 0; else throw e;
     }
     if (bytesRead > 0) {
      result = buf.slice(0, bytesRead).toString("utf-8");
     } else {
      result = null;
     }
    } else if (typeof window != "undefined" && typeof window.prompt == "function") {
     result = window.prompt("Input: ");
     if (result !== null) {
      result += "\n";
     }
    } else if (typeof readline == "function") {
     result = readline();
     if (result !== null) {
      result += "\n";
     }
    }
    if (!result) {
     return null;
    }
    tty.input = intArrayFromString(result, true);
   }
   return tty.input.shift();
  },
  put_char: function(tty, val) {
   if (val === null || val === 10) {
    out(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  },
  fsync: function(tty) {
   if (tty.output && tty.output.length > 0) {
    out(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  }
 },
 default_tty1_ops: {
  put_char: function(tty, val) {
   if (val === null || val === 10) {
    err(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  },
  fsync: function(tty) {
   if (tty.output && tty.output.length > 0) {
    err(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  }
 }
};

function zeroMemory(address, size) {
 HEAPU8.fill(0, address, address + size);
 return address;
}

function alignMemory(size, alignment) {
 return Math.ceil(size / alignment) * alignment;
}

function mmapAlloc(size) {
 abort();
}

var MEMFS = {
 ops_table: null,
 mount: function(mount) {
  return MEMFS.createNode(null, "/", 16384 | 511, 0);
 },
 createNode: function(parent, name, mode, dev) {
  if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
   throw new FS.ErrnoError(63);
  }
  if (!MEMFS.ops_table) {
   MEMFS.ops_table = {
    dir: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      lookup: MEMFS.node_ops.lookup,
      mknod: MEMFS.node_ops.mknod,
      rename: MEMFS.node_ops.rename,
      unlink: MEMFS.node_ops.unlink,
      rmdir: MEMFS.node_ops.rmdir,
      readdir: MEMFS.node_ops.readdir,
      symlink: MEMFS.node_ops.symlink
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek
     }
    },
    file: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek,
      read: MEMFS.stream_ops.read,
      write: MEMFS.stream_ops.write,
      allocate: MEMFS.stream_ops.allocate,
      mmap: MEMFS.stream_ops.mmap,
      msync: MEMFS.stream_ops.msync
     }
    },
    link: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      readlink: MEMFS.node_ops.readlink
     },
     stream: {}
    },
    chrdev: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: FS.chrdev_stream_ops
    }
   };
  }
  var node = FS.createNode(parent, name, mode, dev);
  if (FS.isDir(node.mode)) {
   node.node_ops = MEMFS.ops_table.dir.node;
   node.stream_ops = MEMFS.ops_table.dir.stream;
   node.contents = {};
  } else if (FS.isFile(node.mode)) {
   node.node_ops = MEMFS.ops_table.file.node;
   node.stream_ops = MEMFS.ops_table.file.stream;
   node.usedBytes = 0;
   node.contents = null;
  } else if (FS.isLink(node.mode)) {
   node.node_ops = MEMFS.ops_table.link.node;
   node.stream_ops = MEMFS.ops_table.link.stream;
  } else if (FS.isChrdev(node.mode)) {
   node.node_ops = MEMFS.ops_table.chrdev.node;
   node.stream_ops = MEMFS.ops_table.chrdev.stream;
  }
  node.timestamp = Date.now();
  if (parent) {
   parent.contents[name] = node;
   parent.timestamp = node.timestamp;
  }
  return node;
 },
 getFileDataAsTypedArray: function(node) {
  if (!node.contents) return new Uint8Array(0);
  if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);
  return new Uint8Array(node.contents);
 },
 expandFileStorage: function(node, newCapacity) {
  var prevCapacity = node.contents ? node.contents.length : 0;
  if (prevCapacity >= newCapacity) return;
  var CAPACITY_DOUBLING_MAX = 1024 * 1024;
  newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);
  if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);
  var oldContents = node.contents;
  node.contents = new Uint8Array(newCapacity);
  if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
 },
 resizeFileStorage: function(node, newSize) {
  if (node.usedBytes == newSize) return;
  if (newSize == 0) {
   node.contents = null;
   node.usedBytes = 0;
  } else {
   var oldContents = node.contents;
   node.contents = new Uint8Array(newSize);
   if (oldContents) {
    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
   }
   node.usedBytes = newSize;
  }
 },
 node_ops: {
  getattr: function(node) {
   var attr = {};
   attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
   attr.ino = node.id;
   attr.mode = node.mode;
   attr.nlink = 1;
   attr.uid = 0;
   attr.gid = 0;
   attr.rdev = node.rdev;
   if (FS.isDir(node.mode)) {
    attr.size = 4096;
   } else if (FS.isFile(node.mode)) {
    attr.size = node.usedBytes;
   } else if (FS.isLink(node.mode)) {
    attr.size = node.link.length;
   } else {
    attr.size = 0;
   }
   attr.atime = new Date(node.timestamp);
   attr.mtime = new Date(node.timestamp);
   attr.ctime = new Date(node.timestamp);
   attr.blksize = 4096;
   attr.blocks = Math.ceil(attr.size / attr.blksize);
   return attr;
  },
  setattr: function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
   if (attr.size !== undefined) {
    MEMFS.resizeFileStorage(node, attr.size);
   }
  },
  lookup: function(parent, name) {
   throw FS.genericErrors[44];
  },
  mknod: function(parent, name, mode, dev) {
   return MEMFS.createNode(parent, name, mode, dev);
  },
  rename: function(old_node, new_dir, new_name) {
   if (FS.isDir(old_node.mode)) {
    var new_node;
    try {
     new_node = FS.lookupNode(new_dir, new_name);
    } catch (e) {}
    if (new_node) {
     for (var i in new_node.contents) {
      throw new FS.ErrnoError(55);
     }
    }
   }
   delete old_node.parent.contents[old_node.name];
   old_node.parent.timestamp = Date.now();
   old_node.name = new_name;
   new_dir.contents[new_name] = old_node;
   new_dir.timestamp = old_node.parent.timestamp;
   old_node.parent = new_dir;
  },
  unlink: function(parent, name) {
   delete parent.contents[name];
   parent.timestamp = Date.now();
  },
  rmdir: function(parent, name) {
   var node = FS.lookupNode(parent, name);
   for (var i in node.contents) {
    throw new FS.ErrnoError(55);
   }
   delete parent.contents[name];
   parent.timestamp = Date.now();
  },
  readdir: function(node) {
   var entries = [ ".", ".." ];
   for (var key in node.contents) {
    if (!node.contents.hasOwnProperty(key)) {
     continue;
    }
    entries.push(key);
   }
   return entries;
  },
  symlink: function(parent, newname, oldpath) {
   var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
   node.link = oldpath;
   return node;
  },
  readlink: function(node) {
   if (!FS.isLink(node.mode)) {
    throw new FS.ErrnoError(28);
   }
   return node.link;
  }
 },
 stream_ops: {
  read: function(stream, buffer, offset, length, position) {
   var contents = stream.node.contents;
   if (position >= stream.node.usedBytes) return 0;
   var size = Math.min(stream.node.usedBytes - position, length);
   if (size > 8 && contents.subarray) {
    buffer.set(contents.subarray(position, position + size), offset);
   } else {
    for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
   }
   return size;
  },
  write: function(stream, buffer, offset, length, position, canOwn) {
   if (!length) return 0;
   var node = stream.node;
   node.timestamp = Date.now();
   if (buffer.subarray && (!node.contents || node.contents.subarray)) {
    if (canOwn) {
     node.contents = buffer.subarray(offset, offset + length);
     node.usedBytes = length;
     return length;
    } else if (node.usedBytes === 0 && position === 0) {
     node.contents = buffer.slice(offset, offset + length);
     node.usedBytes = length;
     return length;
    } else if (position + length <= node.usedBytes) {
     node.contents.set(buffer.subarray(offset, offset + length), position);
     return length;
    }
   }
   MEMFS.expandFileStorage(node, position + length);
   if (node.contents.subarray && buffer.subarray) {
    node.contents.set(buffer.subarray(offset, offset + length), position);
   } else {
    for (var i = 0; i < length; i++) {
     node.contents[position + i] = buffer[offset + i];
    }
   }
   node.usedBytes = Math.max(node.usedBytes, position + length);
   return length;
  },
  llseek: function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.usedBytes;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(28);
   }
   return position;
  },
  allocate: function(stream, offset, length) {
   MEMFS.expandFileStorage(stream.node, offset + length);
   stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
  },
  mmap: function(stream, length, position, prot, flags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(43);
   }
   var ptr;
   var allocated;
   var contents = stream.node.contents;
   if (!(flags & 2) && contents.buffer === HEAP8.buffer) {
    allocated = false;
    ptr = contents.byteOffset;
   } else {
    if (position > 0 || position + length < contents.length) {
     if (contents.subarray) {
      contents = contents.subarray(position, position + length);
     } else {
      contents = Array.prototype.slice.call(contents, position, position + length);
     }
    }
    allocated = true;
    ptr = mmapAlloc(length);
    if (!ptr) {
     throw new FS.ErrnoError(48);
    }
    HEAP8.set(contents, ptr);
   }
   return {
    ptr: ptr,
    allocated: allocated
   };
  },
  msync: function(stream, buffer, offset, length, mmapFlags) {
   MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
   return 0;
  }
 }
};

function asyncLoad(url, onload, onerror, noRunDep) {
 var dep = !noRunDep ? getUniqueRunDependency("al " + url) : "";
 readAsync(url, arrayBuffer => {
  assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
  onload(new Uint8Array(arrayBuffer));
  if (dep) removeRunDependency(dep);
 }, event => {
  if (onerror) {
   onerror();
  } else {
   throw 'Loading data file "' + url + '" failed.';
  }
 });
 if (dep) addRunDependency(dep);
}

var FS = {
 root: null,
 mounts: [],
 devices: {},
 streams: [],
 nextInode: 1,
 nameTable: null,
 currentPath: "/",
 initialized: false,
 ignorePermissions: true,
 ErrnoError: null,
 genericErrors: {},
 filesystems: null,
 syncFSRequests: 0,
 lookupPath: (path, opts = {}) => {
  path = PATH_FS.resolve(path);
  if (!path) return {
   path: "",
   node: null
  };
  var defaults = {
   follow_mount: true,
   recurse_count: 0
  };
  opts = Object.assign(defaults, opts);
  if (opts.recurse_count > 8) {
   throw new FS.ErrnoError(32);
  }
  var parts = path.split("/").filter(p => !!p);
  var current = FS.root;
  var current_path = "/";
  for (var i = 0; i < parts.length; i++) {
   var islast = i === parts.length - 1;
   if (islast && opts.parent) {
    break;
   }
   current = FS.lookupNode(current, parts[i]);
   current_path = PATH.join2(current_path, parts[i]);
   if (FS.isMountpoint(current)) {
    if (!islast || islast && opts.follow_mount) {
     current = current.mounted.root;
    }
   }
   if (!islast || opts.follow) {
    var count = 0;
    while (FS.isLink(current.mode)) {
     var link = FS.readlink(current_path);
     current_path = PATH_FS.resolve(PATH.dirname(current_path), link);
     var lookup = FS.lookupPath(current_path, {
      recurse_count: opts.recurse_count + 1
     });
     current = lookup.node;
     if (count++ > 40) {
      throw new FS.ErrnoError(32);
     }
    }
   }
  }
  return {
   path: current_path,
   node: current
  };
 },
 getPath: node => {
  var path;
  while (true) {
   if (FS.isRoot(node)) {
    var mount = node.mount.mountpoint;
    if (!path) return mount;
    return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
   }
   path = path ? node.name + "/" + path : node.name;
   node = node.parent;
  }
 },
 hashName: (parentid, name) => {
  var hash = 0;
  for (var i = 0; i < name.length; i++) {
   hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
  }
  return (parentid + hash >>> 0) % FS.nameTable.length;
 },
 hashAddNode: node => {
  var hash = FS.hashName(node.parent.id, node.name);
  node.name_next = FS.nameTable[hash];
  FS.nameTable[hash] = node;
 },
 hashRemoveNode: node => {
  var hash = FS.hashName(node.parent.id, node.name);
  if (FS.nameTable[hash] === node) {
   FS.nameTable[hash] = node.name_next;
  } else {
   var current = FS.nameTable[hash];
   while (current) {
    if (current.name_next === node) {
     current.name_next = node.name_next;
     break;
    }
    current = current.name_next;
   }
  }
 },
 lookupNode: (parent, name) => {
  var errCode = FS.mayLookup(parent);
  if (errCode) {
   throw new FS.ErrnoError(errCode, parent);
  }
  var hash = FS.hashName(parent.id, name);
  for (var node = FS.nameTable[hash]; node; node = node.name_next) {
   var nodeName = node.name;
   if (node.parent.id === parent.id && nodeName === name) {
    return node;
   }
  }
  return FS.lookup(parent, name);
 },
 createNode: (parent, name, mode, rdev) => {
  var node = new FS.FSNode(parent, name, mode, rdev);
  FS.hashAddNode(node);
  return node;
 },
 destroyNode: node => {
  FS.hashRemoveNode(node);
 },
 isRoot: node => {
  return node === node.parent;
 },
 isMountpoint: node => {
  return !!node.mounted;
 },
 isFile: mode => {
  return (mode & 61440) === 32768;
 },
 isDir: mode => {
  return (mode & 61440) === 16384;
 },
 isLink: mode => {
  return (mode & 61440) === 40960;
 },
 isChrdev: mode => {
  return (mode & 61440) === 8192;
 },
 isBlkdev: mode => {
  return (mode & 61440) === 24576;
 },
 isFIFO: mode => {
  return (mode & 61440) === 4096;
 },
 isSocket: mode => {
  return (mode & 49152) === 49152;
 },
 flagModes: {
  "r": 0,
  "r+": 2,
  "w": 577,
  "w+": 578,
  "a": 1089,
  "a+": 1090
 },
 modeStringToFlags: str => {
  var flags = FS.flagModes[str];
  if (typeof flags == "undefined") {
   throw new Error("Unknown file open mode: " + str);
  }
  return flags;
 },
 flagsToPermissionString: flag => {
  var perms = [ "r", "w", "rw" ][flag & 3];
  if (flag & 512) {
   perms += "w";
  }
  return perms;
 },
 nodePermissions: (node, perms) => {
  if (FS.ignorePermissions) {
   return 0;
  }
  if (perms.includes("r") && !(node.mode & 292)) {
   return 2;
  } else if (perms.includes("w") && !(node.mode & 146)) {
   return 2;
  } else if (perms.includes("x") && !(node.mode & 73)) {
   return 2;
  }
  return 0;
 },
 mayLookup: dir => {
  var errCode = FS.nodePermissions(dir, "x");
  if (errCode) return errCode;
  if (!dir.node_ops.lookup) return 2;
  return 0;
 },
 mayCreate: (dir, name) => {
  try {
   var node = FS.lookupNode(dir, name);
   return 20;
  } catch (e) {}
  return FS.nodePermissions(dir, "wx");
 },
 mayDelete: (dir, name, isdir) => {
  var node;
  try {
   node = FS.lookupNode(dir, name);
  } catch (e) {
   return e.errno;
  }
  var errCode = FS.nodePermissions(dir, "wx");
  if (errCode) {
   return errCode;
  }
  if (isdir) {
   if (!FS.isDir(node.mode)) {
    return 54;
   }
   if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
    return 10;
   }
  } else {
   if (FS.isDir(node.mode)) {
    return 31;
   }
  }
  return 0;
 },
 mayOpen: (node, flags) => {
  if (!node) {
   return 44;
  }
  if (FS.isLink(node.mode)) {
   return 32;
  } else if (FS.isDir(node.mode)) {
   if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
    return 31;
   }
  }
  return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
 },
 MAX_OPEN_FDS: 4096,
 nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {
  for (var fd = fd_start; fd <= fd_end; fd++) {
   if (!FS.streams[fd]) {
    return fd;
   }
  }
  throw new FS.ErrnoError(33);
 },
 getStream: fd => FS.streams[fd],
 createStream: (stream, fd_start, fd_end) => {
  if (!FS.FSStream) {
   FS.FSStream = function() {
    this.shared = {};
   };
   FS.FSStream.prototype = {};
   Object.defineProperties(FS.FSStream.prototype, {
    object: {
     get: function() {
      return this.node;
     },
     set: function(val) {
      this.node = val;
     }
    },
    isRead: {
     get: function() {
      return (this.flags & 2097155) !== 1;
     }
    },
    isWrite: {
     get: function() {
      return (this.flags & 2097155) !== 0;
     }
    },
    isAppend: {
     get: function() {
      return this.flags & 1024;
     }
    },
    flags: {
     get: function() {
      return this.shared.flags;
     },
     set: function(val) {
      this.shared.flags = val;
     }
    },
    position: {
     get: function() {
      return this.shared.position;
     },
     set: function(val) {
      this.shared.position = val;
     }
    }
   });
  }
  stream = Object.assign(new FS.FSStream(), stream);
  var fd = FS.nextfd(fd_start, fd_end);
  stream.fd = fd;
  FS.streams[fd] = stream;
  return stream;
 },
 closeStream: fd => {
  FS.streams[fd] = null;
 },
 chrdev_stream_ops: {
  open: stream => {
   var device = FS.getDevice(stream.node.rdev);
   stream.stream_ops = device.stream_ops;
   if (stream.stream_ops.open) {
    stream.stream_ops.open(stream);
   }
  },
  llseek: () => {
   throw new FS.ErrnoError(70);
  }
 },
 major: dev => dev >> 8,
 minor: dev => dev & 255,
 makedev: (ma, mi) => ma << 8 | mi,
 registerDevice: (dev, ops) => {
  FS.devices[dev] = {
   stream_ops: ops
  };
 },
 getDevice: dev => FS.devices[dev],
 getMounts: mount => {
  var mounts = [];
  var check = [ mount ];
  while (check.length) {
   var m = check.pop();
   mounts.push(m);
   check.push.apply(check, m.mounts);
  }
  return mounts;
 },
 syncfs: (populate, callback) => {
  if (typeof populate == "function") {
   callback = populate;
   populate = false;
  }
  FS.syncFSRequests++;
  if (FS.syncFSRequests > 1) {
   err("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
  }
  var mounts = FS.getMounts(FS.root.mount);
  var completed = 0;
  function doCallback(errCode) {
   FS.syncFSRequests--;
   return callback(errCode);
  }
  function done(errCode) {
   if (errCode) {
    if (!done.errored) {
     done.errored = true;
     return doCallback(errCode);
    }
    return;
   }
   if (++completed >= mounts.length) {
    doCallback(null);
   }
  }
  mounts.forEach(mount => {
   if (!mount.type.syncfs) {
    return done(null);
   }
   mount.type.syncfs(mount, populate, done);
  });
 },
 mount: (type, opts, mountpoint) => {
  var root = mountpoint === "/";
  var pseudo = !mountpoint;
  var node;
  if (root && FS.root) {
   throw new FS.ErrnoError(10);
  } else if (!root && !pseudo) {
   var lookup = FS.lookupPath(mountpoint, {
    follow_mount: false
   });
   mountpoint = lookup.path;
   node = lookup.node;
   if (FS.isMountpoint(node)) {
    throw new FS.ErrnoError(10);
   }
   if (!FS.isDir(node.mode)) {
    throw new FS.ErrnoError(54);
   }
  }
  var mount = {
   type: type,
   opts: opts,
   mountpoint: mountpoint,
   mounts: []
  };
  var mountRoot = type.mount(mount);
  mountRoot.mount = mount;
  mount.root = mountRoot;
  if (root) {
   FS.root = mountRoot;
  } else if (node) {
   node.mounted = mount;
   if (node.mount) {
    node.mount.mounts.push(mount);
   }
  }
  return mountRoot;
 },
 unmount: mountpoint => {
  var lookup = FS.lookupPath(mountpoint, {
   follow_mount: false
  });
  if (!FS.isMountpoint(lookup.node)) {
   throw new FS.ErrnoError(28);
  }
  var node = lookup.node;
  var mount = node.mounted;
  var mounts = FS.getMounts(mount);
  Object.keys(FS.nameTable).forEach(hash => {
   var current = FS.nameTable[hash];
   while (current) {
    var next = current.name_next;
    if (mounts.includes(current.mount)) {
     FS.destroyNode(current);
    }
    current = next;
   }
  });
  node.mounted = null;
  var idx = node.mount.mounts.indexOf(mount);
  node.mount.mounts.splice(idx, 1);
 },
 lookup: (parent, name) => {
  return parent.node_ops.lookup(parent, name);
 },
 mknod: (path, mode, dev) => {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  if (!name || name === "." || name === "..") {
   throw new FS.ErrnoError(28);
  }
  var errCode = FS.mayCreate(parent, name);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!parent.node_ops.mknod) {
   throw new FS.ErrnoError(63);
  }
  return parent.node_ops.mknod(parent, name, mode, dev);
 },
 create: (path, mode) => {
  mode = mode !== undefined ? mode : 438;
  mode &= 4095;
  mode |= 32768;
  return FS.mknod(path, mode, 0);
 },
 mkdir: (path, mode) => {
  mode = mode !== undefined ? mode : 511;
  mode &= 511 | 512;
  mode |= 16384;
  return FS.mknod(path, mode, 0);
 },
 mkdirTree: (path, mode) => {
  var dirs = path.split("/");
  var d = "";
  for (var i = 0; i < dirs.length; ++i) {
   if (!dirs[i]) continue;
   d += "/" + dirs[i];
   try {
    FS.mkdir(d, mode);
   } catch (e) {
    if (e.errno != 20) throw e;
   }
  }
 },
 mkdev: (path, mode, dev) => {
  if (typeof dev == "undefined") {
   dev = mode;
   mode = 438;
  }
  mode |= 8192;
  return FS.mknod(path, mode, dev);
 },
 symlink: (oldpath, newpath) => {
  if (!PATH_FS.resolve(oldpath)) {
   throw new FS.ErrnoError(44);
  }
  var lookup = FS.lookupPath(newpath, {
   parent: true
  });
  var parent = lookup.node;
  if (!parent) {
   throw new FS.ErrnoError(44);
  }
  var newname = PATH.basename(newpath);
  var errCode = FS.mayCreate(parent, newname);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!parent.node_ops.symlink) {
   throw new FS.ErrnoError(63);
  }
  return parent.node_ops.symlink(parent, newname, oldpath);
 },
 rename: (old_path, new_path) => {
  var old_dirname = PATH.dirname(old_path);
  var new_dirname = PATH.dirname(new_path);
  var old_name = PATH.basename(old_path);
  var new_name = PATH.basename(new_path);
  var lookup, old_dir, new_dir;
  lookup = FS.lookupPath(old_path, {
   parent: true
  });
  old_dir = lookup.node;
  lookup = FS.lookupPath(new_path, {
   parent: true
  });
  new_dir = lookup.node;
  if (!old_dir || !new_dir) throw new FS.ErrnoError(44);
  if (old_dir.mount !== new_dir.mount) {
   throw new FS.ErrnoError(75);
  }
  var old_node = FS.lookupNode(old_dir, old_name);
  var relative = PATH_FS.relative(old_path, new_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(28);
  }
  relative = PATH_FS.relative(new_path, old_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(55);
  }
  var new_node;
  try {
   new_node = FS.lookupNode(new_dir, new_name);
  } catch (e) {}
  if (old_node === new_node) {
   return;
  }
  var isdir = FS.isDir(old_node.mode);
  var errCode = FS.mayDelete(old_dir, old_name, isdir);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!old_dir.node_ops.rename) {
   throw new FS.ErrnoError(63);
  }
  if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
   throw new FS.ErrnoError(10);
  }
  if (new_dir !== old_dir) {
   errCode = FS.nodePermissions(old_dir, "w");
   if (errCode) {
    throw new FS.ErrnoError(errCode);
   }
  }
  FS.hashRemoveNode(old_node);
  try {
   old_dir.node_ops.rename(old_node, new_dir, new_name);
  } catch (e) {
   throw e;
  } finally {
   FS.hashAddNode(old_node);
  }
 },
 rmdir: path => {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var errCode = FS.mayDelete(parent, name, true);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!parent.node_ops.rmdir) {
   throw new FS.ErrnoError(63);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(10);
  }
  parent.node_ops.rmdir(parent, name);
  FS.destroyNode(node);
 },
 readdir: path => {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  if (!node.node_ops.readdir) {
   throw new FS.ErrnoError(54);
  }
  return node.node_ops.readdir(node);
 },
 unlink: path => {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  if (!parent) {
   throw new FS.ErrnoError(44);
  }
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var errCode = FS.mayDelete(parent, name, false);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!parent.node_ops.unlink) {
   throw new FS.ErrnoError(63);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(10);
  }
  parent.node_ops.unlink(parent, name);
  FS.destroyNode(node);
 },
 readlink: path => {
  var lookup = FS.lookupPath(path);
  var link = lookup.node;
  if (!link) {
   throw new FS.ErrnoError(44);
  }
  if (!link.node_ops.readlink) {
   throw new FS.ErrnoError(28);
  }
  return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
 },
 stat: (path, dontFollow) => {
  var lookup = FS.lookupPath(path, {
   follow: !dontFollow
  });
  var node = lookup.node;
  if (!node) {
   throw new FS.ErrnoError(44);
  }
  if (!node.node_ops.getattr) {
   throw new FS.ErrnoError(63);
  }
  return node.node_ops.getattr(node);
 },
 lstat: path => {
  return FS.stat(path, true);
 },
 chmod: (path, mode, dontFollow) => {
  var node;
  if (typeof path == "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(63);
  }
  node.node_ops.setattr(node, {
   mode: mode & 4095 | node.mode & ~4095,
   timestamp: Date.now()
  });
 },
 lchmod: (path, mode) => {
  FS.chmod(path, mode, true);
 },
 fchmod: (fd, mode) => {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(8);
  }
  FS.chmod(stream.node, mode);
 },
 chown: (path, uid, gid, dontFollow) => {
  var node;
  if (typeof path == "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(63);
  }
  node.node_ops.setattr(node, {
   timestamp: Date.now()
  });
 },
 lchown: (path, uid, gid) => {
  FS.chown(path, uid, gid, true);
 },
 fchown: (fd, uid, gid) => {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(8);
  }
  FS.chown(stream.node, uid, gid);
 },
 truncate: (path, len) => {
  if (len < 0) {
   throw new FS.ErrnoError(28);
  }
  var node;
  if (typeof path == "string") {
   var lookup = FS.lookupPath(path, {
    follow: true
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(63);
  }
  if (FS.isDir(node.mode)) {
   throw new FS.ErrnoError(31);
  }
  if (!FS.isFile(node.mode)) {
   throw new FS.ErrnoError(28);
  }
  var errCode = FS.nodePermissions(node, "w");
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  node.node_ops.setattr(node, {
   size: len,
   timestamp: Date.now()
  });
 },
 ftruncate: (fd, len) => {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(8);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(28);
  }
  FS.truncate(stream.node, len);
 },
 utime: (path, atime, mtime) => {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  node.node_ops.setattr(node, {
   timestamp: Math.max(atime, mtime)
  });
 },
 open: (path, flags, mode) => {
  if (path === "") {
   throw new FS.ErrnoError(44);
  }
  flags = typeof flags == "string" ? FS.modeStringToFlags(flags) : flags;
  mode = typeof mode == "undefined" ? 438 : mode;
  if (flags & 64) {
   mode = mode & 4095 | 32768;
  } else {
   mode = 0;
  }
  var node;
  if (typeof path == "object") {
   node = path;
  } else {
   path = PATH.normalize(path);
   try {
    var lookup = FS.lookupPath(path, {
     follow: !(flags & 131072)
    });
    node = lookup.node;
   } catch (e) {}
  }
  var created = false;
  if (flags & 64) {
   if (node) {
    if (flags & 128) {
     throw new FS.ErrnoError(20);
    }
   } else {
    node = FS.mknod(path, mode, 0);
    created = true;
   }
  }
  if (!node) {
   throw new FS.ErrnoError(44);
  }
  if (FS.isChrdev(node.mode)) {
   flags &= ~512;
  }
  if (flags & 65536 && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(54);
  }
  if (!created) {
   var errCode = FS.mayOpen(node, flags);
   if (errCode) {
    throw new FS.ErrnoError(errCode);
   }
  }
  if (flags & 512 && !created) {
   FS.truncate(node, 0);
  }
  flags &= ~(128 | 512 | 131072);
  var stream = FS.createStream({
   node: node,
   path: FS.getPath(node),
   flags: flags,
   seekable: true,
   position: 0,
   stream_ops: node.stream_ops,
   ungotten: [],
   error: false
  });
  if (stream.stream_ops.open) {
   stream.stream_ops.open(stream);
  }
  if (Module["logReadFiles"] && !(flags & 1)) {
   if (!FS.readFiles) FS.readFiles = {};
   if (!(path in FS.readFiles)) {
    FS.readFiles[path] = 1;
   }
  }
  return stream;
 },
 close: stream => {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if (stream.getdents) stream.getdents = null;
  try {
   if (stream.stream_ops.close) {
    stream.stream_ops.close(stream);
   }
  } catch (e) {
   throw e;
  } finally {
   FS.closeStream(stream.fd);
  }
  stream.fd = null;
 },
 isClosed: stream => {
  return stream.fd === null;
 },
 llseek: (stream, offset, whence) => {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if (!stream.seekable || !stream.stream_ops.llseek) {
   throw new FS.ErrnoError(70);
  }
  if (whence != 0 && whence != 1 && whence != 2) {
   throw new FS.ErrnoError(28);
  }
  stream.position = stream.stream_ops.llseek(stream, offset, whence);
  stream.ungotten = [];
  return stream.position;
 },
 read: (stream, buffer, offset, length, position) => {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(28);
  }
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(8);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(31);
  }
  if (!stream.stream_ops.read) {
   throw new FS.ErrnoError(28);
  }
  var seeking = typeof position != "undefined";
  if (!seeking) {
   position = stream.position;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(70);
  }
  var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
  if (!seeking) stream.position += bytesRead;
  return bytesRead;
 },
 write: (stream, buffer, offset, length, position, canOwn) => {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(28);
  }
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(8);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(31);
  }
  if (!stream.stream_ops.write) {
   throw new FS.ErrnoError(28);
  }
  if (stream.seekable && stream.flags & 1024) {
   FS.llseek(stream, 0, 2);
  }
  var seeking = typeof position != "undefined";
  if (!seeking) {
   position = stream.position;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(70);
  }
  var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
  if (!seeking) stream.position += bytesWritten;
  return bytesWritten;
 },
 allocate: (stream, offset, length) => {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if (offset < 0 || length <= 0) {
   throw new FS.ErrnoError(28);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(8);
  }
  if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(43);
  }
  if (!stream.stream_ops.allocate) {
   throw new FS.ErrnoError(138);
  }
  stream.stream_ops.allocate(stream, offset, length);
 },
 mmap: (stream, length, position, prot, flags) => {
  if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {
   throw new FS.ErrnoError(2);
  }
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(2);
  }
  if (!stream.stream_ops.mmap) {
   throw new FS.ErrnoError(43);
  }
  return stream.stream_ops.mmap(stream, length, position, prot, flags);
 },
 msync: (stream, buffer, offset, length, mmapFlags) => {
  if (!stream.stream_ops.msync) {
   return 0;
  }
  return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
 },
 munmap: stream => 0,
 ioctl: (stream, cmd, arg) => {
  if (!stream.stream_ops.ioctl) {
   throw new FS.ErrnoError(59);
  }
  return stream.stream_ops.ioctl(stream, cmd, arg);
 },
 readFile: (path, opts = {}) => {
  opts.flags = opts.flags || 0;
  opts.encoding = opts.encoding || "binary";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error('Invalid encoding type "' + opts.encoding + '"');
  }
  var ret;
  var stream = FS.open(path, opts.flags);
  var stat = FS.stat(path);
  var length = stat.size;
  var buf = new Uint8Array(length);
  FS.read(stream, buf, 0, length, 0);
  if (opts.encoding === "utf8") {
   ret = UTF8ArrayToString(buf, 0);
  } else if (opts.encoding === "binary") {
   ret = buf;
  }
  FS.close(stream);
  return ret;
 },
 writeFile: (path, data, opts = {}) => {
  opts.flags = opts.flags || 577;
  var stream = FS.open(path, opts.flags, opts.mode);
  if (typeof data == "string") {
   var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
   var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
   FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
  } else if (ArrayBuffer.isView(data)) {
   FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
  } else {
   throw new Error("Unsupported data type");
  }
  FS.close(stream);
 },
 cwd: () => FS.currentPath,
 chdir: path => {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  if (lookup.node === null) {
   throw new FS.ErrnoError(44);
  }
  if (!FS.isDir(lookup.node.mode)) {
   throw new FS.ErrnoError(54);
  }
  var errCode = FS.nodePermissions(lookup.node, "x");
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  FS.currentPath = lookup.path;
 },
 createDefaultDirectories: () => {
  FS.mkdir("/tmp");
  FS.mkdir("/home");
  FS.mkdir("/home/web_user");
 },
 createDefaultDevices: () => {
  FS.mkdir("/dev");
  FS.registerDevice(FS.makedev(1, 3), {
   read: () => 0,
   write: (stream, buffer, offset, length, pos) => length
  });
  FS.mkdev("/dev/null", FS.makedev(1, 3));
  TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
  TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
  FS.mkdev("/dev/tty", FS.makedev(5, 0));
  FS.mkdev("/dev/tty1", FS.makedev(6, 0));
  var random_device = getRandomDevice();
  FS.createDevice("/dev", "random", random_device);
  FS.createDevice("/dev", "urandom", random_device);
  FS.mkdir("/dev/shm");
  FS.mkdir("/dev/shm/tmp");
 },
 createSpecialDirectories: () => {
  FS.mkdir("/proc");
  var proc_self = FS.mkdir("/proc/self");
  FS.mkdir("/proc/self/fd");
  FS.mount({
   mount: () => {
    var node = FS.createNode(proc_self, "fd", 16384 | 511, 73);
    node.node_ops = {
     lookup: (parent, name) => {
      var fd = +name;
      var stream = FS.getStream(fd);
      if (!stream) throw new FS.ErrnoError(8);
      var ret = {
       parent: null,
       mount: {
        mountpoint: "fake"
       },
       node_ops: {
        readlink: () => stream.path
       }
      };
      ret.parent = ret;
      return ret;
     }
    };
    return node;
   }
  }, {}, "/proc/self/fd");
 },
 createStandardStreams: () => {
  if (Module["stdin"]) {
   FS.createDevice("/dev", "stdin", Module["stdin"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdin");
  }
  if (Module["stdout"]) {
   FS.createDevice("/dev", "stdout", null, Module["stdout"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdout");
  }
  if (Module["stderr"]) {
   FS.createDevice("/dev", "stderr", null, Module["stderr"]);
  } else {
   FS.symlink("/dev/tty1", "/dev/stderr");
  }
  var stdin = FS.open("/dev/stdin", 0);
  var stdout = FS.open("/dev/stdout", 1);
  var stderr = FS.open("/dev/stderr", 1);
 },
 ensureErrnoError: () => {
  if (FS.ErrnoError) return;
  FS.ErrnoError = function ErrnoError(errno, node) {
   this.name = "ErrnoError";
   this.node = node;
   this.setErrno = function(errno) {
    this.errno = errno;
   };
   this.setErrno(errno);
   this.message = "FS error";
  };
  FS.ErrnoError.prototype = new Error();
  FS.ErrnoError.prototype.constructor = FS.ErrnoError;
  [ 44 ].forEach(code => {
   FS.genericErrors[code] = new FS.ErrnoError(code);
   FS.genericErrors[code].stack = "<generic error, no stack>";
  });
 },
 staticInit: () => {
  FS.ensureErrnoError();
  FS.nameTable = new Array(4096);
  FS.mount(MEMFS, {}, "/");
  FS.createDefaultDirectories();
  FS.createDefaultDevices();
  FS.createSpecialDirectories();
  FS.filesystems = {
   "MEMFS": MEMFS
  };
 },
 init: (input, output, error) => {
  FS.init.initialized = true;
  FS.ensureErrnoError();
  Module["stdin"] = input || Module["stdin"];
  Module["stdout"] = output || Module["stdout"];
  Module["stderr"] = error || Module["stderr"];
  FS.createStandardStreams();
 },
 quit: () => {
  FS.init.initialized = false;
  for (var i = 0; i < FS.streams.length; i++) {
   var stream = FS.streams[i];
   if (!stream) {
    continue;
   }
   FS.close(stream);
  }
 },
 getMode: (canRead, canWrite) => {
  var mode = 0;
  if (canRead) mode |= 292 | 73;
  if (canWrite) mode |= 146;
  return mode;
 },
 findObject: (path, dontResolveLastLink) => {
  var ret = FS.analyzePath(path, dontResolveLastLink);
  if (!ret.exists) {
   return null;
  }
  return ret.object;
 },
 analyzePath: (path, dontResolveLastLink) => {
  try {
   var lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   path = lookup.path;
  } catch (e) {}
  var ret = {
   isRoot: false,
   exists: false,
   error: 0,
   name: null,
   path: null,
   object: null,
   parentExists: false,
   parentPath: null,
   parentObject: null
  };
  try {
   var lookup = FS.lookupPath(path, {
    parent: true
   });
   ret.parentExists = true;
   ret.parentPath = lookup.path;
   ret.parentObject = lookup.node;
   ret.name = PATH.basename(path);
   lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   ret.exists = true;
   ret.path = lookup.path;
   ret.object = lookup.node;
   ret.name = lookup.node.name;
   ret.isRoot = lookup.path === "/";
  } catch (e) {
   ret.error = e.errno;
  }
  return ret;
 },
 createPath: (parent, path, canRead, canWrite) => {
  parent = typeof parent == "string" ? parent : FS.getPath(parent);
  var parts = path.split("/").reverse();
  while (parts.length) {
   var part = parts.pop();
   if (!part) continue;
   var current = PATH.join2(parent, part);
   try {
    FS.mkdir(current);
   } catch (e) {}
   parent = current;
  }
  return current;
 },
 createFile: (parent, name, properties, canRead, canWrite) => {
  var path = PATH.join2(typeof parent == "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.create(path, mode);
 },
 createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {
  var path = name;
  if (parent) {
   parent = typeof parent == "string" ? parent : FS.getPath(parent);
   path = name ? PATH.join2(parent, name) : parent;
  }
  var mode = FS.getMode(canRead, canWrite);
  var node = FS.create(path, mode);
  if (data) {
   if (typeof data == "string") {
    var arr = new Array(data.length);
    for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
    data = arr;
   }
   FS.chmod(node, mode | 146);
   var stream = FS.open(node, 577);
   FS.write(stream, data, 0, data.length, 0, canOwn);
   FS.close(stream);
   FS.chmod(node, mode);
  }
  return node;
 },
 createDevice: (parent, name, input, output) => {
  var path = PATH.join2(typeof parent == "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(!!input, !!output);
  if (!FS.createDevice.major) FS.createDevice.major = 64;
  var dev = FS.makedev(FS.createDevice.major++, 0);
  FS.registerDevice(dev, {
   open: stream => {
    stream.seekable = false;
   },
   close: stream => {
    if (output && output.buffer && output.buffer.length) {
     output(10);
    }
   },
   read: (stream, buffer, offset, length, pos) => {
    var bytesRead = 0;
    for (var i = 0; i < length; i++) {
     var result;
     try {
      result = input();
     } catch (e) {
      throw new FS.ErrnoError(29);
     }
     if (result === undefined && bytesRead === 0) {
      throw new FS.ErrnoError(6);
     }
     if (result === null || result === undefined) break;
     bytesRead++;
     buffer[offset + i] = result;
    }
    if (bytesRead) {
     stream.node.timestamp = Date.now();
    }
    return bytesRead;
   },
   write: (stream, buffer, offset, length, pos) => {
    for (var i = 0; i < length; i++) {
     try {
      output(buffer[offset + i]);
     } catch (e) {
      throw new FS.ErrnoError(29);
     }
    }
    if (length) {
     stream.node.timestamp = Date.now();
    }
    return i;
   }
  });
  return FS.mkdev(path, mode, dev);
 },
 forceLoadFile: obj => {
  if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
  if (typeof XMLHttpRequest != "undefined") {
   throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
  } else if (read_) {
   try {
    obj.contents = intArrayFromString(read_(obj.url), true);
    obj.usedBytes = obj.contents.length;
   } catch (e) {
    throw new FS.ErrnoError(29);
   }
  } else {
   throw new Error("Cannot load without read() or XMLHttpRequest.");
  }
 },
 createLazyFile: (parent, name, url, canRead, canWrite) => {
  function LazyUint8Array() {
   this.lengthKnown = false;
   this.chunks = [];
  }
  LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
   if (idx > this.length - 1 || idx < 0) {
    return undefined;
   }
   var chunkOffset = idx % this.chunkSize;
   var chunkNum = idx / this.chunkSize | 0;
   return this.getter(chunkNum)[chunkOffset];
  };
  LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
   this.getter = getter;
  };
  LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
   var xhr = new XMLHttpRequest();
   xhr.open("HEAD", url, false);
   xhr.send(null);
   if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
   var datalength = Number(xhr.getResponseHeader("Content-length"));
   var header;
   var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
   var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
   var chunkSize = 1024 * 1024;
   if (!hasByteServing) chunkSize = datalength;
   var doXHR = (from, to) => {
    if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
    if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
    var xhr = new XMLHttpRequest();
    xhr.open("GET", url, false);
    if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
    xhr.responseType = "arraybuffer";
    if (xhr.overrideMimeType) {
     xhr.overrideMimeType("text/plain; charset=x-user-defined");
    }
    xhr.send(null);
    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
    if (xhr.response !== undefined) {
     return new Uint8Array(xhr.response || []);
    }
    return intArrayFromString(xhr.responseText || "", true);
   };
   var lazyArray = this;
   lazyArray.setDataGetter(chunkNum => {
    var start = chunkNum * chunkSize;
    var end = (chunkNum + 1) * chunkSize - 1;
    end = Math.min(end, datalength - 1);
    if (typeof lazyArray.chunks[chunkNum] == "undefined") {
     lazyArray.chunks[chunkNum] = doXHR(start, end);
    }
    if (typeof lazyArray.chunks[chunkNum] == "undefined") throw new Error("doXHR failed!");
    return lazyArray.chunks[chunkNum];
   });
   if (usesGzip || !datalength) {
    chunkSize = datalength = 1;
    datalength = this.getter(0).length;
    chunkSize = datalength;
    out("LazyFiles on gzip forces download of the whole file when length is accessed");
   }
   this._length = datalength;
   this._chunkSize = chunkSize;
   this.lengthKnown = true;
  };
  if (typeof XMLHttpRequest != "undefined") {
   if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
   var lazyArray = new LazyUint8Array();
   Object.defineProperties(lazyArray, {
    length: {
     get: function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._length;
     }
    },
    chunkSize: {
     get: function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._chunkSize;
     }
    }
   });
   var properties = {
    isDevice: false,
    contents: lazyArray
   };
  } else {
   var properties = {
    isDevice: false,
    url: url
   };
  }
  var node = FS.createFile(parent, name, properties, canRead, canWrite);
  if (properties.contents) {
   node.contents = properties.contents;
  } else if (properties.url) {
   node.contents = null;
   node.url = properties.url;
  }
  Object.defineProperties(node, {
   usedBytes: {
    get: function() {
     return this.contents.length;
    }
   }
  });
  var stream_ops = {};
  var keys = Object.keys(node.stream_ops);
  keys.forEach(key => {
   var fn = node.stream_ops[key];
   stream_ops[key] = function forceLoadLazyFile() {
    FS.forceLoadFile(node);
    return fn.apply(null, arguments);
   };
  });
  function writeChunks(stream, buffer, offset, length, position) {
   var contents = stream.node.contents;
   if (position >= contents.length) return 0;
   var size = Math.min(contents.length - position, length);
   if (contents.slice) {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents[position + i];
    }
   } else {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents.get(position + i);
    }
   }
   return size;
  }
  stream_ops.read = (stream, buffer, offset, length, position) => {
   FS.forceLoadFile(node);
   return writeChunks(stream, buffer, offset, length, position);
  };
  stream_ops.mmap = (stream, length, position, prot, flags) => {
   FS.forceLoadFile(node);
   var ptr = mmapAlloc(length);
   if (!ptr) {
    throw new FS.ErrnoError(48);
   }
   writeChunks(stream, HEAP8, ptr, length, position);
   return {
    ptr: ptr,
    allocated: true
   };
  };
  node.stream_ops = stream_ops;
  return node;
 },
 createPreloadedFile: (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {
  var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;
  var dep = getUniqueRunDependency("cp " + fullname);
  function processData(byteArray) {
   function finish(byteArray) {
    if (preFinish) preFinish();
    if (!dontCreateFile) {
     FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
    }
    if (onload) onload();
    removeRunDependency(dep);
   }
   if (Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {
    if (onerror) onerror();
    removeRunDependency(dep);
   })) {
    return;
   }
   finish(byteArray);
  }
  addRunDependency(dep);
  if (typeof url == "string") {
   asyncLoad(url, byteArray => processData(byteArray), onerror);
  } else {
   processData(url);
  }
 },
 indexedDB: () => {
  return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
 },
 DB_NAME: () => {
  return "EM_FS_" + window.location.pathname;
 },
 DB_VERSION: 20,
 DB_STORE_NAME: "FILE_DATA",
 saveFilesToDB: (paths, onload = (() => {}), onerror = (() => {})) => {
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = () => {
   out("creating db");
   var db = openRequest.result;
   db.createObjectStore(FS.DB_STORE_NAME);
  };
  openRequest.onsuccess = () => {
   var db = openRequest.result;
   var transaction = db.transaction([ FS.DB_STORE_NAME ], "readwrite");
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach(path => {
    var putRequest = files.put(FS.analyzePath(path).object.contents, path);
    putRequest.onsuccess = () => {
     ok++;
     if (ok + fail == total) finish();
    };
    putRequest.onerror = () => {
     fail++;
     if (ok + fail == total) finish();
    };
   });
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 },
 loadFilesFromDB: (paths, onload = (() => {}), onerror = (() => {})) => {
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = onerror;
  openRequest.onsuccess = () => {
   var db = openRequest.result;
   try {
    var transaction = db.transaction([ FS.DB_STORE_NAME ], "readonly");
   } catch (e) {
    onerror(e);
    return;
   }
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach(path => {
    var getRequest = files.get(path);
    getRequest.onsuccess = () => {
     if (FS.analyzePath(path).exists) {
      FS.unlink(path);
     }
     FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
     ok++;
     if (ok + fail == total) finish();
    };
    getRequest.onerror = () => {
     fail++;
     if (ok + fail == total) finish();
    };
   });
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 }
};

var SYSCALLS = {
 DEFAULT_POLLMASK: 5,
 calculateAt: function(dirfd, path, allowEmpty) {
  if (PATH.isAbs(path)) {
   return path;
  }
  var dir;
  if (dirfd === -100) {
   dir = FS.cwd();
  } else {
   var dirstream = SYSCALLS.getStreamFromFD(dirfd);
   dir = dirstream.path;
  }
  if (path.length == 0) {
   if (!allowEmpty) {
    throw new FS.ErrnoError(44);
   }
   return dir;
  }
  return PATH.join2(dir, path);
 },
 doStat: function(func, path, buf) {
  try {
   var stat = func(path);
  } catch (e) {
   if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
    return -54;
   }
   throw e;
  }
  SAFE_HEAP_STORE((buf >> 2) * 4, stat.dev, 4);
  SAFE_HEAP_STORE((buf + 8 >> 2) * 4, stat.ino, 4);
  SAFE_HEAP_STORE((buf + 12 >> 2) * 4, stat.mode, 4);
  SAFE_HEAP_STORE((buf + 16 >> 2) * 4, stat.nlink, 4);
  SAFE_HEAP_STORE((buf + 20 >> 2) * 4, stat.uid, 4);
  SAFE_HEAP_STORE((buf + 24 >> 2) * 4, stat.gid, 4);
  SAFE_HEAP_STORE((buf + 28 >> 2) * 4, stat.rdev, 4);
  tempI64 = [ stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  SAFE_HEAP_STORE((buf + 40 >> 2) * 4, tempI64[0], 4), SAFE_HEAP_STORE((buf + 44 >> 2) * 4, tempI64[1], 4);
  SAFE_HEAP_STORE((buf + 48 >> 2) * 4, 4096, 4);
  SAFE_HEAP_STORE((buf + 52 >> 2) * 4, stat.blocks, 4);
  var atime = stat.atime.getTime();
  var mtime = stat.mtime.getTime();
  var ctime = stat.ctime.getTime();
  tempI64 = [ Math.floor(atime / 1e3) >>> 0, (tempDouble = Math.floor(atime / 1e3), 
  +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  SAFE_HEAP_STORE((buf + 56 >> 2) * 4, tempI64[0], 4), SAFE_HEAP_STORE((buf + 60 >> 2) * 4, tempI64[1], 4);
  SAFE_HEAP_STORE((buf + 64 >> 2) * 4, atime % 1e3 * 1e3, 4);
  tempI64 = [ Math.floor(mtime / 1e3) >>> 0, (tempDouble = Math.floor(mtime / 1e3), 
  +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  SAFE_HEAP_STORE((buf + 72 >> 2) * 4, tempI64[0], 4), SAFE_HEAP_STORE((buf + 76 >> 2) * 4, tempI64[1], 4);
  SAFE_HEAP_STORE((buf + 80 >> 2) * 4, mtime % 1e3 * 1e3, 4);
  tempI64 = [ Math.floor(ctime / 1e3) >>> 0, (tempDouble = Math.floor(ctime / 1e3), 
  +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  SAFE_HEAP_STORE((buf + 88 >> 2) * 4, tempI64[0], 4), SAFE_HEAP_STORE((buf + 92 >> 2) * 4, tempI64[1], 4);
  SAFE_HEAP_STORE((buf + 96 >> 2) * 4, ctime % 1e3 * 1e3, 4);
  tempI64 = [ stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  SAFE_HEAP_STORE((buf + 104 >> 2) * 4, tempI64[0], 4), SAFE_HEAP_STORE((buf + 108 >> 2) * 4, tempI64[1], 4);
  return 0;
 },
 doMsync: function(addr, stream, len, flags, offset) {
  if (!FS.isFile(stream.node.mode)) {
   throw new FS.ErrnoError(43);
  }
  if (flags & 2) {
   return 0;
  }
  var buffer = HEAPU8.slice(addr, addr + len);
  FS.msync(stream, buffer, offset, len, flags);
 },
 varargs: undefined,
 get: function() {
  SYSCALLS.varargs += 4;
  var ret = SAFE_HEAP_LOAD((SYSCALLS.varargs - 4 >> 2) * 4, 4, 0);
  return ret;
 },
 getStr: function(ptr) {
  var ret = UTF8ToString(ptr);
  return ret;
 },
 getStreamFromFD: function(fd) {
  var stream = FS.getStream(fd);
  if (!stream) throw new FS.ErrnoError(8);
  return stream;
 }
};

function ___syscall_fcntl64(fd, cmd, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  switch (cmd) {
  case 0:
   {
    var arg = SYSCALLS.get();
    if (arg < 0) {
     return -28;
    }
    var newStream;
    newStream = FS.createStream(stream, arg);
    return newStream.fd;
   }

  case 1:
  case 2:
   return 0;

  case 3:
   return stream.flags;

  case 4:
   {
    var arg = SYSCALLS.get();
    stream.flags |= arg;
    return 0;
   }

  case 5:
   {
    var arg = SYSCALLS.get();
    var offset = 0;
    SAFE_HEAP_STORE((arg + offset >> 1) * 2, 2, 2);
    return 0;
   }

  case 6:
  case 7:
   return 0;

  case 16:
  case 8:
   return -28;

  case 9:
   setErrNo(28);
   return -1;

  default:
   {
    return -28;
   }
  }
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_ioctl(fd, op, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  switch (op) {
  case 21509:
  case 21505:
   {
    if (!stream.tty) return -59;
    return 0;
   }

  case 21510:
  case 21511:
  case 21512:
  case 21506:
  case 21507:
  case 21508:
   {
    if (!stream.tty) return -59;
    return 0;
   }

  case 21519:
   {
    if (!stream.tty) return -59;
    var argp = SYSCALLS.get();
    SAFE_HEAP_STORE((argp >> 2) * 4, 0, 4);
    return 0;
   }

  case 21520:
   {
    if (!stream.tty) return -59;
    return -28;
   }

  case 21531:
   {
    var argp = SYSCALLS.get();
    return FS.ioctl(stream, op, argp);
   }

  case 21523:
   {
    if (!stream.tty) return -59;
    return 0;
   }

  case 21524:
   {
    if (!stream.tty) return -59;
    return 0;
   }

  default:
   return -28;
  }
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_openat(dirfd, path, flags, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  path = SYSCALLS.getStr(path);
  path = SYSCALLS.calculateAt(dirfd, path);
  var mode = varargs ? SYSCALLS.get() : 0;
  return FS.open(path, flags, mode).fd;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}

function getShiftFromSize(size) {
 switch (size) {
 case 1:
  return 0;

 case 2:
  return 1;

 case 4:
  return 2;

 case 8:
  return 3;

 default:
  throw new TypeError("Unknown type size: " + size);
 }
}

function embind_init_charCodes() {
 var codes = new Array(256);
 for (var i = 0; i < 256; ++i) {
  codes[i] = String.fromCharCode(i);
 }
 embind_charCodes = codes;
}

var embind_charCodes = undefined;

function readLatin1String(ptr) {
 var ret = "";
 var c = ptr;
 while (SAFE_HEAP_LOAD(c, 1, 1)) {
  ret += embind_charCodes[SAFE_HEAP_LOAD(c++, 1, 1)];
 }
 return ret;
}

var awaitingDependencies = {};

var registeredTypes = {};

var typeDependencies = {};

var char_0 = 48;

var char_9 = 57;

function makeLegalFunctionName(name) {
 if (undefined === name) {
  return "_unknown";
 }
 name = name.replace(/[^a-zA-Z0-9_]/g, "$");
 var f = name.charCodeAt(0);
 if (f >= char_0 && f <= char_9) {
  return "_" + name;
 }
 return name;
}

function createNamedFunction(name, body) {
 name = makeLegalFunctionName(name);
 return {
  [name]: function() {
   return body.apply(this, arguments);
  }
 }[name];
}

function extendError(baseErrorType, errorName) {
 var errorClass = createNamedFunction(errorName, function(message) {
  this.name = errorName;
  this.message = message;
  var stack = new Error(message).stack;
  if (stack !== undefined) {
   this.stack = this.toString() + "\n" + stack.replace(/^Error(:[^\n]*)?\n/, "");
  }
 });
 errorClass.prototype = Object.create(baseErrorType.prototype);
 errorClass.prototype.constructor = errorClass;
 errorClass.prototype.toString = function() {
  if (this.message === undefined) {
   return this.name;
  } else {
   return this.name + ": " + this.message;
  }
 };
 return errorClass;
}

var BindingError = undefined;

function throwBindingError(message) {
 throw new BindingError(message);
}

var InternalError = undefined;

function throwInternalError(message) {
 throw new InternalError(message);
}

function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
 myTypes.forEach(function(type) {
  typeDependencies[type] = dependentTypes;
 });
 function onComplete(typeConverters) {
  var myTypeConverters = getTypeConverters(typeConverters);
  if (myTypeConverters.length !== myTypes.length) {
   throwInternalError("Mismatched type converter count");
  }
  for (var i = 0; i < myTypes.length; ++i) {
   registerType(myTypes[i], myTypeConverters[i]);
  }
 }
 var typeConverters = new Array(dependentTypes.length);
 var unregisteredTypes = [];
 var registered = 0;
 dependentTypes.forEach((dt, i) => {
  if (registeredTypes.hasOwnProperty(dt)) {
   typeConverters[i] = registeredTypes[dt];
  } else {
   unregisteredTypes.push(dt);
   if (!awaitingDependencies.hasOwnProperty(dt)) {
    awaitingDependencies[dt] = [];
   }
   awaitingDependencies[dt].push(() => {
    typeConverters[i] = registeredTypes[dt];
    ++registered;
    if (registered === unregisteredTypes.length) {
     onComplete(typeConverters);
    }
   });
  }
 });
 if (0 === unregisteredTypes.length) {
  onComplete(typeConverters);
 }
}

function registerType(rawType, registeredInstance, options = {}) {
 if (!("argPackAdvance" in registeredInstance)) {
  throw new TypeError("registerType registeredInstance requires argPackAdvance");
 }
 var name = registeredInstance.name;
 if (!rawType) {
  throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
 }
 if (registeredTypes.hasOwnProperty(rawType)) {
  if (options.ignoreDuplicateRegistrations) {
   return;
  } else {
   throwBindingError("Cannot register type '" + name + "' twice");
  }
 }
 registeredTypes[rawType] = registeredInstance;
 delete typeDependencies[rawType];
 if (awaitingDependencies.hasOwnProperty(rawType)) {
  var callbacks = awaitingDependencies[rawType];
  delete awaitingDependencies[rawType];
  callbacks.forEach(cb => cb());
 }
}

function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
 var shift = getShiftFromSize(size);
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": function(wt) {
   return !!wt;
  },
  "toWireType": function(destructors, o) {
   return o ? trueValue : falseValue;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": function(pointer) {
   var heap;
   if (size === 1) {
    heap = HEAP8;
   } else if (size === 2) {
    heap = HEAP16;
   } else if (size === 4) {
    heap = HEAP32;
   } else {
    throw new TypeError("Unknown boolean type size: " + name);
   }
   return this["fromWireType"](heap[pointer >> shift]);
  },
  destructorFunction: null
 });
}

function ClassHandle_isAliasOf(other) {
 if (!(this instanceof ClassHandle)) {
  return false;
 }
 if (!(other instanceof ClassHandle)) {
  return false;
 }
 var leftClass = this.$$.ptrType.registeredClass;
 var left = this.$$.ptr;
 var rightClass = other.$$.ptrType.registeredClass;
 var right = other.$$.ptr;
 while (leftClass.baseClass) {
  left = leftClass.upcast(left);
  leftClass = leftClass.baseClass;
 }
 while (rightClass.baseClass) {
  right = rightClass.upcast(right);
  rightClass = rightClass.baseClass;
 }
 return leftClass === rightClass && left === right;
}

function shallowCopyInternalPointer(o) {
 return {
  count: o.count,
  deleteScheduled: o.deleteScheduled,
  preservePointerOnDelete: o.preservePointerOnDelete,
  ptr: o.ptr,
  ptrType: o.ptrType,
  smartPtr: o.smartPtr,
  smartPtrType: o.smartPtrType
 };
}

function throwInstanceAlreadyDeleted(obj) {
 function getInstanceTypeName(handle) {
  return handle.$$.ptrType.registeredClass.name;
 }
 throwBindingError(getInstanceTypeName(obj) + " instance already deleted");
}

var finalizationRegistry = false;

function detachFinalizer(handle) {}

function runDestructor($$) {
 if ($$.smartPtr) {
  $$.smartPtrType.rawDestructor($$.smartPtr);
 } else {
  $$.ptrType.registeredClass.rawDestructor($$.ptr);
 }
}

function releaseClassHandle($$) {
 $$.count.value -= 1;
 var toDelete = 0 === $$.count.value;
 if (toDelete) {
  runDestructor($$);
 }
}

function downcastPointer(ptr, ptrClass, desiredClass) {
 if (ptrClass === desiredClass) {
  return ptr;
 }
 if (undefined === desiredClass.baseClass) {
  return null;
 }
 var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);
 if (rv === null) {
  return null;
 }
 return desiredClass.downcast(rv);
}

var registeredPointers = {};

function getInheritedInstanceCount() {
 return Object.keys(registeredInstances).length;
}

function getLiveInheritedInstances() {
 var rv = [];
 for (var k in registeredInstances) {
  if (registeredInstances.hasOwnProperty(k)) {
   rv.push(registeredInstances[k]);
  }
 }
 return rv;
}

var deletionQueue = [];

function flushPendingDeletes() {
 while (deletionQueue.length) {
  var obj = deletionQueue.pop();
  obj.$$.deleteScheduled = false;
  obj["delete"]();
 }
}

var delayFunction = undefined;

function setDelayFunction(fn) {
 delayFunction = fn;
 if (deletionQueue.length && delayFunction) {
  delayFunction(flushPendingDeletes);
 }
}

function init_embind() {
 Module["getInheritedInstanceCount"] = getInheritedInstanceCount;
 Module["getLiveInheritedInstances"] = getLiveInheritedInstances;
 Module["flushPendingDeletes"] = flushPendingDeletes;
 Module["setDelayFunction"] = setDelayFunction;
}

var registeredInstances = {};

function getBasestPointer(class_, ptr) {
 if (ptr === undefined) {
  throwBindingError("ptr should not be undefined");
 }
 while (class_.baseClass) {
  ptr = class_.upcast(ptr);
  class_ = class_.baseClass;
 }
 return ptr;
}

function getInheritedInstance(class_, ptr) {
 ptr = getBasestPointer(class_, ptr);
 return registeredInstances[ptr];
}

function makeClassHandle(prototype, record) {
 if (!record.ptrType || !record.ptr) {
  throwInternalError("makeClassHandle requires ptr and ptrType");
 }
 var hasSmartPtrType = !!record.smartPtrType;
 var hasSmartPtr = !!record.smartPtr;
 if (hasSmartPtrType !== hasSmartPtr) {
  throwInternalError("Both smartPtrType and smartPtr must be specified");
 }
 record.count = {
  value: 1
 };
 return attachFinalizer(Object.create(prototype, {
  $$: {
   value: record
  }
 }));
}

function RegisteredPointer_fromWireType(ptr) {
 var rawPointer = this.getPointee(ptr);
 if (!rawPointer) {
  this.destructor(ptr);
  return null;
 }
 var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);
 if (undefined !== registeredInstance) {
  if (0 === registeredInstance.$$.count.value) {
   registeredInstance.$$.ptr = rawPointer;
   registeredInstance.$$.smartPtr = ptr;
   return registeredInstance["clone"]();
  } else {
   var rv = registeredInstance["clone"]();
   this.destructor(ptr);
   return rv;
  }
 }
 function makeDefaultHandle() {
  if (this.isSmartPointer) {
   return makeClassHandle(this.registeredClass.instancePrototype, {
    ptrType: this.pointeeType,
    ptr: rawPointer,
    smartPtrType: this,
    smartPtr: ptr
   });
  } else {
   return makeClassHandle(this.registeredClass.instancePrototype, {
    ptrType: this,
    ptr: ptr
   });
  }
 }
 var actualType = this.registeredClass.getActualType(rawPointer);
 var registeredPointerRecord = registeredPointers[actualType];
 if (!registeredPointerRecord) {
  return makeDefaultHandle.call(this);
 }
 var toType;
 if (this.isConst) {
  toType = registeredPointerRecord.constPointerType;
 } else {
  toType = registeredPointerRecord.pointerType;
 }
 var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);
 if (dp === null) {
  return makeDefaultHandle.call(this);
 }
 if (this.isSmartPointer) {
  return makeClassHandle(toType.registeredClass.instancePrototype, {
   ptrType: toType,
   ptr: dp,
   smartPtrType: this,
   smartPtr: ptr
  });
 } else {
  return makeClassHandle(toType.registeredClass.instancePrototype, {
   ptrType: toType,
   ptr: dp
  });
 }
}

function attachFinalizer(handle) {
 if ("undefined" === typeof FinalizationRegistry) {
  attachFinalizer = handle => handle;
  return handle;
 }
 finalizationRegistry = new FinalizationRegistry(info => {
  releaseClassHandle(info.$$);
 });
 attachFinalizer = handle => {
  var $$ = handle.$$;
  var hasSmartPtr = !!$$.smartPtr;
  if (hasSmartPtr) {
   var info = {
    $$: $$
   };
   finalizationRegistry.register(handle, info, handle);
  }
  return handle;
 };
 detachFinalizer = handle => finalizationRegistry.unregister(handle);
 return attachFinalizer(handle);
}

function ClassHandle_clone() {
 if (!this.$$.ptr) {
  throwInstanceAlreadyDeleted(this);
 }
 if (this.$$.preservePointerOnDelete) {
  this.$$.count.value += 1;
  return this;
 } else {
  var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {
   $$: {
    value: shallowCopyInternalPointer(this.$$)
   }
  }));
  clone.$$.count.value += 1;
  clone.$$.deleteScheduled = false;
  return clone;
 }
}

function ClassHandle_delete() {
 if (!this.$$.ptr) {
  throwInstanceAlreadyDeleted(this);
 }
 if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
  throwBindingError("Object already scheduled for deletion");
 }
 detachFinalizer(this);
 releaseClassHandle(this.$$);
 if (!this.$$.preservePointerOnDelete) {
  this.$$.smartPtr = undefined;
  this.$$.ptr = undefined;
 }
}

function ClassHandle_isDeleted() {
 return !this.$$.ptr;
}

function ClassHandle_deleteLater() {
 if (!this.$$.ptr) {
  throwInstanceAlreadyDeleted(this);
 }
 if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
  throwBindingError("Object already scheduled for deletion");
 }
 deletionQueue.push(this);
 if (deletionQueue.length === 1 && delayFunction) {
  delayFunction(flushPendingDeletes);
 }
 this.$$.deleteScheduled = true;
 return this;
}

function init_ClassHandle() {
 ClassHandle.prototype["isAliasOf"] = ClassHandle_isAliasOf;
 ClassHandle.prototype["clone"] = ClassHandle_clone;
 ClassHandle.prototype["delete"] = ClassHandle_delete;
 ClassHandle.prototype["isDeleted"] = ClassHandle_isDeleted;
 ClassHandle.prototype["deleteLater"] = ClassHandle_deleteLater;
}

function ClassHandle() {}

function ensureOverloadTable(proto, methodName, humanName) {
 if (undefined === proto[methodName].overloadTable) {
  var prevFunc = proto[methodName];
  proto[methodName] = function() {
   if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
    throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
   }
   return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
  };
  proto[methodName].overloadTable = [];
  proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
 }
}

function exposePublicSymbol(name, value, numArguments) {
 if (Module.hasOwnProperty(name)) {
  if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {
   throwBindingError("Cannot register public name '" + name + "' twice");
  }
  ensureOverloadTable(Module, name, name);
  if (Module.hasOwnProperty(numArguments)) {
   throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
  }
  Module[name].overloadTable[numArguments] = value;
 } else {
  Module[name] = value;
  if (undefined !== numArguments) {
   Module[name].numArguments = numArguments;
  }
 }
}

function RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {
 this.name = name;
 this.constructor = constructor;
 this.instancePrototype = instancePrototype;
 this.rawDestructor = rawDestructor;
 this.baseClass = baseClass;
 this.getActualType = getActualType;
 this.upcast = upcast;
 this.downcast = downcast;
 this.pureVirtualFunctions = [];
}

function upcastPointer(ptr, ptrClass, desiredClass) {
 while (ptrClass !== desiredClass) {
  if (!ptrClass.upcast) {
   throwBindingError("Expected null or instance of " + desiredClass.name + ", got an instance of " + ptrClass.name);
  }
  ptr = ptrClass.upcast(ptr);
  ptrClass = ptrClass.baseClass;
 }
 return ptr;
}

function constNoSmartPtrRawPointerToWireType(destructors, handle) {
 if (handle === null) {
  if (this.isReference) {
   throwBindingError("null is not a valid " + this.name);
  }
  return 0;
 }
 if (!handle.$$) {
  throwBindingError('Cannot pass "' + embindRepr(handle) + '" as a ' + this.name);
 }
 if (!handle.$$.ptr) {
  throwBindingError("Cannot pass deleted object as a pointer of type " + this.name);
 }
 var handleClass = handle.$$.ptrType.registeredClass;
 var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
 return ptr;
}

function genericPointerToWireType(destructors, handle) {
 var ptr;
 if (handle === null) {
  if (this.isReference) {
   throwBindingError("null is not a valid " + this.name);
  }
  if (this.isSmartPointer) {
   ptr = this.rawConstructor();
   if (destructors !== null) {
    destructors.push(this.rawDestructor, ptr);
   }
   return ptr;
  } else {
   return 0;
  }
 }
 if (!handle.$$) {
  throwBindingError('Cannot pass "' + embindRepr(handle) + '" as a ' + this.name);
 }
 if (!handle.$$.ptr) {
  throwBindingError("Cannot pass deleted object as a pointer of type " + this.name);
 }
 if (!this.isConst && handle.$$.ptrType.isConst) {
  throwBindingError("Cannot convert argument of type " + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + " to parameter type " + this.name);
 }
 var handleClass = handle.$$.ptrType.registeredClass;
 ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
 if (this.isSmartPointer) {
  if (undefined === handle.$$.smartPtr) {
   throwBindingError("Passing raw pointer to smart pointer is illegal");
  }
  switch (this.sharingPolicy) {
  case 0:
   if (handle.$$.smartPtrType === this) {
    ptr = handle.$$.smartPtr;
   } else {
    throwBindingError("Cannot convert argument of type " + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + " to parameter type " + this.name);
   }
   break;

  case 1:
   ptr = handle.$$.smartPtr;
   break;

  case 2:
   if (handle.$$.smartPtrType === this) {
    ptr = handle.$$.smartPtr;
   } else {
    var clonedHandle = handle["clone"]();
    ptr = this.rawShare(ptr, Emval.toHandle(function() {
     clonedHandle["delete"]();
    }));
    if (destructors !== null) {
     destructors.push(this.rawDestructor, ptr);
    }
   }
   break;

  default:
   throwBindingError("Unsupporting sharing policy");
  }
 }
 return ptr;
}

function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {
 if (handle === null) {
  if (this.isReference) {
   throwBindingError("null is not a valid " + this.name);
  }
  return 0;
 }
 if (!handle.$$) {
  throwBindingError('Cannot pass "' + embindRepr(handle) + '" as a ' + this.name);
 }
 if (!handle.$$.ptr) {
  throwBindingError("Cannot pass deleted object as a pointer of type " + this.name);
 }
 if (handle.$$.ptrType.isConst) {
  throwBindingError("Cannot convert argument of type " + handle.$$.ptrType.name + " to parameter type " + this.name);
 }
 var handleClass = handle.$$.ptrType.registeredClass;
 var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
 return ptr;
}

function simpleReadValueFromPointer(pointer) {
 return this["fromWireType"](SAFE_HEAP_LOAD((pointer >> 2) * 4, 4, 0));
}

function RegisteredPointer_getPointee(ptr) {
 if (this.rawGetPointee) {
  ptr = this.rawGetPointee(ptr);
 }
 return ptr;
}

function RegisteredPointer_destructor(ptr) {
 if (this.rawDestructor) {
  this.rawDestructor(ptr);
 }
}

function RegisteredPointer_deleteObject(handle) {
 if (handle !== null) {
  handle["delete"]();
 }
}

function init_RegisteredPointer() {
 RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;
 RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;
 RegisteredPointer.prototype["argPackAdvance"] = 8;
 RegisteredPointer.prototype["readValueFromPointer"] = simpleReadValueFromPointer;
 RegisteredPointer.prototype["deleteObject"] = RegisteredPointer_deleteObject;
 RegisteredPointer.prototype["fromWireType"] = RegisteredPointer_fromWireType;
}

function RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {
 this.name = name;
 this.registeredClass = registeredClass;
 this.isReference = isReference;
 this.isConst = isConst;
 this.isSmartPointer = isSmartPointer;
 this.pointeeType = pointeeType;
 this.sharingPolicy = sharingPolicy;
 this.rawGetPointee = rawGetPointee;
 this.rawConstructor = rawConstructor;
 this.rawShare = rawShare;
 this.rawDestructor = rawDestructor;
 if (!isSmartPointer && registeredClass.baseClass === undefined) {
  if (isConst) {
   this["toWireType"] = constNoSmartPtrRawPointerToWireType;
   this.destructorFunction = null;
  } else {
   this["toWireType"] = nonConstNoSmartPtrRawPointerToWireType;
   this.destructorFunction = null;
  }
 } else {
  this["toWireType"] = genericPointerToWireType;
 }
}

function replacePublicSymbol(name, value, numArguments) {
 if (!Module.hasOwnProperty(name)) {
  throwInternalError("Replacing nonexistant public symbol");
 }
 if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
  Module[name].overloadTable[numArguments] = value;
 } else {
  Module[name] = value;
  Module[name].argCount = numArguments;
 }
}

function dynCallLegacy(sig, ptr, args) {
 var f = Module["dynCall_" + sig];
 return args && args.length ? f.apply(null, [ ptr ].concat(args)) : f.call(null, ptr);
}

var wasmTableMirror = [];

function getWasmTableEntry(funcPtr) {
 var func = wasmTableMirror[funcPtr];
 if (!func) {
  if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;
  wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);
 }
 return func;
}

function dynCall(sig, ptr, args) {
 if (sig.includes("j")) {
  return dynCallLegacy(sig, ptr, args);
 }
 var rtn = getWasmTableEntry(ptr).apply(null, args);
 return rtn;
}

function getDynCaller(sig, ptr) {
 var argCache = [];
 return function() {
  argCache.length = 0;
  Object.assign(argCache, arguments);
  return dynCall(sig, ptr, argCache);
 };
}

function embind__requireFunction(signature, rawFunction) {
 signature = readLatin1String(signature);
 function makeDynCaller() {
  if (signature.includes("j")) {
   return getDynCaller(signature, rawFunction);
  }
  return getWasmTableEntry(rawFunction);
 }
 var fp = makeDynCaller();
 if (typeof fp != "function") {
  throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
 }
 return fp;
}

var UnboundTypeError = undefined;

function getTypeName(type) {
 var ptr = ___getTypeName(type);
 var rv = readLatin1String(ptr);
 _free(ptr);
 return rv;
}

function throwUnboundTypeError(message, types) {
 var unboundTypes = [];
 var seen = {};
 function visit(type) {
  if (seen[type]) {
   return;
  }
  if (registeredTypes[type]) {
   return;
  }
  if (typeDependencies[type]) {
   typeDependencies[type].forEach(visit);
   return;
  }
  unboundTypes.push(type);
  seen[type] = true;
 }
 types.forEach(visit);
 throw new UnboundTypeError(message + ": " + unboundTypes.map(getTypeName).join([ ", " ]));
}

function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {
 name = readLatin1String(name);
 getActualType = embind__requireFunction(getActualTypeSignature, getActualType);
 if (upcast) {
  upcast = embind__requireFunction(upcastSignature, upcast);
 }
 if (downcast) {
  downcast = embind__requireFunction(downcastSignature, downcast);
 }
 rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);
 var legalFunctionName = makeLegalFunctionName(name);
 exposePublicSymbol(legalFunctionName, function() {
  throwUnboundTypeError("Cannot construct " + name + " due to unbound types", [ baseClassRawType ]);
 });
 whenDependentTypesAreResolved([ rawType, rawPointerType, rawConstPointerType ], baseClassRawType ? [ baseClassRawType ] : [], function(base) {
  base = base[0];
  var baseClass;
  var basePrototype;
  if (baseClassRawType) {
   baseClass = base.registeredClass;
   basePrototype = baseClass.instancePrototype;
  } else {
   basePrototype = ClassHandle.prototype;
  }
  var constructor = createNamedFunction(legalFunctionName, function() {
   if (Object.getPrototypeOf(this) !== instancePrototype) {
    throw new BindingError("Use 'new' to construct " + name);
   }
   if (undefined === registeredClass.constructor_body) {
    throw new BindingError(name + " has no accessible constructor");
   }
   var body = registeredClass.constructor_body[arguments.length];
   if (undefined === body) {
    throw new BindingError("Tried to invoke ctor of " + name + " with invalid number of parameters (" + arguments.length + ") - expected (" + Object.keys(registeredClass.constructor_body).toString() + ") parameters instead!");
   }
   return body.apply(this, arguments);
  });
  var instancePrototype = Object.create(basePrototype, {
   constructor: {
    value: constructor
   }
  });
  constructor.prototype = instancePrototype;
  var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);
  var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);
  var pointerConverter = new RegisteredPointer(name + "*", registeredClass, false, false, false);
  var constPointerConverter = new RegisteredPointer(name + " const*", registeredClass, false, true, false);
  registeredPointers[rawType] = {
   pointerType: pointerConverter,
   constPointerType: constPointerConverter
  };
  replacePublicSymbol(legalFunctionName, constructor);
  return [ referenceConverter, pointerConverter, constPointerConverter ];
 });
}

function heap32VectorToArray(count, firstElement) {
 var array = [];
 for (var i = 0; i < count; i++) {
  array.push(SAFE_HEAP_LOAD((firstElement + i * 4 >> 2) * 4, 4, 1));
 }
 return array;
}

function runDestructors(destructors) {
 while (destructors.length) {
  var ptr = destructors.pop();
  var del = destructors.pop();
  del(ptr);
 }
}

function new_(constructor, argumentList) {
 if (!(constructor instanceof Function)) {
  throw new TypeError("new_ called with constructor type " + typeof constructor + " which is not a function");
 }
 var dummy = createNamedFunction(constructor.name || "unknownFunctionName", function() {});
 dummy.prototype = constructor.prototype;
 var obj = new dummy();
 var r = constructor.apply(obj, argumentList);
 return r instanceof Object ? r : obj;
}

function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc, isAsync) {
 var argCount = argTypes.length;
 if (argCount < 2) {
  throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
 }
 var isClassMethodFunc = argTypes[1] !== null && classType !== null;
 var needsDestructorStack = false;
 for (var i = 1; i < argTypes.length; ++i) {
  if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {
   needsDestructorStack = true;
   break;
  }
 }
 var returns = argTypes[0].name !== "void";
 var argsList = "";
 var argsListWired = "";
 for (var i = 0; i < argCount - 2; ++i) {
  argsList += (i !== 0 ? ", " : "") + "arg" + i;
  argsListWired += (i !== 0 ? ", " : "") + "arg" + i + "Wired";
 }
 var invokerFnBody = "return function " + makeLegalFunctionName(humanName) + "(" + argsList + ") {\n" + "if (arguments.length !== " + (argCount - 2) + ") {\n" + "throwBindingError('function " + humanName + " called with ' + arguments.length + ' arguments, expected " + (argCount - 2) + " args!');\n" + "}\n";
 if (needsDestructorStack) {
  invokerFnBody += "var destructors = [];\n";
 }
 var dtorStack = needsDestructorStack ? "destructors" : "null";
 var args1 = [ "throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam" ];
 var args2 = [ throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1] ];
 if (isClassMethodFunc) {
  invokerFnBody += "var thisWired = classParam.toWireType(" + dtorStack + ", this);\n";
 }
 for (var i = 0; i < argCount - 2; ++i) {
  invokerFnBody += "var arg" + i + "Wired = argType" + i + ".toWireType(" + dtorStack + ", arg" + i + "); // " + argTypes[i + 2].name + "\n";
  args1.push("argType" + i);
  args2.push(argTypes[i + 2]);
 }
 if (isClassMethodFunc) {
  argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
 }
 invokerFnBody += (returns || isAsync ? "var rv = " : "") + "invoker(fn" + (argsListWired.length > 0 ? ", " : "") + argsListWired + ");\n";
 if (needsDestructorStack) {
  invokerFnBody += "runDestructors(destructors);\n";
 } else {
  for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {
   var paramName = i === 1 ? "thisWired" : "arg" + (i - 2) + "Wired";
   if (argTypes[i].destructorFunction !== null) {
    invokerFnBody += paramName + "_dtor(" + paramName + "); // " + argTypes[i].name + "\n";
    args1.push(paramName + "_dtor");
    args2.push(argTypes[i].destructorFunction);
   }
  }
 }
 if (returns) {
  invokerFnBody += "var ret = retType.fromWireType(rv);\n" + "return ret;\n";
 } else {}
 invokerFnBody += "}\n";
 args1.push(invokerFnBody);
 var invokerFunction = new_(Function, args1).apply(null, args2);
 return invokerFunction;
}

function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {
 assert(argCount > 0);
 var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
 invoker = embind__requireFunction(invokerSignature, invoker);
 var args = [ rawConstructor ];
 var destructors = [];
 whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {
  classType = classType[0];
  var humanName = "constructor " + classType.name;
  if (undefined === classType.registeredClass.constructor_body) {
   classType.registeredClass.constructor_body = [];
  }
  if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {
   throw new BindingError("Cannot register multiple constructors with identical number of parameters (" + (argCount - 1) + ") for class '" + classType.name + "'! Overload resolution is currently only performed using the parameter count, not actual type info!");
  }
  classType.registeredClass.constructor_body[argCount - 1] = () => {
   throwUnboundTypeError("Cannot construct " + classType.name + " due to unbound types", rawArgTypes);
  };
  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {
   argTypes.splice(1, 0, null);
   classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);
   return [];
  });
  return [];
 });
}

function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual, isAsync) {
 var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
 methodName = readLatin1String(methodName);
 rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);
 whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {
  classType = classType[0];
  var humanName = classType.name + "." + methodName;
  if (methodName.startsWith("@@")) {
   methodName = Symbol[methodName.substring(2)];
  }
  if (isPureVirtual) {
   classType.registeredClass.pureVirtualFunctions.push(methodName);
  }
  function unboundTypesHandler() {
   throwUnboundTypeError("Cannot call " + humanName + " due to unbound types", rawArgTypes);
  }
  var proto = classType.registeredClass.instancePrototype;
  var method = proto[methodName];
  if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {
   unboundTypesHandler.argCount = argCount - 2;
   unboundTypesHandler.className = classType.name;
   proto[methodName] = unboundTypesHandler;
  } else {
   ensureOverloadTable(proto, methodName, humanName);
   proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;
  }
  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {
   var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context, isAsync);
   if (undefined === proto[methodName].overloadTable) {
    memberFunction.argCount = argCount - 2;
    proto[methodName] = memberFunction;
   } else {
    proto[methodName].overloadTable[argCount - 2] = memberFunction;
   }
   return [];
  });
  return [];
 });
}

function validateThis(this_, classType, humanName) {
 if (!(this_ instanceof Object)) {
  throwBindingError(humanName + ' with invalid "this": ' + this_);
 }
 if (!(this_ instanceof classType.registeredClass.constructor)) {
  throwBindingError(humanName + ' incompatible with "this" of type ' + this_.constructor.name);
 }
 if (!this_.$$.ptr) {
  throwBindingError("cannot call emscripten binding method " + humanName + " on deleted object");
 }
 return upcastPointer(this_.$$.ptr, this_.$$.ptrType.registeredClass, classType.registeredClass);
}

function __embind_register_class_property(classType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {
 fieldName = readLatin1String(fieldName);
 getter = embind__requireFunction(getterSignature, getter);
 whenDependentTypesAreResolved([], [ classType ], function(classType) {
  classType = classType[0];
  var humanName = classType.name + "." + fieldName;
  var desc = {
   get: function() {
    throwUnboundTypeError("Cannot access " + humanName + " due to unbound types", [ getterReturnType, setterArgumentType ]);
   },
   enumerable: true,
   configurable: true
  };
  if (setter) {
   desc.set = () => {
    throwUnboundTypeError("Cannot access " + humanName + " due to unbound types", [ getterReturnType, setterArgumentType ]);
   };
  } else {
   desc.set = v => {
    throwBindingError(humanName + " is a read-only property");
   };
  }
  Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);
  whenDependentTypesAreResolved([], setter ? [ getterReturnType, setterArgumentType ] : [ getterReturnType ], function(types) {
   var getterReturnType = types[0];
   var desc = {
    get: function() {
     var ptr = validateThis(this, classType, humanName + " getter");
     return getterReturnType["fromWireType"](getter(getterContext, ptr));
    },
    enumerable: true
   };
   if (setter) {
    setter = embind__requireFunction(setterSignature, setter);
    var setterArgumentType = types[1];
    desc.set = function(v) {
     var ptr = validateThis(this, classType, humanName + " setter");
     var destructors = [];
     setter(setterContext, ptr, setterArgumentType["toWireType"](destructors, v));
     runDestructors(destructors);
    };
   }
   Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);
   return [];
  });
  return [];
 });
}

function __embind_register_constant(name, type, value) {
 name = readLatin1String(name);
 whenDependentTypesAreResolved([], [ type ], function(type) {
  type = type[0];
  Module[name] = type["fromWireType"](value);
  return [];
 });
}

var emval_free_list = [];

var emval_handle_array = [ {}, {
 value: undefined
}, {
 value: null
}, {
 value: true
}, {
 value: false
} ];

function __emval_decref(handle) {
 if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
  emval_handle_array[handle] = undefined;
  emval_free_list.push(handle);
 }
}

function count_emval_handles() {
 var count = 0;
 for (var i = 5; i < emval_handle_array.length; ++i) {
  if (emval_handle_array[i] !== undefined) {
   ++count;
  }
 }
 return count;
}

function get_first_emval() {
 for (var i = 5; i < emval_handle_array.length; ++i) {
  if (emval_handle_array[i] !== undefined) {
   return emval_handle_array[i];
  }
 }
 return null;
}

function init_emval() {
 Module["count_emval_handles"] = count_emval_handles;
 Module["get_first_emval"] = get_first_emval;
}

var Emval = {
 toValue: handle => {
  if (!handle) {
   throwBindingError("Cannot use deleted val. handle = " + handle);
  }
  return emval_handle_array[handle].value;
 },
 toHandle: value => {
  switch (value) {
  case undefined:
   return 1;

  case null:
   return 2;

  case true:
   return 3;

  case false:
   return 4;

  default:
   {
    var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;
    emval_handle_array[handle] = {
     refcount: 1,
     value: value
    };
    return handle;
   }
  }
 }
};

function __embind_register_emval(rawType, name) {
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": function(handle) {
   var rv = Emval.toValue(handle);
   __emval_decref(handle);
   return rv;
  },
  "toWireType": function(destructors, value) {
   return Emval.toHandle(value);
  },
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: null
 });
}

function embindRepr(v) {
 if (v === null) {
  return "null";
 }
 var t = typeof v;
 if (t === "object" || t === "array" || t === "function") {
  return v.toString();
 } else {
  return "" + v;
 }
}

function floatReadValueFromPointer(name, shift) {
 switch (shift) {
 case 2:
  return function(pointer) {
   return this["fromWireType"](SAFE_HEAP_LOAD_D((pointer >> 2) * 4, 4, 0));
  };

 case 3:
  return function(pointer) {
   return this["fromWireType"](SAFE_HEAP_LOAD_D((pointer >> 3) * 8, 8, 0));
  };

 default:
  throw new TypeError("Unknown float type: " + name);
 }
}

function __embind_register_float(rawType, name, size) {
 var shift = getShiftFromSize(size);
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": function(value) {
   return value;
  },
  "toWireType": function(destructors, value) {
   return value;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": floatReadValueFromPointer(name, shift),
  destructorFunction: null
 });
}

function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn, isAsync) {
 var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
 name = readLatin1String(name);
 rawInvoker = embind__requireFunction(signature, rawInvoker);
 exposePublicSymbol(name, function() {
  throwUnboundTypeError("Cannot call " + name + " due to unbound types", argTypes);
 }, argCount - 1);
 whenDependentTypesAreResolved([], argTypes, function(argTypes) {
  var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));
  replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn, isAsync), argCount - 1);
  return [];
 });
}

function integerReadValueFromPointer(name, shift, signed) {
 switch (shift) {
 case 0:
  return signed ? function readS8FromPointer(pointer) {
   return SAFE_HEAP_LOAD(pointer, 1, 0);
  } : function readU8FromPointer(pointer) {
   return SAFE_HEAP_LOAD(pointer, 1, 1);
  };

 case 1:
  return signed ? function readS16FromPointer(pointer) {
   return SAFE_HEAP_LOAD((pointer >> 1) * 2, 2, 0);
  } : function readU16FromPointer(pointer) {
   return SAFE_HEAP_LOAD((pointer >> 1) * 2, 2, 1);
  };

 case 2:
  return signed ? function readS32FromPointer(pointer) {
   return SAFE_HEAP_LOAD((pointer >> 2) * 4, 4, 0);
  } : function readU32FromPointer(pointer) {
   return SAFE_HEAP_LOAD((pointer >> 2) * 4, 4, 1);
  };

 default:
  throw new TypeError("Unknown integer type: " + name);
 }
}

function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
 name = readLatin1String(name);
 if (maxRange === -1) {
  maxRange = 4294967295;
 }
 var shift = getShiftFromSize(size);
 var fromWireType = value => value;
 if (minRange === 0) {
  var bitshift = 32 - 8 * size;
  fromWireType = value => value << bitshift >>> bitshift;
 }
 var isUnsignedType = name.includes("unsigned");
 var checkAssertions = (value, toTypeName) => {};
 var toWireType;
 if (isUnsignedType) {
  toWireType = function(destructors, value) {
   checkAssertions(value, this.name);
   return value >>> 0;
  };
 } else {
  toWireType = function(destructors, value) {
   checkAssertions(value, this.name);
   return value;
  };
 }
 registerType(primitiveType, {
  name: name,
  "fromWireType": fromWireType,
  "toWireType": toWireType,
  "argPackAdvance": 8,
  "readValueFromPointer": integerReadValueFromPointer(name, shift, minRange !== 0),
  destructorFunction: null
 });
}

function __embind_register_memory_view(rawType, dataTypeIndex, name) {
 var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];
 var TA = typeMapping[dataTypeIndex];
 function decodeMemoryView(handle) {
  handle = handle >> 2;
  var heap = HEAPU32;
  var size = heap[handle];
  var data = heap[handle + 1];
  return new TA(heap.buffer, data, size);
 }
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": decodeMemoryView,
  "argPackAdvance": 8,
  "readValueFromPointer": decodeMemoryView
 }, {
  ignoreDuplicateRegistrations: true
 });
}

function __embind_register_std_string(rawType, name) {
 name = readLatin1String(name);
 var stdStringIsUTF8 = name === "std::string";
 registerType(rawType, {
  name: name,
  "fromWireType": function(value) {
   var length = SAFE_HEAP_LOAD((value >> 2) * 4, 4, 1);
   var payload = value + 4;
   var str;
   if (stdStringIsUTF8) {
    var decodeStartPtr = payload;
    for (var i = 0; i <= length; ++i) {
     var currentBytePtr = payload + i;
     if (i == length || SAFE_HEAP_LOAD(currentBytePtr, 1, 1) == 0) {
      var maxRead = currentBytePtr - decodeStartPtr;
      var stringSegment = UTF8ToString(decodeStartPtr, maxRead);
      if (str === undefined) {
       str = stringSegment;
      } else {
       str += String.fromCharCode(0);
       str += stringSegment;
      }
      decodeStartPtr = currentBytePtr + 1;
     }
    }
   } else {
    var a = new Array(length);
    for (var i = 0; i < length; ++i) {
     a[i] = String.fromCharCode(SAFE_HEAP_LOAD(payload + i, 1, 1));
    }
    str = a.join("");
   }
   _free(value);
   return str;
  },
  "toWireType": function(destructors, value) {
   if (value instanceof ArrayBuffer) {
    value = new Uint8Array(value);
   }
   var length;
   var valueIsOfTypeString = typeof value == "string";
   if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {
    throwBindingError("Cannot pass non-string to std::string");
   }
   if (stdStringIsUTF8 && valueIsOfTypeString) {
    length = lengthBytesUTF8(value);
   } else {
    length = value.length;
   }
   var base = _malloc(4 + length + 1);
   var ptr = base + 4;
   SAFE_HEAP_STORE((base >> 2) * 4, length, 4);
   if (stdStringIsUTF8 && valueIsOfTypeString) {
    stringToUTF8(value, ptr, length + 1);
   } else {
    if (valueIsOfTypeString) {
     for (var i = 0; i < length; ++i) {
      var charCode = value.charCodeAt(i);
      if (charCode > 255) {
       _free(ptr);
       throwBindingError("String has UTF-16 code units that do not fit in 8 bits");
      }
      SAFE_HEAP_STORE(ptr + i, charCode, 1);
     }
    } else {
     for (var i = 0; i < length; ++i) {
      SAFE_HEAP_STORE(ptr + i, value[i], 1);
     }
    }
   }
   if (destructors !== null) {
    destructors.push(_free, base);
   }
   return base;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: function(ptr) {
   _free(ptr);
  }
 });
}

var UTF16Decoder = typeof TextDecoder != "undefined" ? new TextDecoder("utf-16le") : undefined;

function UTF16ToString(ptr, maxBytesToRead) {
 var endPtr = ptr;
 var idx = endPtr >> 1;
 var maxIdx = idx + maxBytesToRead / 2;
 while (!(idx >= maxIdx) && SAFE_HEAP_LOAD(idx * 2, 2, 1)) ++idx;
 endPtr = idx << 1;
 if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
 var str = "";
 for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {
  var codeUnit = SAFE_HEAP_LOAD((ptr + i * 2 >> 1) * 2, 2, 0);
  if (codeUnit == 0) break;
  str += String.fromCharCode(codeUnit);
 }
 return str;
}

function stringToUTF16(str, outPtr, maxBytesToWrite) {
 if (maxBytesToWrite === undefined) {
  maxBytesToWrite = 2147483647;
 }
 if (maxBytesToWrite < 2) return 0;
 maxBytesToWrite -= 2;
 var startPtr = outPtr;
 var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;
 for (var i = 0; i < numCharsToWrite; ++i) {
  var codeUnit = str.charCodeAt(i);
  SAFE_HEAP_STORE((outPtr >> 1) * 2, codeUnit, 2);
  outPtr += 2;
 }
 SAFE_HEAP_STORE((outPtr >> 1) * 2, 0, 2);
 return outPtr - startPtr;
}

function lengthBytesUTF16(str) {
 return str.length * 2;
}

function UTF32ToString(ptr, maxBytesToRead) {
 var i = 0;
 var str = "";
 while (!(i >= maxBytesToRead / 4)) {
  var utf32 = SAFE_HEAP_LOAD((ptr + i * 4 >> 2) * 4, 4, 0);
  if (utf32 == 0) break;
  ++i;
  if (utf32 >= 65536) {
   var ch = utf32 - 65536;
   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
  } else {
   str += String.fromCharCode(utf32);
  }
 }
 return str;
}

function stringToUTF32(str, outPtr, maxBytesToWrite) {
 if (maxBytesToWrite === undefined) {
  maxBytesToWrite = 2147483647;
 }
 if (maxBytesToWrite < 4) return 0;
 var startPtr = outPtr;
 var endPtr = startPtr + maxBytesToWrite - 4;
 for (var i = 0; i < str.length; ++i) {
  var codeUnit = str.charCodeAt(i);
  if (codeUnit >= 55296 && codeUnit <= 57343) {
   var trailSurrogate = str.charCodeAt(++i);
   codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;
  }
  SAFE_HEAP_STORE((outPtr >> 2) * 4, codeUnit, 4);
  outPtr += 4;
  if (outPtr + 4 > endPtr) break;
 }
 SAFE_HEAP_STORE((outPtr >> 2) * 4, 0, 4);
 return outPtr - startPtr;
}

function lengthBytesUTF32(str) {
 var len = 0;
 for (var i = 0; i < str.length; ++i) {
  var codeUnit = str.charCodeAt(i);
  if (codeUnit >= 55296 && codeUnit <= 57343) ++i;
  len += 4;
 }
 return len;
}

function __embind_register_std_wstring(rawType, charSize, name) {
 name = readLatin1String(name);
 var decodeString, encodeString, getHeap, lengthBytesUTF, shift;
 if (charSize === 2) {
  decodeString = UTF16ToString;
  encodeString = stringToUTF16;
  lengthBytesUTF = lengthBytesUTF16;
  getHeap = () => HEAPU16;
  shift = 1;
 } else if (charSize === 4) {
  decodeString = UTF32ToString;
  encodeString = stringToUTF32;
  lengthBytesUTF = lengthBytesUTF32;
  getHeap = () => HEAPU32;
  shift = 2;
 }
 registerType(rawType, {
  name: name,
  "fromWireType": function(value) {
   var length = SAFE_HEAP_LOAD((value >> 2) * 4, 4, 1);
   var HEAP = getHeap();
   var str;
   var decodeStartPtr = value + 4;
   for (var i = 0; i <= length; ++i) {
    var currentBytePtr = value + 4 + i * charSize;
    if (i == length || HEAP[currentBytePtr >> shift] == 0) {
     var maxReadBytes = currentBytePtr - decodeStartPtr;
     var stringSegment = decodeString(decodeStartPtr, maxReadBytes);
     if (str === undefined) {
      str = stringSegment;
     } else {
      str += String.fromCharCode(0);
      str += stringSegment;
     }
     decodeStartPtr = currentBytePtr + charSize;
    }
   }
   _free(value);
   return str;
  },
  "toWireType": function(destructors, value) {
   if (!(typeof value == "string")) {
    throwBindingError("Cannot pass non-string to C++ string type " + name);
   }
   var length = lengthBytesUTF(value);
   var ptr = _malloc(4 + length + charSize);
   SAFE_HEAP_STORE((ptr >> 2) * 4, length >> shift, 4);
   encodeString(value, ptr + 4, length + charSize);
   if (destructors !== null) {
    destructors.push(_free, ptr);
   }
   return ptr;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: function(ptr) {
   _free(ptr);
  }
 });
}

function __embind_register_void(rawType, name) {
 name = readLatin1String(name);
 registerType(rawType, {
  isVoid: true,
  name: name,
  "argPackAdvance": 0,
  "fromWireType": function() {
   return undefined;
  },
  "toWireType": function(destructors, o) {
   return undefined;
  }
 });
}

function requireRegisteredType(rawType, humanName) {
 var impl = registeredTypes[rawType];
 if (undefined === impl) {
  throwBindingError(humanName + " has unknown type " + getTypeName(rawType));
 }
 return impl;
}

function __emval_as(handle, returnType, destructorsRef) {
 handle = Emval.toValue(handle);
 returnType = requireRegisteredType(returnType, "emval::as");
 var destructors = [];
 var rd = Emval.toHandle(destructors);
 SAFE_HEAP_STORE((destructorsRef >> 2) * 4, rd, 4);
 return returnType["toWireType"](destructors, handle);
}

function emval_lookupTypes(argCount, argTypes) {
 var a = new Array(argCount);
 for (var i = 0; i < argCount; ++i) {
  a[i] = requireRegisteredType(SAFE_HEAP_LOAD((argTypes + i * 4 >> 2) * 4, 4, 1), "parameter " + i);
 }
 return a;
}

function __emval_call(handle, argCount, argTypes, argv) {
 handle = Emval.toValue(handle);
 var types = emval_lookupTypes(argCount, argTypes);
 var args = new Array(argCount);
 for (var i = 0; i < argCount; ++i) {
  var type = types[i];
  args[i] = type["readValueFromPointer"](argv);
  argv += type["argPackAdvance"];
 }
 var rv = handle.apply(undefined, args);
 return Emval.toHandle(rv);
}

function emval_allocateDestructors(destructorsRef) {
 var destructors = [];
 SAFE_HEAP_STORE((destructorsRef >> 2) * 4, Emval.toHandle(destructors), 4);
 return destructors;
}

var emval_symbols = {};

function getStringOrSymbol(address) {
 var symbol = emval_symbols[address];
 if (symbol === undefined) {
  return readLatin1String(address);
 }
 return symbol;
}

var emval_methodCallers = [];

function __emval_call_void_method(caller, handle, methodName, args) {
 caller = emval_methodCallers[caller];
 handle = Emval.toValue(handle);
 methodName = getStringOrSymbol(methodName);
 caller(handle, methodName, null, args);
}

function emval_addMethodCaller(caller) {
 var id = emval_methodCallers.length;
 emval_methodCallers.push(caller);
 return id;
}

var emval_registeredMethods = [];

function __emval_get_method_caller(argCount, argTypes) {
 var types = emval_lookupTypes(argCount, argTypes);
 var retType = types[0];
 var signatureName = retType.name + "_$" + types.slice(1).map(function(t) {
  return t.name;
 }).join("_") + "$";
 var returnId = emval_registeredMethods[signatureName];
 if (returnId !== undefined) {
  return returnId;
 }
 var params = [ "retType" ];
 var args = [ retType ];
 var argsList = "";
 for (var i = 0; i < argCount - 1; ++i) {
  argsList += (i !== 0 ? ", " : "") + "arg" + i;
  params.push("argType" + i);
  args.push(types[1 + i]);
 }
 var functionName = makeLegalFunctionName("methodCaller_" + signatureName);
 var functionBody = "return function " + functionName + "(handle, name, destructors, args) {\n";
 var offset = 0;
 for (var i = 0; i < argCount - 1; ++i) {
  functionBody += "    var arg" + i + " = argType" + i + ".readValueFromPointer(args" + (offset ? "+" + offset : "") + ");\n";
  offset += types[i + 1]["argPackAdvance"];
 }
 functionBody += "    var rv = handle[name](" + argsList + ");\n";
 for (var i = 0; i < argCount - 1; ++i) {
  if (types[i + 1]["deleteObject"]) {
   functionBody += "    argType" + i + ".deleteObject(arg" + i + ");\n";
  }
 }
 if (!retType.isVoid) {
  functionBody += "    return retType.toWireType(destructors, rv);\n";
 }
 functionBody += "};\n";
 params.push(functionBody);
 var invokerFunction = new_(Function, params).apply(null, args);
 returnId = emval_addMethodCaller(invokerFunction);
 emval_registeredMethods[signatureName] = returnId;
 return returnId;
}

function __emval_get_property(handle, key) {
 handle = Emval.toValue(handle);
 key = Emval.toValue(key);
 return Emval.toHandle(handle[key]);
}

function __emval_incref(handle) {
 if (handle > 4) {
  emval_handle_array[handle].refcount += 1;
 }
}

function __emval_new_array() {
 return Emval.toHandle([]);
}

function __emval_new_cstring(v) {
 return Emval.toHandle(getStringOrSymbol(v));
}

function __emval_new_object() {
 return Emval.toHandle({});
}

function __emval_run_destructors(handle) {
 var destructors = Emval.toValue(handle);
 runDestructors(destructors);
 __emval_decref(handle);
}

function __emval_set_property(handle, key, value) {
 handle = Emval.toValue(handle);
 key = Emval.toValue(key);
 value = Emval.toValue(value);
 handle[key] = value;
}

function __emval_strictly_equals(first, second) {
 first = Emval.toValue(first);
 second = Emval.toValue(second);
 return first === second;
}

function __emval_take_value(type, arg) {
 type = requireRegisteredType(type, "_emval_take_value");
 var v = type["readValueFromPointer"](arg);
 return Emval.toHandle(v);
}

function __emval_typeof(handle) {
 handle = Emval.toValue(handle);
 return Emval.toHandle(typeof handle);
}

function _abort() {
 abort("");
}

function _emscripten_memcpy_big(dest, src, num) {
 HEAPU8.copyWithin(dest, src, src + num);
}

function getHeapMax() {
 return HEAPU8.length;
}

function abortOnCannotGrowMemory(requestedSize) {
 abort("OOM");
}

function _emscripten_resize_heap(requestedSize) {
 var oldSize = HEAPU8.length;
 requestedSize = requestedSize >>> 0;
 abortOnCannotGrowMemory(requestedSize);
}

function _fd_close(fd) {
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  FS.close(stream);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return e.errno;
 }
}

function doReadv(stream, iov, iovcnt, offset) {
 var ret = 0;
 for (var i = 0; i < iovcnt; i++) {
  var ptr = SAFE_HEAP_LOAD((iov >> 2) * 4, 4, 1);
  var len = SAFE_HEAP_LOAD((iov + 4 >> 2) * 4, 4, 1);
  iov += 8;
  var curr = FS.read(stream, HEAP8, ptr, len, offset);
  if (curr < 0) return -1;
  ret += curr;
  if (curr < len) break;
  if (typeof offset !== "undefined") {
   offset += curr;
  }
 }
 return ret;
}

function _fd_read(fd, iov, iovcnt, pnum) {
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  var num = doReadv(stream, iov, iovcnt);
  SAFE_HEAP_STORE((pnum >> 2) * 4, num, 4);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return e.errno;
 }
}

function convertI32PairToI53Checked(lo, hi) {
 return hi + 2097152 >>> 0 < 4194305 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;
}

function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {
 try {
  var offset = convertI32PairToI53Checked(offset_low, offset_high);
  if (isNaN(offset)) return 61;
  var stream = SYSCALLS.getStreamFromFD(fd);
  FS.llseek(stream, offset, whence);
  tempI64 = [ stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  SAFE_HEAP_STORE((newOffset >> 2) * 4, tempI64[0], 4), SAFE_HEAP_STORE((newOffset + 4 >> 2) * 4, tempI64[1], 4);
  if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return e.errno;
 }
}

function doWritev(stream, iov, iovcnt, offset) {
 var ret = 0;
 for (var i = 0; i < iovcnt; i++) {
  var ptr = SAFE_HEAP_LOAD((iov >> 2) * 4, 4, 1);
  var len = SAFE_HEAP_LOAD((iov + 4 >> 2) * 4, 4, 1);
  iov += 8;
  var curr = FS.write(stream, HEAP8, ptr, len, offset);
  if (curr < 0) return -1;
  ret += curr;
  if (typeof offset !== "undefined") {
   offset += curr;
  }
 }
 return ret;
}

function _fd_write(fd, iov, iovcnt, pnum) {
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  var num = doWritev(stream, iov, iovcnt);
  SAFE_HEAP_STORE((pnum >> 2) * 4, num, 4);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return e.errno;
 }
}

var FSNode = function(parent, name, mode, rdev) {
 if (!parent) {
  parent = this;
 }
 this.parent = parent;
 this.mount = parent.mount;
 this.mounted = null;
 this.id = FS.nextInode++;
 this.name = name;
 this.mode = mode;
 this.node_ops = {};
 this.stream_ops = {};
 this.rdev = rdev;
};

var readMode = 292 | 73;

var writeMode = 146;

Object.defineProperties(FSNode.prototype, {
 read: {
  get: function() {
   return (this.mode & readMode) === readMode;
  },
  set: function(val) {
   val ? this.mode |= readMode : this.mode &= ~readMode;
  }
 },
 write: {
  get: function() {
   return (this.mode & writeMode) === writeMode;
  },
  set: function(val) {
   val ? this.mode |= writeMode : this.mode &= ~writeMode;
  }
 },
 isFolder: {
  get: function() {
   return FS.isDir(this.mode);
  }
 },
 isDevice: {
  get: function() {
   return FS.isChrdev(this.mode);
  }
 }
});

FS.FSNode = FSNode;

FS.staticInit();

Module["FS_createPath"] = FS.createPath;

Module["FS_createDataFile"] = FS.createDataFile;

Module["FS_createPreloadedFile"] = FS.createPreloadedFile;

Module["FS_unlink"] = FS.unlink;

Module["FS_createLazyFile"] = FS.createLazyFile;

Module["FS_createDevice"] = FS.createDevice;

embind_init_charCodes();

BindingError = Module["BindingError"] = extendError(Error, "BindingError");

InternalError = Module["InternalError"] = extendError(Error, "InternalError");

init_ClassHandle();

init_embind();

init_RegisteredPointer();

UnboundTypeError = Module["UnboundTypeError"] = extendError(Error, "UnboundTypeError");

init_emval();

var decodeBase64 = typeof atob == "function" ? atob : function(input) {
 var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
 var output = "";
 var chr1, chr2, chr3;
 var enc1, enc2, enc3, enc4;
 var i = 0;
 input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
 do {
  enc1 = keyStr.indexOf(input.charAt(i++));
  enc2 = keyStr.indexOf(input.charAt(i++));
  enc3 = keyStr.indexOf(input.charAt(i++));
  enc4 = keyStr.indexOf(input.charAt(i++));
  chr1 = enc1 << 2 | enc2 >> 4;
  chr2 = (enc2 & 15) << 4 | enc3 >> 2;
  chr3 = (enc3 & 3) << 6 | enc4;
  output = output + String.fromCharCode(chr1);
  if (enc3 !== 64) {
   output = output + String.fromCharCode(chr2);
  }
  if (enc4 !== 64) {
   output = output + String.fromCharCode(chr3);
  }
 } while (i < input.length);
 return output;
};

function intArrayFromBase64(s) {
 if (typeof ENVIRONMENT_IS_NODE == "boolean" && ENVIRONMENT_IS_NODE) {
  var buf = Buffer.from(s, "base64");
  return new Uint8Array(buf["buffer"], buf["byteOffset"], buf["byteLength"]);
 }
 try {
  var decoded = decodeBase64(s);
  var bytes = new Uint8Array(decoded.length);
  for (var i = 0; i < decoded.length; ++i) {
   bytes[i] = decoded.charCodeAt(i);
  }
  return bytes;
 } catch (_) {
  throw new Error("Converting base64 string to bytes failed.");
 }
}

function tryParseAsDataURI(filename) {
 if (!isDataURI(filename)) {
  return;
 }
 return intArrayFromBase64(filename.slice(dataURIPrefix.length));
}

var wasmImports = {
 "__cxa_throw": ___cxa_throw,
 "__syscall_fcntl64": ___syscall_fcntl64,
 "__syscall_ioctl": ___syscall_ioctl,
 "__syscall_openat": ___syscall_openat,
 "_embind_register_bigint": __embind_register_bigint,
 "_embind_register_bool": __embind_register_bool,
 "_embind_register_class": __embind_register_class,
 "_embind_register_class_constructor": __embind_register_class_constructor,
 "_embind_register_class_function": __embind_register_class_function,
 "_embind_register_class_property": __embind_register_class_property,
 "_embind_register_constant": __embind_register_constant,
 "_embind_register_emval": __embind_register_emval,
 "_embind_register_float": __embind_register_float,
 "_embind_register_function": __embind_register_function,
 "_embind_register_integer": __embind_register_integer,
 "_embind_register_memory_view": __embind_register_memory_view,
 "_embind_register_std_string": __embind_register_std_string,
 "_embind_register_std_wstring": __embind_register_std_wstring,
 "_embind_register_void": __embind_register_void,
 "_emval_as": __emval_as,
 "_emval_call": __emval_call,
 "_emval_call_void_method": __emval_call_void_method,
 "_emval_decref": __emval_decref,
 "_emval_get_method_caller": __emval_get_method_caller,
 "_emval_get_property": __emval_get_property,
 "_emval_incref": __emval_incref,
 "_emval_new_array": __emval_new_array,
 "_emval_new_cstring": __emval_new_cstring,
 "_emval_new_object": __emval_new_object,
 "_emval_run_destructors": __emval_run_destructors,
 "_emval_set_property": __emval_set_property,
 "_emval_strictly_equals": __emval_strictly_equals,
 "_emval_take_value": __emval_take_value,
 "_emval_typeof": __emval_typeof,
 "abort": _abort,
 "alignfault": alignfault,
 "emscripten_memcpy_big": _emscripten_memcpy_big,
 "emscripten_resize_heap": _emscripten_resize_heap,
 "fd_close": _fd_close,
 "fd_read": _fd_read,
 "fd_seek": _fd_seek,
 "fd_write": _fd_write,
 "memory": wasmMemory,
 "segfault": segfault
};

var asm = createWasm();

var ___wasm_call_ctors = function() {
 return (___wasm_call_ctors = Module["asm"]["__wasm_call_ctors"]).apply(null, arguments);
};

var _malloc = function() {
 return (_malloc = Module["asm"]["malloc"]).apply(null, arguments);
};

var _free = function() {
 return (_free = Module["asm"]["free"]).apply(null, arguments);
};

var ___getTypeName = Module["___getTypeName"] = function() {
 return (___getTypeName = Module["___getTypeName"] = Module["asm"]["__getTypeName"]).apply(null, arguments);
};

var __embind_initialize_bindings = Module["__embind_initialize_bindings"] = function() {
 return (__embind_initialize_bindings = Module["__embind_initialize_bindings"] = Module["asm"]["_embind_initialize_bindings"]).apply(null, arguments);
};

var ___errno_location = function() {
 return (___errno_location = Module["asm"]["__errno_location"]).apply(null, arguments);
};

var _sbrk = function() {
 return (_sbrk = Module["asm"]["sbrk"]).apply(null, arguments);
};

var _emscripten_get_sbrk_ptr = function() {
 return (_emscripten_get_sbrk_ptr = Module["asm"]["emscripten_get_sbrk_ptr"]).apply(null, arguments);
};

var setTempRet0 = function() {
 return (setTempRet0 = Module["asm"]["setTempRet0"]).apply(null, arguments);
};

var getTempRet0 = function() {
 return (getTempRet0 = Module["asm"]["getTempRet0"]).apply(null, arguments);
};

var _emscripten_stack_get_base = function() {
 return (_emscripten_stack_get_base = Module["asm"]["emscripten_stack_get_base"]).apply(null, arguments);
};

var stackSave = function() {
 return (stackSave = Module["asm"]["stackSave"]).apply(null, arguments);
};

var stackRestore = function() {
 return (stackRestore = Module["asm"]["stackRestore"]).apply(null, arguments);
};

var stackAlloc = function() {
 return (stackAlloc = Module["asm"]["stackAlloc"]).apply(null, arguments);
};

var ___cxa_is_pointer_type = function() {
 return (___cxa_is_pointer_type = Module["asm"]["__cxa_is_pointer_type"]).apply(null, arguments);
};

var dynCall_jiji = Module["dynCall_jiji"] = function() {
 return (dynCall_jiji = Module["dynCall_jiji"] = Module["asm"]["dynCall_jiji"]).apply(null, arguments);
};

Module["addRunDependency"] = addRunDependency;

Module["removeRunDependency"] = removeRunDependency;

Module["FS_createPath"] = FS.createPath;

Module["FS_createDataFile"] = FS.createDataFile;

Module["FS_createPreloadedFile"] = FS.createPreloadedFile;

Module["FS_createLazyFile"] = FS.createLazyFile;

Module["FS_createDevice"] = FS.createDevice;

Module["FS_unlink"] = FS.unlink;

var calledRun;

dependenciesFulfilled = function runCaller() {
 if (!calledRun) run();
 if (!calledRun) dependenciesFulfilled = runCaller;
};

function run() {
 if (runDependencies > 0) {
  return;
 }
 preRun();
 if (runDependencies > 0) {
  return;
 }
 function doRun() {
  if (calledRun) return;
  calledRun = true;
  Module["calledRun"] = true;
  if (ABORT) return;
  initRuntime();
  readyPromiseResolve(Module);
  if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
  postRun();
 }
 if (Module["setStatus"]) {
  Module["setStatus"]("Running...");
  setTimeout(function() {
   setTimeout(function() {
    Module["setStatus"]("");
   }, 1);
   doRun();
  }, 1);
 } else {
  doRun();
 }
}

if (Module["preInit"]) {
 if (typeof Module["preInit"] == "function") Module["preInit"] = [ Module["preInit"] ];
 while (Module["preInit"].length > 0) {
  Module["preInit"].pop()();
 }
}

run();


  return Module.ready
}

);
})();
if (typeof exports === 'object' && typeof module === 'object')
  module.exports = Module;
else if (typeof define === 'function' && define['amd'])
  define([], function() { return Module; });
else if (typeof exports === 'object')
  exports["Module"] = Module;
